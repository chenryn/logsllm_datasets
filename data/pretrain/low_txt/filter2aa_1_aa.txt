# Table of Contents

## Front Matter
- **Cover**
- **Title Page**
- **Copyright**
- **About the Author**
- **Foreword**
- **Introduction**

### Introduction Sections
- **Who This Book Is For**
- **What Is In This Book**
- **Happy Hacking!**

## Part I: The Industry
### Chapter 1: Picking a Bug Bounty Program
- **The State of the Industry**
- **Asset Types**
  - Social Sites and Applications
  - General Web Applications
  - Mobile Applications (Android, iOS, and Windows)
  - APIs
  - Source Code and Executables
  - Hardware and IoT
- **Bug Bounty Platforms**
  - The Pros
  - The Cons
- **Scope, Payouts, and Response Times**
  - Program Scope
  - Payout Amounts
  - Response Time
- **Private Programs**
- **Choosing the Right Program**
  - A Quick Comparison of Popular Programs

### Chapter 2: Sustaining Your Success
- **Writing a Good Report**
  - Step 1: Craft a Descriptive Title
  - Step 2: Provide a Clear Summary
  - Step 3: Include a Severity Assessment
  - Step 4: Give Clear Steps to Reproduce
  - Step 5: Provide a Proof of Concept
  - Step 6: Describe the Impact and Attack Scenarios
  - Step 7: Recommend Possible Mitigations
  - Step 8: Validate the Report
- **Additional Tips for Writing Better Reports**
- **Building a Relationship with the Development Team**
- **Understanding Report States**
- **Dealing with Conflict**
- **Building a Partnership**
- **Understanding Why You’re Failing**
  - Why You’re Not Finding Bugs
  - Why Your Reports Get Dismissed
  - What to Do When You’re Stuck
    - Step 1: Take a Break!
    - Step 2: Build Your Skill Set
    - Step 3: Gain a Fresh Perspective
- **Lastly, a Few Words of Experience**

## Part II: Getting Started
### Chapter 3: How the Internet Works
- **The Client-Server Model**
- **The Domain Name System**
- **Internet Ports**
- **HTTP Requests and Responses**
- **Internet Security Controls**
- **Content Encoding**
- **Session Management and HTTP Cookies**
- **Token-Based Authentication**
- **JSON Web Tokens**
- **The Same-Origin Policy**
- **Learn to Program**

### Chapter 4: Environmental Setup and Traffic Interception
- **Choosing an Operating System**
- **Setting Up the Essentials: A Browser and a Proxy**
  - Opening the Embedded Browser
  - Setting Up Firefox
  - Setting Up Burp
- **Using Burp**
  - The Proxy
  - The Intruder
  - The Repeater
  - The Decoder
  - The Comparer
  - Saving Burp Requests
- **A Final Note on . . . Taking Notes**

### Chapter 5: Web Hacking Reconnaissance
- **Manually Walking Through the Target**
- **Google Dorking**
- **Scope Discovery**
  - WHOIS and Reverse WHOIS
  - IP Addresses
  - Certificate Parsing
  - Subdomain Enumeration
  - Service Enumeration
  - Directory Brute-Forcing
  - Spidering the Site
  - Third-Party Hosting
  - GitHub Recon
  - Other Sneaky OSINT Techniques
- **Tech Stack Fingerprinting**
- **Writing Your Own Recon Scripts**
  - Understanding Bash Scripting Basics
  - Saving Tool Output to a File
  - Adding the Date of the Scan to the Output
  - Adding Options to Choose the Tools to Run
  - Running Additional Tools
  - Parsing the Results
  - Building a Master Report
  - Scanning Multiple Domains
  - Writing a Function Library
  - Building Interactive Programs
  - Using Special Variables and Characters
  - Scheduling Automatic Scans
- **A Note on Recon APIs**
- **Start Hacking!**
- **Tools Mentioned in This Chapter**
  - Scope Discovery
  - OSINT
  - Tech Stack Fingerprinting
  - Automation

## Part III: Web Vulnerabilities
### Chapter 6: Cross-Site Scripting (XSS)
- **Mechanisms**
- **Types of XSS**
  - Stored XSS
  - Blind XSS
  - Reflected XSS
  - DOM-Based XSS
  - Self-XSS
- **Prevention**
- **Hunting for XSS**
  - Step 1: Look for Input Opportunities
  - Step 2: Insert Payloads
  - Step 3: Confirm the Impact
- **Bypassing XSS Protection**
  - Alternative JavaScript Syntax
  - Capitalization and Encoding
  - Filter Logic Errors
- **Escalating the Attack**
- **Automating XSS Hunting**
- **Finding Your First XSS!**

### Chapter 7: Open Redirects
- **Mechanisms**
- **Prevention**
- **Hunting for Open Redirects**
  - Step 1: Look for Redirect Parameters
  - Step 2: Use Google Dorks to Find Additional Redirect Parameters
  - Step 3: Test for Parameter-Based Open Redirects
  - Step 4: Test for Referer-Based Open Redirects
- **Bypassing Open-Redirect Protection**
  - Using Browser Autocorrect
  - Exploiting Flawed Validator Logic
  - Using Data URLs
  - Exploiting URL Decoding
  - Combining Exploit Techniques
- **Escalating the Attack**
- **Finding Your First Open Redirect!**

### Chapter 8: Clickjacking
- **Mechanisms**
- **Prevention**
- **Hunting for Clickjacking**
  - Step 1: Look for State-Changing Actions
  - Step 2: Check the Response Headers
  - Step 3: Confirm the Vulnerability
- **Bypassing Protections**
- **Escalating the Attack**
- **A Note on Delivering the Clickjacking Payload**
- **Finding Your First Clickjacking Vulnerability!**

### Chapter 9: Cross-Site Request Forgery (CSRF)
- **Mechanisms**
- **Prevention**
- **Hunting for CSRFs**
  - Step 1: Spot State-Changing Actions
  - Step 2: Look for a Lack of CSRF Protections
  - Step 3: Confirm the Vulnerability
- **Bypassing CSRF Protection**
  - Exploit Clickjacking
  - Change the Request Method
  - Bypass CSRF Tokens Stored on the Server
  - Bypass Double-Submit CSRF Tokens
  - Bypass CSRF Referer Header Check
  - Bypass CSRF Protection by Using XSS
- **Escalating the Attack**
  - Leak User Information by Using CSRF
  - Create Stored Self-XSS by Using CSRF
  - Take Over User Accounts by Using CSRF
- **Delivering the CSRF Payload**
- **Finding Your First CSRF!**

### Chapter 10: Insecure Direct Object References (IDOR)
- **Mechanisms**
- **Prevention**
- **Hunting for IDORs**
  - Step 1: Create Two Accounts
  - Step 2: Discover Features
  - Step 3: Capture Requests
  - Step 4: Change the IDs
- **Bypassing IDOR Protection**
  - Encoded IDs and Hashed IDs
  - Leaked IDs