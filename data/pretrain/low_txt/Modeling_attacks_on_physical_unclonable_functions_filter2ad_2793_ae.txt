# 7. RING OSCILLATOR PUFs

## 7.1 Possible Attacks

Several strategies can be employed to attack a Ring Oscillator (RO) PUF. The most straightforward approach is to read out all Challenge-Response Pairs (CRPs). Given \( k \) ring oscillators, there are \( \frac{k(k - 1)}{2} = O(k^2) \) CRPs of interest, making this method relatively easy.

If an attacker, Eve, can choose the CRPs adaptively, she can use a standard sorting algorithm to sort the RO-PUF's frequencies \( (f_1, f_2, \ldots, f_k) \) in ascending order. This strategy allows her to predict all outputs with 100% correctness without knowing the exact frequencies \( f_i \). The time and CRP complexities of such sorting algorithms are well-known [27]. For example, several algorithms have average- and even worst-case CRP complexity of \( N_{\text{CRP}} = O(k \cdot \log k) \), with running times that are low-degree polynomials.

A more interesting scenario is when Eve cannot adaptively choose the CRPs but still aims for optimal prediction rates. This situation often occurs in practice, such as when Eve obtains CRPs through protocol eavesdropping. We conducted experiments using Quick Sort (QS) on randomly drawn CRPs, and the results are summarized in Table 8. The estimated number of required CRPs is given by:

\[ N_{\text{CRP}} \approx \frac{k(k - 1)(1 - 2c)}{2} + c(k - 1) \]

where \( 0 < c < 1 \) is a constant. The training times are also low-degree polynomials. Equation (19) quantifies the limited-count authentication capabilities of RO-PUFs.

## 8. SUMMARY AND DISCUSSION

### Summary
We investigated the resilience of currently published electrical Strong PUFs against modeling attacks by applying various machine learning techniques to challenge-response data generated pseudo-randomly via an additive delay model. Our main results are summarized in Table 9.

We found that all examined Strong PUF candidates under a given size could be machine-learned with success rates above their in-silicon stability. The number of required CRPs grows only linearly or log-linearly with the internal parameters of the PUFs, such as the number of stages, XORs, feed-forward loops, or ring oscillators. Except for XOR Arbiter PUFs and Lightweight PUFs (whose training times grow quasi-exponentially with the number of XORs for large bit lengths \( k \) and small to medium numbers of XORs \( l \)), the training times of the applied machine learning algorithms are low-degree polynomials.

Experiments with silicon implementations [17, 28] have shown that the additive delay model achieves very high accuracy. Our approach is robust against random errors in the CRP data and measurement noise, suggesting it will transfer to cases where CRP data is collected from silicon PUF chips. Our results prohibit the use of the broken architectures as Strong PUFs or in Strong-PUF-based protocols. Under the assumption that digital signals can be probed, they also affect the applicability of the cryptanalyzed PUFs as building blocks in Controlled PUFs and Weak PUFs.

### Discussion
Two straightforward but biased interpretations of our results are:
(i) All Strong PUFs are insecure.
(ii) The long-term security of electrical Strong PUFs can be restored trivially, for example, by increasing the PUF's size. Both views are simplistic, and the truth is more nuanced.

Regarding (i), our current attacks are indeed sufficient to break most implemented PUFs. However, PUF designers can fight back in future implementations. Increasing the bit length \( k \) in an XOR Arbiter PUF or Lightweight Secure PUF with \( l \) XORs increases the effort of the presented attack methods as a polynomial function of \( k \) with exponent \( l \) (for large \( k \) and small or medium \( l \)). At the same time, it does not worsen the PUF's stability [28]. For now, one could disable attacks by choosing a strongly increased value of \( k \) and a value of \( l \) that corresponds to the stability limit of such a construction. For example, an XOR Arbiter PUF with 8 XORs and a bit length of 512 is implementable by standard fabrication processes [28], but is currently beyond the reach of our attacks. Similar considerations hold for Lightweight PUFs of these sizes.

New design elements may further increase the attacker's complexity, such as adding nonlinearity (e.g., AND and OR gates corresponding to MAX and MIN operators [17]). Combinations of Feed-Forward and XOR architectures could also be hard to machine learn, partly because they seem susceptible only to different and mutually-exclusive ML techniques.

Moving away from delay-based PUFs, the exploitation of dynamic characteristics of current and voltage in analog circuits [29] seems promising. Special PUFs with very high information content (SHIC PUFs [30, 31, 32]) could be an option, but only in applications where their slow read-out speed and large area consumption are not significant drawbacks. Their promise lies in being naturally immune to modeling attacks, as all their CRPs are information-theoretically independent. Finally, optical Strong PUFs, such as systems based on light scattering and interference phenomena [1], show strong potential in creating high input-output complexity.

Regarding (ii), PUFs differ from classical cryptosystems like RSA in that increasing their size often decreases their input-output stability. For example, raising the number of XORs in an XOR Arbiter PUF has an exponentially strong effect on both the attacker's complexity and the instability of the PUF. We have yet to find parameters that increase the attacker's effort exponentially while affecting the PUF's stability merely polynomially. Nevertheless, a practical possibility is to increase the bit length of XOR Arbiter PUFs, as discussed above. Future work will determine whether the described large polynomial growth can persist in the long term or whether its high degree can be diminished by further analysis.

### Future Work
The upcoming years will likely see intense competition between codemakers and codebreakers in the area of Strong PUFs. Similar to the design of classical cryptographic primitives, this process may converge to solutions resilient against known attacks.

For PUF designers, it may be interesting to investigate some of the concepts mentioned above. For PUF breakers, a worthwhile starting point is to improve the attacks presented in this paper through optimized implementations and new ML methods. Another, qualitatively new path is to combine modeling attacks with information obtained from direct physical PUF measurements or side channels. Applying the same challenge multiple times gives an indication of the noise level of a response bit, enabling conclusions about the absolute value of the final runtime difference in the PUF. Such side channel information can conceivably improve the success and convergence rates of ML methods, though we have not exploited this in this paper.

## Acknowledgements
This work was partly supported by the Physical Cryptography Project of the Technische Universität München.

## 9. REFERENCES
[1] R. Pappu, B. Recht, J. Taylor, and N. Gershenfeld. Physical one-way functions. Science, 297(5589):2026, 2002.
[2] B. Gassend, D. Clarke, M. Van Dijk, and S. Devadas. Silicon physical random functions. In Proceedings of the 9th ACM Conference on Computer and Communications Security, page 160. ACM, 2002.
[3] Blaise Gassend, Dwaine Clarke, Marten van Dijk, and Srinivas Devadas. Controlled physical random functions. In Proceedings of 18th Annual Computer Security Applications Conference, Silver Spring, MD, December 2002.
[4] J. Guajardo, S. Kumar, G.J. Schrijen, and P. Tuyls. FPGA intrinsic PUFs and their use for IP protection. Cryptographic Hardware and Embedded Systems-CHES 2007, pages 63–80, 2007.
[5] B.L.P. Gassend. Physical random functions. Msc thesis, MIT, 2003.
[6] R. Pappu. Physical One-Way Functions. Phd thesis, MIT, 2001.
[7] P. Tuyls and B. Skoric. Strong Authentication with PUFs. In: Security, Privacy and Trust in Modern Data Management, M. Petkovic, W. Jonker (Eds.), Springer, 2007.
[8] Ulrich Rührmair. Oblivious transfer based on physical unclonable functions (extended abstract). In Workshop on Cryptographic Hardware and Embedded Systems (CHES 2009), September 2009.
[9] G.E. Suh and S. Devadas. Physical unclonable functions for device authentication and secret key generation. Proceedings of the 44th annual Design Automation Conference, page 14, 2007.
[10] M. Majzoobi, F. Koushanfar, and M. Potkonjak. Lightweight secure pufs. In Proceedings of the 2008 IEEE/ACM International Conference on Computer-Aided Design, pages 670–673. IEEE Press, 2008.
[11] B. Gassend, D. Lim, D. Clarke, M. Van Dijk, and S. Devadas. Identification and authentication of integrated circuits. Concurrency and Computation: Practice & Experience, 16(11):1077–1098, 2004.
[12] J.W. Lee, D. Lim, B. Gassend, G.E. Suh, M. Van Dijk, and S. Devadas. A technique to build a secret key in integrated circuits for identification and authentication applications. In Proceedings of the IEEE VLSI Circuits Symposium, pages 176–179, 2004.
[13] D. Lim, J.W. Lee, B. Gassend, G.E. Suh, M. Van Dijk, and S. Devadas. Extracting secret keys from integrated circuits. IEEE Transactions on Very Large Scale Integration Systems, 13(10):1200, 2005.
[14] Daniel E. Holcomb, Wayne P. Burleson, and Kevin Fu. Initial SRAM state as a fingerprint and source of true random numbers for RFID tags. In In Proceedings of the Conference on RFID Security, 2007.
[15] S.S. Kumar, J. Guajardo, R. Maes, G.J. Schrijen, and P. Tuyls. Extended abstract: The butterfly PUF protecting IP on every FPGA. In IEEE International Workshop on Hardware-Oriented Security and Trust, 2008. HOST 2008, pages 67–70, 2008.
[16] P. Tuyls, G.J. Schrijen, B. Škorić, J. van Geloven, N. Verhaegh, and R. Wolters. Read-proof hardware from protective coatings. Cryptographic Hardware and Embedded Systems-CHES 2006, pages 369–383, 2006.
[17] Daihyun Lim. Extracting Secret Keys from Integrated Circuits. Msc thesis, MIT, 2004.
[18] Erdinç Öztürk, Ghaith Hammouri, and Berk Sunar. Towards robust low cost authentication for pervasive devices. In PerCom, pages 170–178. IEEE Computer Society, 2008.
[19] M. Majzoobi, F. Koushanfar, and M. Potkonjak. Testing techniques for hardware security. In Proceedings of the International Test Conference (ITC), pages 1–10, 2008.
[20] Jan Sölter. Cryptanalysis of Electrical PUFs via Machine Learning Algorithms. Msc thesis, Technische Universität München, 2009.
[21] C.M. Bishop et al. Pattern recognition and machine learning. Springer New York:, 2006.
[22] M. Riedmiller and H. Braun. A direct adaptive method for faster backpropagation learning: The RPROP algorithm. In Proceedings of the IEEE international conference on neural networks, volume 1993, pages 586–591. San Francisco: IEEE, 1993.
[23] http://www.pcp.in.tum.de/code/lr.zip, 2010.
[24] T. Bäck. Evolutionary algorithms in theory and practice: evolution strategies, evolutionary programming, genetic algorithms. Oxford University Press, USA, 1996.
[25] H.P.P. Schwefel. Evolution and Optimum Seeking: The Sixth Generation. John Wiley & Sons, Inc. New York, NY, USA, 1993.
[26] T. Schaul, J. Bayer, D. Wierstra, Y. Sun, M. Felder, F. Sehnke, T. Rückstieß, and J. Schmidhuber. PyBrain. Journal of Machine Learning Research, 1:999–1000, 2010.
[27] C.H. Papadimitriou. Computational complexity. John Wiley and Sons Ltd., 2003.
[28] S. Devadas. Physical unclonable functions and secure processors. In Workshop on Cryptographic Hardware and Embedded Systems (CHES 2009), September 2009.
[29] G. Csaba, X. Ju, Z. Ma, Q. Chen, W. Porod, J. Schmidhuber, U. Schlichtmann, P. Lugli, and U. Rührmair. Application of mismatched cellular nonlinear networks for physical cryptography. In 12th IEEE CNNA - International Workshop on Cellular Nanoscale Networks and their Applications. Berkeley, CA, USA, February 3 - 5 2010.
[30] U. Rührmair, C. Jaeger, M. Bator, M. Stutzmann, P. Lugli, and G. Csaba. Applications of high-capacity crossbar memories in cryptography. To appear in IEEE Transactions on Nanotechnology, 2010.
[31] U. Rührmair, C. Jaeger, C. Hilgers, M. Algasinger, G. Csaba, and M. Stutzmann. Security applications of diodes with unique current-voltage characteristics. In Lecture Notes in Computer Science, volume 6052, Tenerife (Spain), January 25 - 28 2010. 14th International Conference on Financial Cryptography and Data Security, Springer.
[32] C. Jaeger, M. Algasinger, U. Rührmair, G. Csaba, and M. Stutzmann. Random p-n-junctions for physical cryptography. Applied Physics Letters, 96(172103), 2010.