### Purpose and Comparison with StraySheep

TrueClick shares a similar purpose with StraySheep, aiming to identify HTML elements that are designed to deceive users and direct them to malicious sites or malware executables. However, TrueClick specifically targets elements displayed by advertising providers, regardless of the website owner's intentions.

### Re-implementation of TrueClick

Since the source code for TrueClick has not been made public, we re-implemented it based on the implementation details provided in the paper [13]. We used a manually collected dataset consisting of 87 trick banners and 51 genuine banners, which is comparable to the original dataset (165 trick banners and 94 genuine download links). This dataset was used to train a machine learning model, which achieved 98.6% accuracy in identifying trick banners. We then created a baseline crawling module by replacing StraySheep’s selecting component (Section 3.2.1) with our TrueClick implementation.

### Comparative Analysis

To compare the performance of both tools under the same experimental conditions, we collected 5,000 URLs in the same manner as described in Section 4.4 and crawled them using both StraySheep’s web-crawling module and the baseline module as of November 2019. The results are summarized in Table 5. StraySheep visited more social engineering (SE) pages than TrueClick because it follows not only trick banners but also buttons and links intentionally placed by website owners to lead to SE attacks. While StraySheep successfully downloaded 266 malware samples, TrueClick downloaded only one. This discrepancy is due to the fact that genuine download links often distribute malware samples rather than trick banners on web pages redirected from the initial trick banner on landing pages. Table 6 shows the number of unique SE pages observed at each depth. Similar to the results in Table 11, StraySheep reached more SE attacks as it crawled deeper. Conversely, the number of SE pages that TrueClick reached decreased significantly beyond depth three, as the number of trick banners decreases with deeper crawling. Additionally, intentionally placed lure elements, including genuine download links, primarily lead to SE attacks at deeper depths. Figure 6 illustrates the overlap of SE page domain names observed using each crawler. Although StraySheep did not visit a small number of SE pages dynamically served by ads, it covered most of the SE pages observed by TrueClick. In summary, to collect more multi-step SE attacks, it is necessary to detect trick banners and follow lure elements.

### Evaluation of the SE Detection Module

We evaluated the effectiveness of StraySheep’s SE-detection module using WebTrees, which are the outputs of StraySheep’s web-crawling module. We used 30,000 WebTrees constructed from the results of web crawling starting from 30,000 landing pages. These WebTrees consisted of 10,000 landing pages crawled by StraySheep’s web-crawling module (Section 4.4) and an additional 20,000 landing pages. The 20,000 landing pages were collected and randomly sampled in the same manner as the 10,000 landing pages mentioned in Section 4.3. The web crawling was conducted in the same environment and period to generate the additional 20,000 WebTrees.

To create datasets for evaluation, we extracted malicious and benign sequences from the 30,000 WebTrees. The 30,000 WebTrees contained a total of 243,914 unique web pages (13,415 unique domains). To label these web pages as SE pages, we used blacklists (same as in Sections 4.3 and 4.4) and VirusTotal. We labeled 51,501 unique web pages (1,066 unique domains) as SE pages and extracted 1,066 sequences, which reached 1,066 different domain names from distinct landing pages. We excluded unreachable or parking domain pages and created 1,045 sequences as the malicious dataset. To create a benign dataset, we randomly sampled 1,045 sequences that did not visit SE pages.

To evaluate the detection accuracy of the SE-detection module, we conducted a 10-fold cross-validation (CV) on the labeled dataset. The SE-detection module classified our dataset with a precision of 97.4%, recall of 93.5%, and accuracy of 95.5%. When we changed the learning algorithm from random forest to support vector machine, logistic regression, and decision tree, their accuracies were 93.6%, 90.8%, and 90.7%, respectively. The feature importance accounted for 65.2% of features extracted from the last page (last page features), 28.2% of features extracted from the previous page (previous page features), and 6.6% of features extracted from the entire sequence (sequence features), as shown in Table 10.

To show the relationship between detection accuracy and features, we divided the features into four sets: last page, previous page, sequence, and the combination of last and previous page (feature sets without our proposed sequence features). We conducted 10-fold CVs using all feature sets and four divided feature sets with the same dataset discussed in Section 4.5. Figure 7 shows the receiver operating characteristic (ROC) curves for the classification results. The most accurate result was the CV using all features, followed by the combination of last and previous page, last page, sequence, and previous page feature sets. The area under the curve (AUC) for each result was 0.965, 0.955, 0.948, 0.923, and 0.829, respectively. This experiment revealed that our original page-level features, which analyzed linguistic, image, and HTML characteristics, were useful in detecting various types of SE attacks. However, combining the features of the previous page and sequence improved the classification accuracy.

### Detailed Analysis of Detected Multi-Step SE Attacks

We conducted a detailed analysis of the collected multi-step SE attacks mentioned in Section 4. To demonstrate that StraySheep found a wide variety of SE attacks, we categorized the observed SE page domain names and investigated the attacker techniques used to deceive and persuade users for each SE attack category. We then analyzed the browser interactions and advertising providers leading to SE pages to clarify the cause of SE attacks. Finally, we investigated the network infrastructures hosting SE attacks.

#### Detected Sequences and Domain Names

As explained in Section 4, there are suspicious web pages that have similar appearances to known SE pages. To find such SE pages, we leveraged the SE-detection module to classify the remaining 192,620 sequences of 11,304 domain names not used in the evaluation (Section 4.5). After manually excluding false positives (27 domains) from the classification results, we found 359 domain names as SE attacks. This process involved analyzing screenshots to check whether suggested software, extensions, or login pages were associated with legitimate services. Examples of false positives included a Facebook login page opened by a popup redirected from an illegal software-download blog and a download page of legitimate anti-virus products transferred by clicking an advertisement in an iframe. We analyzed a total of 1,404 unique domain names (the 1,045 domain names mentioned in Section 4 and the newly detected 359 domain names).

#### SE Attack Categories

To clarify the types of multi-step SE attacks detected by StraySheep, we categorized the 1,404 domain names into 11 categories, as shown in Table 7. We used labels from blacklists (Google Safe Browsing, Symantec DeepSight, hpHosts) and virus scan results from VirusTotal to categorize the attacks. We also used AVClass [28] to classify detected binaries as potentially unwanted programs (PUPs) or malware. We checked the appearance of these domain names’ web pages to complement the categorization.

**PUP and Malware**: The most common categories we identified were PUP (566 domain names) and malware (310 domain names). These categories involve SE attacks where PUPs and malware were downloaded due to browser interactions. StraySheep downloaded 6,924 unique binary executable files (e.g., .exe or .dmg). For example, these binaries were disguised as fake game installers, fake anti-virus software, and fake Java/Flash updaters. Out of the 6,924 binaries, we detected 1,591 unique binaries, including 1,090 malware samples and 501 PUPs, by checking their MD5 hash in VirusTotal and using AVClass. We confirmed that 3,336 unique binaries were never uploaded to VirusTotal. Although the remaining 1,997 unique binaries were already uploaded, they were not detected by any anti-virus software in VirusTotal.

The 2,141 out of the 3,336 binaries that were not uploaded had 1,347 unique filenames, which were automatically set according to the previous page (e.g., “[the title of the previous page].exe.rename”). The web pages that downloaded these binaries contained instructions to entice users to remove “.rename” and execute them. We found 504 unique domain names downloading these binaries. Out of these 504 domain names, 175 matched the blacklists, and the other 329 domain names were newly detected by StraySheep. The reason for making users change the file extension is to circumvent the download-protection function of web browsers. Since the hash values of these binaries also changed at every download, none were ever uploaded to VirusTotal. To check whether these binaries were malicious, we chose ten samples from the binaries and uploaded them to VirusTotal. All ten samples were detected as “StartSurf” or “Prepscram” family names.

**Unwanted Browser Extension**: We categorized 181 domain names as distributing unwanted browser extensions. We confirmed that these domain names were detected as “Fake Browser Extension Download” or “Unwanted Extension,” leading to install pages (https://chrome.google.com/webstore) of 128 unique Google Chrome browser extensions. However, we found that 119 (93.0%) extensions were still available on the browser extension install pages a month after the crawling. By investigating these browser extensions, we found that 18 (14.1%) extensions were search toolbars and 14 (10.9%) were file converters. Security vendor blog postings and online forums stated that some extensions were malicious or browser hijackers that modify web browser settings, track user browsing, and inject unwanted advertisements [10]. As a result of our dynamic analysis of some browser extensions using a real browser, we observed suspicious behavior such as displaying popup advertisements and changing the default browser’s homepage and search engine to web pages hard-coded in many malware samples. To determine the popularity of these browser extensions, we searched each extension name on a search engine. We found that the search results of 100 extensions (78.1%) consisted of one or more web pages explaining “How to remove [browser extension name]” or “Virus removal guide.” Surprisingly, most of these web pages introduced not only removal methods but also suggested more fake removal tools, which were detected as PUPs or malware. Attackers prepared these web pages to trick technically unsophisticated users who disrupt these browser extensions. Thus, even if the users successfully remove the unwanted browser extensions, they may become victims of other SE attacks. StraySheep’s SE-detection module newly found 21 domain names out of the 181 domain names we categorized. StraySheep successfully finds unwanted browser extensions by analyzing distribution web pages and sequences leading to them instead of analyzing their source codes and behaviors.

**Multimedia Scam**: We found web pages (94 domain names) that ask for credit card registration in exchange for offering free access to movies or music. Their content, such as input forms, logos, and background images, were shared among each other. We call them multimedia scams in this paper. Only 27.7% (26/94) of domain names were listed in blacklists; however, StraySheep’s SE-detection module newly found 72.3% (68/94) domain names. Some security vendor blog postings and online forums reported that these web pages fraudulently charge credit cards [8]. We found that some words (e.g., media, play, and book) were frequently used in the domain names, such as etnamedia.net, kelpmedia.com, dewymedia.com, parryplay.com, cnidaplay.com, and mossyplay.com.

**Phishing**: We observed 94 domain names detected as phishing, attempting to steal user’s sensitive information such as email addresses or passwords.

**Survey Scam**: We found 25 survey scam domain names, which spoofed famous companies and promised rewards such as iPhones and gift cards. Although Surveylance [17] only identified landing pages that have survey content and interacted with them to reach survey scams, StraySheep recursively followed lure elements to detect survey scams reached from landing pages that did not have survey content.

**Tech Support Scam**: We observed 20 tech support scam domain names that displayed fake virus-infection messages and telephone numbers of support centers to urge users to call. StraySheep reached the scams from sequences of web pages starting from the search engine’s results and social media postings, which are not observed with other systems [23, 29].

**Fake Browser History Injection**: We found 16 Fake browser history injection attack domain names, which injected URLs into the browser’s history to force users to redirect to another SE page when the browser’s back button is clicked. To interact with such attacks, StraySheep attempted clicking the back button for each web page and determined that the action led to other SE pages.

**Malvertisement Redirection**: We found 13 Malvertisement website redirect domains [20, 38] that also led users to other SE pages.

**Cryptojacking**: We found three Cryptojacking domain names that secretly used user’s CPU resources to mine cryptocurrencies by injecting JavaScript codes.

**Other SE Attacks**: We observed various SE attacks other than those mentioned above, e.g., simply detected the “Social engineering” label.

### Common Infrastructures of Multi-Step SE Attacks

To clarify the common infrastructures of multi-step SE attacks and attacker’s techniques leading to the attacks, we analyzed the 56,922 sequences (see Section 5) that led to SE pages.

**SE Attacks Caused by Unintended Clicks**: We observed the opening of popup/popunder windows caused by unintended clicks, such as clicking anywhere on a web page and on the browser’s back button. Such popups are often set by JavaScript codes provided by advertising providers to the web page’s owner. The following three files are the most frequently loaded on web pages leading users to SE pages: “c1.popads[.]net/pop.js”, “cdn.popcash[.]net/pop.js”, and “cdn.cpmstar[.]com/cached/jspopunder_v101.pack.js”. Since such advertisements are common infrastructures for SE attack distribution, they are used in various web pages. The sequences in which popups caused by unintended clicks occurred were 20.0% (11,373/56,922) of all sequences. The sequences in which popups caused by unintended clicks occurred in the landing pages were 8.7% (4,952/56,922) of all sequences. We also observed exit-driven redirections triggered by clicking on the browser’s back button, which was 4.5% (2,578/56,922) of all sequences.

**Alert Dialog**: Of all sequences, 2.9% (1,651/56,922) included a web page that displayed more than one alert dialog. We found 66 distinct alert messages, such as fake virus infection and fake rewards, which might strongly influence user psychology. To investigate the relationship between the content of alert messages and SE attacks, we categorized the 66 alert messages into the three attack classes of comply, alarm, and entice. These classes were defined in a previous study [25]. We found 30 Comply alerts that were often used on fake Java/Flash update web pages for luring users to install PUPs and malware, such as “Please install Java to continue.” and “Your Flash Player might be out of date. Please install update to continue.” We found 19 Entice alerts that made users input sensitive information, such as “CONGRATULATIONS! Your IP address has been selected to receive a Year of FREE Netflix!” We found 17 Alarm alerts that showed warning messages such as “IMMEDIATE ACTION REQUIRED We have detected a trojan virus” with alert sounds in some cases (e.g., ). Users were directed to install fake anti-virus software or call fake technical support centers.

**Advertising Domain Names**: Online advertising often results in SE attacks [17, 25]. To analyze SE attacks delivered by advertising providers, we extracted advertising providers’ domain names (ad domain) from server-side redirection on the sequences. We leveraged public advertising provider lists [3] to identify ad domains. Table 9 shows a list of ad domains and the number of unique SE pages they led to.

### User Access Analysis

To understand the user access to the newly observed SE pages, we investigated the domain names at each depth in ascending order using SimilarWeb, Alexa Web Information Service, and DNSDB. Table 8 summarizes the number of domain names, the total visits per month, and the pageviews per million users for each depth.

This comprehensive analysis provides insights into the nature and infrastructure of multi-step SE attacks, highlighting the need for robust detection and prevention mechanisms.