### Decentralized Implementations and Game Matchmaking

Decentralized implementations are well-suited for game matchmaking, including in the context of Htrae. Even with a centralized matchmaking service, the large number of participants necessitates a dramatic reduction in per-machine state. The concept of a Network Coordinate System (NCS) was first proposed for use in GNP [23]. This system employs a fixed set of nodes called landmarks. After determining the Round-Trip Time (RTT) between each pair of landmarks, the system calculates virtual coordinates for each landmark to minimize the sum of the squared error in RTT estimation over all landmark pairs. For non-landmark nodes, they compute their virtual coordinates by finding their RTT to each landmark and choosing coordinates that minimize the sum of the squared error in RTT estimation over all paths to the landmarks.

One drawback of this approach is that landmarks can become bottlenecks. To address this, Lighthouse [25] uses multiple sets of landmarks, each with its own distinct coordinate space. Lighthouse unifies these spaces into a global space, allowing the calculation of distances between coordinates in different spaces. PIC [5] further expands the set of landmarks by allowing any node, once it has computed its coordinates, to become a landmark for new nodes. Another method involves nodes calculating coordinates using measurements to only a subset of landmarks, as in ICS [15] or with virtual landmarks [30]. However, provisioning even a few landmarks to handle millions of users is costly for a game matchmaking system.

Fortunately, some researchers have found that landmarks are not essential. Graph embedding techniques, which rely solely on distance measurements between nodes, enable nodes to learn reasonable coordinates in a global space through progressive refinement based on latency measurements. Techniques such as spring embedding [8], used by Vivaldi [6], and force-field explosion simulation, used by Big-Bang Simulation [28], are well-suited for game matchmaking. We use one of these techniques in Htrae.

Researchers have noted issues with NCSes, including the sensitivity of coordinate embeddings to initial conditions and the difficulty of embedding triangle-inequality violations [12]. Proposed solutions include techniques to avoid local minima and reduce the effect of initial conditions [28], rather than relying on geography-based initial conditions as we do. Wang et al. [33] proposed solutions to triangle-inequality violations; we adapted one of these solutions for Htrae and evaluated its effectiveness in a realistic workload.

We are not the first to attempt an Earth-like coordinate system, but we are the first to succeed. In the paper describing GNP [23], the authors found a spherical coordinate system inferior to a Euclidean one, and Vivaldi's creators reached a similar conclusion [6]. However, we achieved success by using a novel approach: geolocation for all machines' initial positions, not just for a small number of landmarks.

### Geolocation

Htrae builds on earlier work that has enabled and refined the estimation of the latitude and longitude of a machine. NetGeo [21] extracts textual location names from whois records and looks them up in a geographic database. IP2Geo [24] extracts location names from the DNS name of the node or nearby nodes. OASIS [10] uses Meridian [34] to find the nearest infrastructure node with a known geographic location and assigns that location to the address prefix. Commercial databases [20] complement these techniques with methods such as mining websites that ask users for their location.

### Evaluation

Our contribution includes a thorough evaluation of latency prediction in a large distributed system. Generally, evaluations of latency prediction systems have used datasets like PlanetLab ping times and King measurements, which do not represent home machines or realistic churn. A notable exception is the work of Ledlie et al. [13], who deployed the Vivaldi algorithm in the Azureus BitTorrent client, revealing much about the sources of error in a large P2P system. Pyxida, the resulting NCS implementation, incorporates solutions to many of these problems and is considered state-of-the-art [13]. Our trace of game players' machines is larger than Pyxida's corpus, enabling a more detailed evaluation of the effectiveness of various NCS implementation elements. It also allowed us to examine properties of latency and churn specific to game-matchmaking scenarios and to develop a system with significantly better predictive power than Pyxida.

### Conclusion

Htrae is a latency prediction system designed for game matchmaking and other latency-sensitive applications running primarily on home machines. Htrae is simple and scalable, as demonstrated by the small size of our implementation and the ease of deployment. Its primary innovation is the novel combination of geolocation and a network coordinate system (NCS), mitigating the disadvantages of each. Each machine is assigned a location on a virtual Earth, starting with an approximate real-world location and then dynamically adjusted to improve the correspondence between distances and latencies.

To guide our design, we used observations from 50 million matchmaking probes among 3.5 million game machines. This data enabled a thorough evaluation of our system, showing its effectiveness, how well it solves classic latency prediction problems, and how it performs relative to other state-of-the-art systems. Htrae significantly outperforms other latency predictors, including Pyxida, iPlane, and OASIS. With Htrae, the 90th percentile prediction error and best-server error are reduced by a factor of over 2. Consequently, we expect Htrae to enable more efficient and effective matchmaking for games and other latency-sensitive applications.

### Acknowledgments

We thank Chris Butcher, Roger Wolfson, and Luke Timmins for their work collecting Halo 3 traces and sharing them with us. We are also grateful to the creators of OASIS and iPlane for their public query services, and particularly to Harsha Madhyastha for providing code to query iPlane. We thank all our volunteers for running the Htrae system on their home machines.

### References

[1] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris. Resilient overlay networks. In Proc. Symposium on Operating Systems Principles (SOSP), Oct. 2001.
[2] T. Beigbeder, R. Coughlan, C. Lusher, J. Plunkett, E. Agu, and M. Claypool. The effects of loss and latency on user performance in Unreal Tournament 2003. In NetGames, Aug./Sep. 2004.
[3] Bungie. Halo 3 Forum. http://www.bungie.net/Forums/posts.aspx?postID=8455638.
[4] D. R. Choffnes and F. Bustamante. Taming the Torrent: A practical approach to reducing cross-ISP traffic in peer-to-peer systems. In Proc. SIGCOMM Conference, pages 363–374, Aug. 2008.
[5] M. Costa, M. Castro, A. Rowstron, and P. Key. PIC: Practical Internet coordinates for distance estimation. In Proc. International Conference on Distributed Computing Systems (ICDCS), pages 178–187, Mar. 2004.
[6] F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: A decentralized network coordinate system. In Proc. SIGCOMM Conference, pages 426–437, Aug./Sep. 2004.
[7] F. Dabek, J. Li, E. Sit, J. Robertson, M. F. Kaashoek, and R. Morris. Designing a DHT for low latency and high throughput. In Proc. Symposium on Networked Systems Design and Implementation (NSDI), pages 85–98, Mar. 2004.
[8] P. Eades. A heuristic for graph drawing. Congressus Numerantium, 42:149–160, 1984.
[9] P. Francis, S. Jamin, C. Jin, Y. Jin, D. Raz, Y. Shavitt, and L. Zhang. IDMaps: A global Internet host distance estimation service. IEEE/ACM Transactions on Networking, Oct. 2001.
[10] M. J. Freedman, K. Lakshminarayanan, and D. Mazières. OASIS: Anycast for any service. In Proc. Symposium on Networked Systems Design and Implementation (NSDI), pages 129–142, May 2006.
[11] S. Guha and P. Francis. Characterization and measurement of TCP traversal through NATs and firewalls. In Proc. Internet Measurement Conference (IMC), Oct. 2005.
[12] I. Herman, G. Melançon, and M. S. Marshall. Graph visualization and navigation in information visualization: a survey. IEEE Transactions on Visualization and Computer Graphics, 6:24–43, 2000.
[13] J. Ledlie, P. Gardner, and M. Seltzer. Network coordinates in the wild. In Proc. Symposium on Networked Systems Design and Implementation (NSDI), pages 299–311, Apr. 2007.
[14] Y. Lee, S. Agarwal, C. Butcher, and J. Padhye. Measurement and estimation of network QoS among peer Xbox 360 game players. In Proc. Passive and Active Measurement Conference (PAM), pages 41–50, Apr. 2008.
[15] H. Lim, J. C. Hou, and C.-H. Choi. Constructing Internet coordinate system based on delay measurement. IEEE Transactions on Networking, 13(3):513–525, June 2005.
[16] C. Lumezanu, D. Levin, and N. Spring. PeerWise discovery and negotiation of faster paths. In Proc. Workshop on Hot Topics in Networks (HotNets), Nov. 2007.
[17] C. Lumezanu and N. Spring. Measurement manipulation and space selection in network coordinates. In Proc. International Conference on Distributed Computing Systems (ICDCS), pages 361–368, June 2008.
[18] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane: An information plane for distributed services. In Proc. Symposium on Operating Systems Design and Implementation (OSDI), pages 367–380, Nov. 2006.
[19] H. V. Madhyastha, E. Katz-Bassett, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane Nano: Path prediction for peer-to-peer applications. In Proc. Networked Systems Design and Implementation (NSDI), Apr. 2009.
[20] MaxMind. Geolocation and online fraud prevention from MaxMind. http://www.maxmind.com/.
[21] D. Moore, R. Periakaruppan, and J. Donohoe. Where in the world is netgeo.caida.org? In Proc. INET Conference, July 2000.
[22] D. R. Morrison. PATRICIA—practical algorithm to retrieve information coded in alphanumeric. Journal of the ACM (JACM), 15(4):514–534, Oct. 1968.
[23] T. S. E. Ng and H. Zhang. Predicting Internet network distance with coordinates-based approaches. In Proc. IEEE Computer and Communications Conference (INFOCOM), 2002.
[24] V. N. Padmanabhan and L. Subramanian. An investigation of geographic mapping techniques for Internet hosts. In Proc. SIGCOMM Conference, pages 173–185, Aug. 2001.
[25] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti. Lighthouses for scalable distributed location. In Proc. International Workshop on Peer-to-Peer Systems (IPTPS), Feb. 2003.
[26] J. Rosenberg, J. Weinberger, C. Huitema, and R. Mahy. STUN – simple traversal of user datagram protocol (UDP) through network address translators (NATs). Network Working Group RFC 3489, Mar. 2003.
[27] Route Views Project. University of Oregon. http://www.routeviews.org/.
[28] Y. Shavitt and T. Tankel. Big-Bang Simulation for embedding network distances in Euclidean space. IEEE/ACM Transactions on Networking, 12(6):993–1006, Dec. 2004.
[29] Y. Staff. Video game sales break records. http://us.i1.yimg.com/videogames.yahoo.com/feature/video-game-sales-break-records/1181404, Jan. 2008.
[30] L. Tang and M. Crovella. Virtual landmarks for the Internet. In Proc. Internet Measurement Conference (IMC), pages 143–152, Oct. 2003.
[31] W. Theilmann and K. Rothermel. Dynamic distance maps of the Internet. In Proc. Joint Conference of the IEEE Computer and Communications Societies (INFOCOM), Mar. 2000.
[32] W. S. Torgerson. Multidimensional scaling of similarity. Psychometrika, 30(4):379–393, Dec. 1965.
[33] G. Wang, B. Zhang, and T. S. E. Ng. Towards network triangle inequality violation aware distributed systems. In Proc. Internet Measurement Conference (IMC), pages 145–157, Oct. 2007.
[34] B. Wong, A. Slivkins, and E. G. Sirer. Meridian: A lightweight network location service without virtual coordinates. In Proc. SIGCOMM Conference, pages 85–96, Aug. 2005.
[35] G. Yona, N. Linial, and M. Linial. ProtoMap: automatic classification of protein sequences and hierarchy of protein families. Nucleic Acids Research, 28(1):49–55, 2000.
[36] H. Zheng, E. K. Lua, M. Pias, and T. G. Griffin. Internet routing policies and round-trip times. In Proc. Passive and Active Measurement Conference (PAM), Mar./Apr. 2005.
[37] G. Zigelman, R. Kimmel, and N. Kiryati. Texture mapping using surface flattening via multi-dimensional scaling. IEEE Transactions on Visualization and Computer Graphics, 8(2):198–207, Apr. 2002.