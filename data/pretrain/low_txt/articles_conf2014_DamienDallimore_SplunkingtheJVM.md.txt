# Copyright © 2014 Splunk Inc.

## Splunking the JVM
### Presented by: Damien Dallimore, Developer Evangelist, CSO Office @ Splunk

---

### Disclaimer
During this presentation, we may make forward-looking statements regarding future events or the expected performance of the company. Please be advised that such statements reflect our current expectations and estimates based on factors currently known to us, and actual events or results could differ materially. For important factors that may cause actual results to differ from those contained in our forward-looking statements, please review our filings with the SEC. The forward-looking statements made in this presentation are being made as of the time and date of its live presentation. If reviewed after its live presentation, this presentation may not contain current or accurate information. We do not assume any obligation to update any forward-looking statements we may make. Additionally, any information about our roadmap outlines our general product direction and is subject to change at any time without notice. It is for informational purposes only and shall not be incorporated into any contract or other commitment. Splunk undertakes no obligation either to develop the features or functionality described or to include any such feature or functionality in a future release.

---

## From Middle Earth: Making Splunk Apps & Add-ons
- **JVM Background**
  - JVM (Java Virtual Machine) first appeared in the early 1990s.
  - Now, it is the dominant runtime for enterprise applications, including:
    - Application Servers
    - Enterprise Service Buses
    - Databases
    - NoSQL
    - Distributed Big Data
    - Web Servers
    - Directory Servers
    - Search Engines
    - Build Systems
    - Gaming Platforms
    - Trading Systems
    - Reservation Systems
    - Core Banking
    - Messaging Infrastructure
    - Proprietary Systems

- **Many JVM Variants**
  - Oracle Hotspot
  - OpenJDK (reference implementation for Java 7/8)
  - Oracle JRockit (being merged into Hotspot)
  - IBM J9
  - Commercial alternatives like Azul Zing

- **JVMs Are Here to Stay**
  - It’s not just about the "J" in Java.
  - Big Data frameworks also rely on JVMs.
  - Gaining insights into your JVM data is crucial.

---

## Getting at the Data
- **Data Sources**
  - Logs
  - Developers
  - JMX (Java Management Extensions)
  - Instrumentation Agents
  - Operating System
  - Distributed Communications

- **Log Data**
  - **Standard Log Files**
    - Example: 
      ```
      Oct 21, 2013 4:42:15 PM org.apache.catalina.startup.Catalina load
      INFO: Initialization processed in 1153 ms
      Oct 21, 2013 4:42:15 PM org.apache.catalina.core.StandardService startInternal
      INFO: Starting service Catalina
      ```
    - Application logs that are part of the product.
    - Developer logs for any deployed code.
    - Written to local disk or network storage.

  - **Garbage Collector Logs**
    - Example:
      ```
      54.736: [Full GC 54.737:
      [Tenured: 172798K->18092K(174784K), 2.3792658 secs] 257598K->18092K(259584K),
      [Perm : 20476K->20476K(20480K)], 2.4715398 secs] [Times: user=0.56 sys=0.05, real=0.07 secs]
      ```
    - Generated by passing arguments to the JVM at startup:
      - `-verbose:gc`
      - `-Xloggc:/home/damien/jvm_logs/gc.log`
      - `-XX:+PrintGC`
      - `-XX:+PrintGCTimeStamps`
      - `-XX:+PrintGCDetails`

  - **SplunkJavaLogging**
    - Sometimes you can’t write to file or deploy a Universal Forwarder.
    - Appenders for Java Util Logging, Log4J, Logback.
    - Simply add a logging appender to your logging configuration file.

  - **LogBack Appender Example**
    - Code example provided.

  - **Better Exception Logging**
    - Easier to work with in Splunk.

  - **Splunk SDK for Java**
    - Use the SDK from any JVM language (Java, Groovy, Scala, etc.).
    - Send log events via REST, UDP, or TCP directly to Splunk from your code.
    - Spring Integration Adapters available on GitHub.
    - SDK available from dev.splunk.com.

---

## JMX (Java Management Extensions)
- Monitor JVM via MBean attributes, operations, and notifications.
- Types of MBeans:
  - JVM MBeans
  - Vendor MBeans
  - Custom Coded MBeans

- **Browse MBeans with JConsole**

- **Getting This Data into Splunk**
  - Runs on all supported Splunk platforms.
  - Works with all main JVM variants.
  - 100% Free and Open Source.
  - Simple to configure.
  - Many connectivity options.

- **Example: Splunk App in Action**

- **Scaling Up**
  - Monitoring a single JVM is great, but what if you have dozens, hundreds, or even thousands?
  - Multiple `jmxserver` elements per configuration file.
  - Multiple configuration files per Splunk instance.
  - Vertical stacking has limits; go horizontal to achieve real scale.
  - Indexer Cluster with UFs and JMX Mod Input for monitored JVMs.

---

## Going Deeper with Instrumentation
- **Instrumentation Agents**
  - **SplunkJavaAgent**
    - Dynamic Byte Code Injection Agent for JVMs.
    - No need to change any code to get APM-level insights.
    - Pass this to the JVM at startup: `-javaagent:splunkagent.jar`

- **Raw Metrics You Can Get**
  - **Bytecode Injection**
    - Class loading
    - Method execution
    - Method timings
    - Method call stack
    - Caught and uncaught exceptions
  - **JMX**
    - Running in local in-memory mode
  - **Binary HPROF Memory Dumps Decoded in Text**
    - No more static HPROF dumps and loading into another memory analysis tool.

- **Simple Configuration File**
- **Raw Events Streamed into Splunk**
- **Use Splunk Search to Deliver Insights**

---

## Operating System
- The JVM executes as a process.
- Tools like `top` and `jstat` provide additional JVM insights.
- Index this data in Splunk and correlate.

- **Top**
- **jstat**

---

## Distributed Communications
- Valuable data flows in and out of JVMs.
- **Messaging**
  - Capture packets off the wire.

---

## Build a Splunk App!
- **Opportunity**
  - Reuse some of the data collection approaches in this presentation and build a specific JVM app.
  - Publish it on apps.splunk.com.
  - Benefits:
    - Make some money
    - Generate publicity for yourself or your company
    - Generate sales leads
    - Sell more Splunk licenses if you are also a partner
    - Do it because you love community collaboration
    - Become my beer buddy for life

- **Some JVM App Ideas**
  - Splunk for JBoss
  - Splunk for Tomcat
  - Splunk for Solr
  - Splunk for Cassandra

- **I am here to help you!**

---

### Questions?

### Special Offer: Try Splunk MINT Express for Free!
- **Splunk MINT** offers a fast path to mobile intelligence. How fast? Find out with a 6-month trial.
  - **Register for your free trial:** hsp://mint.splunk.com/conf2014offer
  - **Download the Splunk MINT SDKs**
  - **Add the Splunk MINT line of SDK code and publish**
  - **Start getting digital intelligence at your fingertips!**
- **Offer valid for .conf2014 attendees and coworkers of attendees only.**
- **Trial allows monitoring of up to 750,000 monthly active users (MAUs).**

---

### Thank You!
- **@damiendallimore**
- **Email: damiendallimore@splunk.com**

---

For more resources:
- **apps.splunk.com**
- **github.com/damiendallimore**