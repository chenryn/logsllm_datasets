### Secure State Estimation and Attack Recovery for Multi-Sensor Robotic Vehicles

#### Introduction
Secure state estimation techniques [19, 38, 48] have been introduced to handle sensor attacks. These methods typically rely on the remaining benign sensors or sensor redundancy to securely estimate system states in the presence of significant noise or attacks. They assume that attackers can corrupt only a subset of sensors, allowing the estimation to depend on the uncorrupted ones. In contrast, our approach uses software sensors based on system modeling, which is independent of the set of sensors under attack, making it more practical and generic.

System identification [32] has been used for detecting attacks [5] and debugging robotic vehicle (RV) failures [56]. Similar to our method, these approaches build models for RVs using system identification. However, they primarily detect extreme deviations and do not provide accurate feedback to the control loop after detection. Additionally, they do not model individual sensor readings as precisely as our method.

#### Proposed Technique
We propose a novel sensor attack recovery technique for multi-sensor RVs. This technique employs generic state-space model-based software sensors as a safe backup for physical sensors. Software sensors can accurately predict physical sensor readings while being largely isolated from the (potentially malicious) environment. Our evaluation with real RVs demonstrates that this technique can effectively recover from both single and multi-sensor attacks.

#### Acknowledgements
We thank the anonymous reviewers for their valuable comments and suggestions. This work was partially supported by the Office of Naval Research (ONR) under Grant N00014-17-1-2045. Any opinions and conclusions in this paper are those of the authors and do not necessarily reflect the views of the ONR.

#### References
[1] Drone - 3DR Solo, 2017. https://www.3dr.com.
[2] ArduPilot :: Home, 2010. http://ardupilot.org/.
[3] Brian Bradie. A Friendly Introduction to Numerical Analysis. Pearson Education India, 2006.
[4] Richard R. Brooks and Sundararaja S. Iyengar. Multi-Sensor Fusion: Fundamentals and Applications with Software. Prentice-Hall, Inc., 1998.
[5] Hongjun Choi, Wen-Chuan Lee, Yousra Aafer, Fan Fei, Zhan Tu, Xiangyu Zhang, Dongyan Xu, and Xinyan Xinyan. Detecting Attacks Against Robotic Vehicles: A Control Invariant Approach. In Proceedings of the ACM CCS, pages 801–816. ACM, 2018.
[6] Self-driving cars now legal in California, 2012. https://cnn.it/2ZJDnEN.
[7] Crispan Cowan, Calton Pu, Dave Maier, Jonathan Walpole, Peat Bakke, Steve Beattie, Aaron Grier, Perry Wagle, Qian Zhang, and Heather Hinton. StackGuard: Automatic Adaptive Detection and Prevention of Buffer-Overflow Attacks. In USENIX Security, 1998.
[8] Drew Davidson, Hao Wu, Robert Jellinek, Vikas Singh, and Thomas Ristenpart. Controlling UAVs with Sensor Input Spoofing Attacks. In WOOT, 2016.
[9] Case Study 1: Multiple Gyroscope Sensor (1,2,3) Recovery. https://youtu.be/SQ1liFlncB4.
[10] Case Study 2: GPS Sensor Attack. https://youtu.be/e8J6ixvtXqQ.
[11] Gyroscope Sensor Attack and Crash. https://youtu.be/_bOLxzvyu5c.
[12] Multiple Gyroscope Sensor (1,2,3) Recovery. https://youtu.be/1MidmMlDEMo.
[13] Rover Controlled GPS Attack. https://youtu.be/gu1NVssiJls.
[14] Rover Random GPS Attack. https://youtu.be/S04iL8diRh8.
[15] Case Study 2: GPS Sensor Recovery, 2019. https://youtu.be/oC3SOGT_XDY.
[16] W. Elmenreich. Sensor Fusion in Time-Triggered Systems Ph.D. Thesis. Institut für Technische Informatik, Technischen Universität Wien, 2002.
[17] Alexander Eriksson and Neville A. Stanton. Takeover Time in Highly Automated Vehicles: Noncritical Transitions to and from Manual Control. Human Factors, 59(4):689–705, 2017.
[18] Rover Home — Rover Documentation, 2016. http://erlerobotics.com/blog/erle-rover/.
[19] Hamza Fawzi, Paulo Tabuada, and Suhas Diggavi. Secure Estimation and Control for Cyber-Physical Systems Under Adversarial Attacks. IEEE Transactions on Automatic Control, 59(6):1454–1467, 2014.
[20] Paul M. Frank. Fault Diagnosis in Dynamic Systems Using Analytical and Knowledge-Based Redundancy: A Survey and Some New Results. Automatica, 26(3):459–474, 1990.
[21] Gene F. Franklin, J. David Powell, Abbas Emami-Naeini, and J. David Powell. Feedback Control of Dynamic Systems, Volume 3. Addison-Wesley Reading, MA, 1994.
[22] Wei Gao and Thomas H. Morris. On Cyber Attacks and Signature-Based Intrusion Detection for Modbus-Based Industrial Control Systems. The Journal of Digital Forensics, Security and Law: JDFSL, 9(1):37, 2014.
[23] Christian Gold, Daniel Damböck, Lutz Lorenz, and Klaus Bengler. "Take Over!" How Long Does It Take to Get the Driver Back into the Loop? In Proceedings of the Human Factors and Ergonomics Society Annual Meeting, volume 57, pages 1938–1942. SAGE, 2013.
[24] Jingqing Han. From PID to Active Disturbance Rejection Control. IEEE Transactions on Industrial Electronics, 56(3):900–906, 2009.
[25] Pavel Holoborodko. Smooth Noise Robust Differentiators.
[26] Khurum Nazir Junejo and Jonathan Goh. Behaviour-Based Attack Detection and Classification in Cyber-Physical Systems Using Machine Learning. In Proceedings of the 2nd ACM International Workshop on Cyber-Physical System Security, pages 34–43. ACM, 2016.
[27] Rudolf Emil Kalman et al. Contributions to the Theory of Optimal Control. Bol. Soc. Mat. Mexicana, 5(2), 1960.
[28] Sanmeet Kaur and Maninder Singh. Automatic Attack Signature Generation Systems: A Review. IEEE Security & Privacy, 11(6):54–61, 2013.
[29] Israel Koren and C. Mani Krishna. Fault-Tolerant Systems. Elsevier, 2010.
[30] Denis Foo Kune, John Backes, Shane S. Clark, Daniel Kramer, Matthew Reynolds, Kevin Fu, Yongdae Kim, and Wenyuan Xu. Ghost Talk: Mitigating EMI Signal Injection Attacks Against Analog Sensors. Pages 145–159, 2013.
[31] Leslie Lamport, Robert Shostak, and Marshall Pease. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems (TOPLAS), 4(3):382–401, 1982.
[32] L. Ljung. System Identification: Theory for the User. 2nd ed. Prentice Hall, Upper Saddle River, NJ., 1999.
[33] Kevin M. Lynch and Frank Chongwoo Park. Modern Robotics: Mechanics, Planning, and Control. Cambridge University Press, 2017.
[34] System Identification Toolbox - MATLAB, 2017. https://www.mathworks.com/products/sysid.html.
[35] Micro Air Vehicle Communication Protocol, 2017. http://qgroundcontrol.org/mavlink/start.
[36] Robert Mitchell and Ray Chen. Adaptive Intrusion Detection of Malicious Unmanned Air Vehicles Using Behavior Rule Specifications. IEEE Transactions on Systems, Man, and Cybernetics: Systems, 44(5):593–604, 2014.
[37] Robert Mitchell and Ray Chen. Behavior Rule Specification Based Intrusion Detection for Safety-Critical Medical Cyber-Physical Systems. IEEE Transactions on Dependable and Secure Computing, 12(1):16–30, 2015.
[38] Yilin Mo and Bruno Sinopoli. Secure Estimation in the Presence of Integrity Attacks. IEEE Transactions on Automatic Control, 60(4):1145–1151, 2015.
[39] Katsuhiko Ogata and Yanjuan Yang. Modern Control Engineering, Volume 4. Prentice Hall India, 2002.
[40] Tom O'Haver. A Pragmatic Introduction to Signal Processing. University of Maryland at College Park, 1997.
[41] Young-Seok Park, Yunmok Son, Hocheol Shin, Dohyun Kim, and Yongdae Kim. This Ain't Your Dose: Sensor Spoofing Attack on Medical Infusion Pump. In WOOT, 2016.
[42] Jonathan Petit, Bas Stottelaar, Michael Feiri, and Frank Kargl. Remote Attacks on Automated Vehicles Sensors: Experiments on Camera and LiDAR. Black Hat Europe.
[43] Lee Pike, Pat Hickey, Trevor Elliott, Eric Mertens, and Aaron Tomb. TrackOS: A Security-Aware Real-Time Operating System. In International Conference on Runtime Verification, pages 302–317. Springer, 2016.
[44] Pixhawk, 2019. https://pixhawk.org/.
[45] Hiroaki Sakoe and Seibi Chiba. Dynamic Programming Algorithm Optimization for Spoken Word Recognition. IEEE Transactions on Acoustics, Speech, and Signal Processing, 26(1):43–49, 1978.
[46] Qikun Shen, Bin Jiang, Peng Shi, and Cheng-Chew Lim. Novel Neural Networks-Based Fault Tolerant Control Scheme with Fault Alarm. IEEE Transactions on Cybernetics, 44(11):2190–2201, 2014.
[47] Yasser Shoukry, Paul Martin, Paulo Tabuada, and Mani Srivastava. Non-Invasive Spoofing Attacks for Anti-Lock Braking Systems. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 55–72. Springer, 2013.
[48] Yasser Shoukry, Pierluigi Nuzzo, Alberto Puggelli, Alberto L. Sangiovanni-Vincentelli, Sanjit A. Seshia, and Paulo Tabuada. Secure State Estimation for Cyber-Physical Systems Under Sensor Attacks: A Satisfiability Modulo Theory Approach. IEEE Transactions on Automatic Control, 62(10):4917–4932, 2017.
[49] Yunmok Son, Hocheol Shin, Dongkwan Kim, Young-Seok Park, Juhwan Noh, Kibum Choi, Jungwoo Choi, Yongdae Kim, et al. Rocking Drones with Intentional Sound Noise on Gyroscopic Sensors. In USENIX Security, pages 881–896, 2015.
[50] First Passenger Drone Makes Its Debut at CES, 2016. https://bit.ly/2O0zYft.
[51] Nils Ole Tippenhauer, Christina Pöpper, Kasper Bonne Rasmussen, and Srdjan Capkun. On the Requirements for Successful GPS Spoofing Attacks. In Proceedings of the 18th ACM CCS, pages 75–86. ACM, 2011.
[52] Timothy Trippel, Ofer Weisse, Wenyuan Xu, Peter Honeyman, and Kevin Fu. WALNUT: Waging Doubt on the Integrity of MEMS Accelerometers with Acoustic Injection Attacks. In EuroS&P, pages 3–18. IEEE, 2017.
[53] Zhengbo Wang et al. SONIC GUN TO SMART DEVICES. 2017.
[54] Jon S. Warner and Roger G. Johnston. A Simple Demonstration That the Global Positioning System (GPS) Is Vulnerable to Spoofing. Journal of Security Administration, 25(2):19–27, 2002.
[55] Bin Yao and Chang Jiang. Advanced Motion Control: From Classical PID to Nonlinear Adaptive Robust Control. In AMC, pages 815–829. IEEE, 2010.
[56] Enyan Huang, Qixin Wang, Yu Pei, Haidong Yuan, Zhijian He, and Yao Chen. A System Identification Based Oracle for Control-CPS Software Fault Localization. In Proceedings of ICSE. ACM, 2019.
[57] Christopher Zimmer, Balasubramanya Bhat, Frank Mueller, and Sibin Mohan. Time-Based Intrusion Detection in Cyber-Physical Systems. In Proceedings of ICCPS, pages 109–118. ACM, 2010.

#### Appendix

**A. Quadrotor Model and Frames**

Figure 19 shows a quadrotor with two frames: the inertial frame and the body frame. The linear position of the quadrotor is defined in the inertial frame with \(\xi = (x, y, z)\). The attitude (i.e., angular position) is defined in the inertial frame with \(\eta = (\phi, \theta, \psi)\). The roll (\(\phi\)), pitch (\(\theta\)), and yaw (\(\psi\)) angles (i.e., Euler angles) determine the rotational angles around the x, y, and z axes, respectively. The origin of the body frame is defined at the center of mass of the quadcopter. The linear velocities in the body frame are defined with \(V_B\) and the angular velocities are determined by \(\omega = (p, q, r)\).

The rotation matrix \(R\) from the body frame to the inertial frame is given by:
\[
R = \begin{bmatrix}
C_\psi C_\theta & C_\psi S_\theta S_\phi - S_\psi C_\phi & C_\psi S_\theta C_\phi + S_\psi S_\phi \\
S_\psi S_\theta C_\phi + C_\psi S_\phi & S_\psi S_\theta S_\phi - C_\psi C_\phi & S_\psi C_\theta \\
-S_\theta C_\phi & S_\theta S_\phi & C_\theta
\end{bmatrix}
\]
where \(S_x = \sin(x)\) and \(C_x = \cos(x)\). Since \(R\) is orthogonal, \(R^{-1} = R^T\). The matrix \(R^T\) is used for rotation from the inertial frame to the body frame.

The transformation matrix \(W_\eta\) for angular velocities from the inertial frame \(\dot{\eta}\) to the body frame \(\omega\) is:
\[
W_\eta = \begin{bmatrix}
1 & 0 & -S_\theta \\
0 & C_\phi & S_\phi C_\theta \\
0 & -S_\phi & C_\phi C_\theta
\end{bmatrix}
\]
Thus, the angular velocities in the body frame are:
\[
\omega = W_\eta \dot{\eta}, \quad \dot{\eta} = W_\eta^{-1} \omega
\]

**B. Supplementary Compensation**

We present an example of the supplementary compensation approach that estimates angle status from the accelerometer and magnetometer. Note that angle status is typically measured by a gyroscope. The conversion equations are as follows:
\[
\phi_{acc} = \text{atan2}(y_{acc}, \sqrt{x_{acc}^2 + z_{acc}^2})
\]
\[
\theta_{acc} = \text{atan2}(x_{acc}, \sqrt{y_{acc}^2 + z_{acc}^2})
\]
\[
\psi_{mag} = \text{atan2}(-y_{mag} \cdot \cos\phi + z_{mag} \cdot \sin\phi, x_{mag} \cdot \cos\theta + y_{mag} \cdot \sin\theta \cdot \sin\phi + z_{mag} \cdot \sin\theta \cdot \cos\phi)
\]

Conversion errors and real sensor errors (e.g., sensor noise, bias) cause fluctuations in the equations' output. We use a low-pass filter to smooth the outputs. By combining the outputs from the above equations and our software sensor (using a weighted sum), we acquire more accurate measurements.