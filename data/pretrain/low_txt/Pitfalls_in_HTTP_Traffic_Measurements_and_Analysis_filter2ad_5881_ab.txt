### 2. Analysis of Persistent and Pipelined Requests

#### 2.1 Persistent Requests

**Figure 4: Persistent Requests/Bytes/Connections**

- **Dates:** 2008 Sep, 2009 Apr, 2009 Aug, 2010 Mar, 2010 Jun
- **Metrics:**
  - Reqs (Requests)
  - Conns (Connections)
  - Bytes
  - Method (Pipelined, Same Packet)

**Key Observations:**
- The fraction of connections with persistent requests increases slightly from 25% to 30%.
- The fraction of persistent requests remains fairly constant at around 60%.
- The volume transferred in persistent requests is around 25%, except for JUN10 where it exceeds 30%.

**Summary:**
- If only the first request in an HTTP connection is considered, about two-thirds of the requests and one-third of the volume transferred would be missed.

#### 2.2 Pipelined Requests

**Figure 5: Pipelined Requests/Bytes/Connections**

- **Dates:** 2008 Sep, 2009 Apr, 2009 Aug, 2010 Mar, 2010 Jun
- **Metrics:**
  - Reqs (Requests)
  - Conns (Connections)
  - Bytes
  - Method (Pipelined, Same Packet)

**Key Observations:**
- The fraction of connections with pipelined requests increases from 4% to 6% from SEP08 to JUN10.
- The contribution in terms of volume of pipelined requests decreases from 4% to below 2%.

**Impact on Traffic Analysis:**
- If an HTTP traffic analysis considers multiple requests in HTTP connections but only includes those at the beginning of a packet, it would miss around 4% of the requests and up to 4% of the volume.
- If the analysis assumes only one request per packet and just searches for the last string that matches a certain header field, 4% of the requests would be affected.

#### 2.3 Impact of Browser

**Common Wisdom:**
- Pipelining is generally disabled by default in most popular browsers. However, our traces show a non-negligible amount of pipelined requests.

**Analysis:**
- We analyzed the data across browser families, operating systems, and content types.
- Browsers have a significant impact on the number of persistent and pipelined requests. While the server must support HTTP/1.1, the browser ultimately issues the request.

**Figure 6: Results per Browser Family for JUN10**

- **Browsers:**
  - Chrome
  - Firefox_3
  - MSIE_8
  - Opera
  - Firefox_2
  - MSIE_7
  - MSIE<=6
  - Safari

**Key Observations:**
- Variance among different browser categories is limited.
- Microsoftâ€™s Internet Explorer (MSIE) has around 10% more persistent bytes than Firefox.
- Together, MSIE and Firefox account for 70% of the volume and 80% of the requests.
- Opera stands out with a high fraction of pipelined requests, as it is the only browser with HTTP pipelining enabled by default, but it comprises only about 2.5% of the total requests and volume.

**Operating Systems:**
- Linux and MacOS X have lower fractions of persistent bytes than Windows, although the fraction of requests is similar.

#### 2.4 Impact of Web Service

**Selection:**
- We selected the 30 most requested and/or highest volume second-level domains from our dataset and calculated our metrics as for the browser categories.

**Grouping:**
- Domains from the same web service (e.g., facebook.com and fbcdn.com) and similar types of pages were grouped together.

**Figure 7: Fraction of Persistent and Pipelined Requests/Bytes for 18 Web Services in JUN10**

- **Web Services:**
  - OSN (Online Social Networks: Jappy, Mein/StudiVZ, Schueller.cc)
  - Adult (Video portals offering adult content)

**Key Observations:**
- There is more variation across web services compared to browser versions.
- The fraction of persistent requests ranges from 11% (Uploaded.to) to 88% (WindowsUpdate).
- The fraction of bytes in persistent requests ranges from <1% (MegaVideo and MegaUpload) to 95% (WindowsUpdate).
- In terms of pipelined requests, the maxima are 33% for Microsoft and 11% for RapidShare for requests and volume, respectively.
- No strong relation was observed between the type of web service and persistence/pipelining.

**Conclusion:**
- Web services have a stronger influence on persistence and pipelining compared to browser versions.
- The variations in persistence and pipelining across different web services highlight the importance of considering these factors in HTTP traffic analysis.