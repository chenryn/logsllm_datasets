### Glossary

**Scheduled and Executed:**
- It denies direct access to resources, forcing user-level software to request access via the kernel.

**TLB (Translation Lookaside Buffer):**
- A cache for memory translation in virtual memory systems, used by the MMU (Memory Management Unit).

**User Space:**
- The address space of user-level processes.

**Tracer:**
- A tracing tool (see Tracing).

**Variable:**
- A named storage object used by programming languages.

**Tracepoints:**
- A Linux kernel technology for providing static instrumentation.

**VFS (Virtual File System):**
- An abstraction used by the kernel to support different file system types.

**Tracing:**
- Event-based recording. Tracing events may be based on static or dynamic instrumentation, or they may be timer-based. The tools in this book are tracing tools; they instrument events and run BPF programs to record data.

**ZFS:**
- A combined file system and volume manager created by Sun Microsystems.

**UDP (User Datagram Protocol):**
- A protocol originally defined in RFC 768. See Chapter 10.

---

## Bibliography

**[Aho 78]**
- Aho, A. V., Kernighan, B. W., and Weinberger, P. J., "Awk: A Pattern Scanning and Processing Language (Second Edition)," Uix 7th Edition man pages, 1978.
  - [Link](http://plan9.bell-labs.com/7thEdMan/index.html)

**[Alizadeh 10]**
- Alizadeh, M., Greenberg, A., Maltz, D., Padhye, J., Patel, P., Prabhakar, B., Sengupta, S., and Sridharan, M., "DCTCP: Efficient Packet Transport for the Commoditized Data Center," MSR-TR-2010-68, January 2010.
  - [Link](https://www.microsoft.com/en-us/research/publication/dctcp-efficient-packet-transport-for-the-commoditized-data-center/)

**[AMD 10]**
- AMD, BIOS and Kernel Developer’s Guide (BKDG) for AMD Family 10h Processors, April 2010.
  - [Link](https://developer.amd.com/wordpress/media/2012/10/31116.pdf)

**[Amit 18]**
- Amit, N., and Wei, M., "The Design and Implementation of Hyperupcalls," USENIX Annual Technical Conference, 2018.

**[Bezemer 15]**
- Bezemer, D.-P., Pouwelse, J., and Gregg, B., "Understanding Software Performance Regressions Using Differential Flame Graphs," IEEE International Conference on Software Analysis, Evolution, and Reengineering (SANER), 2015.

**[Bonwick 94]**
- Bonwick, J., "The Slab Allocator: An Object-Caching Kernel Memory Allocator," USENIX Summer Conference, 1994.

**[Bostock 10]**
- Heer, J., Bostock, M., and Ogievetsky, V., "A Tour Through the Visualization Zoo," acmqueue, Volume 8, Issue 5, May 2010.
  - [Link](http://queue.acm.org/detail.cfm?id=1805128)

**[Cheng 16]**
- Cheng, Y., and Cardwell, N., "Making Linux TCP Fast," netdev 1.2, Tokyo, 2016.
  - [Link](https://netdevconf.org/1.2/papers/bbr-netdev-1.2.new.pdf)

**[Cockcroft 98]**
- Cockcroft, A., and Pettit, R., "Sun Performance and Tuning: Java and the Internet." Prentice Hall, 1998.

**[Corbet 05]**
- Corbet, J., Rubini, A., and Kroah-Hartman, G., "Linux Device Drivers," 3rd edition, O'Reilly, 2005.

**[Desnoyers 09]**
- Desnoyers, M., "Comprehensive Dynamic Tracing Infrastructure for User and Kernel Space," École Polytechnique de Montréal, December 2009.
  - [Link](https://lttng.org/files/thesis/desnoyers-dissertation-2009-12-v27.pdf)

**[Desnoyers 09b]**
- Desnoyers, M., and Dagenais, M., "Adaptive Fault Probing," École Polytechnique de Montréal, December 2009.
  - [Link](http://dmct.dorsal.polymtl.ca/sites/dmct.dorsal.polymtl.ca/files/SOTA2009-Desnoyers.pdf)

**[Elling 00]**
- Elling, R., "Static Performance Tuning," Sun Blueprints, 2000.

**[Goldberg 73]**
- Goldberg, R. P., "Architectural Principles for Virtual Computer Systems," Harvard University, 1973.

**[Gorman 04]**
- Gorman, M., "Understanding the Linux Virtual Memory Manager." Prentice Hall, 2004.

**[Graham 82]**
- Graham, S., Kessler, P., and McKusick, M., "gprof: A Call Graph Execution Profiler," Proceedings of the SIGPLAN '82 Symposium on Compiler Construction, SIGPLAN Notices, Volume 6, Issue 17, pp. 120-126, June 1982.

**[Gregg 11]**
- Gregg, B., and Mauro, J., "DTrace: Dynamic Tracing in Oracle Solaris, Mac OS X and FreeBSD," Prentice Hall, 2011.

**[Gregg 13a]**
- Gregg, B., "Blazing Performance with Flame Graphs," USENIX LISA '13 Conference, November 2013.
  - [Link](https://www.usenix.org/conference/lisa13/technical-sessions/plenary/gregg)

**[Gregg 13b]**
- Gregg, B., "Systems Performance: Enterprise and the Cloud," Prentice Hall, 2013.

**[Gregg 13c]**
- Gregg, B., "Thinking Methodically About Performance," Communications of the ACM, Volume 56, Issue 2, February 2013.

**[Gregg 16]**
- Gregg, B., "The Flame Graph," Communications of the ACM, Volume 59, Issue 6, pp. 48-57, June 2016.

**[Gregg 17]**
- Gregg, B., "Linux Container Performance Analysis," USENIX LISA '17 Conference, November 2017.
  - [Link](https://www.usenix.org/conference/lisa17/conference-program/presentation/gregg)

**[Hiramatsu 14]**
- Hiramatsu, M., "Scalability Efforts for Kprobes or: How I Learned to Stop Worrying and Love a Massive Number of Kprobes," LinuxCon Japan, 2014.
  - [Link](https://events.static.linuxfound.org/sites/events/files/slides/Handling%20the%20Massive%20Multiple%20Kprobes%20v2_1.pdf)

**[Hollingsworth 94]**
- Hollingsworth, J., Miller, B., and Cargille, J., "Dynamic Program Instrumentation for Scalable Performance Tools," Scalable High-Performance Computing Conference (SHPCC), May 1994.

**[Haland-Jorgensen 18]**
- Haland-Jorgensen, T., et al., "The eXpress Data Path: Fast Programmable Packet Processing in the Operating System Kernel," Proceedings of the 14th International Conference on Emerging Networking Experiments and Technologies, 2018.

**[Hubicka 13]**
- Hubicka, J., Jaeger, A., Matz, M., and Mitchell, M., "System V Application Binary Interface AMD64 Architecture Processor Supplement (With LP64 and ILP32 Programming Models)," July 2013.
  - [Link](https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf)

**[Intel 16]**
- Intel, "Intel 64 and IA-32 Architectures Software Developer's Manual Volume 3B: System Programming Guide, Part 2," September 2016.
  - [Link](https://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-software-developer-vol-3b-part-2-manual.html)

**[Jacobson 18]**
- Jacobson, V., "Evolving from AFAP: Teaching NICs About Time," netdev 0x12, July 2018.
  - [Link](https://www.files.netdevconf.org/d/4ee0a09788fe49709855/files/?p=/Evolving%20from%20AFAP%20%E2%80%93%20Teaching%20NICs%20about%20time.pdf)

**[McCanne 92]**
- McCanne, S., and Jacobson, V., "The BSD Packet Filter: A New Architecture for User-Level Packet Capture," USENIX Winter Conference, 1993.

**[Stoll 89]**
- Stoll, C., "The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage," The Bodley Head Ltd., 1989.

**[Tamches 99]**
- Tamches, A., and Miller, B., "Fine-Grained Dynamic Instrumentation of Commodity Operating System Kernels," Proceedings of the 3rd Symposium on Operating Systems Design and Implementation, February 1999.

**[Vance 04]**
- Vance, A., "Sun Delivers Unix Shocker with DTrace: It Slices, It Dices, It Spins, It Whirls," The Register, July 2004.
  - [Link](https://www.theregister.co.uk/2004/07/08/dtrace_user_take/anc)

**[VMware 07]**
- VMware, "Understanding Full Virtualization, Paravirtualization, and Hardware Assist," 2007.
  - [Link](https://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/techpaper/VMware_paravirtualization.pdf)

**[Welsh 01]**
- Welsh, M., Culler, D., and Brewer, E., "SEDA: An Architecture for Well-Conditioned, Scalable Internet Services," ACM SIGOPS, Volume 35, Issue 5, December 2001.

**[Yamamoto 16]**
- Yamamoto, M., and Nakashima, K., "Execution Time Compensation for Cloud Applications by Subtracting Steal Time Based on Host-Level Sampling," ICPE, 2016.
  - [Link](https://research.spec.org/icpe_proceedings/2016/companion/p69.pdf)

**[Zannoni 16]**
- Zannoni, E., "BPF and Linux Tracing Infrastructure," LinuxCon Europe, 2016.
  - [Link](https://events.static.linuxfound.org/sites/events/files/slides/tracing-linux-ezannoni-berlin-2016-final.pdf)

**[1]**
- [Link](https://events.static.linuxfound.org/sites/events/files/slides/bpf_collabsummit_2015feb20.pdf)

**[2]**
- [Link](https://lkml.org/lkml/2013/9/30/627)

**[3]**
- [Link](https://lore.kernel.org/netdev/1395404418-25376-1-git-send-email-dborkman@redhat.com/T/)

**[4]**
- [Link](https://lore.kernel.org/lkml/1435328155-87115-1-git-send-email-wangnan0@huawei.com/T/)

**[5]**
- [Link](https://github.com/iovisor/ply)

**[6]**
- [Link](http://halobates.de/on-submitting-patches.pdf)

**[7]**
- [Link](https://www.usenix.org/legacy/publications/library/proceedings/sd93/)

**[8]**
- [Link](https://www.slideshare.net/vh21/meet-cutebetweenebpfandtracing)

**[9]**
- [Link](https://lwn.net/Articles/437981/)

**[10]**
- [Link](https://lwn.net/Articles/475043/)

**[11]**
- [Link](https://lwn.net/Articles/575444/)

**[12]**
- [Link](https://patchwork.ozlabs.org/patch/334837/)

**[13]**
- [Link](https://kernelnewbies.org/Linux_3.18)

**[14]**
- [Link](http://vger.kernel.org/vger-lists.html#netdev)

**[15]**
- [Link](http://www.brendangregg.com/blog/2015-05-15/ebpf-one-small-step.html)

**[16]**
- [Link](http://www.brendangregg.com/blog/2014-07-10/perf-hacktogram.html)

**[17]**
- [Link](https://www.kernel.org/doc/Documentation/networking/filter.txt)

**[18]**
- [Link](https://llvm.org/doxygen/classllvm_1_1IRBuilderBase.html)

**[19]**
- [Link](https://cilium.readthedocs.io/en/latest/bpf/)

**[20]**
- [Link](https://graphviz.org/)

**[21]**
- [Link](https://lore.kernel.org/lkml/CAHk-=wib9VSbwbS+N82ZPNtvt4vrvYyHyQduhF1PI:EMAIL/)

**[22]**
- [Link](https://patchwork.ozlabs.org/patch/1030266/)

**[23]**
- [Link](https://github.com/cilium/cilium)

**[24]**
- [Link](https://source.android.com/devices/architecture/kernel/bpf#files_available_in_sysfs)

**[25]**
- [Link](https://www.kernel.org/doc/Documentation/bpf/btf.rst)

**[26]**
- [Link](https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/commit/?id=c04c0d2b968ac45d6ef020316808ef6c82325a82)

**[27]**
- [Link](https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/Documentation/bpf/bpf_design_QA.rst#n90)

**[28]**
- [Link](https://www.kernel.org/doc/Documentation/bpf/bpf_design_QA.txt)

**[29]**
- [Link](http://www.man7.org/linux/man-pages/man2/bpf.2.html)

**[30]**
- [Link](https://lwn.net/Articles/599755/)

**[31]**
- [Link](https://www.iovisor.org/blog/2015/10/15/bpf-internals-ii)

**[32]**
- [Link](https://gcc.gnu.org/ml/gcc-patches/2004-08/msg01033.html)

**[33]**
- [Link](https://blogs.oracle.com/eschrock/debugging-on-amd64-part-one)

**[34]**
- [Link](https://github.com/sysstat/sysstat/pull/105)

**[35]**
- [Link](http://www.brendangregg.com/flamegraphs.html)

**[36]**
- [Link](https://github.com/spiermar/d3-flame-graph)

**[37]**
- [Link](https://lwn.net/Articles/132196/)

**[38]**
- [Link](http://phrack.org/issues/67/6.htmlarticle)

**[39]**
- [Link](https://www.kernel.org/doc/Documentation/kprobes.txt)

**[40]**
- [Link](https://www.ibm.com/developerworks/library/l-kprobes/index.html)

**[41]**
- [Link](https://lwn.net/Articles/499190/)

**[42]**
- [Link](https://events.static.linuxfound.org/images/stories/pdf/eeus2012_desnoyers.pdf)

**[43]**
- [Link](https://www.kernel.org/doc/Documentation/trace/uprobetracer.txt)

**[44]**
- [Link](https://www.kernel.org/doc/Documentation/trace/tracepoints.rst)

**[45]**
- [Link](https://lkml.org/lkml/2018/2/28/1477)

**[46]**
- [Link](https://www.kernel.org/doc/Documentation/admin-guide/mm/concepts.rst)

**[47]**
- [Link](http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html#brk)

**[48]**
- [Link](https://docs.oracle.com/cd/E23824_01/html/821-1448/zfspools-4.html#gentextid-11970)

**[49]**
- [Link](http://vger.kernel.org/~acme/perf/linuxdev-br-2018-perf-trace-eBPF)

**[50]**
- [Link](https://www.spinics.net/lists/linux-fsdevel/msg139937.html)

**[51]**
- [Link](https://lwn.net/Articles/787473/)

**[52]**
- [Link](http://www.brendangregg.com/blog/2014-12-31/linux-page-cache-hit-ratio)

**[53]**
- [Link](https://www.kernel.org/doc/ols/2002/ols2002-pages-289-300.pdf)

**[54]**
- [Link](https://github.com/torvalds/linux/blob/16d72dd4891fecc1e1bf7ca193bb7d5b9804c038/kernel/bpf/verifier.c#L7851-L7855)

**[55]**
- [Link](https://lwn.net/Articles/552904/)

**[56]**
- [Link](https://oss.oracle.com/~mason/seekwatcher/)

**[57]**
- [Link](https://github.com/facebook/folly/tree/master/folly/tracing)

**[58]**
- [Link](https://cilium.io/)

**[59]**
- [Link](https://cilium.io/blog/2018/07/10/bpf-load-balancer/)

**[60]**
- [Link](https://cilium.io/blog/2018/07/10/bpf-load-balancer/)

**[61]**
- [Link](https://www.kernel.org/doc/Documentation/networking/scaling.rst)

**[62]**
- [Link](https://patchwork.ozlabs.org/cover/910614/)

**[63]**
- [Link](https://lwn.net/Articles/659199/)

**[64]**
- [Link](https://patchwork.ozlabs.org/patch/610370/)

**[65]**
- [Link](https://www.kernel.org/doc/Documentation/networking/segmentation-offloads.rst)

**[66]**
- [Link](https://www.bufferbloat.net/)

**[67]**
- [Link](https://www.kernel.org/doc/Documentation/networking)

**[68]**
- [Link](https://flent.org/)

**[69]**
- [Link](https://www.wireshark.org/)

**[70]**
- [Link](https://blog.cloudflare.com/the-story-of-one-latency-spike/)

**[71]**
- [Link](http://www.brendangregg.com/DTrace/DTrace_Network_Providers.html)

**[72]**
- [Link](https://twitter.com/b0rk/status/765666624968003584)

**[73]**
- [Link](http://www.brendangregg.com/blog/2016-10-15/linux-bcc-tcptop.html)

**[74]**
- [Link](https://github.com/brendangregg/dtrace-cloud-tools/tree/master/net)

**[75]**
- [Link](http://www.brendangregg.com/blog/2016-10-12/linux-bcc-nodejs-usdt.html)

**[76]**
- [Link](https://github.com/mmarchini/node-linux-perf)

**[77]**
- [Link](http://www.brendangregg.com/blog/2016-10-12/linux-bcc-nodejs-usdt.html)

**[78]**
- [Link](https://golang.org/pkg/runtime/trace/)

**[79]**
- [Link](https://github.com/iovisor/bcc/issues/934)

**[80]**
- [Link](https://tour.golang.org/basics/4)

**[81]**
- [Link](https://github.com/iovisor/bpftrace/issues/740)

**[82]**
- [Link](https://github.com/iovisor/bcc/issues/1320#issuecomment-407927542)

**[83]**
- [Link](https://github.com/mmcshane/salp)

**[84]**
- [Link](https://wiki.tcl-lang.org/page/DTrace)

**[85]**
- [Link](https://www.gnu.org/software/libc/)

**[86]**
- [Link](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=767756)

**[87]**
- [Link](https://dev.mysql.com/doc/refman/5.7/en/dba-dtrace-ref-command.html)

**[88]**
- [Link](https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html)

**[89]**
- [Link](https://www.kernel.org/doc/Documentation/locking/mutex-design.txt)

**[90]**
- [Link](https://www.kernel.org/doc/Documentation/trace/ftrace.rst)

**[91]**
- [Link](https://github.com/rostedt/trace-cmd)

**[92]**
- [Link](https://github.com/iovisor/bpftrace/pull/534)

**[93]**
- [Link](https://lore.kernel.org/patchwork/patch/157488/)

**[94]**
- [Link](https://clearlinux.org/news-blogs/kata-containers-next-evolution-clear-containers)

**[95]**
- [Link](https://github.com/firecracker-microvm/firecracker/blob/master/docs/design.md)

**[96]**
- [Link](https://lwn.net/Articles/531114/)

**[97]**
- [Link](https://lwn.net/Articles/750313/)

**[98]**
- [Link](https://github.com/iovisor/kubectl-trace)

**[99]**
- [Link](https://github.com/kubernetes-incubator/metrics-server)

**[100]**
- [Link](https://prometheus.io/)

**[101]**
- [Link](https://www.kernel.org/doc/Documentation/cgroup-v1/cpuacct.txt)

**[102]**
- [Link](http://blog.codemonkey.ws/2007/10/myth-of-type-and-type-ii-hypervisors.html)

**[103]**
- [Link](http://www.brendangregg.com/blog/2017-11-29/aws-ec2-virtualization-2017.html)

**[104]**
- [Link](http://www.pcp.io/)

**[105]**
- [Link](http://getvector.io/)

**[106]**
- [Link](https://github.com/Netflix/vector)

**[107]**
- [Link](https://www.timeanddate.com/holidays/fun/yellow-pig-day)

---

This optimized version ensures that the text is clear, coherent, and professional. Each entry in the bibliography is now consistently formatted, and the glossary terms are clearly defined.