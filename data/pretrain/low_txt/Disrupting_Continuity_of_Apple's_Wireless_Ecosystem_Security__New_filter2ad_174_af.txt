### 5.6 Preventing Wi-Fi Password Entry via Settings App Crash

#### 5.6.1 The Vulnerability: Parsing Bug in PWS
During the development of our own PWS client, we identified a parsing vulnerability within the PWS protocol. Specifically, if the mandatory SSID or PSK key-value pair is removed from the dictionary sent in the PWS3 message (as shown in Figure 13), the requestor fails to parse the packet, resulting in a crash of the current application.

**Figure 13: PWS3 Message Highlighting Problematic Fields**
```json
{
  "dn": "",
  "gr": 1,
  "op": 5,
  "eh": [ "base64(SHA())", ... ],
  "ph": [ "base64(SHA())", ... ],
  "nw": "",
  "psk": ""
}
```

#### 5.6.2 The Attack: Preventing Password Entry for New Wi-Fi Networks
This attack exploits the identified vulnerability to crash the Settings app on iOS or close the Wi-Fi password window on macOS for any device within Bluetooth range that is currently entering a password for a new Wi-Fi network. Every device logged in with an Apple ID and with Bluetooth enabled sends out PWS advertisements when the user enters the Wi-Fi password view. We have demonstrated the effectiveness of this attack in a video Proof of Concept (PoC) [30].

#### 5.6.3 The Mitigation: Check for Missing Fields
Apple can mitigate this vulnerability by implementing checks for empty or missing fields and handling unexpected packets gracefully. Until a fix is provided, users can disable Bluetooth on their devices to prevent the attack.

### 6 Conclusion
Undocumented proprietary protocols are challenging to analyze due to the significant initial investment required for reverse engineering. However, such efforts have previously uncovered severe vulnerabilities [18, 23, 34, 44]. Our structured reverse-engineering method for Apple’s Continuity wireless ecosystem is a critical step that enables independent third-party security audits, thereby protecting the 1.5 billion users of Apple devices worldwide. Using this method, we investigated the protocols involved in Handoff (HO), Universal Clipboard (UC), and Wi-Fi Password Sharing (PWS) services, discovering several vulnerabilities that enable denial-of-service (DoS) attacks, device tracking, and man-in-the-middle (MitM) attacks. All these attacks can be executed by an attacker in proximity using low-cost hardware.

To facilitate future research, we urge manufacturers to document their proprietary protocols, as Apple has done with the HomeKit Accessory Protocol (HAP) stack. In the meantime, our detailed findings can serve as a foundation for analyzing other Continuity services, as certain protocol components (e.g., OPACK, Pair–Verify) appear to be shared across services, allowing follow-up work to build on our results.

### Responsible Disclosure
We have shared our findings with Apple as they were discovered. The disclosure timeline and progress vary by vulnerability (different follow-up IDs with Apple’s product security team). Specifically:
- DoS attack on HO (Section 5.2): November 27, 2019
- Linear IV tracking mitigation (Section 5.3): November 20, 2019
- Asynchronous hostname randomization (Section 5.4): November 27, 2019
- SSID spoofing and Wi-Fi password auto-fill attack (Section 5.5): February 10, 2020
- Settings app crash (Section 5.6): January 13, 2020

So far, Apple has published security updates for two vulnerabilities, as detailed in Table 3.

### Availability
As part of the Open Wireless Link project [43], we release the following open-source software artifacts:
1. A reverse-engineering toolkit for Continuity services (apple-continuity-tools)
2. A decryption utility for HO and UC BLE advertisements (handoff-ble-viewer)
3. An implementation of the HO and UC authentication protocol (handoff-authentication-swift)
4. An implementation of a PWS requestor including an OPACK (de)serializer written in Python (openwifipass)
5. Implementations of a PWS grantor and requestor written in Swift (wifi-password-sharing)

If the links do not work, prefix the respective project name with `https://github.com/seemoo-lab/`.

### Acknowledgments
This work was funded by the LOEWE initiative (Hesse, Germany) within the emergenCITY center and by the German Federal Ministry of Education and Research and the Hessen State Ministry for Higher Education, Research, and the Arts within their joint support of the National Research Center for Applied Cybersecurity ATHENE.

### References
[1] Daniele Antonioli, Nils Ole Tippenhauer, and Kasper B. Rasmussen. “The KNOB is Broken: Exploiting Low Entropy in the Encryption Key Negotiation of Bluetooth BR/EDR”. In: USENIX Security Symposium. 2019. URL: https://www.usenix.org/conference/usenixsecurity19/presentation/antonioli.

[2] Apple Inc. About the Security Content of Safari 13.0.5. 2020. URL: https://support.apple.com/en-us/HT210922.

[3] Apple Inc. Adopting Handoff. 2016. URL: https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/Handoff/AdoptingHandoff/AdoptingHandoff.html.

[4] Apple Inc. Apple Platform Security. 2020. URL: https://support.apple.com/guide/security.

[5] Apple Inc. Apple Reports Record First Quarter Results. 2020. URL: https://www.apple.com/newsroom/2020/01/apple-reports-record-first-quarter-results/.

[6] Apple Inc. HomeKit Accessory Protocol Specification. 2017. URL: https://developer.apple.com/support/homekit-accessory-protocol/.

[7] Apple Inc. How to Share Your Wi-Fi Password from Your iPhone, iPad, or iPod Touch. 2019. URL: https://support.apple.com/en-us/HT209368.

[8] Apple Inc. “Introducing iPad Apps for Mac”. In: Apple Worldwide Developers Conference (WWDC). 2019. URL: https://developer.apple.com/videos/play/wwdc2019/205/.

[9] Apple Inc. Use Continuity to Connect Your Mac, iPhone, iPad, iPod Touch, and Apple Watch. 2020. URL: https://support.apple.com/en-us/HT204681.

[10] Jean-Philippe Aumasson and Daniel J. Bernstein. “SipHash: A Fast Short-Input PRF”. In: INDOCRYPT. Springer, 2012.

[11] Xiaolong Bai, Luyi Xing, Nan Zhang, Xiaofeng Wang, Xiaojing Liao, Tongxin Li, and Shi-Min Hu. “Staying Secure and Unprepared: Understanding and Mitigating the Security Risks of Apple ZeroConf”. In: IEEE Symposium on Security and Privacy (S&P). 2016. DOI: 10.1109/SP.2016.45.

[12] Elad Barkan, Eli Biham, and Nathan Keller. “Instant Ciphertext-Only Cryptanalysis of GSM Encrypted Communication”. In: Advances in Cryptology (CRYPTO). 2003. DOI: 10.1007/978-3-540-45146-4_35.

[13] Ian Beer. A Very Deep Dive into iOS Exploit Chains Found in the Wild. 2019. URL: https://googleprojectzero.blogspot.com/2019/08/a-very-deep-dive-into-ios-exploit.html.

[14] Daniel J. Bernstein, Niels Duif, Tanja Lange, Peter Schwabe, and Bo-Yin Yang. “High-Speed High-Security Signatures”. In: Journal of Cryptographic Engineering (2012). DOI: 10.1007/s13389-012-0027-1.

[15] Bluetooth SIG. Bluetooth Core Specification v5.1. 2019. URL: https://www.bluetooth.com/specifications/bluetooth-core-specification/.

[16] Paulo Borges. BLESSED. URL: https://github.com/pauloborges/blessed.

[17] Solving the Captive Portal Problem on iOS. Butler, Ross. 2018. URL: https://medium.com/@rwbutler/solving-the-captive-portal-problem-on-ios-9a53ba2b381e.

[18] Guillaume Celosia and Mathieu Cunche. “Discontinued Privacy: Personal Data Leaks in Apple Bluetooth-Low-Energy Continuity Protocols”. In: Proceedings on Privacy Enhancing Technologies (2020). DOI: 10.2478/popets-2020-0003.

[19] Aldo Cortesi, Maximilian Hils, and Thomas Kriechbaumer. mitmproxy: a Free and Open Source Interactive HTTPS Proxy. URL: https://mitmproxy.org.

[20] Kim Jong Cracks. checkra1n: Jailbreak for iPhone 5s Through iPhone X, iOS 12.3 and Up. URL: https://checkra.in.

[21] Morris Dworkin. Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC. Special Publication 800-38D. NIST, 2007.

[22] Alexander Heinrich. “Analyzing Apple’s Private Wireless Communication Protocols with a Focus on Security and Privacy”. MA thesis. Technical University of Darmstadt, 2019.

[23] Alexander Heinrich, Matthias Hollick, Thomas Schneider, Milan Stute, and Christian Weinert. “PrivateDrop: Practical Privacy-Preserving Authentication for Apple AirDrop”. In: USENIX Security Symposium. To appear. 2021.

[24] Alexander Heinrich, Milan Stute, and Matthias Hollick. “BTLEmap: Nmap for Bluetooth Low Energy”. In: ACM Conference on Security and Privacy in Wireless and Mobile Networks. WiSec ’20. 2020. DOI: 10.1145/3395351.3401796.

[25] Saagar Jha. Making os_log Public on macOS Catalina. 2019. URL: https://saagarjha.com/blog/2019/09/29/making-os-log-public-on-macos-catalina/.

[26] Donald Knuth. The Art of Computer Programming. Vol. 2. Addison-Wesley, 1969.

[27] H. Krawczyk and P. Eronen. HMAC-based Extract-and-Expand Key Derivation Function (HKDF). RFC 5869. IETF, 2010. DOI: 10.17487/RFC5869.

[28] A. Langley, M. Hamburg, and S. Turner. Elliptic Curves for Security. RFC 7748. IETF, 2016. DOI: 10.17487/RFC2016.

[29] Chi-Yu Li, Guan-Hua Tu, Chunyi Peng, Zengwen Yuan, Yuanjie Li, Songwu Lu, and Xinbing Wang. “Insecurity of Voice Solution VoLTE in LTE Mobile Networks”. In: ACM Conference on Computer and Communications Security (CCS). 2015. DOI: 10.1145/2810103.2813618.

[30] Jannik Lorenz. Video PoC: iOS Settings Crash via Apple Wi-Fi Password Sharing. 2020. URL: https://youtu.be/MrPG5A1vSyE.

[31] Jannik Lorenz. Video PoC: Man-in-the-Middle Attack via Wi-Fi Password Sharing (Auto-Fill Password). 2020. URL: https://youtu.be/a9OE2uZTWow.

[32] Aanchal Malhotra. “Attacking the Network Time Protocol”. In: Network and Distributed System Security Symposium (NDSS). 2016. DOI: 10.14722/ndss.2016.23090.

[33] Dennis Mantz, Jiska Classen, Matthias Schulz, and Matthias Hollick. “InternalBlue – Bluetooth Binary Patching and Experimentation Framework”. In: ACM International Conference on Mobile Systems, Applications, and Services (MobiSys). 2019. DOI: 10.1145/3307334.3326089.

[34] Jeremy Martin, Douglas Alpuche, Kristina Bodeman, Lamont Brown, Ellis Fenske, Lucas Foppe, Travis Mayberry, Erik Rye, Brandon Sipes, and Sam Teplov. “Handoff All Your Privacy: A Review of Apple’s Bluetooth Low Energy Implementation”. In: (2019). DOI: 10.2478/popets-2019-0057.

[35] Ulrike Meyer and Susanne Wetzel. “A Man-in-the-Middle Attack on UMTS”. In: ACM Workshop on Wireless Security (WiSe). 2004. DOI: 10.1145/1023646.1023662.

[36] Micro:bit Educational Foundation. Micro:bit website. URL: https://microbit.org.

[37] Yoav Nir and Adam Langley. ChaCha20 and Poly1305 for IETF Protocols. RFC 7539. IETF, 2015. DOI: 10.17487/RFC7539.

[38] Ole André V. Ravnås. Frida: A World-Class Dynamic Instrumentation Framework. URL: https://frida.re.

[39] Adam Stubblefield, John Ioannidis, and Aviel D. Rubin. “Using the Fluhrer, Mantin, and Shamir Attack to Break WEP”. In: Network and Distributed System Security Symposium (NDSS). 2002.

[40] Milan Stute. “Availability by Design: Practical Denial-of-Service-Resilient Distributed Wireless Networks”. Ph.D. thesis. Technical University of Darmstadt, 2020. DOI: 10.25534/tuprints-00011457.

[41] Milan Stute, David Kreitschmann, and Matthias Hollick. “Demo: Linux Goes Apple Picking: Cross-Platform Ad hoc Communication with Apple Wireless Direct Link”. In: ACM Conference on Mobile Computing and Networking (MobiCom). 2018. DOI: 10.1145/3241539.3267716.

[42] Milan Stute, David Kreitschmann, and Matthias Hollick. “One Billion Apples’ Secret Sauce: Recipe for the Apple Wireless Direct Link Ad hoc Protocol”. In: ACM Conference on Mobile Computing and Networking (MobiCom). 2018. DOI: 10.1145/3241539.3241566.

[43] Milan Stute, David Kreitschmann, and Matthias Hollick. The Open Wireless Link Project. 2018. URL: https://owlink.org.

[44] Milan Stute, Sashank Narain, Alex Mariotto, Alexander Heinrich, David Kreitschmann, Guevara Noubir, and Matthias Hollick. “A Billion Open Interfaces for Eve and Mallory: MitM, DoS, and Tracking Attacks on iOS and macOS Through Apple Wireless Direct Link”. In: USENIX Security Symposium. 2019. URL: https://www.usenix.org/conference/usenixsecurity19/presentation/stute.

[45] Pierre B. Vandwalle, Tashbeeb Haque, Andreas Wolf, and Saravanan Balasubramaniyan. Method and Apparatus for Cooperative Channel Switching. U.S. Patent 9491593. 2016.

[46] Pierre B. Vandwalle, Christiaan A. Hartman, Robert Stacey, Peter N. Heerboth, and Tito Thomas. Synchronization of Devices in a Peer-to-Peer Network Environment. U.S. Patent 9473574. 2016.

[47] Mathy Vanhoef and Frank Piessens. “Key Reinstallation Attacks: Forcing Nonce Reuse in WPA2”. In: ACM Conference on Computer and Communications Security (CCS). 2017. DOI: 10.1145/3133956.3134027.

[48] Mathy Vanhoef and Eyal Ronen. “Dragonblood: Analyzing the Dragonfly Handshake of WPA3 and EAP-pwd”. In: IEEE Symposium on Security & Privacy (S&P). 2020. DOI: 10.1109/SP40000.2020.00031.

[49] Wireshark Foundation and contributors. Wireshark. URL: https://www.wireshark.org.