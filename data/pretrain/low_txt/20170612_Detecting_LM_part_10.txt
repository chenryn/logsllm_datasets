# When Execution is Successful: Points to be Confirmed

## Log Generation and Additional Communication Logs

### SDB File Installation
When an SDB file is installed, the following events are recorded:

**Event ID: 4688 (A new process has been created)**
- **Process Information:**
  - **Process Name:** `C:\Windows\System32\sdbinst.exe`
- **Confirmable Information:**
  - **Process Start/End Time and Date:** `Log Date`
  - **Name of User Who Executed the Process:** `Subject -> Account Name`
  - **Domain of User Who Executed the Process:** `Subject -> Account Domain`
  - **Presence of Privilege Escalation at Process Execution:** `Process Information -> Token Escalation Type`
  - **Process Return Value:** `Process Information -> Exit Status`

**Event ID: 4656 (A handle to an object was requested)**
- **Process Information:**
  - **Process Name:** `C:\Windows\System32\sdbinst.exe`
- **Confirmable Information:**
  - **SDB File:** `Object -> Object Name` (e.g., `C:\Windows\AppPatch\Custom\{[GUID]}.sdb`)
  - **Handle ID:** `Object -> Handle ID` (Used for association with other logs)
  - **Process ID of the Process that Requested the Handle:** `Process Information -> Process ID` (matches the ID of the process created in event 4688)

**Event ID: 4663 (An attempt was made to access an object)**
- **Confirmable Information:**
  - **Access Request Information:** `Access / Reason for Access`
  - **Required Accesses:** `"WriteData (or AddFile)" / "AppendData (or AddSubdirectory, or CreatePipeInstance)"`
  - **Success or Failure:** `Keywords ("Audit Success")`

**Event ID: 4658 (The handle to an object was closed)**
- **Confirmable Information:**
  - **Handle ID:** `Object -> Handle ID` (Used for association with other logs)

### Bypass Execution
If an application is executed as a bypass, the following events are recorded:

**Event ID: 4688 (A new process has been created)**
- **Process Information:**
  - **Process Name:** `[Command Executed as Bypass]`
- **Confirmable Information:**
  - **Process Start/End Time and Date:** `Log Date`
  - **Name of User Who Executed the Process:** `Subject -> Account Name`
  - **Domain of User Who Executed the Process:** `Subject -> Account Domain`
  - **Presence of Privilege Escalation at Process Execution:** `Process Information -> Token Escalation Type`
  - **ID of the Process of an Application Used for a Bypass That Executed the Application:** `Process Information -> Creator Process ID` (Matches the process ID of an application used for a bypass)
  - **Process Return Value:** `Process Information -> Exit Status` (e.g., `0x0` if successful, otherwise a different value according to the error)

**Sysmon Events:**
- **Event ID: 1 (Process Create)**
- **Event ID: 5 (Process Terminated)**
- **Confirmable Information:**
  - **Image:** `[Command Executed as Bypass]`
  - **Process Start/End Time and Date (UTC):** `UtcTime`
  - **Process Command Line:** `CommandLine`
  - **User Name:** `User`
  - **Process ID:** `ProcessId`
  - **Parent Process Name:** `ParentImage` (An application specified in SDB. An application that is normally assumed not to be the parent of a process becomes its parent process.)
  - **Parent Process ID:** `ParentProcessId` (Matches the process ID of an application specified in SDB that was executed first)

### MS14-068 Exploit
**Basic Information:**
- **Tool Name:** MS14-068 Exploit
- **Category:** Capturing the Domain Administrator Privilege and Account Credentials
- **Tool Overview:** Changes the privileges of the domain user to those of another user
- **Operating Condition:** Domain Required
- **Service:** Active Directory Domain Services

**Log Generation:**
- **Event ID: 4688 (A new process has been created)**
- **Event ID: 4689 (A process has exited)**
- **Confirmable Information:**
  - **Process Name:** `[File Name (ms14-068.exe)]`
  - **Process Start/End Time and Date:** `Log Date`
  - **Name of User Who Executed the Process:** `Subject -> Account Name`
  - **Domain of User Who Executed the Process:** `Subject -> Account Domain`
  - **Presence of Privilege Escalation at Process Execution:** `Process Information -> Token Escalation Type`
  - **Process Return Value:** `Process Information -> Exit Status`

**Event ID: 5156 (The Windows Filtering Platform has allowed a connection)**
- **Application Information:**
  - **Application Name:** `\device\harddiskvolume2\[File Name (ms14-068.exe)]`
  - **Process ID:** `[Process ID Recorded in Event 4688]`
  - **Network Information:**
    - **Direction:** `Outbound`
    - **Destination Address:** `[Domain Controller IP Address]`
    - **Destination Port / Protocol:** `88` / `6` (TCP)
- **Confirmable Information:**
  - **Source Port:** `Source Port` (Used for association with logs on the Domain Controller side)

**Event ID: 4656 (A handle to an object was requested)**
- **Confirmable Information:**
  - **Target File:** `Object -> Object Name`
  - **Handle ID:** `Object -> Handle ID` (Used for association with other logs)
  - **Access Request Information:** `Access` (`"WriteData (or AddFile)" / "AppendData (or AddSubdirectory, or CreatePipeInstance)"`)
  - **Success or Failure:** `Keywords ("Audit Success")`

**Event ID: 4768 (A Kerberos authentication ticket (TGT) was requested)**
- **Service Information:**
  - **Service Name:** `krbtgt`
  - **Additional Information:**
    - **Ticket Options:** `0x50800000`
- **Confirmable Information:**
  - **Executing Account:** `Account Information -> Account Name`
  - **Source Host:** `Network Information -> Client Address`
  - **Source Port:** `Network Information -> Client Port`

### Mimikatz (Golden Ticket)
**Basic Information:**
- **Tool Name:** Mimikatz (Golden Ticket)
- **Category:** Capturing the Domain Administrator Privilege and Account Credentials
- **Tool Overview:** Issues an unauthorized Kerberos ticket that is valid for an arbitrary period and grants access without additional authentication
- **Operating Condition:** Domain Not required
- **Service:** Active Directory Domain Service

**Log Generation:**
- **Event ID: 4688 (A new process has been created)**
- **Event ID: 4689 (A process has exited)**
- **Confirmable Information:**
  - **Process Name:** `[File Name (mimikatz.exe)]`
  - **Process Start/End Time and Date:** `Log Date`
  - **Name of User Who Executed the Process:** `Subject -> Account Name`
  - **Domain of User Who Executed the Process:** `Subject -> Account Domain`

**Sysmon Events:**
- **Event ID: 1 (Process Create)**
- **Event ID: 5 (Process Terminated)**
- **Confirmable Information:**
  - **Image:** `[File Name (mimikatz.exe)]`
  - **Process Start/End Time and Date (UTC):** `UtcTime`
  - **Process Command Line:** `CommandLine`
  - **User Name:** `User`
  - **Process ID:** `ProcessId`

**Prefetch Files:**
- **File name:** `C:\Windows\Prefetch\[File Name (MIMIKATZ.EXE)]-[RANDOM].pf`
- **Confirmable Information:**
  - **Last Execution Time and Date:** `Last Execution Time` (can be confirmed using WinPrefetchView)

**Event ID: 4769 (A Kerberos service ticket was requested)**
- **Confirmable Information:**
  - **Client IP Address:** `Network Information -> Client Address`
  - **Ticket Request Type:** (Two different pairs of ticket requests are output)
    - **Service Information:** `[Host Name]$, Ticket Option: 0x40810000`
    - **Service Information:** `krbtgt, Ticket Option: 0x60810010`

**Event ID: 4672 (Special privileges assigned to new logon)**
- **Confirmable Information:**
  - **Account with Escalated Privileges:** `Subject -> Account Name / Account Domain`
  - **Available Special Privileges:** `Special Privileges` (e.g., `SeSecurityPrivilege`, `SeRestorePrivilege`, `SeTakeOwnershipPrivilege`, etc.)

**Event ID: 4624 (An account was successfully logged on)**
- **Logon Type:** `3`
- **Confirmable Information:**
  - **Used Security ID:** `New Logon -> Security ID` (if the security ID used and the account do not correspond, this value is the security ID of the captured account)
  - **Account:** `Account Name / Account Domain`
  - **Host which Requested Logon:** `Network Information -> Source Network Address`

### Additional Notes
- **Additional Event Logs That Can Be Output:**
  - Logs of commands executed with escalated privileges may be recorded at the destination host.
  - The above registry values are deleted when the SDB file is uninstalled and will not always be left.
  - Some tools in which an SDB file is uninstalled to delete evidence have been confirmed.

This document provides a structured and detailed overview of the log generation and communication logs for various scenarios, including SDB file installation, bypass execution, MS14-068 exploit, and Mimikatz (Golden Ticket).