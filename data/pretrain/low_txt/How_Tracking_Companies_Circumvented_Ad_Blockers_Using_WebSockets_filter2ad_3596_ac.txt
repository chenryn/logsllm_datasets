### Introduction

The following data points and observations are part of a study on the use of WebSockets by Ad and Analytics (A&A) domains. The study highlights the potential privacy and security implications of these practices, especially in the context of the WebSocket Request Bypass (WRB) issue.

### Data Points

- **WebSocket Usage:**
  - 0.00
  - 0.01
  - 0.13
  - 0.92
  - 0.01
  - 0.01
  - -
  - %
  - 11.61
  - 1.63
  - 27.04
  - 21.34
  - 0.50
  - -

### Observations

The WRB issue was noticed by users [21], [42] and led to the patching of the WRB. However, to the best of our knowledge, the latter has not been reported. We examine the contents of WebSocket messages in detail in § IV-C.

### Table IV: Top 15 Initiator/Receiver Pairs

Table IV shows the top 15 initiator/receiver pairs that created A&A sockets (i.e., one or both of the parties must be an A&A domain), sorted by total WebSockets. Note that we aggregate cases where the initiator and receiver are the same and present them in the last row of Table IV.

Unsurprisingly, the vast majority of A&A sockets fall into this category (e.g., we observe 17,968 WebSockets initiated by Zopim to themselves). The cases where the initiator and receiver are different are more interesting, as these pairs of companies made explicit choices to interface via WebSockets. These cases are also more troubling from a privacy perspective, since the WRB may have prevented blockers from halting information flows to third-parties (assuming the initiator’s script was not blocked in the first place).

### C. Content Analysis

In this section, we investigate the content of messages being sent and received over the WebSockets. For sent messages, we aim to determine if any Personally Identifiable Information (PII) or fingerprinting-related browser state is being sent, as A&A domains can use this information to track users [43], [35], [1], [25], [15]. For received messages, we are interested in whether ad images or JavaScript (that can be used to further exfiltrate data or retrieve ads) are being downloaded.

**Table V: Items Sent and Received Over A&A Sockets**

Table V shows different items observed being sent and received over the A&A sockets. For comparison, we also present statistics on how frequently we observed those same items being sent/received over HTTP/S to any A&A domain. Many of the items, such as user-agents, cookies, and IP addresses, are self-explanatory. "User ID" refers to unique identifiers related to the user such as Account ID, Client ID, and User ID itself. "Browser" contains the fingerprinting variables used to identify Browser Type and Browser Family, whereas "Device" refers to Device Type and Device Family. "First seen" appears to be the date on which the user’s cookie was created. We extracted all of these variables from raw network traffic by manually inspecting the flows and building up a large library of regular expressions.

In all cases, we observe a greater percentage of private information being exfiltrated via WebSockets than over HTTP/S. This includes typical stateful-tracking data such as cookies, IP addresses, and unique identifiers. Perhaps more surprising are the ∼3.4% of WebSockets where browser fingerprinting data (e.g., screen size and orientation) was exfiltrated; we observed 59 initiator/receiver pairs involved in this practice, with 33across being the receiver in 97% of the pairs. Most surprising were the ∼1.5% of WebSockets where the entire DOM was serialized and uploaded, in this case to Hotjar, for the purposes of enabling session replays of user activity [13]. The DOM is potentially very privacy-sensitive, as it may reveal search queries, sensitive interests, unsent messages, etc., within the given webpage. Finally, we observed binary-encoded data being sent on 1% of WebSockets, but we were unable to decode it. The results in Table V highlight that the WRB allowed trackers to circumvent blockers and implement aggressive tracking techniques.

### Information Received Over A&A Sockets

Of the 78.5% WebSockets that did receive any data, WebSockets downloaded a greater percentage of HTML and JSON, as compared to JavaScript and images, which were downloaded more often over HTTP/S.

We did not observe any ad images being sent directly over WebSockets (we checked for binary and base64 encoded media files). However, we did find that Lockerdome was sending URLs to ad images in their WebSocket responses, along with metadata such as image captions, heights, and widths. These images were hosted on cdn1.lockerdome.com, which was not blacklisted in EasyList, meaning that the WRB was effectively allowing Lockerdome to circumvent ad blockers. Figure 6 shows three examples of these ads, which are emblematic of the low-quality “clickbait” that is served by unscrupulous ad networks and Content Recommendation Networks [8]. Furthermore, these are the same types of ads that were flagged by users in the WRB bug reports [21], [42].

### V. Related Work

#### The Online Ad Ecosystem

There are numerous empirical studies that have measured the online advertising ecosystem. Barford et al. [6] looked at the major ad networks, targeted ads, and associated user characteristics on the web by mapping the online adscape, whereas Rodriguez et al. measured the ad ecosystem on mobile devices [47]. Gill et al. [18] used browsing traces to study the economy of online advertising and discovered that most of the revenue is skewed towards a few big companies. Acar et al. [1] conducted crawls over the Alexa Top-3K to find user identifiers being shared across domains. Similarly, Cahn et al. [9] observed that <1% of the trackers are present on 75% of Alexa Top-10K websites. Falahrastegar et al. [16] take a look at online trackers across geographic regions.

Other empirical studies have focused more on the individual implications of targeted advertising. Guha et al. [19] developed a controlled and systematic method for measuring online ads on the web based on trained personas. Carrascosa et al. [10] used these methods to prove that advertisers use sensitive attributes about users when targeting ads. Bashir et al. [7] used retargeted ads to determine information flows between ad exchanges. Olejnik et al. [38] noticed winning bid prices being leaked during Real Time Bidding (RTB) auctions and used this information to discover ad exchanges involved in cookie matching, as well as the relative value of different users.

Researchers have also studied malicious and bad practices in the advertising ecosystem. Zarras et al. [49] studied malicious ad campaigns and the ad networks associated with them, whereas Bashir et al. [8] found that some advertisers are not following industry guidelines and are serving poor quality ads.

#### Tracking Mechanisms

Krishnamurthy et al. were one of the first to bring attention to the pervasiveness of trackers and their privacy implications for users [26]. Since then, several studies have documented the evolution of online tracking on the web [27], [28], [9], [14].

Advertisers have upgraded their tracking techniques over time. Some of the techniques they employ include persistent cookies [24], local state in browser plugins [45], [5], browsing history through extensions [46], and fingerprinting methods [32], [37], [43], [35], [1], [25], [15], [14]. To expand users’ interest profiles, advertisers share tracking information with each other through cookie matching [1], [38], [17], [7].

#### Anti-Tracking

To avoid pervasive tracking, users are increasingly adopting tools that block trackers and ads [41], [30]. Papaodyssefs et al. [39] proposed the use of private cookies to mitigate tracking, while Nikiforakis et al. added entropy to the browser to combat fingerprinting [34]. Merzdovnik et al. and Iqbal et al. performed large-scale measurements of blocking extensions and techniques to determine which are most effective [31], [22]. Snyder et al. [44] performed a browser feature usage survey and showed that ad and tracking blocking extensions do not block all standards equally, with WebSockets being blocked 65% of the times.

### VI. Discussion

#### The Good

Overall, our measurements demonstrate that the WRB was not leveraged to circumvent blockers by the vast majority of A&A companies. Although we find that ∼67% of WebSockets on the open web are initiated or received by A&A domains (see § IV-A), most of these companies have a legitimate reason to be using WebSockets. For example, Disqus, Zopim, Velaro, and Intercom all offer real-time services that are ideal use-cases for WebSockets (see § IV-B).

#### The Strange

A troubling finding of our study is that major ad and tracking platforms, like Google, Facebook, AddThis, and AppNexus, adopted WebSockets (see Tables II and IV). This is extremely concerning, as these companies dominate the online display ad ecosystem and are essentially omnipresent on the web. Yet strangely, we do not observe these major ad platforms initiating WebSocket connections after the release of Chrome 58 (when the WRB was patched, see § IV-A). The observational nature of our study prevents us from drawing causal conclusions about this finding, and indeed, it may be coincidental.

#### The Bad

Previous studies of online tracking have repeatedly identified “innovators” attempting to use bleeding-edge techniques to gain an advantage against privacy-conscious users. Examples include the use of persistent cookies and various kinds of fingerprinting [24], [45], [5], [46], [32], [37], [43], [35], [1], [25], [15], [14].

We identify three companies that appear to have been using the WRB to circumvent blocking extensions: 33across was harvesting large amounts of browser state that could be used for fingerprinting; Lockerdome was downloading URLs to ads (see § IV-C and Figure 6); and Hotjar was downloading the entire DOM from webpages. These results highlight an important facet of the WRB debacle: although users clamored for a patch after observing ads slipping through blockers [21], [42], our results demonstrate that invisible tracking was an equally important and disturbing implication of the WRB.

### Acknowledgments

We thank the anonymous reviewers for their helpful comments. This research was supported in part by NSF grants IIS-1408345 and IIS-1553088. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF.

### References

[1] G. Acar, C. Eubank, S. Englehardt, M. Juarez, A. Narayanan, and C. Diaz. The web never forgets: Persistent tracking mechanisms in the wild. In Proc. of CCS, 2014.
[2] WebSocket connections can’t be blocked. AdBlock Plus Issue Tracker, Dec. 2014. https://issues.adblockplus.org/ticket/1727.
[3] Put the YourAdChoices Icon to Work for You. Digital Advertising Alliance, 2017. http://youradchoices.com/learn.
[4] S. Arshad, A. Kharraz, and W. Robertson. Include me out: In-browser detection of malicious third-party content inclusions. In Proc. of Intl. Conf. on Financial Cryptography, 2016.
[5] M. Ayenson, D. J. Wambach, A. Soltani, N. Good, and C. J. Hoofnagle. Flash cookies and privacy ii: Now with html5 and etag respawning. Available at SSRN 1898390, 2011.
[6] P. Barford, I. Canadi, D. Krushevskaja, Q. Ma, and S. Muthukrishnan. Adscape: Harvesting and analyzing online display ads. In Proc. of WWW, 2014.
[7] M. A. Bashir, S. Arshad, , W. Robertson, and C. Wilson. Tracing information flows between ad exchanges using retargeted ads. In Proc. of USENIX Security Symposium, 2016.
[8] M. A. Bashir, S. Arshad, and C. Wilson. “Recommended For You”: A First Look at Content Recommendation Networks. In Proc. of IMC, 2016.
[9] A. Cahn, S. Alfeld, P. Barford, and S. Muthukrishnan. An empirical study of web diffusion enabled by browser extensions. In Proc. of WWW, 2016.
[10] J. M. Carrascosa, J. Mikians, R. Cuevas, V. Erramilli, and N. Laoutaris. I always feel like somebody’s watching me: Measuring online behavioural advertising. In Proc. of ACM CoNEXT, 2015.
[11] Chrome devtools protocol viewer. GitHub. https://developer.chrome.com/devtools/docs/debugger-protocol.
[12] S. Cowley and J. Pepitone. Google to pay record $22.5 million fine for Safari privacy evasion. CNNMoney, Aug. 2012. http://money.cnn.com/2012/08/09/technology/google-safari-settle/index.html.
[13] S. Englehardt. No boundaries: Exfiltration of personal data by session replay scripts. Freedom to Tinker, Nov. 2017. https://freedom-to-tinker.com/2017/11/15/no-boundaries-exfiltration-of-personal-data-by-session-replay-scripts.
[14] S. Englehardt and A. Narayanan. Online tracking: A 1-million-site measurement and analysis. In Proc. of CCS, 2016.
[15] S. Englehardt, D. Reisman, C. Eubank, P. Zimmerman, J. Mayer, A. Narayanan, and E. W. Felten. Cookies that give you away: The surveillance implications of web tracking. In Proc. of WWW, 2015.
[16] M. Falahrastegar, H. Haddadi, S. Uhlig, and R. Mortier. The rise of panopticons: Examining region-specific third-party web tracking. In Proc. of Trafﬁc Monitoring and Analysis, 2014.
[17] M. Falahrastegar, H. Haddadi, S. Uhlig, and R. Mortier. Tracking personal identifiers across the web. In Proc. of PAM, 2016.
[18] P. Gill, V. Erramilli, A. Chaintreau, B. Krishnamurthy, K. Papagiannaki, and P. Rodriguez. Follow the money: Understanding economics of online aggregation and advertising. In Proc. of IMC, 2013.
[19] S. Guha, B. Cheng, and P. Francis. Challenges in measuring online advertising systems. In Proc. of IMC, 2010.
[20] R. Hill. A companion extension to uBlock Origin. GitHub. https://github.com/gorhill/uBO-Extra.
[21] R. Hill. ws-gateway websocket circumvention ? #1936. GitHub, Aug. 2016. https://github.com/gorhill/uBlock/issues/1936.
[22] U. Iqbal, Z. Shafiq, and Z. Qian. The ad wars: Retrospective measurement and analysis of anti-adblock filter lists. In Proc. of IMC, 2017.
[23] chrome.webRequest.onBeforeRequest doesn’t intercept WebSocket requests. Chromium Bugs, May 2012. https://bugs.chromium.org/p/chromium/issues/detail?id=129353.
[24] S. Kamkar. Evercookie - virtually irrevocable persistent cookies. Samy.pl, September 2010. http://samy.pl/evercookie/.
[25] T. Kohno, A. Broido, and K. Claffy. Remote physical device fingerprinting. IEEE Transactions on Dependable and Secure Computing, 2(2):93–108, 2005.
[26] B. Krishnamurthy, D. Malandrino, and C. E. Wills. Measuring privacy loss and the impact of privacy protection in web browsing. In Proc. of SOUPS, 2007.
[27] B. Krishnamurthy, K. Naryshkin, and C. Wills. Privacy diffusion on the web: A longitudinal perspective. In Proc. of WWW, 2009.
[28] B. Krishnamurthy and C. Wills. Privacy leakage vs. protection measures: the growing disconnect. In Proc. of W2SP, 2011.
[29] T. Lauinger, A. Chaabane, S. Arshad, W. Robertson, C. Wilson, and E. Kirda. Thou shalt not depend on me: Analysing the use of outdated JavaScript libraries on the web. In Proc. of NDSS, 2017.
[30] M. Malloy, M. McNamara, A. Cahn, and P. Barford. Ad blockers: Global prevalence and impact. In Proc. of IMC, 2016.
[31] G. Merzdovnik, M. Huber, D. Buhov, N. Nikiforakis, S. Neuner, M. Schmiedecker, and E. R. Weippl. Block me if you can: A large-scale study of tracker-blocking tools. In Proc. of Euro S&P, 2017.
[32] K. Mowery and H. Shacham. Pixel perfect: Fingerprinting canvas in HTML5. In Proc. of W2SP, 2012.
[33] M. H. Mughees, Z. Qian, and Z. Shafiq. Detecting anti ad-blockers in the wild. PoPETs, 2017(3):130, 2017.
[34] N. Nikiforakis, W. Joosen, and B. Livshits. Privaricator: Deceiving fingerprinters with little white lies. In Proc. of WWW, 2015.
[35] N. Nikiforakis, A. Kapravelos, W. Joosen, C. Kruegel, F. Piessens, and G. Vigna. Cookieless monster: Exploring the ecosystem of web-based device fingerprinting. In Proc. of IEEE Symposium on Security and Privacy, 2013.
[36] R. Nithyanand, S. Khattak, M. Javed, N. Vallina-Rodriguez, M. Falahrastegar, J. E. Powles, E. D. Cristofaro, H. Haddadi, and S. J. Murdoch. Adblocking and counter blocking: A slice of the arms race. In Proc. of FOCI, 2016.
[37] L. Olejnik, C. Castelluccia, and A. Janc. Why Johnny can’t browse in peace: On the uniqueness of web browsing history patterns. In Proc. of HotPETs, 2012.
[38] L. Olejnik, T. Minh-Dung, and C. Castelluccia. Selling off privacy at auction. In Proc. of NDSS, 2014.
[39] F. Papaodyssefs, C. Iordanou, J. Blackburn, N. Laoutaris, and K. Papagiannaki. Web identity translator: Behavioral advertising and identity privacy with WIT. In Proc. of HotNets, 2015.
[40] pkalinnikov. Issue 2449913002: Support websocket in webrequest API. (closed). Chromium Code Reviews. https://codereview.chromium.org/2449913002/.
[41] E. Pujol, O. Hohlfeld, and A. Feldmann. Annoyed users: Ads and ad-block usage in the wild. In Proc. of IMC, 2015.
[42] Technobuffalo.com. EasyList Forum, July 2016. https://forums.lanik.us/viewtopic.php?p=110902.
[43] F. Roesner, T. Kohno, and D. Wetherall. Detecting and defending against third-party tracking on the web. In Proc. of NSDI, 2012.
[44] P. Snyder, L. Ansari, C. Taylor, and C. Kanich. Browser feature usage on the modern web. In Proc. of IMC, 2016.
[45] A. Soltani, S. Canty, Q. Mayo, L. Thomas, and C. J. Hoofnagle. Flash cookies and privacy. In AAAI Spring Symposium: Intelligent Information Privacy Management, 2010.
[46] O. Starov and N. Nikiforakis. Extended tracking powers: Measuring the privacy diffusion enabled by browser extensions. In Proc. of WWW, 2017.
[47] N. Vallina-Rodriguez, J. Shah, A. Finamore, Y. Grunenberger, K. Papagiannaki, H. Haddadi, and J. Crowcroft. Breaking for commercials: Characterizing mobile advertising. In Proc. of IMC, 2012.
[48] S. J. Vaughan-Nichols. Chrome is the most popular web browser of all. ZDNet, 2017. http://www.zdnet.com/article/chrome-is-the-most-popular-web-browser-of-all/.
[49] A. Zarras, A. Kapravelos, G. Stringhini, T. Holz, C. Kruegel, and G. Vigna. The dark alleys of Madison Avenue: Understanding malicious advertisements. In Proc. of IMC, 2014.