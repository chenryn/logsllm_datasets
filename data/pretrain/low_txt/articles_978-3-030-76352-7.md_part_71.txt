### Overcoming Limitations and Mitigating Risks

To overcome these limitations and mitigate risks, technical solutions such as the integration of privacy-preserving techniques in big data [5] have been introduced. However, privacy intrusions can also occur in the domains of social web, consumer and business analytics [6], and governmental surveillance. To align with the extended, collaborative, and sharing organizational model facilitated by SMACIT (Social, Mobile, Analytics, Cloud, and Internet of Things), legal regulations have evolved. The European Union General Data Protection Regulation (GDPR) [7] balances the relationship between end-users and data consumers, allowing data use for analytic purposes "by default" while empowering users to manage usage rights on their own data. This regulation also requires data consumers to report any data breaches and enhance transparency [8]. In summary, GDPR integrates rights and obligations for both data providers and data consumers, increasing the need for "proving" fair consents and fair usages in highly interconnected and distributed environments.

### Challenges in Adapting Cloud-Based Services Security and Privacy

These developments lead to several challenges in adapting the security and privacy of cloud-based services. First, data providers must manage how they distribute copies of their data among different service providers, keeping track of the usage permissions they have granted. Second, data providers must include a precise usage description when defining their terms of service. Third, service providers need to track any actions taken on the data to prove "fair usage." To address these challenges, we present a motivating example (Sect. 2), explore related works (Sect. 3), and define our Distributed Data-Centered Usage Protection service (Sect. 4), which extends usage-based access control to business knowledge. This architecture is evaluated in Sect. 5.

### Motivating Example

Our motivating example integrates collaborative business and end-user interactions through an online shopping platform (called OnlineShopping). This platform offers "manufactured on demand" products from different suppliers (e.g., Company A and Company B) to clients. These partners share and exchange product information or client personal information based on business process requirements. To reduce the carbon footprint, Company A uses 3D printers hosted by Company B to manufacture products as close as possible to the client. OnlineShopping also shares data with MyAnalytics, which uses customer data to provide recommendations and marketing analysis to OnlineShopping.

Alice browses the Online Shopping platform. The platform collects Alice's view history, connection information, and other details related to the products she intends to buy. Consequently, Alice will have to "share" various personal information, including her online activity, financial information, address, and purchase history with OnlineShopping, MyAnalytics, and the product suppliers (Company A and B).

OnlineShopping is responsible for protecting Alice's personal information. According to GDPR, OnlineShopping must also prove that it uses and protects this information according to the exact Terms of Service (ToS). When exchanging data with its partners (MyAnalytics, Company A, or B), OnlineShopping must check the business purpose of the external service requesting information to verify if it is allowed according to Alice’s consent. OnlineShopping must also transfer these ToS to the service provider.

Alice also interacts with other online platforms, Personal Information Management Systems (PIMSs), and social networks using her computer or smartphone. Consistently protecting her personal information is challenging as she interacts with different systems, each with its own ToS. Moreover, she cannot easily verify where her personal information is protected and whether it is used according to the ToS she accepted.

Based on this motivating example, we identify different requirements. First, Alice needs to describe her information system globally, including protection requirements for each logical asset and manage asset replications. Second, OnlineShopping needs to get Alice’s consent, define precise "fair usages," and log the different operations and exchanges associated with the information it receives. These requirements call for a data-centric usage control security service capable of managing data protection and usage control according to the approved Terms of Service.

### Related Works

Collaborative business and SMACIT services provide collaboration contracts or Terms of Service (ToS) that define how information will be used and shared. For example, "Terms of Service Didn't Read" (http://tosdr.org) evaluates the privacy level of services based on criteria such as ToS readability, business transfer, licensing changes notification, anonymity, and tracking features. TM Forum has proposed an evaluation template to establish ToS and rate the privacy and protection score of new SaaS services. These ToS and collaboration contracts state business purposes and information-sharing strategies. Unfortunately, access control functions, such as Access Control Lists, Role-Based Access Control, and even Usage-Based Access Control, do not use these "business" motivations.

Moreover, SMACIT changes data usage: data analytics and mining processes extract knowledge and generate new data to serve business goals, potentially creating privacy breaches. GDPR empowers users with their personal data protection, requiring service providers to state the usages they will achieve for particular data, manage user consents accordingly, and report any security failures to the data owner. This involves reporting and proving any actions on data to show that the real usage complies with the usages the data provider has accepted. Several works have been developed to fit GDPR requirements, such as integrating GDPR obligations into traditional Enterprise Architecture models [11], managing data collection and tracking data flows between stakeholders [12], and using Blockchain immutability to allow proving fair usages [13-17].

Although these works provide a rich background for data protection, none of them allows integrating business information norms or managing consistent protection on multiple copies of the same data "consumed" by different cloud services, exchanged, and shared by different cloud stakeholders.

### A Distributed Usage Control Architecture

Based on this rich background, GDPR constraints, and requirements from our motivating example, we identify three main challenges to provide consistent data protection in open SMACIT services environments. First, protection requirements must be managed consistently, even though the same asset is replicated in different information systems. Second, fair usage involves integrating business knowledge to precisely identify how assets are used. Third, usage governance and tracking are required by both data providers and data consumers to "prove" that data are used and protected according to what has been approved.

We leverage a service-oriented security architecture that outsources security requirements and protection means in policies to build our Data-Centered Usage-Based Protection Service (DUP service). Plugged into Information Systems via an Information System interface component, our DUP service relies on three interconnected core components (Fig. 1):

- **Information System Meta-model:** Stores the Information System description, including logical data assets, business processes, and their associated protection policies, as well as business agreements between parties. It also describes how the Information System is implemented.
- **Usage Rule Manager:** Describes usage consents. Consents are defined by setting proper asset protection mechanisms and specifying the operations that can be performed on a given asset.
- **Usage Governance Manager:** Publishes these consents in a blockchain to support consent immutability and track operation execution, ensuring asset protection and usage can be governed.

#### Information System Meta-model

To manage current asset protection and allowed usages, we design an Information System (IS) meta-model to store the IS collaborative ecosystem description, identifying different service providers and their relationships, the different data assets, and the description of their replicated content. The IS meta-model is organized into three main layers:

- **Organization Layer:** Gathers information on different actors (human beings, enterprises, organizational units) that own, store, or process logical assets with metadata descriptions. Contracts, including security agreements, are associated with the relationships between actors. Actors are also associated with different business areas/organizational units according to their competencies or the Business Processes and business activities they manage.
- **Logical Layer:** Gathers descriptions of both logical data assets and how they may be processed. Logical data assets are described using metadata and are associated with security requirements based on their sensitivity level. These data assets can be combined to form more complex assets, aggregating atomic ones. Processes are defined using abstract services, described using activity patterns related to their business domain. Each abstract service is characterized by its interface, described using data objects associated with logical assets.
- **Implementation Layer:** Stores the identification of the real physical instances associated with the data objects. These physical copies of logical assets are called "containers." These containers are consumed by "concrete services" associated with IT or manual application services. Each concrete service is provided by an actor and has its own security policy, which may be inherited from the data consumer’s generic security policy, enriched with the target usage of the data object. In a multi-tenant cloud implementation, each concrete service deployment may use other support services (cloud or network services), using a "support" relationship.

An asset manager and a service manager component are defined to manage operations on assets and services in this multi-layered architecture.

#### Consistent Usage Rules Management

The Usage Rule Manager is designed to support consistent protection and usage control on multiple copies of a data asset according to its sensitivity and value. Each asset protection is defined in a Requirement of Protection (RoP) policy. While [19] defines security mechanisms, protocols, objectives, algorithms, and credentials used to protect a system, it does not focus on data protection requirements. To overcome this, we design a protection goal ontology, gathering system protection goals and specific data protection goals. These data protection goals expand traditional security services with privacy management and include dedicated countermeasures adapted to the SMACIT context (Fig. 2). Protection consistency is continuously checked by comparing the data owner's RoP and the data consumer's Quality of Protection (QoP)/Terms of Service (ToS).

Since security breaches can also result from how assets are processed and shared, we assume that Terms of Usage must be defined, setting specific assertions to specify how assets are used and protected. The UCONABC model [18] relies on a usage ontology to define rights associated with basic usage operations (Create, Read, Update, Delete), subjects who will get a usage right, objects which define the asset on which the usage right is granted, obligations associated with protection means, and restrictions associated with time or environmental constraints. We expand this ontology (Fig. 3) to:

- Integrate more complex data-related operations to define more precisely how data are processed, exchanged, replicated, and stored.
- Integrate organizational knowledge to define the subject (a user, a group, or an organizational entity).
- Integrate business knowledge to define more precisely the usage context, specifying a process motivation, process purpose, and business areas.

Our consent assertion model is based on our ontology. Formally, a consent is associated with a set of Usage Control Assertions (UCA) double-approved by the asset owner (who provides the asset) and the asset consumer (who uses the asset). As usage can be defined globally, an assertion development process is set to allow the data consumer to generate more precise usage assertions from an original consent. Each of these assertions is defined as a tuple (Eq. 1):

\[ \text{UCA} = (\text{AS}, \text{AO}, \text{S}, \text{O}, \text{U}, \text{PC}, \text{OSP}, \text{CSP}) \]

- **AS** defines the assertion status, i.e., if the assertion is originated from the original consent or inferred from another assertion.
- **AO** defines the asset owner related to the rule. This owner is specified as a set of two attributes:
  - **Assignee attribute** defines the organizational entity or simple user owning the asset.
  - **Assignee status** defines if it is the original owner or a delegatee representing the owner.
- **S** is the subject, i.e., the party that will get the right on the asset. This subject can be an organizational entity, a simple user, or an IT business service in charge of part of a business process. Similarly to the asset's owner description, it includes two attributes:
  - **Assignee attribute** defines the organizational entity or simple user that may use the asset.
  - **Assignee status** defines if it is the original owner or a delegatee representing the initial asset consumer.
- **O** is the object, i.e., the exchanged asset whose usage is regulated by the assertion. This exchanged asset is associated with a unique identifier shared by both parties and related to the corresponding logical assets stored in each party's information system.
- **U** is the usage purpose regulated by the assertion. It is specified as a set of attributes:
  - **BuP** denotes the business purpose. It can refer to a business area or a more precise business activity.
  - **PrP** denotes the process purpose (including the process motivation and the process control purpose).
  - **ACP** denotes the asset consumption purpose. It can refer to a physical operation (such as read, write) or to logical asset consumption operations (transfer, process, store, show) and data-related operations (data fusion, data removal, data replication).
- **PC** is the Protection Context. It is defined by a set of attributes:
  - **PG** denotes the protection goal, i.e., the security service (confidentiality, availability, integrity, non-repudiation) or the quality of service that must be provided by the subject.
  - **CCtX** denotes the countermeasures context, i.e., the set of countermeasures that must be deployed to provide consistent protection.
- **OSP** defines the Asset Owner Signing Party. It is specified thanks to two attributes:
  - **OSC** is the signing owner authentication certification. When an assertion is inferred from a global one, this attribute refers to the "parent assertion."
  - **OSK** is the owner signature parameters.
- **CSP** defines the Asset Consumer Signing Party. It is specified thanks to two attributes:
  - **CSC** is the signing consumer authentication certification. When an assertion is inferred from a global one, this attribute refers to the "parent assertion."
  - **CSK** is the consumer signature parameters.

Thanks to the business usage specification stored in the assertion and the process description stored in the meta-model, Terms of Usage assertions are inferred by the data consumer to define more precise assertions associated with the different services supporting business activities.

From our motivating example, when Alice consents to share contact information with OnlineShopping (OLS for short) while ordering a product as a gift to be delivered to her brother Bob, two usage assertions are originally defined:

- One is defined for Alice's contact information, which will be used by the ordering and billing processes (Eq. 2).
- The other is defined for Bob's contact information, which will be used by the delivery process. This assertion accepts that this last asset can be shared with other parties involved in the delivery process (Eq. 3).

\[ \text{UCA1} = (\text{AS}= \text{Original}, \text{AO}= \text{Alice}, \text{S}= \text{OLS}, \text{O}= \text{Alice's contact information Id}, \text{U-BuP}= \text{Order}, \text{U-ACP}= \text{Process}, \text{PC-PG}= \text{Confidentiality+integrity}, \text{OSP-OSC}= \text{Direct}, \text{OSP-OSK}= \text{Alice key}, \text{CSP-CSC}= \text{direct}, \text{CSP-CSK}= \text{OLS key}) \]

\[ \text{UCA2} = (\text{AS}= \text{Original}, \text{AO}= \text{Alice}, \text{S}= \text{OLS}, \text{O}= \text{Bob's contact information Id}, \text{U-BuP}= \text{Deliver}, \text{U-ACP}= \text{delegate}, \text{U-ACP}= \text{Process}, \text{PC-PG}= \text{Confidentiality+integrity}, \text{OSP-OSC}= \text{Inferred}, \text{OSP-OSK}= \text{Bob's consent assertion key}, \text{CSP-CSC}= \text{direct}, \text{CSP-CSK}= \text{OLS key}) \]

OnlineShopping infers these assertions to generate sub-consent assertions associated with more precise activities and sub-contractors. For example, OnlineShopping will extract the Deliver Business Usage Purpose from UCA2 to select the corresponding Business Process and its related sub-processes from its information system meta-model. This extracted Delivery Business Process consists of two sub-processes: the order delivery preparation process managed by OnlineShopping and the Client Final Delivery process.