# WMAP: Metasploit Goes Web

## Introduction
- This presentation does not follow a strict agenda.
- There will be no references to Sun Tzu's "The Art of War."
- We will not delve into the history of web scanners.

### Presenter
- **Efrain Torres**
  - Over 10 years of experience in IT security.
  - Member of the Metasploit team.
  - Contact: et [at] metasploit.com

## WMAP Overview
- **WMAP** (Web Mapping and Assessment Platform) is a set of auxiliary modules for Metasploit, designed for web application assessment.
  - Modules can be run manually or automated.
  - The project is still in its early stages, but it is progressing steadily.
  - It was initially announced at SecTor 2008 as "Metasploit Prime."

### Motivation
- **Challenges with Current Tools:**
  - Many tools are easily detected by IDS/IPS.
  - They often require crawling as a user before attacking.
  - Some tools are limited to specific environments, such as Windows.
  - They may be tied to a particular browser, like Internet Explorer.
  - There is an overemphasis on flashy features rather than practical utility.
  - Vulnerability classification and risk assessment can be inconsistent and confusing.

### Objectives
- To integrate testing methods with exploitation techniques.
- To provide a useful tool for assessing HTTP/S-related vulnerabilities.
- To serve as an extension of the Metasploit framework, not just a standalone scanner.

### Tool Philosophy
- **Diversity in Tools:**
  - Each tool has its strengths and weaknesses.
  - Choose the tool that best fits your needs.
  - "A Poor Workman Blames His Tools" â€” focus on using the right tool effectively.
  - Examples of excellent tools include W3AF and SQLmap.

### Key Features
- **Multiple Clients and Proxies:**
  - Supports any proxy.
- **Metasploit Database Integration:**
  - Stores and manages target information.
- **Simple Modules:**
  - Written in Ruby.
- **Module Types:**
  - Discovery and Information Gathering.
  - Files and Directories.
  - SQL Injection.
  - XPATH Injection.
  - Web Services.
  - WebDAV.
  - And more.

### Building a WMAP Module
1. Start with a Metasploit module (not limited to auxiliary or HTTP).
2. Include the appropriate mixin type.
3. Integrate with WMAPScanType, Scanner, and other necessary mixins.

### Example Commands
- **db_wmap:**
  - `msf > load db_wmap`
  - `msf > db_create /path/to_db`
  - `msf > db_connect /path/to_db`
- **db_wmap commands:**
  - `wmap_reports`: List all reported results.
  - `wmap_run`: Automatically test/exploit everything.
  - `wmap_targets`: List all targets in the database.
  - `wmap_website`: List website structure.

### Module Types
- **WMAPScanServer, WMAPScanFile, WMAPScanDir, WMAPScanQuery, WMAPScanUniqueQuery, WMAPScanBody, WMAPScanHeaders, WMAPScanGeneric.**
- **Example Module:**
  - `wmap_generic_email_extract.rb`

### Cross-Protocol Attacks
- WMAP provides new building blocks for cross-protocol attacks.
- Be creative in how you use these modules.

### Specific Modules
- **SQL Injection:**
  - `wmap_sqlmap.rb` (uses SQLmap by Bernardo Damele A. G).
  - `wmap_blind_sql_query.rb` (basic detection).
  - `lucky_punch.rb` (massive SQL injection attack technique from April 2008).
- **XPATH Injection:**
  - `xphat.rb` (HTTP Blind XPATH 1.0 Injector).
  - `soap.rb` (HTTP SOAP Verb/Noun Brute Force Scanner).
- **Files and Directories:**
  - `wmap_backup_file.rb`, `wmap_brute_dirs.rb`, `wmap_copy_of_file.rb`, etc.
- **Additional Server Modules:**
  - `wmap_verb_auth_bypass.rb` (bypass authentication by modifying HTTP method).
  - `wmap_vhost_scanner.rb` (brute force vhost).
  - `wmap_ssl.rb` (pull vhost from server and grab info from certificate).

### Why Use WMAP
- **Seamless Transition:**
  - Easily move from web testing to exploitation.
  - Find files and directories that other scanners might miss.
  - Transition from SQL injection to XSS and back.
  - Use MSF payloads/file exploits to upload to web directories.
- **Continuous Testing:**
  - Feed results back into the scan engine.
  - Use the proxy for continuous testing.
  - Store and report results in the database.

### Demo
- A live demonstration will be provided.

### Conclusion
- Special thanks to HD, the Metasploit team, and all contributors.
- Questions? Contact: et [at] metasploit.com

---

This version of the text is more organized, concise, and professional, making it easier to understand and follow.