### Go 语言实战

**推荐语**

- “探索、学习并使用 Go 语言的简洁而全面的指导手册。”
  ——摘自 Hugo 创立者 Steven Francia 为本书写的序

- “这本权威的书为所有想要开始学习 Go 语言的人提供了一站式的指引。”
  ——Sam Zaydel，RackTop Systems

- “写得太好了！完整介绍了 Go 语言。强烈推荐。”
  ——Adam McKay，SUEZ

- “这本书把 Go 语言不寻常的部分讲得通俗易懂。”
  ——Alex Vidal，Atlassian 的 HipChat 团队

**简介**

即便不处理类似可扩展的 Web 并发或者实时性能等复杂的系统编程问题，应用程序开发也是一件非常困难的事情。尽管一些工具和框架可以解决常见的问题，但 Go 语言却以一种更加自然且高效的方式正确处理了这类问题。由谷歌公司开发的 Go 语言，在基础设施中依赖高性能服务的初创公司和大企业中提供了足够的能力。

本书的目标读者是已经有一定其他编程语言经验，希望开始学习 Go 语言或更深入了解其内部机制的中级开发者。本书将提供一个专注、全面且符合习惯的视角，关注 Go 语言的规范和实现，涉及语法、类型系统、并发、通道和测试等主题。

**主要内容**

- Go 语言规范和实现
- Go 语言的类型系统
- Go 语言的数据结构内部实现
- 测试和基准测试

**读者背景**

本书假设读者是熟练使用其他语言（如 Java、Ruby、Python、C# 或 C++）的开发者。

**作者简介**

- William Kennedy 是一位资深软件开发者，也是博客 GoingGo.Net 的作者。
- Brian Ketelsen 和 Erik St. Martin 是全球 Go 语言大会 GopherCon 的组织者，也是 Go 语言框架 Skynet 的联合作者。

**出版信息**

- **著者**：[美] William Kennedy, Brian Ketelsen, Erik St. Martin
- **译者**：李兆海
- **审校**：谢孟军
- **责任编辑**：杨海玲
- **责任印制**：焦志炜
- **出版社**：人民邮电出版社
- **网址**：www.ptpress.com.cn
- **美术编辑**：董志桢
- **ISBN**：FM44535Go语言实战.indd 1-3
- **出版日期**：2017 年 3 月第 1 版
- **印刷日期**：2017 年 3 月北京第 1 次印刷
- **定价**：59.00 元
- **读者服务热线**：(010)81055410
- **印装质量热线**：(010)81055316
- **反盗版热线**：(010)81055315

**译者序**

Go 语言是由谷歌公司在 2007 年开始开发的一门语言，目的是在多核心时代高效编写网络应用程序。Go 语言的创始人 Robert Griesemer、Rob Pike 和 Ken Thompson 都是在计算机发展中作出过重要贡献的人。自从 2009 年 11 月正式公开发布后，Go 语言迅速席卷了整个互联网后端开发领域，社区里不断涌现出类似 vitess、Docker、etcd、Consul 等重量级的开源项目。

在 Go 语言发布后，我就被其简洁、强大的特性所吸引，并于 2010 年开始在技术聚会上宣传 Go 语言，当时所讲的题目是《Go 语言：互联网时代的 C》。现在看来，Go 语言确实很好地解决了互联网时代开发的痛点，而且入门门槛不高，是一种上手容易、威力强大的工具。试想一下，不需要学习复杂的异步逻辑，使用习惯的顺序方法，就能实现高性能的网络服务，并充分利用系统的多个核心，这是多么美好的一件事情。

本书是国外 Go 社区多年经验积累的成果。本书默认读者已经具有一定的编程基础，希望更好地使用 Go 语言。全书以示例为基础，详细介绍了 Go 语言中的一些比较深入的话题。对于有经验的程序员来说，很容易通过学习书中的例子来解决自己实际工作中遇到的问题。辅以文字介绍，读者会对相关问题有更系统的了解和认识。翻译过程中我尽量保持了原书的叙述方法，并加强了叙述逻辑，希望读者会觉得清晰易读。

在翻译本书的过程中，感谢人民邮电出版社编辑杨海玲老师的指导和进度安排，让本书能按时与读者见面。感谢谢孟军对译稿的审校，你的润色使译文读起来流畅了很多。尤其要感谢我老婆对我的支持，感谢你能理解我出于热爱才会“匍匐”在计算机前码字。

最后，感谢读者购买此书。希望读者在探索 Go 语言的道路上，能够享受到和我一样的乐趣。

**序**

在计算机科学领域，提到不同寻常的人，总会有一些名字会闪现在你的脑海中。Rob Pike、Robert Griesmier 和 Ken Thompson 就是其中几个。他们三个人负责构建过 UNIX、Plan 9、B、Java 的 JVM HotSpot、V8、Strongtalk、Sawzall、Ed、Acme 和 UTF8，此外还有很多其他的创造。

在 2007 年，这三个人凑在一起，尝试一个伟大的想法：综合他们多年的经验，借鉴已有的语言，来创建一门与众不同的、全新的系统语言。他们随后以开源的形式发布了实验成果，并将这种语言命名为“Go”。如果按照现在的路线发展下去，这门语言将是这三个人最有影响的一项创造。

当人们聚在一起，纯粹是为了让世界变得更好的时候，往往也是他们处于最佳状态的时候。在 2013 年，为了围绕 Go 语言构建一个更好的社区，Brian 和 Erik 联合成立了 Gopher Academy，不久后 Bill 和其他一些有类似想法的人也加入进来。他们首先注意到，社区需要有一个地方可以在线聚集和分享素材，所以在 Slack 上创立了 Go 讨论版和 Gopher Academy 博客。随着时间的推移，社区越来越大，他们创建了世界上第一个全球 Go 语言大会——GopherCon。随着与社区更深入地交流，他们意识到还需要为广大想学习这门新语言的人提供一些资源，所以他们开始着手写一本书，就是现在你手里拿的这本书。

为 Go 社区贡献了大量的时间和精力的三位作者，出于对 Go 语言社区的热爱写就了这本书。我曾在 Bill、Brian 和 Erik 身边，见证了他们在不同的环境和角色下（作为 Gopher Academy 博客的编辑，作为大会组织者，甚至是在他们的日常工作中，作为父亲和丈夫），都会认真负责地撰写和修订本书。对他们来说，这不仅仅是一本书，也是对他们心爱的语言的献礼。他们并不满足于写一本“好”书。他们编写、审校，再写、再修改，再三推敲每页文字、每个例子、每一章，直到认为本书的内容配得上他们珍视的这门语言。

离开一门使用舒服、掌握熟练的语言，去学习一门不仅对自己来说，对整个世界来说都是全新的语言，是需要勇气的。这是一条人迹罕至，沿途充满 bug，只有少数先行者熟悉的路。这里充满了意外的错误，文档不明确或者缺失，而且缺少可以拿来即用的代码库。这是拓荒者、先锋才会选择的道路。如果你正在读这本书，那么你可能正在踏上这段旅途。

本书自始至终是为你——本书的读者精心制作的一本探索、学习和使用 Go 语言的简洁而全面的指导手册。在全世界，你也不会找到比 Bill、Brian 和 Erik 更好的导师了。我非常高兴你能开始探索 Go 语言的优点，期望能在线上和线下大会上遇到你。

Steve Francia  
Go 语言开发者，Hugo、Cobra、Viper 和 SPF13-VIM 的创建人

**前言**

那是 2013 年 10 月，我刚刚花几个月的时间写完 GoingGo.net 博客，就接到了 Brian Ketelsen 和 Erik St. Martin 的电话。他们正在写这本书，问我是否有兴趣参与进来。我立刻抓住机会，参与到写作中。当时，作为一个 Go 语言的新手，这是我进一步了解这门语言的好机会。毕竟，与 Brian 和 Erik 一起工作、一起分享获得的知识，比我从构建博客中学到的要多得多。

完成前四章后，我们在 Manning 早期访问项目（MEAP）中发布了这本书。很快，我们收到了来自语言团队成员的邮件。这位成员对很多细节提供了评审意见，还附加了大量有用的知识、意见、鼓励和支持。根据这些评审意见，我们决定从头开始重写第二章，并对第四章进行了全面修订。据我们所知，对整章进行重写的情况并不少见。通过这段重写的经历，我们学会要依靠社区的帮助来完成写作，因为我们希望能立刻得到社区的支持。

自那以后，这本书就成了社区努力的成果。我们投入了大量的时间研究每一章，开发样例代码，并和社区一起评审、讨论并编辑书中的材料和代码。我们尽了最大的努力来保证本书在技术上没有错误，让代码符合通用习惯，并且使用社区认为应该有的方式来教 Go 语言。同时，我们也融入了自己的思考、自己的实践和自己的指导方式。

我们希望本书能帮你学习 Go 语言，不仅是当下，就是多年以后，你也能从本书中找到有用的东西。Brian、Erik 和我总会在线上帮助那些希望得到我们帮助的人。如果你购买了本书，谢谢你，来和我们打个招呼吧。

William Kennedy

**致谢**

我们花了 18 个月的时间来写本书。但是，离开下面这些人的支持，我们不可能完成这本书：我们的家人、朋友、同学、同事以及导师，整个 Go 社区，还有我们的出版商 Manning。

当你开始撰写类似的书时，你需要一位编辑。编辑不仅要分享喜悦与成就，而且要不惜一切代价，帮你渡过难关。Jennifer Stout，你才华横溢，善于指导，是很棒的朋友。感谢你这段时间的付出，尤其是在我们最需要你的时候。感谢你让这本书变成现实。还要感谢为本书的开发和出版作出贡献的 Manning 的其他人。

每个人都不可能知晓一切，所以需要社区里的人付出时间和学识。感谢 Go 社区以及所有参与本书不同阶段书稿评审并提供反馈的人。特别感谢 Adam McKay、Alex Basile、Alex Jacinto、Alex Vidal、Anjan Bacchu、Benoît Benedetti、Bill Katz、Brian Hetro、Colin Kennedy、Doug Sparling、Jeffrey Lim、Jesse Evans、Kevin Jackson、Mark Fisher、Matt Zulak、Paulo Pires、Peter Krey、Philipp K. Janert、Sam Zaydel 以及 Thomas O’Rourke。还要感谢 Jimmy Frasché，他在出版前对本书书稿做了快速、准确的技术审校。

这里还需要特别感谢一些人。

Kim Shrier，从最开始就在提供评审意见，并花时间来指导我们。我们从你那里学到了很多，非常感谢。因为你，本书在技术上达到了更好的境界。

Bill Hathaway 在写书的最后一年，深入参与，并矫正了每一章。你的想法和意见非常宝贵。我们必须给予 Bill“第九章合著者”的头衔。没有 Bill 的参与、天赋以及努力，就没有这一章的存在。

我们还要特别感谢 Cory Jacobson、Jeffery Lim、Chetan Conikee 和 Nan Xiao 为本书持续提供了评审意见和指导，感谢 Gabriel Aszalos、Fatih Arslan、Kevin Gillette 和 Jason Waldrip 帮助评审样例代码，还要特别感谢 Steve Francia 帮我们作序，认可我们的工作。

最后，我们真诚地感谢我们的家人和朋友。为本书付出的时间和代价，总会影响到你所爱的人。

William Kennedy

我首先要感谢 Lisa，我美丽的妻子，以及我的五个孩子：Brianna、Melissa、Amanda、Jarrod 和 Thomas。Lisa，我知道你和孩子们有太多的日夜和周末，缺少丈夫和父亲的陪伴。感谢你让我这段时间全力投入本书的工作：我爱你们，爱你们每一个人。

我也要感谢我生意上的伙伴 Ed Gonzalez、创意经理 Erick Zelaya，以及整个 Ardan 工作室的团队。Ed，感谢你从一开始就支持我。没有你，我就无法完成本书。你不仅是生意伙伴，还是朋友和兄长：谢谢你。Erick，感谢你为我、为公司做的一切。我不确定没有你，我们还能不能做到这一切。

Brian Ketelsen

首先要感谢我的家人在我写书的这四年间付出的耐心。Christine、Nathan、Lauren 和 Evelyn，感谢你们在游泳时放过在旁边椅子上写作的我，感谢你们相信这本书一定会出版。

Erik St. Martin

我要感谢我的未婚妻 Abby 以及我的三个孩子 Halie、Wyatt 和 Allie。感谢你们对我花大量时间写书和组织会议如此耐心和理解。我非常爱你们，有你们我非常幸运。

还要感谢 Bill Kennedy 为本书付出的巨大努力，以及当我们需要他的帮助的时候，他总是立刻想办法组织 GopherCon 来满足我们的要求。还要感谢整个社区出力评审并给出一些鼓励的话。

**关于本书**

Go 是一门开源的编程语言，目的在于降低构建简单、可靠、高效软件的门槛。尽管这门语言借鉴了很多其他语言的思想，但是凭借自身统一和自然的表达，Go 程序在本质上完全不同于用其他语言编写的程序。Go 平衡了底层系统语言的能力，以及在现代语言中所见到的高级特性。你可以依靠 Go 语言来构建一个非常快捷、高性能且有足够控制力的编程环境。使用 Go 语言，可以写得更少，做得更多。

**谁应该读这本书**

本书是写给已经有一定其他语言编程经验，并且想学习 Go 语言的中级开发者的。我们写这本书的目的是，为读者提供一个专注、全面且符合语言习惯的视角。我们同时关注语言的规范和实现，涉及的内容包括语法、类型系统、并发、通道、测试以及其他一些主题。我们相信，对于刚开始学 Go 语言的人，以及想要深入了解这门语言内部实现的人来说，本书都是极佳的选择。

**章节速览**

本书由九章组成，每章内容简要描述如下：

- **第一章** 快速介绍这门语言是什么，为什么要创造这门语言，以及这门语言要解决什么问题。这一章还会简要介绍一些 Go 语言的核心概念，如并发。
- **第二章** 引导你完成一个完整的 Go 程序，并教你 Go 作为一门编程语言必须提供的特性。
- **第三章** 介绍打包的概念，以及搭建 Go 工作空间和开发环境的最佳实践。这一章还会展示如何使用 Go 语言的工具链，包括获取和构建代码。
- **第四章** 展示 Go 语言内置的类型，即数组、切片和映射。还会解释这些数据结构背后的实现和机制。
- **第五章** 详细介绍 Go 语言的类型系统，从结构体类型到具名类型，再到接口和类型嵌套。