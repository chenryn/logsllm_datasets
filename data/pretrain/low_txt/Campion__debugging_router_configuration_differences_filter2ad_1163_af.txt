### Control Plane Verification

Several tools are available for verifying the properties of a network's control plane routing processes [1, 3, 4, 10, 12, 24, 31, 33]. These tools can be adapted to perform router equivalence checking, as demonstrated with Minesweeper [3] in §2. However, when verification fails, these tools typically provide only individual, concrete counterexamples. In contrast, Campion localizes errors to both headers and configuration text. As shown in the experiment in Section 2, even if Minesweeper is extended to produce multiple counterexamples, it still cannot quickly identify all errors. Moreover, it does not specify which parts of the text caused each error.

Recent work extends Minesweeper to localize errors by leveraging an SMT solver's ability to provide unsatisfiable cores when verification fails [28]. This approach localizes errors to specific SMT constraints but not to configuration lines or headers. Campion uses the BDD encoding of ACLs and route maps from Bonsai [4], which employs BDDs for network abstraction rather than router differencing or debugging. Campion’s structural checks are similar to those in rcc [11], but our checks are designed to ensure behavioral equivalence without introducing additional false positives over a modular semantic check.

### Outlier Detection

Benson et al. [5, 6] infer data-plane reachability specifications from a network’s forwarding tables and use these specifications to identify outliers. However, their approach is limited to the data plane and does not trace back to the original configurations. SelfStarter [16] infers parameterized configuration templates for ACLs and route maps and uses them for outlier detection. This method relies on sequence alignment, requiring router configurations to be structurally similar. While SelfStarter localizes configuration text, it does not localize headers.

### Equivalence Checking

Equivalence checking is a well-established concept beyond networking, and our SemanticDiff algorithm is inspired by prior work. For example, Ramos et al. [26] perform equivalence checking of two C functions via pairwise comparisons of execution paths. Since network ACLs and route maps are loop-free, Campion can exhaustively find all differences and localize to all IP prefixes. In contrast, equivalence checking of software is generally undecidable.

### Conclusion

Campion is a tool designed for debugging router configurations that are intended to be behaviorally equivalent but may have discrepancies. Unlike previous work, Campion uses modular structural or semantic checks to pinpoint errors to the affected message headers and relevant configuration lines. Our experience with a cloud provider and a university indicates that Campion effectively addresses critical errors.

Previous control-plane verification tools model a configuration monolithically as a set of constraints. In contrast, Campion exploits the modular structure of configurations to break down complex checks into smaller, per-component checks. This "bottom-up" approach facilitates localization, avoids reasoning about routing protocols, and allows simple structural checks to often be used without additional loss of precision. None of these capabilities would be possible without exploiting modularity. We believe that, as in other forms of verification, exploiting modularity will be crucial for making real-world network verification and debugging effective.

### Acknowledgments

We thank the SIGCOMM reviewers for their valuable comments. We also thank the network operators for using Campion and providing feedback on its results. This work was supported in part by NSF grants CNS-1704336 and CNS-1901510.

### References

[1] Anubhavnidhi Abhashkumar, Aaron Gember-Jacobson, and Aditya Akella. 2020. Tiramisu: Fast Multilayer Network Verification. In 17th USENIX Symposium on Networked Systems Design and Implementation (NSDI 20). USENIX Association, Santa Clara, CA, 201–219. https://www.usenix.org/conference/nsdi20/presentation/abhashkumar

[2] Carolyn Jane Anderson, Nate Foster, Arjun Guha, Jean-Baptiste Jeannin, Dexter Kozen, Cole Schlesinger, and David Walker. 2014. NetKAT: Semantic Foundations for Networks. In Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (San Diego, California, USA) (POPL ’14). Association for Computing Machinery, New York, NY, USA, 113–126. https://doi.org/10.1145/2535838.2535862

[3] Ryan Beckett, Aarti Gupta, Ratul Mahajan, and David Walker. 2017. A General Approach to Network Configuration Verification. In Proceedings of the Conference of the ACM Special Interest Group on Data Communication (Los Angeles, CA, USA) (SIGCOMM ’17). Association for Computing Machinery, New York, NY, USA, 155–168. https://doi.org/10.1145/3098822.3098834

[4] Ryan Beckett, Aarti Gupta, Ratul Mahajan, and David Walker. 2018. Control Plane Compression. In Proceedings of the 2018 Conference of the ACM Special Interest Group on Data Communication (Budapest, Hungary) (SIGCOMM ’18). Association for Computing Machinery, New York, NY, USA, 476–489. https://doi.org/10.1145/3230543.3230583

[5] Theophilus Benson, Aditya Akella, and David Maltz. 2009. Unraveling the Complexity of Network Management. In Proceedings of the 6th USENIX Symposium on Networked Systems Design and Implementation (Boston, Massachusetts) (NSDI’09). USENIX Association, Berkeley, CA, USA, 335–348. http://dl.acm.org/citation.cfm?id=1558977.1559000

[6] Theophilus Benson, Aditya Akella, and David A. Maltz. 2009. Mining Policies from Enterprise Network Configuration. In Proceedings of the 9th ACM SIGCOMM Conference on Internet Measurement (Chicago, Illinois, USA) (IMC ’09). ACM, New York, NY, USA, 136–142. https://doi.org/10.1145/1644893.1644909

[7] TODD Bishop. 2013. Xbox Live outage caused by network configuration problem. https://www.geekwire.com/2013/xbox-live-outage-caused-network-configuration-problem/

[8] Nikolaj Bjørner, Garvit Juniwal, Ratul Mahajan, Sanjit A. Seshia, and George Varghese. 2016. ddNF: An Efficient Data Structure for Header Spaces. In Hardware and Software: Verification and Testing, Roderick Bloem and Eli Arbel (Eds.). Springer International Publishing, Cham, 49–64.

[9] Dragos Dumitrescu, Radu Stoenescu, Matei Popovici, Lorina Negreanu, and Costin Raiciu. 2019. Dataplane equivalence and its applications. In 16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19). USENIX Association, Boston, MA, 683–698. https://www.usenix.org/conference/nsdi19/presentation/dumitrescu

[10] Seyed K. Fayaz, Tushar Sharma, Ari Fogel, Ratul Mahajan, Todd Millstein, Vyas Sekar, and George Varghese. 2016. Efficient Network Reachability Analysis Using a Succinct Control Plane Representation. In Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation (Savannah, GA, USA) (OSDI’16). USENIX Association, USA, 217–232.

[11] Nick Feamster and Hari Balakrishnan. 2005. Detecting BGP Configuration Faults with Static Analysis. In Proceedings of the 2nd Conference on Symposium on Networked Systems Design & Implementation - Volume 2 (NSDI’05). USENIX Association, Berkeley, CA, USA, 43–56. http://dl.acm.org/citation.cfm?id=1251203.1251207

[12] Ari Fogel, Stanley Fung, Luis Pedrosa, Meg Walraed-Sullivan, Ramesh Govindan, Ratul Mahajan, and Todd Millstein. 2015. A General Approach to Network Configuration Analysis. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15). USENIX Association, Oakland, CA, 469–483. https://www.usenix.org/conference/nsdi15/technical-sessions/presentation/fogel

[13] Aaron Gember-Jacobson, Raajay Viswanathan, Aditya Akella, and Ratul Mahajan. 2016. Fast Control Plane Analysis Using an Abstract Representation. In Proceedings of the 2016 ACM SIGCOMM Conference (Florianopolis, Brazil) (SIGCOMM ’16). ACM, New York, NY, USA, 300–313. https://doi.org/10.1145/2934872.2934876

[14] Karthick Jayaraman, Nikolaj Bjørner, Jitu Padhye, Amar Agrawal, Ashish Bhargava, Paul-Andre C Bissonnette, Shane Foster, Andrew Helwer, Mark Kasten, Ivan Lee, Anup Namdhari, Haseeb Niaz, Aniruddha Parkhi, Hanukumar Pinnamraju, Adrian Power, Neha Milind Raje, and Parag Sharma. 2019. Validating Datacenters at Scale. In Proceedings of the ACM Special Interest Group on Data Communication (Beijing, China) (SIGCOMM ’19). Association for Computing Machinery, New York, NY, USA, 200–213. https://doi.org/10.1145/3341302.3342094

[15] Karthick Jayaraman, Nikolaj Bjørner, Geoff Outhred, and Charlie Kaufman. 2014. Automated Analysis and Debugging of Network Connectivity Policies. Technical Report MSR-TR-2014-102. Microsoft.

[16] Siva Kesava Reddy Kakarla, Alan Tang, Ryan Beckett, Karthick Jayaraman, Todd Millstein, Yuval Tamir, and George Varghese. 2020. Finding Network Misconfigurations by Automatic Template Inference. In 17th USENIX Symposium on Networked Systems Design and Implementation (NSDI 20). USENIX Association, Santa Clara, CA, 999–1013. https://www.usenix.org/conference/nsdi20/presentation/kakarla

[17] Peyman Kazemian, George Varghese, and Nick McKeown. 2012. Header Space Analysis: Static Checking for Networks. In Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation (San Jose, CA) (NSDI’12). USENIX Association, Berkeley, CA, USA, 9–9. http://dl.acm.org/citation.cfm?id=2228298.2228311

[18] Ahmed Khurshid, Wenxuan Zhou, Matthew Caesar, and P. Brighten Godfrey. 2012. Veriflow: Verifying Network-wide Invariants in Real Time. SIGCOMM Comput. Commun. Rev. 42, 4 (Sept. 2012), 467–472. https://doi.org/10.1145/2377677.2377766

[19] TOM Krazit. 2019. Networking issues take down Google Cloud in parts of the U.S. and Europe, YouTube and Snapchat also affected. https://www.geekwire.com/2019/networking-issues-take-google-cloud-parts-u-s-europe-youtube-snapchat-also-affected/

[20] Nuno P. Lopes, Nikolaj Bjørner, Patrice Godefroid, Karthick Jayaraman, and George Varghese. 2015. Checking Beliefs in Dynamic Networks. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15). USENIX Association, Oakland, CA, 499–512. https://www.usenix.org/conference/nsdi15/technical-sessions/presentation/lopes

[21] Haohui Mai, Ahmed Khurshid, Rachit Agarwal, Matthew Caesar, P Brighten Godfrey, and Samuel Talmadge King. 2011. Debugging the data plane with Anteater. ACM SIGCOMM Computer Communication Review 41, 4 (2011), 290–301.

[22] Timothy Nelson, Christopher Barratt, Daniel J. Dougherty, Kathi Fisler, and Shriram Krishnamurthi. 2010. The Margrave Tool for Firewall Analysis. In Proceedings of the 24th International Conference on Large Installation System Administration (San Jose, CA) (LISA’10). USENIX Association, USA, 1–8.

[23] Networkworld. 2015. What was wrong with United’s router? https://www.networkworld.com/article/2946070/what-was-wrong-with-uniteds-router.html

[24] Santhosh Prabhu, Kuan Yen Chou, Ali Kheradmand, Brighten Godfrey, and Matthew Caesar. 2020. Plankton: Scalable network configuration verification through model checking. In 17th USENIX Symposium on Networked Systems Design and Implementation (NSDI 20). USENIX Association, Santa Clara, CA, 953–967. https://www.usenix.org/conference/nsdi20/presentation/prabhu

[25] Steve Ragan. 2016. BGP errors are to blame for Monday’s Twitter outage, not DDoS attacks. https://www.csoonline.com/article/3138934/bgp-errors-are-to-blame-for-monday-s-twitter-outage-not-ddos-attacks.html

[26] David A. Ramos and Dawson R. Engler. 2011. Practical, Low-Effort Equivalence Verification of Real Code. In Computer Aided Verification, Ganesh Gopalakrishnan and Shaz Qadeer (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 669–685.

[27] STAN Schroeder. 2013. Facebook Suffers Sitewide Errors for Many Users. https://mashable.com/2013/10/21/facebook-currently-doesnt-allow-status-updates/

[28] Ruchit Shrestha, Xiaolin Sun, and Aaron Gember-Jacobson. 2020. Localizing Router Configuration Errors Using Unsatisfiable Cores. (2020).

[29] Bingchuan Tian, Xinyi Zhang, Ennan Zhai, Hongqiang Harry Liu, Qiaobo Ye, Chunsheng Wang, Xin Wu, Zhiming Ji, Yihong Sang, Ming Zhang, Da Yu, Chen Tian, Haitao Zheng, and Ben Y. Zhao. 2019. Safely and Automatically Updating In-Network ACL Configurations with Intent Language. In Proceedings of the ACM Special Interest Group on Data Communication (Beijing, China) (SIGCOMM ’19). Association for Computing Machinery, New York, NY, USA, 214–226. https://doi.org/10.1145/3341302.3342088

[30] DYLAN TWENEY. 2013. 5-minute outage costs Google $545,000 in revenue. https://venturebeat.com/2013/08/16/3-minute-outage-costs-google-545000-in-revenue/

[31] Konstantin Weitz, Doug Woos, Emina Torlak, Michael D. Ernst, Arvind Krishnamurthy, and Zachary Tatlock. 2016. Scalable Verification of Border Gateway Protocol Configurations with an SMT Solver. SIGPLAN Not. 51, 10 (Oct. 2016), 765–780. https://doi.org/10.1145/3022671.2984012

[32] Hongkun Yang and Simon S Lam. 2015. Real-time verification of network properties using atomic predicates. IEEE/ACM Transactions on Networking 24, 2 (2015), 887–900.

[33] Fangdan Ye, Da Yu, Ennan Zhai, Hongqiang Harry Liu, Bingchuan Tian, Qiaobo Ye, Chunsheng Wang, Xin Wu, Tianchen Guo, Cheng Jin, Duncheng She, Qing Ma, Biao Cheng, Hui Xu, Ming Zhang, Zhiliang Wang, and Rodrigo Fonseca. 2020. Accuracy, Scalability, Coverage: A Practical Configuration Verifier on a Global WAN. In Proceedings of the Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication (Virtual Event, USA) (SIGCOMM ’20). Association for Computing Machinery, New York, NY, USA, 599–614. https://doi.org/10.1145/3387514.3406217

[34] Ennan Zhai, Ang Chen, Ruzica Piskac, Mahesh Balakrishnan, Bingchuan Tian, Bo Song, and Haoliang Zhang. 2020. Check before You Change: Preventing Correlated Failures in Service Updates. In 17th USENIX Symposium on Networked Systems Design and Implementation (NSDI 20). USENIX Association, Santa Clara, CA, 575–589. https://www.usenix.org/conference/nsdi20/presentation/zhai