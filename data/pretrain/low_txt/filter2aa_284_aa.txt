# OWASP Code Review Guide

## Release Information
- **Version**: 2.0
- **License**: Creative Commons (CC) Attribution
- **Free Version Available at**: [OWASP.org](https://www.owasp.org)
- **Project Leaders**: Larry Conklin and Gary Robinson

## Table of Contents
1. **Foreword** - By Eoin Keary
2. **Acknowledgements**
3. **Introduction**
4. **How to Use the Code Review Guide**
5. **Code Review Do’s and Don’ts**
6. **Code Review Checklist**
7. **Threat Modeling Example**
8. **Code Crawling**
9. **Top Security Risks**
    - A1: Injection
    - A2: Broken Authentication and Session Management
    - A3: Cross-Site Scripting (XSS)
    - A4: Insecure Direct Object Reference
    - A5: Security Misconfiguration
    - A6: Sensitive Data Exposure
    - A7: Missing Function Level Access Control
    - A8: Cross-Site Request Forgery (CSRF)
    - A9: Using Components with Known Vulnerabilities
    - A10: Unvalidated Redirects and Forwards
10. **Technical Reference for Secure Code Review**
    - HTML5
    - Same Origin Policy
    - Reviewing Logging Code
    - Error Handling
    - Reviewing Security Alerts
    - Review for Active Defense
    - Race Conditions
    - Buffer Overruns
    - Client-Side JavaScript
11. **Secure Code Review Methodology**

---

## Foreword
### By Eoin Keary, Long-Serving OWASP Global Board Member

The OWASP Code Review Guide originated from the OWASP Testing Guide. Initially, code review was included in the Testing Guide, but as the topic grew, it evolved into a standalone guide.

I initiated the Code Review Project in 2006. This current edition, started in April 2013, is a result of the OWASP Project Reboot initiative and a grant from the United States Department of Homeland Security.

The OWASP Code Review team comprises a small, yet highly skilled group of volunteers with extensive experience in secure code review across various organizations, from startups to large software development firms.

It is well-known that detecting bugs early in the system development lifecycle can lead to more secure and cost-effective software. Organizations that integrate a proper code review function into their Software Development Lifecycle (SDLC) produce significantly more secure code. Simply put, "We can't hack ourselves secure." Attackers have more time to find vulnerabilities than defenders, making hacking a losing battle.

This guide primarily focuses on C#/.NET and Java, but also includes C/C++, PHP, and other languages where possible. The techniques advocated can be adapted to almost any code environment. The security flaws in web applications are remarkably consistent across programming languages.

Eoin Keary, June 2017

---

## Acknowledgements

### Appreciation to the United States Department of Homeland Security

The OWASP community and the Code Review Guide project leaders express deep gratitude to the United States Department of Homeland Security for funding this book through a grant. OWASP remains the preeminent organization for free, unbiased application security.

With the rise in threats and attacks on community institutions through application vulnerabilities, collaboration and unfettered information sharing are crucial. Our deepest appreciation and thanks go to DHS for their support in achieving this goal.

For feedback or to report mistakes and improvements, please contact us at: [PI:EMAIL]

### Content Contributors
- Larry Conklin
- Gary Robinson
- Johanna Curiel
- Eoin Keary
- Islam Azeddine Mennouchi
- Abbas Naderi
- Carlos Pantelides
- Michael Hidalgo

### Reviewers
- Alison Shubert
- Fernando Galves
- Sytze van Koningsveld
- Carolyn Cohen
- Helen Gao
- Jan Masztal
- David Li
- Lawrence J Timmins
- Kwok Cheng
- Ken Prole
- David D’Amico
- Robert Ferris
- Lenny Halseth
- Kenneth F. Belva

### Version 2.0, 2017
- **Project Leaders**: Larry Conklin, Gary Robinson
- **Content Contributors**: Jenelle Chapman, Andrew van der Stock, Paolo Perego, David Lowry, David Rook, Dinis Cruz, Jeff Williams
- **Reviewers**: Jeff Williams, Rahin Jina

### Version 1.0, 2007
- **Project Leader**: Eoin Keary
- **Content Contributors**: Jenelle Chapman, Andrew van der Stock, Paolo Perego, David Lowry, David Rook, Dinis Cruz, Jeff Williams
- **Reviewers**: Jeff Williams, Rahin Jina

---

## Introduction

Welcome to the second edition of the OWASP Code Review Guide. This edition updates the guide with current threats and countermeasures, incorporating the OWASP community's experiences with secure code review best practices.

### Overview

This section introduces secure code review and its benefits for development organizations. It provides an overview of secure code review techniques and compares them to other methods for analyzing secure code.

### Methodology

The methodology section delves into integrating secure review techniques into the SDLC and ensuring reviewers have the correct context for effective reviews. Topics include applying risk-based intelligence to security code reviews, using threat modeling, and understanding external business drivers.

### How to Use the Code Review Guide

This book is designed to cater to three different perspectives:
1. **Management Teams**: Understand the importance of code reviews and their role in developing secure enterprise software.
2. **Software Leads**: Provide feedback to peers in code reviews with empirical artifacts.
3. **Secure Code Reviewers**: Use this guide as a reference for integrating secure code reviews into the SDLC.

### Technical Reference for Secure Code Review

This section covers common vulnerabilities and technical controls, including XSS, SQL injection, session tracking, authentication, authorization, logging, and information leakage. It provides code examples in various languages to guide reviewers.

### Why Does Code Have Vulnerabilities?

MITRE has catalogued approximately 1000 different kinds of software weaknesses in the CWE project. These weaknesses are subtle and often tricky, and developers are not typically taught about them in school or on the job. As connectivity and technology increase, the ability to invent new technologies outpaces the ability to secure them, leading to many unsecured technologies in use today.

### What is Secure Code Review?

Secure code review aims to identify security flaws in the application related to its features and design, along with their root causes. It involves auditing the source code to verify the presence and effectiveness of security and logical controls. This process helps ensure the application is "self-defending" in its given environment.

### Difference Between Code Review and Secure Code Review

The Capability Maturity Model (CMM) measures the development processes of a software development organization. Secure code review goes beyond traditional code review by focusing specifically on security aspects, ensuring that the application is robust against known and unknown vulnerabilities.

---

This guide is a comprehensive resource for conducting secure code reviews, providing both theoretical knowledge and practical examples to help organizations enhance their software security.