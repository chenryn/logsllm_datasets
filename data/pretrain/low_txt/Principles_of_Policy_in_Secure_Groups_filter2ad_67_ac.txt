### Group Security and Access Control with GSAKMP

#### Introduction
GSAKMP (Group Security Association Key Management Protocol) ensures the security of a group by controlling access to group keys. The access control rules and compliance mechanisms are defined in the policy token. Initially, the policy issuance authority (Group Owner) passes the token to the group controller (GC). The GC uses the token's access control rules to restrict access to the group key. In all instances, there will be a designated group member authorized to disseminate keys and perform access control.

#### Access Control and Authentication
- **Credential Verification**: A group member must present required credentials to the GC. The GC verifies these credentials to ensure that the access control criteria are met before releasing the group key.
- **Verification of Authority**: Potential group members verify the authority of the GC or Sub-Group Controllers (SGCs) to make access control decisions. This verification protects group members from accepting false keys and inadvertently revealing confidential group information.

#### Protection of Group Information
1. **Cryptography**: Cryptographic mechanisms specified in the GSAKMP token protect group data.
2. **Access Granting**: Access to the group is granted by issuing the group cryptographic key(s).
3. **Key Distribution**:
   - Keys can only be obtained through legitimate distribution or compromise.
   - Initial key distribution is secure, using a pairwise join protocol. This protocol ensures:
     - Messages are signed by authorized entities and verified.
     - The sender and intended recipient of messages are explicit.
     - Message freshness is indicated by nonces.
     - Key downloads are protected by a group-appropriate confidentiality mechanism as indicated by the GSAKMP policy token.
4. **Compromise Recovery**:
   - If keys are compromised and this is discovered, the group is rekeyed to invalidate any compromised keys.
   - GSAKMP provides a framework for advanced recovery mechanisms, such as LKH (Logarithmic Key Hierarchy), which is implemented in the reference software.
   - Upon detection of a member compromise, the GC creates an LKH recovery message identifying the current policy token and initiates recovery by signing and transmitting the message.
   - All group members verify the authenticity of the recovery message. Once the LKH message saturates the group, the compromised member is excluded from the new security association, restoring a secure state of operation.

#### Security Failures and Recovery
1. **Masquerading Adversaries**: A security failure can occur when an adversary attempts to masquerade as an authorized individual.
2. **Join Exchange Verification**: Any failure in verifying the join exchange (signature, nonce, identification field, or inadequate credentials) is detectable by both parties, leading to the abort of the join exchange.
3. **Rekey and Delete Messages**: Counterfeit rekey and delete messages are detected and rejected if they contain incorrect signatures or fail to be authorized.
4. **Key Compromise Remediation**: Group access via key compromise is remedied via LKH, causing all compromised keys to be invalidated, resulting in denial of access to any entity possessing only the compromised keys.

#### Related Work
- **IETF Policy Framework**: The IETF Policy Framework working group is developing an architecture for managing network devices through abstract policies. However, the security of the distribution and enforcement of these rules has yet to be addressed.
- **Security Policy System (SPS)**: SPS supports flexible definition and distribution of security policies for IPSec security associations. Clients query the policy database for connection policies, and connections are accepted only if they meet the requirements of the policies.
- **DCCM (Dynamic Cryptographic Context Management)**: DCCM defines and enforces security policies within very large groups (100,000+ members) using policy to entirely define the context in which a group operates.
- **Antigone Framework**: Antigone provides flexible interfaces for defining and implementing a wide range of secure group policies, focusing on the composition and configuration of basic services needed for secure groups.
- **Trust Management**: Trust management, introduced by Blaze et al., provides a unified approach for specifying and evaluating security policies, focusing on access control through trust relationships.
- **IRTF SMuG (Secure Multicast Research Group)**: SMuG is researching standards and a reference architecture for secure multicast applications, including cryptographic transforms and key management protocols, and is defining a policy management infrastructure appropriate for secure multicast.

#### Conclusions
This paper addresses the requirements of policy in secure group communication, identifying universal principles to guide the design of security policy in such systems. These principles not only address the pragmatic requirements for the correct and secure operation of standard services but also identify requirements for the secure distribution and synchronization of policy specifications. It is essential to correctly specify, distribute, authenticate, and enforce policies. Over the lifetime of the group, consensus on the definition and interpretation of policy must be maintained by all participants. Failure to do so can lead to undetected vulnerabilities and compromise the security of the group. Additionally, resilient groups must be able to recover from member compromises to a secure state, often requiring the ejection of compromised members without significantly affecting the performance or security of the group.

#### References
[1] M. Abadi and R. Needham. Prudent Engineering Practice for Cryptographic Protocols. IEEE Transactions on Software Engineering, 22(1):6–15, January 1996.
[2] R. Anderson and R. Needham. Robustness Principles for Public Key Protocols. In Lecture Notes in Computer Science, Don Coppersmith (Ed.), Advances in Cryptology – CRYPTO ’95, volume 963, pages 236–247. Springer-Verlag, 1995.
[3] M. Blaze, J. Feigenbaum, and J. Lacy. Decentralized Trust Management. In Proceedings of the 1996 IEEE Symposium on Security and Privacy, pages 164–173, November 1996. Los Alamitos.
[4] M. Blaze, J. Feignbaum, J. Ioannidis, and A. Keromytis. The KeyNote Trust Management System - Version 2. Internet Engineering Task Force, September 1999. RFC 2704.
[5] R. Canetti, P. Rohatgi, and P.-C. Cheng. Multicast Data Security Transformations: Requirements, Considerations, and Proposed Design. Internet Engineering Task Force, June 2000. draft-irtf-smug-data-transforms-00.txt.
[6] U. Carlsen. Cryptographic Protocol Flaws: Know Your Enemy. In Proceedings of 7th IEEE Computer Security Foundations Workshop, pages 192–200. IEEE, 1994.
[7] Y. Chu, J. Feigenbaum, B. LaMacchia, P. Resnick, and M. Strauss. REFEREE: Trust Management for Web Applications. In Proceedings of Financial Cryptography ’98, volume 1465, pages 254–274, Anguilla, British West Indies, February 1998. Springer-Verlag.
[8] M. Condell, C. Lynn, and J. Zao. Security Policy System Language (Draft). Internet Engineering Task Force, July 1999. draft-ietf-ipsec-spsl-01.txt.
[9] W. Diffie and M. Hellman. New Directions in Cryptography. IEEE Transactions on Information Theory, IT-22(6):644–654, November 1976.
[10] P. Dinsmore, D. Balenson, M. Heyman, P. Kruus, C. Scace, and A. Sherman. Policy-Based Security Management for Large Dynamic Groups: An Overview of the DCCM Project. In Proceedings of DARPA Information Survivability Conference and Exposition (DISCEX ’00), pages 64–73. DARPA, January 2000. Hilton Head, S.C.
[11] D. Dolev and D. Malki. The Transis Approach to High Availability Cluster Communication. Communications of the ACM, 39(4), April 1996.
[12] M. Fischer, N. Lynch, and M. Paterson. Impossibility of Distributed Consensus with One Faulty Process. Journal of the ACM, 32(2):374–382, 1985.
[13] T. Hardjono, R. Canetti, M. Baugher, and m P. Dinsmore. Secure Multicast: Problem Areas, Framework, and Building Blocks (Draft). Internet Engineering Task Force, October 1999. draft-irtf-smug-framework-00.txt.
[14] H. Harney, M. Baugher, and T. Hardjono. GKM Building Block: Group Security Association (GSA) Definition (Draft). Internet Engineering Task Force, February 2000. draft-irtf-smug-gkmbbb-gsadef-00.txt.
[15] H. Harney, A. Colegrove, E. Harder, U. Meth, and R. Fleischer. Group Secure Association Key Management Protocol (Draft). Internet Engineering Task Force, April 2000. draft-harney-sparta-gsakmp-sec-01.txt.
[16] H. Harney and C. Muckenhirn. Group Key Management Protocol (GKMP) Architecture. Internet Engineering Task Force, July 1997. RFC 2094.
[17] H. Harney and C. Muckenhirn. Group Key Management Protocol (GKMP) Specification. Internet Engineering Task Force, July 1997. RFC 2093.
[18] H. Krawczyk, M. Bellare, and R. Canetti. HMAC: Keyed-Hashing for Message Authentication. Internet Engineering Task Force, April 1997. RFC 2104.
[19] P. McDaniel, H. Harney, P. Dinsmore, and A. Prakash. Multicast Security Policy (Draft). Internet Research Task Force, Secure Mutlicast Research Group (SMuG), June 2000. draft-irtf-smug-mcast-policy-00.txt.
[20] P. McDaniel and A. Prakash. Lightweight Failure Detection in Secure Group Communication. Technical Report CSE-TR-428-00, Electrical Engineering and Computer Science, University of Michigan, June 2000.
[21] P. McDaniel, A. Prakash, and P. Honeyman. Antigone: A Flexible Framework for Secure Group Communication. In Proceedings of the 8th USENIX Security Symposium, pages 99–114, August 1999.
[22] S. Mittra. Iolus: A Framework for Scalable Secure Multicasting. In Proceedings of ACM SIGCOMM ’97, pages 277–278. ACM, September 1997.
[23] S. Mullender. Distributed Systems. Addison-Wesley, First edition, 1993.
[24] M. Reiter. Secure Agreement Protocols: Reliable and Atomic Group Multicast in Rampart. In Proceedings of 2nd ACM Conference on Computer and Communications Security, pages 68–80. ACM, November 1994.
[25] T. Ryutov and C. Neuman. Representation and Evaluation of Security Policies for Distributed System Services. In Proceedings of DARPA Information Survuvability Conference and Exposition, pages 172–183, Hilton Head, South Carolina, January 2000. DARPA.
[26] L. Sanchez and M. Condell. Security Policy System (Draft). Internet Engineering Task Force, November 1998. draft-ietf-ipsec-sps.txt.
[27] L. Sanchez and M. Condell. Security Policy Protocol (Draft). Internet Engineering Task Force, July 1999. draft-ietf-ipsec-spp-00.txt.
[28] M. Steiner, G. Tsudik, and M. Waidner. CLIQUES: A New Approach to Group Key Agreement. In International Conference on Distributed Computing Systems (ICDCS’98). IEEE, May 1998.
[29] M. Stevens, W. Weiss, H. Mahon, B. Moore, J. Strassner, G. Waters, A. Westerinen, and J. Wheeler. Policy Framework (Draft). Internet Engineering Task Force, September 1999. (draft-ietf-policy-framework-00.txt).
[30] M. Thompson, W. Johnson, S. Mudumbai, G. Hoo, K. Jackson, and A. Essiari. Certificate-based Access Control for Widely Distributed Resources. In Proceedings of 8th USENIX UNIX Security Symposium, pages 215–227. USENIX Association, August 1999. Washington D. C.
[31] D. M. Wallner, E. J. Harder, and R. C. Agee. Key Management for Multicast: Issues and Architectures (Draft). Internet Engineering Task Force, September 1998. draft-wallner-key-arch-01.txt.
[32] C. K. Wong, M. Gouda, and S. S. Lam. Secure Group Communication Using Key Graphs. In Proceedings of ACM SIGCOMM ’98, pages 68–79. ACM, September 1998.