# Rusted Anchors: A National Client-Side View of Hidden Root CAs in the Web PKI Ecosystem

## Authors
Yiming Zhang<sup>1,2</sup>, Baojun Liu<sup>1</sup>, Chaoyi Lu<sup>1,3</sup>, Zhou Li<sup>4</sup>, Haixin Duan<sup>1,5</sup>, Jiachen Li<sup>1</sup>, and Zaifeng Zhang<sup>3</sup>

- <sup>1</sup>Tsinghua University, China
- <sup>2</sup>Beijing National Research Center for Information Science and Technology, China
- <sup>3</sup>360Netlab, China
- <sup>4</sup>University of California, Irvine, USA
- <sup>5</sup>QI-ANXIN Technology Research Institute, China

## Abstract
HTTPS is essential for securing web communications, relying heavily on the Web Public Key Infrastructure (PKI) for authentication. In the Web PKI, Certificate Authorities (CAs) issue digital certificates, and web clients trust a set of audited root CAs maintained by operating systems or browsers. However, security incidents have revealed that hidden root CAs, not part of public root programs, are being imported into local root stores, allowing adversaries to gain trust from web clients.

In this paper, we present the first client-side, nation-wide analysis of hidden root CAs in the Web PKI ecosystem. Through collaboration with a leading browser vendor, we analyzed certificate chains and their verification statuses from volunteer users over five months. We captured over 1.17 million hidden root certificates, which significantly impact web clients and traffic. We identified approximately 5,000 organizations holding these hidden root certificates, including fake CAs impersonating trusted ones. Our findings highlight that the implementation of hidden root CAs and certificates is highly flawed, with issues such as weak keys and signature algorithms being prevalent. This study uncovers a massive and dynamic ecosystem of hidden root CAs, shedding light on the landscape of Web PKI security. We call for immediate efforts from the community to review the integrity of local root stores.

## CCS Concepts
- **Security and Privacy**: Web protocol security, Authorization, Browser security
- **Networks**: Web protocol security

## Keywords
Certificate Authority, Root Certificate, Web PKI

## ACM Reference Format
Yiming Zhang<sup>1,2</sup>, Baojun Liu<sup>1</sup>, Chaoyi Lu<sup>1,3</sup>, Zhou Li<sup>4</sup>, Haixin Duan<sup>1,5</sup>, Jiachen Li<sup>1</sup>, and Zaifeng Zhang<sup>3</sup>. 2021. Rusted Anchors: A National Client-Side View of Hidden Root CAs in the Web PKI Ecosystem. In Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security (CCS '21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/3460120.3484768

## 1 Introduction
HTTPS provides encrypted communication and authentication between web servers and clients, increasingly adopted on the Internet. Authentication is powered by digital certificates, and the issuance, management, and revocation of these certificates rely on the Web Public Key Infrastructure (PKI). In the Web PKI, Certificate Authorities (CAs) issue digital certificates, with a small group of root CAs serving as trust anchors. Several mainstream operating systems and browser vendors maintain public lists of trusted root CAs, which undergo strict evaluation and regular audits.

However, recent security incidents show that the management of local root stores can be a significant vulnerability in Web PKI security. By injecting self-built root certificates into local root stores, entities like antivirus software, parental control applications, government agencies, and malware can create man-in-the-middle proxies to intercept SSL/TLS-encrypted traffic.

In this study, we term root CAs not trusted by public root programs as "hidden" root CAs. These hidden root CAs are absent from public lists and are not publicly visible. The ecosystem of hidden root CAs has not been well-studied due to the need for a client-side view of local root stores, making existing certificate datasets unsuitable for this task.

### Research Questions
We aim to answer several critical research questions:
- How many web clients witness and actively trust hidden root CAs?
- How much HTTPS traffic associates with certificate chains signed by hidden root CAs?
- Who operates the hidden root CAs?
- Are there implementation flaws in hidden root CAs and certificates signed by them?

### Our Approach
We collaborated with 360 Secure Browser, a leading browser vendor in China with over 100 million monthly active users. The browser collected a small portion of certificate chains and their client-side verification statuses from millions of volunteers' web visits. From February to June 2020, we manually built filtering criteria from the X.509 standard to identify hidden root certificates. We also designed and implemented an automated methodology to group root certificates by their subject names and classify their usage.

### Major Findings
Our research reveals several critical observations about the hidden root CA ecosystem:
- The ecosystem is dynamic, with new hidden root CAs emerging and quickly gaining trust.
- We identified 1.17 million hidden root certificates imported into local root stores, affecting 5.07 million web clients.
- We uncovered 5,005 certificate groups, each representing a different organization.
- Fake root CAs impersonating trusted ones pose security threats to up to 2.7 million web clients.
- Operational flaws, such as public key sharing, abuse of wildcards, and long validity periods, are prevalent. Over 87.3% of hidden root certificates and 99.9% of leaf certificates violate at least one X.509 standard requirement.

### Scope of Study
This paper aims to uncover a nation-wide ecosystem of hidden root CAs and certificates from the perspective of web clients. While not included in public root programs, these root certificates are trusted by web clients, raising security threats. We fill this knowledge gap by analyzing large-scale certificate data and verification statuses.

## 2 Background and Related Work
### 2.1 Web PKI Infrastructure
The Public Key Infrastructure (PKI) provides authentication mechanisms for secure Internet protocols like TLS. The Web PKI specifically manages X.509 certificates issued to websites by Certificate Authorities (CAs).

**Trust Model and Root Stores**
- CAs issue digital certificates, with root CAs holding self-signed root certificates.
- Root CAs delegate signing abilities through intermediate certificates.
- Web clients verify leaf certificates by checking if they have a valid chain to a root certificate in their local root store.
- Local root stores are pre-installed copies of public root stores maintained by browsers and operating systems, which undergo strict evaluation and regular audits.

**X.509 Certificate Format**
- Most web certificates adopt the X.509 Version 3 format.
- Fields include distinguished names, public keys, signatures, validity periods, and extensions.
- Root certificates must meet additional requirements, such as setting the basicConstraints extension to TRUE.

### 2.2 The “Hidden” Root CA Ecosystem
Hidden root CAs are not part of public root programs and are difficult to uncover. Sources of hidden root certificates include local software, malware, enterprise networks, and government agencies. Unlike trusted CAs, hidden CAs do not publish policies and their certificate issuance cannot be monitored by systems like Certificate Transparency.

Trusting hidden root certificates can be risky for web clients, as it allows adversaries to intercept secure connections and break authentication.

### 2.3 Related Work
Previous studies have focused on detecting TLS interception and HTTPS hijacking. Huang et al. [39] and O’Neill et al. [56] detected interception by actively sending SSL handshakes and connecting to controlled servers. However, these studies did not provide a comprehensive view of the hidden root CA ecosystem from a client-side perspective.

Active and passive certificate datasets, such as those from Holz et al. [38], Durumeric et al. [26], and ICSI networking group [7], have been used to study certificate mis-issuance and vulnerabilities. However, these datasets do not include user-side certificate verification statuses, making them unsuitable for our study.

## 3 Methodology
### 3.1 Data Collection
We collaborated with 360 Secure Browser to collect certificate chains and their verification statuses from volunteer users' web visits. The browser collected a small portion of this data over five months (February to June 2020).

### 3.2 Root Certificate Grouping
We manually built filtering criteria from the X.509 standard to identify hidden root certificates. We then designed and implemented an automated methodology to group root certificates by their subject names and classify their usage.

### 3.3 Ethical Considerations
We addressed potential ethical concerns by ensuring that all data collection was done with the consent of volunteer users and that the data was anonymized to protect user privacy.

## 4 Results
### 4.1 Overview of Hidden Root CA Ecosystem
- **Dynamic Ecosystem**: New hidden root CAs emerge and quickly gain trust.
- **Impact on Web Clients**: 1.17 million hidden root certificates affect 5.07 million web clients.
- **Certificate Groups**: 5,005 certificate groups, each representing a different organization.
- **Fake CAs**: Impersonation of trusted CAs poses security threats to up to 2.7 million web clients.
- **Operational Flaws**: Prevalent issues include public key sharing, wildcard abuse, and long validity periods. Over 87.3% of hidden root certificates and 99.9% of leaf certificates violate X.509 standards.

## 5 Conclusion
Our study provides the first client-side, nation-wide view of hidden root CAs in the Web PKI ecosystem. We found that the ecosystem is massive and dynamic, with significant security implications. We call for immediate efforts from the community to review and improve the integrity of local root stores.

## References
- [19] RFC 5280, "Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile"
- [33] Mozilla, "CA Certificate Policy"
- [57] Mozilla, "Included CA Certificates"
- [40] Apple, "Root Certificate Program"
- [2] Microsoft, "Microsoft Trusted Root Program"
- [69] iP* incident
- [68] Trustwave incident
- [32] CNNIC incident
- [21] SSL/TLS interception by local software
- [20] Malware and SSL/TLS interception
- [58] Government-built CAs in Kazakhstan
- [26] ZMap, "Scanning the Entire IPv4 Address Space"
- [38] Holz et al., "Understanding the X.509 Infrastructure"
- [6] ICSI, "SSL Notary"
- [7] ICSI, "Passive SSL/TLS Traffic Analysis"
- [54] Oakes et al., "Residential Certificate Chains"
- [35] Certificate Transparency
- [61] CT Log Support
- [46] 360 Secure Browser
- [25] Censys, "Internet-Wide Scans"
- [31] HTTPS Adoption Rate
- [60] Certificate Revocation Strategies
- [10] Rapid7, "IPv4 Certificate Scans"
- [5] TLS Warnings
- [4] Chrome, "Certificate Compliance Errors"
- [28] Middlebox Impact on HTTPS
- [39] Huang et al., "Detecting HTTPS Interception"
- [56] O’Neill et al., "TLS Interception Detection"

---

This version of the text is more structured, clear, and professional, with improved coherence and flow.