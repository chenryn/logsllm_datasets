# Dongsung Kim
- **Position:** Graduate Student Researcher
- **Contact:** @kid1ng
- **Website:** [https://kidi.ng](https://kidi.ng)
- **Affiliation:** Hackers In inTrusion Laboratory
- **Lab Website:** [https://hit.skku.edu](https://hit.skku.edu)

## Samsung’s Smartwatch Products
### Features
- Fitness tracking
- Control of smart devices
- Receiving calls, texts, and emails
- NFC payments
- Bluetooth and Wi-Fi (and LTE) pairing
- App marketplace: Samsung Galaxy Apps

### Security Concerns
- Sensitive information: Contacts, calendar, location, email, notifications, etc.
- Access to privileged resources must be controlled

## Samsung Gear Firmware
### Components
- Tizen’s open source components
- Samsung’s closed source components

### Tizen OS
- Linux-based open source OS
- Used in many Samsung products: Smartwatches, smartphones, cameras, smart TVs, home appliances, etc.

## Vulnerabilities in Tizen
### Notable Discoveries
- Ajin Abraham at HITBSecConf
- Amihai Neiderman at Security Analyst Summit: 40 0-day vulnerabilities
- PVS-Studio: 27,000 errors in Tizen OS, including 900 code errors in a portion of the source code

### Focus
- We focus on the security perspective of smartwatches.

## Tizen Architecture
### System Components
- **Files, Directories, UNIX Sockets, Utilities**
- **Applications**: Use Tizen APIs to access services
- **Services**: Special privileged daemons for resources (e.g., Wi-Fi, Bluetooth, GPS, messaging, sensors). Must reject requests from unauthorized parties.

### Privilege Management
- **App Developer**: Specifies privileges in the manifest
- **User**: Accepts the permission for the app
- **Installer**: Checks and registers the privilege policy
- **Runtime**: Accesses are controlled
- **Tizen Privileges**: internet, bluetooth, network.set, screenshot, notification, email, etc. Only some are "Public" level; "Partner, Platform" levels are disallowed for most.

### Access Control Mechanisms
- **DAC (Discretionary Access Control)**: Uses UNIX user ID + group ID policies
- **SMACK (Simplified Mandatory Access Control in Kernel)**: Kernel-space MAC. Apps receive a unique label at install time (e.g., User::Pkg::sample_app). The current label (context) is checked against SMACK rules.
- **Cynara**: User-space privilege management daemon. Services check the calling app’s privilege, identify the app with its SMACK label, and check the label against the Cynara database.
- **Security Manager**: Security policy configurator daemon. Populates DAC/SMACK/Cynara databases.

## Inter-Process Communication (IPC) System
### D-Bus
- **Linux-like OS**: Useful built-in functions (e.g., discoverability, introspection)
- **Service Daemon**: Registers to D-Bus daemon
- **Clients**: Request resources via messages
- **Tizen**: Heavily relies on D-Bus

### Example D-Bus Interaction
- **Client Process** and **Service Process** communicate through the D-Bus Bus
- **Messages**: Requests and responses
- **Bus Names**: Unique and well-known bus names
- **Interfaces and Methods**: Define the interaction

## Privilege Validation
### Patched to Perform Cynara Checks
- **D-Bus Daemon**: Asks Cynara for access control on messages
- **Access Control**: Defined in busconfig files (e.g., /etc/dbus-1/system.d/bixby-agent.conf)

### Potential Points for Privilege Checks
- **① Client Process**
- **② D-Bus Daemon** — Request in the middle
- **③ Service Daemon** — After receiving the request

### Privilege Violations
- Failing both checks could allow privilege violations

## Dan: D-Bus Analyzer
### Functionality
- Evaluates privilege verification of D-Bus services
- Spawns a test process on a remote device
- Recursively scans the D-Bus structure
- Reads every property, calls every method

### Output
- Flattened D-Bus structure (db.json)
- For further analysis: dbus-send commands (properties.log, methods.log)

### Statistics
- **Target Device**: Samsung Gear Sport (Build RC4, Tizen 3.0.0.2, Release Date 2018-03-28)
- **Total Bus Names**: 269
- **Readable Properties**: 130,634
- **Callable Methods**: 2,319

## Exploits and Privilege Violations
### Fully Exposed: wpa_supplicant
- Free software implementation of 802.11i
- All is callable and readable
- Violated Tizen privileges: network.get, network.profile, network.set, wifidirect, location, location.enable

### Partially Exposed: projectx.bt/bt_core
- Tizen’s own API/daemons for Bluetooth
- Malware can:
  - Silently accept incoming pair requests
  - Force discoverable “piscan” mode
  - Prompt a PIN request system UI to phish users

### Partially Exposed: bluez
- Bluetooth stack for Linux-like OSes
- No restriction on hcidump utility
- Violated Tizen privileges: bluetooth, bluetoothmanager

### Partially Exposed: enlightenment.screen_capture
- Enlightenment: Tizen’s choice of window manager
- Dump windows into PNG files
- Violated Tizen privileges: screenshot

### Partially Exposed: com.samsung.wnoti
- Manages notifications transmitted to Gear
- Malware can:
  - Clear all notifications
  - Read all data
- Violated Tizen privileges: notification, push

### Partially Exposed: wemail_consumer_service
- Manages user’s mailbox on Gear, communicates with phone
- Malware can:
  - Launch Email app on phone
  - Modify message data
  - Send any email from user’s address
- Violated Tizen privileges: messaging.write, email, email.admin

## Mitigations and Reporting
### Service Rejections
- Private method calls are rejected if the “Id” does not match
- No proper privilege check in place

### Configuration Files
- **wnoti-service.conf**: Only three methods are listed
- **connman.conf and net-config.conf**: Protect Tizen’s own Wi-Fi daemons
- **wpa_supplicant.conf**: Does not exist; D-Bus is not hierarchical

### Proof of Concept (PoC)
- **BitWatch**: Privilege: network.get, internet
- Reads notification data and sends it to a remote server
- Submitted to Samsung Galaxy Apps, passed validation, and was available until taken down

### Vulnerability Reporting
- **Apr 10th**: Vulnerabilities reported to Samsung Mobile Security
- **Apr 19th**: Report triaged by Samsung
- **May 29th**: Updates released for Gear Sport and S3
- **Jul 13th**: Severity assigned High

## Future Work
- Apply Dan to other Tizen systems (Smart TV, home appliances, IoT, etc.)
- Apply Dan to other D-Bus systems
- Develop obfuscation techniques to bypass future mitigations of Galaxy Apps

## Acknowledgments
- **Hyoung-Kee Choi**: Guidance
- **Hyoseok Lee**: Initial research
- **Betty Bae**: Proofreading
- **Gyeonghwan Hong, Shinjo Park, John Steinbach**: Advice