### Suite Negotiation Mechanism

The new options are underlined in the following text. 

**Legend:**
- TLD no cipher-suite
- TLD w/cipher-suite

| Transmitted Bytes [log-scale] | 256 | 512 | 1024 |
|--------------------------------|-----|-----|------|
| Qs                              | 0   | 0.2 | 0.4  |
| s                               | 0.6 | 0.8 | 1    |

**Figure 6:** Amount of bytes transmitted in DNSKEY responses from TLDs, with and without support of cipher-suite negotiation.

We measured the impact of cipher-suite negotiation on the amount of transmitted bytes in signed TLDs using DNSKEY responses. The graph in Figure 6 shows three steps. Intuitively, one might expect to see an almost straight line; however, the steps occur because some domains are in the process of key rollover for ZSK and thus use two ZSKs (in addition to a KSK). The improvement in traffic is the difference between the two graphs: the upper (with cipher-suite negotiation) and the lower (without cipher-suite negotiation).

### Overview: DNS and DNSSEC

#### Domain Name System (DNS)

The Domain Name System (DNS), as defined in [RFC1034] and [RFC1035], is a distributed database that maps domain names to various values, such as IP addresses and name servers. The most common mappings, as per [1], include:

- **A type RRs:** Map a domain name to its IPv4 address.
- **NS type RRs:** Map a name server to a domain name.

For a complete list of standard DNS mappings, refer to [RFC1035].

#### Client-Side Infrastructure

The client side of the DNS infrastructure consists of resolvers, which look up records in zones by sending DNS requests to corresponding name servers. Resolvers communicate with name servers using a simple request-response protocol, typically over UDP. For example, to translate `www.foo.bar`, resolvers locate the name server `ns.foo.bar`, authoritative for `foo.bar`, and obtain the IP address of the machine hosting the web server for `www.foo.bar` (see Figure 7). Resolvers store DNS records in their caches for the duration specified in the Time To Live (TTL) field of each record set.

**Figure 7:** DNS resolution process for `www.foo.bar` and the involved DNS servers.

#### Zone Structure

Zones are structured hierarchically, with the root zone at the first level, Top Level Domains (TLDs) at the second level, and millions of Second Level Domains (SLDs) at the third level. The IP addresses of the 13 root servers are provided via the hints file or compiled into DNS resolver software. When a resolver's cache is empty, every resolution process starts at the root. Based on the query in the DNS request, the root name server redirects the resolver to the corresponding TLD, where the requested resource is located.

There are several types of TLDs, including:

- **Country Code TLD (ccTLD):** Typically assigned to countries, e.g., `.us`, `.il`, `.de`.
- **Generic TLD (gTLD):** Used by organizations, e.g., `.com`, `.org`, and also by US government and military, e.g., `.gov`, `.mil`.

Domains in SLDs can further delegate subdomains to other entities or be directly managed by organizations, e.g., `ibm.com`, `google.com`.

A DNS domain is divided into zones, which include all nodes of the subtree rooted at the zone. A zone can be divided into subdomains, each with its own DNS name servers. For instance, when querying the root zone for `foo.bar.`, the resolver will be redirected to the `bar.` domain via a referral to the authoritative servers for the `bar.` zone. When querying the name servers of `bar.`, the resolver receives another referral for the `foo.bar.` zone. Note that the `bar.` zone does not include subdomains like `foo.bar.`, but these are delegated from `bar.` to their respective name servers.

#### Administration

Domains and their mappings are administered hierarchically. The mappings for each domain `foo.bar` are provided by a name server managed by the domain owner.

### Conclusions and Future Research

DNSSEC deployment has progressed slowly despite being standardized over 15 years ago. One issue is that early adopters do not gain a security benefit and may face interoperability problems and attacks. Currently, almost all (99.9%) DNSSEC signatures use RSA with 1024-bit keys, which is considered insecure. Using 2048-bit keys results in even larger DNS responses.

Signed zones do not deploy stronger ciphers due to compatibility concerns with clients. While domains could use both elliptic curve (or other forms of 'short-key-signatures') and existing RSA signatures, DNSSEC lacks a 'cipher-suite negotiation' mechanism, unlike other IETF cryptographic standards, e.g., TLS [RFC2246]. This means that when a domain uses multiple algorithms (or keys), it sends all keys and signatures to the client, increasing response length. This problem also arises when domains consider using larger RSA keys or more secure algorithms for improved security or periodic key changes. As a result, zones are likely to continue using old keys and ciphers due to interoperability concerns.

These issues hinder the deployment of more appropriate cryptography, leading to large DNSSEC responses, interoperability problems, abuse in reflection amplification DoS attacks, and weak security.

In this work, we reviewed the central security and deployment problems with the current DNSSEC design. We outlined these problems and proposed a transport layer cipher-suite negotiation mechanism to alleviate them. Our mechanism allows domains to use multiple keys and algorithms while sending only those needed by the resolvers. Our study showed that this design would significantly reduce unnecessary DNS traffic and avoid fragmentation and transition to TCP for large responses.

This work focused on negotiating DNSSEC signature algorithms. There are proposals for additional cryptographic defenses to provide confidentiality and privacy in addition to authenticity. We believe our approach can be extended to support negotiation of relevant confidentiality algorithms, e.g., encryption.

### Acknowledgements

This research was supported by:
- Grant 1354/11 from the Israeli Science Foundation (ISF)
- The Ministry of Science and Technology, Israel
- The German Federal Ministry of Education and Research (BMBF) within EC SPRIDE
- The Hessian LOEWE excellence initiative within CASED
- Partially supported by the TENACE PRIN Project (n. 20103P34XC) funded by the Italian Ministry of Education, University and Research.

### References

[1] H. Gao, V. Yegneswaran, Y. Chen, P. Porras, S. Ghosh, J. Jiang, and H. Duan. An empirical reexamination of global DNS behavior. In Proceedings of the ACM SIGCOMM 2013 conference on SIGCOMM, pages 267–278. ACM, 2013.

[2] F. Guo, J. Chen, and T. cker Chiueh. Spoof Detection for Preventing DoS Attacks against DNS Servers. In ICDCS, pages 37–37. IEEE Computer Society, 2006.

[3] A. Herzberg and H. Shulman. Security of patched DNS. In Computer Security - ESORICS 2012 - 17th European Symposium on Research in Computer Security, Pisa, Italy, September 10-12, 2012. Proceedings, pages 271–288, 2012.

[4] A. Herzberg and H. Shulman. Fragmentation Considered Poisonous: or one-domain-to-rule-them-all.org. In IEEE CNS 2013. The Conference on Communications and Network Security, Washington, D.C., U.S. IEEE, 2013.

[5] A. Herzberg and H. Shulman. Vulnerable delegation of DNS resolution. In Computer Security - ESORICS 2013 - 18th European Symposium on Research in Computer Security, Egham, UK, September 9-13, 2013. Proceedings, pages 219–236, 2013.

[6] A. Herzberg and H. Shulman. DNS Authentication as a Service: Preventing Amplification Attacks. In ACM Annual Computer Security Applications Conference (ACM ACSAC), December 2014.

[7] A. Herzberg and H. Shulman. Negotiating DNSSEC Algorithms Over Legacy Proxies. In Cryptology and Network Security, 13th International Conference, (CANS) 2014, Heraklion, Crete, Greece, October 22-24, 2014. Proceedings, 2014.

[8] A. Herzberg and H. Shulman. Retrofitting Security into Network Protocols: The Case of DNSSEC. Internet Computing, IEEE, 18(1):66–71, 2014.

[9] A. Herzberg and H. Shulman. Cipher-Suite Negotiation for DNSSEC: Hop-by-Hop or End-to-End? (to appear) Internet Computing, IEEE, 2015.

[10] Internet Assigned Numbers Authority (IANA). Domain Name System Security (DNSSEC) Algorithm Numbers. http://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml, March 2014.

[11] T. Jager, K. G. Paterson, and J. Somorovsky. One bad apple: Backwards compatibility attacks on state-of-the-art cryptography. In Proceedings of the Network and Distributed System Security Symposium (NDSS), 2013.

[12] W. Lian, E. Rescorla, H. Shacham, and S. Savage. Measuring the Practical Impact of DNSSEC Deployment. In Proceedings of USENIX Security, 2013.

[13] N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov, and B. Preneel. A cross-protocol attack on the TLS protocol. In T. Yu, G. Danezis, and V. D. Gligor, editors, ACM Conference on Computer and Communications Security, pages 62–72. ACM, 2012.

[14] D. Migault, C. Girard, and M. Laurent. A performance view on DNSSEC migration. In Network and Service Management (CNSM), 2010 International Conference on, pages 469–474. IEEE, 2010.

[15] National Institute of Standards and A. N. T. D. Technology. Estimating Industry IPv6 and DNSSEC External Service Deployment Status. http://fedv6-deployment.antd.nist.gov/cgi-bin/generate-com.

[16] E. Rescorla. SSL and TLS: designing and building secure systems, volume 1. Addison-Wesley Reading, 2001.

[17] C. Rossow. Amplification Hell: Revisiting Network Protocols for DDoS Abuse. In Proceedings of the Network and Distributed System Security (NDSS) Symposium, February 2014.

[18] H. Shulman. Pretty Bad Privacy: Pitfalls of DNS Encryption. In Proceedings of the 13th annual ACM workshop on Privacy in the electronic society, WPES '14, 2014.

[19] H. Shulman and M. Waidner. Fragmentation Considered Leaking: Port Inference for DNS Poisoning. In Applied Cryptography and Network Security (ACNS), Lausanne, Switzerland. Springer, 2014.

[20] A. Studer and A. Perrig. The Coremelt Attack. In M. Backes and P. Ning, editors, ESORICS, volume 5789 of Lecture Notes in Computer Science, pages 37–52. Springer, 2009.

[21] R. Tzakikario, D. Touitou, G. Pazi, et al. DNS anti-spoofing using UDP, Nov. 17, 2009. US Patent 7,620,733.