### Google AuthSub
- Pages: 326–327

### Google Docs
- Pages: 279, 284, 302

### grant_type Parameter
- Pages: 87, 91, 144

### G Suite
- Page: 304

### H

#### Handshake Protocol
- Page: 365

#### Alert Protocol
- Page: 365

#### Certificate Verify Message
- Page: 372

#### Change Cipher Spec Protocol
- Page: 365

#### Cipher Suites
- Page: 370

#### Client Hello Message
- Pages: 367, 368

#### Client Key Exchange
- Page: 373

#### premaster key
- Page: 371

#### Server Change Cipher Spec
- Page: 374

#### Server Hello Message
- Page: 369

### Harvard Business Review (HBR)
- Page: 43

### Hash-based Message Authentication Code (HMAC)
- Pages: 97, 158, 433

### Hash Collision Attack (HashDoS)
- Page: 58

### HMAC-SHA256
- **JSON Payload**: Pages 178, 180
- **Non-JSON Payload**: Pages 183, 184

### HTTP Basic Authentication
- **Accessing GitHub API**: Pages 402–405
- **vs. HTTP Digest Authentication**: Page 411
- **1.0 Specification**: Page 402
- **Recipe API**: Pages 418, 419

### HTTP Digest Authentication
- **Client Key Elements**: Pages 408, 410
- **MD5-sess**: Page 410
- **1.0 Specification**: Page 406
- **Recipe API**: Page 422
- **RFC 2617**: Page 410
- **Server Key Elements**: Page 407
- **WWW-Authenticate Challenge**: Page 411

### HTTP Request-Line
- Page: 433

### Hypertext Transfer Protocol (HTTP)
- Pages: 18, 358

### Hypervisor
- Page: 52

### I

### iCloud Password
- Page: 37

### Identity Delegation Model
- **Evolution**:
  - **Flickr**: Page 327
  - **Google AuthSub**: Pages 326, 327
  - **Google Client Login**: Page 325
  - **History**: Page 323
  - **OAuth**: Pages 328–330
  - **Protocols**: Page 330
  - **SlideShare (pre-2006)**: Page 324
  - **Twitter (pre-2006)**: Page 324
  - **Yahoo! BBAuth**: Pages 327, 328

### Identity Provider Mix-Up
- **Attack**: Page 289
- **Authorization Server**: Page 290
- **Callback URLs**: Page 290
- **Grant Type**: Page 290
- **IdP Options**: Page 288
- **IETF Draft Specification**: Page 290
- **Redirection**: Page 289
- **TLS**: Page 288

### Identity Theft Resource Center
- Page: 34

### Implicit Grant Type
- Pages: 88–90, 301, 302

### Indirect Delegation
- Page: 322

### Infrastructure as a Service (IaaS)
- Pages: 38, 52

### Integrated Development Environment (IDE)
- Page: 70

### Integrated Windows Authentication (IWA)
- Page: 308

### Integrity
- Page: 56

### Inter-App Communication
- **HTTPS URI Scheme**: Page 234
- **Loopback Interface**: Page 234
- **Private URI Scheme**: Page 234

### Internet of Things (IoT)
- Page: 1

### Internet Protocol (IP)
- Page: 359

### J

### Java Database Connectivity (JDBC)
- Pages: 14, 15

### Java KeyStore (JKS)
- Page: 74

### JavaScript Object Signing and Encryption (JOSE)
- **Claims Set**: Pages 160, 161
- **Specification**: Pages 161–163
- **Header**: Page 158
- **Parameters**: Page 159
- **Signature**: Pages 163–166
- **Working Groups**: Page 166

### JSON Web Encryption (JWE)
- Pages: 136, 185

### JSON Web Signature (JWS)
- **Compact Serialization**: See JWS Compact Serialization
- **JSON Serialization**: See JWS JSON Serialization
- **Nonrepudiation**: Pages 311, 312

### JSON Web Token (JWT)
- **aud Parameter**: Page 274
- **Authorization Server**: Pages 121, 123, 124
- **exp Parameter**: Page 275
- **MAC**: Page 275
- **nbf Parameter**: Page 275
- **Token Validation**: Page 274

### JWE Compact Serialization
- **Ciphertext**: Page 194
- **Initialization Vector**: Page 194
- **JOSE Header**: Pages 186, 188–191
- **JWE Encrypted Key**: Page 191
- **Process of Encryption**: Pages 195, 196

### JWE JSON Serialization
- **Authentication Tag**: Page 199
- **Ciphertext**: Page 198
- **Encryption Process**: Pages 199, 200
- **Initialization Vector**: Page 198
- **Per-Recipient Unprotected Header**: Page 198
- **Protected Header**: Page 197
- **Unprotected Header**: Page 197

### JWE vs. JWS
- Pages: 202, 203

### JWS Compact Serialization
- **JOSE Header**: Pages 167, 169–172
- **JWS Payload**: Page 172
- **JWS Signature**: Page 172
- **Process of Signing**: Pages 172, 173

### JWS JSON Serialization
- **Building Ingredients**: Pages 176, 177
- **Payload**: Page 174
- **Protected Header**: Page 175
- **Signature**: Page 175
- **Unprotected Header**: Page 175

### JWT Client Authentication
- **Application**: Pages 271–273
- **OAuth Authorization Server**: Page 270
- **Parameters**: Page 271
- **RFC 7523**: Page 271

### JWT Grant Type
- **Applications**: Pages 269, 270
- **Assertion**: Page 268
- **grant_type**: Page 268
- **Identity Provider**: Page 267
- **OAuth 2.0 Grant Types**: Page 267
- **RFC 7521**: Page 268
- **Scope Parameter**: Page 268

### JWT Secured Authorization Request (JAR)
- Pages: 97, 98

### K

### Keep It Simple, Stupid (KISS) Principle
- Page: 48

### Kerckhoffs’ Principle
- Pages: 44, 66

### Key Agreement, Key Wrapping
- Page: 193

### Key Encryption
- Page: 193

### Key Generation
- Page: 247

### Key Wrapping
- Page: 193

### L

### Least Common Mechanism
- Pages: 52, 53

### Lightweight Directory Access Protocol (LDAP)
- Page: 40

### Linux Security Modules (LSM)
- Page: 63

### M

### MD5 Algorithm
- Page: 38

### Message Authentication Code (MAC)
- **Token Profile**: Page 425
- **General**: Pages 64, 275

### Microservices
- **Business Capabilities**: Page 29
- **Componentization**: Page 28
- **Decentralized Governance**: Page 30
- **Design for Failure**: Page 31
- **Infrastructure Automation**: Page 30
- **Products**: Page 29
- **Smart Endpoints**: Page 29

### Microsoft Active Directory (AD)
- Page: 305

### Mobile Single Sign-On (SSO), Login
- **Direct Credentials**: Pages 228, 229
- **System Browser**: Pages 230, 231
- **WebView**: Pages 229, 230

### Multifactor Authentication
- Pages: 59, 60

### Mutual Transport Layer Security (mTLS)
- Pages: 220, 305

### N

### National Security Agency (NSA)
- Pages: 41, 46, 355

### Nested JWT
- Pages: 201, 207, 209

### Netflix API
- Page: 25

### Nginx
- Pages: 246, 254

### Nonrepudiation
- Pages: 64, 65, 312

### O

### OAuth 1.0
- **OAuth Signature**:
  - **Building Signature**: Page 343
  - **Business API Invocation**: Pages 344, 346
  - **PLAINTEXT Method**: Page 340
  - **Temporary-Credential Request Phase**: Pages 340, 342
  - **Token Credential Request Phase**: Page 342
- **Three-Legged vs. Two-Legged OAuth**: Page 346
- **Token Dance**:
  - **Business API, Invoking**: Pages 338, 339
  - **Resource-Owner Authorization Phase**: Page 335
  - **Temporary-Credential Request Endpoint**: Pages 333, 334
  - **Token-Credential Request Phase**: Pages 336, 337

### OAuth 1.0 vs. OAuth 2.0
- Page: 96

### OAuth 2.0
- **Access Delegation Problem**: Pages 81, 83
- **Actors Role**: Page 83
- **Client Types**:
  - **Confidential Clients**: Page 96
  - **Public Clients**: Page 96
- **MAC Token Profile**:
  - **Access Token**: Page 431
  - **Audience Parameter**: Page 431
  - **vs. Bearer Token**: Page 427
  - **cURL Command**: Page 429
  - **Grant Types**: Page 436
  - **HMAC-SHA1**: Page 433
  - **HMAC-SHA256**: Page 433
  - **Parameter**: Page 430
  - **Protected API Invocation**: Page 432
  - **HTTP Request-Line**: Pages 433, 434
  - **Resource Server, Validation**: Pages 435, 436
  - **response_type Value**: Page 428
- **Refresh Token**: Page 92
- **WRAP (Web Resource Authorization Profiles)**: See WRAP
- **Device Authorization Grant**:
  - **Authorization Request**: Pages 239, 240
  - **Authorization Server**: Page 238
  - **Draft Proposal**: Page 237
  - **expires_in Parameter**: Page 239
  - **grant_type Parameter**: Page 239
  - **Login Flow**: Page 238
- **Grant Types vs. OAuth WRAP Profiles**: Page 84
- **MAC Token Profile vs. OAuth 2.0**: Page 437
- **Native Mobile App**:
  - **Access Token**: Page 233
  - **Authorization**: Page 233
  - **Client Registration Profile**: Page 232
  - **Identity Provider**: Page 232
  - **Inter-App Communication**: See Inter-App Communication
  - **Login Flow**: Page 232
  - **PKCE**: Pages 235–237
  - **URL Scheme**: Page 233
- **Refresh Tokens**: Page 249
- **Token Validation**: Page 109
- **Bearer Token**: Page 95

### Open Design Principle
- Pages: 49, 50

### OpenID Connect
- **Amazon**: Page 132
- **API Security**: Page 154
- **Directed Identity**: Page 131
- **Dynamic Client Registration**: Pages 151, 155
- **Flow Chart Representation**: Page 148
- **Identity Provider Metadata**: Page 149
- **ID Token**:
  - **Attributes**: Page 134
  - **JWE**: Page 136
  - **JWS**: Page 136
  - **JWT**: Page 134
- **Overview**: Page 129
- **Protocol Flow**: Page 131
- **Relying Party**: Page 130
- **Request Attributes**: Page 139
- **User Attributes**: Pages 142, 145
- **WebFinger Protocol**:
  - **Identity Provider**: Page 149
  - **rel Parameter**: Page 148
  - **resource Parameter**: Page 148

### Open Policy Agent (OPA)
- Page: 64

### Open Redirector
- **Attack**: Page 299
- **Prevention**: Pages 299, 300
- **Query Parameter**: Page 298
- **redirect_uri**: Page 298

### OpenSSL on Docker
- Pages: 78, 79

### Optimal Asymmetric Encryption Padding (OAEP) Method
- Page: 192

### P, Q

### @PathVariable
- Page: 72

### Perfect Forward Secrecy (PFS)
- Page: 376

### Personal Financial Management (PFM) Application
- Pages: 277, 281

### Phishing Attack
- **Domain Name**: Page 303
- **Facebook**: Page 304
- **Google Docs**: Pages 302, 303