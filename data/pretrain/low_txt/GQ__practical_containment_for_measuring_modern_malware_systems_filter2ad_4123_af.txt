### 文献引用

1. Systems (TOCS), 18(3):263–297, 2000.
2. C. Kolbitsch, T. Holz, C. Kruegel, and E. Kirda. Inspector Gadget: Automated extraction of proprietary gadgets from malware binaries. In *2010 IEEE Symposium on Security and Privacy*, pages 29–44. IEEE, 2010.
3. C. Kreibich, C. Kanich, K. Levchenko, B. Enright, G. M. Voelker, V. Paxson, and S. Savage. On the Spam Campaign Trail. In *Proceedings of the First USENIX Workshop on Large-scale Exploits and Emergent Threats (LEET)*, San Francisco, USA, April 2008.
4. C. Kreibich, C. Kanich, K. Levchenko, B. Enright, G. M. Voelker, V. Paxson, and S. Savage. Spamcraft: An inside look at spam campaign orchestration. In *Proceedings of the Second USENIX Workshop on Large-scale Exploits and Emergent Threats (LEET)*, Boston, USA, April 2009.
5. N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, S. Shenker, and J. Turner. OpenFlow: Enabling Innovation in Campus Networks. *ACM SIGCOMM Computer Communication Review*, 38(2):69–74, 2008.
6. B. Miller, P. Pearce, C. Grier, C. Kreibich, and V. Paxson. What’s Clicking What? Techniques and Innovations of Today’s Clickbots. In *Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)*. Springer, July 2011.
7. J. Mirkovic, T. V. Benzel, T. Faber, R. Braden, J. T. Wroclawski, and S. Schwab. The DETER Project: Advancing the Science of Cyber Security Experimentation and Test. In *IEEE Intl. Conference on Technologies for Homeland Security (HST)*, page 7, November 2010.
8. Norman ASA. Norman Sandbox. <http://www.norman.com/security_center/security_tools/>.
9. V. Paxson. Bro: A System for Detecting Network Intruders in Real-Time. *Proceedings of the 7th USENIX Security Symposium*, pages 31–51, 1998.
10. A. Pitsillidis, K. Levchenko, C. Kreibich, C. Kanich, G. Voelker, V. Paxson, N. Weaver, and S. Savage. Botnet Judo: Fighting Spam with Itself. In *Proceedings of the 17th Annual Network and Distributed System Security Symposium (NDSS)*, San Diego, CA, USA, March 2010.
11. J. Postel. Simple Mail Transfer Protocol. *RFC 821*, August 1982.
12. G. Tenebro. W32.Waledac Threat Analysis. <http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/W32_Waledac.pdf>, 2009.
13. N. Villeneuve. Koobface: Inside a Crimeware Network. <http://www.infowar-monitor.net/reports/iwm-koobface.pdf>, November 2010.
14. M. Vrable, J. Ma, J. Chen, D. Moore, E. Vandekieft, A. Snoeren, G. Voelker, and S. Savage. Scalability, Fidelity, and Containment in the Potemkin Virtual Honeyfarm. *ACM SIGOPS Operating Systems Review*, 39(5):148–162, 2005.
15. Y. Wang, D. Beck, X. Jiang, and R. Roussev. Automated Web Patrol with Strider Honeymonkeys: Finding Websites that Exploit Browser Vulnerabilities. In *Proceedings of the 13th Annual Network and Distributed System Security Symposium (NDSS)*, San Diego, CA, USA, March 2006.
16. C. Willems, T. Holz, and F. Freiling. Toward Automated Dynamic Malware Analysis Using CWSandbox. *IEEE Security & Privacy*, pages 32–39, 2007.

### 评审总结文档
**论文题目：GQ: 实用的现代恶意软件系统测量和控制**
**作者：C. Kreibich, N. Weaver, C. Kanich, W. Cui, V. Paxson**

#### 评审人 #1
**优点：**
- GQ 对研究恶意软件非常有用。
- 作者讨论了六年来运营该农场的经验，这对未来的农场开发者可能很有价值。

**缺点：**
- 该工作没有提供关于控制策略设计的新见解。
- 主要结论是应从拒绝所有开始手动实现策略，这并不新颖。
- 论文侧重于 GQ 的实现和配置细节，未能明确指出其解决的研究挑战。

**对作者的建议：**
- 论文读起来有些像软件配置/实现指南。建议更好地解释所面临的挑战及其设计选择。
- 之前的工作 [Botlab] 发现控制问题难以解决，因为即使允许良性消息也可能导致第三方机器人传输有害流量。作者对此有何看法？GQ 是否解决了这个问题？
- 作者提到“GQ 使控制策略开发成为恶意软件分析过程中的自然组成部分”。希望更清楚地说明“自然组成部分”的含义。
- 第四节中提到的“政策与机制分离”是什么意思？是否指两者应物理分离以避免资源竞争？

#### 评审人 #2
**优点：**
- 设计出色，展示了作者在实际恶意软件分析方面的熟悉程度。
- 平台足够灵活，可以详细研究大多数现有恶意软件，同时保持对其可能造成的损害的精细控制。

**缺点：**
- 恶意软件分析仍然需要大量手动操作，因此对设计严格性的需求有所降低。
- 该平台的发展表明作者陷入了军备竞赛；此工作的发表可能会使其过时。

**对作者的建议：**
- 标题和内容不完全匹配。标题涉及“实用”，但论文中未提及“实用”。GQ 为什么是“实用”的？
- 引言中提到“原则性方法”，但未描述具体的原则。也许有某种方法论，或者读者应该自己理解这些构成了“原则性方法”。但这似乎是对工程成就的过度推销，并且对先前工作进行了不必要的贬低。
- 最终，在结论部分，作者承认“[GQ] 提供了基于原则的方法的基础”——这似乎是退回到引言中承诺的原则性方法。
- 作为不太熟悉恶意软件研究的人，我想知道 GQ 会给恶意软件研究人员带来什么好处，考虑到每种恶意软件仍需要大量手动分析。它是否有助于避免外部损害？第 8 节特别重要，回答了许多我在引言中留下的问题，因此建议将其移至引言附近。

#### 评审人 #3
**优点：**
- 论文介绍了一个有用的、具有挑战性的实际系统。
- 设计很好。

**缺点：**
- 但没有引入任何新想法，也没有带来对恶意软件工作方式的新理解。
- 承诺过多（但这是展示的问题）。

**对作者的建议：**
- 系统是有用的，将控制策略的实施分配给单独的控制服务器是一个很好的设计选择。
- 但是，不清楚这篇论文如何推进了现有技术。设计中没有任何新颖的技术。系统仍然需要手动试错来确定每个流的控制策略。
- 关于展示的一个抱怨：论文有些夸大其词。特别是，标题谈到*实用*的控制；我认为手动试错不符合实用。引言中谈到“原则性控制”，这让我期待会有一套指导研究人员选择控制策略的原则；论文中唯一倡导的原则是将控制策略与执行分离。
- 一些小问题：第 5.5 节中，为什么被控对象控制器位于网关中心？不能在单独的服务器上实现吗？同一节中提到子农场有自己的控制服务器，“从而提供特定于子农场的控制策略。” 这句话令人困惑。这意味着需要单独的服务器来实现不同的策略，不是这样吗？

#### 评审人 #4
**优点：**
- 主题很棒，对社区很重要。
- 涵盖了主要问题：架构、实现、经验教训/政策创建。

**缺点：**
- 未分享足够的过去控制策略信息。
- 未解释这与之前的出版物（例如参考文献 9）有何不同。
- 未涵盖性能影响。

**对作者的建议：**
- 很好的论文！控制确实被视为一项苦差事，引起对此问题的关注很好。
- 不确定我是否相信您的系统会让控制不再是苦差事，但至少控制会更容易进行并以深思熟虑的方式实现。
- 您是否考虑过向社区发布工具（例如网关+控制服务器）是否有意义？
- 唯一的失望是没有看到更多关于您过去使用的控制策略的信息。很高兴看到最后一节关于创建控制策略的建议。
- 尽管本文包含新材料，但在参考文献部分，您仍需解释您的工作不仅与其他人的工作不同，而且与 2006 年的论文（参考文献 9）有何不同。
- 在可读性方面，一开始很难区分控制服务器和网关的角色以及它们如何通信。您在论文后面会覆盖这一点，但建议在前面就提到这一点。
- 您能否解释一下您的系统对通信性能的影响？例如，增加了多少延迟？

#### 评审人 #5
**优点：**
- 论文介绍了一个长期运行的恶意软件测量和控制系统部署实验。
- 系统已运行五年，有许多有用的见解。

**缺点：**
- 评估和轶事部分有点薄弱——对于五年的研究，我本以为测量部分会是论文的核心。相反，作者在这篇 14 页的论文中仅用了大约 3 页来介绍操作经验。

**对作者的建议：**
- 我认为问题领域和提出的解决方案非常重要。显然，本文提出的方法非常有用，并在网络安全部门产生了重大影响。
- 有一些有趣的内容，例如他们的系统在 2009 年 6 月被列入黑名单，随后得到了修复。
- 由于我不是这个领域的专家，无法判断贡献的相对新颖性。然而，鉴于这是一篇测量论文，我对测量结果的轻描淡写感到惊讶。提到了一些有趣的内容，但论文更像是关于潜在系统设计，而不是测量研究本身。

### 作者回应
多位评审者建议我们解决的研究问题不够明确，并且技术上几乎没有新意。我们认为主要贡献在于 GQ 使控制*开发*（而不是依赖预先设定的固定过滤策略）成为恶意软件实验过程的一级组成部分。

为了回应评审人 #1 的担忧，我们扩展了对控制问题理论不可解性的评论，这部分最初只是在论文末尾简要提及。我们也澄清了什么是“自然组成部分”。

我们承认评审人 #2 批评说即使有了 GQ，控制开发过程仍然是很大程度上手动的。正如论文所述，我们认为这并不一定是坏事。在许多情况下，需要了解监控的恶意软件正在做什么。我们认为迭代开发合适的控制策略实际上是一种自然的方式来获得这种理解，至少直到提取恶意软件可执行文件语义的二进制分析工具变得更加强大为止。我们在论文中强化了这一论点。我们遗憾的是，这位评审者（以及部分评审人 #3）认为我们夸大了 GQ 使控制策略开发变得有原则性和实用的程度。我们的主要观点是，与现有工作/方法相比，GQ 在相对意义上确实如此；我们认识到在绝对意义上还有很长的路要走。

关于评审人 #4 提出的是否会考虑向社区发布网关和控制服务器代码的问题，我们确实考虑过这一点。然而，在我们的经验中，恶意软件执行平台差异很大，使我们的代码在多种环境中工作可能会很困难。此外，我们缺乏支持公共发布的必要维护承诺。

我们改进了相关工作的处理，如评审人 #4 所要求，并澄清了网关和控制服务器的区别。

关于评审人 #5 的评论，我们想说的是，我们认为当前 GQ 架构*启用*策略开发的方式比详细报告过去的控制策略更重要，因为这些策略因恶意软件的特性而变得非常个性化且通常是短暂的。

最后，我们改进了整个论文的措辞，希望能满足评审者提出的各种澄清请求。