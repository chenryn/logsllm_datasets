# Establishing and Maintaining Root of Trust on Commodity Computer Systems

**Author:** Virgil D. Gligor  
**Affiliation:** Carnegie Mellon University, Pittsburgh, PA 15213  
**Email:** [PI:EMAIL]

## CCS Concepts/ACM Classifiers
- **Security and Privacy:** System Security, Trusted Computing

## Author Keywords
- Root of trust establishment
- Persistent malware
- Unconditional malware detection
- Application isolation
- I/O separation
- On-demand I/O channels

## Biography
Virgil D. Gligor is a Professor of Electrical and Computer Engineering (ECE) at Carnegie Mellon University. His research spans various areas, including access control, penetration analysis, denial-of-service attacks, and applied cryptography. He has served as an Associate Editor for several ACM and IEEE journals and was the Editor-in-Chief of the IEEE Transactions on Dependable and Secure Computing. 

Gligor has received numerous awards, including the 2006 National Information Systems Security Award jointly given by NIST and NSA, the 2011 Outstanding Innovation Award from the ACM SIGSAC, and the 2013 Technical Achievement Award from the IEEE Computer Society. He is also an inductee into the National Cyber Security Hall of Fame.

## References
1. Virgil D. Gligor, Maverick Woo, "Establishing Software Root of Trust Unconditionally," in Proc. of NDSS, February 2019.
2. Virgil D. Gligor, "Dancing with the Adversary – A Tale of Wimps and Giants," in Proc. of 22nd SPW, Cambridge, UK, (LNCS 8809), March 2014.

## Abstract
Suppose a trustworthy program must be booted on a commodity system that may contain persistent malware. Establishing a root of trust (RoT) ensures that the system contains only the content chosen by a trusted verifier or that the verifier discovers any unaccounted content with high probability. Achieving this assurance is challenging because malware can persist across repeated secure and trusted boot operations and act on behalf of a powerful remote adversary.

In this presentation, I will discuss both the theoretical and practical challenges of establishing RoT unconditionally—i.e., without relying on secrets, trusted hardware modules (e.g., TPMs, HSMs), or adversary computation bounds. I will also present the only known unconditional solution to this problem.

Establishing a root of trust forces the adversary to repeat the malware-insertion attack, potentially at some added cost. However, the size and complexity of commodity OS components (referred to as "giants") make them vulnerable to such attacks. In contrast, small and simple software components (referred to as "wimps") with limited functionality and high-assurance security properties can, in principle, be resistant to attack.

Maintaining root of trust assures users that the wimps are isolated from and can safely co-exist with adversary-controlled giants. However, regardless of how secure program isolation is, I/O separation must also be achieved despite the pitfalls of commodity architectures that encourage I/O hardware sharing rather than isolation. In this presentation, I will also discuss the challenges of I/O separation and present an approach that enables the coexistence of secure wimps with insecure giants, using an example of a system implemented at CMU.

## Copyright Notice
Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee, provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the Owner/Author.

AsiaCCS '19, July 9–12, 2019, Auckland, New Zealand.  
© 2019 Copyright is held by the owner/author(s).  
ACM ISBN 978-1-4503-6752-3/19/07.  
DOI: https://doi.org/10.1145/3321705.3329913  
Keynote 1, AsiaCCS '19, July 9–12, 2019, Auckland, New Zealand