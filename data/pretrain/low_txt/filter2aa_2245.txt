# Mobile Privacy: Tor on the iPhone and Other Unusual Devices

## Presenter
**Marco Bonetti**  
Security Consultant at CutAway s.r.l.  
Contact: [PI:EMAIL](mailto:PI:EMAIL)  
Website: [CutAway s.r.l.](http://www.cutaway.it/)  
Tor User & Researcher at SLP-IT  
Additional Links: 
- [SLP-IT](http://sid77.slackware.it/)
- [Slackware.IT](http://www.slackware.it/)
- [Twitter: @\_sid77](http://twitter.com/_sid77/)

## Outline
1. Mobile Phones (In)Security
2. Tor on Mobile Phones and Other Strange Devices
3. Tor on the Chumby One
4. Tor on Maemo and the Nokia N900
5. Orbot: Tor on Android
6. Mobile Tor: Tor on the iPhone
7. Development and Future Directions
8. Questions

## Mobile Phones (In)Security
### Mobile Phone Growth
- **Computational Power**: Modern smartphones have significant processing capabilities.
- **High-Speed Data Networks**: 4G, 5G, and other high-speed networks.
- **Operating Systems**: Advanced OS like iOS, Android, and others.

### Personal Nature of Phones
- **Ubiquity**: Most people own a mobile phone and carry it everywhere.
- **Critical Data**: Call logs, address books, emails, SMS, GPS data, documents, calendar events, browser history, and cache.

### Trust Issues
- **User Trust**: Users trust their phones with sensitive information.
- **Operator Trust**: Phones and users trust the network operators.
- **Heterogeneity**: Closed communication protocols, heterogeneous networks, fragmented hardware, and multiple operating systems.

### Architectural Challenges
- **Design for Communication**: Phones are primarily designed for chatting and texting.
- **Limited Screen Size**: Difficult to manage complex tasks or check important details.
- **Ownership Concerns**: Manufacturers, vendors, carrier operators, and application developers all have some control over the device.

### Data (In)Security
- **Cleartext Storage**: Data is often stored in cleartext.
- **Encryption Options**: Some devices (e.g., BlackBerry, Nokia) offer encryption.
- **All-or-Nothing Access**: Fine-grained permissions are needed.

### Communication (In)Security
- **Vulnerable Protocols**: GSM, UMTS, SMS, MMS, and other protocols have known vulnerabilities.
- **Wireless Attacks**: Bluetooth, Wi-Fi, NFC, and operator-injected HTTP headers pose risks.
- **SSL/WTLS**: Heavy on lower-end phones, making secure communication challenging.

## Tor on Mobile Phones and Other Strange Devices
### Tor Crash Course
- **Introduction to Tor**: Brief overview of how Tor works.

### Tor on Unusual Devices
- **Timeline**:
  - December 2007: iPhone
  - December 2009: Chumby One
  - February 2010: iPhone (again)
  - February 2010: Nokia N900
  - March 2010: Android

### Tor on the Chumby One
- **Device Specifications**:
  - Hackable Linux device
  - ARM CPU, 64MB RAM
  - Created by bunnie of bunnie:studios and Jacob Appelbaum
- **Installation**:
  - **Hard Way**: Cross-toolchain, source checkout, build, and reboot.
  - **Easy Way**: Unzip build on USB key and reboot.
- **Running Tor**:
  - Swap file required
  - Configured as a bridge
  - Listening on TCP 443
  - Low resource consumption
  - No upgrade mechanism
  - Unofficial support for 3G dongles
- **Achievements**:
  - Running Tor on limited resources
  - Easy installation method

### Tor on Maemo and the Nokia N900
- **Device Specifications**:
  - Powerful ARM CPU, 256MB RAM
- **Installation**:
  - Enable extras-devel
  - Install via package manager
- **Running Tor**:
  - Toggle to start
- **Achievements**:
  - Easy installation and upgrade
  - First graphical controller application

### Orbot: Tor on Android
- **Device Specifications**:
  - Linux-based OS, many different devices
  - Built by The Guardian Project
- **Installation**:
  - Scan QR code (not yet in the Android Market)
- **Running Tor**:
  - Toggle to start
  - Highly configurable
  - Transparent proxy for rooted devices
- **Achievements**:
  - Easy installation
  - High configurability
  - Transparent proxy

### Mobile Tor: Tor on the iPhone
- **Device Specifications**:
  - Hackable Darwin (iOS) devices
  - Powerful ARM CPU, 256MB RAM
- **The Original Port**:
  - Made by cjacker huang
  - Built for iPhone OS 1.1.1
  - Patches to overcome firmware limitations
  - Shipped with Privoxy and iTor.app
- **Bringing Back Tor on the iPhone**:
  - Open-source toolchain
  - SDK target: iPhone OS 3.1.2
  - Cross-compiling from Slackware 13.1
  - Built following Jay Freeman's conventions for Cydia packages
  - Sources available as an overlay for Telesphoreo Tangelo
- **The New Port**:
  - Made by Marco Bonetti
  - Built for iPhone OS 3.1.2
  - No need for old patches
  - Shipped with Polipo and an SBSettings plugin
- **Running Tor**:
  - Add repository and install Tor Toggle
  - Toggle to start
  - Supports client, relay, and hidden services
  - Works via wireless and cellular data networks
- **iPhone OS Limitations**:
  - No support for SOCKS proxies
  - No HTTP proxies for cellular data networks
  - No Tor-secure browser
- **Tor Limitations**:
  - Cryptographically intensive
  - Heavy on battery drain
  - Cellular data networks are not very Tor-friendly
  - Rapidly changing IP addresses
  - Spot coverage

## Development and Future Directions
- **Current State**:
  - Still requires CLI fiddling
  - Need for a graphical controller (Vidalia style)
  - Need for a secure browser
- **Future Ideas**:
  - Arm compatibility
  - OnionCat
  - Work on ttdnsd
  - iPad integration

## Questions?
- Released under Creative Commons Attribution Share-Alike 3.0 Unported
- [Creative Commons License](http://creativecommons.org/licenses/by-sa/3.0/)
- [Presenter's Website](http://sid77.slackware.it/)
- [Presenter's Twitter](http://twitter.com/_sid77/)

---

This optimized version aims to make the content more structured, clear, and professional, while maintaining the original information and intent.