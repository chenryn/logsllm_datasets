### 5. Empirical Study on Android Applications
Our empirical study focuses on the privacy policies of Android applications. While we cannot generalize our findings to other platforms (e.g., iOS, web), we hypothesize that our findings on disclosure types would likely be similar in other domains. This is because privacy policies are generally written to cover multi-platform applications, and similar data types are available for collection across different platforms.

### 8. Related Work
In recent years, there has been an increased focus on analyzing flow-to-policy inconsistencies in mobile applications. The methods used to analyze app behavioral flows and privacy policies vary. Many prior works [29, 34, 38] use Android's application programming interface (API) calls to evaluate privacy breaches. Wang et al. [32] extended the taint sources to include sensitive data entered through an app’s user interface (UI).

For policy analysis, Zimmeck et al. [38] and Yu et al. [34] rely on keyword-based approaches, using bi-grams and verb modifiers respectively, to infer the content of privacy policies. Slavin et al. [29] and Wang et al. [32] use crowdsourced ontologies for policy analysis. POLICHECK makes significant advancements over these prior works by considering the DNS domains of data-receiving entities for a comprehensive, entity-sensitive analysis. The accuracy of the analysis is further improved by accounting for entities, statement sentiment, and different semantic granularities, as well as internal contradictions. Our empirical results (Section 5) demonstrate the effectiveness of these capabilities.

Other recent research has focused on analyzing specific application categories, such as those designed for families, for compliance and privacy violations [17, 21, 26, 27]. Similar to POLICHECK, they use dynamic analysis to identify sensitive flows and the entities receiving the data. However, their policy analysis is either manual [17, 26, 27] or semi-automatic based on keyword searches [21]. While these approaches may work for a specific category of apps with explicit requirements, they are limited in precision and scale for broader categories. In contrast, POLICHECK uses an automated, comprehensive policy analysis that improves precision by considering additional factors such as semantic granularities and contradictions.

Several works focus on the automated analysis of privacy policies themselves. Privee [37] uses natural language processing to derive answers to a limited set of binary questions from privacy policies, while Hermes [31] applies topic modeling to reduce ambiguity. PrivacyCheck [35] uses data mining models to automatically extract graphical summaries representing what information is used and how. A more recent work, Polisis [19], provides an automated policy analysis tool that uses deep learning to infer the types of data collected and the reasons for collection. While it offers alternative approaches for comprehensive policy analysis, it does not consider negations and exclusions in text. PolicyLint [4] recently showed that a considerable number of policies include negations and exclusions that would be missed by prior works. Our policy analysis is built on top of PolicyLint, thereby improving precision over prior art. Moreover, none of these works focus on the evaluation of app behavior, which is a core component of our entity-sensitive flow-to-policy analysis.

There is a rich body of work aimed at understanding [8, 13, 22, 33] and bridging [28, 36] the gap between application behaviors and users’ understanding of these behaviors. POLICHECK differs from these works in its focus on analyzing privacy policy to behavior inconsistencies.

### 9. Conclusion
Privacy threats from mobile applications are arguably a greater risk than malware for most smartphone users. While the last decade has seen the development of many static and dynamic analyses to detect when mobile applications send privacy-sensitive data to the network, such data flows are not necessarily privacy leaks if they are disclosed in a privacy policy. Recently, several efforts have sought to automate the detection of privacy leaks by contrasting data flows with the application’s privacy policy. However, these works have a fundamental limitation: they do not consider the entity receiving the data (e.g., first-party vs. third-party). In this paper, we proposed POLICHECK and an entity-sensitive flow-to-policy consistency model. We used POLICHECK to study 13,796 applications, comparing their data flows to their policy statements. We found significant evidence of omitted, incorrect, and ambiguous disclosures, many of which can only be identified by considering the entity. As such, POLICHECK provides the highest-precision method to date to determine if apps properly disclose their privacy-sensitive behaviors.

### Acknowledgment
We thank our shepherd, Anita Nikolich, and the anonymous reviewers for their valuable comments. This work is supported in part by NSF grant CNS-1513690. Any findings and opinions expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies.

---

### References
[1] California Consumer Privacy Act (CCPA). https://oag.ca.gov/privacy/ccpa.
[2] Children’s Online Privacy Protection Rule. https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/childrens-online-privacy-protection-rule.
[3] The EU General Data Protection Regulation. https://eugdpr.org.
[4] Benjamin Andow, Samin Yaseer Mahmud, Wenyu Wang, Justin Whitaker, William Enck, Bradley Reaves, Kapil Singh, and Tao Xie. PolicyLint: Investigating Internal Privacy Policy Contradictions on Google Play. In Proceedings of the USENIX Security Symposium, August 2019.
[5] Android Studio. UI/Application Exerciser Monkey. https://developer.android.com/studio/test/monkey.html, 2019. Accessed: May 15, 2019.
[6] AppCensus AppSearch. https://search.appcensus.io/.
[7] Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bartel, Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick McDaniel. FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps. In Proceedings of the ACM Conference on Programming Language Design and Implementation (PLDI), 2014.
[8] David Barrera, H. Güneş Kayacik, Paul C. van Oorschot, and Anil Somayaji. A Methodology for Empirical Analysis of Permission-based Security Models and Its Application to Android. In Proceedings of the ACM SIGSAC Conference on Computer and Communications Security (CCS), October 2010.
[9] J. Bowers, B. Reaves, I. Sherman, P. Traynor, and K. Butler. Regulators, Mount Up! Analysis of Privacy Policies for Mobile Money Applications. In Proceedings of the USENIX Symposium on Usable Privacy and Security (SOUPS), 2017.
[10] Manuel Egele, Christopher Kruegel, Engin Kirda, and Giovanni Vigna. PiOS: Detecting Privacy Leaks in iOS Applications. In Proceedings of the ISOC Network and Distributed System Security Symposium (NDSS), February 2011.
[11] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox, Jaeyeon Jung, Patrick McDaniel, and Anmol N. Sheth. TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones. In Proceedings of the USENIX Symposium on Operating Systems Design and Implementation (OSDI), October 2010.
[12] William Enck, Damien Octeau, Patrick McDaniel, and Swarat Chaudhuri. A Study of Android Application Security. In Proceedings of the USENIX Security Symposium, August 2011.
[13] Adrienne Porter Felt, Erika Chin, Steve Hanna, Dawn Song, and David Wagner. Android Permissions Demystified. In Proceedings of the ACM SIGSAC Conference on Computer and Communications Security (CCS), October 2011.
[14] Xinming Ou, Fengguo Wei, Sankardas Roy, and Robby. Amandroid: A Precise and General Inter-component Data Flow Analysis Framework for Security Vetting of Android Apps. In Proceedings of the ACM Conference on Computer and Communications Security (CCS), November 2014.
[15] In the Matter of Goldenshores Technologies, LLC, and Erik M. Geidl. https://www.ftc.gov/enforcement/cases-proceedings/132-3087/goldenshores-technologies-llc-erik-m-geidl-matter.
[16] Michael Grace, Wu Zhou, Xuxian Jiang, and Ahmad-Reza Sadeghi. Unsafe Exposure Analysis of Mobile In-App Advertisements. In Proceedings of the ACM Conference on Security and Privacy in Wireless and Mobile Networks (WiSec), 2012.
[17] Catherine Han, Irwin Reyes, Amit Elazari Bar On, Joel Reardon, Álvaro Feal, Kenneth A. Bamberger, Serge Egelman, and Narseo Vallina-Rodriguez. Do You Get What You Pay For? Comparing The Privacy Behaviors of Free vs. Paid Apps. In Workshop on Technology and Consumer Protection (ConPro), May 2019.
[18] Jin Han, Qiang Yan, Debin Gao, Jianying Zhou, and Robert Deng. Comparing Mobile Privacy Protection through Cross-Platform Applications. In Proceedings of the ISOC Network and Distributed Systems Symposium (NDSS), February 2013.
[19] Hamza Harkous, Kassem Fawaz, Rémi Lebret, Florian Schaub, Kang G. Shin, and Karl Aberer. Polisis: Automated Analysis and Presentation of Privacy Policies Using Deep Learning. In Proceedings of the USENIX Security Symposium, 2018.
[20] J. Bowers, K. Butler, I. Sherman, and P. Traynor. Characterizing Security and Privacy Practices in Emerging Digital Credit Applications. In Proceedings of the ACM Conference on Security and Privacy in Wireless and Mobile Networks (WiSec), 2019.
[21] Ehimare Okoyomon, Nikita Samarin, Primal Wijesekera, Amit Elazari Bar On, Narseo Vallina-Rodriguez, Irwin Reyes, Álvaro Feal, and Serge Egelman. On The Ridiculousness of Notice and Consent: Contradictions in App Privacy Policies. In Workshop on Technology and Consumer Protection (ConPro), May 2019.
[22] Hao Peng, Chris Gates, Bhaskar Sarma, Ninghui Li, Alan Qi, Rahul Potharaju, Cristina Nita-Rotaru, and Ian Molloy. Using Probabilistic Generative Models for Ranking Risks of Android Apps. In Proceedings of the ACM SIGSAC Conference on Computer and Communications Security (CCS), October 2012.
[23] Abbas Razaghpanah, Rishab Nithyanand, Narseo Vallina-Rodriguez, Srikanth Sundaresan, Mark Allman, Christian Kreibich, and Phillipa Gill. Apps, Trackers, Privacy, and Regulators: A Global Study of the Mobile Tracking Ecosystem. In Proceedings of the Network and Distributed System Security Symposium (NDSS), 2018.
[24] Joel Reardon, Alvaro Feal, Primal Wijesekera, Amit Elazari Bar On, Narseo Vallina-Rodriguez, and Serge Egelman. 50 Ways to Leak Your Data: An Exploration of Apps’ Circumvention of the Android Permission System. In Proceedings of the USENIX Security Symposium, 2019.
[25] Jingjing Ren, Ashwin Rao, Martina Lindorfer, Arnaud Legout, and David R. Choffnes. ReCon: Revealing and Controlling Privacy Leaks in Mobile Network Traffic. In Proceedings of the ACM SIGMOBILE MobiSys, pages 361–374, 2016.
[26] Irwin Reyes, Primal Wiesekera, Abbas Razaghpanah, Joel Reardon, Narseo Vallina-Rodriguez, Serge Egelman, and Christian Kreibich. “Is Our Children’s Apps Learning?” Automatically Detecting COPPA Violations. In Workshop on Technology and Consumer Protection (ConPro), May 2017.
[27] Irwin Reyes, Primal Wijesekera, Joel Reardon, Amit Elazari Bar On, Abbas Razaghpanah, Narseo Vallina-Rodriguez, and Serge Egelman. “Won’t Somebody Think of the Children?” Examining COPPA Compliance at Scale. In Proceedings on Privacy Enhancing Technologies (PETS), July 2018.
[28] Sanae Rosen, Zhiyun Qian, and Z. Morley Mao. AppProfiler: A Flexible Method of Exposing Privacy-related Behavior in Android Applications to End Users. In Proceedings of the ACM Conference on Data and Application Security and Privacy (CODASPY), February 2013.
[29] Rocky Slavin, Xiaoyin Wang, Mitra Bokaei Hosseini, James Hester, Ram Krishnan, Jaspreet Bhatia, Travis D. Breaux, and Jianwei Niu. Toward a Framework for Detecting Privacy Policy Violations in Android Application Code. In Proceedings of the International Conference on Software Engineering (ICSE), 2016.
[30] In the Matter of Snapchat, Inc. https://www.ftc.gov/enforcement/cases-proceedings/132-3078/snapchat-inc-matter.
[31] John W. Stamey and Ryan A. Rossi. Automatically Identifying Relations in Privacy Policies. In Proceedings of the ACM International Conference on Design of Communication (SIGDOC), 2009.
[32] Xiaoyin Wang, Xue Qin, Mitra Bokaei Hosseini, Rocky Slavin, Travis D. Breaux, and Jianwei Niu. GUILeak: Tracing Privacy Policy Claims on User Input Data for Android Applications. In Proceedings of the International Conference of Software Engineering (ICSE), 2018.
[33] Primal Wijesekera, Arjun Baokar, Ashkan Hosseini, Serge Egelman, David Wagner, and Konstantin Beznosov. Android Permissions Remystified: A Field Study on Contextual Integrity. In Proceedings of the USENIX Security Symposium, August 2015.
[34] Le Yu, Xiapu Luo, Xule Liu, and Tao Zhang. Can We Trust the Privacy Policies of Android Apps? In Proceedings of the IEEE/IFIP Conference on Dependable Systems and Networks (DSN), 2016.
[35] Razieh Nokhbeh Zaeem, Rachel L. German, and K. Suzanne Barber. PrivacyCheck: Automatic Summarization of Privacy Policies Using Data Mining. ACM Transactions on Internet Technology (TOIT), 2013.
[36] Yuan Zhang, Min Yang, Bingquan Xu, Zhemin Yang, Guofei Gu, Peng Ning, X. Sean Wang, and Binyu Zang. Vetting Undesirable Behaviors in Android Apps with Permission Use Analysis. In Proceedings of the ACM SIGSAC Conference on Computer and Communications Security (CCS), November 2013.
[37] Sebastian Zimmeck and Steven M. Bellovin. Privee: An Architecture for Automatically Analyzing Web Privacy Policies. In Proceedings of the USENIX Security Symposium, 2014.
[38] Sebastian Zimmeck, Ziqi Wang, Lieyong Zou, Roger Iyengar, Bin Liu, Florian Schaub, Shomir Wilson, Norman Sadeh, Steven M. Bellovin, and Joel Reidenberg. Automated Analysis of Privacy Requirements for Mobile Apps. In Proceedings of the ISOC Network and Distributed System Security Symposium (NDSS), 2017.

---

**29th USENIX Security Symposium**
**USENIX Association**