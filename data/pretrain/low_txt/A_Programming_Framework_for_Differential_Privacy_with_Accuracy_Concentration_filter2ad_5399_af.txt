### References

1. **Differential Privacy for SQL Queries**
   - *Publication*: PVLDB, vol. 11, no. 5, 2018.

2. **EKTELO: A Framework for Defining Differentially-Private Computations**
   - *Authors*: D. Zhang, R. McKenna, I. Kotsogiannis, M. Hay, A. Machanavajjhala, and G. Miklau.
   - *Publication*: Proc. International Conference on Management of Data, 2018.

3. **Fuzzi: A Three-Level Logic for Differential Privacy**
   - *Authors*: H. Zhang, E. Roth, A. Haeberlen, B. C. Pierce, and A. Roth.
   - *Publication*: Proc. ACM SIGPLAN International Conference on Functional Programming (ICFP’19), 2019.

4. **Privacy: Theory Meets Practice on the Map**
   - *Authors*: A. Machanavajjhala, D. Kifer, J. M. Abowd, J. Gehrke, and L. Vilhuber.
   - *Publication*: Proc. International Conference on Data Engineering, ICDE, 2008.

5. **GUPT: Privacy Preserving Data Analysis Made Easy**
   - *Authors*: P. Mohan, A. Thakurta, E. Shi, D. Song, and D. E. Culler.
   - *Publication*: Proc. ACM SIGMOD International Conference on Management of Data, SIGMOD, 2012.

6. **DP-WHERE: Differentially Private Modeling of Human Mobility**
   - *Authors*: D. J. Mir, S. Isaacman, R. Caceres, M. Martonosi, and R. N. Wright.
   - *Publication*: Proc. IEEE International Conference on Big Data, 2013.

7. **PSI (Ψ): A Private Data Sharing Interface**
   - *Authors*: M. Gaboardi, J. Honaker, G. King, K. Nissim, J. Ullman, and S. P. Vadhan.
   - *Publication*: CoRR, vol. abs/1609.04340, 2016.

8. **APEx: Accuracy-Aware Differentially Private Data Exploration**
   - *Authors*: C. Ge, X. He, I. F. Ilyas, and A. Machanavajjhala.
   - *Publication*: Proc. International Conference on Management of Data, 2019.

9. **Concentration of Measure for the Analysis of Randomized Algorithms**
   - *Authors*: D. P. Dubhashi and A. Panconesi.
   - *Publication*: Cambridge University Press, 2009.

10. **The Algorithmic Foundations of Differential Privacy**
    - *Authors*: C. Dwork and A. Roth.
    - *Publication*: Foundations and Trends in Theoretical Computer Science, vol. 9, no. 3-4, pp. 211–407, 2014.

11. **Boosting and Differential Privacy**
    - *Authors*: C. Dwork, G. N. Rothblum, and S. P. Vadhan.
    - *Publication*: 51st Annual IEEE Symposium on Foundations of Computer Science, FOCS, 2010, pp. 51–60.

12. **A Program Logic for Union Bounds**
    - *Authors*: G. Barthe, M. Gaboardi, B. Gregoire, J. Hsu, and P. Strub.
    - *Publication*: International Colloquium on Automata, Languages, and Programming, ICALP, ser. LIPIcs, vol. 55. Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, 2016.

13. **Language-Based Information-Flow Security**
    - *Authors*: A. Sabelfeld and A. C. Myers.
    - *Publication*: IEEE J. Selected Areas in Communications, vol. 21, no. 1, pp. 5–19, Jan. 2003.

14. **Explicit Secrecy: A Policy for Taint Tracking**
    - *Authors*: D. Schoepe, M. Balliu, B. C. Pierce, and A. Sabelfeld.
    - *Publication*: IEEE European Symposium on Security and Privacy, 2016, pp. 15–30.

15. **Arrows for Secure Information Flow**
    - *Authors*: P. Li and S. Zdancewic.
    - *Publication*: Theoretical Computer Science, vol. 411, no. 19, pp. 1974–1994, 2010.

16. **A Library for Light-Weight Information-Flow Security in Haskell**
    - *Authors*: A. Russo, K. Claessen, and J. Hughes.
    - *Publication*: Proc. ACM SIGPLAN Symp. on Haskell. ACM Press, 2008.

17. **Trace Abstraction Modulo Probability**
    - *Authors*: C. Smith, J. Hsu, and A. Albarghouthi.
    - *Publication*: PACMPL, vol. 3, no. POPL, 2019.

18. **Differentially-Private Network Trace Analysis**
    - *Authors*: F. McSherry and R. Mahajan.
    - *Publication*: ACM SIGCOMM Computer Communication Review, vol. 41, no. 4, pp. 123–134, 2011.

19. **Proving Differential Privacy in Hoare Logic**
    - *Authors*: G. Barthe, M. Gaboardi, E. J. G. Arias, J. Hsu, C. Kunz, and P. Strub.
    - *Publication*: Proc. IEEE Computer Security Foundations Symposium, 2014.

20. **The Matrix Mechanism: Optimizing Linear Counting Queries under Differential Privacy**
    - *Authors*: C. Li, G. Miklau, M. Hay, A. McGregor, and V. Rastogi.
    - *Publication*: VLDB J., vol. 24, no. 6, 2015.

21. **Boosting the Accuracy of Differentially Private Histograms through Consistency**
    - *Authors*: M. Hay, V. Rastogi, G. Miklau, and D. Suciu.
    - *Publication*: PVLDB, vol. 3, no. 1, 2010.

22. **Differential Privacy via Wavelet Transforms**
    - *Authors*: X. Xiao, G. Wang, and J. Gehrke.
    - *Publication*: IEEE Trans. Knowl. Data Eng., vol. 23, no. 8, 2011.

23. **Principled Evaluation of Differentially Private Algorithms Using DPBench**
    - *Authors*: M. Hay, A. Machanavajjhala, G. Miklau, Y. Chen, and D. Zhang.
    - *Publication*: Proceedings of the 2016 International Conference on Management of Data, SIGMOD Conference 2016, San Francisco, CA, USA, June 26 - July 01, 2016.

24. **Featherweight PINQ**
    - *Authors*: H. Ebadi and D. Sands.
    - *Publication*: Privacy and Confidentiality, vol. 7, no. 2, 2017.

25. **Notions of Computation and Monads**
    - *Author*: E. Moggi.
    - *Publication*: Inf. Comput., vol. 93, no. 1, pp. 55–92, 1991.

26. **Safe Haskell**
    - *Authors*: D. Terei, S. Marlow, S. L. Peyton Jones, and D. Mazières.
    - *Publication*: Proceedings of the 5th ACM SIGPLAN Symposium on Haskell, Haskell 2012, Copenhagen, Denmark, 13 September 2012, 2012, pp. 137–148.

27. **Closed Type Families with Overlapping Equations**
    - *Authors*: R. A. Eisenberg, D. Vytiniotis, S. L. Peyton Jones, and S. Weirich.
    - *Publication*: The ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, 2014.

28. **DJoin: Differentially Private Join Queries over Distributed Databases**
    - *Authors*: A. Narayan and A. Haeberlen.
    - *Publication*: 10th USENIX Symposium on Operating Systems Design and Implementation, OSDI. USENIX Association, 2012.

29. **Differentially Private Data Analysis of Social Networks via Restricted Sensitivity**
    - *Authors*: J. Blocki, A. Blum, A. Datta, and O. Sheffet.
    - *Publication*: Innovations in Theoretical Computer Science, ITCS, 2013.

30. **Towards Practical Differential Privacy for SQL Queries**
    - *Authors*: N. M. Johnson, J. P. Near, and D. Song.
    - *Publication*: PVLDB, vol. 11, no. 5, 2018.

31. **Functional Pearl: Two Can Keep a Secret, if One of Them Uses Haskell**
    - *Author*: A. Russo.
    - *Publication*: Proc. of the ACM SIGPLAN International Conference on Functional Programming. ACM, 2015.

32. **Private and Continual Release of Statistics**
    - *Authors*: T.-H. H. Chan, E. Shi, and D. Song.
    - *Publication*: ACM Transactions on Information and System Security (TISSEC), vol. 14, no. 3, p. 26, 2011.

33. **Proving Differential Privacy via Probabilistic Couplings**
    - *Authors*: G. Barthe, M. Gaboardi, B. Gregoire, J. Hsu, and P. Strub.
    - *Publication*: Proc. ACM/IEEE Symposium on Logic in Computer Science, 2016.

34. **A Simple and Practical Algorithm for Differentially Private Data Release**
    - *Authors*: M. Hardt, K. Ligett, and F. McSherry.
    - *Publication*: Advances in Neural Information Processing Systems 25: 26th Annual Conference on Neural Information Processing Systems, 2012.

35. **On the Geometry of Differential Privacy**
    - *Authors*: M. Hardt and K. Talwar.
    - *Publication*: Proc. of the 42nd ACM Symposium on Theory of Computing, STOC, 2010.

36. **The Geometry of Differential Privacy: The Sparse and Approximate Cases**
    - *Authors*: A. Nikolov, K. Talwar, and L. Zhang.
    - *Publication*: Symposium on Theory of Computing Conference, STOC’13, 2013.

37. **Calibrating Data to Sensitivity in Private Data Analysis**
    - *Authors*: D. Proserpio, S. Goldberg, and F. McSherry.
    - *Publication*: PVLDB, vol. 7, no. 8, 2014.

38. **PrivateSQL: A Differentially Private SQL Query Engine**
    - *Authors*: I. Kotsogiannis, Y. Tao, X. He, M. Fanaeepour, A. Machanavajjhala, M. Hay, and G. Miklau.
    - *Publication*: Proc. VLDB Endow., vol. 12, no. 11, pp. 1371–1384, Jul. 2019.

39. **Smooth Sensitivity and Sampling in Private Data Analysis**
    - *Authors*: K. Nissim, S. Raskhodnikova, and A. D. Smith.
    - *Publication*: Proc. Annual ACM Symposium on Theory of Computing, 2007.

40. **Duet: An Expressive Higher-Order Language and Linear Type System for Statically Enforcing Differential Privacy**
    - *Authors*: J. P. Near, D. Darais, C. Abuah, T. Stevens, P. Gaddamadugu, L. Wang, N. Somani, M. Zhang, N. Sharma, A. Shan, and D. Song.
    - *Publication*: Proc. ACM Program. Lang., vol. 3, no. OOPSLA, Oct. 2019.

41. **Synthesizing Coupling Proofs of Differential Privacy**
    - *Authors*: A. Albarghouthi and J. Hsu.
    - *Publication*: PACMPL, vol. 2, no. POPL, 2018.

42. **Proving Differential Privacy with Shadow Execution**
    - *Authors*: Y. Wang, Z. Ding, G. Wang, D. Kifer, and D. Zhang.
    - *Publication*: Proc. ACM SIGPLAN Conference on Programming Language Design and Implementation, 2019.

43. **Advanced Probabilistic Couplings for Differential Privacy**
    - *Authors*: G. Barthe, N. Fong, M. Gaboardi, B. Gregoire, J. Hsu, and P. Strub.
    - *Publication*: Proc. ACM SIGSAC Conference on Computer and Communications Security, 2016.

44. **Accuracy First: Selecting a Differential Privacy Level for Accuracy-Constrained ERM**
    - *Authors*: K. Ligett, S. Neel, A. Roth, B. Waggoner, and Z. S. Wu.
    - *Publication*: CoRR, vol. abs/1705.10829, 2017.

45. **Rényi Differential Privacy**
    - *Author*: I. Mironov.
    - *Publication*: 2017 IEEE 30th IEEE, 2017.

46. **Concentrated Differential Privacy**
    - *Authors*: C. Dwork and G. N. Rothblum.
    - *Publication*: arXiv preprint arXiv:1603.01887, 2016.

47. **Composable and Versatile Privacy via Truncated CDP**
    - *Authors*: M. Bun, C. Dwork, G. N. Rothblum, and T. Steinke.
    - *Publication*: Proceedings of the 50th Annual ACM SIGACT Symposium on Theory of Computing. ACM, 2018, pp. 74–86.

48. **Improving the Gaussian Mechanism for Differential Privacy: Analytical Calibration and Optimal Denoising**
    - *Authors*: B. Balle and Y.-X. Wang.
    - *Publication*: arXiv preprint arXiv:1805.06530, 2018.

49. **Faster Algorithms for Privately Releasing Marginals**
    - *Authors*: J. Thaler, J. Ullman, and S. P. Vadhan.
    - *Publication*: Automata, Languages, and Programming - 39th International Colloquium, ICALP, 2012, pp. 810–821.

50. **Dual Query: Practical Private Query Release for High Dimensional Data**
    - *Authors*: M. Gaboardi, E. J. G. Arias, J. Hsu, A. Roth, and Z. S. Wu.
    - *Publication*: Proc. International Conference on Machine Learning, ICML, 2014.

51. **Marginal Release Under Local Differential Privacy**
    - *Authors*: G. Cormode, T. Kulkarni, and D. Srivastava.
    - *Publication*: Proc. of International Conference on Management of Data, SIGMOD, 2018, pp. 131–146.

### Appendix

#### A. Primitive `dpPart` and Disjoint Datasets

**Figure 10: DP-histograms by using `dpPart`**

We present the code in Figure 10. Query `q` produces an ε-DP histogram of the colors found in the argument dataset, where rows are of type `Color` and variable `bins` enumerates all possible values of such type. The code partitions the dataset using the function `id :: Color -> Color` (line 2) and executes the aggregation counting query (`dpCount`) in each partition (line 3). The function `fromList` creates a map from a list of pairs. The attentive reader might notice that `dpCount` is applied to the original dataset rather than the partitions. This type of error can lead to privacy breaches and inconsistencies when estimating the required privacy budget. A correct implementation involves executing `dpCount` on the corresponding partition, as shown in the commented line 4.

The IFC analysis assigns the provenance of the dataset in `q` to the top-level fragment of the query rather than to sub-queries executed in each partition. DPella will raise an error at compile time when `ds` is accessed by the sub-queries. If we comment line 3 and uncomment line 4, the query `q` is successfully run by DPella (when there is enough privacy budget) since every partition is only accessing its own partitioned data (denoted by variable `ds`).

```haskell
1 q :: ε → [Color] → Data 1 Double
2 → Query (Map Color Double)
3 q eps bins dataset = dpPart id dataset dps
4 where dps = fromList [(c, λds → dpCount eps dataset)]
5
6
-- dps = fromList [(c, λds → dpCount eps ds | c ← bins]
```

#### B. Taint Analysis Example

**Figure 11: Combination of Sub-Queries Results**

Figure 11 presents the query plan `totalCount`, which adds the results of a hundred `dpCount` queries over different datasets, namely `ds1, ds2, ..., ds100`. (The `...` denotes code intentionally left unspecified.) The code calls the primitive `add` with the results of calling `dpCount`. (We use `[x1, x2, x3]` to denote the list with elements `x1, x2, and x3`.) What would be the theoretical error of `totalCount`? The accuracy calculation depends on whether all the values are untainted in line 7. When no dependencies are detected between `v1, v2, ..., v100`, namely all the values are untainted, DPella applies the Chernoff bound to give a tighter error estimation. For instance, if `v3` were computed as an aggregation of `v1` and `v2`, e.g., `let v3 = add [v1, v2]`, then line 7 applies the union bound since `v3` is a tainted value. With taint analysis, DPella can detect dependencies among terms of type `Value Double` and leverage that information to apply different concentration bounds.

```haskell
1 totalCount :: Query (Value Double)
2 totalCount = do
3 v1 ← dpCount 0.3 ds1
4 v2 ← dpCount 0.25 ds2
5 ...
6 v100 ← dpCount 0.5 ds100
7 return (add [v1, v2, ..., v100])
...
```

#### C. Norms Calculation

**Figure 12: Calculation of Norms**

Figure 12 shows our static analysis when computing `norm∞` and `norm1`, respectively. There is nothing special about the rules except to note that the results are symbolic values which are tainted. The reason for this is that norms are designed to condense (in one measure) the error of the list of arguments. By doing so, it is hard to assign a specific Laplace distribution with sensitivity `s` to the overall given vector. We simply say that the return symbolic values are tainted—thus they can only be aggregated by `ADD-UNION` in Figure 7.

```plaintext
NORM-INF
vj = S[iCDFj, sj, tsj]
n )|}j=1...n
iCDF = λβ → max {|iCDFj(
norm∞ [v1, v2, ..., vn ] (cid:6) S[iCDFM, 0,∅]
β
NORM-1
vj = S[iCDFj, sj, tsj]
iCDF = λβ → n(cid:2)
norm1 [v1, v2, ..., vn ] (cid:6) S[iCDF, 0,∅]
j=1
|iCDFj(
β
n )|
```

#### D. Accuracy for `dpMax`

**Figure 13: iCDF Implemented by `dpMax`**

Figure 13 shows the iCDF computed by `dpMax`, which aligns with the one appearing in [22]. Observe that the return value is tainted. The reason for this is that the result, which is one of the responses in `res`, contains no noise—it is rather the process that led to determining the winning response which has been "noisy." In this light, no scale of noise nor distribution can be associated with the response—as we did, for instance, with `dpCount`.

```plaintext
DPCOUNT
ds :: Data 1 r
iCDF = λβ → 4
· log(
length res
)
β
dpMax ε res vote ds (cid:5) S[iCDF, 0,∅]
```

#### E. Accuracy of Gaussian Mechanism

For \( Q : \text{db} \rightarrow \mathbb{R} \) an arbitrary function with sensitivity \( \Delta Q \) as defined in II.2, the Gaussian mechanism with parameter \( \sigma \) adds noise scaled to \( N(0, \sigma^2) \) to its output.

**Theorem A.1 (Gaussian Mechanism [59])**: For any \( \epsilon, \delta \in (0, 1) \), the Gaussian output perturbation mechanism with standard deviation \( \sigma = \frac{\Delta Q \sqrt{2 \log(1.25 / \delta)}}{\epsilon} \) is \( (\epsilon, \delta) \)-differentially private.

**Definition A.1 (Accuracy for the Gaussian Mechanism)**: Given a randomized query \( \tilde{Q}(·) : \text{db} \rightarrow \mathbb{R} \) implemented with the Gaussian mechanism as previously described, we have that:

\[
\boxed{
\text{Accuracy for the Gaussian Mechanism}
}
\]

This concludes the optimized and more professional version of your text.