# Wesley and Jack Task Performance on XPFP and Salmon Interfaces

## Accuracy Rates
| Interface | Wesley Task | Jack Task |
|-----------|-------------|-----------|
| XPFP      | 58%         | 25%       |
| Salmon    | 83%         | 100%      |

**Table 1:** Accuracy rates for the Wesley and Jack tasks on the XPFP and Salmon interfaces. Salmon showed improvements of 43% and 100% in accuracy over XPFP on the Wesley and Jack tasks, respectively.

---

## Error Analysis
### Goal Errors
The error analysis revealed a significant reduction in goal errors committed by Salmon users compared to XPFP users. 

- **Wesley Task:**
  - **XPFP:** 9 total errors, 5 goal errors.
  - **Salmon:** 4 total errors, 1 goal error.
  - **Reduction:** 80% (M = 0.083, sd = 0.29) for Salmon vs. M = 0.42, sd = 0.51 for XPFP.
  - **Statistical Significance:** z = -1.885, p = 0.0297 (one-sided z-test, p < 0.05).

- **Jack Task:**
  - **XPFP:** 16 total errors, 15 goal errors.
  - **Salmon:** 6 total errors, 1 goal error.
  - **Reduction:** 94% (M = 0.083, sd = 0.29) for Salmon vs. M = 1.33, sd = 0.87 for XPFP.
  - **Statistical Significance:** z = -3.312, p = 0.0005 (one-sided z-test, p < 0.05).

It can be concluded that the Salmon interface significantly reduces goal errors compared to XPFP.

### Other Errors
While the Salmon interface led to more plan and action errors than XPFP, these errors were generally less impactful. Most goal errors directly led to task failure, whereas most plan and action errors were recoverable. Further investigation is needed to address these plan and action errors in the Salmon interface.

---

## Discussion
The improvement in task completion success and the dramatic reduction in goal errors achieved with the Salmon interface can be attributed primarily to the use of anchor-based subgoaling in its design. Despite superficial changes (e.g., fonts, labels, icons, colors, and layout), the effective permissions display in Salmon was key to helping users formulate correct goals.

For example, one Salmon participant, about to commit an incorrect solution on the Jack task, noticed the effective-permissions display and corrected their approach. In contrast, several XPFP users misinterpreted Wesley’s stated permissions, leading to incorrect solutions.

---

## Conclusion
In user interface design, providing comprehensive and correct external representations of information is crucial for reducing goal errors. The Windows XP file permissions interface, which does not use anchor-based subgoaling, had low success rates (58% and 25%) on two representative permission-setting tasks. The Salmon interface, designed with anchor-based subgoaling, increased success rates to 83% and 100%, respectively, and reduced goal errors by 80% and 94%.

These improvements make the Salmon interface more dependable, especially in mission-critical systems where setting security-related configurations is essential.

---

## Future Work
- **Testing in Other Domains:** Anchor-based subgoaling needs to be tested in other task domains to fully validate its effectiveness and define its limits.
- **Reducing Other Types of Errors:** Future work will focus on reducing plan, action, and perception errors.

---

## Acknowledgements
We thank our colleagues Fahd Arshad, David Banks, Patricia Loring, and Rachel Roberts for their assistance. This work was partially supported by the Army Research Office (grant number DAAD19-02-1-0389) and the Engineering and Physical Sciences Research Council, United Kingdom (grant number GR/S29911/01).

---

## References
[1] A. Adams and M. A. Sasse. "Users are not the enemy." Communications of the ACM, 42(12):41–46, 1999.
[2] D. Balfanz. "Usable access control for the World Wide Web." In Proceedings of 19th Annual Computer Security Applications Conference, pages 406–415, Los Alamitos, CA, 2003. IEEE Comp. Society.
[3] D. Besnard and B. Arief. "Computer security impaired by legitimate users." Computers & Security, 23(3):253–264, 2004.
[4] S. Card. "Information visualization." In J. A. Jacko and A. Sears, editors, The Human-Computer Interaction Handbook: Fundamentals, Evolving Technologies and Emerging Applications, chapter 28, pages 544–582. Lawrence Erlbaum Associates, Mahwah, NJ, 2003.
[5] P. Dewan and H. Shen. "Controlling access in multiuser interfaces." ACM Transactions on Computer-Human Interaction, 5(1):34–62, 1998.
[6] K. A. Ericsson and H. A. Simon. Protocol Analysis: Verbal Reports as Data. MIT Press, Cambridge, MA, Revised edition, 1993.
[7] N. S. Good and A. Krekelberg. "Usability and privacy: a study of Kazaa P2P file-sharing." In Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI 2003), pages 137–144, New York, NY, 2003. ACM Press.
[8] B. Kirwan. A Guide to Practical Human Reliability Assessment. Taylor & Francis, London, United Kingdom, 1994.
[9] A. C. Long, C. Moskowitz, and G. Ganger. "A prototype user interface for coarse-grained desktop access control." Technical Report CMU-CS-03-200, Comp. Sci. Dept, Carnegie Mellon University, Pittsburgh, PA, Nov. 2003.
[10] Microsoft Corporation. "Best practices for permissions and user rights." Available at http://www.microsoft.com/resources/documentation/windowsserv/2003/stand%ard/proddocs/en-us/sag_SEconceptsImpACBP.asp, 2005.
[11] Microsoft Corporation. "Microsoft Technet: Windows XP file permissions documentation." Available at http://www.microsoft.com/technet/treeview/default.asp?url=/technet/prod%technol/winxppro/proddocs/acl_special_permissions.asp, 2005.
[12] J. Nielsen and R. L. Mack. Usability Inspection Methods. John Wiley & Sons, Inc., New York, NY, 1994.
[13] D. A. Norman. The Design of Everyday Things. Doubleday, New York, NY, 1988.
[14] S. Pocock, M. Harrison, P. Wright, and P. Johnson. "Thea: A technique for human error assessment early in design." In Proceeding of 8th IFIP TC.13 Conference on Human-Computer Interaction, pages 247–254, Amsterdam, 2001. IOS Press.
[15] J. Reason. Human Error. Cambridge University Press, Cambridge, UK, 1990.
[16] G. Sampemane, P. Naldurg, and R. H. Campbell. "Access control for active spaces." In Proceedings of the 18th Annual Computer Security Applications Conference, pages 343–352, Los Alamitos, CA, 2002. IEEE Computer Society.
[17] J. W. Senders and N. P. Moray. Human Error: Cause, Prediction, and Reduction. Lawrence Erlbaum Associates, Hillsdale, New Jersey, 1991.
[18] R. Smith. Personal communication, March 2004.
[19] U.S. Senate Sergeant at Arms. "Report on the investigation into improper access to the Senate Judiciary Committees computer system." Available at http://judiciary.senate.gov/testimony.cfm?id=1085&wit_id=2514, March 2004.
[20] A. Whitten and J. Tygar. "Why Johnny can’t encrypt: A usability evaluation of PGP 5.0." In Proceedings of the 8th USENIX Security Symposium, pages 169–184, Berkeley, California, 1999. USENIX Association.
[21] D. A. Wiegmann and S. A. Shappell. A Human Error Approach to Aviation Accident Analysis. Ashgate Publishing Co., Aldershot, Hants, United Kingdom, 2003.
[22] D. D. Woods and E. M. Roth. "Cognitive systems engineering." In M. Helander, editor, Handbook of Human-Computer Interaction, chapter 1, pages 3–43. Elsevier Science Publishers B.V., Amsterdam, The Netherlands, 1st edition, 1988.
[23] K. Yee. "User interaction design for secure systems." In Information and Communications Security, 4th International Conference, ICICS 2002, Singapore, Lecture Notes in Computer Science, Vol. 2513, pages 278–290, New York, NY, 2002. Springer.
[24] M. E. Zurko, R. Simon, and T. Sanfilippo. "A user-centered, modular authorization service built on an RBAC foundation." In Proceedings 1999 IEEE Symposium on Security and Privacy, pages 57–71, Los Alamitos, CA, 1999. IEEE Computer Security Press.
[25] M. E. Zurko and R. T. Simon. "User-centered security." In Proceedings of Workshop on New Security Paradigms, pages 27–33, New York, NY, 1996. ACM Press.