### About Us
- **Li Yuxiang (@Xbalien29)**
  - Security Researcher
  - Discovered several vulnerabilities in Android
  - Former member of ROIS CTF team
  - Speaker at HITB 2018 AMS

- **Qian Wenxiang (@leonwxqian)**
  - Security Researcher
  - Ranked in the Top 100 of the MSRC list (2016 & 2017)
  - Author of "WhiteHat to Talk About Web Browser Security"

- **Wu Huiyu (@DroidSec_cn)**
  - Security Researcher and Bug Hunter
  - Winner of GeekPwn 2015
  - Speaker at HITB 2018 AMS and POC 2017

### Acknowledgements
- **@Gmxp**: Team Leader of Tencent Blade Team
- **@Lake2**: Founder of Tencent Security Response Center

### Tencent Blade Team
- **Founded by**: Tencent Security Platform Department
- **Focus Areas**: Security research in AI, IoT, and mobile devices
- **Achievements**: Identified over 70 security vulnerabilities (Google, Apple)
- **Contact**: [https://blade.tencent.com](https://blade.tencent.com)

### Agenda
1. Introduction to Smart Speakers
2. Attack Surface
3. Remote Attack on Xiaomi AI Speaker
4. Breaking Amazon Echo
5. Conclusion

### Introduction to Smart Speakers
#### About Amazon Echo
- **CPU**: MTK 8163
- **Memory**: 4GB EMCP BGA221 (Micron/Samsung)
- **Operating System**: Fire OS v5.5 (based on Android 5.1)
- **Security Features**:
  - SELinux and ASLR enabled
  - Bootloader locked
- **Ports**:
  - TCP 55442: HTTP Server (audio cache)
  - TCP 55443: HTTPS Server with authentication (device control)
  - UDP 55444: Time Sync
  - UDP 55445: Device Sync

#### About Xiaomi AI Speaker
- **Base**: OpenWrt 15.05.1
- **SSH**: Disabled
- **Firmware Verification**: RSA-based
- **Ports**:
  - UDP 54321: MIIO
  - TCP 9999: UPNP
  - UDP 53: DNS

### Attack Surface
- **Smart Speaker**
- **Mobile App**
- **Cloud Server**
- **Communication Protocol**

### Remote Attack on Xiaomi AI Speaker
#### A Brief Look at Xiaomi AI Speaker
- **Firmware**: Based on OpenWrt 15.05.1
- **SSH**: Disabled
- **Firmware Verification**: RSA-based
- **Ports**:
  - UDP 54321: MIIO
  - TCP 9999: UPNP
  - UDP 53: DNS

#### MIIO Ubus Command Execution
- **Get MIIO Protocol AES Secret Key (Token)**:
  - Exploit an unauthorized unbind vulnerability to remotely reset the speaker.
  - Bind the speaker to the attacker’s account and extract the token from the MI Home App’s database (`/data/data/com.xiaomi.smarthome/databases/miio2.db`).
- **Disable Dropbear Password Auth**:
  - Start dropbear to open SSH.
  - Connect to the speaker in the LAN.

#### Messageagent Command Execution
- **Parser and Execute Ubus Command**:
  - Parse and execute system commands.

#### Remote Exploit
- **Demo**: Demonstration of the remote exploit process.

### Breaking Amazon Echo
#### A Brief Look at Amazon Echo
- **CPU**: MTK 8163
- **Memory**: 4GB EMCP BGA221 (Micron/Samsung)
- **Operating System**: Fire OS v5.5 (based on Android 5.1)
- **Security Features**:
  - SELinux and ASLR enabled
  - Bootloader locked
- **Ports**:
  - TCP 55442: HTTP Server (audio cache)
  - TCP 55443: HTTPS Server with authentication (device control)
  - UDP 55444: Time Sync
  - UDP 55445: Device Sync

#### Soldering and Desoldering Tools
- **Tools**:
  - Amtech Tacky Flux
  - Solder Wick
  - Hot Air Gun
  - Soldering Iron
  - Solder Wire
  - Solder Paste
  - Reballing Tool

#### Flash Dump
- **Equipment**:
  - BGA211 EMCP Adapter + EMCP USB Reader
- **Process**:
  - Preloader
  - Bootloader
  - Boot image
  - `/system`
  - `/data`
  - `/sdcard`

#### Root Amazon Echo by Modifying Firmware
- **Modify `/system/etc/init.fosflags.sh`**
- **Soldering Demo**: Demonstration of the soldering process.

#### Exploiting Amazon Echo
- **On Basis of Software**:
  - 3 steps to eavesdropping on the target
  - 3 big problems to solve
  - Vulnerable program: Whole Home Audio Daemon (whad)
    - **Features**:
      - Runs as root
      - Can record voice
      - Has network access
      - Includes a web server

#### Client-authenticated TLS Handshake
- **Requirements**:
  - Server Certificate, Client Certificate, and Private Key
  - Extract information from a physically hacked device.

#### Web Service Auditing
- **XSS Vulnerabilities**:
  - Session-based, requiring re-login for some actions
  - Lack of modern protections
- **Redirects**:
  - Alexa OpenID login can redirect to any domain fitting `https://*.amazon.com`
  - Use redirects to mimic XSS attacks

#### Steal Cookies with Redirects
- **Domain Resolution**:
  - `aapsservice.amazon.com` resolves to a local address (e.g., 10.189.XX.XX)
  - Attacker joins the LAN with the same IP and enables a web server.

#### Patching Whad
- **HTTPS Ping**:
  - Whad periodically pings other devices.
  - Patch whad on a physically rooted device to dump necessary certificates and keys.

#### Get the Keys to Pwn
- **Disable ASLR and SELinux**:
  - Dump Server Certificate, Client Certificate, and Private Key from the variant that outputs adb log.

#### Binary Auditing
- **Amazon’s Code**:
  - Secure by design
  - Uses old versions of third-party libraries
  - N-day and 0-day vulnerabilities

#### Attack the Web Server
- **Web Server (libcivetweb)**:
  - Code written 4 years ago
  - Vulnerability in `getParam()` function
  - CVE-2018-12686: Fixed in June 2018

#### Heap Buffer Overflow
- **Exploit**:
  - Valid `dlmalloc(0)` call
  - POST data written into buffer
  - Input length greater than 8 bytes causes heap buffer overflow

#### Shape the Heap
- **Controlled by User**:
  - Send HTTPS requests to shape the heap
  - Control malloc() by sending or omitting `\r\n\r\n`

#### Bypass ASLR
- **Heap Spray**:
  - Large heap allocation in a predictable range
  - Place shellcode at a known address

#### Leak Addresses of Other Libraries
- **Information Leak via Network**:
  - Exploit CVE-2017-1000254 in libcurl
  - Playlist download and FTP connection reuse to leak addresses

#### Code Execution
- **Overwrite Function Pointer**:
  - Overwrite SSL context object
  - Triggered by malformed HTTP version header

#### Attacking Primitives
- **Restart Whad**:
  - Information leak
  - Heap maintaining and freeing
  - Fast SSL_write call
  - Create any size of heap
  - Combine to achieve RCE

#### Time to PWN
- **Challenge**:
  - Disturbance from background threads
  - Success rate of ~8% per attempt
  - Whad respawns after crash, allowing repeated attempts

#### The Shellcode
- **System Version**:
  - Consistent across devices
  - Fork to prevent crash
  - Handlers for SIGSEGV/SIGABRT
  - Send data via TCP to the attacker

#### Eavesdropping
- **Whad**:
  - Turned into an eavesdropping program
  - Silently sends voice data to the attacker

### Demo Video
- **Updates**:
  - Reported to Xiaomi in April, fixed in May, received $25,000 USD bonus.
  - Reported to Amazon in May, fixed in July.

### Conclusion
- **Exploit Source Code**:
  - Full exploit code will be updated on GitHub: [https://github.com/tencentbladeteam](https://github.com/tencentbladeteam)
- **Hack Tips**:
  - Obtain firmware first
  - Master soldering and firmware extraction methods
  - Combine web and binary vulnerabilities for remote exploits
  - Be patient

### Thank You
- **Contact Us**:
  - [https://blade.tencent.com](https://blade.tencent.com)
  - [https://security.tencent.com](https://security.tencent.com)
  - Our Bug Bounty Program: [https://blade.tencent.com](https://blade.tencent.com)

### Q & A
- **Questions and Answers**:
  - [https://blade.tencent.com](https://blade.tencent.com)
  - [https://security.tencent.com](https://security.tencent.com)
  - Our Bug Bounty Program: [https://blade.tencent.com](https://blade.tencent.com)

### References
- [Transport Layer Security (TLS) Client-Authenticated Handshake](https://en.wikipedia.org/wiki/Transport_Layer_Security#Client-authenticated_TLS_handshake)
- [CivetWeb GitHub Repository](https://github.com/civetweb/civetweb)
- [OpenSSL Security Advisory](http://www.openwall.com/lists/oss-security/2018/02/27/5)
- [Miio GitHub Repository](https://github.com/aholstenson/miio)
- [Twitter Post by @fjeronimo](https://twitter.com/fjeronimo/status/975781623127068674)
- [Echo Dot GitHub Repository](https://github.com/jhautry/echo-dot)