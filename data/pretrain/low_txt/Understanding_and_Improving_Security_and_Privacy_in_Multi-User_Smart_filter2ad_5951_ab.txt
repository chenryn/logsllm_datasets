### Home Interface and Design Principles

Our home interface is based on design principles (Section 4.1) distilled from prior research. We conducted an in-home user study using our prototype to evaluate whether these design principles meet user needs in practice and to improve our understanding of users' behaviors, especially with enhanced multi-user security and privacy features in a smart home.

### 4. Prototype Design and Implementation

To support the investigation of our research questions, we developed a mobile application for controlling smart homes that provides multi-user security and privacy features, such as access controls. This application is designed for households where members are generally motivated to cooperate. Below, we describe the guiding design principles for our prototype.

#### 4.1 Initial Design Principles

We developed our prototype based on lessons from previous work, which suggested the following design principles may be important for multi-user smart homes:

- **Access Control Flexibility**: Prior research [16] has indicated that smart home access control and authentication systems should be flexible enough to support a wide variety of use cases, people, and types of relationships that exist in homes. Our goal was to support various relationships, such as couples, roommates, children, guests, and domestic workers, and different contextual factors, like location. These factors can be combined to create policies that suit the user.
  
- **User Agency**: Previous studies [14] found power imbalances among smart home users, reducing the agency of those with less technical or interpersonal power. We aimed to support a sense of agency for all users by making the smart home more accessible and discoverable. For example, our prototype allows users to "ask for permission" rather than being locked out entirely. We also aimed to simplify the process of onboarding new users.

- **Respect Among Users**: Prior work has highlighted significant potential for tensions and conflicts among smart home users [14, 41]. We aimed to encourage respectful usage by minimizing conflict points, such as making it harder for one user to remotely control or automate devices in a way that would surprise or disturb another.

- **Transparency of Smart Home Behaviors**: Previous research suggests that smart home automations and apps may malfunction or act maliciously [11, 34], violate the privacy of unaware users [41], or confuse users who did not configure them. In cases of domestic abuse, abusers have harassed victims with remote control, masking it as automatic behavior [3]. We aimed to make the smart home's behavior transparent to all household members, especially when someone is remotely controlling it or when an automation/third-party app is acting on its own.

#### 4.2 General Design Description

We designed a mobile application that allows multiple users to control their smart home devices. In terms of threat modeling, we assume that the control application and the underlying smart home (SmartThings, in our study) are trustworthy and uncompromised. We assume that third-party smart home automations or applications may be buggy or compromised, but our design does not aim to prevent such issues. We also assume that users may use or configure the smart home in ways that are undesirable to others, though we focus on cases where this behavior is accidental or mildly malicious (e.g., "trolling"). We do not attempt to defend against a determined, malicious adversary (e.g., an abuser).

The basic interface of our app is similar to other mobile apps for controlling smart homes (e.g., Samsung SmartThings). The main view displays a list of devices and their current status (Figure 1a). Devices can be organized by room for convenience. Tapping a device's status adjusts its state, and tapping its name reveals options for access controls and notifications (described below).

We aimed to simplify the process of onboarding additional users, aligning with the "user agency" principle. The first user must create an account with a username and password, but they can add other users by scanning a QR code on the new user’s phone. These additional users do not need a login, instead using public key authentication tied to their device.

#### 4.3 Access Controls

To meet the "access control flexibility" and "respect among users" principles, we designed access controls for accessing device capabilities based on preferences and use cases from prior work (e.g., [10, 16]).

- **Role-Based Access Control**: Each household member has a separate user account. Users can be restricted from using a device via the 'Allowed Users' setting (Figure 1b). Users are also assigned roles (admin, child, guest). Only admins can make configuration changes, such as changing access control policies, adding new users, and organizing devices.

- **Location-Based Access Control**: Users can be restricted from controlling device capabilities if they are not physically near the device or not at home, using the "Remote Control" permission (Figure 1c). This access control can be set per-user, accommodating use cases like only allowing guests and domestic workers to access smart home devices while in the house. It can also promote respect among users by preventing them from remotely controlling devices like lights when others are in the room.

- **Supervisory Access Control**: Access controls can sometimes reduce user agency. For example, parents may want to use parental controls to keep children from causing trouble but may not want to block children from using the smart home at all times, such as when the parents are at home and can supervise. To address this, we implemented supervisory access control (first proposed by He et al. [16]): if a user is restricted from controlling a device, they can still be permitted to control it if another (authorized) user is nearby (Figure 1b).

- **Reactive Access Control**: Role-based and location-based access control policies can be too rigid for every situation. There may be occasional edge cases where enforcing a policy does not make sense. To increase flexibility and support user agency for restricted users, we implemented reactive access control [10, 24]. If a user attempts to access a capability they do not have permission to use (Figure 1d), the app will ask a more privileged user for permission in real-time by sending a notification to approve or deny the request (Figure 2c).

#### 4.4 Activity Notifications

Activity notifications provide information about device changes, including the device name, the change in state, and the user or process responsible for the change (Figure 2).

We chose to use notifications over other designs that focused on visualizing automations and events in-app [5, 26] to explore a different point in the design space. Rather than having users navigate to a particular interface when motivated to investigate activity in their smart home, we hypothesized that real-time notifications could provide information in a more timely and relevant manner.

Because the number of notifications from the smart home could be overwhelming, we allowed users to disable notifications on a per-device basis or to only receive notifications from physically nearby devices.

#### 4.5 Discovery Notifications

Prior work (e.g., [14, 41]) suggests that less technically savvy or engaged users may struggle with accessing smart devices. To meet the "user agency" principle, we wanted to make it clear which smart devices were nearby and could be actuated, especially for novice users. We designed a persistent notification that displays the status of nearby devices and includes action buttons to toggle those devices (Figure 2b). This design makes devices that are nearby (and potentially relevant) accessible without needing to open the app. We designed it to be minimally intrusive—the notification is silent and minimized at the bottom of the notification tray.

To meet the "transparency of smart home behaviors" principle, we designed notifications that alert users when the states of home devices change. Each notification displays the device name, the change in state, and the user or process responsible for the change.

#### 4.6 Implementation

We implemented a prototype mobile app with these features for Android, iOS, and web, using the Cordova framework. Instead of implementing our own smart home controller, our prototype connected to devices via the Samsung SmartThings API. Participants set up their smart home devices using SmartThings and then used our app to control the system. Our prototype did not support automations and third-party apps—users accessed this functionality through the SmartThings app. Our prototype consisted of 10,257 lines of JavaScript, CSS, and HTML.1

**Proximity Sensing**: To enable room-scale proximity-based features (location-based access controls, proximity-scoped notifications), we incorporated Bluetooth Low Energy beacons into our system. Beacons broadcast an ID that can be scanned by modern smartphones that support Bluetooth 4.0+. Users register physical beacons in our app using an ID printed on the device and then assign it to a room in the app. When a user’s phone detects the beacon, the app infers that the user is near the devices in that room. We chose beacons as our proximity sensing solution for convenience: they are supported by all modern Android and iOS devices. However, our design does not require a specific proximity sensing technology; others such as WiFi or ultrasonic sensing would work as well.

**SmartThings and iOS Limitations**: Due to the limitations of the SmartThings API, activity notifications cannot attribute changes in home state to particular third-party apps, automations, or manual actuation of devices. For state changes in these categories, our implementation only displays “Triggered by an automation or manually.” Discovery notifications were only implemented on Android, as the iOS notification center does not support persistent, low-priority notifications.

### 5. User Study: Goals and Methodology

Our prototype allows us to study the research questions we set out in Section 3. To do so, we recruited seven households in the Seattle metropolitan area to use our prototype to interact with their smart homes for a month-long period. We conducted studies between October 2018 and January 2019.

#### User Study Goals

Our goals in conducting the user study were two-fold, corresponding to our two research questions:

1. **Evaluate Specific Features**: We aimed to evaluate how participants used and reacted to the specific multi-user smart home features (and corresponding design principles) we implemented in our prototype.
   
2. **Understand User Needs and Behaviors**: More generally, we aimed to understand the multi-user access control and other needs and behaviors of end users, grounded in the use of a specific prototype in real homes.

Our specific evaluation questions, paired with the design principles our prototype intended to embody, included:

1. **Access Control Use Cases**: Is our current combination of access controls sufficient for users’ desired access control use cases? If not, what use cases are we missing?

2. **User Agency and Respect**: We envisioned that location-based and reactive access controls could be used to mitigate conflicts and tensions over controlling the home. Can we observe this in practice?

3. **Transparency of Smart Home Behaviors**: We envisioned that notifications could improve users’ mental models of smart homes, helping with understanding privacy implications and improving security by creating a simple mechanism for auditing automations and apps. Do notifications provide these benefits to users in practice? Conversely, do notifications harm privacy by revealing one person’s activity to others?

#### Study Overview

We conducted a month-long in situ user study in the homes of participants. We recruited households in the Seattle metropolitan area. We provided a Samsung SmartThings smart home to households that did not already own smart home devices or integrated SmartThings with the smart homes of households that owned an existing system. We collected qualitative data about participants’ previous experiences with smart homes and feedback on our prototype through interviews, experience sampling, and log data.

**Recruitment**: We recruited seven households, containing 19 participants who actively participated. Participating households were recruited via Facebook ads, targeted at people interested in smart homes and home DIY projects. People who clicked on the ads filled out a short survey including information about their household composition and interest in smart homes. We did not require participants to own any smart home devices prior to the study. We conducted a screening call with participants who met our criteria to collect additional information. We selected participants who lived within a 45-minute radius from our homes (so that it was feasible to make an in-home visit), and we aimed for a variety of multi-person household compositions, including roommates, families, and couples. Participating households are summarized in Table 1.

A limitation of our recruitment strategy and study design is that it introduces self-selection bias: our participants were likely to be living in generally cooperative households, with one or more technology early adopters. We discuss this, and other limitations, further in Section 7.5.

**Initial Interview**: We made an initial visit to participants’ homes to conduct a semi-structured interview about their existing experiences and attitudes towards multi-user smart home security, privacy, and usability issues (see Appendix A). Following the interview, we assisted with the setup of any devices if needed, and then we set up our prototype app. We guided them through app installation because it required using the developer mode in SmartThings, which was cumbersome and not representative of a typical install experience for commercial apps. We also assisted participants in adding other household members to ensure that we could study multi-user interactions (rather than evaluating the onboarding barrier).

We walked through the access control and notification features of the app and collected their initial impressions of the features. To counteract participant response bias [8], we stressed that we were testing an imperfect prototype and that we wanted honest, negative feedback on things that were not useful or usable. We used some participant feedback from this stage to iterate on our implementation and push updated features to participants throughout the duration of the study.

**Daily Usage**: Participants then used the app for 3-4 weeks during their daily lives. During this period, the integrated experience sampling interface in our app prompted participants to provide feedback or share anecdotes about multi-user interactions in the home. We also collected log data about how users set up access controls, permissions, and notifications.

**Exit Interview**: At the end of the usage period, we conducted a phone interview with each household. In this semi-structured interview, we collected specific feedback about their experience using (or not using) the access control and notification features in our prototype. We also followed up on any interesting data from experience sampling or logs. A list of interview questions is available in Appendix B.

**Compensation**: Participating households were compensated $250 over the course of the study, in installments. Participants could keep the provided smart home devices after the study or return them for the equivalent cash value.

**Ethics**: The study was approved by the University of Washington’s human subjects review board. Participants had to be age 18+ to consent to participating; household members under 18 could participate with parental consent.