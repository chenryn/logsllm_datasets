# Title: Private Set Intersection: Are Garbled Circuits Better than Custom Protocols?

## Authors:
- Yan Huang
- David Evans
- Jonathan Katz

### Affiliations:
- University of Virginia
- University of Maryland

### Website:
- [www.MightBeEvil.org](http://www.mightbeevil.org)

---

## Motivation: Common Acquaintances
- **Context**: In scenarios where two parties want to find common acquaintances without revealing their full sets, private set intersection (PSI) is a critical cryptographic tool.

### Related Conferences and Publications:
- Financial Crypto 2010
- CRYPTO 2005
- EUROCRYPT 2004

---

## Custom Protocols vs. Generic Protocols

### Custom Protocols
- **Design**: Tailored around specific cryptographic assumptions and primitives.
- **Composition**: Cannot be easily composed with other secure computations.
- **Functionality**: New design and security proofs are required for each individual scheme.

### Generic Protocols
- **Design**: Utilize generic and flexible cryptographic primitives.
- **Composition**: Can securely compute arbitrary functions.
- **Security Proofs**: Automatically derived from the generic proof.
- **Example**: Garbled Circuits

---

## Garbled Circuits & Oblivious Transfers

### Garbled Circuits
- **Concept**: A technique introduced by Andrew Yao in 1982/1986.
- **Techniques**:
  - Free-XOR technique (Kolesnikov and Shneider, 2008)
  - Oblivious Transfer Protocol (Rabin, 1981; Even, Goldreich, and Lempel, 1985; Naor and Pinkas, 2001; Ishai et al., 2003)
- **Research**: Y. Huang, D. Evans, J. Katz, L. Malka, "Faster Secure Computation Using Garbled Circuits," USENIX Security 2011.

### Example: AND and OR Gates
- **AND Gate**:
  - Enc(a1, b1)(x11), Enc(a1, b0)(x10), Enc(a0, b1)(x10), Enc(a0, b0)(x10)
- **OR Gate**:
  - Enc(x00, x11)(x21), Enc(x01, x11)(x21), Enc(x01, x10)(x21), Enc(x00, x10)(x20)

---

## Threat Model
- **Semi-Honest Adversary**: Follows the protocol as specified but tries to learn more from the protocol execution transcript.

---

## Generic PSI Protocols Overview

### Protocols
- **Bitwise-AND (BWA)**:
  - **Cost**: High in non-XOR gates.
  - **Best For**: Small element space.
- **Pairwise-Comparison (PWC)**:
  - **Sort-Compare-Shuffle-WN (SCS-WN)**:
    - **Cost**: Lower in non-XOR gates.
    - **Best For**: Large element space.

### Simplified PSI
- **Example**: Recessive genes encoded as bit vectors.
  - **Set A**: {5283423, 1425236, 839523, ...}
  - **Set B**: {5823527, 839523, 169325, ...}
  - **Encoded**: [PAH, PKU, CF, ...] -> [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
  - **Operation**: Bitwise-AND

---

## Performance Analysis

### BWA Performance
- **Element Space**: Performance degrades with large element spaces.
- **Graph**: OT Circuit vs. Element Size

### SCS-WN Protocol Results
- **Theoretical Projection** vs. **Experimental Observation**
- **Graph**: Set Size vs. Time

### Relating Performance to Security
- **Graph**: DL Key-sizes vs. Symmetric Key-sizes

---

## Conclusion
- **Generic Protocols** offer advantages in:
  - **Composability**
  - **Flexibility** on hardness assumptions
  - **Design Cost**
  - **Performance**

---

## Q&A

Feel free to ask any questions!