### Limitations and Future Work

#### 1. Data Analysis and Global Web User Behavior
The data analysis in this study does not fully reflect the behavior of global web users. The method used to label malicious URLs, which relies on Google Safe Browsing (GSB) entries, may not always be suitable for all purposes. Different organizations and users may implement different blacklists based on their specific policies.

#### 2. Dataset Scale
The dataset used in this study is limited in scale. While the number of browser extension users was sufficient for the current analysis, it is relatively small compared to the overall number of web users. This limitation is particularly evident in the small number of victims. For other types of analyses, such as user classification, the dataset may be insufficient. Section 6.4 discusses one such example. To address this issue, we propose implementing effective campaigns to attract more users and collect additional navigation information, enabling a more detailed analysis of user behavior. Our browser extension can also collect data not listed in Section 2.1, such as the list of installed browser extensions and process information.

#### 3. Attracting and Motivating Users
In this work, the primary challenge is increasing the number of users who install and continue using our browser extension. The extension collects privacy-related information, which may deter some users despite our terms and conditions stating that we do not link the data with user identities.

To motivate users, we previously ran a campaign offering a JPY 2,000 Amazon gift card. While this campaign successfully encouraged initial installations, over half of the users stopped using the extension within three months. To improve user retention, we redesigned the extension to feature Tachikoma, a popular character from the Ghost in the Shell universe. By continuing to use the extension, users can see Tachikoma in their browser, making it more appealing to fans of the story or character.

#### 4. Further Analyses
This paper demonstrates the usefulness of analyzing user-side data collected through browsers. Future analyses could deepen our understanding of user behaviors, including the reconstruction of access records before session reconstruction, as discussed in Section 3.2. Two potential directions for further analysis are:

- **Detailed Hazardous Path Reconstruction**: We can use data that was not utilized in this paper to reconstruct hazardous paths more accurately. For example, transition qualifiers collected through the `chrome.webNavigation` API (such as "client_redirect," "server_redirect," "forward_back," and "from_address_bar") can provide deeper insights into user behavior. This can help in cases where a user's browsing pattern involves navigating back and forth between pages.
  
- **Fine-Grained User Behavior Analysis**: Instead of using a binary label (malicious or not malicious), we can analyze user behaviors for each type of detected threat. GSB provides types of threats like "MALWARE" and "SOCIAL_ENGINEERING." However, our current dataset lacks sufficient access records for each threat type, limiting our ability to conduct such an analysis.

### Related Work
Various studies have been reported in the area of malicious URL analysis, employing different approaches and datasets. Some key works include:

- **Web Page Content Analysis**: Studies have analyzed web page content to identify malicious sites [10–17]. Techniques range from JavaScript code analysis at the bytecode level [11] to link structure and cascading style sheets analysis [12, 13].

- **Lexical Analysis**: Lexical analysis has been proposed to extract features from URL strings and identify malicious sites [18–23]. One study [19] uses online learning to achieve real-time detection without requiring time-consuming information.

- **Redirection Chain Analysis**: Several studies have focused on building and analyzing redirection chains [24–29], which are often observed when users reach malicious URLs. Systems like SpiderWeb [28] and WarningBird [29] use various features to distinguish malicious and legitimate chains.

- **User Behavior Analysis**: Other studies have analyzed user behavior to predict and mitigate exposure to malicious content [33–37]. These include predicting future visits to malicious URLs based on past browsing activities and questionnaire data [34].

- **Domain Reputation and Signature Generation**: Research has also focused on domain reputation systems [38–40] and signature generation techniques [41, 42]. Unlike these, our approach collects data at the user side, allowing for detailed analysis of user activities and browser tabs.

### Conclusion
Our user-side web access record collection approach enabled us to gather a wide range of data, including user IDs, browser tab IDs, and navigation information. This facilitated efficient and detailed analysis of user behavior. We reconstructed hazardous paths by continuously tracing previous access records until identifying entry points. The analysis revealed that bookmarks are a major entry point for hazardous paths, indicating that sanitizing bookmark entries can minimize the risk of accessing malicious URLs. Additionally, we proposed a preemptive domain filtering scheme to identify and filter domains leading to malicious URLs, demonstrating its effectiveness by revealing non-blacklisted domains that led users to malicious URLs. We hope this work contributes to enhancing web security.

### Acknowledgment
This study was supported by the WarpDrive project [2]. We thank all our colleagues involved in the project, our paper shepherd Amin Kharraz, and the anonymous reviewers for their valuable feedback and assistance.

### References
[1] Google Safe Browsing. https://safebrowsing.google.com/. Accessed: June 1, 2020.
[2] WarpDrive. https://warpdrive-project.jp/. Accessed: June 1, 2020.
[3] Chrome: developer. https://developer.chrome.com/home. Accessed: June 1, 2020.
[4] chrome.webRequest. https://developer.chrome.com/extensions/webRequest. Accessed: June 1, 2020.
[5] chrome.webNavigation. https://developer.chrome.com/extensions/webNavigation. Accessed: June 1, 2020.
[6] chrome.history. https://developer.chrome.com/extensions/history. Accessed: June 1, 2020.
[7] Alexa top sites. https://www.alexa.com/topsites. Accessed: June 1, 2020.
[8] VirusTotal. https://www.virustotal.com/. Accessed: June 1, 2020.
[9] Ghost in the Shell. http://www.production-ig.com/contents/works_sp/16_/index.html. Accessed: June 1, 2020.
[10] D. Canali, M. Cova, G. Vigna, and C. Kruegel. Prophiler: A fast filter for the large-scale detection of malicious web pages. In Proceedings of the 20th International Conference on World Wide Web, 2011.
[11] Y. Fang, C. Huang, L. Liu, and M. Xue. Research on malicious JavaScript detection technology based on LSTM. IEEE Access, 6, 2018.
[12] P. Ravi Kumar, P. Herbert Raj, and P. Jelciana. A framework to detect compromised websites using link structure anomalies. In Computational Intelligence in Information Systems, 2019.
[13] B. Chen, and Y. Shi. Malicious hidden redirect attack web page detection based on CSS features. In 2018 IEEE 4th International Conference on Computer and Communications, 2018.
[14] B. Altay, T. Dokeroglu, and A. Cosar. Context-sensitive and keyword density-based supervised machine learning techniques for malicious webpage detection. Soft Comput., 23, 2019.
[15] A. Fass, R. P. Krawczyk, M. Backes, and B. Stock. JAST: Fully syntactic detection of malicious (obfuscated) JavaScript. In Detection of Intrusions and Malware, and Vulnerability Assessment, 2018.
[16] M. Cova, C. Kruegel, and G. Vigna. Detection and analysis of drive-by-download attacks and malicious JavaScript code. In Proceedings of the 19th International Conference on World Wide Web, 2010.
[17] K. Rieck, T. Krueger, and A. Dewald. Cujo: Efficient detection and prevention of drive-by-download attacks. In Proceedings of the 26th Annual Computer Security Applications Conference, 2010.
[18] M. Darling, G. Heileman, G. Gressel, A. Ashok, and P. Poornachandran. A lexical approach for classifying malicious URLs. In 2015 International Conference on High Performance Computing Simulation, 2015.
[19] J. Ma, L. K. Saul, S. Savage, and G. M. Voelker. Learning to detect malicious URLs. ACM Trans. Intell. Syst. Technol., 2, 2011.
[20] R. Verma, and K. Dyer. On the character of phishing URLs: Accurate and robust statistical learning classifiers. In Proceedings of the 5th ACM Conference on Data and Application Security and Privacy, 2015.
[21] A. Le, A. Markopoulou, and M. Faloutsos. PhishDef: URL names say it all. In 2011 Proceedings IEEE INFOCOM, 2011.
[22] D. Huang, K. Xu, and J. Pei. Malicious URL detection by dynamically mining patterns without pre-defined elements. World Wide Web, 17, 2014.
[23] G. Tan, P. Zhang, Q. Liu, X. Liu, C. Zhu, and L. Guo. MalFilter: A lightweight real-time malicious URL filtering system in large-scale networks. In 2018 IEEE Intl Conf on Parallel Distributed Processing with Applications, Ubiquitous Computing Communications, Big Data Cloud Computing, Social Computing Networking, Sustainable Computing Communications, 2018.
[24] Z. Li, S. Alrwais, Y. Xie, F. Yu, and X. Wang. Finding the linchpins of the dark web: a study on topologically dedicated hosts on malicious web infrastructures. In 2013 IEEE Symposium on Security and Privacy, 2013.
[25] L. Lu, R. Perdisci, and W. Lee. SURF: Detecting and measuring search poisoning. In Proceedings of the 18th ACM Conference on Computer and Communications Security, 2011.
[26] H. Mekky, R. Torres, Z. Zhang, S. Saha, and A. Nucci. Detecting malicious HTTP redirections using trees of user browsing activity. In IEEE Conference on Computer Communications, 2014.
[27] Z. Li, K. Zhang, Y. Xie, F. Yu, and X. Wang. Knowing your enemy: Understanding and detecting malicious web advertising. In Proceedings of the 2012 ACM Conference on Computer and Communications Security, 2012.
[28] G. Stringhini, C. Kruegel, and G. Vigna. Shady paths: Leveraging surfing crowds to detect malicious web pages. In Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security, 2013.
[29] S. Lee, and J. Kim. WarningBird: A near real-time detection system for suspicious URLs in Twitter stream. IEEE Transactions on Dependable and Secure Computing, 10, 2013.
[30] T. Nelms, R. Perdisci, M. Antonakakis, and M. Ahamad. WebWitness: Investigating, categorizing, and mitigating malware download paths. In 24th USENIX Security Symposium, 2015.
[31] T. Nelms, R. Perdisci, M. Antonakakis, and M. Ahamad. Towards measuring and mitigating social engineering software download attacks. In 25th USENIX Security Symposium, 2016.
[32] T. Taylor, X. Hu, T. Wang, J. Jang, M. P. Stoecklin, F. Monrose, and R. Sailer. Detecting malicious exploit kits using tree-based similarity searches. In Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy, 2016.
[33] D. Canali, L. Bilge, and D. Balzarotti. On the effectiveness of risk prediction based on users browsing behavior. In Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security, 2014.
[34] M. Sharif, J. Urakawa, N. Christin, A. Kubota, and A. Yamada. Predicting impending exposure to malicious content from user behavior. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, 2018.
[35] F. L. Lévesque, J. M. Fernandez, and A. Somayaji. Risk prediction of malware victimization based on user behavior. In 2014 9th International Conference on Malicious and Unwanted Software: The Americas (MALWARE), 2014.
[36] M. Ovelgönne, T. Dumitraş, B. A. Prakash, V. S. Subrahmanian, and B. Wang. Understanding the relationship between human behavior and susceptibility to cyber attacks: A data-driven approach. ACM Trans. Intell. Syst. Technol., 8, 2017.
[37] Y. Carlinet, L. Mé, H. Debar, and Y. Gourhant. Analysis of computer infection risk factors based on customer network usage. In 2008 Second International Conference on Emerging Security Information, Systems and Technologies, 2008.
[38] M. Antonakakis, R. Perdisci, D. Dagon, W. Lee, and N. Feamster. Building a dynamic reputation system for DNS. In Proceedings of the 19th USENIX Conference on Security, 2010.
[39] M. Antonakakis, R. Perdisci, W. Lee, N. Vasiloglou, and D. Dagon. Detecting malware domains at the upper DNS hierarchy. In Proceedings of the 20th USENIX Conference on Security, 2011.
[40] M. A. Rajab, L. Ballard, N. Lutz, P. Mavrommatis, and N. Provos. CAMP: Content-agnostic malware protection. In 20th Annual Network and Distributed System Security Symposium, 2013.
[41] J. Zhang, C. Seifert, J. W. Stokes, and W. Lee. Arrow: Generating signatures to detect drive-by downloads. In Proceedings of the 20th International Conference on World Wide Web, 2011.
[42] J. Newsome, B. Karp, and D. Song. Polygraph: Automatically generating signatures for polymorphic worms. In Proceedings of the 2005 IEEE Symposium on Security and Privacy, 2005.