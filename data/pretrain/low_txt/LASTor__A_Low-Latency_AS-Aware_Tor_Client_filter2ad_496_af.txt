### VII. DISCUSSION

In this section, we discuss the necessary extensions to Tor to further reduce latencies and address the impact on load balancing if LASTor is widely adopted.

#### A. Accounting for Dynamic Load

Although our work has shown that the Weighted Shortest Path (WSP) can significantly reduce latencies in Tor, there remains a significant overhead compared to communication over the default Internet path. To further reduce latencies, it is essential to minimize queuing delays by considering the load at each relay during path selection. Here, we present some preliminary results from our efforts to achieve this.

First, we observe that the access link bandwidths of Tor relays vary widely, as illustrated in Figure 14(a). Therefore, we investigate the potential for reducing queuing delays by restricting the choice of relays to those with high bandwidth. To study this, we measure path latencies on the Tor network when visiting the top 200 websites from 50 PlanetLab nodes in two scenarios. In the first scenario, we choose relays randomly from those with bandwidth greater than 100 KBps. In the second scenario, we select relays without any bandwidth restriction. To ensure similar propagation delays in both settings, for every path chosen from relays with bandwidth greater than 100 KBps, we pick a corresponding path with entry, middle, and exit nodes in the same locations but without any bandwidth restrictions. For each path selection strategy, we measure latencies between every (client, destination) pair on five different paths. The lines "All Relays" and "BW ≥ 100 KBps" in Figure 14(b) show that the distribution of median latency (across the five chosen paths) is identical, whether we account for relay bandwidth or not. We used the "Estimated" bandwidth estimate for each relay, which is the value used by the default Tor client for path selection, and found similar results with other estimates of relay access link bandwidth provided by the Tor directory.

Next, we studied the variation in latencies over time on a given path. We selected 20 (client, destination) pairs at random and considered two different disjoint paths with the same end-to-end geographical distance; each path traversed three Tor relays. For each (client, destination) pair, we measured latencies once every half hour on either path and noted the relative difference between latencies measured on the first and second path. We randomly ordered the two paths chosen for every (client, destination) pair and fixed that ordering across all measurement rounds. Figure 15 shows the variation in the difference in measured latencies over a day. We see that, although the pair of paths selected for every (client, destination) pair span identical geographical distances, the path that provides better latencies varies significantly over time.

These results suggest that reducing queuing delays may only be possible by modifying relays—either by having them track and report load at finer granularities of time or by introducing a new queue management algorithm. Given the current implementation of Tor relays, biasing relay selection based on their bandwidth may help improve throughput but will not improve latencies for interactive transfers.

#### B. Load Balancing

The default Tor client currently selects relays with a probability proportional to their access link bandwidth. As a result, the fraction of Tor's traffic that traverses any particular relay is roughly proportional to that relay’s access link bandwidth, thus balancing the load across relays.

In contrast, if LASTor were widely used, the load across Tor relays could be significantly skewed. If most users choose to use LASTor with a value close to 0 for α, paths chosen by each client will be biased towards relays that result in lower end-to-end distances to the destinations with which the client communicates. On the other hand, even if all users use LASTor with a value of 1 for α, the random selection of relays will result in an equal distribution of load across relays, which is undesirable given the significant skew in access link bandwidths across relays (as seen in Figure 14(a)).

Addressing this issue requires further investigation outside the scope of this work. However, we present two recommendations to enable widespread use of LASTor without harming the balance of load across Tor relays. First, we recommend that Tor users who use the network for bulk transfers, such as BitTorrent, should continue to use the default Tor client. Since bulk transfers account for a majority of the traffic on Tor [1], the use of the default Tor client for such traffic will ensure a distribution of load across relays that is reasonably close to the distribution of their access link bandwidths. The loss of anonymity due to protocol-specific path selection requires further investigation. Second, LASTor’s path selection algorithm itself will need to be modified to take the access link bandwidths of relays into account. To do so, we will need to discover the distribution of the value of α used by Tor users who use the LASTor client. Discovering this distribution should be possible through an anonymous survey of users. LASTor’s path selection algorithm can then be adjusted to not only prefer paths with a lower end-to-end distance but also to account for the access link bandwidths of relays and the distribution of α across users.

### VIII. RELATED WORK

We build upon three lines of prior work: 1) improving performance in Tor, 2) enhancing anonymity with Tor, and 3) AS path inference. We discuss related efforts in these areas.

**Improving Performance in Tor:** Sherr et al. [6], [39] proposed a path selection algorithm based on the concept of link-based relay selection. They showed that their approach offers better performance on various objective functions, such as latency and bandwidth. However, implementing this approach requires modifications to relays, which is non-trivial. Therefore, we focus on latency benefits possible without any modification to relays. Furthermore, to evaluate the anonymity of their approach, Sherr et al. counted the number of traversed ASes on the path, considering a lower number of ASes to provide better anonymity. Instead, we explicitly detect common ASes on the entry and exit segments of a path and avoid such paths.

Panchenko et al. [7] proposed two algorithms to improve Tor performance. First, to reduce latency, they measure the latency between every pair of relays and choose a path with a probability related to the end-to-end latency. Second, to help throughput-oriented applications, they perform passive measurements to infer the available bandwidth on each relay and pick a path based on the expected end-to-end throughput. However, these approaches require modifications to all Tor relays. Since most connections on Tor correspond to interactive traffic [1], we focus only on reducing latency and show how to do so with only client-side modifications.

The authors of [40] studied the influence of geographical diversity on Tor performance and found a tradeoff between improved performance and anonymity. They found that low diversity of relays may lower latencies in setting up circuits, but greater geographical diversity of nodes is important for strong anonymity guarantees. We similarly illustrate the loss in anonymity when preferring low latency paths but make path selection tunable to enable latency benefits to be overridden for better anonymity when desired.

Snader and Borisov [5] showed how a client can trade off between performance and anonymity when selecting paths. However, they focused on improving throughput on Tor, while we focus on latency. We showed that the selection of lower latency paths requires several techniques not necessary when optimizing throughput, such as careful selection of entry guards and accounting for geographically distributed destinations. DefenestraTor [8] improves latencies in Tor by modifying traffic management in Tor relays to reduce congestion-related queuing delays. We pursue a complementary approach that reduces propagation delays without any modifications to Tor relays.

**AS-awareness in Path Selection:** Feamster and Dingledine [9] studied the Tor network to investigate the problem of an AS eavesdropping both ends of a circuit. They showed that there are Tor relays with different IP addresses in the same AS, and Tor clients should avoid selecting two relays from the same AS. They also discovered that the probability of an AS observing both ends of a circuit varies between 10% and 30% across (client, destination) pairs. To reduce this probability, they proposed the passive monitoring of BGP feeds to determine AS paths. However, they did not elaborate on how clients should fetch and maintain up-to-date information from BGP routing tables. Motivated by their observation, we make AS-aware path selection practical by reducing both time and space complexity.

Later, Edman and Syverson [10] showed that although the number of Tor relays increased significantly since Feamster and Dingledine’s analysis, the probability of an AS being able to observe both ends of a connection did not decrease much. To protect against snooping ASes, they suggested that all Tor server authorities agree upon a snapshot of ASes based on Routing Information Bases (RIB). Clients can then use AS topology snapshots to select a path in which AS-level routes from the client to the entry node and from the exit node to the destination span a disjoint set of ASes. Our evaluation shows that our approach of using AS sets significantly reduces the rate of missing snooping ASes compared to that proposed by Edman and Syverson.

**AS Path Inference:** Several systems and algorithms have been developed for inferring AS paths between arbitrary IP addresses on the Internet. These approaches can be broadly classified into two classes. One set of approaches [12], [32], [33] enables computationally efficient estimation of AS paths but uses a large corpus of path measurements as input. Such approaches are ideal for hosting services that can be queried for AS path inferences, but this is not an option in the case of Tor since the queries for AS paths can leak client anonymity. The second set of approaches [11], [13] for AS path inference requires much less data as input, e.g., only the Internet’s PoP-level or AS-level topology, but are computationally prohibitive in processing queries. Using such techniques to select paths that avoid snooping ASes would render the selection of low latency paths moot. Given these shortcomings of prior approaches for AS path inference, we develop a new technique that has low runtimes and requires compact inputs.

**Other Related Work:** Several measurement studies [41], [42], [1] of the Tor network have been performed to determine the location diversity of Tor users and the popularity of different kinds of traffic such as HTTP, BitTorrent, and E-mail. These studies have shown that although HTTP transfers account for a small fraction of the traffic on Tor, they constitute a large majority of connections. Hence, for most Tor users, latency is more important than throughput. To the best of our knowledge, we are the first to show how to improve latencies on Tor in a practical manner with only client-side modifications.

Hopper et al. [21] studied the loss in a client’s anonymity by knowing the latency on the circuit in use by the client. While complementary to our effort, this study needs to be revisited in the light of our tunable AS-aware WSP path selection algorithm. We speculate that the knowledge that a client is using WSP to choose paths probably leaks more information about the client when path latency is known.

### IX. CONCLUSIONS AND FUTURE WORK

Although Tor is the most widely used anonymity network today for low-latency anonymous communication, poor latencies and the fear of traffic correlation attacks by underlying ASes are the biggest problems with Tor’s usability. Prior proposals have either focused on improving throughput, which does not help interactive communication, or mandated significant modifications to Tor relays, placing the onus on developers and delaying deployment.

In this paper, we developed a new Tor client, called LASTor, to demonstrate that significant latency gains and protection against snooping ASes can be achieved on Tor today without requiring any modifications to Tor relays. Based on measurements along paths between 10,000 (client, destination) pairs, we showed that LASTor can deliver a 25% reduction in median path latency. To deliver these latency benefits, we showed that it is important to carefully select entry guards and account for replicated destinations. We also developed a space- and time-efficient technique for enabling LASTor to reliably detect the possible presence of snooping ASes on any path. Moreover, we have made path selection in LASTor tunable so that a user can easily choose an appropriate trade-off between latency and anonymity.

We plan to make LASTor available for public use. We are also investigating the use of latency estimation approaches [13], [12] that do not require measurements from relays to further improve latencies on Tor without necessitating modifications to relays.

### REFERENCES

[1] D. Mccoy, K. Bauer, D. Grunwald, T. Kohno, and D. Sicker, “Shining light in dark places: Understanding the Tor network,” in PETS, 2008.
[2] R. Dingledine, N. Mathewson, and P. Syverson, “Tor: The second-generation onion router,” in USENIX Security Symposium, 2004.
[3] G. Danezis, R. Dingledine, and N. Mathewson, “Mixminion: Design of a type III anonymous remailer protocol,” in IEEE S&P, 2003.
[4] U. Moeller, L. Cottrell, P. Palfrader, and L. Sassaman, “IETF draft: Mixmaster protocol version 2,” http://www.ietf.org/internet-drafts/draft-sassaman-mixmaster-03.txt, 2005.
[5] R. Snader and N. Borisov, “A tune-up for Tor: Improving security and performance in the Tor network,” in NDSS, 2008.
[6] M. Sherr, M. Blaze, and B. T. Loo, “Scalable link-based relay selection for anonymous routing,” in PETS, 2009.
[7] A. Panchenko and J. Renner, “Path selection metrics for performance-improved onion routing,” in SAINT, 2009.
[8] M. AlSabah, K. Bauer, I. Goldberg, D. Grunwald, D. McCoy, S. Savage, and G. M. Voelker, “DefenestraTor: Throwing out windows in Tor,” in PETS, 2011.
[9] N. Feamster and R. Dingledine, “Location diversity in anonymity networks,” in WPES, 2004.
[10] M. Edman and P. F. Syverson, “AS-awareness in Tor path selection,” in CCS, 2009.
[11] Z. M. Mao, L. Qiu, J. Wang, and Y. Zhang, “On AS-level path inference,” in SIGMETRICS, 2005.
[12] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. Anderson, A. Krishnamurthy, and A. Venkataramani, “iPlane: An information plane for distributed services,” in OSDI, 2006.
[13] H. V. Madhyastha, E. Katz-Bassett, T. Anderson, A. Krishnamurthy, and A. Venkataramani, “iPlane Nano: Path prediction for peer-to-peer applications,” in NSDI, 2009.
[14] “The Tor Project, Inc.” http://www.torproject.org.
[15] M. G. Reed, P. F. Syverson, and D. M. Goldschlag, “Anonymous connections and onion routing,” IEEE JSAC, 1998.
[16] M. Wright, M. Adler, B. N. Levine, and C. Shields, “Defending anonymous communications against passive logging attacks,” in IEEE S&P, 2003.
[17] “Quantcast,” http://www.quantcast.com/top-sites-1.
[18] “PlanetLab,” http://www.planet-lab.org.
[19] “MaxMind - GeoLite City,” http://www.maxmind.com/app/geolitecity.
[20] M. Edman and B. Yener, “On anonymity in an electronic society: A survey of anonymous communication systems,” ACM Computing Surveys, 2009.
[21] N. Hopper, E. Y. Vasserman, and E. Chan-TIN, “How much anonymity does network latency leak?” TISSEC, 2010.
[22] N. Mathewson and R. Dingledine, “Practical traffic analysis: Extending and resisting statistical disclosure,” in PETS, 2004.
[23] S. J. Murdoch and P. Zieliski, “Sampled traffic analysis by internet-exchange-level adversaries,” in PETS, 2007.
[24] “Tor path specification,” https://gitweb.torproject.org/torspec.git?a=blob plain;hb=HEAD;f=path-spec.txt, 2011.
[25] A. Broido and kc claffy, “Analysis of RouteViews BGP data: Policy atoms,” in Network Resource Data Management Workshop, 2001.
[26] “Tor metrics portal: Users,” https://metrics.torproject.org/users.html.
[27] D. Meyer, “RouteViews,” http://www.routeviews.org.
[28] “RIPE Routing Information Service,” http://www.ripe.net/ris/.
[29] R. Krishnan, H. V. Madhyastha, S. Srinivasan, S. Jain, A. Krishnamurthy, T. Anderson, and J. Gao, “Moving beyond end-to-end path information to optimize CDN performance,” in IMC, 2009.
[30] P. Mittal, A. Khurshid, J. Juen, M. Caesar, and N. Borisov, “Stealthy traffic analysis of low-latency anonymous communication using throughput fingerprinting,” in CCS, 2011.
[31] C. Gini, “Measurement of inequality of incomes,” The Economic Journal, 1921.
[32] D. Lee, K. Jang, C. Lee, G. Iannaccone, and S. Moon, “Scalable and systematic Internet-wide path and delay estimation from existing measurements,” Computer Networks, 2011.
[33] J. Qiu and L. Gao, “AS path inference by exploiting known AS paths,” in GLOBECOM, 2006.
[34] “Archipelago measurement infrastructure,” http://www.caida.org/projects/ark/.
[35] L. Gao, “On inferring autonomous system relationships in the Internet,” IEEE/ACM ToN, 2001.
[36] “iPlane: Datasets,” http://iplane.cs.washington.edu/data/data.html.
[37] “The Tor directory protocol,” https://gitweb.torproject.org/torspec.git?a=blob plain;hb=HEAD;f=dir-spec.txt, 2011.
[38] “iPlane: Measurements and query interface,” http://iplane.cs.washington.edu/iplane_interface.pdf.
[39] M. Sherr, B. Thau, and L. M. Blaze, “Towards application-aware anonymous routing,” in HotSec, 2007.
[40] A. Panchenko, L. Pimenidis, and J. Renner, “Performance analysis of anonymous communication channels provided by Tor,” International Conference on Availability, Reliability and Security, 2008.
[41] S. Le-Blond, P. Manils, C. Abdelberi, M. A. Kˆaafar, C. Castelluccia, A. Legout, and W. Dabbous, “One bad apple spoils the bunch: Exploiting P2P applications to trace and profile Tor users,” CoRR, 2011.
[42] K. Loesing, S. J. Murdoch, and R. Dingledine, “A case study on measuring statistical data in the Tor anonymity network,” in Workshop on Ethics in Computer Security Research (WECSR), 2010.