### Exploitation of Device Versions and Services

Attackers can exploit vulnerabilities in device versions and services. For instance, Metasploit can be used to directly attack a discovered vulnerability [35]. Alternatively, the BeEF framework can manipulate web traffic destined for a client device, injecting redirects or exploitation code [36]. Karmetasploit, an integration of the Metasploit Framework and Karmeta, is another tool that can poison software upgrade requests for many common programs, allowing attackers to silently corrupt network nodes without user interaction [37-39].

Once alternative backchannels are established, the attacker no longer needs the Raspberry MoCA for primary use. They can retrieve it by disconnecting the coaxial cable and charging it for future engagements. If the attacker loses access to the target, they can redeploy the Raspberry MoCA Platform to regain control.

### Demonstration

The primary goal of this project was to create a finished penetration platform that could serve as a training tool to highlight the vulnerabilities of the MoCA protocol as commonly deployed. This would allow for the demonstration of subversion techniques, potentially on live networks, in a non-impactful, public, and open manner.

Security researcher Joshua Wright presented a similar distribution called “I Love My Neighbors,” which performed traffic manipulation on an open wireless honeypot to demonstrate the dangers of using unprotected open wireless networks to non-technical users [40]. The manipulations were simple, obvious, and often humorous, such as image modifications or web page redirections.

**Figure 2: Manipulated image demonstrates the nascent capability of Raspberry MoCA**

To enable this on the Raspberry MoCA, the squid configuration and URL rewriting scripts from Wright’s provided honeypot system image were acquired. Wright’s service configuration script was also heavily modified to fit the unified forwarding environment of the single-homed device. With the establishment of iptables port redirection, the unit could receive and manipulate web traffic explicitly proxied to it [41]. Adding an Ettercap command to establish ARP Man-in-the-Middle (MITM) redirection for the entire LAN ensured that all hosts were subverted, producing obvious yet innocuous picture manipulations, as seen in Figure 2.

### Results

Raspberry MoCA successfully redirected the entire MoCA LAN segment and its bridged wireless and Ethernet segments to the attacking device. Unwitting devices had their web traffic passed through the transparent Squid proxy, and images were manipulated using the URL rewrite function [42].

The single-core ARM11 processor of the Raspberry Pi base struggled with image manipulation as configured by the original scripts. Performance improved when the number of available processes was reduced from 15 Squid url_rewrites to five and 25 Apache processes to five, reducing the memory footprint and freeing up some interrupt contention of the processor.

Redirection of traffic via Ettercap’s ARP MITM module operated flawlessly. The device managed ARP poisons for targeted and LAN-wide subversions. Filters were successfully applied to test packet data manipulation, changing the word ‘dog’ to ‘cat’. This demonstrated that the simple insertion of an iframe or JavaScript redirect to malicious code into a target’s web stream would not provide a noticeable latency to the user.

### Mitigations

As mentioned in prior work, monitoring valid ARP announcements, MoCA, and DHCP rogue nodes would provide indicators of this attack [1]. However, most home users lack the knowledge or capability to employ these defenses or monitor them effectively. Further sensing strategies that may detect this attack include creating a monitoring script to dump the router IGD forwarding state and compare it for changes. These changes will occur from time to time, but with a log of the activity, they can later be analyzed or profiled to alert on suspicious mappings to known sensitive ports.

Another strategy would be to test the router’s firewall implementation, regardless of its reporting. An external host would be needed to scan the external-facing interface for open ports. This tool should report on unauthorized or unknown openings.

The final mitigation strategy accepts that the MoCA LAN, as deployed, is not defendable. However, its risk to the greater network can be reduced through the use of a third-party firewall. The Optical Network Terminal (ONT) must first be configured to use an Ethernet connection to bridge the connection of the building to the Optical Service Provider (OSP) instead of MoCA WAN. With this accommodation, the ActionTec router and its untrustworthy MoCA LAN can be isolated to an untrusted network zone on the independent firewall. By connecting other more trusted networks to other zones and denying traffic between the networks unless explicitly defined, the impact of a MoCA LAN subversion can be limited.

### Conclusions

The Raspberry MoCA Platform provides an effective, automated penetration kit at a cost minimal enough to consider disposable. With the integration of a transparent proxy server, it also serves as an affordable educational tool to demonstrate the threat to MoCA networks. While the manipulation of large files at layer 7 proved to be a performance drag for the single-core, low-power ARM processor, traffic manipulation and injection were accomplished with ease.

### References

[1] A. Hunt. “Media Over Coaxial Alliance (MoCA): Overview and Security Posture.” Available by request.

[2] “Back-UPS ES - Product Information,” APC by Schneider Electric. [Online]. Available: http://www.apc.com/products/family/index.cfm?id=21. [Accessed: 26-Apr-2013].

[3] A. Kropelin, “Apcupsd, a daemon for controlling APC UPSes,” 13-Sep-2011. [Online]. Available: http://www.apcupsd.com/. [Accessed: 25-Apr-2013].

[4] W. Wang and T. Dey, “A Survey on ARM Cortex A Processors.” [Online]. Available: http://www.cs.virginia.edu/~skadron/cs8535_s11/ARM_Cortex.pdf. [Accessed: 26-Apr-2013].

[5] Offensive Security, “Install Kali ARM on a Raspberry Pi,” Kali Linux Official Documentation. [Online]. Available: http://docs.kali.org/armel-armhf/install-kali-linux-arm-raspberry-pi. [Accessed: 18-Apr-2013].

[6] rageweb, “Raspi-config in Kali,” Hypothetically Planned Trajectory, 21-Mar-2013. [Online]. Available: http://rageweb.info/2013/03/21/raspi-config-in-kali/. [Accessed: 18-Apr-2013].

[7] A. Presser, L. Farrell, D. Kemp, and W. Lupton, “UPnP Device Architecture 1.1,” UPnP Forum, 15-Oct-2008. [Online]. Available: http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf. [Accessed: 17-Feb-2013].

[8] “UPnP Forum,” 2013. [Online]. Available: http://www.upnp.org/. [Accessed: 17-Feb-2013].

[9] S. Gibson, “GRC | Port Authority, for Internet Port 1900,” Gibson Research Corporation. [Online]. Available: http://www.grc.com/port_1900.htm. [Accessed: 17-Feb-2013].

[10] “Simple Service Discovery Protocol,” Wikipedia, the free encyclopedia. 13-Feb-2013.

[11] C. Gueguen, “Simple Service Discovery Protocol (SSDP),” The Wireshark Wiki, 02-Mar-2009.

[12] Y. Goland, T. Cai, P. Leach, Y. Gu, and S. Albright, “Simple Service Discovery Protocol/1.0: Operating without an Arbiter,” Internet Engineering Task Force, 28-Oct-1999. [Online]. Available: https://tools.ietf.org/html/draft-cai-ssdp-v1-03. [Accessed: 17-Feb-2013].

[13] R. Ahmed, L. Limam, J. Xiao, Y. Iraqi, and R. Boutaba, “Resource and Service Discovery in Large-Scale, Multi-Domain Networks,” IEEE Communications Surveys and Tutorials, Quarter 2007.

[14] S. Cheshire, B. Aboba, and E. Guttman, “RFC 3927: Dynamic Configuration of IPv4 Link-Local Addresses,” Internet Engineering Task Force, May-2005. [Online]. Available: http://www.ietf.org/rfc/rfc3927.txt. [Accessed: 17-Feb-2013].

[15] B. Langley, M. Paolucci, and K. Sycara, “Discovery of Infrastructure in Multi-Agent Systems.” [Online]. Available: http://www.cs.cmu.edu/~softagents/papers/infrastructureDiscovery.pdf. [Accessed: 17-Feb-2013].

[16] E. Lachinov, “Digital Living Network Alliance,” Wikipedia, the free encyclopedia. 14-Feb-2013.

[17] C. Heffner, “Miranda Readme File.” [Online]. Available: file:///home/ahunt/Documents/isa564/paper/miranda-1.3/docs/readme.html. [Accessed: 18-Mar-2013].

[18] C. Heffner, “miranda-upnp - Python-based interactive UPnP client - Google Project Hosting.” [Online]. Available: http://code.google.com/p/miranda-upnp/. [Accessed: 18-Mar-2013].

[19] F. Scholz, “UPnP-Inspector 0.2.2,” Python Package Index. [Online]. Available: https://pypi.python.org/pypi/UPnP-Inspector/0.2.2. [Accessed: 18-Mar-2013].

[20] T. Potter, J.-M. Gurney, and Fluendo, “Coherence - a DLNA/UPnP Framework for the Digital Living - Trac,” 02-Jan-2010. [Online]. Available: http://coherence.beebits.net/. [Accessed: 18-Mar-2013].

[21] J. Georg, J. Baayen, R. Burton, and Z. Ali, “GUPnP,” GNOME Live! [Online]. Available: https://live.gnome.org/GUPnP/. [Accessed: 19-Feb-2013].

[22] Z. Ali, J. Georg, T. Vermier, and J. Henstridge, “Rygel,” GNOME Live!, 11-Feb-2013. [Online]. Available: https://live.gnome.org/Rygel. [Accessed: 17-Mar-2013].

[23] “4. ssdp — SSDP Server implementation — python-brisa UPnP framework v0.10.0 documentation.” [Online]. Available: http://brisa.garage.maemo.org/doc/html/upnp/ssdp.html. [Accessed: 17-Feb-2013].

[24] G. George, E. Wirt, and D. Blueman, “Linux UPnP Internet Gateway Device,” 08-Feb-2007. [Online]. Available: http://linux-igd.sourceforge.net/documentation.php. [Accessed: 18-Mar-2013].

[25] vwochnik, “Administrating Your Gateway Device Via UPnP,” HowtoForge - Linux Howtos and Tutorials, 21-Apr-2009. [Online]. Available: http://www.howtoforge.com/administrating-your-gateway-device-via-upnp. [Accessed: 17-Mar-2013].

[26] S. Gibson, “GRC | UnPlug n’ Pray - Disable the Dangerous UPnP Internet Server,” Gibson Research Corporation, 03-Mar-2008. [Online]. Available: http://www.grc.com/unpnp/unpnp.htm. [Accessed: 17-Feb-2013].

[27] H. Moore, “Security Flaws in Universal Plug and Play: Unplug, Don’t Play,” 29-Jan-2013. [Online]. Available: https://community.rapid7.com/servlet/JiveServlet/download/2150-1-16596/SecurityFlawsUPnP.pdf. [Accessed: 17-Feb-2013].

[28] T. Bernard, “MiniUPnP Project HomePage,” Feb-2013. [Online]. Available: http://miniupnp.free.fr/. [Accessed: 25-Apr-2013].

[29] “Google Apps Platform — Google Developers.” [Online]. Available: https://developers.google.com/google-apps/gmail/imap_extensions. [Accessed: 26-Apr-2013].

[30] “Ettercap (computing),” Wikipedia, the free encyclopedia. 29-Oct-2012. [Online]. Available: http://en.wikipedia.org/w/index.php?title=Ettercap_(computing)&oldid=520362724. [Accessed: 12-Nov-2012].

[31] A. Ornaghi and M. Valleri, “Ettercap.” [Online]. Available: http://ettercap.sourceforge.net/. [Accessed: 12-Nov-2012].

[32] “ARP spoofing,” Wikipedia, the free encyclopedia. 12-Nov-2012. [Online]. Available: http://en.wikipedia.org/w/index.php?title=ARP_spoofing&oldid=522187503. [Accessed: 12-Nov-2012].

[33] S. Whalen, “An Introduction to Arp Spoofing,” Apr-2001. [Online]. Available: http://dl.packetstormsecurity.net/papers/protocols/intro_to_arp_spoofing.pdf. [Accessed: 12-Nov-2012].

[34] A. Ornaghi and M. Valleri, “Man In The Middle Attacks Demos,” in BlackHat Conference USA, Las Vegas, NV, 2003. [Online]. Available: http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-ornaghi-valleri.pdf. [Accessed: 12-Nov-2012].

[35] “Penetration Testing Software | Metasploit.” [Online]. Available: http://www.metasploit.com/. [Accessed: 19-Nov-2012].

[36] W. Alcorn, “BeEF - The Browser Exploitation Framework Project.” [Online]. Available: http://beefproject.com/. [Accessed: 19-Nov-2012].

[37] M. Vallentin and Y. Ben-David, “Persistent Browser Cache Poisoning,” 2010. [Online]. Available: http://www.eecs.berkeley.edu/~yahel/papers/Browser-Cache-Poisoning.Song.Spring10.attack-project.pdf. [Accessed: 19-Nov-2012].

[38] F. Amato and F. Kirschbaum, “You STILL have pending upgrades!,” in DefCon 18, Las Vegas, NV, 2010. [Online]. Available: https://www.defcon.org/images/defcon-18/dc-18-presentations/Amato-Kirschabum/DEFCON-18-Amato-Kirschabum-Evilgrade.pdf. [Accessed: 19-Nov-2012].

[39] V. Oezer, “The Evil Karmetasploit Upgrade,” in Nullcon, Zuri, India, 2009. [Online]. Available: http://nullcon.net/nullcon2010presentation/Veysel_nullcon2010_Paper.pdf. [Accessed: 19-Nov-2012].

[40] J. Wright, “Hacking Your Friends and Neighbors For Fun… (no profit, just fun) - hacking-friends,” Will Hack for Sushi, 18-Jan-2013. [Online]. Available: http://neighbor.willhackforsushi.com/hacking-friends.pdf. [Accessed: 12-Apr-2013].

[41] “Linux iptables: Port Redirection Example.” [Online]. Available: http://www.cyberciti.biz/faq/linux-port-redirection-with-iptables/. [Accessed: 26-Apr-2013].

[42] “SquidFaq/InterceptionProxy - Squid Web Proxy Wiki.” [Online]. Available: http://wiki.squid-cache.org/SquidFaq/InterceptionProxy. [Accessed: 26-Apr-2013].