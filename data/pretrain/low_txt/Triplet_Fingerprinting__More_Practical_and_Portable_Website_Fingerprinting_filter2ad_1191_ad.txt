### Triplet Fingerprinting (TF) Attack: A Robust and Efficient Approach

#### Introduction
This paper introduces the Triplet Fingerprinting (TF) attack, which is designed to perform website fingerprinting (WF) under more realistic and challenging scenarios than those typically found in existing literature. The TF attack leverages triplet networks for N-shot learning, enabling an attacker to train on a small number of samples per site. We evaluate the TF attack under several challenging conditions and demonstrate its effectiveness.

#### Methodology
The TF attack uses triplet networks, a type of neural network architecture that is particularly well-suited for few-shot learning. This approach allows the attacker to train a model with just a few examples per website, making it feasible even with limited computing resources.

#### Evaluation
We evaluate the TF attack under various challenging scenarios:
1. **Temporal Mismatch**: The training and testing data are collected years apart and from different networks.
2. **Open-World Setting**: The attack is tested in an open-world setting where the number of unmonitored websites is large and growing.
3. **WTF-PAD Defense**: The performance of the TF attack is evaluated against the WTF-PAD defense mechanism, which is known to be effective in mitigating WF attacks.

**Results**
- **Temporal Mismatch**: The TF attack maintains 85% accuracy even when the training and testing data are from different years and collected on different networks.
- **Open-World Setting**: The TF attack outperforms traditional transfer learning methods in the open-world setting.
- **WTF-PAD Defense**: Table 13 shows the performance of the TF attack against the WTF-PAD defense. Despite the presence of the defense, the TF attack achieves comparable results to other state-of-the-art methods, such as CUMUL and AWF, and outperforms SDAE, k-NN, and k-FP.

#### Reproducibility
The source code and dataset used in this study are publicly available at [https://github.com/triplet-fingerprinting/tf](https://github.com/triplet-fingerprinting/tf).

#### Acknowledgments
We thank Dr. Leon Reznik, Dr. Sumita Mishra, and Dr. Peizhao Hu for their valuable discussions, and the anonymous reviewers for their feedback. Special thanks to Dr. Amir Houmansadr for shepherding our work.

This research was supported by the National Science Foundation under Grants No. CNS-1423163, CNS-1722743, and DGE-1433736.

#### Discussion
The TF attack offers several key benefits:
1. **Adaptability to Interactive Websites**: NSL allows the attacker to quickly collect and use up-to-date network traffic examples, improving performance on frequently changing sites.
2. **Webpage Fingerprinting**: The TF attack can be applied to entire webpages, not just homepages, providing a more comprehensive fingerprinting capability.

#### Dataset Distribution Analysis
To evaluate the TF attack under more challenging scenarios, we analyze the performance when there is a significant mismatch between the training and testing datasets. Specifically, we use the AWF dataset (collected in 2016 using Tor browser version 6) for training and the Wang dataset (collected in 2013 using Tor browser version 3) for testing. Our analysis includes:
- **Basic Network Traffic Statistics**: We compare the average number of incoming and outgoing packets for common websites in both datasets.
- **Similarity Measurement**: We use metrics to quantify the difference in distributions between the two datasets.

#### Hyperparameter Tuning
We provide an intuitive explanation and preliminary results for the hyperparameter tuning process:
- **Base Model**: The DF model, specifically designed for WF, performs slightly better and requires less training time compared to very deep models like GoogleNet, ResNet, and Xception.
- **Distance Metrics**: Cosine distance provides higher performance than Euclidean distance.
- **Mining Strategy**: Semi-Hard-Negative mining outperforms Random and Hard-Negative mining.
- **Margin Value**: The optimal margin value is determined through experimentation.

#### Conclusion
The TF attack demonstrates robust performance under challenging conditions, making it a powerful tool for website fingerprinting. Its ability to operate effectively with limited data and computing resources makes it a significant advancement in the field.

#### References
[1] Mozilla UX Blog. (2011). Test Pilot New Tab Study Results. https://blog.mozilla.org/ux/2011/08/test-pilot-new-tab-study-results/.
[2] Keras. (2017). https://keras.io/.
[3] Tor Metrics. (2017). https://metrics.torproject.org/userstats-relay-country.html.
[4] Tor Project. (2019). New Release: Tor 0.4.0.5. https://blog.torproject.org/new-release-tor-0405.
[5] Abe, K., & Goto, S. (2016). Fingerprinting attack on Tor anonymity using deep learning. In APAN.
[6] Bhat, S., Lu, D., Kwon, A., & Devadas, S. (2018). Var-CNN and DynaFlow: Improved Attacks and Defenses for Website Fingerprinting. arXiv:1802.10215.
[7] Chollet, F. (2017). Xception: Deep Learning with Depthwise Separable Convolutions. CVPR.
[8] Li Fei-Fei, R. Fergus, & P. Perona. (2006). One-shot learning of object categories. IEEE TPAMI.
[9] Harwood, B., Kumar, B. G., Carneiro, G., Reid, I., & Drummond, T. (2017). Smart mining for deep metric learning. ICCV.
[10] Hayes, J., & Danezis, G. (2016). k-fingerprinting: A robust scalable website fingerprinting technique. USENIX Security Symposium.
[11] He, K., Zhang, X., Ren, S., & Sun, J. (2016). Deep residual learning for image recognition. CVPR.
[12] Herrmann, D., Wendolsky, R., & Federrath, H. (2009). Website fingerprinting: attacking popular privacy enhancing technologies with the multinomial Na√Øve-Bayes classifier. ACM Workshop on Cloud Computing Security.
[13] Juarez, M., Afroz, S., Acar, G., Diaz, C., & Greenstadt, R. (2014). A critical evaluation of website fingerprinting attacks. CCS.
[14] Juarez, M., Imani, M., Perry, M., Diaz, C., & Wright, M. (2016). Toward an efficient website fingerprinting defense. ESORICS.
[15] Simonyan, K., & Zisserman, A. (2015). Very deep convolutional networks for large-scale image recognition.
[16] Koch, G., Zemel, R., & Salakhutdinov, R. (2015). Siamese neural networks for one-shot image recognition. ICML Deep Learning Workshop.
[17] Krizhevsky, A., Sutskever, I., & Hinton, G. E. (2012). ImageNet classification with deep convolutional neural networks. NIPS.
[18] Mani, A., Wilson-Brown, T., Jansen, R., Johnson, A., & Sherr, M. (2018). Understanding Tor Usage with Privacy-Preserving Measurement. IMC.
[19] Milad Nasr, A. B., & Houmansadr, A. (2018). DeepCorr: Strong Flow Correlation Attacks on Tor, Using Deep Learning. CCS.
[20] Oh, S. E., Sunkam, S., & Hopper, N. (2018). p-FP: Extraction, Classification, and Prediction of Website Fingerprints with Deep Learning. arXiv:1711.03656.
[21] Panchenko, A., Lanze, F., Zinnen, A., Henze, M., Pennekamp, J., Wehrle, K., & Engel, T. (2016). Website fingerprinting at Internet scale. NDSS.
[22] Parkhi, O. M., Vedaldi, A., & Zisserman, A. (2015). Deep face recognition. BMVC.
[23] Perry, M. (2015). Tor Protocol Specification Proposal. https://gitweb.torproject.org/torspec.git/tree/proposals/254-padding-negotiation.txt.
[24] Rimmer, V., Preuveneers, D., Juarez, M., Van Goethem, T., & Joosen, W. (2018). Automated Website Fingerprinting through Deep Learning. NDSS.
[25] Schroff, F., Kalenichenko, D., & Philbin, J. (2015). FaceNet: A Unified Embedding for Face Recognition and Clustering. CVPR.
[26] Schuster, R., Shmatikov, V., & Tromer, E. (2017). Beauty and the Burst: Remote identification of encrypted video streams. USENIX Security Symposium.
[27] Sirinam, P., Imani, M., Juarez, M., & Wright, M. (2018). Deep Fingerprinting: Undermining Website Fingerprinting Defenses with Deep Learning. CCS.
[28] Sun, Y., Edmundson, A., Vanbever, L., Li, O., Rexford, J., Chiang, M., & Mittal, P. (2015). RAPTOR: Routing Attacks on Privacy in Tor. USENIX Security Symposium.
[29] Szegedy, C., Liu, W., Jia, Y., Sermanet, P., Reed, S., Anguelov, D., Erhan, D., Vanhoucke, V., & Rabinovich, A. (2015). Going deeper with convolutions.
[30] Taigman, Y., Yang, M., Ranzato, M. A., & Wolf, L. (2014). Deepface: Closing the gap to human-level performance in face verification. CVPR.
[31] v. d. Weth, C., & Hauswirth, M. (2013). DOBBS: Towards a Comprehensive Dataset to Study the Browsing Behavior of Online Users. WI-IAT.
[32] Vinyals, O., Blundell, C., Lillicrap, T., & Wierstra, D. (2016). Matching networks for one shot learning. NIPS.
[33] Wang, T., Cai, X., Nithyanand, R., Johnson, R., & Goldberg, I. (2014). Effective attacks and provable defenses for website fingerprinting. USENIX Security Symposium.
[34] Wang, T., & Goldberg, I. (2016). On realistically attacking Tor with website fingerprinting. PoPETs.
[35] Xu, Y., Wang, T., Li, Q., Gong, Q., Chen, Y., & Jiang, Y. (2018). A Multi-tab Website Fingerprinting Attack. ACSAC.
[36] Yan, J., & Kaur, J. (2018). Feature Selection for Website Fingerprinting. PETS.
[37] Yosinski, J., Clune, J., Bengio, Y., & Lipson, H. (2014). How Transferable Are Features in Deep Neural Networks? NIPS.
[38] Zhu, Y., Fu, X., Graham, B., Bettati, R., & Zhao, W. (2010). Correlation-based traffic analysis attacks on anonymity networks. IEEE TPDS.