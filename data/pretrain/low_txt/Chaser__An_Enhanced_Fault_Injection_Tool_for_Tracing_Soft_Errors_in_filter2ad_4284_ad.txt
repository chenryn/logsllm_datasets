### Introduction to Chaser: A Fine-Grained Soft Error Fault Tracing Framework

Chaser is a fine-grained, accountable, flexible, and efficient soft error fault tracing framework built on top of DECAF as an add-on to PFSEFI. It provides detailed fault propagation tracing and demonstrates the PFSEFI add-on interfaces built with DECAF. The overhead of using Chaser is minimal, making it suitable for studying sequential and parallel applications to understand how faults propagate through them. Chaser enables the evaluation of application properties such as the relationship between tainted reads and writes, and how faults spread in a parallel application.

### Tainted Memory Writes Analysis

Figure 9 illustrates the distribution of the number of tainted memory writes within a single run across all MPI ranks over all fault injection runs. For example, most injected faults trigger taint write operations up to a maximum of 12,000 times, with the majority of cases involving fewer than 1,000 taint write operations.

Intuitively, injection points that result in higher numbers of tainted memory operations should be considered candidates for further hardening via resilience techniques. With fault injection information, researchers can design more resilient algorithms by analyzing the relationship between different injection points and the propagation of faults.

### Performance Overhead

Figure 10 shows the performance overhead of Chaser. The results are based on running the application under DECAF++, which imposes only a 4% overhead compared to running the application natively on the host. We used Matvec and CLAMR to test the performance overhead of Chaser with and without fault propagation tracing. To ensure fair comparisons, we inject the original values into the memory or register instead of flipping any bits. The normalized overhead results are presented in Figure 10.

For CLAMR, faults are injected into the `fadd` instruction after it has been executed 1,000 times. We use the following arguments for our CLAMR tests: `-n 250 -l 2 -t 20 -i 10`. With fault propagation tracing enabled, the performance overhead is carefully measured and analyzed.

### References

[1] Cell-based adaptive mesh refinement. https://github.com/losalamos/

[2] MPI version of matrix-vector product computation. https://people.sc.fsu.edu/~jburkardt/c_src/mpi/matvec_mpi.c

[3] The Rodinia benchmark suite. https://github.com/pathscale/rodinia/

[4] ASHRAF, R. A., GIOIOSA, R., KESTOR, G., DEMARA, R. F., CHER, C.-Y., AND BOSE, P. Understanding the propagation of transient errors in HPC applications. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (2015), ACM, p. 72.

[5] ASHRAF, R. A., GIOIOSA, R., KESTOR, G., DEMARA, R. F., CHER, C.-Y., AND BOSE, P. Understanding the propagation of transient errors in HPC applications. In Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (New York, NY, USA, 2015), SC ’15, ACM, pp. 72:1–72:12.

[6] BAGATIN, M., GERARDIN, S., PACCAGNELLA, A., ANDREANI, C., GORINI, G., PIETROPAOLO, A., PLATT, S. P., AND FROST, C. D. Factors impacting the temperature dependence of soft errors in commercial SRAMs. In 2008 European Conference on Radiation and Its Effects on Components and Systems (Sept 2008), pp. 100–106.

[7] BECKER, H. N., MIYAHIRA, T. F., AND JOHNSTON, A. H. Latent damage in CMOS devices from single-event latchup. IEEE Transactions on Nuclear Science 49, 6 (Dec 2002), 3009–3015.

[8] CALHOUN, J., OLSON, L., AND SNIR, M. Flipit: An LLVM-based fault injector for HPC. In Euro-Par 2014: Parallel Processing Workshops - Euro-Par 2014 International Workshops, Porto, Portugal, August 25-26, 2014, Revised Selected Papers, Part I (2014), pp. 547–558.

[9] CANNON, E. H., KLEINOSOWSKI, A., KANJ, R., REINHARDT, D. D., AND JOSHI, R. V. The impact of aging effects and manufacturing variation on SRAM soft-error rate. IEEE Transactions on Device and Materials Reliability 8, 1 (March 2008), 145–152.

[10] CAPPELLO, F., AL, G., GROPP, W., KALE, S., KRAMER, B., AND SNIR, M. Toward exascale resilience: 2014 update. Supercomput. Front. Innov.: Int. J. 1, 1 (Apr. 2014), 5–28.

[11] CHANDRA, V., AND AITKEN, R. Impact of technology and voltage scaling on the soft error susceptibility in nanoscale CMOS. In 2008 IEEE International Symposium on Defect and Fault Tolerance of VLSI Systems (Oct 2008), pp. 114–122.

[12] CHUGG, A. M., BURNELL, A. J., DUNCAN, P. H., PARKER, S., AND WARD, J. J. The random telegraph signal behavior of intermittently stuck bits in SDRAMs. IEEE Transactions on Nuclear Science 56, 6 (Dec 2009), 3057–3064.

[13] COE, T., MATHISEN, T., MOLER, C., AND PRATT, V. Computational aspects of the Pentium affair. IEEE Computational Science and Engineering 2, 1 (Spring 1995), 18–30.

[14] DAVANIAN, A., QI, Z., QU, Y., AND YIN, H. DECAF++: Elastic Whole-System Dynamic Taint Analysis. 22nd International Symposium on Research in Attacks, Intrusions and Defenses (RAID) (2019).

[15] FANG, B., GUAN, Q., DEBARDELEBEN, N., PATTABIRAMAN, K., AND RIPEANU, M. Letgo: A lightweight continuous framework for HPC applications under failures. In Proceedings of the 26th International Symposium on High-Performance Parallel and Distributed Computing (8 2017).

[16] FANG, B., WU, P., GUAN, Q., DEBARDELEBEN, N., MONROE, L., BLANCHARD, S., CHEN, Z., PATTABIRAMAN, K., AND RIPEANU, M. SDC is in the eye of the beholder: A survey and preliminary study. In 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshop (DSN-W) (8 2016).

[17] GUAN, Q., BEBARDELEBEN, N., WU, P., EIDENBENZ, S., BLANCHARD, S., MONROE, L., BASEMAN, E., AND TAN, L. Design, use and evaluation of P-FSEFI: A parallel soft error fault injection framework for emulating soft errors in parallel applications. In Proceedings of the 9th EAI International Conference on Simulation Tools and Techniques (10 2016).

[18] GUAN, Q., DEBARDELEBEN, N., BLANCHARD, S., AND FU, S. F-SEFI: A fine-grained soft error fault injection tool for profiling application vulnerability. In Parallel and Distributed Processing Symposium, 2014 IEEE 28th International (2014), IEEE.

[19] GUAN, Q., DEBARDELEBEN, N., BLANCHARD, S., AND FU, S. Addressing statistical significance of fault injection: Empirical studies of the soft error susceptibility. International Journal of High Performance Computing and Networking (4 2017).

[20] GUO, L., LI, D., LAGUNA, I., AND SCHULZ, M. FlipTracker: Understanding natural error resilience in HPC applications. In SC18: International Conference for High Performance Computing, Networking, Storage and Analysis (Nov 2018), pp. 94–107.

[21] HENDERSON, A., PRAKASH, A., YAN, L. K., HU, X., WANG, X., ZHOU, R., AND YIN, H. Make it work, make it right, make it fast: Building a platform-neutral whole-system dynamic binary analysis platform. In Proceedings of the 2014 International Symposium on Software Testing and Analysis (2014), ACM.

[22] HENDERSON, A., YAN, L., HU, X., PRAKASH, A., YIN, H., AND MCCAMANT, S. DECAF: A platform-neutral whole-system dynamic binary analysis platform. IEEE Transactions on Software Engineering.

[23] JAGANNATHAN, S., DIGGINS, Z., MAHATME, N., LOVELESS, T. D., BHUVA, B. L., WEN, S. J., WONG, R., AND MASSENGILL, L. W. Temperature dependence of soft error rate in flip-flop designs. In 2012 IEEE International Reliability Physics Symposium (IRPS) (April 2012), pp. SE.2.1–SE.2.6.

[24] KAHNG, A. B., NATH, S., AND ROSING, T. S. On potential design impacts of electromigration awareness. In 2013 18th Asia and South Pacific Design Automation Conference (ASP-DAC) (Jan 2013), pp. 527–532.

[25] LEVY, S., DOSANJH, M. G., BRIDGES, P. G., AND FERREIRA, K. B. Using unreliable virtual hardware to inject errors in extreme-scale systems. In Proceedings of the 3rd Workshop on Fault-tolerance for HPC at extreme scale (2013), ACM, pp. 21–26.

[26] LI, D., VETTER, J. S., AND YU, W. Classifying soft error vulnerabilities in extreme-scale scientific applications using a binary instrumentation tool. In Proceedings of the International Conference on High Performance Computing, Networking, Storage and Analysis (2012), IEEE Computer Society Press, p. 57.

[27] LI, G., PATTABIRAMAN, K., CHER, C., AND BOSE, P. Understanding error propagation in GPGPU applications. In SC '16: Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis (Nov 2016), pp. 240–251.

[28] MARTINO, C. D., KALBARCZYK, Z., IYER, R. K., BACCANICO, F., FULLOP, J., AND KRAMER, W. Lessons learned from the analysis of system failures at petascale: The case of Blue Waters. In 2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (June 2014), pp. 610–621.

[29] MAY, T. C., AND WOODS, M. H. Alpha-particle-induced soft errors in dynamic memories. IEEE Transactions on Electron Devices 26, 1 (Jan 1979), 2–9.

[30] NICOLAIDIS, M. Soft Errors in Modern Electronic Systems, 1st ed. Springer Publishing Company, Incorporated, 2010.

[31] PELLEGRINI, A., BERTACCO, V., AND AUSTIN, T. Fault-based attack of RSA authentication. In 2010 Design, Automation Test in Europe Conference Exhibition (DATE 2010) (March 2010), pp. 855–860.

[32] ROBERSON, M. W. Soft error rates in solder bumped packaging. In Proceedings. 4th International Symposium on Advanced Packaging Materials Processes, Properties and Interfaces (Cat. No.98EX153) (Mar 1998), pp. 111–116.

[33] ROSSI, D., OMAÑA, M., METRA, C., AND PACCAGNELLA, A. Impact of aging phenomena on soft error susceptibility. In 2011 IEEE International Symposium on Defect and Fault Tolerance in VLSI and Nanotechnology Systems (Oct 2011), pp. 18–24.

[34] SCHWARTZ, E. J., AVGERINOS, T., AND BRUMLEY, D. All you ever wanted to know about dynamic taint analysis and forward symbolic execution (but might have been afraid to ask). In 2010 IEEE Symposium on Security and Privacy (SP) (Los Alamitos, CA, USA, May 2010), IEEE Computer Society, pp. 317–331.

[35] SHARMA, V. C., HARAN, A., RAKAMARIĆ, Z., AND GOPALAKRISHNAN, G. Towards formal approaches to system resilience. In Proceedings of the 19th IEEE Pacific Rim International Symposium on Dependable Computing (PRDC) (2013).

[36] SNIR, M., WISNIEWSKI, R. W., ABRAHAM, J. A., ADVE, S. V., BAGCHI, S., BALAJI, P., BELAK, J., BOSE, P., CAPPELLO, F., CARLSON, B., ET AL. Addressing failures in exascale computing. International Journal of High Performance Computing Applications (2014), 1094342014522573.

[37] TAN, L., DEBARDELEBEN, N., GUAN, Q., BLANCHARD, S., AND LANG, M. Using virtualization to quantify power conservation via near-threshold voltage reduction for inherently resilient applications. Parallel Computing (2 2018).

[38] THOMAS, A., AND PATTABIRAMAN, K. Error detector placement for soft computation. In 2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN) (2013), IEEE, pp. 1–12.

[39] THOMAS, A., AND PATTABIRAMAN, K., Eds. LLFI: An Intermediate Code Level Fault Injector For Soft Computing Applications (2013), Workshop on Silicon Errors in Logic – System Effects (SELSE).

[40] WEI, J., THOMAS, A., LI, G., AND PATTABIRAMAN, K. Quantifying the accuracy of high-level fault injection techniques for hardware faults. In Dependable Systems and Networks (DSN), 2014 44th Annual IEEE/IFIP International Conference on (2014), IEEE, pp. 375–382.

[41] WILKINSON, J., AND HARELAND, S. A cautionary tale of soft errors induced by SRAM packaging materials. IEEE Transactions on Device and Materials Reliability 5, 3 (Sept 2005), 428–433.

[42] YIN, H., SONG, D., EGELE, M., KRUEGEL, C., AND KIRDA, E. Panorama: Capturing system-wide information flow for malware detection and analysis. In Proceedings of the 14th ACM conference on Computer and communications security (2007), ACM, pp. 116–127.