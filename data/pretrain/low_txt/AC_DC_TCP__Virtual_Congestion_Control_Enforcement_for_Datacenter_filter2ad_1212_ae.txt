### Virtualized Congestion Control Algorithm via vSwitch Modification

**Virtualized Congestion Control (vCC) [15]** is a concurrently designed system that shares the goals and some design details of AC/DC. The paper complements this work by addressing several items not covered here, such as a more detailed analysis of the ECN-coexistence problem, an exploration of the design space, and a theoretical proof of the correctness of virtualized congestion control. Our paper provides an in-depth design and thorough evaluation of a DCTCP-based virtualized congestion control algorithm on a 10 Gbps testbed.

### Evaluation Results
- **Flow Completion Time (FCT) Comparison:**
  - CUBIC
  - DCTCP
  - AC/DC

The following figure shows the Cumulative Distribution Function (CDF) of Flow Completion Time (FCT) in milliseconds for different congestion control algorithms:

![Flow Completion Time (milliseconds)](path_to_image)

### Conclusion

Modern datacenters host a variety of virtual machines (VMs) to support a diverse set of tenant services. Datacenter operators typically invest significant resources in optimizing their network fabric but cannot control one of the most critical components: TCP's congestion control algorithm within the VMs. In this paper, we present a technology that allows administrators to regain control over arbitrary tenant TCP stacks by enforcing congestion control in the vSwitch. Our scheme, called **AC/DC TCP**, requires no changes to VMs or network hardware. It is scalable, lightweight, flexible, and provides a policing mechanism to handle non-conforming flows. Our evaluation shows that the CPU overhead is less than one percentage point, and our scheme effectively enforces an administrator-defined congestion control algorithm over a variety of tenant TCP stacks.

### Acknowledgements

We would like to thank our shepherd Vishal Misra, Jeff Rasley, Brent Stephens, and the anonymous reviewers for their valuable feedback. This work is supported in part by the National Science Foundation (grants CNS-1302041, CNS-1330308, and CNS-1345249), IBM Corporation, and the Wisconsin Institute on Software-Defined Datacenters of Madison.

### References

[1] M. Al-Fares, S. Radhakrishnan, B. Raghavan, N. Huang, and A. Vahdat. Hedera: Dynamic Flow Scheduling for Data Center Networks. In NSDI, 2010.

[2] M. Alizadeh, T. Edsall, S. Dharmapurikar, R. Vaidyanathan, K. Chu, A. Fingerhut, F. Matus, R. Pan, N. Yadav, G. Varghese, et al. CONGA: Distributed Congestion-aware Load Balancing for Datacenters. In SIGCOMM, 2014.

[3] M. Alizadeh, A. Greenberg, D. A. Maltz, J. Padhye, P. Patel, B. Prabhakar, S. Sengupta, and M. Sridharan. Data Center TCP (DCTCP). In SIGCOMM, 2010.

[4] M. Alizadeh, A. Kabbani, T. Edsall, B. Prabhakar, A. Vahdat, and M. Yasuda. Less is More: Trading a Little Bandwidth for Ultra-low Latency in the Data Center. In NSDI, 2012.

[5] M. Alizadeh, S. Yang, M. Sharif, S. Katti, N. McKeown, B. Prabhakar, and S. Shenker. pFabric: Minimal Near-Optimal Datacenter Transport. 2013.

... (additional references follow in the same format)

This optimized version improves the clarity, coherence, and professionalism of the text, making it more suitable for academic and technical audiences.