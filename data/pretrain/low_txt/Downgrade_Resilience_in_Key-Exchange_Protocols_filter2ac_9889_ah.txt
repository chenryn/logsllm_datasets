### Downgrade Fix for TLS 1.3 and TLS 1.0–1.2

#### (a) Version Downgrade Fix for TLS 1.3
- **Parameters:**
  - \( R, v, a_R, G, \text{pk}_R, \text{sign}(\text{sk}_R, \text{hash1}(n_I \| n_R \| G \| g^y)) \)
  - \( R, v, \text{cfg}_I \)
- **Verification:**
  - Verify the version \( n \)
  - Set \( \text{uid} = (n_I, n_R) \)
  - Set \( \text{mode} = (v, a_R, \text{pk}_R, G, \text{hash1}) \)
  - Check \( \text{cfg}_I \) against \( \text{mode} \)
  - Compute \( \text{ms} = \text{kdf}(g^{xy}, n_I \| n_R) \)
  - Generate message \( m_3 = (g^x, \text{mac}(\text{ms}, H(m_1, m_2, g^x, -))) \)
  - Generate message \( m_4 = \text{mac}(\text{ms}, H(m_1, m_2, m_3, -)) \)
  - Set \( \text{complete} = \text{true} \)

#### (b) Version Downgrade Fix for TLS 1.0–1.2
- The fix is as effective as supporting only TLS 1.3. Version 1.3 must always be present to ensure that downgrades from 1.3 to lower versions are prevented.

### Corollary 1: Downgrade Security of TLS 1.0–1.3
- **Assumptions:**
  - \( DP \subseteq VDP \)
  - \( VDP(\text{cfg}, \cdot) \) implies \( \text{cfg.role} = I \)
  - All public keys in the range of \( \text{cfg.PKs}_R \) support at least TLS 1.3 and are honest
  - \( \text{cfg} \) and \( \text{cfg}' \) activate the countermeasure
- **Adversary Model:**
  - Given an adversary \( A \) against the downgrade security of our sub-protocol, we construct adversaries \( B \) and \( C \) running in about the same time as \( A \) such that:
    \[
    \text{Adv}_{\text{TLS1.0-1.3-sub, DP+VDP}}^{\text{downgrade}}(A) \leq \text{Adv}_{\text{TLS1.0-1.3-sub, VDP}}^{\text{version}}(B) + \text{Adv}_{\text{TLS1.3-sub, DP}}^{\text{downgrade}}(C)
    \]

### Related Work
- **Downgrade Attacks:**
  - Recognized as a significant attack vector in key exchange protocols [2, 10, 39, 43].
  - Moeller and Langley [38] propose using a Signaling Cipher Suite Value (SCSV) in TLS to prevent version downgrade attacks.
  - SSL 2.0 and 3.0 are deprecated partly to prevent version downgrades, as they do not support TLS extensions [6, 41] and SSL 2.0 lacks transcript authentication.
  - Ciphersuite hygiene is frequently discussed in standard documents [32, 34].

- **Countermeasures and Side-Channels:**
  - Retrofitting countermeasures can inadvertently introduce or amplify attack vectors.
  - For instance, in TLS-RSA, clients incorporate the newest protocol version in the PKCS#1-encrypted pre-master secret, but Klíma et al. [28] showed that many server implementations revealed whether the version in a decrypted secret matches the advertised version, creating a side-channel for decryption oracle attacks.

- **Multi-Ciphersuite Security of SSH:**
  - Bergsma et al. [9] analyzed SSH in a multi-ciphersuite setting, splitting the protocol into a negotiation phase (NP) and a key-exchange phase (SP).
  - They show that if each combination \( \text{NP} \times \text{SP} \) is ACCE secure, then \( \text{NP} \times \vec{\text{SP}} \) is multi-ciphersuite ACCE secure.
  - While they do not prove downgrade security per se, their result adapted to SSH corresponds to a proof of downgrade security for a \( DP \) predicate that guarantees all negotiable ciphersuites and versions provide ACCE security.
  - Sharing of public keys is admissible if each sub-protocol remains secure in the presence of an auxiliary oracle with long-term key functionality.

- **Previous Downgrade Security Theorems:**
  - Dowling and Stebila [21] modeled ciphersuite and version negotiation for TLS up to version 1.2.
  - Their result corresponds to a proof of downgrade security for a \( DP \) predicate that guarantees all negotiable ciphersuites and versions are strong enough to provide ACCE security, and all public keys are honest and used by at most one negotiable ciphersuite.
  - Their optimality function \( \omega \) is a more limited variant of our Nego function and does not include entity identifiers.
  - Their main theorem states that under such conditions, multi-mode authentication implies downgrade security, which is a weak form of downgrade security, as shown by Logjam.

### Conclusion and Future Work
- **Methodology:**
  - We present a methodology to analyze the downgrade security of real-world key exchange protocols.
  - Our approach breaks down the complexity by considering a core sub-protocol that abstracts away irrelevant details.
  - Proving simulatability for a sub-protocol ensures the soundness of our methodology, but it may not provide completeness.
  - Analyzing exemplary protocols shows that many designs fail to address downgrade security adequately.

- **Future Directions:**
  - Automated tools like ProVerif [17] and Tamarin [37] can detect attacks on sub-protocols, helping analysts find attacks against the full protocol or refine sub-protocols.
  - Computationally sound tools like CryptoVerif [16] can prove the downgrade security of sub-protocols, provided the sub-protocol is a sound abstraction of the full protocol.
  - Finding a simulator that witnesses the correctness of a sub-protocol may require ingenuity and interactive proofs, which can be machine-checked with tools like EasyCrypt [7].

### Acknowledgments
- We thank Cas Cremers, Travis Cross, and Antoine Delignat-Lavaud for useful discussions, and the anonymous reviewers for their valuable comments.
- The TLS 1.3 downgrade countermeasures were formulated in collaboration with Eric Rescorla, Martin Thomson, and the IETF TLS working group.
- Karthikeyan Bhargavan is funded by the ERC grants CRYSP and CIRCUS.
- Christina Brzuska is grateful to NXP for supporting her chair for IT Security Analysis.
- This material is based in part upon work supported by the U.S. National Science Foundation under award EFRI-1441209; The Mozilla Foundation; and the Office of Naval Research under contract N00014-11-1-0470.

### References
- [1] B. Aboba, L. Blunk, J. Vollbrecht, J. Carlson, and H. Levkowetz, “Extensible Authentication Protocol (EAP),” IETF RFC 3748, 2004.
- [2] D. Adrian, K. Bhargavan, Z. Durumeric, P. Gaudry, M. Green, J. A. Halderman, N. Heninger, D. Springall, E. Thomé, L. Valenta, B. VanderSloot, E. Wustrow, S. Zanella-Béguelin, and P. Zimmermann, “Imperfect forward secrecy: How Diffie-Hellman fails in practice,” in 22nd ACM Conference on Computer and Communications Security, 2015, pp. 5–17.
- [3] N. J. AlFardan and K. G. Paterson, “Lucky thirteen: Breaking the TLS and DTLS record protocols,” in 2013 IEEE Symposium on Security and Privacy, 2013, pp. 526–540.
- [4] N. J. AlFardan, D. J. Bernstein, K. G. Paterson, B. Poettering, and J. C. N. Schuldt, “On the security of RC4 in TLS,” in 22nd USENIX Security Symposium, 2013, pp. 305–320.
- [5] N. Aviram, S. Schinzel, J. Somorovsky, N. Heninger, M. Dankel, J. Steube, L. Valenta, D. Adrian, J. A. Halderman, V. Dukhovni, E. Kasper, S. Cohney, S. Engels, C. Paar, and Y. Shavitt, “DROWN: Breaking TLS with SSLv2,” https://drownattack.com/, Mar. 2016.
- [6] R. Barnes, M. Thomson, A. Pironti, and A. Langley, “Deprecating Secure Sockets Layer Version 3.0,” IETF RFC 7568, 2015.
- [7] G. Barthe, B. Grégoire, S. Heraud, and S. Zanella-Béguelin, “Computer-aided security proofs for the working cryptographer,” in Advances in Cryptology, CRYPTO 2011, 2011, pp. 71–90.
- [8] M. Bellare and P. Rogaway, “Entity authentication and key distribution,” in CRYPTO 1993, 1993, pp. 232–249.
- [9] F. Bergsma, B. Dowling, F. Kohlar, J. Schwenk, and D. Stebila, “Multi-ciphersuite security of the secure shell (SSH) protocol,” in 21st ACM Conference on Computer and Communications Security, 2014, pp. 369–381.
- [10] B. Beurdouche, K. Bhargavan, A. Delignat-Lavaud, C. Fournet, M. Kohlweiss, A. Pironti, P.-Y. Strub, and J. Zinzindohoue, “A Messy State of the Union: Taming the Composite State Machines of TLS,” in 2015 IEEE Symposium on Security and Privacy, 2015, pp. 535–552.
- [11] K. Bhargavan and G. Leurent, “Transcript collision attacks: Breaking authentication in TLS, IKE, and SSH,” in Network and Distributed System Security Symposium (NDSS’16), 2016.
- [12] K. Bhargavan, C. Fournet, M. Kohlweiss, A. Pironti, and P. Strub, “Implementing TLS with verified cryptographic security,” in 2013 IEEE Symposium on Security and Privacy, 2013, pp. 445–459.
- [13] K. Bhargavan, C. Fournet, M. Kohlweiss, A. Pironti, P. Strub, and S. Zanella-Béguelin, “Proving the TLS handshake secure (as it is),” in CRYPTO 2014, 2014, pp. 235–255.
- [14] K. Bhargavan, C. Brzuska, C. Fournet, M. Green, M. Kohlweiss, and S. Zanella-Béguelin, “Downgrade resilience in key-exchange protocols,” Cryptology ePrint Archive, Report 2016/072, 2016, http://eprint.iacr.org/.
- [15] S. Blake-Wilson, M. Nystrom, D. Hopwood, J. Mikkelsen, and T. Wright, “Transport Layer Security (TLS) Extensions,” IETF RFC 3546, 2003.
- [16] Blanchet, “A computationally sound mechanized prover for security protocols,” Dependable and Secure Computing, IEEE Transactions on, vol. 5, no. 4, pp. 193–207, 2008.
- [17] B. Blanchet, “An efficient cryptographic protocol verifier based on Prolog rules,” in 14th IEEE Computer Security Foundations Workshop, CSFW 2001, 2001, pp. 82–96.
- [18] R. Canetti and H. Krawczyk, “Security analysis of IKE’s signature-based key-exchange protocol,” in CRYPTO 2002, 2002, pp. 143–161.
- [19] C. J. F. Cremers, “Key exchange in IPsec revisited: Formal analysis of IKEv1 and IKEv2,” in 16th European Symposium on Research in Computer Security – ESORICS 2011, 2011, pp. 315–334.
- [20] A. Delignat-Lavaud and K. Bhargavan, “Network-based origin confusion attacks against HTTPS virtual hosting,” in 24th International Conference on World Wide Web, WWW 2015, 2015, pp. 227–237.
- [21] B. Dowling and D. Stebila, “Modelling ciphersuite and version negotiation in the TLS protocol,” in 20th Australasian Conference on Information Security and Privacy, ACISP 2015, 2015, pp. 270–288.
- [22] B. Dowling, M. Fischlin, F. Günther, and D. Stebila, “A cryptographic analysis of the TLS 1.3 handshake protocol candidates,” in 22nd ACM Conference on Computer and Communications Security, 2015, pp. 1197–1210.
- [23] C. Garman, K. G. Paterson, and T. V. der Merwe, “Attacks only get better: Password recovery attacks against RC4 in TLS,” in 24th USENIX Security Symposium, 2015, pp. 113–128.
- [24] D. Harkins and D. Carrel, “The internet key exchange (IKE),” IETF RFC 2409, 1998. [Online]. Available: http://www.ietf.org/rfc/rfc2409.txt
- [25] T. Jager, F. Kohlar, S. Schäge, and J. Schwenk, “On the security of TLS-DHE in the standard model,” in CRYPTO 2012, 2012, pp. 273–293.
- [26] M. Just and S. Vaudenay, “Authenticated multi-party key agreement,” in ASIACRYPT 1996, 1996, pp. 36–49.
- [27] C. Kaufman, P. Hoffman, Y. Nir, and P. Eronen, “Internet Key Exchange Protocol Version 2 (IKEv2),” IETF RFC 5996, 2010.
- [28] V. Klíma, O. Pokorný, and T. Rosa, “Attacking RSA-based sessions in SSL/TLS,” in 5th International Workshop on Cryptographic Hardware and Embedded Systems – CHES 2003. Springer, 2003, pp. 426–440.
- [29] K. Kobara, S. Shin, and M. Strefler, “Partnership in key exchange protocols,” in 2009 ACM Symposium on Information, Computer and Communications Security, ASIACCS 2009, 2009, pp. 161–170.
- [30] H. Krawczyk, “SIGMA: the ‘SIGn-and-MAc’ approach to authenticated Diffie-Hellman and its use in the IKE protocols,” in CRYPTO 2003, 2003, pp. 400–425.
- [31] H. Krawczyk, K. G. Paterson, and H. Wee, “On the security of the TLS protocol: A systematic analysis,” in CRYPTO 2013, 2013, pp. 429–448.
- [32] A. Langley, N. Modadugu, and B. Möller, “Transport Layer Security (TLS) False Start,” Internet Draft, 2010.
- [33] G. Lowe, “A hierarchy of authentication specification,” in 10th Computer Security Foundations Workshop (CSFW ’97). IEEE Computer Society, 1997, pp. 31–44.
- [34] R. H. M. Salter, E. Rescorla, “Suite B Profile for Transport Layer Security (TLS),” IETF RFC 5430, 2009.
- [35] N. Mavrogiannopoulos, F. Vercauteren, V. Velichkov, and B. Preneel, “A cross-protocol attack on the TLS protocol,” in 19th ACM Conference on Computer and Communications Security, 2012, pp. 62–72.
- [36] C. Meadows, “Analysis of the internet key exchange protocol using the NRL protocol analyzer,” in 1999 IEEE Symposium on Security and Privacy, 1999, pp. 216–231.
- [37] S. Meier, B. Schmidt, C. Cremers, and D. Basin, “The Tamarin prover for the symbolic analysis of security protocols,” in 25th International Conference on Computer Aided Verification, CAV 2013, 2013, pp. 696–701.
- [38] B. Möller and A. Langley, “TLS Fallback Signaling Cipher Suite Value (SCSV) for Preventing Protocol Downgrade Attacks,” IETF RFC 7507, 2015.
- [39] B. Möller, T. Duong, and K. Kotowicz, “This POODLE Bites: Exploiting The SSL 3.0 Fallback,” Available at https://www.openssl.org/~bodo/ssl-poodle.pdf, 2014.
- [40] E. Rescorla, “The Transport Layer Security (TLS) Protocol Version 1.3, Draft 10,” Internet Draft, 2015.
- [41] S. Turner and T. Polk, “Prohibiting Secure Sockets Layer (SSL) Version 2.0,” IETF RFC 6176, 2011.
- [42] University of Michigan, “Tracking the FREAK Attack,” Available at https://freakattack.com/, November 2015.
- [43] D. Wagner and B. Schneier, “Analysis of the SSL 3.0 protocol,” in 2nd USENIX Workshop on Electronic Commerce, WOEC 1996, 1996, pp. 29–40.
- [44] T. Ylonen and C. Lonvick, “The secure shell (SSH) authentication protocol,” IETF RFC 4252, 2006.
- [45] ——, “The secure shell (SSH) transport layer protocol,” IETF RFC 4253, 2006.
- [46] P. Zimmermann, “RFC 6189bis: ZRTP: Media Path Key Agreement for Unicast Secure RTP,” 2012.