### 80th Percentile of Object Transfer Times in RTTs per Network Prefix

**Figure 18: The 80th percentile of object transfer times in RTTs per network prefix for the top 100 prefixes, for different ICW sizes.**

- **HTTP First Object Transfer Time in RTTs from CDN-Singapore**
  - **Y-Axis:** HTTP Object Transfer Time in RTTs
  - **X-Axis:** initcwnd values (1, 3, 5, 7, 10, 16, 32)
  - **Data Points:**
    - 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1
  - **Legend:**
    - initcwnd 1
    - initcwnd 3
    - initcwnd 5
    - initcwnd 7
    - initcwnd 10
    - initcwnd 16
    - initcwnd 32

- **Overall Object Transfer Time in RTTs**
  - **Y-Axis:** HTTP Object Transfer Time in RTTs
  - **X-Axis:** RTTs (0, 2, 4, 6, 8, 10)
  - **Data Points:**
    - 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1
  - **Legend:**
    - initcwnd 1
    - initcwnd 3
    - initcwnd 5
    - initcwnd 7
    - initcwnd 10
    - initcwnd 16
    - initcwnd 32

### Experimental Setup

To study the overall page load time in a controlled environment, we captured a snapshot of the Yahoo! front page, which is representative of the measured traffic workload. This page and its resources were hosted locally to ensure all object requests were directed to a local server.

- **Client Browser:**
  - Firefox 3.6.9 on Mac OS X 10.5.8
  - Caching disabled; other settings at default
  - Six maximum simultaneous connections per domain

- **Server:**
  - Guest VM on the same machine running CentOS 4.8 with an updated 2.6.29.5 Linux kernel
  - Apache 2.0.52 web server
  - ipfw command used to set up dummynet pipes to control RTT and packet loss rates

- **Web Page:**
  - 30 objects distributed across two domains
  - Two IP aliases created at the server to represent the two domains

- **Experiment:**
  - Client repeatedly requested the front page
  - Embedded links replaced to point to IP aliases on the local server
  - Average of 2.5 objects per connection, similar to live traces
  - Total page load time defined as the time difference between the first packet of the first HTTP request and the final ACK of the last object fetched
  - tcpdump trace captured at the client to report page load time
  - Geometric mean of five requests reported for each parameter combination

### Results

**Figure 19: Page Load Time for Different ICWs with No Loss**

- **Y-Axis:** Page Load Time (s)
- **X-Axis:** RTT (ms) (50, 100, 200, 800, 1500)
- **Data Points:**
  - 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0
- **Legend:**
  - initcwnd 1
  - initcwnd 3
  - initcwnd 8
  - initcwnd 16

**Figure 20: Page Load Time for Different ICWs, Packet Loss Rates, and an RTT of 100ms (Median for Singapore)**

- **Y-Axis:** Page Load Time (s)
- **X-Axis:** Loss Rate (%)
- **Data Points:**
  - 18, 16, 14, 12, 10, 8, 6, 4, 2, 0
- **Legend:**
  - initcwnd 1
  - initcwnd 3
  - initcwnd 8
  - initcwnd 16

### Impact on TCP Fairness

Increasing the TCP initial congestion window (ICW) size can be unfair to longer flows sharing the same bottleneck with short flows. In a congested network, increasing the ICW can lead to increased packet loss, causing the congestion window to shrink and potentially leading to timeouts. This can result in long-lived flows sending at a rate lower than one packet per round trip, while short flows may experience only minor delays.

- **Experiment:**
  - Connection profile: 100ms RTT, 25% packet loss rate
  - ICW: 32
  - Long flow (iperf for 5 minutes): Bandwidth of 12.6KB/s
  - Short flow (48KB file download): Bandwidth of 59.1KB/s

Given that 52% of internet traffic is web traffic, increasing the ICW can increase packet loss and congestion for users with poor connections, making it more unfair for longer flows and other short flows using small ICW.