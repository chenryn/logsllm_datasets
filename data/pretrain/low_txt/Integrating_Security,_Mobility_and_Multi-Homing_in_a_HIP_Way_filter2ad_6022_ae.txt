### Optimized Text

#### Introduction to the Protocol Mechanism
To ensure that the responder is ready to accept a connection, the initiator must perform additional work. This approach allows the responder to easily verify that the initiator has completed the required tasks before engaging in computationally expensive public key operations. In the event of a resource-exhausting Denial of Service (DoS) attack, this mechanism can help mitigate the impact by requiring legitimate initiators to perform some work, thereby allowing the responder to distinguish between legitimate traffic and DoS packets. If an attacker attempts to pass the puzzle test, it would significantly slow down the attack due to the high CPU cycles required.

#### Protocol Run and Timing
Figure 15 illustrates the protocol run and the measured times, as detailed in Table 1. In the current implementation, the responder always generates R1 in response to a received I1. It is possible to move the generation of R1 into a precomputation step, which would reduce dT3 by a significant factor.

**Table 1: Explanations for Figure 15**
- **Initiator generates I1**
- **Packet transit delay**
- **Responder generates R2t**
- **Packet transit delay**
- **Initiator processes R1, solves the puzzle, and generates I2**
- **Packet transit delay**
- **Responder processes I2 and generates R2**
- **Packet transit delay**
- **Initiator processes R2**

**Figure 15: The times measured**
- **Initiator**
  - dT1
- **Responder**
  - I1
  - R1
  - I2
  - R2
- **Times**
  - dT1, dT2, dT3, dT4, dT5, dT6, dT7, dT8, dT9

#### Experimental Setup and Results
The measurements were conducted between two 800 MHz Pentium III PCs over a lightly loaded 100 Mbps switched Ethernet. The results are presented in Tables 2 and 3, with each figure representing the average of five test runs ± one standard deviation.

**Table 2: Average message processing time in milliseconds (ms)**
- **K**
  - 0
  - 7
  - 8
  - 9
  - 10
- **dT1**
  - 1.4±0.3
  - 1.4±0.3
  - 1.1±0.0
  - 1.4±0.3
  - 1.2±0.0
- **dT3**
  - 115±9
  - 300±12
  - 121±12
  - 503±99
  - 573±250
  - 117±8
  - 2300±1370
  - 134±6
  - 129±5
  - 1810±470
- **dT7**
  - 176±10
  - 177±10
  - 185±16
  - 158±3
  - 178±14
- **dT9**
  - 26±3
  - 34±6
  - 35±5
  - 30±7
  - 45±5

While these estimates provide good approximations for most time periods, the numbers for dT5 are somewhat misleading. Solving the puzzle is an indeterministic operation, requiring a random number of trials. Accurate measurements for dT5 would require a large number of trials, on the order of thousands of runs.

From the results, the total protocol run takes about 600 ms, with approximately 500 ms spent on cryptographic operations. Introducing a low puzzle factor K increases the average time by 200-300 ms; with K=10, the average protocol run takes less than 3 seconds while requiring almost always over 1 second of CPU time for solving the puzzle. Earlier tests indicate that when K > 10, the required time grows rapidly, reaching 100 seconds with K = 15.

**Table 3: Average packet delay in milliseconds (ms)**
- **dT2**: 0.12
- **dT4**: 0.32
- **dT6**: 0.34
- **dT8**: 0.13

#### Implementation and Performance
While the base HIP/HLP implementation seems straightforward, optimizing performance on the TCP side requires extensive kernel modifications. Many TCP algorithms need to be adapted to handle data that may take different paths through the network, complicating statistics gathering and prediction. However, we expect that SCTP implementors have already addressed these issues, and we plan to analyze the recently released kernel-based SCTP implementation to see how these problems are managed.

#### Conclusions
This paper focuses on modifying the TCP/IP architecture to include a new cryptographic name space and a new protocol layer. We have provided a design based on the HLP/HIP approach, showing how it can handle end-host multi-homing and mobility, and solve security problems without additional infrastructure. We also briefly touched on backward compatibility and API issues.

In summary, the HLP/HIP approach provides new endpoint names that are public keys, usually represented by tags derived from a cryptographic hash function. These tags replace IP addresses in applications. A new layer is established between the network and transport layers to manage secure connections, translate endpoint names to IP addresses, and securely modify the translation state to reflect multi-homing and mobility. Additionally, the architecture simplifies support for multiple routing realms and state establishment with any node in the network. However, the security context is not suitable as a generic application-level end-to-end security solution, requiring additional assurances for application-level semantics.

From an architectural perspective, our design uses a single mechanism to address reachability, double-jump, and local signaling optimization problems. From a security perspective, no separate mechanism is needed to secure mobility-related signaling, as the inherent security of the architecture suffices. In a companion paper [6], we show how the architecture can be extended to address network mobility.

#### Acknowledgements
We are grateful to the pioneering work of senior researchers and engineers at the IETF, IRTF, and elsewhere, especially J. Noel Chiappa and Robert Moskowitz. We thank our colleagues for their constructive comments and contributions to the text.

#### References
[1] R. Moskowitz, Host Identity Payload Architecture, work in progress, Internet Draft (expired), February 2001, <http://homebase.htt-consult.com/draft-moskowitz-hip-arch-02.txt>
[2] J. N. Chiappa, Endpoints and Endpoint Names: A Proposed Enhancement to the Internet Architecture, unpublished note available at <http://users.exis.net/~jnc/tech/endpoints.txt>
[3] S. Bellovin, EIDs, IPsec and HostNAT, a presentation given at 41st IETF in Los Angeles, California. Steven Bellovin, March 1998, <http://www.research.att.com/~smb/talks/hostnat.pdf>
[4] E. Lear, What's In A Name: Report from the Name Space Research Group, work in progress, Internet Draft draft-irtf-nsrg-report-02.txt, Internet Research Task Force, February 2002.
[5] E. Nordmark, MIPv6: from hindsight to foresight?, work in progress, Internet Draft draft-nordmark-mobileip-mipv6-hindsight-00.txt, IETF November 14, 2001.
[6] P. Nikander and J. Arkko, “Delegation of Signalling Rights,” a position paper presented at the 10th Annual Workshop on Security Protocols, Cambridge, April 17–19, 2002.
[7] R. Moskowitz, Host Identity Payload and Protocol, work in progress, Internet Draft draft-moskowitz-hip-05.txt, November 2001, <http://homebase.htt-consult.com/draft-moskowitz-hip-05.txt>
[8] Robert Moskowitz, Host Identity Protocol Implementation, work in progress, Internet Draft (expired) draft-moskowitz-hip-impl-01.txt, Feb 2001, <http://homebase.htt-consult.com/draft-moskowitz-hip-impl-01.txt>
[9] G. Montenegro and C. Castelluccia, SUVC Identifiers and Addresses, work in progress, Internet Draft draft-montenegro-sucv-02.txt, November 2001.
[10] P. Bhagwat, C. Perkins and S. Tripathi, “Network Layer Mobility: an Architecture and Survey”, IEEE Personal Communications Magazine, June 1996.
[11] A. Mankin et. al., Threat Models introduced by Mobile IPv6 and Requirements for Security in Mobile IPv6, work in progress, Internet Draft draft-ietf-mobileip-mipv6-scrty-reqts-02.txt, November 2001.
[12] P. Nikander, Denial-of-Service, Address Ownership, and Early Authentication in the IPv6 World, presented at Cambridge Security Protocols Workshop 2001, April 25-27, 2001, Cambridge University. To be published in the workshop proceedings at the LNCS series.
[13] G. O’Shea and M. Roe, Child-proof Authentication for MIPv6 (CAM), ACM Computer Communications Review, Volume 31, Number 2, ISSN # 0146-4833, ACM April 2001.
[14] J. H. Saltzer, “On The Naming and Binding of Network Destinations,” in Local Computer Networks, edited by P. Ravasio et al., North Holland, Amsterdam, 1982, pp. 311-317. Also available as RFC 1498, University of Southern California, Information Sciences Institute, Marina Del Rey, Calif., August 1993.
[15] J. H. Saltzer, David Reed and David Clark, “End-To-End Arguments in System Design”, ACM Transactions on Computer Systems, Vol. 2, No. 4, November 1984.
[16] R. Stewart et al., “Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration”, Internet Draft draft-ietf-tsvwg-addip-sctp-06.txt, work in progress, IETF, September 2002.
[17] N. Montavont, T. Noel, and M. Kassi-Lahlou, “MIPv6 for Multiple Interfaces”, work in progress, Internet Draft draft-montavont-mobileip-mmi-00.txt, July 2002.
[18] C. Huitema, Multi-homed TCP, work in progress, Internet Draft (expired), May, 1995, <http://www.chem.ucla.edu/~beichuan/etcp/huitema-TCP.txt>
[19] F. Teraoka et. al., LIN6: A Solution to Mobility and Multi-Homing in IPv6, work in progress, Internet Draft draft-teraoka-ipng-lin6-01.txt, 16 August 2001.
[20] M. Crawford et. al., Separating Identifiers and Locators in Addresses: An Analysis of the GSE Proposal for IPv6, work in progress, Internet Draft (expired), draft-ietf-ipngwg-esd-analysis-05.txt, October 1999, <http://www.ietf.org/proceedings/99nov/I-D/draft-ietf-ipngwg-esd-analysis-05.txt>
[21] P. Nikander, C. Candolin, and J. Lundberg, “From address orientation to host orientation,” in Réseaux et systèmes répartis, calculateurs parallèles, ISSN 1260-3198, Special Issue on Mobility and Internet, Volume 13, Nr:o 2, Hermes Science Publications, Paris, France, December 2001.
[22] P. Nikander, “An Address Ownership Problem in IPv6,” work in progress, Internet-Draft (expired), February 2001, <http://www.tml.hut.fi/~pnr/publications/draft-nikander-ipng-address-ownership-00.txt>
[23] A. C. Snoeren and H. Balakrishnan, “An End-to-End Approach to Host Mobility”, Proc. of the Sixth Annual ACM/IEEE International Conference on Mobile Computing and Networking, August 2000.
[24] C. Candolin and P. Nikander, “IPv6 Source Addresses Considered Harmful,” in Hanne Riis Nielson (ed.), Proceedings of NordSec 2001, Sixth Nordic Workshop on Secure IT Systems, November 1-2, Lyngby, Denmark, Technical Report IMM-TR-2001-14, pp. 54-68, Technical University of Denmark, November 2001.
[25] B. Carpenter, “Architectural Principles of the Internet”, RFC 1958, IETF June 1996.
[26] R. Moskowitz, The Need for a new Internet Namespace, informal note in circulation, Robert Moskowitz, November 1999.
[27] T. Aura and J. Arkko, “MIPv6 BU Attacks and Defences”, work in progress, Internet Draft draft-aura-mipv6-bu-attacks-00.txt, November 2001.