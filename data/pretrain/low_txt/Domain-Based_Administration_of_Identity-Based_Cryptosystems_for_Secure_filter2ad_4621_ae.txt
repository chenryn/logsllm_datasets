### An Important Feature of DNSIBC: Domain-Based Trust

A key feature of DNSIBC is the concept of domain-based trust, which contrasts with standard IBC approaches that require a global trust system [2, 1]. Establishing a global trust system presents significant management challenges, such as determining who will manage the system, even if it is distributed, and how they will authenticate requests for private keys. This can lead to issues like global key escrow and key compromise.

### Hierarchical Distribution of Trust

Our approach is based on a hierarchical distribution of trust, similar to traditional PKIs and hierarchical IBC schemes [14, 17]. Unlike traditional PKIs, which are organized according to internal organizational structures, our approach aligns the hierarchical organization directly with the DNS. This domain-based approach, whether for IBC or traditional PKI, has the advantage of authenticating email senders and network hosts, whose identities are derived directly from domains as structured in the DNS. This simplifies the task for someone outside a given domain who wishes to communicate securely with someone inside that domain. It makes it easy to determine if a cryptographic trust system (e.g., IBC or PKI) is in place within the domain and to locate the necessary credentials.

### Simplifying System Setup and Autoconfiguration

A domain-based approach also eases autoconfiguration and system setup for both system administrators and end users. If basic credentials for securing email and network traffic are organized according to the domain, a simple default implementation can be provided along with other domain management tools, much like DNSSEC tools are now included with name servers like BIND. Domains with more sophisticated security needs and resources can replace these simple implementations with more complex ones, but the basic implementation may suffice for many domains that currently find setting up and managing a PKI from scratch challenging. A domain-based system that uses DNSSEC to root its trust removes another barrier to deployment. As DNSSEC is gradually being rolled out, trust infrastructures that inherit from DNSSEC (e.g., by using a domain's DNSSEC keys to sign and authenticate domain IBC parameters) can leverage this momentum, making them easier to deploy in practice than setting up a new trust hierarchy.

### Use of Identity-Based Cryptography

We have argued strongly for the practical advantages of domain-based, standardized trust systems. But why should we implement such a system with IBC rather than having each domain directly certify the keys [9] or digital certificates [10] of end-entities with DNSSEC and distribute them through the DNS? Or perhaps use an LDAP server to maintain a list of certificates? To understand the advantages of IBC, it is helpful to focus on the clients, where IBC offers the most significant benefits.

#### Versus Storing Certificates in DNS

Why use IBC instead of distributing keys or certificates via the DNS? Distributing a domain root certificate via the DNS would provide a domain trust model similar to DNSIBC, making it easy for clients from different domains to find the trust root for their communication partners. We could even automate a domain’s certification authority so that clients (email users and network hosts) could automatically request certificates when needed. Such a system is already implemented in Microsoft Windows 2000TM Active Directory-based domains running a Microsoft Certification Authority [7].

However, there are several reasons why IBC might be a better approach:
1. **Minimized Interactions**: IBC minimizes the number of interacting parties, particularly those that need to update DNS zone information. Only domain parameters need to be made available by the DNS, not per-client information.
2. **Reduced Bandwidth**: IBC significantly reduces the bandwidth required to access peers' credential information. To communicate with any number of peers in a given domain, one only needs to obtain the domain’s parameters once per revocation interval.
3. **Security and Privacy**: Using IBC, one can communicate securely with any host or email user whose address is known, without exposing additional user identities or host distributions.
4. **User Experience**: IBC preserves an appealing use model. Users can receive encrypted emails before obtaining the necessary private keys or software, motivating them to set up the system and seamlessly participate.

#### Versus Dynamic Certificate Generation

Lastly, we might consider a system with dynamic or "lazy" certificate generation. An LDAP certificate server could generate a key pair and make the certificate available if a user or host does not already have one.

Our IBE-based approach has several advantages over such a system:
1. **Decoupled Key Generation**: In IBE, the process of generating a user’s private key is decoupled from the generation of their public key, allowing for an "air gap" between the private key generator and the outside world.
2. **Enhanced Security**: The hypothetical LDAP certificate server must either validate requests or generate key pairs for every request, making it vulnerable to denial-of-service attacks. In contrast, IBE-based systems are not susceptible to such attacks.
3. **Caching and Redundancy**: Integrating identity-based encryption parameters into the DNS leverages the propagation and redundancy provided by DNS caching. In our scheme, the identity-based encryption parameters for a domain propagate through the DNS and can be cached locally.

### Conclusions

We have presented an approach to protecting email and network traffic using identity-based cryptography and domain-based trust. This system provides a simple and easy way to establish widespread support for secure communication through its comprehensive support for autoconfiguration and identity-based cryptography’s novel solution to the key distribution problem. We have built an initial implementation of this system in Linux as a proof of concept of its effectiveness and usability.

### Acknowledgments

The authors would like to thank the referees for their many helpful comments.

### References

[1] G. Appenzeller and B. Lynn. Minimal overhead IP security using identity-based encryption. Submitted for publication, http://rooster.stanford.edu/~ben/pubs/ipibe.pdf.
[2] D. Boneh and M. Franklin. Identity-based encryption from the Weil pairing. In Proc. CRYPTO 01, pages 213–229. Springer-Verlag, 2001. LNCS 2139.
[3] J. Cha and J. Cheon. An identity-based signature from gap Diffie-Hellman groups. http://eprint.iacr.org/2002/018.
[4] L. Chen, K. Harrison, N. P. Smart, and D. Soldera. Applications of multiple trust authorities in pairing-based cryptosystems. In Proceedings of Infrastructure Security: InfraSec 2002, pages 260–275. Springer-Verlag, 2002. LNCS 2437.
[5] L. Chen and C. Kudla. Identity-based authenticated key agreement from pairings. http://eprint.iacr.org/2002/184.
[6] C. Cocks. An identity-based encryption scheme based on quadratic residues. In Cryptography and Coding, pages 360–363. Springer-Verlag, 2001. LNCS 2260.
[7] J. de Clercq. PKI comes of age. Windows & .NET Magazine, pages 47–53, May 2002.
[8] S. Dusse, P. Hoffman, B. Ramsdell, L. Lundblade, and L. Repka. S/MIME Version 2 Message Specification. IETF - Network Working Group, The Internet Society, March 1998. RFC 2311.
[9] D. Eastlake. Domain Name System Security Extensions. IETF - Network Working Group, The Internet Society, March 1999. RFC 2535.
[10] D. Eastlake and O. Gudmundsson. Storing Certificates in the Domain Name System (DNS). IETF - Network Working Group, The Internet Society, March 1999. RFC 2538.
[11] U. Feige, A. Fiat, and A. Shamir. Zero knowledge proofs of identity. Journal of Cryptology, 1(2):77–94, 1988.
[12] A. Fiat and A. Shamir. How to prove yourself: practical solutions to identification and signature problems. In A. M. Odlyzko, editor, Proc. CRYPTO 86, pages 186–194. Springer, 1987. Lecture Notes in Computer Science No. 263.
[13] Free S/WAN Project. Free S/WAN. http://www.freeswan.org.
[14] C. Gentry and A. Silverberg. Hierarchical ID-based cryptography. In Advances in Cryptology - Asiacrypt 2002. Springer-Verlag, 2002.
[15] D. Harkins and D. Carrel. The Internet Key Exchange (IKE). IETF - Network Working Group, The Internet Society, November 1998. RFC 2409.
[16] F. Hess. Exponent group signature schemes and efficient identity-based signature schemes based on pairings. http://eprint.iacr.org/2002/012.
[17] J. Horwitz and B. Lynn. Toward hierarchical identity-based encryption. In Proc. EUROCRYPT 02, pages 466–481. Springer-Verlag, 2002. LNCS 2332.
[18] S. Kent and R. Atkinson. Security Architecture for the Internet Protocol. IETF - Network Working Group, The Internet Society, November 1998. RFC 2401.
[19] D. Massey and S. Rose. Limiting the Scope of the KEY Resource Record. IETF - Network Working Group, The Internet Society, December 2002. RFC 3445.
[20] D. Maughan, M. Schertler, M. Schneider, and J. Turner. Internet Security Association and Key Management Protocol (ISAKMP). IETF - Network Working Group, The Internet Society, November 1998. RFC 2408.
[21] P. Mockapetris. Domain Names – Concepts and Facilities. IETF - Network Working Group, The Internet Society, November 1987. RFC 1034.
[22] P. Mockapetris. Domain Names – Implementation and Specification. IETF - Network Working Group, The Internet Society, November 1987. RFC 1035.
[23] K. Paterson. ID-based signatures from pairings on elliptic curves. http://eprint.iacr.org/2002/004.
[24] D. Piper. The Internet IP Security Domain of Interpretation for ISAKMP. IETF - Network Working Group, The Internet Society, November 1998. RFC 2407.
[25] R. Sakai, K. Ohgishi, and M. Kasahara. Cryptosystems based on pairing. In Proceedings of the Symposium on Cryptography and Information Security (SCIS 2000), Okinawa, Japan, January 2000.
[26] A. Shamir. Identity-based cryptosystems and signature schemes. In G. R. Blakley and D. C. Chaum, editors, Proc. CRYPTO 84, pages 47–53. Springer, 1985. Lecture Notes in Computer Science No. 196.
[27] N. Smart. An identity-based authenticated key agreement protocol based on the Weil pairing. Electronics Letters, 38:630–632, 2002.
[28] Stanford Applied Cryptography Group. IBE secure e-mail. http://crypto.stanford.edu/ibe.
[29] B. Wellington. dnsjava: An implementation of DNS in Java. http://www.xbill.org/dnsjava/.

This revised text aims to enhance clarity, coherence, and professionalism, making it easier to understand the technical and practical aspects of DNSIBC and its advantages.