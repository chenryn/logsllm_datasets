### Gravity-SPHINCS and SPHINCS+ Comparison

Gravity-SPHINCS employs plain hashing for node computations, while SPHINCS+ requires more computationally expensive calls to tweakable hashes.

### Comparison with Picnic

Finally, we compare SPHINCS+ to the only other symmetric-crypto-based NIST round-2 candidate, Picnic [17, 18]. Picnic has three variants: two based on the Fiat-Shamir transform [24] with a non-tight security reduction in the Random Oracle Model (ROM), and one based on the Unruh transform [43â€“45] with a non-tight reduction in the Quantum Random Oracle Model (QROM). Signatures generated by Picnic using the Unruh transform are approximately four times larger than those from the SPHINCS+ framework for comparable security levels. Additionally, "Picnic1" Fiat-Shamir signatures are more than twice as large as the speed-optimized instantiations of SPHINCS+ proposed to NIST. The only Picnic variant that offers signature sizes comparable to SPHINCS+ is the "Picnic2" instantiation.

In Table 3, we compare the NIST level-5 parameter set of Picnic2 with SPHINCS+ using parameters \( n = 256 \), \( h = 63 \), \( d = 9 \), \( b = 12 \), \( k = 29 \), and \( w = 16 \) with simple tweakable hash functions based on SHA-256. SPHINCS+ signatures with these parameters are 28% smaller than the average Picnic2 signatures and 39% smaller than the worst-case Picnic2 signatures. SPHINCS+ signing is more than 70% faster, key generation is significantly slower, but verification is almost 50 times faster than for Picnic2. This performance of SPHINCS+ is achieved with an instance that has a tight QROM proof and a conservative choice of underlying symmetric primitive (SHA-256). In contrast, Picnic2's performance heavily relies on version 3 of the aggressively optimized symmetric encryption scheme LowMC, which, to our knowledge, has not been extensively studied; earlier versions were shown to lack the claimed security [20, 21, 41].

### Acknowledgments

The authors would like to thank Jean-Philippe Aumasson, Christoph Dobraunig, Maria Eichlseder, Scott Fluhrer, Stefan-Lukas Gazdag, Panos Kampanakis, Tanja Lange, Martin M. Lauridsen, Florian Mendel, and Christian Rechberger for their support and comments, and the anonymous reviewers of CCS for identifying a mistake in an earlier version of this work. This research was supported by the European Research Council through Starting Grant No. 805031 (EPOQUE), Cisco under the University Research Program, the U.S. National Science Foundation under grant 1913167, and the German Research Foundation under Cluster of Excellence 2092 "CASA: Cyber Security in the Age of Large-Scale Adversaries."

### References

[References listed here, formatted consistently with the original text.]

### Security Models and Definitions

In this section, we discuss post-quantum security and the quantum-accessible random oracle model (QROM). We then recall the definitions of post-quantum existential unforgeability under adaptive chosen-message attacks (pq-eu-cma) and post-quantum-secure pseudorandom functions (pq-prf).

#### Post-Quantum Security and the QROM

In this work, we focus on the post-quantum security of the cryptographic schemes presented. We assume that all honest parties use conventional (classical) hardware, while malicious parties (adversaries) have access to a large-scale quantum computer. Consequently, oracles modeling honest users and taking inputs unknown to the adversary are restricted to classical queries. The only exception in a post-quantum setting is oracles representing idealized, unkeyed primitives like random oracles (ROs) that do not take any input unknown to the adversary. These oracles model functions that could be implemented locally on the adversary's quantum computer.