# XAWI-Susceptible Mobile Applications

## Table 1: XAWI-Susceptible Apps
(✓ indicates the feature is supported)

| Application Package Name                | JS | HTML5 | Custom Scheme | Background |
|-----------------------------------------|----|-------|---------------|------------|
| net.daum.android.map                    | ✓  | ✓     | ✓             | ✓          |
| net.daum.android.daum                   | ✓  | ✓     | ✓             | ✓          |
| jp.united.app.cocoppa                   | ✓  | ✓     | ✓             | ✓          |
| jp.co.mcdonalds.android                 | ✓  | ✓     | ✓             | ✓          |
| de.hafas.android.db                     | ✓  | ✓     | ✓             | ✓          |
| com.zynga.wwf2.free                     | ✓  | ✓     | ✓             | ✓          |
| com.xinmei365.font                      | ✓  | ✓     | ✓             | ✓          |
| com.tokopedia.tkpd                      | ✓  | ✓     | ✓             | ✓          |
| com.toi.reader.activities               | ✓  | ✓     | ✓             | ✓          |
| com.skimble.workouts                    | ✓  | ✓     | ✓             | ✓          |
| com.ScanLife                            | ✓  | ✓     | ✓             | ✓          |
| com.rhmsoft.fm.hd                       | ✓  | ✓     | ✓             | ✓          |
| com.quoord.tapatalkpro.activity         | ✓  | ✓     | ✓             | ✓          |
| com.prestigio.ereader                   | ✓  | ✓     | ✓             | ✓          |
| com.nytimes.android                     | ✓  | ✓     | ✓             | ✓          |
| com.naver.linewebtoon                   | ✓  | ✓     | ✓             | ✓          |
| com.mt.mtxx.mtxx                        | ✓  | ✓     | ✓             | ✓          |
| com.makemytrip                          | ✓  | ✓     | ✓             | ✓          |
| com.mobilesrepublic.appy                | ✓  | ✓     | ✓             | ✓          |
| com.lbe.parallel.intl                   | ✓  | ✓     | ✓             | ✓          |

## Installation Range
- 1,000,000,000 ∼ 5,000,000,000: ✓
- 100,000,000 ∼ 500,000,000: ✓
- 50,000,000 ∼ 100,000,000: ✓
- 10,000,000 ∼ 50,000,000: ✓

## References
1. **Supplement materials**. [https://sites.google.com/site/xawisite/](https://sites.google.com/site/xawisite/) (May 2017).
2. **Aafer, Y., Zhang, N., Zhang, Z., Zhang, X., Chen, K., Wang, X., Zhou, X., Du, W., & Grace, M.** (2015). Hare hunting in the wild android: A study on the threat of hanging attribute references. In *Proceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications Security*. ACM, 1248–1259.
3. **Arzt, S., Rasthofer, S., Fritz, C., Bodden, E., Bartel, A., Klein, J., Le Traon, Y., Octeau, D., & McDaniel, P.** (2014). Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps. *ACM Sigplan Notices* 49, 6 (2014), 259–269.
4. **Bianchi, A., Corbetta, J., Invernizzi, L., Fratantonio, Y., Kruegel, C., & Vigna, G.** (2015). What the app is that? deception and countermeasures in the android user interface. In *2015 IEEE Symposium on Security and Privacy*. IEEE, 931–948.
5. **Chen, K., Li, T., Ma, B., Wang, P., Wang, X., & Zong, P.** (2017). Filtering for Malice through the Data Ocean: Large-Scale PHA Install Detection at the Communication Service Provider Level. In *International Symposium on Research in Attacks, Intrusions, and Defenses*.
6. **Chen, K., Wang, P., Lee, Y., Wang, X., Zhang, N., Huang, H., Zou, W., & Liu, P.** (2015). Finding Unknown Malice in 10 Seconds: Mass Vetting for New Threats at the Google-Play Scale. In *USENIX Security Symposium*. 659–674.
7. **Chen, Q. A., Qian, Z., & Mao, Z. M.** (2014). Peeking into your app without actually seeing it: UI state inference and novel android attacks. In *23rd USENIX Security Symposium (USENIX Security 14)*. 1037–1052.
8. **Chen, Y., Li, T., Wang, X., Chen, K., & Han, X.** (2015). Perplexed messengers from the cloud: Automated security analysis of push-messaging integrations. In *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security*. ACM, 1260–1272.
9. **Chin, E., Felt, A. P., Greenwood, K., & Wagner, D.** (2011). Analyzing inter-application communication in Android. In *Proceedings of the 9th international conference on Mobile systems, applications, and services*. ACM, 239–252.
10. **Chin, E., & Wagner, D.** (2013). Bifocals: Analyzing webview vulnerabilities in android applications. In *International Workshop on Information Security Applications*. Springer, 138–159.
11. **Apple Developer** (2017). Support Universal Links. [https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html](https://developer.apple.com/library/content/documentation/General/Conceptual/AppSearch/UniversalLinks.html) (May 2017).
12. **Android Developers** (2017). Activity Element. [https://developer.android.com/guide/topics/manifest/activity-element.html](https://developer.android.com/guide/topics/manifest/activity-element.html) (May 2017).
13. **Android Developers** (2017). Android Debug Bridge. [https://developer.android.com/studio/command-line/adb.html](https://developer.android.com/studio/command-line/adb.html) (May 2017).
14. **Android Developers** (2017). Tasks and Back Stack. [https://developer.android.com/guide/components/tasks-and-back-stack.html](https://developer.android.com/guide/components/tasks-and-back-stack.html) (May 2017).
15. **Android Developers** (2017). UI/Application Exerciser Monkey. [http://developer.android.com/tools/help/monkey.html](http://developer.android.com/tools/help/monkey.html) (May 2017).
16. **Facebook Developers** (2016). App Links. [https://developers.facebook.com/docs/applinks](https://developers.facebook.com/docs/applinks) (November 2016).
17. **Dhamija, R., & Tygar, J. D.** (2005). The battle against phishing: Dynamic security skins. In *Proceedings of the 2005 symposium on Usable privacy and security*. ACM, 77–88.
18. **Even, A.** (2016). How to Grow Your Mobile App Retention. [http://www.apptamin.com/blog/grow-app-rentention/](http://www.apptamin.com/blog/grow-app-rentention/) (2016).
19. **Felt, A. P., & Wagner, D.** (2011). Phishing on mobile devices. na.
20. **Felt, A. P., Wang, H. J., Moshchuk, A., Hanna, S., & Chin, E.** (2011). Permission Re-Delegation: Attacks and Defenses. In *USENIX Security Symposium, Vol. 6*. 12–16.
21. **Fernandes, E., Chen, Q. A., Paupore, J., Essl, G., Halderman, J. A., Mao, Z. M., & Prakash, A.** (2016). Android UI Deception Revisited: Attacks and Defenses. In *Proceedings of the 20th International Conference on Financial Cryptography and Data Security*.
22. **iBotPeaches** (2017). Apktool. [https://ibotpeaches.github.io/Apktool/](https://ibotpeaches.github.io/Apktool/) (May 2017).
23. **Lee, Y., Li, T., Zhang, N., Demetriou, S., Zha, M., Wang, X., Chen, K., Zhou, X., Han, X., & Grace, M.** (2017). Ghost Installer in the Shadow: Security Analysis of App Installation on Android. In *Dependable Systems and Networks (DSN), 2017 47th Annual IEEE/IFIP International Conference on*. IEEE.
24. **Li, T., Zhou, X., Xing, L., Lee, Y., Naveed, M., Wang, X., & Han, X.** (2014). Mayhem in the push clouds: Understanding and mitigating security hazards in mobile push-messaging services. In *Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security*. ACM, 978–989.
25. **Luo, T., Hao, H., Du, W., Wang, Y., & Yin, H.** (2011). Attacks on WebView in the Android system. In *Proceedings of the 27th Annual Computer Security Applications Conference*. ACM, 343–352.
26. **Luo, T., Jin, X., Ananthanarayanan, A., & Du, W.** (2012). Touch-jacking attacks on web in android, ios, and windows phone. In *International Symposium on Foundations and Practice of Security*. Springer, 227–243.
27. **Moulu, A.** (2014). Abusing Samsung KNOX to remotely install a malicious application: story of a half patched vulnerability. [https://blog.quarkslab.com/abusing-samsung-knox-to-remotely-install-a-malicious-application-story-of-a-half-patched-vulnerability.html](https://blog.quarkslab.com/abusing-samsung-knox-to-remotely-install-a-malicious-application-story-of-a-half-patched-vulnerability.html) (November 2014).
28. **Mutchler, P., Doupé, A., Mitchell, J., Kruegel, C., & Vigna, G.** (2015). A Large-Scale Study of Mobile Web App Security. In *Proceedings of the Mobile Security Technologies Workshop (MoST)*.
29. **Niemietz, M., & Schwenk, J.** (2012). UI redressing attacks on android devices. *Black Hat Abu Dhabi* (2012).
30. **Ren, C., Liu, P., & Zhu, S.** (2017). WindowGuard: Systematic Protection of GUI Security in Android. In *Proc. of the Annual Symposium on Network and Distributed System Security (NDSS)*.
31. **Ren, C., Zhang, Y., Xue, H., Wei, T., & Liu, P.** (2015). Towards discovering and understanding task hijacking in android. In *24th USENIX Security Symposium (USENIX Security 15)*. 945–959.
32. **rovo89** (2017). Xposed Module Repository. [http://repo.xposed.info](http://repo.xposed.info) (May 2017).
33. **Shahriar, H., Klintic, T., Clincy, V., et al.** (2015). Mobile Phishing Attacks and Mitigation Techniques. *Journal of Information Security* 6, 03 (2015), 206.
34. **Sommer, T.** (2014). User Retention: Yes, But Which One? [http://www.applift.com/blog/user-retention.html](http://www.applift.com/blog/user-retention.html) (February 2014).
35. **Sutcliffe, T., & Taylor, A.** (2015). The Lifetime of Android API Vulnerabilities: Case Study on the JavaScript-to-Java Interface. In *Security Protocols XXIII: 23rd International Workshop, Cambridge, UK, March 31-April 2, 2015, Revised Selected Papers, Vol. 9379*. Springer, 126.
36. **Symantec** (2016). Android ransomware variant uses clickjacking to become device administrator. [https://www.symantec.com/connect/blogs/android-ransomware-variant-uses-clickjacking-become-device-administrator](https://www.symantec.com/connect/blogs/android-ransomware-variant-uses-clickjacking-become-device-administrator) (January 2016).
37. **Terada, T.** (2014). Whitepaper – Attacking Android browsers via intent scheme URLs. [http://www.mbsd.jp/Whitepaper/IntentScheme.pdf](http://www.mbsd.jp/Whitepaper/IntentScheme.pdf) (March 2014).
38. **Wang, R., Xing, L., Wang, X., & Chen, S.** (2013). Unauthorized origin crossing on mobile platforms: Threats and mitigation. In *Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security*. ACM, 635–646.
39. **Xing, L., Bai, X., Li, T., Wang, X., Chen, K., Liao, X., Hu, S.-M., & Han, X.** (2015). Cracking App Isolation on Apple: Unauthorized Cross-App Resource Access on MAC OS. In *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security*. ACM, 31–43.

---

This document provides a structured and professional overview of the XAWI-susceptible mobile applications, their features, installation ranges, and relevant references.