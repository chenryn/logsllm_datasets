### Including the Form of the Entities Themselves

For instance, a service description may be considered to possess the property of price only after it has successfully passed all quality assurance tests during its production and has been committed to by a provider.

### Open-World Assumption and Implementation Independence

In an open-world assumption, functionality and users are not fully accounted for in advance. Therefore, a sufficient level of implementation independence is required from the ontology representation grammar and method. Ontologies that adopt these approaches have greater potential for large-scale adaptation by a wide variety of software-based service technologies, thereby contributing to a generative service Web [34]. This dual utility of our ontologies is essential.

**Ontological Requirement 4:**
The adopted knowledge representation (KR) grammar and method should allow the construction of a computational ontology with dual utility [1]:
- In an IT/IS context, it serves as a computer specification for building diverse semantic applications (such as web services).
- In a business context, it serves as a theoretical model referring to real-world objects, aligning strategic goals, values, and processes among (human) stakeholders.

The open-world assumption and dual utility place additional constraints on new governance methods, as we will discuss next.

### Governance Requirements

The need for ontologies to convey business service semantics for assessing aspects such as regulatory compliance and quality has been hypothesized [29]. This need has become particularly pertinent in the aftermath of the global financial crisis. Internationally agreed regulations, such as Sarbanes-Oxley in the US and Basel in the EU, enforce strict corporate governance policies that significantly impact the roles and responsibilities in information management. However, this issue is often taken lightly, as evidenced by the poor information governance practices in many networked industries, including financial services and pharmaceuticals (see Gartner, Forrester, and IBM).

For business semantics to be useful in assessing regulatory compliance, they must be defined and validated by relevant and trusted individuals (typically called data stewards) from various business functions, including IT, legal, and compliance departments. The industry's attempt to categorize this governance requirement is labeled as Information Governance (IG). Gartner defines IG as: "the specification of decision rights and an accountability framework to encourage desirable behavior in the valuation, creation, storage, use, archival, and deletion of information. It includes the processes, roles, standards, and metrics that ensure the effective and efficient use of information to achieve organizational goals." From this definition, we derive our first governance requirement:

**Governance Requirement 1:**
To account for compliance and quality, an SDL-compliant upper ontology should additionally define governance concepts such as actors, roles, and competencies.

Most scientific papers propose deterministic role patterns and decision domains with predefined terminology, often inspired by traditional Data Quality Management and IT governance [15]. However, although best practices for data stewardship are emerging, we believe that governance models need to be flexible at runtime. For example, in earlier work, we analyzed individual contributions to an ontology. This behavioral analysis allowed us to identify user profiles that could lead to more effective role assignments in the governance model [7].

**Governance Requirement 2:**
The configuration of roles and responsibilities among peers in the governance of service descriptions must be dynamic.

### Background in Ontology Representation

#### Fact-Oriented Ontological Analysis

To accommodate OR4, we adopt a fact-oriented approach for the following reasons:
- Its natural-language grounding closely relates to speech acts, making it easier for domain experts to contribute, resulting in ontologies that clearly and accurately convey realistic business semantics.
- Its attribute-free approach, as opposed to frame-based techniques (such as UML or ER), promotes semantic stability under change [14].
Fact-oriented methods include NIAM/ORM [14]. The key to conceptual analysis is identifying relevant object types and the roles they play, allowing us to understand the facts of the business domain by minimizing lexical ambiguities.

Fact-orientation was repurposed for ontological analysis in the DOGMA project [20] and further extended with community-driven ontology evolution support in DOGMA-MESS. Later, Business Semantics Management (BSM) [5] refined this method by identifying ontology evolution processes and linking them to community evolution processes (such as those in Nonaka’s SECI model [21]). BSM is now commercially exploited via Collibra’s Data Governance Center product [10]. Fact-orientation is also part of OMG’s Meta-Object Facility for platform-independent modeling of business rules with modal logic capabilities using the SBVR standard [11].

Ontological analysis seeks further domain abstraction from fact types that represent different perspectives on the same business concepts. Perspective divergence and convergence are principal mechanisms in BSM to reconcile perspectives taken by different people based on different glossaries, conceptual hierarchies, and code systems. The result is an ontology that represents a higher level of abstraction for common domain concepts, applicable for semantic interoperability [5]. BSM is currently limited to one specific type, i.e., knowledge-intensive communities with explicit semantic interoperability requirements. In this respect, we cannot yet claim to account for decentralized governance. Summarizing, BSM needs to be repurposed for compliance goals of service networks, and its community model must be dynamic.

Important activities in BSM include context-driven lexical disambiguation of terms for concepts and their linking in upper-level conceptual hierarchies [6] and other types of relationships. Other important considerations in formal ontological analysis are essence and rigidity [13]. An entity’s property is essential if it necessarily holds throughout its lifecycle. A property is rigid if it is essential to all its instances. This leads to the more advanced notions of identity and unity. In this paper, we will touch upon these notions when exploiting SBVR’s modal logic capabilities to impose the possibility or necessity of certain facts about service systems.

#### Ontology of Dynamic Entities

To accommodate OR3, we adopt previous work [16] on a conceptual apparatus of an ontology designed to handle the conceptualization of dynamic entities and the notion of a transient property. We illustrate the design of a property possession algebra for conceptualizing the behavior of transient properties across the lifecycle of corresponding entities. In other words, we can define a possession formula for every fact type (that actually expresses a predicate for an entity). For example, a dispossession formula may use an SBVR “impossibility” statement:

- **It is impossible that a Proposal defines a Work Plan if the Proposal has not been submitted or the Proposal has not been accepted.**

The fact that the Proposal has not been submitted or accepted is a Circumstance that excludes the validity of a Proposal playing the role of defining a Work Plan.

### A Proposal for Business Service Semantics

Based on our requirements analysis and background, we propose a framework for the ontological representation and governance of business service semantics in compliant service networks. We adapt the BSM [5] method and illustrate with SBVR.

#### 6.1 SDL-Compliant Upper-Level Model

To meet OR1, our upper-level model comprises key SDL concepts: Action, Resource, Service System, and Service. To meet GR1 and GR2, we extend this upper-level model with IG concepts such as Actor and Competence. Further, we provide an extension point to model Circumstances that allow for temporal causal reasoning about resource possession formulas. We follow a fact-oriented analysis approach by which we abstract elementary fact types based on service science literature.

**Action:**
We introduce a general notion of action adopted from the Formal Framework for Information System Concepts (FRISCO) [10]. We replace a FRISCO action’s theme/patients (actands) with the SDL-compliant concept of (operant and operand) resource.

- **Action part of Composite Action / Composite Action has part Action**
- **Action acted upon by Operant Resource / Operant Resource acts in Action**
- **Action acts on Operand Resource / Operand Resource acted upon in Action**

To illustrate modal logic capacities of SBVR, we require an Action to act on at least one Operand Resource; hence, necessitating a certain fact:

- **It is necessary that an Action acts on at least one Operand Resource.**

**Circumstance:**
We can also link an Action to a triggering external Circumstance, which could be a State, Event, or Process. Distinguishing between event types is important in the context of temporal causal reasoning [30].

- **Action guarded by Circumstance / Circumstance guards Action**

This makes our definition similar to the artefact-centric approach to service interoperation (ACSI) originally proposed by IBM and currently further developed in the EC-funded project [13].

**Resource:**
We distinguish between two types of Resource that, in Actions, play the role of either theme/patient (Operand) or agent (Operant). Note, in the rest of this paper, we only verbalize one reading direction for fact types:

- **Operant Resource is a Resource**
- **Operand Resource is a Resource**

Next, we define service systems as specializations of operant resources. We discuss specializations of operand resources in the treatment of applications in the next subsection.

**Service System:**
Maglio [17] defines a Service System as an open system capable of improving the state of another system through sharing or applying its own Resources and improving its own state by acquiring external Resources. Its pivotal role highlights the importance of working systems for realizing value creation proposed by Alter [2]. We contribute to the latter when introducing the notion of Competence, which is important for the compliance of service-related Actions. Accordingly, a Service System is an Operant Resource and can be either a (working) Individual or Organization, the latter being a composite of Individuals [26].

- **Service System is an Operant Resource**
- **Service System controls Resource**
- **Individual is a Service System (e.g., "John Doe")**
- **Organization is a Service System (e.g., "IG Council")**
- **Organization owns Service System**

The above definition requires that Service Systems see value in having interactions with each other, leading to the definition of a Service.

**Service:**
A Service is a value co-creating Composite Action constituted by a number of interaction events in which Operant Resources of one Service System act upon Operand Resources for the benefit of another Service System. When delivered, a Service is an Event (perdurant in DOLCE), and therefore bound to time and space. We adopt the SDL-compliant Resource-Service-System model, recently introduced by Poels [26], inspired by the well-known Resource-Event-Agent (REA) model [19]. To indicate the flow of value, Poels distinguishes between service provider and service integrator roles. The economic notion of reciprocity entails a duality in the conception of Service, resulting in a reflexive “requiting” service in which the integrator and provider swap their roles. Moreover, the economic agent in REA is replaced by the SDL concept of Service System. We devise the following fact types to state a Service as a special type of Composite Action.

- **Service is a Composite Action**
- **Service is requited by Service**
- **Service provided by Service System**
- **Service is integrated by Service System**

To reason about value creation, we must further distinguish between value-creating interactions and non-value-creating interactions. For example, Poels [26] applied ISPAR conditions in this context, which would open a window to adopt the benefits from speech act theory as well.

**Actor:**
To account for GR1-2, we must introduce additional concepts not previously considered in this context. Until now, the semantics of the role of a Resource in a Service were limited to the economic perspective.