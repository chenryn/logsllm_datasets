### Introduction

Previous research has demonstrated that accurate predictions can be made a few days in advance of vulnerability disclosures, which is an effective means of mitigating zero-day attacks. In contrast, this study focuses on detecting exploits post-disclosure using two distinct datasets: one capturing end-host patching behavior and the other recording IP-level malicious activities. Allodi [2] conducted an empirical study on the economics of vulnerability exploitation by analyzing data from an underground cybercrime market.

### Literature Review

Prior studies on end-host patching behavior have primarily focused on understanding the patching behavior itself and its implications for user vulnerability over time. These include examining patching patterns at different stages [35], decay rates [15, 53], patching behavior across various update mechanisms [13, 19], and the impact of shared libraries on vulnerability decay and threat [30]. To the best of our knowledge, our study is the first to detect active exploitation by correlating patching behavior and vulnerability data with host infection data inferred from spam blacklists.

### Community Detection in Graphs and Networks

The detection of community structures in graphs or networks is an increasingly active field in graph mining, with extensive work in this area, as exemplified by [17]. This field has found wide applications in sociology [23, 51, 52], biology [18, 43, 52], computer science [31, 51, 52], and many other disciplines. Data is often modeled as a graph, and community detection is used for visualization, reducing graph size, and finding hidden patterns.

For instance, Holm et al. [22] built similarity protein graphs where nodes represent protein structures and edges represent structural alignments, facilitating efficient search in protein structure databases. Similarly, E. Hartuv et al. [21] created similarity graphs on pairs of elements, where similarity is determined by the set of features for each element, and then performed clustering on them.

In this study, we build similarity graphs among ISPs by measuring the similarity between their time series data.

### Conclusion

In this paper, we presented a novel method based on community detection for early detection of vulnerability exploitation. We used symptomatic botnet data to discover a community structure, revealing how similar network entities behave in terms of their malicious activities. We then analyzed the risk behavior of end-hosts through a set of patching data, allowing us to assess their risk to different vulnerabilities. By comparing these data, we quantified whether the underlying risks are consistent with the observed global symptomatic community structure, enabling us to statistically determine if a given vulnerability is being actively exploited.

Our results show that by observing up to 10 days worth of data post-disclosure, we can successfully detect the presence of exploits with 90% accuracy. This is significantly earlier than the recorded times of detection for most vulnerabilities. This early detection capability provides a significant time advantage for patch development and deployment, as well as other preventative and protective measures. The community structure generated during feature extraction can also be used to identify groups of hosts at risk to specific vulnerabilities currently being exploited, enhancing our ability to strengthen preventative and protective measures.

### Acknowledgments

We thank Xueru Zhang, Parinaz Naghizadeh, Pin-Yu Chen, and Ziyun Zhu for their valuable discussions on this work. This work was supported by the NSF under grants CNS-1422211, CNS-1616575, CNS-1739517, and CNS-1464163, and by the DHS via contract number FA8750-18-2-0011.

### References

[1] ADOBE. Security advisory for Adobe Reader and Acrobat. https://www.adobe.com/support/security/advisories/apsa13-02.html.

[2] ALLODI, L. Economic factors of vulnerability trade and exploitation. In ACM SIGSAC Conference on Computer and Communications Security (2017), ACM, pp. 1483–1499.

[3] ANTONAKAKIS, M., APRIL, T., BAILEY, M., BERNHARD, M., BURSZTEIN, E., COCHRAN, J., DURUMERIC, Z., HALDERMAN, J. A., INVERNIZZI, L., KALLITSIS, M., ET AL. Understanding the Mirai botnet. In USENIX Security Symposium (2017).

[4] Symantec attack signatures. http://bit.ly/1hCw1TL.

[5] BASTIAN, M., HEYMANN, S., JACOMY, M., ET AL. Gephi: An open source software for exploring and manipulating networks. ICWSM 8 (2009), 361–362.

[6] BELLOVIN, S. M. Patching is hard. https://www.cs.columbia.edu/~smb/blog/2017-05/2017-05-12.html.

[7] BENNETT, J. T. It’s a kind of magic. https://www.fireeye.com/blog/threat-research/2013/02/its-a-kind-of-magic-1.html.

[8] BOZORGI, M., SAUL, L. K., SAVAGE, S., AND VOELKER, G. M. Beyond heuristics: Learning to classify vulnerabilities and predict exploits. In ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (2010), ACM, pp. 105–114.

[9] CBL. https://www.abuseat.org.

[10] COSCIA, M., ROSSETTI, G., GIANNOTTI, F., AND PEDRESCHI, D. DEMON: A local-first discovery method for overlapping communities. In ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (2012), ACM, pp. 615–623.

[11] CVE-2013-5330 (Flash) in an unknown exploit kit fed by high rank websites. http://malware.dontneedcoffee.com/2014/02/cve-2013-5330-flash-in-unknown-exploit.html.

[12] CVE ID syntax change. https://cve.mitre.org/cve/identifiers/syntaxchange.html.

[13] DUEBENDORFER, T., AND FREI, S. Web browser security update effectiveness. In International Workshop on Critical Information Infrastructures Security (2009), Springer, pp. 124–137.

[14] DUMITRAS, T., AND SHOU, D. Toward a standard benchmark for computer security research: The Worldwide Intelligence Network Environment (WINE). In Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (2011), ACM, pp. 89–96.

[15] DURUMERIC, Z., KASTEN, J., ADRIAN, D., HALDERMAN, J. A., BAILEY, M., LI, F., WEAVER, N., AMANN, J., BEEKMAN, J., PAYER, M., ET AL. The matter of Heartbleed. In Internet Measurement Conference (2014), ACM, pp. 475–488.

[16] EYKHOLT, K., EVTIMOV, I., FERNANDES, E., LI, B., RAHMATI, A., XIAO, C., PRAKASH, A., KOHNO, T., AND SONG, D. Robust physical-world attacks on deep learning visual classification. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (2018), pp. 1625–1634.

[17] FORTUNATO, S. Community detection in graphs. Physics Reports 486, 3 (2010), 75–174.

[18] GIRVAN, M., AND NEWMAN, M. E. Community structure in social and biological networks. Proceedings of the National Academy of Sciences 99, 12 (2002), 7821–7826.

[19] GKANTSIDIS, C., KARAGIANNIS, T., RODRIGUEZ, P., AND VOJNOVIC, M. Planet scale software updates. In ACM SIGCOMM Computer Communication Review (2006).

[20] GOODIN, D. Failure to patch two-month-old bug led to massive Equifax breach. https://arstechnica.com/information-technology/2017/09/massive-equifax-breach-caused-by-failure-to-patch-two-month-old-bug.

[21] HARTUV, E., AND SHAMIR, R. A clustering algorithm based on graph connectivity. Information Processing Letters 76, 4 (2000), 175–181.

[22] HOLM, L., KÄÄRIÄINEN, S., ROSENSTRÖM, P., AND SCHENKEL, A. Searching protein structure databases with DaliLite v. 3. Bioinformatics 24, 23 (2008), 2780–2781.

[23] HUI, P., YONEKI, E., CHAN, S. Y., AND CROWCROFT, J. Distributed community detection in delay tolerant networks. In ACM/IEEE International Workshop on Mobility in the Evolving Internet Architecture (2007), ACM, p. 7.

[24] JACOMY, M., VENTURINI, T., HEYMANN, S., AND BASTIAN, M. ForceAtlas2, a continuous graph layout algorithm for handy network visualization designed for the Gephi software. PloS one 9, 6 (2014), e98679.

[25] KHALILI, M. M., NAGHIZADEH, P., AND LIU, M. Designing cyber insurance policies: Mitigating moral hazard through security pre-screening. In International Conference on Game Theory for Networks (2017), Springer, pp. 63–73.

[26] KHALILI, M. M., NAGHIZADEH, P., AND LIU, M. Designing cyber insurance policies: The role of pre-screening and security interdependence. IEEE Transactions on Information Forensics and Security 13, 9 (2018), 2226–2239.

[27] LANCICHINETTI, A., AND FORTUNATO, S. Community detection algorithms: A comparative analysis. Physical Review E 80, 5 (2009), 056117.

[28] LIN, S., YEH, M., AND LI, C. Common vulnerability scoring system version 2 calculator. PAKDD 2013 Tutorial (2013).

[29] MaxMind. http://www.maxmind.com/.

[30] NAPPA, A., JOHNSON, R., BILGE, L., CABALLERO, J., AND DUMITRAS, T. The attack of the clones: A study of the impact of shared code on vulnerability patching. In IEEE Symposium on Security and Privacy (2015).

[31] NATARAJAN, N., SEN, P., AND CHAOJI, V. Community detection in content-sharing social networks. In IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (2013), ACM, pp. 82–89.

[32] NAYAK, K., MARINO, D., EFSTATHOPOULOS, P., AND DUMITRAS, T. Some vulnerabilities are different than others: Studying vulnerabilities and attack surfaces in the wild. In International Symposium on Research in Attacks, Intrusions and Defenses (Sep 2014).

[33] NIST. National Vulnerability Database. https://nvd.nist.gov.

[34] PEDREGOSA, F., VAROQUAUX, G., GRAMFORT, A., MICHEL, V., THIRION, B., GRISEL, O., BLONDEL, M., PRETTENHOFER, P., WEISS, R., DUBOURG, V., ET AL. Scikit-learn: Machine learning in Python. Journal of Machine Learning Research 12 (2011), 2825–2830.

[50] XIAO, C., ZHU, J.-Y., LI, B., HE, W., LIU, M., AND SONG, D. Spatially transformed adversarial examples. arXiv preprint arXiv:1801.02612 (2018).

[51] YANG, J., AND LESKOVEC, J. Overlapping community detection at scale: A nonnegative matrix factorization approach. In ACM International Conference on Web Search and Data Mining (2013), ACM, pp. 587–596.

[52] YANG, J., MCAULEY, J., AND LESKOVEC, J. Community detection in networks with node attributes. In IEEE International Conference on Data Mining (2013), IEEE, pp. 1151–1156.

[53] YILEK, S., RESCORLA, E., SHACHAM, H., ENRIGHT, B., AND SAVAGE, S. When private keys are public: Results from the 2008 Debian OpenSSL vulnerability. In Internet Measurement Conference (2009), pp. 15–27.

[35] RAMOS, T. The laws of vulnerabilities. In RSA Conference (2006).

[36] SABOTTKE, C., SUCIU, O., AND DUMITRAS, T. Vulnerability disclosure in the age of social media: Exploiting Twitter for predicting real-world exploits. In USENIX Security Symposium (2015).

[37] SAEYS, Y., INZA, I., AND LARRAÑAGA, P. A review of feature selection techniques in bioinformatics. Bioinformatics 23, 19 (2007), 2507–2517.

[38] SARABI, A., ZHU, Z., XIAO, C., LIU, M., AND DUMITRAS, T. Patch me if you can: A study on the effects of individual user behavior on the end-host vulnerability state. In International Conference on Passive and Active Network Measurement (2017), Springer, pp. 113–125.

[39] The Spamhaus project: SBL, XBL, PBL, ZEN. http://www.spamhaus.org.

[40] Symantec security focus community. http://www.securityfocus.com.

[41] SpamCop blocking list. http://www.spamcop.net.

[42] SYMANTEC CORPORATION. Symantec threat explorer. http://www.symantec.com/security_response/threatexplorer/azlisting.jsp.

[43] THAKUR, G. S. Community detection in biological networks. Applied Statistics for Network Biology: Methods in Systems Biology, 299–327.

[44] TONG, L., LI, B., HAJAJ, C., AND VOROBEYCHIK, Y. Feature conservation in adversarial classifier evasion: A case study. arXiv preprint arXiv:1708.08327 (2017).

[45] UCEPROTECT network. http://www.uceprotect.net.

[46] US-CERT. Indicators associated with WannaCry ransomware. https://www.us-cert.gov/ncas/alerts/TA17-132A.

[47] US-CERT. Petya ransomware. https://www.us-cert.gov/ncas/alerts/TA17-181A.

[48] WPBL: Weighted private block list. http://www.wpbl.info.

[49] XIAO, C., LI, B., ZHU, J.-Y., HE, W., LIU, M., AND SONG, D. Generating adversarial examples with adversarial networks. arXiv preprint arXiv:1801.02610 (2018).