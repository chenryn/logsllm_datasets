### 1. Introduction
The reliability results in this table are based on the definition used in [19], which is the probability of having no system failures within a certain mission time, assuming that no component is ever repaired. We have also verified our DDS system results using the DFT tool Galileo [1].

### 2. Dependability Analysis for DDS
Table 1. Dependability analysis for DDS

### 3. Reactor Cooling System (RCS) Case Study
This case study was described in [22, 7]. In [7], the system was modeled using the DFT approach.

#### 3.1 System Components
The RCS consists of:
- A reactor
- Two pump lines, each with a single pump, a single filter, and several control valves
- A heat exchanger unit, including the heat exchanger itself, several valves, and one filter
- A bypass system for the heat exchanger, controlled by motor-driven valves

#### 3.2 Failure Modes and Repair Policies
- **Pumps**: Each pump has two operational modes: normal and degraded. If P2 fails, P1 degrades. The time-to-failure follows an Erlang-2 distribution with rates 5.44 × 10^-6 (normal mode) and 10.88 × 10^-6 (degraded mode). The time-to-repair follows an Erlang-2 distribution with rate 0.1.
- **Valves**: Can fail in two ways: stuck-open or stuck-closed. The failure rate is 2 × 4.2 × 10^-8. The repair time follows an exponential distribution with rate 0.1.
- **Filters**: Can be either free or blocked (failure state). The failure rate is 2.19 × 10^-6, and the repair time follows an exponential distribution with rate 0.1.
- **Heat Exchanger**: Can be either up or down, with a failure rate of 1.14 × 10^-6. The repair time follows an exponential distribution with rate 0.1.

#### 3.3 Repair Units
- **Valve Repair Unit (VIP1.rep)**: Dedicated to valve VIPl.
- **Pump Repair Unit (P.rep)**: Shared by both pumps PI and P2, using a First-Come-First-Served (FCFS) strategy.

### 4. Model Generation and Analysis
After generating the Continuous-Time Markov Chain (CTMC) models for the pump and heat exchanger subsystems, we applied the modularization technique [7] to compute the reliability and availability of the RCS.

- **Pump Subsystem CTMC**: 10,404 states and 109,662 transitions.
- **Heat Exchanger Subsystem CTMC (including bypass)**: 240 states and 1,668 transitions.
- **Largest Model Encountered**: 98,056 states and 411,688 transitions.

For a mission time of 50 hours, the system unreliability and unavailability are 6.52100 × 10^-10 and 52.9242 × 10^-10, respectively, which coincide with the results in [7].

### 5. Summary and Conclusions
In this paper, we proposed a new framework for dependability evaluation named Arcade. This framework is based on a formal and compositional I/O-IMC semantics. Its compositional reduction technique effectively combats state space explosion during analysis. The Arcade approach is extensible and can be integrated into design environments like AADL or UML. Unlike SAVE, where the actual semantics were hidden in a software program, Arcade provides a formal semantic model for compositional modeling and state space generation and reduction. Future work will focus on automating the toolchain and connecting to design approaches based on AADL and UML. We also plan to use more complex CSL-type expressions to query more complex measures than system reliability or availability.

### 6. Acknowledgments
We thank Holger Hermanns for his valuable comments on an earlier draft of this paper. We also thank the reviewers for their constructive feedback, which helped improve the quality of the paper.

### 7. References
[1] Galileo tool. http://www.cs.virginia.edu/ftree.
[2] Architecture Analysis and Design Language (AADL). SAE standards AS5506, Nov 2004.
[3] M. Ajmone Marsan, G. Balbo, G. Conte, S. Donatelli, and G. Franceschinis. Modelling with generalized stochastic Petri nets. Wiley, 1995.
[4] C. Baier, B. Haverkort, H. Hermanns, and J. Katoen. Model-Checking Algorithms for Continuous-Time Markov Chains. IEEE Trans. Software Eng., 29(7):1-18, July 2003.
[5] H. Boudali, P. Crouzen, and M. Stoelinga. A compositional semantics for Dynamic Fault Trees in terms of Interactive Markov Chains. LNCS, 4762:441-456, 2007.
[6] H. Boudali, P. Crouzen, and M. Stoelinga. Dynamic fault tree analysis using input/output interactive markov chains. In Proc. of the 37th Annual IEEE/IFIP International Conference on DSN, pages 708-717. IEEE, 2007.
[7] K. Buchacker. Modeling with extended fault trees. In 5th IEEE Int. Symposium on High Assurance Systems Engineering, pages 238-246, Nov 2000.
[8] E. de Souza e Silva and R. M. M. Leao. The "TANGRAM-In Computer Performance Evaluation. 11th Int. Conference, II" environment. Modelling Techniques and Tools: TOOLS 2000, volume 1786, pages 366-369. LNCS, 2000.
[9] S. Distefano and L. Xing. A new approach to modeling the system reliability: dynamic reliability block diagrams. In RAMS'06 proceedings, pages 189-195, 2006.
[10] J. B. Dugan, S. J. Bavuso, and M. A. Boyd. Dynamic fault-tree models for fault-tolerant computer systems. IEEE Trans. on Reliability, 41(3):363-377, September 1992.
[11] H. Garavel, F. Lang, R. Mateescu, and W. Serwe. CADP 2006: a toolbox for the construction and analysis of distributed processes. In Proc. of the 19th International Conference on Computer Aided Verification (CAV), 2007.
[12] A. Goyal, W. C. Carter, E. de Souza e Silva, S. S. Lavenberg, and K. S. Trivedi. The system availability estimator. In Proceedings of the 16th Int. Symp. on Fault-Tolerant Computing, pages 84-89, July 1986.
[13] H. Hermanns. Interactive Markov Chains, volume 2428 of Lecture Notes in Computer Science. Springer, 2002.
[14] H. Hermanns, U. Herzog, U. Klehmet, V. Mertsiotakis, and M. Siegle. Compositional performance modelling with the TIPPtool. LNCS, 1469:51-62, 1998.
[15] J. Hillston. A Compositional Approach to Performance Modelling. Cambridge University Press, 1996.
[16] N. Lynch and M. Tuttle. An Introduction to Input/output Automata. CWI Quarterly, 2(3):219-246, 1989.
[17] OMG Group. UML Profile for Modeling Quality of Service and Fault Tolerance Characteristics and Mechanisms. Technical report, June 2006.
[18] A.-E. Rugina, K. Kanoun, and M. Kaniche. A System Dependability Modeling Framework Using AADL and GSPNs. In R. de Lemos, C. Gacek, and A. B. Romanovsky, editors, WADS, volume 4615 of LNCS, pages 14-38. Springer, 2006.
[19] W. H. Sanders and L. M. Malhis. Dependability evaluation using composed SAN-based reward models. Journal of Parallel and Distributed Computing, 15(3):238-254, 1992.
[20] M. L. Shooman. Reliability of Computer Systems and Networks: Fault Tolerance, Analysis, and Design. John Wiley & Sons, 2002.
[21] M. Walter, M. Siegle, and A. Bode. OpenSESAME: the simple but extensive, structured availability modeling environment. RESS, In Press, corrected proof, April 2007.
[22] L.-M. Xing, K. Fleming, and W.-T. Loh. Comparison of Markov model and fault tree approach in determining initiating event frequency for systems with two train configurations. RESS, 53(1):17-29, 1996.

1-4244-2398-9/08/$20.00 ©2008 IEEE
521
DSN 2008: Boudali et al.