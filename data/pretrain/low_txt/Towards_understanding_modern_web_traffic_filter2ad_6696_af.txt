# 优化后的文本

## 冗余来源分析
图17展示了基于128字节块的冗余来源：大部分额外的节省来自部分内容重叠——即不同版本的对象之间的冗余以及不同对象之间的冗余。

![](figure17.png)
*图17: 基于128字节块的冗余来源*

## 缓存大小与命中率的关系
图18显示了缓存大小与字节命中率的关系：使用MRC的大缓存提供的字节命中率是基于对象缓存的两倍。

![](figure18a.png)
*图18(a) 美国缓存大小与字节命中率的关系*

![](figure18b.png)
*图18(b) 中国缓存大小与字节命中率的关系*

## 中断传输统计
表3列出了中断传输的情况。在我们的模拟中，发现有少量请求（1.8%-3.1%）在完全下载之前被中断，但其体积相当显著。这些事件通常发生在用户点击浏览器的停止按钮或切换到其他网页时。我们通过检查已下载长度是否小于响应头中的内容长度来检测中断传输。中断传输的总下载量为12.4%-30.8%。如果这些传输完全下载，将占整个流量的69.9%-88.8%。进一步调查这些传输的内容类型分布，发现大部分字节来自视频传输，可能是预览视频片段的一部分。特别是Flash视频约占所有中断传输的40%-70%，我们也观察到用户取消文件下载。

| 国家 | 请求 (K) (百分比) | 字节 (GB) (百分比) | 完全下载时的GB |
| --- | --- | --- | --- |
| US | 265 (3.1%) | 712 (83.8%) | 10 (23.6%) |
| CN | 377 (3.1%) | 61 (30.8%) | 258 (88.8%) |
| FR | 38 (1.8%) | 444 (69.9%) | 216 (79.3%) |
| BR | 85 (2.1%) | 27 (12.4%) | 22 (28.3%) |

**表3: 中断传输**

## 相关工作
我们的工作与互联网监控、流量特征和缓存行为研究相关。以下详细描述了与以往工作的关系。

### 互联网监控
许多先前的研究分析了流量行为。例如，Akamai通过其全球服务器网络收集数据，报告各国的互联网普及率和连接速度 [10]。Ipoque则分析了客户ISP和大学的流量 [29]，发现由于文件托管、社交网络和视频流网站的流行，Web流量增加而P2P流量减少。其他一些研究也观察到了类似的趋势 [21, 34, 36]。

### Web流量特征
Mah首次提出了一种广泛使用的Web流量模型，并引入了基于空闲时间的页面检测算法 [35]。此后，该模型被许多研究人员用于Web流量特征研究 [9, 56]。Choi和Limb提出了一种方法，将每个HTML对象视为一个Web页面 [17]。最近的一些研究则关注了少数流行的Ajax Web应用程序，如地图和Web邮件，以及流媒体服务 [16, 53]。

Butkiewicz等人 [12] 通过四个观测点的浏览器主动测量方法研究了网站的复杂性。虽然他们使用HTTP归档记录格式（HAR）可以精确检测页面加载事件，但他们的数据集仅包含随机选择的2,000个网站的顶级页面，并忽略了客户端交互。

### 冗余和缓存
传统的基于对象的Web缓存通过存储以前看到的对象并在未来请求时本地提供它们来工作。然而，这种缓存的好处仅限于可缓存的对象，如静态文本和图像文件。传统方法的缓存命中率通常在35%到50%之间 [3, 13, 24, 30, 40, 63]。字节命中率更低，因为缓存命中偏向于较小的热门对象。Ager等人 [3] 在各种场景下通过控制对象缓存的严格性来研究HTTP缓存的潜力。更高级的基于对象的缓存技术包括减少对象更新流量的delta编码 [39] 和避免下载别名对象的重复传输检测（DTD） [40]。Spring和Wetherall进一步将基于对象的缓存扩展到子包粒度，并开发了一种协议无关的内容缓存技术 [57]。

Anand等人 [6] 分析了大学和企业网络的跟踪数据，显示15%-60%的整个流量是冗余的，而Web流量的冗余仅为16%-32%。我们的研究表明，基于内容的缓存实现了42%-51%的字节命中率，几乎是基于对象缓存的两倍。此外，我们评估了MRC [28] 的有效性，发现增加缓存存储大小非常有益。

## 结论
为了更好地理解现代Web流量，我们分析了五年内从全球分布式代理系统捕获的真实Web流量，涵盖了来自187个国家的超过7万名日常用户的行为。我们的主要发现之一是Flash视频和Ajax流量持续增加，搜索引擎/分析站点追踪的用户比例也在增加。我们的StreamStructure算法揭示了几乎一半的流量不是初始页面加载的结果，而是初始加载后客户端交互的结果。尽管页面在对象数量和大小方面都有所增长，但由于并发连接数的增加和缓存行为的改进，页面加载延迟有所下降。最后，具有大缓存存储的多分辨率分块（MRC）提供了传统基于对象缓存的两倍字节命中率，并且对中断传输也非常有效。基于内容的缓存的额外节省主要来自部分内容重叠。

## 致谢
感谢我们的指导者Steve Uhlig以及匿名IMC审稿人。感谢KyoungSoo Park多年来保持CoDeeN运行并为我们提供日志。感谢Eric Keller、Wonho Kim和Siddhartha Sen对本文早期版本的宝贵意见。本研究得到了NSF Awards CNS-0615237和CNS-0916204的部分支持。

## 参考文献
[1] Adobe HTTP Dynamic Streaming. http://www.adobe.com/products/httpdynamicstreaming/.
[2] B. Ager, W. Mühlbauer, G. Smaragdakis, and S. Uhlig. Comparing DNS resolvers in the wild. In Proc. Internet Measurement Conference, Melbourne, Australia, Nov. 2010.
[3] B. Ager, F. Schneider, J. Kim, and A. Feldmann. Revisiting cacheability in times of user generated content. In Proc. 13th IEEE Global Internet Symposium, San Diego, CA, Mar. 2010.
[4] AJAX - Connectivity Enhancements in Internet Explorer 8. http://msdn.microsoft.com/en-us/library/cc304129(v=vs.85).aspx.
[5] Alexa the Web Information Company. http://www.alexa.com/.
[6] A. Anand, C. Muthukrishnan, A. Akella, and R. Ramjee. Redundancy in network traffic: Findings and implications. In Proc. ACM SIGMETRICS, Seattle, WA, June 2009.
[7] S. Annapureddy, M. J. Freedman, and D. Mazières. Shark: Scaling file servers via cooperative caching. In Proc. 2nd USENIX NSDI, Boston, MA, May 2005.
[8] Apple HTTP Live Streaming. http://developer.apple.com/resources/http-streaming/.
[9] P. Barford and M. Crovella. Generating Representative Web Workloads for Network and Server Performance Evaluation. In Proc. ACM SIGMETRICS, Madison, WI, June 1998.
[10] D. Belson. Akamai state of the Internet report, q4 2009. SIGOPS Oper. Syst. Rev., 44(3):27–37, 2010.
[11] L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker. Web caching and zipf-like distributions: Evidence and implications. In Proc. IEEE INFOCOM, New York, NY, Mar. 1999.
[12] M. Butkiewicz, H. V. Madhyastha, and V. Sekar. Understanding website complexity: Measurements, metrics, and implications. In Proc. Internet Measurement Conference, Berlin, Germany, Nov. 2011.
[13] R. Cáceres, F. Douglis, A. Feldmann, G. Glass, and M. Rabinovich. Web proxy caching: the devil is in the details. In Proc. 1st ACM Workshop on Internet Server Performance, Madison, WI, June 1998.
[14] T. Callahan, M. Allman, and V. Paxson. A longitudinal view of HTTP traffic. In Passive & Active Measurement (PAM), Zurich, Switzerland, Apr. 2010.
[15] M. Casado and M. J. Freedman. Peering through the shroud: the effect of edge opacity on IP-based client identification. In Proc. 4th USENIX NSDI, Cambridge, MA, Apr. 2007.
[16] M. Cha, H. Kwak, P. Rodriguez, Y.-Y. Ahn, and S. Moon. I Tube, You Tube, Everybody Tubes: Analyzing the World’s Largest User Generated Content Video System. In Proc. ACM SIGCOMM Internet Measurement Conference, San Diego, CA, USA, Oct. 2007.
[17] H.-K. Choi and J. O. Limb. A behavioral model of Web traffic. In IEEE International Conference on Network Protocols (ICNP), Toronto, Canada, Oct. 1999.
[18] D. Crane, E. Pascarello, and D. James. Ajax in Action. Manning Publications Co., Greenwich, CT, USA, 2005.
[19] Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification. http://www.w3.org/TR/CSS2/.
[20] Data Domain. http://www.datadomain.com/.
[21] J. Erman, A. Gerber, M. T. Hajiaghayi, D. Pei, and O. Spatscheck. Network-aware forward caching. In Proc. 18th International World Wide Web Conference, Madrid, Spain, May 2009.
[22] R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P. Leach, and T. Berners-Lee. Hyptertext Transfer Protocol – HTTP/1.1. Internet Engineering Task Force, June 1999. RFC 2616.
[23] Top 7 Firefox Proxy Addons. http://www.techiezine.com/top-7-firefox-proxy-addons/.
[24] S. Gribble and E. Brewer. System Design Issues for Internet Middleware Services: Deductions from a Large Client Trace. In Proc. 1st USENIX Symposium on Internet Technologies and Systems (USITS), Monterey, CA, Dec. 1997.
[25] HTTP Archive Specification. http://groups.google.com/group/http-archive-specification/web/har-1-2-spec.
[26] F. Hernandez-Campos, K. Jeffay, and F. Smith. Tracking the evolution of Web traffic: 1995-2003. In Proc. IEEE/ACM MASCOTS, Oct. 2003.
[27] S. Ihm, K. Park, and V. S. Pai. Towards Understanding Developing World Traffic. In Proc. 4th ACM Workshop on Networked Systems for Developing Regions (NSDR), San Francisco, CA, June 2010.
[28] S. Ihm, K. Park, and V. S. Pai. Wide-area Network Acceleration for the Developing World. In Proc. USENIX Annual Technical Conference, Boston, MA, June 2010.
[29] ipoque. Internet Study 2008/2009.