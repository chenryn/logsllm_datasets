# For the Love of Money: Exploiting Vulnerabilities in Mobile Point-of-Sale Systems

## Authors
Leigh-Anne Galloway & Tim Yunusov  
Positive Technologies

## MPOS Growth
- **2010**: Single vendor
- **2018**: Four leading vendors, shipping thousands of units per day

## Motivations
- MWR Labs: "Mission mPOSsible" (2014)
- Mellen, Moore, and Losev: "Mobile Point of Scam: Attacking the Square Reader" (2015)

## Research Scope
### Providers
- PayPal
- Square
- iZettle
- SumUp

### Key Question
- "How much security can really be embedded in a device that is free?"

### Components
- Phone/Server
- Hardware
- Device/Phone
- Mobile App
- Secondary Factors

### Background
#### Ecosystem
- **Merchant**
- **Acquirer**
- **Card Brands**
- **Issuer**
- **MPOS Provider**

#### Card Risk by Operation Type
- **Chip & PIN**
- **Chip & Signature**
- **Contactless**
- **Swiped**
- **PAN Key Entry**

#### EMV Adoption
- **EU EMV Acceptance**:
  - 90-95% of POS devices are EMV-enabled
  - 13% of POS population and 9% of ATM population
- **US EMV Acceptance**:
  - 90% of POS devices are EMV-enabled
  - 13% of POS population and 9% of ATM population

#### Global Adoption of EMV - POS Terminals
- **EMV Credit Card Adoption**:
  - 96% of credit cards support EMV
  - 41% of transactions use chip
- **EMV Debit Card Adoption**:
  - 79% of debit cards support EMV
  - 23% of transactions use chip

#### MPOS Timeline
- 46% of transactions
- 52 million units

#### Schematic Overview of Components
- **Vulnerabilities**:
  - Sending Arbitrary Commands
  - Amount Modification
  - Remote Code Execution
  - Hardware Observations
  - Secondary Factors

## Methods & Tools
### Bluetooth
- **Host Controller Interface (HCI)**
- **Software**:
  - BT Profiles, GATT/ATT
  - L2CAP
  - Link Manager Protocol (LMP)
  - Baseband
  - Bluetooth Radio
  - Host Controller

### Bluetooth Protocol
- **GATT (Generic Attribute)** / **ATT (Attribute Protocol)**
- **RFCOMM**
- **Service UUID**
- **Characteristic UUID**
- **Value**

### Bluetooth as a Communication Channel
- **NAP**
- **UAP**
- **LAP**
- **Org Unique Identifier**
- **Unique to Device**

### Bluetooth Attack Vectors
- **Eavesdropping/MITM**
- **Manipulating Characteristics**

### Tools
- **Frontline BPA 600** ($120)
- **Ubertooth One** ($20,000)

## Findings
### Sending Arbitrary Commands
- **Initiate a Function**
- **Display Text**
- **Turn Off or On**

### Manipulating Characteristics
- User authentication does not exist in the Bluetooth protocol; it must be added at the application layer.

### Leading Part
- **Message**
- **Trailing Part**
- **CRC**
- **End**

### Example
- **Command**: `02001d06010b000000 010013 506c656173652072656d6f76652063 617264 00ff08 3c62 03`
- **Text**: "Please remove card"

### Attack Vectors
- **Force Cardholder to Use a More Vulnerable Payment Method** (e.g., mag-stripe)
- **Display "Payment Declined" and Force Additional Transaction**

### Amount Tampering
- **Access to Transactions and Commands**:
  - HTTPS
  - Developer Bluetooth Logs
  - Re-enable APK Debug
  - Bluetooth Sniffer

### Modifying Payment Amount
- **Example**:
  - **Modified Payment Value**: 0x02ee = 7.50 USD, 0x64cb = checksum
  - **Original (Lower) Amount Displayed on Card Reader for Customer**: 0100 = 1.00 USD, 0x8a = checksum
  - **Card Statement Showing Higher Authorized Transaction Amount**

### Security Mechanisms
- **Mag-Stripe**: Track2, No Security
- **Contactless**: Possible, Amount Stored in Cryptogram
- **Chip and PIN**: Amount Stored in Cryptogram, Limit per Transaction: $50,000

### Attack Scenario
- **Service Provider**: $1.00 payment
- **Customer**: $1.00 payment
- **Fraudulent Merchant**: $50,000 payment

### Mitigation Actions for Service Providers
- **Do Not Use Vulnerable or Out-of-Date Firmware**
- **No Downgrades**
- **Preventative Monitoring**

### Remote Code Execution (RCE)
- **Firmware Arrives on the Reader**:
  - Example URLs: `https://frw.******.com/_prod_app_1_0_1_5.bin`, `https://frw.******.com/_prod_app_1_0_1_5.sig`
  - **Header**: RSA-2048 signature (0x00 - 0x100)
  - **Body**: AES-ECB encrypted

### Infected MPOS
- **Payment Attacks**
- **Collect Track 2/PIN**
- **Payment Research**

### Device Persistence
- **Reboot**: Game Over

### Mitigations
- **No Vulnerable or Out-of-Date Firmware**
- **No Downgrades**
- **Preventative Monitoring**

### Hardware Observations
- **Secondary Factors**
- **Enrollment Process**
- **Onboarding Checks vs. Transaction Monitoring**
- **Differences in Geo â€“ MSD, Offline Processing**
- **What Should Be Considered an Accepted Risk?**
- **Access to HCI Logs/App, Location Spoofing**

### Recommendations
#### MPOS Manufacturers
- **Control Firmware Versions, Encrypt & Sign Firmware**
- **Use Bluetooth Pairing Mode with Visual Confirmation**
- **Integrate Security Testing into Development Process**
- **Implement User Authentication and Input Sanitization at Application Level**

#### MPOS Vendors
- **Place More Emphasis on Enrollment Checks**
- **Protect the Mobile Ecosystem**
- **Implement User Authentication and Input Sanitization at Application Level**

#### MPOS Merchants
- **Assess the MPOS Ecosystem**
- **Choose a Vendor Who Emphasizes Protecting the Whole Ecosystem**
- **Control Physical Access to Devices**
- **Do Not Use Mag-Stripe Transactions**

## Conclusions
- **Carry out an assessment of the reader to gather preliminary data and info from cards.**
- **Use data to carry out normal transactions to obtain a baseline.**
- **Identify potential weaknesses and vulnerabilities.**
- **Conduct modified transactions.**

### Assessing Risk
- **Understand the implications for your business.**

### Acknowledgments
- **Hardware and Firmware**: Artem Ivachev, Leigh-Anne Galloway, Tim Yunusov
- **Hardware Observations**: Alexey Stennikov, Maxim Goryachy, Mark Carney

Thank you!