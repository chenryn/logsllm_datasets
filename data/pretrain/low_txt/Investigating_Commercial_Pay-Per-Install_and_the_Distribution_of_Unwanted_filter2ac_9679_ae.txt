### PPI Network Dynamics and Evasion Techniques

**PPI Network Dynamics:**
In our analysis of the Pay-Per-Install (PPI) network, we observed that PPI operators frequently change their distribution pages. This rapid turnover is likely a strategy to avoid detection and warnings from Safe Browsing, which flags pages with increasingly negative reputations. Over an eight-month period from June 1, 2015, to January 7, 2016, we identified 191,372 distribution pages hosting PPI downloaders.

To estimate the lifespan of these pages, we measured the time between the first and last reported download attempts by clients, regardless of whether Safe Browsing issued a warning. Our findings indicate that Amonetize distribution pages have a median lifetime of 7 hours, while Outbrowse pages last for just 0.75 hours. In contrast, InstallMonetizer and OpenCandy pages remain operational for much longer, with median lifetimes of 152 days and 220 days, respectively. The extended lifespan of OpenCandy pages can be attributed to the fact that not all of their installs are flagged by Safe Browsing, as they do not violate Google’s unwanted software policy. Additionally, Outbrowse and Amonetize's control over distribution pages allows them to quickly cycle through domains, further complicating detection.

**Evasion and Cloaking:**
Despite the frequent cycling of distribution pages, PPI networks face the risk of Safe Browsing scanning and detecting their downloaders. We found anecdotal evidence that PPI networks actively employ evasion techniques to circumvent this scanning process. For instance, when Safe Browsing initially focused on executable files, PPI networks switched to distributing .zip compressed binaries. As Safe Browsing expanded its coverage, PPI networks adopted more obscure compression formats such as .rar and .ace, or used doubly compressed files. 

We also observed PPI networks exploiting a Chrome vulnerability where files downloaded via Flash were not scanned by Safe Browsing. After this vulnerability was patched, PPI networks began using password-protected compressed files, providing victims with instructions to access the contents. These tactics highlight the ongoing arms race between PPI networks and user protection systems, indicating that PPI networks prioritize circumventing security measures rather than ceasing the distribution of harmful software. This behavior is driven by the financial incentives within the PPI ecosystem, where maintaining profitability often involves employing deceptive installation tactics.

**Promotional Tools:**
For affiliates who do not operate download portals or peer-to-peer sharing sites, PPI resellers provide deceptive "promotional tools" designed to trick web visitors into running PPI downloaders. These tools can be categorized into four types: butterbars, ad banners, landing pages, and content unlockers.

- **Butterbars:** PPI resellers like NetCashRevenue provide JavaScript code that generates a yellow bar at the top of a webpage, alerting the victim that their "Flash player is out of date." This bar can either initiate an auto-download or require the victim to click, leading to the installation of a PPI downloader.
- **Content Lockers:** These tools present enticing content such as videos, songs, or PDFs. To access the content, the victim must install a "codec," which is actually a PPI downloader. Resellers simplify this process by providing scripts that spoof fake video players and codec alerts.
- **Ad Banners & Landing Pages:** Resellers supply webmasters with ad banners or customized landing pages that mimic popular software downloads like uTorrent, Java, Flash, and Firefox, but in reality, these are PPI downloaders.

These techniques underscore that even if the software delivered by a PPI downloader appears benign, the distribution practices of affiliates add an additional layer of complexity in determining whether the software is ultimately unwanted. Therefore, advertisers, publishers, and PPI networks share responsibility for the current state of commercial pay-per-install and its ties to unwanted software.

### Related Work

**Blackmarket Pay-Per-Install:**
Our research builds on previous studies of the blackmarket PPI ecosystem, which sells access to compromised hosts. Industry reports first described these underground markets in 2009 [10, 33]. Caballero et al. conducted the first in-depth investigation by infiltrating these markets and tracking the malware families involved [4]. Prices per install ranged from $0.02 to $0.18, significantly lower than the rates observed in commercial PPI. Despite the lower costs, there is evidence of crossover, such as the commercial PPI network iBario recently distributing Sefnit [35]. Other studies have explored the relationships between blackmarket PPI networks and specific malware families [23, 30], but none determined whether PPI was the primary distribution mechanism. Our study goes further by quantifying the volume of weekly download attempts to commercial PPI downloaders.

**Unwanted Software:**
Unwanted software has been a persistent threat. In 2004, Saroiu et al. found that at least 5% of computers connected to the University of Washington’s campus network were infected with spyware [32]. In 2005, Edelman documented the deceptive installation methods and monetization models of several spyware and adware companies [11, 12]. More recently, Thomas et al. found that 5% of unique IPs accessing Google websites exhibited symptoms of ad injection [34], while Jagpal et al. identified millions of browsers with unwanted extensions performing ad injection, search hijacking, and user tracking [17].

Researchers have also explored various distribution techniques. Moshchuk et al. analyzed 21,200 executables from the internet and found that 13.4% contained spyware [25]. Kammerstetter et al. conducted a similar study focusing on sites hosting cracks and key generators, finding that most bundled malware rather than unwanted software [19]. Our work examines the commercialization of these distribution practices, facilitated by PPI affiliate networks.

Kotzias et al. studied code-signing techniques used by unwanted software to reduce detection [21]. We use a similar method for clustering advertiser binaries, though only 58% of the 1,809 unique offer digests and 50% of 1.5 million PPI downloaders contained signatures. This may introduce a bias in analyses that focus solely on signed unwanted software. Concurrently, Kotzias et al. explored the download graph of unwanted software via Symantec’s WINE database, identifying that 54% of users were affected by unwanted software [20]. Nelms et al. examined the role of deceptive advertising in luring victims to run PPI downloaders [26]. Together, these studies provide a comprehensive view of the number of users affected by unwanted software, the coordination among advertisers, affiliate networks, and publishers, and the deceptive practices used to entice downloads via advertisements or free software sites.

### Conclusion

Our study provides a deep dive into the business practices of the commercial PPI ecosystem, which sells access to user systems for prices ranging from $0.10 to $1.50 per install. We demonstrated that PPI affiliate networks distribute a range of unwanted software, including ad injectors, browser settings hijackers, and system utilities. Collectively, the PPI ecosystem drove over 60 million weekly download attempts, with tens of millions of installs detected in the last year.

As antivirus and browser vendors integrate signatures of unwanted software into their removal tools and warning systems, we found evidence that commercial PPI networks actively attempt to evade these protections to sustain their business model. These practices show that PPI affiliate networks operate with little regard for user interests, relying on user consent dialogues to justify their actions. We hope that by documenting these behaviors, the security community will recognize unwanted software as a major threat, affecting three times as many users as malware.

In response to these deceptive practices, the anti-virus industry, software platforms, and parties profiting from commercial PPI have formed the Clean Software Alliance [6]. The consortium aims to promote sustainable, consumer-friendly practices within the software distribution ecosystem, including defining industry standards for deceptive web advertisements, user consent, software functionality disclosure, and uninstallation. Achieving the right balance between software monetization and user advocacy remains a challenge, as it takes only one deceptive party in the chain of web advertisements, publishers, affiliate networks, and advertisers for abuse to occur.

### Acknowledgments

We thank the Safe Browsing and Chrome Security teams for their insightful feedback during the development of our study. This work was supported in part by the National Science Foundation under grants 1619620 and by a gift from Google. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the sponsors.

### References

[1] AVG. Become an AVG affiliate. http://www.avg.com/affiliate/us-en/become-an-avg-affiliate, 2016.
[2] Ulrich Bayer, Paolo Milani Comparetti, Clemens Hlauschek, Christopher Kruegel, and Engin Kirda. Scalable, behavior-based malware clustering. In Proceedings of the Network and Distributed System Security Conference, 2009.
[3] Business Wire. Perion partners with Lenovo to create Lenovo Browser Guard. http://www.businesswire.com/news/home/20140618005930/en/Perion-Partners-Lenovo-Create-Lenovo-Browser-Guard, 2014.
[4] Juan Caballero, Chris Grier, Christian Kreibich, and Vern Paxson. Measuring pay-per-install: The commoditization of malware distribution. In Proceedings of the USENIX Security Symposium, 2011.
[5] Chrome. Chrome Cleanup Tool. https://www.google.com/chrome/cleanup-tool/, 2016.
[6] Clean Software Alliance. Sustainable, consumer-friendly practices. http://www.cs-alliance.org/, 2016.
[7] Comodo. Consumer affiliate. https://www.comodo.com/partners/consumer-affiliate.php, 2016.
[8] CrunchBase. InstallMonetizer. https://www.crunchbase.com/organization/installmonetizer#/entity, 2016.
[9] CrunchBase. OpenCandy. https://www.crunchbase.com/product/opencandy#/entity, 2016.
[10] Nishant Doshi, Ashwin Athalye, and Eric Chien. Pay-Per-Install: The New Malware Distribution Network. https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/pay_per_install.pdf, 2010.
[11] Ben Edelman. Claria’s misleading installation methods - ezone.com. http://www.benedelman.org/spyware/installations/ezone-claria/, 2005.
[12] Ben Edelman. Pushing spyware through search. http://www.benedelman.org/news/012606-1.html, 2006.
[13] gensim. models.ldamodel – Latent Dirichlet Allocation. https://radimrehurek.com/gensim/models/ldamodel.html, 2015.
[14] Chris Grier, Lucas Ballard, Juan Caballero, Neha Chachra, Christian J Dietrich, Kirill Levchenko, Panayiotis Mavrommatis, Damon McCoy, Antonio Nappa, Andreas Pitsillidis, et al. Manufacturing compromise: the emergence of exploit-as-a-service. In Proceedings of the Conference on Computer and Communications Security, 2012.
[15] Orr Hirschauge. Conduit diversifies away from 'download valley'. http://www.wsj.com/articles/SB10001424052702304547704579563281761548844, 2014.
[16] HowToGeek. Here’s what happens when you install the top 10 download.com apps. http://www.howtogeek.com/198622/heres-what-happens-when-you-install-the-top-10-download.com-apps/, 2014.
[17] Nav Jagpal, Eric Dingle, Jean-Philippe Gravel, Panayiotis Mavrommatis, Niels Provos, Moheeb Abu Rajab, and Kurt Thomas. Trends and lessons from three years fighting malicious extensions. In Proceedings of the USENIX Security Symposium, 2015.
[18] Java. What are the ask toolbars? https://www.java.com/en/download/faq/ask_toolbar.xml, 2015.
[19] Markus Kammerstetter, Christian Platzer, and Gilbert Wondracek. Vanity, cracks and malware: Insights into the anti-copy protection ecosystem. In Proceedings of the ACM Conference on Computer and Communications Security, 2012.
[20] Platon Kotzias, Leyla Bilge, and Juan Caballero. Measuring PUP Prevalence and PUP Distribution through Pay-Per-Install Services. In Proceedings of the USENIX Security Symposium, 2016.
[21] Platon Kotzias, Srdjan Matic, Richard Rivera, and Juan Caballero. Certified PUP: Abuse in Authenticode Code Signing. In Proceedings of the 22nd ACM Conference on Computer and Communication Security, 2015.
[22] Christian Kreibich, Nicholas Weaver, Chris Kanich, Weidong Cui, and Vern Paxson. Gq: Practical containment for measuring modern malware systems. In Proceedings of the ACM SIGCOM Internet Measurement Conference, 2011.
[23] Bum Jun Kwon, Jayanta Mondal, Jiyong Jang, Leyla Bilge, and Tudor Dumitras. The Dropper Effect: Insights into Malware Distribution with Downloader Graph Analytics. In Proceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications Security, CCS ’15, pages 1118–1129, 2015.
[24] LavaSoft. LavaSoft affiliate program. http://affiliates.lavasoft.com/, 2016.
[25] Alexander Moshchuk, Tanya Bragin, Steven D. Gribble, and Henry M. Levy. A crawler-based study of spyware in the web. In Proceedings of the Network and Distributed System Security Symposium, NDSS 2006, San Diego, California, USA, 2006.
[26] Terry Nelms, Roberto Perdisci, Manos Antonakakis, and Mustaque Ahamad. Towards Measuring and Mitigating Social Engineering Malware Download Attacks. In Proceedings of the USENIX Security Symposium, 2016.
[27] Niels Provos. All about safe browsing. http://blog.chromium.org/2012/01/all-about-safe-browsing.html, 2012.
[28] Moheeb Abu Rajab. Year one: progress in the fight against unwanted software. https://googleonlinesecurity.blogspot.com/2015/12/year-one-progress-in-fight-against.html, 2015.
[29] Moheeb Abu Rajab, Lucas Ballard, Noé Lutz, Panayiotis Mavrommatis, and Niels Provos. Camp: Content-agnostic malware protection. In Proceedings of the Network and Distributed System Security Conference, 2013.
[30] Christian Rossow, Christian Dietrich, and Herbert Bos. Large-scale analysis of malware downloaders. In Detection of Intrusions and Malware, and Vulnerability Assessment: 9th International Conference, DIMVA 2012, Heraklion, Crete, Greece, July 26-27, 2012, Revised Selected Papers, pages 42–61, 2013.
[31] Ben Fox Rubin. Perion sees soaring 2014 earnings following merger. http://www.wsj.com/news/articles/SB10001424052702304815004579417252707242262, 2014.
[32] Stefan Saroiu, Steven D. Gribble, and Henry M. Levy. Measurement and analysis of spyware in a university environment. In Proceedings of the 1st Conference on Symposium on Networked Systems Design and Implementation - Volume 1, NSDI’04, pages 11–11, 2004.
[33] Kevin Stevens. The Underground Economy of the Pay-Per-Install (PPI) Business. http://www.secureworks.com/cyber-threat-intelligence/threats/ppi/, 2009.
[34] Kurt Thomas, Elie Bursztein, Chris Grier, Grant Ho, Nav Jagpal, Alexandros Kapravelos, Damon McCoy, Antonio Nappa, Vern Paxson, Paul Pearce, Niels Provos, and Moheeb Abu Rajab. Ad injection at scale: Assessing deceptive advertisement modifications. In Proceedings of the IEEE Symposium on Security and Privacy, 2015.
[35] TrendMicro. On the Actors Behind MEVADE/SEFNIT. http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-on-the-actors-behind-mevade-sefnit.pdf, 2014.
[36] VirusTotal. VirusTotal. https://www.virustotal.com/, 2016.
[37] China Internet Watch. Qihoo 360 launched its own affiliate network. http://www.chinainternetwatch.com/7960/qihoo-360-launched-its-own-affiliate-network/, 2014.
[38] Carsten Willems, Thorsten Holz, and Felix Freiling. Toward automated dynamic malware analysis using cwsandbox. In Proceedings of the IEEE Symposium on Security and Privacy, 2007.

---

This version of the text is more structured, coherent, and professional, with clear headings and improved readability.