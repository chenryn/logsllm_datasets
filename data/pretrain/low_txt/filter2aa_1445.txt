# Rooting macOS Big Sur on Apple Silicon

## Authors
- **Xinru Chi**
  - Security Researcher at Pangu Lab
  - Extensive experience in macOS/iOS vulnerability research
- **Tielei Wang**
  - Ph.D. from Peking University
  - Research Scientist at Georgia Tech (2011-2014)
  - Known for releasing jailbreak tools for iOS 7-9
  - Organizer of MOSEC (Mobile Security Conference)

## Introduction
The story begins with the security content of iOS 14.2, released on November 5, 2020. This update fixed an in-the-wild exploit reported by GP0, which was the first such exploit since the release of iOS 14. The vulnerabilities included:
- Safari Remote Code Execution (RCE) (CVE-2020-27930)
- Kernel information leak (CVE-2020-27950)
- Kernel type confusion (CVE-2020-27932)

### Kernel Analysis
- **iOS 12 Support**: Apple continues to maintain iOS 12 for older devices.
- **Updates Comparison**:
  - iOS 12.4.9: 4 CVEs
  - iOS 14.2: 26 CVEs
- **Kernel Information Leak**:
  - Multiple functions now include "bzero mach msg trailer."
  - This leak exposes uninitialized kernel memory from mach message trailers.
  - For more analysis, refer to:
    - [Synacktiv's Analysis](https://www.synacktiv.com/publications/ios-1-day-hunting-uncovering-and-exploiting-cve-2020-27950-kernel-memory-leak.html)
    - [Project Zero Issue #2108](https://bugs.chromium.org/p/project-zero/issues/detail?id=2108)

### Type Confusion
- **host_request_notification Function**: An extra check was added to the portâ€™s type.
- **Port Structure Analysis**: Understanding the differences between special reply ports and regular ports is crucial.

## Proof of Concept (PoC)
### Initial Attempts
- **Plan 1**: Create a special reply port and pass it to `host_request_notification` to trigger type confusion.
  - Result: No panic.
  - Consideration: Triggering the notification or deallocating the port might be necessary.

### Complications
- **Understanding Special Reply Ports**: Reading the XNU source code revealed the complexity of special reply ports.
- **Test Case Discovery**: A test case in the XNU source code package (`xnu/tests/prioritize_process_launch_helper.c`) provided insights.

### Customized Send
- **Customized Send Function**:
  - Send a `mach_port` via a complex `mach_message` to `send_port` with `reply_port`.
  - Key Points:
    - `msg_port` is sent with `MACH_MSG_TYPE_MOVE_RECEIVE`.
    - `mach_msg` uses the option `MACH_SEND_SYNC_OVERRIDE`.

### Successful PoC
- **Plan 2**: Create a special reply port, use it in the customized send function, pass it to `host_request_notification`, and then deallocate the port.
  - Result: This PoC triggered a panic.
  - References:
    - [Project Zero Issue #2107](https://bugs.chromium.org/p/project-zero/issues/detail?id=2107)
    - [Special Reply Port Analysis](https://worthdoingbadly.com/specialreply/)

## Further Analysis
### Additional Panics
- **Analysis of Panics**: More panics were discovered, regardless of `host_request_notification`.

### Magical Send
- **Key Observations**:
  - Sending a null port to `dst_port` using `special_reply_port` as the reply port.
  - Sending `special_reply_port` to itself, using itself as the reply port.
  - No panic occurred, but `dst_port` became inactive.

### Root Cause Analysis
- **Functions Involved**:
  - `ipc_kmsg_copyin_header`
  - `ipc_kmsg_copyin`
  - `mach_msg_overwrite_trap`
  - `ipc_kmsg_set_qos`
  - `ipc_port_link_special_reply_port`

- **Type Confusion**:
  - Using `special_reply_port` as the reply port and `MACH_SEND_SYNC_OVERRIDE` in `mach_msg` options leads to `ipc_port_link_special_reply_port`.

- **Port Struct Review**:
  - `io_bits`: Indicates the type of the port.
  - `io_references`: Reference counter of the port.
  - `kdata`: Union struct containing various fields.

- **Key Steps**:
  1. `msg_port` is sent with `MACH_MSG_TYPE_MOVE_RECEIVE`.
  2. Sending a port to itself triggers a circularity check.
  3. Destroying the `kmsg` leads to `msg_port` destruction.

### Consequences
- **Type Confusion Impact**:
  - Changing a port's type can lead to kobject type confusions, forming a large attack surface.
  - Example: Changing a voucher port to a userclient port.

- **PAC and Kobject Type Confusions**:
  - PAC does not directly prevent kobject type confusions but limits their scope.
  - Specific types may contain other PAC'ed fields, such as vtable pointers in userclient objects.

### Exploitability
- **Exploitation on Big Sur with Apple Silicon**:
  - Big Sur on Apple Silicon combines macOS features with iOS-like protections.
  - Target: Privileged ports available only to root.
  - Example: Changing a `vm_named_entry` to `host_security`.

- **Benefits**:
  - Ability to change task tokens through `host_security_set_task_token`.
  - Task tokens are used for mach message audit, containing critical information like PID/UID/GID.

- **Old-School Exploitation**:
  - `kuncd` service checks the `audit_token` in the mach message trailer.
  - By resetting the task's token with the kernel audit token, a terminal can be launched as root.

### Full Picture
- **Patch Analysis**:
  - `host_request_notification` patch.
  - Type confusion between `ipc_port` and `ipc_importance_task_t`.
  - Semi-arbitrary port type confusion.
  - Type confusion between `vm_named_entry` and `host_security_port`.
  - Forging arbitrary `audit_token`.
  - Launching a terminal via `kuncd`.

### Fix
- **Apple's Response**:
  - Added more checks on special reply ports in macOS 11.2.
  - Prohibited sending a special reply port with `MACH_MSG_TYPE_MOVE_RECEIVE`.

### Conclusion
- **Variant Analysis**: Reveals surprising findings.
- **Port Type Confusion**: Forms a large attack surface.
- **Data Type Confusion**: Survives even with PAC and MTE.

Thank you!