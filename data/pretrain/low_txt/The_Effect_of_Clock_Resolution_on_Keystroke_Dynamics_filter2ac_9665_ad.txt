# The Effect of Clock Resolution on Keystroke Dynamics

## 5. Experimental Results and Analysis

### 5.1 Equal-Error Rates at Different Clock Resolutions

**Figure 5** illustrates the equal-error rates (EER) of three detectors—Mean-Based, Nearest Neighbor, and Multilayer Perceptron (MLP)—as the clock resolution changes from fine to coarse. 

- **Panel (a)**: This panel depicts the minor but significant change in performance when transitioning from a high-resolution clock (1 ms) to typical 15 ms clocks. The EER for the Mean-Based and Nearest Neighbor detectors increases slightly, while the MLP detector shows no significant change, possibly due to its already poor performance.
- **Panel (b)**: This panel highlights the significant increase in EER when the clock resolution is between 50 ms and 300 ms. All three detectors show a sharp rise in EER, indicating that they are not robust to such low resolutions.
- **Panel (c)**: This panel characterizes the variation in detector performance over the full range of clock resolutions from 1 ms to 30 seconds. As the resolution becomes coarser, the EER approaches 0.5, which is the worst possible EER (equivalent to random guessing).

### 5.2 Detailed Analysis

#### Panel (a): Clock Resolutions of 0–15 ms
This panel examines the effect of clock resolutions in the range of 0–15 ms, which are common in practice (e.g., Windows and X11 event timestamps). The EER for the Mean-Based and Nearest Neighbor detectors increases slightly as the resolution degrades from 1 ms to 15 ms. The MLP detector, however, shows no significant change, possibly because it already performs poorly. On average, the EER is 4.2% higher with a 15 ms clock compared to a high-resolution clock. Although this loss may seem small, it is significant for keystroke dynamics, which requires near-perfect accuracy (1% false-alarm rate and 0.001% miss rate according to the European standard for access control [3]).

#### Panel (b): Clock Resolutions of 0–300 ms
This panel investigates the effect of clock resolutions beyond the 15 ms range. The EER for the Mean-Based and Nearest Neighbor detectors increases sharply after 50 ms, and all three detectors' EERs increase together after 150 ms. While such low-resolution clocks are not typically used for keystroke dynamics, this analysis suggests that these detectors are not robust to noise in the form of low clock resolution. A peak in the EER for the Mean-Based and Nearest Neighbor detectors is observed at 100 ms, which may be an artifact of the typing characteristics of the subjects and would require further investigation.

#### Panel (c): Clock Resolutions of 0–30 sec
This panel demonstrates the effect of very-low-resolution clocks on the EER. As the resolution becomes coarser, the EER for all three detectors tends towards 0.5, the theoretically worst possible EER. Surprisingly, even with a 1-second resolution, the EER is about 0.3, indicating that some discriminative information remains, albeit weakly. This suggests that key-hold times and digram intervals retain some discriminatory power even when expressed in whole seconds.

## 6. Discussion

### 6.1 Impact of Clock Resolution
Our findings indicate that clock resolution does affect the performance of keystroke-dynamics detectors. Using a high-resolution clock provides a slight performance boost, while typical 15 ms clocks increase the EER by an average of 4.2%. Detectors are not particularly robust to timing noise, especially at very low resolutions. However, the effect is small for typical clock resolutions seen in practice.

### 6.2 Future Directions
We identify two main takeaways from this study:

1. **Noise Reduction**: We should consider the potential deleterious effects of timing noise and aim to eliminate or account for it in future work. In the short term, we should carefully evaluate our timing mechanisms and report clock resolution.
2. **Controlled Experiments**: Even with high-resolution timestamps, our detectors' performance is less than ideal. Controlled experiments are necessary to reveal causal connections between experimental factors (e.g., password choice or practice) and detector performance. We speculate that controlled experiments will help identify immutable, intrinsically identifiable qualities in typing.

### 6.3 Future Work
We plan to conduct a survey of other detectors proposed in the literature to see if their performance remains poor on our data. Additionally, we suggest building detectors that rely on models of user typing, as proposed by Card et al. [2] and John [9], to potentially achieve better results.

## 7. Summary and Conclusion

This work investigates the effect of clock resolution on the performance of keystroke-dynamics detectors. We collected data at high resolution and derived data at lower resolutions. Our findings show that a high-resolution clock provides a slight performance boost, and typical 15 ms clocks increase the EER by 4.2%. Detectors are not robust to timing noise, and none achieved a practically useful level of performance. Controlled experimentation is essential for identifying causal factors and improving detector performance.

## 8. Acknowledgements

We thank Rachel Krishnaswami for her insightful comments and Patricia Loring for running the experiments. Fahd Arshad and Rob Reeder were responsible for the instrumentation. We also thank several anonymous reviewers for their feedback. This work was supported by National Science Foundation grants CNS-0430474 and CNS-0716677, and by the Army Research Office through grant DAAD19-02-1-0389.

## 9. References

[1] Bentley, J.L.: Multidimensional binary search trees used for associative searching. Communications of the ACM 18(9), 509–517 (1975)

[2] Card, S.K., Moran, T.P., Newell, A.: The keystroke-level model for user performance time with interactive systems. Communications of the ACM 23(7), 396–410 (1980)

[3] CENELEC. European Standard EN 50133-1: Alarm systems. Access control systems for use in security applications. Part 1: System requirements, Standard Number EN 50133-1:1996/A1:2002, Technical Body CLC/TC 79, European Committee for Electrotechnical Standardization (CENELEC) (2002)

[4] Cho, S., Han, C., Han, D.H., Kim, H.-I.: Web-based keystroke dynamics identity verification using neural network. Journal of Organizational Computing and Electronic Commerce 10(4), 295–307 (2000)

[5] Dodge, Y.: Oxford Dictionary of Statistical Terms. Oxford University Press, New York (2003)

[6] Forsen, G., Nelson, M., Staron Jr., R.: Personal attributes authentication techniques. Technical Report RADC-TR-77-333, Rome Air Development Center (October 1977)

[7] Gaines, R.S., Lisowski, W., Press, S.J., Shapiro, N.: Authentication by keystroke timing: Some preliminary results. Technical Report R-2526-NSF, RAND Corporation (May 1980)

[8] Hwang, B., Cho, S.: Characteristics of auto-associative MLP as a novelty detector. In: Proceedings of the IEEE International Joint Conference on Neural Networks, Washington, DC, July 10–16, 1999, vol. 5, pp. 3086–3091 (1999)

[9] John, B.E.: TYPIST: A theory of performance in skilled typing. Human-Computer Interaction 11(4), 321–355 (1996)

[10] Joyce, R., Gupta, G.: Identity authentication based on keystroke latencies. Communications of the ACM 33(2), 168–176 (1990)

[11] Keeney, M., Kowalski, E., Cappelli, D., Moore, A., Shimeall, T., Rogers, S.: Insider threat study: Computer system sabotage in critical infrastructure sectors. Technical report, U.S. Secret Service and CERT Coordination Center/SEI (May 2005), http://www.cert.org/archive/pdf/insidercross051105.pdf

[12] Limas, M.C., Meré, J.O., González, E.V., Martinez de Pisón Ascacibar, F.J., Espinoza, A.P., Elias, F.A.: AMORE: A MORE Flexible Neural Network Package (October 2007), http://cran.r-project.org/web/packages/AMORE/index.html

[13] Microsoft. Password checker (2008), http://www.microsoft.com/protect/yourself/password/checker.mspx

[14] Mount, D., Arya, S.: ANN: A Library for Approximate Nearest Neighbor Searching (2006), http://www.cs.umd.edu/~mount/ANN/

[15] Microsoft Developer Network. EVENTMSG structure (2008), http://msdn2.microsoft.com/en-us/library/ms644966(VS.85).aspx

[16] Microsoft Developer Network. QueryPerformanceCounter function (2008), http://msdn2.microsoft.com/en-us/library/ms644904(VS.85).aspx

[17] Peacock, A., Ke, X., Wilkerson, M.: Typing patterns: A key to user identification. IEEE Security and Privacy 2(5), 40–47 (2004)

[18] R Development Core Team. R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing, Vienna, Austria (2008)

[19] Sheng, Y., Phoha, V., Rovnyak, S.: A parallel decision tree-based method for user authentication based on keystroke patterns. IEEE Transactions on Systems, Man, and Cybernetics 35(4), 826–833 (2005)

[20] Swets, J.A., Pickett, R.M.: Evaluation of Diagnostic Systems: Methods from Signal Detection Theory. Academic Press, New York (1982)

[21] PC Tools. Security guide for windows—random password generator (2008), http://www.pctools.com/guides/password/