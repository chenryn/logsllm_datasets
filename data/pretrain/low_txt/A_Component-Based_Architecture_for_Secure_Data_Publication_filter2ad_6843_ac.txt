### 优化后的文本

#### 限制条件与授权的结合使用
仅使用授权（authorizations）可能无法达到预期的效果。事实上，通过分析多个合作伙伴的规范，我们发现通常会以限制性形式（restrictive form）而非包容性正面形式来表述访问限制。限制性形式指的是规定必须满足某些条件才能授予访问权限的规则，如果至少有一个条件不满足，则不应授予访问权限。例如，一条规则可以规定“只有公民才能访问数据集1”。这种限制不能简单地表示为一个授权，即“公民被授权访问”。虽然单个授权能够带来期望的行为，但与其他授权结合时可能导致约束不再满足。

通过结合使用授权和限制，可以更好地支持这两种需求：限制指定了排他性的“仅当”形式的要求，而授权则指定了传统的“如果”形式的要求。直观上，限制的作用类似于现代访问控制系统中支持的负面授权（denials），其中条件是否定的。然而，我们决定引入限制，因为它们的格式更接近于所检查政策中的保护要求的直观表述。此外，由于限制将适用主体与这些主体必须满足的必要条件明确分开（而在传统方法中，这两者会被合并到一个字段中 [9]），因此更容易理解。

图5展示了一些保护要求及其对应的ACU规则示例。第一条规则规定，所有具有学术项目的用户可以在支付访问费用后访问受限数据集。第二条规则规定，学术用户可以在接受标准条件文档后访问受限数据集。最后，第三条规则规定，所有欧洲用户只能在调查标记为“可下载”时下载国家调查数据。

#### 访问控制机制
前一节的讨论已经明确了访问控制的工作原理。对于一个访问请求，系统会评估所有适用的授权和限制（即请求的主体、对象和操作满足规则中相应表达式的那些）。如果请求满足所有限制条件并且至少满足一个授权条件，则请求被授予。在评估动态条件时需要特别注意：如果某些动态条件未满足，系统不应失败，而应提示用户查看是否可以满足这些条件。本节我们将说明如何处理动态条件。

为了固定概念并使讨论清晰，请考虑图5中的访问规则。假设有一个由欧洲用户提交的访问请求，该用户属于学术社区组，并且拥有学术项目。对于这个请求，系统会收集所有适用的规则，并将它们的条件组合成一个全局条件 (cid:4)。具体来说，(cid:4) 是所有“仅当”条件（来自限制）的合取与所有“如果”条件（来自授权）的析取的合取。在这个例子中，(cid:4) 表达式如下：

```
(cid:1)
and
(cid:2)
metadata/downloadable="yes"
payment(user,Restricted Datasets) agreement(user,SCD)
```

ACU 通过尽可能将叶子节点评估为真或假来简化 (cid:4)；动态条件可能评估为空值。然后，(cid:4) 使用布尔代数中的真和假进行简化。例如，如果 `metadata/downloadable = yes` 为假，则 (cid:4) 将被简化为假，访问将被拒绝；如果 `metadata/downloadable = yes` 为真且其中一个动态谓词为真，则 (cid:4) 将被简化为真，请求的文件将立即被下载。

假设 `metadata/downloadable = yes` 为真，而 `payment(user,Restricted Datasets)` 和 `agreement(user,SCD)` 为空值，这意味着用户尚未签署标准条件文档且尚未支付受限调查的费用。此时，(cid:4) 将被简化为：

```
(cid:1)
or
(cid:2)
payment(user,Restricted Datasets) agreement(user,SCD)
```

这个称为剩余条件的表达式无法进一步简化，也无法评估为真。因此，请求的调查数据不能立即下载。直观上，用户可以通过满足剩余条件来执行请求的操作。为了引导用户完成这一过程，访问控制单元将剩余条件传递给顾问模块（见第5节），该模块根据剩余条件向用户显示一个动态页面。例如，在我们的例子中，顾问模块可以返回以下消息：

- 签署协议
- 支付此次访问费用

下划线部分是超链接，指向进一步的动态页面用于在线协议签署和支付。用户可以选择放弃或点击上述链接之一来完成请求。

每个动态谓词都关联了一组动作（通过顾问模块触发），这些动作可能会更新配置数据库（例如，记录某个协议已签署，以便不必再次向用户呈现相同的协议），并通过电子邮件通知用户或其他人员。后者在启动手动程序时非常有用。动作执行后，动态谓词的评估结果可能为真（例如，支付过程成功结束）或假（例如，需要手动支付过程；在这种情况下，支付动作可以启动支付过程，通过向用户提供所有指令并发送电子邮件通知管理员）。

#### 规范与架构设计
本文介绍的模型已在欧盟资助的FASTER项目（www.faster-data.org）框架内实现为ACU组件。图6展示了提供ACU粗粒度内部分解的基本软件模块。ACU封装了对单个数据集访问权限计算的全部内容，对于每个请求，返回是否授予访问的决定。内部的主要步骤如下：

- **请求**：为了方便起见，我们将前端对数据集请求的反应建模为创建一个临时的ACU Main对象。ACU Main只是一个调度器，处理所有必要的通信以检查权限。
- **用户档案和访问规则识别**：ACU Main模块与用户及项目管理器和条件管理器交互，这两个模块都是数据中介，封装了识别适用访问规则所需的信息（即用户/组和条件/策略数据库）。使用快速读取的内存结构将主体链接到授权以提高速度。
- **最终决策计算与通知**：从中介获取适用于请求者的访问规则数据后，ACU计算最终决策，决定是否授予或拒绝访问。如果所需的访问条件已经为真，则立即允许访问，不会触发对话。如果没有任何指定条件可以满足，则不会触发对话，访问被拒绝。否则，触发顾问模块控制与用户的对话。
- **用户对话**：对话由顾问模块根据现行的访问策略控制。

我们介绍了访问控制单元（ACU）的架构，这是一个自主软件组件，提供了接口来控制Web信息服务框架中的数据存档访问。我们的组件设计使其适合集成到各种Web架构中。目前基于Java Servlet的原型已经在Windows NT/IIS 4.0环境下运行，并使用JRUN作为Servlet引擎。未来的工作包括扩展该方法以考虑数字证书。

#### 参考文献
[1] S. Abiteboul, P. Buneman, and D. Suciu. Data on the Web: From Relations to Semistructured Data and XML. Academic Press/Morgan Kaufmann, 1999.
[2] P. Bonatti, E. Damiani, S. De Capitani di Vimercati, and P. Samarati. An access control system for data archives. In Proc. of the 16th International Conference on Information Security, Paris, France, June 2001.
[3] P. Bonatti, S. De Capitani di Vimercati, and P. Samarati. A modular approach to composing access control policies. In Proc. of Seventh ACM Computer and Communication Security, pages 164–173, Athens, Greece, November 2000.
[4] P. Bonatti and P. Samarati. Regulating service access and information release on the web. In Proc. of the Seventh ACM Conference on Computer and Communications Security, pages 134–143, Athens, Greece, 2000.
[5] S. Castano, M.G. Fugini, G. Martella, and P. Samarati. Database Security. Addison-Wesley, 1995.
[6] Communications of the ACM, volume 41, April 1998.
[7] E. Damiani, S. De Capitani di Vimercati, S. Paraboschi, and P. Samarati. Design and implementation of an access control processor for XML documents. Computer Networks, 33(1–6):59–75, June 2000.
[8] E. Damiani, S. De Capitani di Vimercati, S. Paraboschi, and P. Samarati. A fine-grained access control system for XML documents. ACM Transactions on Information and System Security, 2002. To appear.
[9] S. Jajodia, P. Samarati, M.L. Sapino, and V.S. Subrahmanian. Flexible supporting for multiple access control policies. ACM Transactions on Database Systems, 2000. To appear.
[10] M. Kudo and S. Hada. XML Document Security based on Provisional Authorization. In Proc. of the Seventh ACM Conference on Computer and Communication Security, pages 87–96, November 2000.
[11] P. Samarati and S. Jajodia. Data security. In J.G. Webster, editor, Wiley Encyclopedia of Electrical and Electronics Engineering. John Wiley & Sons, February 1999.
[12] The data documentation book DTD - http://www.icpsr.umich.edu/DDI/CODEBOOK.TXT. version initiative 1.0, March 2000.
[13] B. Thuraisingham, S. Jajodia, P. Samarati, J. Dobson, and M. Olivier. Privacy issues in www and data mining: Panel discussion. In S. Jajodia, editor, Database Security XII - Status and Prospects. Kluwer, 1999.
[14] L. Willenborg and T. de Waal. Statistical Disclosure Control Practice. Springer Verlag, 1996.
[15] M. Winslett, N. Ching, V. Jones, and I. Slepchin. Using digital credentials on the World-Wide Web. Journal of Computer Security, 5(3):255–267, 1997.
[16] World Wide Web Consortium (W3C). XML Path Language (XPath) Version 1.0, November 1999. http://www.w3.org/TR/xpath.