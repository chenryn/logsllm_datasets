### How to Train Your RFID Tools

**Presenter: Craig Young**
- **Role:** Security Researcher at Tripwire VERT
- **About Craig:**
  - Security Researcher at Tripwire VERT
  - Author of IP360 content and original research
  - Identified over 100 CVEs in 2013 and 2014
  - Won 1st place at SOHOpelessly Broken @ DC22 using 10 zero-day vulnerabilities

**Research Objectives:**
- Shed light on the tools for reading, cloning, and emulating RFID tags.
- Provide tutorial-like examples for firmware hacking.
- Explore practical attacks enhanced by 3D printing.
- Design an antenna around a 3D printed form.
- Identify uses of paired embedded kits.

**Roadmap:**
1. Tool Introductions
2. 3D Printing 101
   - Caveats
3. RFID Basics
   - Tips & Tricks
4. Firmware Hacking
   - Adding to Proxmark
5. 3D Printing Usage
   - Antenna Design
   - Concealing Devices
6. Q&A

### Tool Introductions

- **CubePro 3D Printer**
- **NFC USB (PN533)**
- **RFIDler v22**
- **Proxmark3**
- **Raspberry Pi**
- **USB Armory**

### RFID Tools

- **CubePro 3D Printer**
- **NFC USB (PN533)**
- **RFIDler v22**
- **Proxmark3**
- **Raspberry Pi**
- **USB Armory**

### Computing Tools

- **CubePro 3D Printer**
- **NFC USB (PN533)**
- **RFIDler v22**
- **Proxmark3**
- **Raspberry Pi**
- **USB Armory**

### Fabrication Tools

- **CubePro 3D Printer**
- **NFC USB (PN533)**
- **RFIDler v22**
- **Proxmark3**
- **Raspberry Pi**
- **USB Armory**

### Proxmark3 Introduction

- **Origin:** Adopted from Gerhard de Koning Gans' thesis.
- **Purpose:** Analyzing Mifare transit cards.
- **System:** Combines a cheap FPGA and ARM CPU.
- **Features:**
  - Completely open-source hardware and software.
  - Supports Low and High Frequency.
  - **FPGA:** Xilinx Spartan-II Field-Programmable Gate Array.
    - Written in Verilog for ISE WebPACK.
    - Serial Peripheral Interface (SPI).
    - Coil driver.
    - Analogue/Digital Converters.
    - Synchronous Serial Port to CPU.
    - Module-based design with modes specifying module connections.
  - **CPU:** ATMEL 32-bit RISC Processor (AT91SAM7Sxx Series).
    - Coded in C.
    - Handles data from FPGA, encoding/decoding bitstream, and USB data link.
    - Runs all high-level functions.
  - **ADC:** TI TLC 5540 analog-to-digital converter (ADC).
    - 8-bit resolution.
    - 40 Megasamples/sec (MSPS).
    - Analog input from coil.
    - 8-pin output to FPGA.
    - Control via SPI.
  - **Connectors:**
    - Mini-USB: Provides power and data connection via USB-Serial.
    - Hirose Connector: Connection to antenna coils (2 wires for LF and 2 for HF).
  - **Human I/O:**
    - Single push button: Controls PM3 without serial, terminates active operations, initiates firmware update.
    - Colored LEDs (4 total): Indicate boot mode and stand-alone status.

### Proxmark Commands

- `lf search` & `hf search`: Attempt to auto-ID a tag.
- `hf 14a reader`: Interrogate ISO14443a Tag.
- `lf read; data samples`: Grab LF tag waveform.
- `hf mf mifare; hf mf nested`: Mifare Classic Attack.

### PN533 NFC USB Introduction

- **Chipset:** NXP for Near Field Communications.
- **Standards:**
  - ISO 14443 standards.
  - MIFARE Family (ISO/IEC 14443A).
  - NFC Forum Type 4 Tag 2.0 (ISO/IEC 14443B).
  - Sony Felicity Tags (FeliCa reader/writer).
  - Peer-to-Peer Data Transfer (ISO/IEC 18092).
  - libNFC Compatible.

### PN533 Commands

- `nfc-list`: Basic Tag Enumeration.
- `nfc-emulate-*`: Emulate various tags.
- `nfc-mf*`: Work with Mifare family tags.
- `nfc-relay`: Use 2 devices to perform a relay attack.
- Additional functionality via scripting.

### RFIDler Introduction

- **Capabilities:** 125kHz-134kHz ASK and FSK reading and emulation.
- **Version:** V22 Beta obtained at DEF CON 22.
- **Components:**
  - Digital POTs for threshold tuning.
  - USB Serial Interface.
  - LED indicators.
  - PIC32 for main processing.
  - USB Powered.

### RFIDler Commands

- `AUTOTAG`: Demodulate tag as each known type.
- `SET TAG`: Switch between tag formats.
- `POTSET`: Adjust potentiometer thresholds.
- `READER`: Real-time demodulation/decoding.

### The ChameleonMini

- **Developed by:** Chair for Embedded Security, Ruhr-University Bochum, Germany.
- **Compliance:** ISO14443 and ISO15693 compliant emulator.
- **Features:**
  - Simulates contactless smartcards with hardware.
  - Creates perfect virtualized clones of a tag.
- **Availability:** Started shipping from RyscCorp in July (hot off the press).

### Raspberry Pi & USB Armory

- **Embedded ARM Development Kit:**
  - SD Card Storage.
  - USB Power & Data.
  - Thumb-drive ARM computer.
  - USB Host or Guest via OTG.
  - MicroSD Storage.

### 3D Printer Introduction

- **Model:** CubePro with 70, 200, or 300 micron layer options.
- **Materials:** ABS and PLA support, with Nylon 'coming soon'.
- **Build Volume:** 11.2” x 10.6” x 9.06”.
- **Print Jets:** Up to 3 for complex builds.

### 3D Printing Steps

1. 3D CAD model is sliced by CubePro software into layers.
2. Build plate receives a coating of water-soluble glue.
3. Gears feed filament into extruder moving on X & Y.
4. Extruder moves on X and Y; plate moves on Z for layers.
5. Glue dissolves in water, and the model can be pried away.

### 3D Printing Caveats

- Calibration can be time-consuming and tricky.
- Extruders prone to jams/clogs.
- Industrial design is challenging.
- Physical limitations and materials science.

### RFID Basics

- **Low-Frequency (LF):** 125kHz – 134kHz
  - Access Control Proximity Cards: HID, Indala, AWID, etc.
  - Pet chips / implantable: AVID, Fecava, ISO 11784/11785.
- **High-Frequency (HF):** 13.56MHz
  - Access control: HID iCLASS, NXP Mifare family.
  - NFC: Contactless payment, Bluetooth pairing, etc.
  - IDs: ePA (German ID card), passports, etc.

### What’s in an RFID Tag?

- Tuned coil + LC = Passive RFID Tag