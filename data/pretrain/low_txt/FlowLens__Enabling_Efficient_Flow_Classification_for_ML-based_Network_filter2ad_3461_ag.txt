### Flow Sampling and Monitoring

General monitoring systems, such as OpenSample [77] and Planck [65], often implement sampling to manage network traffic. Canini et al. [17] introduced a per-flow measurement technique that relies on partial sampling. However, the accuracy of these sampling techniques tends to decrease when aiming for a faithful representation of flow distribution [39]. Additionally, increasing the sample rate can lead to a larger memory footprint, which may negatively impact overall network performance [30].

### Probabilistic Data Structures and Sketches

Probabilistic data structures, known as sketches, enable the error-bounded representation of flow statistics within restrictive memory limits [88]. While multiple sketches can extract coarse-grained features of flows [21, 86, 39, 43, 31, 85, 32], their general nature hinders the recording of fine-grained information, such as approximations of packet lengths and timing distributions. For example, NetWarden [82] uses sketches to record approximate distributions of inter-packet timing for specific security tasks. In contrast, FlowLens is broadly applicable to a range of machine learning (ML)-based applications. Coskun et al. [22] and Nasr et al. [55] explore additional methods for compressing packet distributions using linear projections. Unfortunately, these techniques are not efficiently implementable in current switching hardware.

### Network Query Refinement

Recent systems, such as Turboflow [73] and *Flow [74], rely on network query refinement [54] to offload simple packet features to servers for aggregation and processing. This approach, however, may increase the risk of network congestion and introduce scalability bottlenecks in large networks [41, 87], unlike FlowLens.

### Conclusions

This work introduces FlowLens, the first traffic analysis system for ML-based security applications that collects and analyzes compact representations of flow packet distributions—referred to as flow markers—within programmable switches. We evaluated FlowLens for three use cases: detection of network covert channels, website fingerprinting, and botnet chatter detection. FlowLens accurately predicts these classes of traffic flows with compact flow markers, reducing the memory footprint by one to two orders of magnitude compared to traditional methods.

### Acknowledgments

We thank the anonymous reviewers for their insightful comments. This work was partially supported by national funds through Fundação para a Ciência e a Tecnologia (FCT) via the SFRH/BD/136967/2018 grant, and the PTDC/EEI-COM/29271/2017, UIDB/50021/2020, and PTDC/CCI-INF/30340/2017 (uPVN) projects.

### References

[1] J. Aiken and S. Scott-Hayward, “Investigating adversarial attacks against network intrusion detection systems in SDNs,” in Proceedings of the Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN), Dallas, TX, USA, November 2019, pp. 1–7.

[2] B. Anderson and D. McGrew, “Identifying encrypted malware traffic with contextual flow data,” in Proceedings of the 2016 ACM workshop on artificial intelligence and security, Vienna, Austria, October 2016, pp. 35–46.

[3] G. Apruzzese, M. Colajanni, L. Ferretti, and M. Marchetti, “Addressing adversarial attacks against security systems based on machine learning,” in 2019 11th International Conference on Cyber Conflict, vol. 900, Tallinn, Estonia, May 2019, pp. 1–18.

[4] Barefoot Networks, Tofino Switch, https://www.barefootnetworks.com/products/brief-tofino/, accessed: 2021-01-05.

[5] ——, P4 Studio, https://www.barefootnetworks.com/products/brief-p4-studio/, accessed: 2021-01-05.

[6] D. Barradas, N. Santos, and L. Rodrigues, “Deltashaper: Enabling unobservable censorship-resistant TCP tunneling over videoconferencing streams,” in Proceedings on Privacy Enhancing Technologies, Minneapolis, MN, USA, July 2017, pp. 5–22.

[7] ——, “Effective detection of multimedia protocol tunneling using machine learning,” in Proceedings of the 27th USENIX Security Symposium, Baltimore, MD, USA, August 2018, pp. 169–185.

[8] D. Barradas and S. Signorello, “FlowLens code repository,” https://github.com/dmbb/FlowLens, 2020, accessed: 2021-01-05.

[9] J. Bergstra, R. Bardenet, Y. Bengio, and B. Kégl, “Algorithms for hyper-parameter optimization,” Advances in Neural Information Processing Systems, pp. 2546–2554, 2011.

[10] J. Bergstra, D. Yamins, and D. Cox, “Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures,” in Proceedings of the 30th International Conference on Machine Learning, Atlanta, GA, USA, June 2013, pp. 115–123.

[11] B. Biggio, G. Fumera, and F. Roli, “Multiple classifier systems for robust classifier design in adversarial environments,” International Journal of Machine Learning and Cybernetics, vol. 1, no. 1-4, pp. 27–41, 2010.

[12] P. Bosshart, D. Daly, G. Gibb, M. Izzard, N. McKeown, J. Rexford, C. Schlesinger, D. Talayco, A. Vahdat, G. Varghese, and D. Walker, “P4: Programming protocol-independent packet processors,” ACM SIGCOMM Computer Communication Review, vol. 44, no. 3, pp. 87–95, July 2014.

[13] P. Bosshart, G. Gibb, H.-S. Kim, G. Varghese, N. McKeown, M. Izzard, F. Mujica, and M. Horowitz, “Forwarding metamorphosis: Fast programmable match-action processing in hardware for SDN,” ACM SIGCOMM Computer Communication Review, vol. 43, no. 4, pp. 99–110, 2013.

[14] Broadcom, Tomahawk II 6.4Tbps Ethernet Switch, https://www.broadcom.com/news/product-releases/broadcom-first-to-deliver-64-ports-of-100ge-with-tomahawk-ii-ethernet-switch, accessed: 2021-01-05.

[15] S. Calzavara, C. Lucchese, and G. Tolomei, “Adversarial training of gradient-boosted decision trees,” in Proceedings of the 28th ACM International Conference on Information and Knowledge Management, Beijing, China, November 2019, pp. 2429–2432.

[16] S. Calzavara, C. Lucchese, G. Tolomei, S. Abebe, and S. Orlando, “Treant: Training evasion-aware decision trees,” Data Mining and Knowledge Discovery, pp. 1–31, 2020.

[17] M. Canini, D. Fay, D. Miller, A. Moore, and R. Bolla, “Per flow packet sampling for high-speed network monitoring,” in Proceedings of the First IEEE International Communication Systems and Networks and Workshops, Chennai, India, December 2009, pp. 1–10.

[18] C. Cascaval and D. Daly, P4 Architectures, https://p4.org/assets/p4-ws-2017-p4-architectures.pdf, accessed: 2021-01-05.

[19] S. Chole, A. Fingerhut, S. Ma, A. Sivaraman, G. Zhang, “Sketchvisor: Robust network measurement for software packet processing,” in Proceedings of the Conference of the ACM Special Interest Group on Data Communication, August 2017, pp. 113–126.

[20] Cisco, Cisco Encrypted Traffic Analytics Whitepaper, https://www.cisco.com/c/dam/en/us/solutions/collateral/enterprise-networks/enterprise-network-security/nb-09-encrytd-traf-anlytcs-wp-cte-en.pdf, accessed: 2021-01-05.

[21] G. Cormode and S. Muthukrishnan, “What’s new: Finding significant differences in network data streams,” IEEE/ACM Transactions on Networking, vol. 13, no. 6, pp. 1219–1232, 2005.

[22] B. Coskun and N. Memon, “Online sketching of network flows for real-time stepping-stone detection,” in Proceedings of the IEEE Annual Computer Security Applications Conference, Honolulu, HI, USA, December 2009, pp. 473–483.

[23] N. Duffield, C. Lund, and M. Thorup, “Estimating flow distributions from sampled flow statistics,” in Proceedings of the SIGCOMM Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, 2003, pp. 325–336.

[24] P. I. Frazier, “A tutorial on Bayesian optimization,” arXiv preprint arXiv:1807.02811, 2018.

[25] K. Grosse, P. Manoharan, N. Papernot, M. Backes, and P. McDaniel, “On the (statistical) detection of adversarial examples,” arXiv preprint arXiv:1702.06280, 2017.

[26] J. Gu, J. Wang, Z. Yu, and K. Shen, “Walls have ears: Traffic-based side-channel attack in video streaming,” in Proceedings of the IEEE Conference on Computer Communications, Honolulu, HI, USA, April 2018, pp. 1538–1546.

[27] R. Habeeb, F. Nasaruddin, A. Gani, I. Hashem, E. Ahmed, and M. Imran, “Real-time big data processing for anomaly detection: A survey,” International Journal of Information Management, vol. 45, pp. 289–307, 2019.

[28] M. Hall, E. Frank, G. Holmes, B. Pfahringer, P. Reutemann, and I. Witten, “The Weka data mining software: An update,” ACM SIGKDD Explorations Newsletter, vol. 11, no. 1, pp. 10–18, 2009.

[29] D. Herrmann, R. Wendolsky, and H. Federrath, “Website fingerprinting: Attacking popular privacy enhancing technologies with the multinomial naïve-Bayes classifier,” in Proceedings of the ACM Workshop on Cloud Computing Security, Chicago, IL, USA, November 2009, pp. 31–42.

[30] Q. Huang, X. Jin, P. Lee, R. Li, L. Tang, Y.-C. Chen, and S. Orlando, “Treant: Training evasion-aware decision trees,” Data Mining and Knowledge Discovery, pp. 1–31, 2020.

[31] Q. Huang, P. Lee, and Y. Bao, “Sketchlearn: Relieving user burdens in approximate measurement with automated statistical inference,” in Proceedings of the Conference of the ACM Special Interest Group on Data Communication, Budapest, Hungary, August 2018, pp. 576–590.

[32] N. Ivkin, Z. Yu, V. Braverman, and X. Jin, “Qpipe: Quantiles sketch fully in the data plane,” in Proceedings of the 26th Network and Distributed System Security Symposium, San Diego, CA, USA, February 2019.

[39] Y. Li, R. Miao, C. Kim, and M. Yu, “FlowRadar: A scalable and accurate flow monitoring system,” in Proceedings of the 26th Network and Distributed System Security Symposium, San Diego, CA, USA, February 2019.

[41] M. Malboubi, L. Wang, C.-N. Chuah, and P. Sharma, “Intelligent SDN-based traffic (de)aggregation and measurement paradigm (ISTAMP),” in Proceedings of the IEEE Conference on Computer Communications, Toronto, Canada, April 2014, pp. 934–942.

[46] R. McPherson, A. Houmansadr, and V. Shmatikov, “CovertCast: Using live streaming to evade internet censorship,” Proceedings on Privacy Enhancing Technologies, vol. 2016(3), pp. 212–225, 2016.

[47] Y. Meidan, M. Bohadana, Y. Mathov, Y. Mirsky, A. Shabtai, D. Breitenbacher, and Y. Elovici, “N-BaIoT—Network-based detection of IoT botnet attacks using deep autoencoders,” IEEE Pervasive Computing, vol. 17, no. 3, pp. 12–22, 2018.

[48] R. Meier, P. Tsankov, V. Lenders, L. Vanbever, and M. Vechev, “NetHide: Secure and practical network topology obfuscation,” in Proceedings of the 27th USENIX Security Symposium, Baltimore, MD, USA, August 2018, pp. 693–709.

[49] D. Meng and H. Chen, “Magnet: A two-pronged defense against adversarial examples,” in Proceedings of the ACM SIGSAC conference on computer and communications security, Dallas, TX, USA, October 2017, pp. 135–147.

[50] R. Miao, H. Zeng, C. Kim, J. Lee, and M. Yu, “SilkRoad: Making stateful layer-4 load balancing fast and cheap using switching ASICs,” in Proceedings of the Conference of the ACM Special Interest Group on Data Communication, Los Angeles, CA, USA, August 2017, pp. 15–28.

[51] M. Moshref, M. Yu, R. Govindan, and A. Vahdat, “Dream: Dynamic resource allocation for software-defined measurement,” ACM SIGCOMM Computer Communication Review, vol. 44, no. 4, pp. 419–430, 2015.

[52] P. Narang, S. Ray, C. Hota, and V. Venkatakrishnan, “PeerShark: Detecting peer-to-peer botnets by tracking conversations,” in Proceedings of the IEEE Security and Privacy Workshops, San Jose, CA, USA, May 2014, pp. 108–115.

[53] S. Narayana, A. Sivaraman, V. Nathan, P. Goyal, V. Arun, M. Alizadeh, V. Jeyakumar, and C. Kim, “Language-directed hardware design for network performance monitoring,” in Proceedings of the Conference of the ACM Special Interest Group on Data Communication, Los Angeles, CA, USA, August 2017, pp. 85–98.

[54] M. Nasr, A. Houmansadr, and A. Mazumdar, “Compressive traffic analysis: A new paradigm for scalable traffic analysis,” in Proceedings of the ACM SIGSAC Conference on Computer and Communications Security, Dallas, TX, USA, October 2017, pp. 2053–2069.

[55] NetFlow, https://www.ietf.org/rfc/rfc3954.txt, accessed: 2021-01-05.

[56] P. Ngatchou, A. Zarei, and A. El-Sharkawi, “Pareto multi-objective optimization,” in Proceedings of the 13th International Conference on Intelligent Systems, 2006.