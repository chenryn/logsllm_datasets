### Bulletproofs for Proving Knowledge of \( x \) such that \( H(x) = y \) for Different Sized \( x \)

The first seven rows in the provided data correspond to the Pedersen hash function, while the last row pertains to SHA256. The term "batch" refers to the marginal cost of verifying an additional proof.

#### Figure 1: Timings for Arithmetic Circuits (Pedersen Hashes)
- **Proving Time**
- **Verification Time**
- **Batch Verification Time**

| Number of Multiplication Gates | 32 | 128 | 512 | 2048 | 8192 |
|--------------------------------|----|-----|-----|------|------|
| Proving Time (ms)              | 1.69 | 2.47 | 3.21 | 4.74 | 8.04 |
| Verification Time (ms)         | 13.1 | 21.8 | 39.1 | 69.2 | 127.3 |
| Batch Verification Time (ms)   | 235.7 | 439.9 | 725.1 | 1270.2 | 2318.3 |

### References
1. B. Bünz, J. Bootle, D. Boneh, A. Poelstra, P. Wuille, and G. Maxwell, “Bulletproofs: Short proofs for confidential transactions and more,” Cryptology ePrint Archive, Report 2017/1066, 2017, [https://eprint.iacr.org/2017/1066](https://eprint.iacr.org/2017/1066).
2. G. Maxwell, “Confidential transactions,” [https://people.xiph.org/greg/confidential_values.txt](https://people.xiph.org/greg/confidential_values.txt), 2016.
3. A. Poelstra, A. Back, M. Friedenbach, G. Maxwell, and P. Wuille, “Confidential assets.”
4. E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza, “SNARKs for C: Verifying program executions succinctly and in zero knowledge,” in CRYPTO, 2013.
5. R. Gennaro, C. Gentry, B. Parno, and M. Raykova, “Quadratic span programs and succinct NIZKs without PCPs,” in Advances in Cryptology - EUROCRYPT 2013, 2013, pp. 626–645, [https://doi.org/10.1007/978-3-642-38348-9_37](https://doi.org/10.1007/978-3-642-38348-9_37).
6. E. Ben-Sasson, I. Ben-Tov, Y. Horesh, and M. Riabzev, “Scalable, transparent, and post-quantum secure computational integrity,” 2018, [https://eprint.iacr.org/2018/046.pdf](https://eprint.iacr.org/2018/046.pdf).
7. J. Bootle, A. Cerulli, P. Chaidos, J. Groth, and C. Petit, “Efficient zero-knowledge arguments for arithmetic circuits in the discrete log setting,” in Annual International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 2016, pp. 327–357.
8. A. Poelstra, “Mimblewimble.”
9. B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio: Nearly practical verifiable computation,” in Security and Privacy (SP), 2013 IEEE Symposium on. IEEE, 2013, pp. 238–252.
10. J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W. Felten, “Research Perspectives and Challenges for Bitcoin and Cryptocurrencies,” IEEE Symposium on Security and Privacy, 2015, [http://www.jbonneau.com/doc/BMCNKF15-IEEESP-bitcoin.pdf](http://www.jbonneau.com/doc/BMCNKF15-IEEESP-bitcoin.pdf).
11. T. P. Pedersen et al., “Non-interactive and information-theoretic secure verifiable secret sharing,” in Crypto, vol. 91, no. 7. Springer, 1991, pp. 129–140.
12. G. Maxwell and A. Poelstra, “Borromean ring signatures,” [http://diyhpl.us/~bryan/papers2/bitcoin/Borromean%20ring%20signatures.pdf](http://diyhpl.us/~bryan/papers2/bitcoin/Borromean%20ring%20signatures.pdf), 2015.
13. S. Noether, A. Mackenzie et al., “Ring confidential transactions,” Ledger, vol. 1, pp. 1–18, 2016.
14. G. Maxwell, “CoinJoin: Bitcoin privacy for the real world,” [bitcointalk.org], August 2013.
15. O. Andreev, “Hidden in Plain Sight: Transacting Privately on a Blockchain,” blog.chain.com, 2017.
16. T. Jedusor, “Mimblewimble,” 2016.
17. G. Dagher, B. Bünz, J. Bonneau, J. Clark, and D. Boneh, “Provisions: Privacy-preserving proofs of solvency for Bitcoin exchanges (full version),” IACR Cryptology ePrint Archive, Tech. Rep., 2015.
18. J. Furukawa and K. Sako, “An efficient scheme for proving a shuffle,” in Crypto, vol. 1. Springer, 2001, pp. 368–387.
19. C. A. Neff, “A verifiable secret shuffle and its application to e-voting,” in Proceedings of the 8th ACM conference on Computer and Communications Security. ACM, 2001, pp. 116–125.
20. D. Chaum, “Blind signatures for untraceable payments,” in CRYPTO, 1982.
21. J. Groth, “A verifiable secret shuffle of homomorphic encryptions,” in Public Key Cryptography, vol. 2567. Springer, 2003, pp. 145–160.
22. J. Groth and Y. Ishai, “Sub-linear zero-knowledge argument for correctness of a shuffle,” Advances in Cryptology–EUROCRYPT 2008, pp. 379–396, 2008.
23. S. Bayer and J. Groth, “Efficient zero-knowledge argument for correctness of a shuffle,” in Annual International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 2012, pp. 263–280.
24. S. Bowe, A. Gabizon, and M. D. Green, “A multi-party protocol for constructing the public parameters of the Pinocchio zk-SNARK,” IACR Cryptology ePrint Archive, vol. 2017, p. 602, 2017, [http://eprint.iacr.org/2017/602](http://eprint.iacr.org/2017/602).
25. G. Wood, “Ethereum: A secure decentralized transaction ledger,” [http://gavwood.com/paper.pdf](http://gavwood.com/paper.pdf), 2014.
26. A. Kosba, A. Miller, E. Shi, Z. Wen, and C. Papamanthou, “Hawk: The blockchain model of cryptography and privacy-preserving smart contracts,” in Security and Privacy (SP), 2016 IEEE Symposium on. IEEE, 2016, pp. 839–858.
27. P. McCorry, S. F. Shahandashti, and F. Hao, “A smart contract for boardroom voting with maximum voter privacy.” IACR Cryptology ePrint Archive, vol. 2017, p. 110, 2017.
28. M. Campanelli, R. Gennaro, S. Goldfeder, and L. Nizzardo, “Zero-knowledge contingent payments revisited: Attacks and payments for services,” Commun. ACM, 2017.
29. G. Maxwell, “Zero knowledge contingent payment. 2011,” URL: [https://en.bitcoin.it/wiki/Zero_Knowledge_Contingent_Payment](https://en.bitcoin.it/wiki/Zero_Knowledge_Contingent_Payment) (visited on 05/01/2016).
30. R. Canetti, B. Riva, and G. N. Rothblum, “Practical delegation of computation using multiple servers,” in Proceedings of the 18th ACM conference on Computer and communications security. ACM, 2011, pp. 445–454.
31. B. Bünz, S. Goldfeder, and J. Bonneau, “Proofs-of-delay and randomness beacons in Ethereum,” IEEE SECURITY and PRIVACY ON THE BLOCKCHAIN (IEEE S&B), 2017.
32. J. Teutsch and C. Reitwießner, “A scalable verification solution for blockchains.”
33. S. Micali, “CS proofs,” in Foundations of Computer Science, 1994 IEEE, 1994, pp. 436–453, Proceedings., 35th Annual Symposium on.
34. J. Kilian and E. Petrank, “An efficient non-interactive zero-knowledge proof system for NP with general assumptions,” Electronic Colloquium on Computational Complexity (ECCC), vol. 2, no. 38, 1995, [http://eccc.hpi-web.de/eccc-reports/1995/TR95-038/index.html](http://eccc.hpi-web.de/eccc-reports/1995/TR95-038/index.html).
35. J. Groth and A. Sahai, “Efficient non-interactive proof systems for bilinear groups,” in Advances in Cryptology - EUROCRYPT 2008, 2008, pp. 415–432, [https://doi.org/10.1007/978-3-540-78967-3_24](https://doi.org/10.1007/978-3-540-78967-3_24).
36. E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and M. Virza, “Zerocash: Decentralized anonymous payments from Bitcoin,” in IEEE Symposium on Security and Privacy. IEEE, 2014.
37. J. Groth, “Short pairing-based non-interactive zero-knowledge arguments,” in Advances in Cryptology - ASIACRYPT 2010, 2010, pp. 321–340, [https://doi.org/10.1007/978-3-642-17373-8_19](https://doi.org/10.1007/978-3-642-17373-8_19).
38. N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer, “From extractable collision resistance to succinct non-interactive arguments of knowledge, and back again,” in Innovations in Theoretical Computer Science 2012, 2012, pp. 326–349, [http://doi.acm.org/10.1145/2090236.2090263](http://doi.acm.org/10.1145/2090236.2090263).
39. ——, “Recursive composition and bootstrapping for SNARKS and proof-carrying data,” in Symposium on Theory of Computing Conference, STOC’13, Palo Alto, CA, USA, June 1-4, 2013, 2013, pp. 111–120, [http://doi.acm.org/10.1145/2488608.2488623](http://doi.acm.org/10.1145/2488608.2488623).
40. J. Bootle, A. Cerulli, E. Ghadafi, J. Groth, M. Hajiabadi, and S. K. Jakobsen, “Linear-time zero-knowledge proofs for arithmetic circuit satisfiability,” Cryptology ePrint Archive, Report 2017/872, 2017, [http://eprint.iacr.org/2017/872](http://eprint.iacr.org/2017/872).
41. E. Ben-Sasson, I. Bentov, A. Chiesa, A. Gabizon, D. Genkin, M. Hamilis, E. Pergament, M. Riabzev, M. Silberstein, E. Tromer et al., “Computational integrity with a public random string from quasi-linear PCPs,” in Annual International Conference on the Theory and Applications of Cryptographic Techniques. Springer, 2017, pp. 551–579.
42. E. Ben-Sasson, A. Chiesa, A. Gabizon, M. Riabzev, and N. Spooner, “Interactive oracle proofs with constant rate and query complexity,” in 44th International Colloquium on Automata, Languages, and Programming, ICALP 2017, July 10-14, 2017, Warsaw, Poland, 2017, pp. 40:1–40:15, [https://doi.org/10.4230/LIPIcs.ICALP.2017.40](https://doi.org/10.4230/LIPIcs.ICALP.2017.40).
43. S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubramaniam, “Ligero: Lightweight sublinear arguments without a trusted setup,” in Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2017, pp. 2087–2104.
44. R. S. Wahby, I. Tzialla, J. Thaler, and M. Walfish, “Doubly-efficient zkSNARKs without trusted setup.”
45. S. Goldwasser, Y. T. Kalai, and G. N. Rothblum, “Delegating computation: interactive proofs for muggles,” in Proceedings of the fortieth annual ACM symposium on Theory of computing. ACM, 2008, pp. 113–122.
46. S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” Unpublished, 2008.
47. J. Camenisch, S. Hohenberger, and A. Lysyanskaya, “Compact e-cash,” in EUROCRYPT, 2005.
48. S. Meiklejohn, M. Pomarole, G. Jordan, K. Levchenko, D. McCoy, G. M. Voelker, and S. Savage, “A fistful of bitcoins: characterizing payments among men with no names,” in IMC, 2013.
49. E. Androulaki, G. O. Karame, M. Roeschlin, T. Scherer, and S. Capkun, “Evaluating User Privacy in Bitcoin,” in Financial Cryptography, 2013.
50. T. Ruffing, P. Moreno-Sanchez, and A. Kate, “CoinShuffle: Practical decentralized coin mixing for Bitcoin,” in ESORICS, 2014.
51. “Monero - Private Digital Currency,” [https://getmonero.org/](https://getmonero.org/).
52. N. van Saberhagen, “Cryptonote v 2.0,” 2013.
53. H. Lipmaa, “On diophantine complexity and statistical zero-knowledge arguments,” in International Conference on the Theory and Application of Cryptology and Information Security. Springer, 2003, pp. 398–415.
54. J. Groth, “Non-interactive zero-knowledge arguments for voting,” in International Conference on Applied Cryptography and Network Security. Springer, 2005, pp. 467–482.
55. T. Sander, “Efficient accumulators without trapdoor extended abstract,” Information and Communication Security, pp. 252–262, 1999.
56. J. Camenisch, R. Chaabouni, and A. Shelat, “Efficient protocols for set membership and range proofs,” Advances in Cryptology-ASIACRYPT 2008, pp. 234–252, 2008.
57. B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio: nearly practical verifiable computation,” Commun. ACM, vol. 59, no. 2, pp. 103–112, 2016, [http://doi.acm.org/10.1145/2856449](http://doi.acm.org/10.1145/2856449).
58. J. C. Benaloh and M. de Mare, “One-way accumulators: A decentralized alternative to digital signatures (extended abstract),” in Advances in Cryptology - EUROCRYPT ’93, 1993, pp. 274–285, [https://doi.org/10.1007/3-540-48285-7_24](https://doi.org/10.1007/3-540-48285-7_24).
59. J. Groth, “On the size of pairing-based non-interactive arguments,” in Advances in Cryptology - EUROCRYPT 2016, 2016, pp. 305–326, [https://doi.org/10.1007/978-3-662-49896-5_11](https://doi.org/10.1007/978-3-662-49896-5_11).
60. D. Boneh and X. Boyen, “Short signatures without random oracles,” in Advances in Cryptology - EUROCRYPT 2004, 2004, pp. 56–73, [https://doi.org/10.1007/978-3-540-24676-3_4](https://doi.org/10.1007/978-3-540-24676-3_4).
61. R. Chaabouni, H. Lipmaa, and A. Shelat, “Additive combinatorics and discrete logarithm based range protocols,” in Information Security and Privacy - 15th Australasian Conference, ACISP 2010, Sydney, Australia, July 5-7, 2010. Proceedings, 2010, pp. 336–351, [https://doi.org/10.1007/978-3-642-14081-5_21](https://doi.org/10.1007/978-3-642-14081-5_21).
62. M. Bellare and P. Rogaway, “Random oracles are practical: A paradigm for designing efficient protocols,” in CCS ’93, 1993, pp. 62–73, [http://doi.acm.org/10.1145/168588.168596](http://doi.acm.org/10.1145/168588.168596).
63. D. Boneh, B. Lynn, and H. Shacham, “Short signatures from the Weil pairing,” in International Conference on the Theory and Application of Cryptology and Information Security. Springer, 2001, pp. 514–532.
64. R. Cramer and I. Damgård, “Zero-knowledge proofs for finite field arithmetic, or: Can zero-knowledge be for free?” in CRYPTO 98. Springer, 1998, pp. 424–441.
65. D. J. Bernstein, J. Doumen, T. Lange, and J.-J. Oosterwijk, “Faster batch forgery identification,” in International Conference on Cryptology in India. Springer, 2012, pp. 454–473.
66. N. Pippenger, “On the evaluation of powers and monomials,” SIAM Journal on Computing, vol. 9, pp. 230–250, 1980.
67. M. Bellare, J. A. Garay, and T. Rabin, “Fast batch verification for modular exponentiation and digital signatures,” in Advances in Cryptology — EUROCRYPT’98, K. Nyberg, Ed. Berlin, Heidelberg: Springer Berlin Heidelberg, 1998, pp. 236–250.
68. J. Groth and Y. Ishai, “Sub-linear zero-knowledge argument for correctness of a shuffle,” in Advances in Cryptology - EUROCRYPT 2008, 2008, pp. 379–396, [https://doi.org/10.1007/978-3-540-78967-3_22](https://doi.org/10.1007/978-3-540-78967-3_22).
69. Y. Lindell, “Parallel coin-tossing and constant-round secure two-party computation,” J. Cryptology, vol. 16, no. 3, pp. 143–184, 2003, [https://doi.org/10.1007/s00145-002-0143-7](https://doi.org/10.1007/s00145-002-0143-7).

### Appendix A: Zero-Knowledge Arguments of Knowledge

In this paper, the common reference string will always be a public key for the Pedersen commitment scheme. We will consider arguments consisting of three interactive algorithms \((K, P, V)\), all running in probabilistic polynomial time. These are the common reference string generator \(K\), the prover \(P\), and the verifier \(V\). On input \(1^\lambda\), algorithm \(K\) produces a common reference string \(\sigma\). The transcript produced by \(P\) and \(V\) when interacting on inputs \(s\) and \(t\) is denoted by \(tr \leftarrow \langle P(s), V(t) \rangle\). We write \(\langle P(s), V(t) \rangle = b\) depending on whether the verifier rejects (\(b = 0\)) or accepts (\(b = 1\)).

Let \(R \subseteq \{0, 1\}^* \times \{0, 1\}^* \times \{0, 1\}^*\) be a polynomial-time-decidable ternary relation. Given \(\sigma\), we call \(w\) a witness for a statement \(u\) if \((\sigma, u, w) \in R\), and define the CRS-dependent language
\[ L_\sigma = \{ x \mid \exists w : (\sigma, x, w) \in R \} \]
as the set of statements \(x\) that have a witness \(w\) in the relation \(R\).

**Definition 7 (Argument of Knowledge):** The triple \((K, P, V)\) is called an argument of knowledge for relation \(R\) if it satisfies the following two definitions.

**Definition 8 (Perfect Completeness):** \((P, V)\) has perfect completeness if for all non-uniform polynomial time adversaries \(\mathcal{A}\),
\[ \Pr \left[ \langle P(\sigma, u, w), V(\sigma, u) \rangle = 1 \mid \sigma \leftarrow K(1^\lambda), (u, w) \leftarrow \mathcal{A}(\sigma) \right] = 1 \]

**Definition 9 (Computational Witness-Extended Emulation):** \((P, V)\) has witness-extended emulation if for all deterministic polynomial time \(P^*\) there exists an expected polynomial time emulator \(E\) such that for all interactive adversaries \(\mathcal{A}\) there exists a negligible function \(\mu(\lambda)\) such that
\[ \Pr \left[ \mathcal{A}(tr) = 1 \land (tr \text{ is accepting} \implies (\sigma, u, w) \in R) \mid \sigma \leftarrow K(1^\lambda), (u, s) \leftarrow \mathcal{A}(\sigma), tr \leftarrow \langle P^*(\sigma, u, s), V(\sigma, u) \rangle, (tr, w) \leftarrow E^O(\sigma, u) \right] \leq \mu(\lambda) \]
where the oracle \(O\) is given by \(\langle P^*(\sigma, u, s), V(\sigma, u) \rangle\), and permits rewinding to a specific point and resuming with fresh randomness for the verifier from this point onwards. We can also define computational witness-extended emulation by restricting to non-uniform polynomial time adversaries \(\mathcal{A}\).

We use witness-extended emulation to define knowledge-soundness as used, for example, in [7] and defined in [68], [69]. Informally, whenever an adversary produces an argument which satisfies the verifier with some probability, then there exists an emulator producing an identically distributed argument with the same probability.