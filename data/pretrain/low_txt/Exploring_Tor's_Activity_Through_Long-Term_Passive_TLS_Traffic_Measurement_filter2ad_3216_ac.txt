### Tor Network Activity Analysis

#### 1. Tor Version Usage by Relay Nodes
Figure 4 illustrates the Tor versions used by relay nodes, based on CollecTor network status consensus data. Only versions with peak usage exceeding 10% are included.

**Key Observations:**
- The update rate for Tor software is surprisingly good, indicating a high level of motivation among server operators to keep their software up-to-date.
- This diligence in updating is likely driven by the desire to protect Tor users' privacy as much as possible.
- Tor developers' strong connections within the open-source (OS) community, including some who are also Debian developers, contribute to this high update rate.

**Detailed Data Analysis:**
- A total of 325 different Tor versions were observed in the consensus data set.
- Only 48 versions reached a usage level of more than 10% of all relays.
- Of the 277 versions with a maximum usage level below 10%, 257 were alpha or release candidate versions.
- Six versions of Tor account for more than 60% of all relay nodes.
- Specific versions, such as 0.2.2.36 to 0.2.2.38, did not see widespread use, while their parent version remained popular. This suggests that OS distributions may not include certain versions, preventing them from being widely adopted.

#### 2. Server Cipher Suites
The Notary data set provides information on the cipher suites chosen by servers in their TLS server hello messages, which determine the encryption algorithms used for the remainder of the TLS session.

**Cipher Suite Usage:**
- Figure 5 shows the main cipher suites selected by outgoing connections at site N1.
- Tor generally chooses secure cipher suites that use ephemeral keys, ensuring perfect forward secrecy.
- This aligns with one of Tor's original design goals, which also led to the decision to avoid session resumptions.

**Key Findings:**
- In December 2012, Tor connections began switching from Diffie-Hellman (DH) key exchange to Elliptic Curve Diffie-Hellman (ECDH).
- The transition has been slow, with over 50% of connections still using DH.
- DH key exchanges use 1024-bit parameters, which, while not yet considered insecure, are discouraged.
- ECDH connections initially used AES-128 with SHA1 in cipher block chaining (CBC) mode, which later switched to AES-256 with SHA1 and CBC, or AES-128 using Galois/Counter-Mode (GCM) and SHA-256.
- EC connections almost exclusively use the secp256r1 curve, the most commonly supported curve on web servers.
- A small number of connections (<0.1%) use non-perfectly forward ciphers, likely due to non-Tor software trying to contact Tor servers.

#### 3. Discussion and Conclusion
This study presents a longitudinal analysis of Tor's network-level activity, derived from passively collected TLS connection information at four large-scale network sites over more than three years.

**Key Points:**
- Tor carefully selects TLS security parameters, ensuring forward secrecy and avoiding broken ciphers.
- However, a significant number of servers continue to use DH key exchanges with 1024-bit parameters, which could become a security risk.
- While server operators tend to update their software quickly, a long-tail of systems use outdated versions for extended periods.
- The characteristic use of X.509 certificates makes it relatively easy to identify Tor connections, which can be exploited for blocking purposes.
- Tor switched to the current certificate scheme to better blend in, but detection remains an ongoing challenge.
- Future strategies, such as pluggable transports, may help Tor users remain invisible.

**Acknowledgments:**
- We thank Phillip Winter and David Fifield for their feedback during the writing of this paper.
- This work was supported by the National Science Foundation under grant numbers CNS-1528156 and ACI-1348077.

**References:**
- [1] Amann, J., Vallentin, M., Hall, S., Sommer, R.: Extracting Certificates from Live Traffic: A Near Real-Time SSL Notary Service. Technical report TR-12-014, International Computer Science Institute, November 2012.
- [2] Biryukov, A., Pustogarov, I., Weinmann, R.-P.: TorScan: Tracing long-lived connections and differential scanning attacks. In: Foresti, S., Yung, M., Martinelli, F. (eds.) ESORICS 2012. LNCS, vol. 7459, pp. 469–486. Springer, Heidelberg (2012).
- [3] Bos, J.W., Halderman, J.A., Heninger, N., Moore, J., Naehrig, M., Wustrow, E.: Elliptic curve cryptography in practice. In: Christin, N., Safavi-Naini, R. (eds.) FC 2014. LNCS, vol. 8437, pp. 156–174. Springer, Heidelberg (2014).
- [4] Bro Network Monitoring System. https://www.bro.org
- [5] Chaabane, A., Manils, P., Kaafar, M.A.: Digging into anonymous traffic: a deep analysis of the tor anonymizing network. In: Proceedings of NSS (2010).
- [6] Christin, N.: Traveling the silk road: a measurement analysis of a large anonymous online marketplace. In: Proceedings of WWW (2013).
- [7] Dhungel, P., Steiner, M., Rimac, I., Hilt, V., Ross, K.: Waiting for anonymity: understanding delays in the tor overlay. In: Proceedings of P2P (2010).
- [8] Dingledine, R., Mathewson, N.: Tor Protocol Specification. https://gitweb.torproject.org/torspec.git/tree/tor-spec.txt
- [9] Enable Elliptical Curve Diffie-Hellman (ECDHE) in Linux, July 2013. https://www.internetstaff.com/enable-elliptical-curve-diffie-hellman-ecdhe-linux/
- [10] Hopper, N.: Challenges in protecting tor hidden services from botnet abuse. In: Christin, N., Safavi-Naini, R. (eds.) FC 2014. LNCS, vol. 8437, pp. 312–321. Springer, Heidelberg (2014).
- [11] Hopper, N., Vasserman, E.Y., Chan-TIN, E.: How much anonymity does network latency leak? ACM Trans. Inf. Syst. Secur. 13(2), 13: 1–13: 28 (2010).
- [12] Hurley, R., Prusty, S., Soroush, H., Walls, R.J., Albrecht, J., Cecchet, E., Levine, B.N., Liberatore, M., Lynn, B., Wolak, J.: Measurement and analysis of child pornography trafficking on P2P networks. In: Proceedings of WWW (2013).
- [13] Le Blond, S., Manils, P., Chaabane, A., Kaafar, M.A., Castelluccia, C., Legout, A., Dabbous, W.: One bad apple spoils the bunch: exploiting P2P applications to trace and profile tor users. In: Proceedings of LEET (2011).
- [14] Loesing, K.: Measuring the Tor Network, Evaluation of Client Requests to the Directories to Determine total Numbers and Countries of Users. Technical report 2009–06-002, The Tor Project, June 2009.
- [15] Loesing, K.: Measuring the Tor Network from Public Directory Information. Technical report 2009–08-002, The Tor Project, August 2009.
- [16] Manils, P., Abdelberi, C., Blond, S.L., Kâaafar, M.A., Castelluccia, C., Legout, A., Dabbous, W.: Compromising Tor Anonymity Exploiting P2P Information Leakage. CoRR abs/1004.1461 (2010). http://arxiv.org/abs/1004.1461
- [17] McCoy, D., Bauer, K., Grunwald, D., Kohno, T., Sicker, D.C.: Shining light in dark places: understanding the tor network. In: Borisov, N., Goldberg, I. (eds.) PETS 2008. LNCS, vol. 5134, pp. 63–76. Springer, Heidelberg (2008).
- [18] Overlier, L., Syverson, P.: Locating hidden servers. In: Proceedings of IEEE S&P (2006).
- [19] Paxson, V.: Bro: a system for detecting network intruders in real-time. Comput. Netw. 31(23–24), 2435–2463 (1999).
- [20] Tang, C., Goldberg, I.: An improved algorithm for tor circuit scheduling. In: Proceedings of CCS (2010).
- [21] Tor Wiki – TLS History. https://trac.torproject.org/projects/tor/wiki/org/projects/Tor/TLSHistory
- [22] Tor Directory Protocol, Version 3. https://gitweb.torproject.org/torspec.git/tree/dir-spec.txt