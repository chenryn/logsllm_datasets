# 优化后的文本

## 图5. PBR*在TPC-C基准测试下低功耗副本的性能和成本

为了减少事务延迟（事务更新仍然转发到备份），我们观察到PBR*hyb达到了与独立服务器相同的吞吐量。

得益于备份的低功耗要求，在320 TPS之前，混合协议相比单个服务器仅增加了少量的功耗开销（见图5(c)）。Raspberry PI设备从未消耗超过6瓦的功率，并且复制协议在主节点上增加的能量开销很小。如图5(d)所示，主节点使用的CPU周期仅略高于独立服务器。因此，PBR*hyb提供的能源效率接近于独立服务器（见图5(b)）。在最大吞吐量时，PBR*hyb达到了单个服务器效率的79%。这比迄今为止考虑的任何协议都要高得多。

类似于PBR*，PBR*hyb需要定期在备份中截断日志。在我们的设置中，主节点需要18.4秒来记录1.1 GB的数据库快照（9个仓库），并花费154.7秒将快照的三分之一发送到每个备份，总共消耗了9.3千焦耳的能量。如果平均吞吐量为250 TPS且每天一次将数据库快照传输到备份，则能源效率降低了约0.16%。我们还测量了在主节点故障时从备份传输数据库快照到新主节点的开销。新主节点接收快照需要107.1秒。在此操作期间，主节点和备份消耗的能量为6.87千焦耳。

## 相关工作

大量研究从硬件[11]到数据库[12]重新设计了计算机系统以提高能源效率。

### 能源高效的存储
文献[13]对数据库服务器的能耗进行了分析。该研究表明，通常情况下，性能最佳的配置也是最节能的配置。
提出了多种RAID存储系统的扩展方案，以应对数据中心不断增长的能源需求。例如，Peraid[14]考虑了一个包含一个主节点和多个次级副本的系统，每个机器都托管一个RAID系统。Peraid关闭次级副本并在主节点上使用软件RAID来缓冲奇偶校验位。该系统可以容忍磁盘故障但不能容忍主节点故障。ECS2[15]通过采用(k+r, r)纠删码、将r个奇偶校验节点置于低功耗模式以及在其他k台机器上缓存奇偶校验位，解决了这一问题。ECS2试图通过考虑I/O工作负载来最大化待机时间和最小化电源转换。

Ursa[16]是一种存储系统，通过拓扑感知方式迁移数据以避免热点，从而最小化重新配置时间和相关的网络使用。同样的重新配置技术允许将数据迁移到利用率不足的服务器上以关闭这些服务器。Kairos[12]利用性能模型来最优地放置数据库服务器，使每台机器得到充分利用，并同时为其托管的每个数据库提供足够的电力，这种技术通常称为服务器整合。

FAWN[17]是一个由低功耗节点组成的节能键值存储系统。类似于我们的工作，后端节点维护数据日志。FAWN利用分区实现高性能，并使用链式复制[18]实现容错。然而，其前端节点没有被复制。FAWN在其查询中实现了显著更好的能源效率，但我们的工作使用全复制并支持事务性工作负载，使用现成的数据库，其CPU需求明显高于键值存储（见图2(e-f)）。我们的研究重点是复制对能源效率的影响。

### 能源感知云
在数据中心层面，[19]讨论了能源效率问题。作者认为，通过巧妙的数据放置可以使电源周期单元更大。例如，为了允许整个机架的服务器关闭，该方法建议跨机架复制数据。在这种情况下，读取请求由通电机架中的副本处理；为了增加断电机架的待机时间，写入请求暂时复制到其他服务器。通过将计算和数据共置来最大化效率。Tacoma[20]不仅依赖服务器整合来提高效率，还考虑了服务器散发的热量。作者认为，最大化服务器利用率并不总是好主意，因为它可能会导致高昂的冷却成本。Tacoma试图通过在服务器之间分散负载来缓解这一效应。

一些系统提出利用绿色能源的可用性在时间和空间上转移工作，以减少碳足迹[21]、[22]。例如，具有宽松截止日期的批处理作业可以推迟到产生足够的绿色电力时执行。类似地，虚拟机可以转移到拥有更多绿色能源的数据中心。

在基于软件的复制方面，很少有专门针对能源效率的工作。服务器整合只是部分解决能源效率问题：如果复制使用资源效率低下，能源将被浪费。

### 复制协议
已经提出了许多实现上述复制家族之一的协议。一些SMR的实现针对特定硬件（如现代交换互连）进行了优化[23]、[24]。Eve[25]提供了一种方案，以充分利用多核服务器的潜力：混音器批量处理不太可能冲突的操作。副本并行执行批处理操作，并交换修改状态的哈希值以检查它们是否相同。DURPU也允许操作（特别是事务）在副本上并行执行，但减少了每个事务的工作量。在DURPU中，每个事务在一个站点执行，只有其更新语句转发给其他副本。相比之下，Eve在所有副本上完整执行所有操作。

Tashkent+通过对副本上的操作进行负载均衡来改进DUR，以提高资源利用率，并将冲突操作路由到同一副本以降低回滚率[26]。[27]中的方法通过限制冲突操作来降低DUR在负载增加时的中止率。[9]通过在认证时重新排序事务来降低中止率。MorphR[28]使用机器学习方法根据工作负载的几个关键参数来决定部署哪种协议。在任何时候都可以选择PBR、DUR或2PC[29]。MorphR不试图减少处理每个操作所需的能量。我们认为，其中一些技术可以集成到我们的协议中以进一步提高其效率。

## 结论
本文尝试将复制与能源效率相结合，这是一个日益关注的问题，因为全球数据中心的电力消耗不断增加。我们回顾了常用的复制协议，并测量了它们的能源效率。我们观察到，最有效的协议DUR的效率略低于独立服务器最大效率的60%。为了解决这种能源浪费，我们提出了算法修改，以提高性能或降低能源消耗。PBR*hyb是从PBR派生的一种协议，它在备份上实现了日志。PBR*hyb依赖于多核主节点和低功耗备份以提供最大效率。我们展示了这种协议可以在TPC-C基准测试中达到非复制服务器最大效率的79%。

特别值得关注的是PBR*hyb。

## 致谢
本研究得到了AFOSR、NSF、DARPA、DOE ARPA-e、MDCN/iAd等机构的部分资助，以及来自Microsoft Corporation、Facebook Inc.和Amazon.com的资助。

## 参考文献
[1] L. A. Barroso and U. Hölzle, “The case for energy-proportional computing,” IEEE Computer, vol. 40, no. 12, pp. 33–37, 2007.
[2] C. Papadimitrou, “The serializability of concurrent updates in databases,” J. ACM, vol. 26, no. 4, pp. 631–653, Oct. 1979.
[3] F. B. Schneider, “Implementing fault-tolerant services using the state machine approach: A tutorial,” ACM Computing Surveys, vol. 22, no. 4, pp. 299–319, Dec. 1990.
[4] D. Agrawal, G. Alonso, A. El Abbadi, and I. Stanoi, “Exploiting atomic broadcast in replicated databases (extended abstract),” in Proceedings of the 3rd International Euro-Par Conference on Parallel Processing, ser. Euro-Par ’97, pp. 496–503.
[5] H. Garcia-Molina and K. Salem, “Main memory database systems: An overview,” IEEE Trans. on Knowl. and Data Eng., vol. 4, no. 6, pp. 509–516, Dec. 1992.
[6] A. Thomson, T. Diamond, S.-C. Weng, K. Ren, P. Shao, and D. J. Abadi, “Calvin: fast distributed transactions for partitioned database systems,” in Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data, ser. SIGMOD ’12, 2012, pp. 1–12.
[7] B. Oki and B. Liskov, “Viewstamped Replication: A general primary-copy method to support highly-available distributed systems,” in PODC’88, pp. 8–17.
[8] F. Pedone and S. Frølund, “Pronto: High availability for standard off-the-shelf databases,” J. Parallel Distrib. Comput., vol. 68, no. 2, pp. 150–164, 2008.
[9] F. Pedone, R. Guerraoui, and A. Schiper, “The database state machine approach,” Distrib. Parallel Databases, vol. 14, no. 1, pp. 71–98, Jul. 2003.
[10] “The transaction processing performance council, Benchmark C—http://www.tpc.org/tpcc/.”
[11] M. Kai, L. Xue, C. Wei, Z. Chi, and W. Xiaorui, “GreenGPU: A holistic approach to energy efficiency in GPU-CPU heterogeneous architectures,” in Proceedings of the 41st International Conference on Parallel Processing (ICPP’12), 2012, pp. 48–57.
[12] C. Curino, E. P. Jones, S. Madden, and H. Balakrishnan, “Workload-aware database monitoring and consolidation,” in Proceedings of the 2011 ACM SIGMOD International Conference on Management of data, ser. SIGMOD ’11. ACM, pp. 313–324.
[13] D. Tsirogiannis, S. Harizopoulos, and M. A. Shah, “Analyzing the energy efficiency of a database server,” in Proceedings of the 2010 ACM SIGMOD International Conference on Management of data, ser. SIGMOD ’10. New York, NY, USA: ACM, 2010, pp. 231–242.
[14] J. Wan, C. Yin, J. Wang, and C. Xie, “A new high-performance, energy-efficient replication storage system with reliability guarantee,” in Proceedings of the 28th IEEE Symposium on Mass Storage Systems and Technologies, ser. MSST’12, pp. 1–6.
[15] J. Huang, F. Zhang, X. Qin, and C. Xie, “Exploiting redundancies and deferred writes to conserve energy in erasure-coded storage clusters,” Trans. Storage, vol. 9, no. 2, pp. 4:1–4:29, Jul. 2013.
[16] G.-W. You, S.-W. Hwang, and N. Jain, “Ursa: Scalable load and power management in cloud storage systems,” Trans. Storage, vol. 9, no. 1, pp. 1:1–1:29, Mar. 2013.
[17] D. G. Andersen, J. Franklin, M. Kaminsky, A. Phanishayee, L. Tan, and V. Vasudevan, “FAWN: A fast array of wimpy nodes,” Commun. ACM, vol. 54, no. 7, pp. 101–109, Jul. 2011.

希望优化后的文本更加清晰、连贯和专业。如果有任何进一步的需求，请告诉我！