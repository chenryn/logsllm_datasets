# Black Hat USA 2022 Presentation
## Information Classification: General

### Attacks on WMI Data (9/9)

#### WMI Service and Key Variables
- **Wbemcore.dll**
  - `g_bDontAllowNewConnections`
  - `EventDelivery`
  - `_g_pEss_m4`
- **Repdrvfs.dll**
  - `g_bShuttingDown`
  - `g_Glob+0x38`
  - `g_Glob+0xBC`

### Attack on `wbemcore!g_bDontAllowNewConnections`

1. **Attack Details (1/4)**
   - **Action:** Change the value to `TRUE` (1)
   - **Module:** `wbemcore.dll`
   - **Variable Name:** `g_bDontAllowNewConnections`
   - **Default Value:** `FALSE` (0)

2. **Impact of the Attack (2/4)**
   - **Result:**
     - Access to WMI is blocked.
     - WMI clients stop receiving new events.
     - New WMI clients cannot be started.
     - Any attempt to connect to WMI fails with error code `0x80080008` (CO_E_SERVER_STOPPING).

3. **Online Demo:**
   - [YouTube Channel](https://www.youtube.com/channel/UCpJ_uhTb4_NNoq3-02QfOsA)

### WMICheck: Advanced Tool for Windows Introspection

- **Features:**
  - Detects attacks on WMI data.
  - Retrieves values of internal WMI objects and fields.
  - Compares snapshots to check WMI integrity.
- **Availability:**
  - [GitHub Repository](https://github.com/binarly-io)

### Attack on `wbemcore!EventDelivery`

1. **Attack Details (1/3)**
   - **Action:** Change the value to `FALSE` (0)
   - **Module:** `wbemcore.dll`
   - **Variable Name:** `EventDelivery`
   - **Debug Symbol:** `CRepository::m_pEseSession+0xC`
   - **Default Value:** `TRUE` (1)

2. **Impact of the Attack (2/3)**
   - **Result:**
     - All intrinsic events are disabled.
     - Sysmon stops receiving three event types:
       - Event ID 19: WmiEventFilter detected
       - Event ID 20: WmiEventConsumer detected
       - Event ID 21: WmiEventConsumerToFilter detected

3. **Online Demo:**
   - [YouTube Channel](https://www.youtube.com/channel/UCpJ_uhTb4_NNoq3-02QfOsA)

### Attack on `repdrvfs!g_bShuttingDown`

1. **Attack Details (1/2)**
   - **Action:** Change the value to `TRUE` (1)
   - **Module:** `repdrvfs.dll`
   - **Variable Name:** `g_bShuttingDown`
   - **Default Value:** `FALSE` (0)

2. **Impact of the Attack (2/2)**
   - **Result:**
     - Any new attempt to connect to WMI fails with error code `0x8004100A` (WBEM_E_CRITICAL_ERROR).
     - Previously registered callback routines return error code `0x80041032` (WBEM_E_CALL_CANCELLED).

### Attack on `repdrvfs!g_Glob+0x0`

1. **Attack Details (1/3)**
   - **Action:** Change the value to `FALSE` (0)
   - **Module:** `repdrvfs.dll`
   - **Variable Name:** `g_Glob+0x0`
   - **Default Value:** `TRUE` (1)

2. **Impact of the Attack (2/3)**
   - **Result:**
     - All attempts to add `__EventFilter` fail with error code `0x80041014` (WBEM_E_INITIALIZATION_FAILURE).

### Attack on `repdrvfs!g_Glob+0x38`

1. **Attack Details (1/3)**
   - **Action:** Change the value to `0`
   - **Module:** `repdrvfs.dll`
   - **Variable Name:** `g_Glob+0x38`
   - **Default Value:** Non-null address of the instance

2. **Impact of the Attack (2/3)**
   - **Result:**
     - All attempts to add `__EventFilter` fail with error code `0x80041014` (WBEM_E_INITIALIZATION_FAILURE).

### Attack on `repdrvfs!g_Glob+0xBC`

1. **Attack Details (1/4)**
   - **Action:** Change the value to `0`
   - **Module:** `repdrvfs.dll`
   - **Variable Name:** `g_Glob+0xBC`
   - **Default Value:** `1`

2. **Impact of the Attack (2/4)**
   - **Result:**
     - Client cannot connect to WMI with error code `0x80041033` (WBEM_E_SHUTTING_DOWN).
     - Already connected clients fail to enumerate WMI with error code `0x80041010` (WBEM_E_INVALID_CLASS).

### Attack on `wbemcore!_g_pEss_m4`

1. **Attack Details (1/3)**
   - **Action:** Change the value to `0`
   - **Module:** `wbemcore.dll`
   - **Variable Name:** `_g_pEss_m4`
   - **Default Value:** Non-null address of the interface

2. **Impact of the Attack (2/3)**
   - **Result:**
     - Consumer fails to install callback with error code `0x8004100C` (WBEM_E_NOT_SUPPORTED).

### Sandboxing WMI Service

- **Security Measures:**
  - Revoke `SeImpersonatePrivilege` to prevent impersonation.
  - Set untrusted integrity level to restrict write access to OS objects.

### MemoryRanger

- **Functionality:**
  - Prevents Direct Kernel Object Manipulation (DKOM) patching of WMI Token structure.
- **Customization Examples:**
  - [Igor Korkin's Blog](https://igorkorkin.blogspot.com/search?q=memoryranger)
- **Source Code:**
  - [GitHub Repository](https://github.com/IgorKorkin/MemoryRanger)

### Conclusion

- **WMI Design Issues:**
  - Created for performance monitoring and telemetry without security as a primary concern.
  - Widely used by endpoint security solutions.
  - Architectural weaknesses allow bypassing WMI from various attack vectors, often through one-bit changes.
- **Detection and Prevention:**
  - **WMICheck:** Provides runtime checking to detect WMI attacks.
  - **MemoryRanger:** Prevents sandboxing WMI service by kernel attacks.
- **Further Reading:**
  - BHUS2022: Breaking Firmware Trust From Pre-EFI: Exploiting Early Boot Phases by Alex Matrosov (CEO Binarly)

### Thank You

- **Binarly.io**
- **GitHub:** [binarly-io](https://github.com/binarly-io)