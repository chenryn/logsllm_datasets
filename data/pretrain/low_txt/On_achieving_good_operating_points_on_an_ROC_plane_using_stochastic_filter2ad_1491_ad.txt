### Adaptive Thresholding in Anomaly Detection Systems

While adaptive thresholding did not yield significant accuracy improvements, it identified good ROC (Receiver Operating Characteristic) operational points. Non-adaptive TRW (Tree-Reweighted Message Passing) failed to maintain its accuracy on the endpoint dataset, as it relies on observing incoming requests, which were not present in this dataset. Adaptive-TRW mitigates this accuracy loss and provides significant improvements in both detection and false alarm rates.

**Figure 7** shows the ROC-based accuracy comparison of STIDE (System Tracking Intrusion Detection Environment), SVM (Support Vector Machine), and KL-Divergence detectors with and without adaptive thresholding. It can be observed that STIDE consistently performs well on both datasets (UNM and MIT-LL), leaving little room for improvement. However, Adaptive-STIDE identifies good accuracy points on the ROC curve without requiring manual configuration. Similarly, SVM performed better on the UNM dataset but failed to maintain its performance on the MIT-LL dataset. In the case of the MIT-LL dataset, Adaptive-SVM significantly reduces false alarms and shows marginal improvements for the UNM dataset. The KL-based detector did not perform well on either dataset, providing ample room for improvement. Adaptive-KL notably reduces false alarms on both datasets.

### Complexity Evaluation

We measured the algorithm's run-time and memory requirements using the hprof tool [9] on a 2.2 GHz dual-core Intel machine. The complexity was evaluated by running the algorithms on the entire traffic set of one endpoint and over the entire UNM dataset. The total time taken by the adaptive thresholding module on the endpoint’s traffic data was approximately 60 milliseconds, which is two and five orders of magnitude less than the time taken for execution of the Maximum-Entropy and TRW/PHAD anomaly detection algorithms, respectively. The data memory requirements of the adaptive thresholding algorithm were also negligible (a few hundred KBs) compared to the memory consumed by the anomaly detection algorithms: three orders of magnitude for Maximum-Entropy and two orders of magnitude for TRW and PHAD. Similar complexity results (approximately two orders of magnitude in run-time and an order of magnitude in data memory) were observed for host-based detectors.

### Limitations and Countermeasures

Although the proposed adaptive thresholding algorithm provides accuracy and automation improvements, it has certain limitations. We enumerate these constraints and propose remedial measures:

- **Real-Time Anomaly Detectors**: Adaptive thresholding is designed specifically for real-time anomaly detectors. Other anomaly detectors that operate on non-real-time measurements (e.g., file analysis algorithms, rule-based traffic classification algorithms) cannot use adaptive thresholding.
- **Persistent Anomalies**: Due to its self-learning nature, the adaptive thresholding algorithm may raise fewer and fewer alarms for a persistent anomaly. This limitation can be addressed by tuning the adaptability feedback metric, giving a greater value to β. This measure causes the algorithm to assign lesser feedback weight to past values, effectively reducing the dependence on behavior too far back in the past.
- **Undetected Anomalies**: Some anomalies could potentially go undetected if the adaptive thresholding algorithm’s predicted score is well above the observed value. We have not observed such behavior in our experiments.
- **Security Perspective**: Undetected anomalies can be exploited by a crafty attacker to bypass the ADS. While all ADSs are inherently susceptible to stealth and mimicry attacks, this limitation can be mitigated in an adaptive algorithm by setting an appropriate bin size according to the ADS’ observed score deviations. A small bin size can reduce the score granularity, making it harder for an attacker to stay below the finer granular predicted scores without compromising the effectiveness (volume) of the attack.

### Conclusions

We demonstrated that ROC-based accuracy evaluation using fixed thresholds does not necessarily represent the actual accuracy an IDS can achieve. We proposed a generic threshold tuning algorithm that:
1. Allows an IDS to achieve high accuracy points on the ROC plane.
2. Can be readily introduced into existing IDSs.
3. Reduces the need for human threshold configuration in an IDS.
4. Has very low run-time complexity and memory requirements.

### References

[1] J. M. Agosta, C. D. Wasser, J. Chandrashekar, and C. Livadas. An adaptive anomaly detector for worm detection, Usenix SysML, 2007.
[2] A. B. Ashfaq, M. Joseph, A. Mumtaz, M. Q. Ali, A. Sajjad, and S. A. Khayam. A comparative evaluation of anomaly detectors under portscan attacks, RAID, 2008.
[3] B. E. Boser, I. M. Guyon, and V. N. Vapnik. A training algorithm for optimal margin classifiers, ACM COLT, 1992.
[4] Cisco Anomaly Guard Module Homepage, www.cisco.com/en/US/products/ps6235/.
[5] Computer Immune Systems, Datasets, http://www.cs.unm.edu/~immsec/data/synth-sm.html
[6] S. Forrest, S. A. Hofmeyr, A. Somayaji, and T. A. Longstaff. A sense of self for Unix processes, IEEE Symp S&P, 1996.
[7] Y. Gu, A. McCullum, and D. Towsley. Detecting anomalies in network traffic using maximum entropy estimation, ACM/Usenix IMC, 2005.
[8] G. Hollinger, J. Djugash, and S. Singh. Tracking a moving target in cluttered environments with ranging radios: extended results, Tech. report CMU-RI-TR-08-07, Robotics Institute, CMU, 2008.
[9] HPROF: A Heap/CPU Profiling Tool in J2SE5.0, http://java.sun.com/developer/technicalArticles/Programming/HPROF.html
[10] T. Ide and H. Kashima. Eigenspace-based anomaly detection in computer systems, ACM SIGKDD, 2004.
[11] K. L. Ingham and H. Inoue. Comparing anomaly detection techniques for HTTP, RAID, 2007.
[12] J. Jung, V. Paxson, A. W. Berger, and H. Balakrishnan. Fast portscan detection using sequential hypothesis testing, IEEE Symp S&P, 2004.
[13] D. K. Kang, D. Fuller, and V. Honavar. Learning classifiers for misuse and anomaly detection using a bag of system calls representation, IAW, 2005.
[14] A. Lakhina, M. Crovella, and C. Diot. Mining anomalies using traffic feature distributions, ACM SIGCOMM, 2005.
[15] A. Lakhina, M. Crovella, and C. Diot. Diagnosing network-wide traffic anomalies, ACM SIGCOMM, 2004.
[16] A. Lazarevic, L. Ertoz, V. Kumar, A. Ozgur, and J. Srivastava. A comparative study of anomaly detection schemes in network intrusion detection, SIAM SDM, 2003.
[17] LBNL/ICSI Enterprise Tracing Project, http://www.icir.org/enterprise-tracing/Overview.html
[18] W. Lee and D. Xiang. Information-theoretic measures for anomaly detection, IEEE Symp S&P, 2001.
[19] R. P. Lippmann, D. J. Fried, I. Graf, J. W. Haines, K. R. Kendall, D. McClung, D. Weber, S. E. Webster, D. Wyschogrod, R. K. Cunningham, and M. A. Zissman. Evaluating Intrusion Detection Systems: The 1998 DARPA Off-Line Intrusion Detection Evaluation, DISCEX, (2):12–26, 2000.
[20] R. P. Lippmann, J. W. Haines, D. J. Fried, J. Korba, and K. Das. The 1999 DARPA OffLine intrusion detection evaluation, Computer Networks, 34(2):579–595, 2000.
[21] M. V. Mahoney and P. K. Chan. PHAD: Packet header anomaly detection for identifying hostile network traffic, Florida Tech. technical report CS-2001-4, 2001.
[22] M. Merhav, M. Gutman, and J. Ziv. On the estimation of the order of a Markov chain and universal data compression, IEEE Trans. Info Theory, 35(5):1014–1019, 1989.
[23] MIT Lincoln Laboratory, Information Systems Technology, http://www.ll.mit.edu/mission/communications/ist/corpora/ideval/data/index.html
[24] R. Pang, M. Allman, M. Bennett, J. Lee, V. Paxson, and B. Tierney. A first look at modern enterprise traffic, ACM/USENIX IMC, 2005.
[25] Arbor Networks’ Peakflow Product, http://www.arbornetworks.com/peakflowsp.
[26] Report on Host-based Intrusion Detection Systems, http://staff.science.uva.nl/~delaat/snb-2004-2005/p19/
[27] C. Shannon and D. Moore. The spread of the Witty worm, IEEE SSP, 2004.
[28] Symantec Security Response, http://securityresponse.symantec.com/avcenter
[29] H. L. V. Trees. Detection, estimation and modulation theory: part I, Wiley-Interscience, 1st ed., 2001.
[30] WisNet ADS Comparison Homepage, http://wisnet.niit.edu.pk/projects/adeval
[31] C. Wong, S. Bielski, A. Studer, and C. Wang. Empirical analysis of rate limiting mechanisms, RAID, 2005.