### Improved Text

**UUID and Contact Verification:**
The initial connection only contains an account-specific UUID. The contact verification process occurs after the TLS connection is established, using the exchange of hashed contact identifiers.

**Conceptual Disadvantages:**
One significant drawback of [96] is that Apple, as the Identity-Based Encryption (IBE) root, must provision secret keys to all AirDrop devices. In contrast, our approach requires Apple to sign encryptions of hashed contact identifiers, where the key can be chosen by the client. Additionally, the system proposed in [96] does not address subtle issues related to everyday use cases, such as handling the transfer of phone numbers. Extending the IBE scheme with efficient revocation capabilities [18] would be necessary to manage these scenarios.

**Implementation and Evaluation:**
We provide a practical integration into the AirDrop protocol, with prototypes on various state-of-the-art Apple devices, demonstrating real-world performance under practical conditions.

### 7.2 Private Set Intersection (PSI)

**Research and Optimizations:**
The study of PSI protocols is a vibrant field, with numerous optimizations for different use cases. The standard scenario involves two-party PSI with balanced input sets, ensuring security against semi-honest adversaries who follow the protocol but attempt to extract additional information from the transcript. Works based on oblivious transfer [60, 76, 79, 80] currently define the state-of-the-art in terms of performance, while others focus on cost-efficiency in cloud deployment [75]. Recent efforts have adapted these works to the malicious model [83, 84], with notable efficiency improvements [74].

**Multi-Party and Extended Protocols:**
PSI has also been studied in multi-party settings [43, 50, 61] and extended to generic protocols capable of computing arbitrary symmetric functions on the intersection [29, 77, 78]. As discussed in § 4.3, unbalanced PSI protocols, which are particularly effective when one input set is significantly larger than the other [26, 27, 55, 59, 82], are most relevant to our work. Chen et al. [26, 27] propose protocols based on fully homomorphic encryption, which are computationally intensive and unsuitable for mobile devices. Kiss et al. [59] and Kales et al. [55] optimize protocols based on oblivious pseudorandom function evaluations for mobile use, specifically for mobile contact discovery to privately synchronize address books with user databases in messaging applications. However, these protocols only consider security against malicious receivers, not senders.

**Outsourcing and Offline Scenarios:**
Some approaches efficiently outsource PSI computations to a third-party server [1, 2, 56, 57, 99]. These are not suitable for our use case, as both input parties may be offline. Alternatively, public key-based Diffie-Hellman-style protocols [13, 31, 33, 52, 53, 82], which have been around since the 1980s [67, 87], are viable given the requirements and specified input sizes. Specifically, [31] and [53] are secure against malicious adversaries. We base our work on [53] due to its lower exponentiation requirements compared to the RSA-based protocol of [31] and its more efficient instantiation with elliptic curve cryptography. As described in § 4.5, we augment this protocol with signed inputs to prevent certain attacks on the ideal functionality of PSI, similar to authorized PSI (APSI) [31, 33] and PSI with certified sets [21].

### 7.3 Secure Computation Protocols

**Generic and Specialized Protocols:**
There are several generic and specialized cryptographic protocols for securely performing mutual authentication. We achieve this efficiently via PSI in two rounds with O(m + n) complexity (cf. § 4).

**Yao and GMW Protocols:**
Secure two-party computation protocols, such as those proposed by Yao [97] and Goldreich, Micali, and Wigderson [40], can obliviously evaluate arbitrary Boolean or arithmetic circuits over private inputs. However, a naive circuit for performing equality tests on m contact identifiers and n address book entries has a complexity of O(m · n). This can be reduced to linear complexity using hashing techniques from circuit-based PSI [29, 76, 77, 78]. Unfortunately, these techniques are incompatible with malicious security [74], which can be guaranteed with generic approaches [62, 72, 95] at the cost of additional overhead. It is also unclear how to efficiently authenticate the contact identifiers used as inputs. Specialized protocols exist for securely performing comparisons/equality checks (e.g., [30, 64, 98]).

**Private Information Retrieval (PIR):**
The task of computing the intersection between two sets can be formulated as the receiver querying the sender’s database to test for set membership, while hiding the query and without transferring the entire database. This can be achieved via PIR. While there are efficient multi-server PIR solutions [28, 36], we consider a two-party setting with a single server. State-of-the-art single-server PIR is based on homomorphic encryption [39, 58, 63], which is too computationally demanding for mobile devices. Moreover, PIR does not necessarily protect unrelated database entries, which should remain private in our case. Some systems allow complex search queries on encrypted data [38], but they inherently suffer from leakage and have been prone to attacks [17, 23, 70].

### 7.4 Privacy of Apple’s Wireless Ecosystem

**AirDrop and Privacy:**
AirDrop is part of Apple’s broader wireless ecosystem, which has been analyzed for privacy leaks. For instance, AWDL was found to leak personally identifiable information such as the user's real name [92]. Several studies [14, 24, 65] have examined Apple’s Bluetooth implementation and discovered ways to track devices via static identifiers in Bluetooth advertisements. Finally, [88] revealed that Apple devices can be tracked via asynchronously randomized identifiers.

### 8 Conclusion

**Privacy-Preserving Authentication:**
In this paper, we addressed the problem of privacy-preserving authentication between offline peers based on mutual contacts. Our comprehensive experimental performance evaluation demonstrates negligible overhead under real-world conditions. We motivated our work by identifying two design flaws in AirDrop that allow attackers to learn the phone numbers and email addresses of both sender and receiver devices. Our proposed protocol, however, can support other applications, even outside of Apple’s ecosystem. For example, Google’s "Nearby" platform for Android [41, 86] restricts device visibility to the user’s contacts and could benefit from our protocol for privacy-preserving authentication.

**Future Work:**
Our solution, PrivateDrop, prevents users from disclosing personal information to non-contacts. However, users remain trackable via their account-specific UUID in the TLS certificate, which presents an opportunity for future research. Nonetheless, our results demonstrate that PSI with malicious security is ready for practical deployment, even in offline scenarios between resource-constrained mobile devices. We hope our open-source implementation will be adopted in end-user systems like AirDrop.

### Responsible Disclosure

**Disclosure Timeline:**
We informed the Apple Product Security team about our findings (follow-up ID 705937802). We disclosed the sender identifier leakage (cf. § 3.3) in May 2019 and the receiver identifier leakage (cf. § 3.4) as well as our proposed PSI-based protocol (cf. § 4) in October 2020. Apple has not yet commented on whether they plan to address these AirDrop issues.

### Availability

**Open-Source Implementation:**
We have open-sourced our PrivateDrop implementation [45] and the code to reproduce our figures [44] as part of the Open Wireless Link project [91].

### Acknowledgments

**Contributors:**
We thank the anonymous reviewers and our shepherd Wouter Lueks for their valuable comments, Benny Pinkas and Gowri R Chandran for insightful discussions, Oliver Schick for help with Relic, and Nanako Honda for explorative work.

**Funding:**
This project received funding from the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation program (grant agreement No. 850990 PSOTI). It was co-funded by the Deutsche Forschungsgemeinschaft (DFG) – SFB 1119 CROSSING/236615297 and GRK 2050 Privacy & Trust/251805230, by the LOEWE initiative (Hesse, Germany) within the emergenCITY center, and by the German Federal Ministry of Education and Research and the Hessian State Ministry for Higher Education, Research, and the Arts within ATHENE.

### References

[References listed here, formatted as in the original text]

---

This revised version aims to improve clarity, coherence, and professionalism, making the text more accessible and easier to understand.