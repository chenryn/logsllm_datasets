### Zidong Han
#### Bridge Attack: A Double-Edged Sword in Mobile Security

**Self Introduction:**
- **Mobile Security Researcher** at Tencent Mobile Security Labs Razor Team
- Focuses on App vulnerabilities and IoT-related security
- **GeekPwn 2018 Winner** in "Hacker Pwn in House"
- Speaker at **HITB-SECCONF-2018-Beijing**

**Agenda:**
1. What is a Bridge Attack?
2. Why a Bridge Attack?
3. Bridge Attack and Exploit Cases
4. Defending Against Bridge Attacks
5. Conclusion

---

### What is a Bridge Attack?

**Develop Fast Without Risk?**

**Abstract Bridge:**
- **Mobile App:**
  - **Android:** JavaScript in WebView
  - **iOS:** UIWebView/WKWebView
- **IoT Device:**
  - DLNA/UPnP/WebSocket

**Unofficial Definition of Bridge Attack:**
- **Browser**: Sends URL Payload
- **Abstract Bridge**: Parses URL and Sends Exploit Result
- **JsBridge/IoTBridge**: Interfaces between the browser, mobile app, and IoT device

---

### Why a Bridge Attack?

**WebView Attacks in the Past:**
- **Using `addJavascriptInterface` for Remote Code Execution (RCE)**
  - CVE-2012-6336
- **WebView Cross-domain Risks**
  - `setAllowFileAccess`
  - `setAllowFileAccessFromFileURLs`
  - `setAllowUniversalAccessFromFileURLs`
- **URL Scheme Attack**
  - `://:/?` with exported components

**Differences in Bridge Attack:**
- **Increased Attack Surface**
- **Vulnerability Exploitation via Bridge Capabilities**
- **Affects Both Mobile Apps and IoT Devices**

---

### Bridge Attack and Exploit Cases

**Bridge Attack Surface in Mobile Applications:**
- **Malicious Request**
- **Bridge in Application & WebView**
- **Scheme Parsing**
- **Bypassing Recognition and Identification Checks**
- **Fake Function Call**
- **Action Dispatch**

**Exploit Case I: Bypassing Identification Check**
- **XSS Attack from URL**
- **Insecure Domain Check (CSRF)**
- **JS Bridge (`@JavascriptInterface`) Man-in-the-Middle Attack**

**Insecure Check Case I:**
- `str.contains("safe.com")` or `str.endsWith("safe.com")`
- Example: `123safe.com`

**Exploiting JSBridge Capabilities:**
- **Custom JsApi: Better or Worse?**
- **Web Attacks Can Be Used to Perform CSRF in Apps**

**Insecure Check Case II:**
- **Payload Question:**
  - Importing JS files from external URLs
  - Executing sensitive JS APIs
  - Sending user-sensitive data to malicious URLs

**Example:**
- Importing `getUserInfo` JS API
- Calling `sendRequest` JS API to get payment info
- Stealing user payment information

**Complete Exploit:**
- **Payload URL**
- **Loading in WebView Container**
- **H5 and JsBridge Interaction**
- **Native JS API and Event Handling**
- **Stealing Information**
- **RCE/LCE and Worm Propagation**

---

### Differences in IoT Bridge Attacks

**Penetrating LAN from WAN:**
- **DNS Rebinding**
- **Bridge Attack in Brain App**
- **Other Remote Attack Entries**

**Persistent Attack During Exploitation:**
- **More Botnets in a LAN**
- **Multiple Attack Modes**

**IoT in Private Networks:**
- **Cloud Server and Application Interaction**
- **Abstract IoT Bridge**
- **Command Request and Response**
- **IoT Bridge with and without Cloud Server**

**Bridge Attack Surface in IoT Devices:**
- **DNS Rebinding**
- **Bridge in IoT Device**
- **Private Network and Open-Port Analysis**
- **Bridge Protocol and Request Sending**
- **Action Dispatch**

**IoT Bridge Attack Case I:**
- **DLNA Action**
  - Exposing interfaces without identity checks
  - Controlling media playback
  - Injecting backdoors into TVs

**Sensitive UPnP Actions:**
- **Remote Download and Installation of Apps**
- **Attacker Entering Private Network**

**IoT Bridge Attack Case II:**
- **Central App with No Code Protection**
- **Communication with TV without Identity Checks**
- **Remote Attack on Smart TV by Imitating Central App Actions**

---

### Defending Against Bridge Attacks

**For JsBridge:**
- **Serious Identification Checks**
- **Constraint Bridge Abilities Permissions**
- **Ensure Communication Security with Encrypted Channels (e.g., HTTPS)**

**For IoT Bridge:**
- **Same Security Policies as JsBridge**
- **Cautious Expansion and Use of Bridge Capabilities**
- **Authentication Tickets for Command Actions**

---

### Conclusion

- **More Targets: Mobile Apps and IoT Devices**
- **Attack Surface: Integrating Web Attacks with App/IoT Attacks**
- **Ease of Use: By Only a Malicious URL, Spreads Quickly and Widely**
- **Exploit Capabilities: RCE/LCE, Sensitive Information Leak, APT**

**Thank You!**