### Provider, or WHOIS Privacy Proxy

Survey respondents indicated that the WHOIS technical contact is the most useful point of contact for reaching the administrator. Additionally, our experiences with alternative communication channels have not shown any to be superior to email.

### Relying on Large Volumes of Emails

Relying on large volumes of emails increases the risk that the sending mail server becomes blacklisted. We observed that the most popular mail service, Google, likely flagged a significant fraction of our messages as spam, although it is unclear exactly how the volume of sent emails affected spam filtering decisions. Therefore, having dedicated security contacts, possibly accessible via WHOIS or RDAP [22], could be helpful in successfully delivering notifications.

### Vulnerability Reward Programs (VRPs)

Apart from email-based notifications, the use of vulnerability reward programs (VRPs) has been studied by previous works, showing that they are very effective [14]. Our survey responses also indicated that site operators could be more easily reached if they could opt-in to a service.

### Increasing Trust in Notifications

A major challenge for security notifications is a lack of trust in the message or the sender. While Cetin et al. [6] concluded that the sender does not impact the effectiveness of a notification campaign, our work suggests otherwise. From the messages we received and the survey responses, we repeatedly saw cases where trust was a critical concern. Domain operators often reported being contacted by malicious parties trying to sell services or products or attempting to phish them. Our security notifications, being unsolicited, appeared similar in nature. Additionally, recipients were unfamiliar with our sending institution, and even with our signed email variant, there were no means to verify our identity. Thus, technical means to verify identities (such as digital signatures) are insufficient in establishing trust.

We suggest that future notification efforts should consider partnering with well-known organizations, such as Google. For example, Li et al. [20] used Google’s Search Console program to notify hijacked webmasters, achieving some of the highest remediation levels (about 80% of webmasters took action). From a research perspective, exploring how to establish this trust independently is an interesting direction. Some survey participants mentioned that external links in our messages decreased their trustworthiness. However, Stock et al. [25] found that removing linked resources and disclosing all technical details in the notification email itself led to lower fix rates. Hence, there is room for future work on enhancing the trustworthiness of notification messages.

### Tailoring Notification Content to the Recipients

In our work, we considered two types of issues affecting different types of operators. WordPress can be easily installed by almost anyone, requiring only downloading the source and following setup instructions. In contrast, Git usage implies that the site operates on source code, which requires versioning and a higher degree of technical expertise. Therefore, WordPress users might benefit from different information than more technical Git users. Additionally, different tones or message presentations may have varying success depending on the notified population.

### Cost Effectiveness

Setting up the infrastructure to automatically detect and notify about security issues at scale is a non-trivial but front-loaded cost, as each subsequent notification campaign can rely on the existing infrastructure. However, our work and prior studies have shown that fully automated approaches yield suboptimal results. We investigated the feasibility of utilizing other means of communication, which incur additional costs (either financial or manual effort) that scale linearly with the number of notified sites.

In our experiment, the "Friendly" channel had the highest fraction of viewed reports for both types of security issues. However, "viewed" here simply means that we sent an email with the report, not that someone actually read the details. This manual approach did not exhibit the highest fix rates and was not worth the effort. Similarly, our manual notifications showed comparable results in helping administrators fix their sites but incurred even higher financial or manpower costs. From a cost-benefit tradeoff, automated email notifications remain the best option. Investigating the economics of notifications is an interesting future research direction. Are there incentives that can drive up remediation rates, such as through policy or legal changes? Alternatively, certain parties may be more receptive to notifications and could be prioritized. For example, we observed that WordPress sites that updated more frequently were more likely to fix issues in response to our notification. By considering the costs and benefits of various notification parameters, future research could identify areas of improvement for security notifications.

### Related Work

For decades, the research community has focused on discovering various issues, such as in Web applications and Internet servers. Only recently has the security community begun exploring the effectiveness of outreach efforts to inform affected parties and spur remediation. One area of focus is incidents of compromise. Vasek and Moore [26] found that 55% of all contacted domains cleaned up compared to 45% of unnotified sites, with those receiving detailed reports performing the highest, cleaning up 62% of their sites. Canali et al. [5] studied how hosting providers handle such reports, observing that 64% of the complaints were ignored. Nappa et al. [21] notified 19 hosting providers about malicious servers, but only 7 took steps to take down the affected servers. Cetin et al. [6] analyzed the role of sender reputation on malware cleanup behavior, finding no strong evidence that the sender influences remediation. Li et al. [20] showed that communicating with webmasters of hijacked websites via Google Search Console increased clean-up rates by 50% (to approximately 80% of sites) and reduced infection lifetimes by 60%.

To proactively thwart future security problems, notifications can target parties running vulnerable or misconfigured software. Durumeric et al. [13] discovered and notified servers susceptible to the 2014 Heartbleed bug, finding that notifications resulted in a 50% increase in patching. Kürher et al. [17] contacted administrators running services susceptible to DDoS amplification attacks, with 90% of the 9 million discovered servers no longer being used for amplification attacks within 7 weeks. Stock et al. [25] and Li et al. [19] reported on large-scale controlled notification experiments, observing clear improvements in remediation levels but noting challenges in reliably reaching appropriate points of contact and inciting further corrective actions. Cetin et al. [7] found that providing a mechanism to verify vulnerabilities encouraged further remediation, but only 10% of contacts visited their demonstration website.

### Conclusion

In this paper, we reported on a notification experiment targeting over 24,000 domains, aiming to shed light on why the success of vulnerability notifications is limited. By exploring various facets, including the communication channel, message presentation, and web site operator perspectives, we identified several challenges inhibiting a notification campaign's success. Our main takeaways are:

- Email as a communication medium suffers from technical (e.g., anti-spam filters) and non-technical hurdles (e.g., lack of sender trust). However, the minimal increases in the success of alternative and less automated notification channels do not justify their significant financial and time costs.
- Sender trust significantly influences success, contrasting previous work [6]. It is crucial that recipients trust the notification message and that email providers distinguish and discard unwanted spam and phishing emails.
- There is a large gap between being aware of a security problem and addressing it. The fraction of sites that fixed a problem after learning about it ranged from about 33% of vulnerable WordPress sites to 81% of sites with overly public Git folders. This highlights that reaching out to affected parties is only half the battle; the message itself is important in convincing operators to take action.

Future research, as outlined in Section VII, should address these challenges to pave the way for more successful security notifications.

### Acknowledgements

We thank the anonymous reviewers for their valuable feedback. This work was supported by the German Federal Ministry of Education and Research (BMBF) through funding for the Center for IT-Security, Privacy and Accountability (CISPA) (FKZ: 16KIS0345, 16KIS0656) and the CISPA-Stanford Center for Cybersecurity (FKZ: 13N1S0762), as well as the National Science Foundation awards CNS-1237265 and CNS-1518921.

### References

[1] https://github.com/ben-stock/notiﬁcation-ndss2018.
[2] “WordPress codex version 3.7,” online, https://codex.wordpress.org/Version_3.7.
[3] N. Aviram, S. Schinzel, J. Somorovsky, N. Heninger, M. Dankel, J. Steube, L. Valenta, D. Adrian, J. A. Halderman, V. Dukhovni, E. Kasper, S. Cohney, S. Engels, C. Paar, and Y. Shavitt, “DROWN: Breaking TLS Using SSLv2,” in USENIX Security Symposium, 2016.
[4] M. Balduzzi, C. T. Gimenez, D. Balzarotti, and E. Kirda, “Automated discovery of parameter pollution vulnerabilities in web applications,” in Proceedings of the Network and Distributed System Security Symposium, 2011.
[5] D. Canali, D. Balzarotti, and A. Francillon, “The role of web hosting providers in detecting compromised websites,” in International World Wide Web Conference, 2013.
[6] O. Cetin, M. H. Jhaveri, C. Ganán, M. van Eeten, and T. Moore, “Understanding the role of sender reputation in abuse reporting and cleanup,” in Workshop on the Economy of Information Security, 2015.
[7] O. Cetin, C. Ganán, M. Korczynski, and M. van Eeten, “Make notifications great again: Learning how to notify in the age of large-scale vulnerability scanning,” in Workshop on the Economy of Information Security, 2017.
[8] D. Crocker, “Mailbox Names for Common Services, Roles and Functions,” RFC 2142 (Proposed Standard), RFC Editor, Fremont, CA, USA, pp. 1–6, May 1997. [Online]. Available: https://www.rfc-editor.org/rfc/rfc2142.txt
[9] J. Czyz, M. J. Luckie, M. Allman, and M. Bailey, “Don’t forget to lock the back door! A characterization of IPv6 network security policy.” in NDSS, 2016.
[10] A. Doupé, B. Boe, C. Kruegel, and G. Vigna, “Fear the EAR: Discovering and mitigating execution after redirect vulnerabilities,” in ACM CCS, 2011.
[11] Drupal Security Team, “Public service announcement psa-2014-003.” [Online]. Available: https://www.drupal.org/PSA-2014-003
[12] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman, “Analysis of the HTTPS certificate ecosystem,” in ACM Internet Measurement Conference, 2013.
[13] Z. Durumeric, F. Li, J. Kasten, J. Amann, J. Beekman, M. Payer, N. Weaver, D. Adrian, V. Paxson, M. Bailey, and J. A. Halderman, “The matter of Heartbleed,” in ACM Internet Measurement Conference, 2014.
[14] M. Finifter, D. Akhawe, and D. Wagner, “An empirical study of vulnerability rewards programs,” in USENIX Security Symposium, 2013.
[15] Google, “Choose whether to show images,” online, https://support.google.com/mail/answer/145919.
[16] S. Holm, “A simple sequentially rejective multiple test procedure,” Scandinavian Journal of Statistics, pp. 65–70, 1979.
[17] M. Kührer, T. Hupperich, C. Rossow, and T. Holz, “Exit from hell? Reducing the impact of amplification DDoS attacks,” in USENIX Security Symposium, 2014.
[18] S. Lekies, B. Stock, and M. Johns, “25 million flows later: Large-scale detection of DOM-based XSS,” in ACM CCS, 2013.
[19] F. Li, Z. Durumeric, J. Czyz, M. Karami, D. McCoy, S. Savage, M. Bailey, and V. Paxson, “You’ve got vulnerability: Exploring effective vulnerability notifications,” in USENIX Security Symposium, 2016.
[20] F. Li, G. Ho, E. Kuan, Y. Niu, L. Ballard, K. Thomas, E. Bursztein, and V. Paxson, “Remedying web hijacking: Notification effectiveness and webmaster comprehension,” in International World Wide Web Conference, 2016.
[21] A. Nappa, M. Z. Rafique, and J. Caballero, “Driving in the cloud: An analysis of drive-by download operations and abuse reporting,” in DIMVA, 2013.
[22] A. Newton, B. Ellacott, and N. Kong, “HTTP Usage in the Registration Data Access Protocol (RDAP),” RFC 7480 (Proposed Standard), RFC Editor, Fremont, CA, USA, pp. 1–16, Mar. 2015. [Online]. Available: https://www.rfc-editor.org/rfc/rfc7480.txt
[23] B. Ramsdell and S. Turner, “Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2 Message Specification,” RFC 5751 (Proposed Standard), RFC Editor, Fremont, CA, USA, pp. 1–45, Jan. 2010. [Online]. Available: https://www.rfc-editor.org/rfc/rfc5751.txt
[24] P. Resnick, “Internet Message Format,” RFC 2822 (Proposed Standard), RFC Editor, Fremont, CA, USA, pp. 1–51, Apr. 2001, obsoleted by RFC 5322, updated by RFCs 5335, 5336. [Online]. Available: https://www.rfc-editor.org/rfc/rfc2822.txt
[25] B. Stock, G. Pellegrino, C. Rossow, M. Johns, and M. Backes, “Hey, you have a problem: On the feasibility of large-scale web vulnerability notification,” in USENIX Security Symposium, 2016.
[26] M. Vasek and T. Moore, “Do malware reports expedite cleanup? An experimental study,” in 5th Workshop on Cyber Security Experimentation and Test, CSET, 2012.
[27] L. Weichselbaum, M. Spagnuolo, S. Lekies, and A. Janc, “CSP is dead, long live CSP! On the insecurity of whitelists and the future of content security policy,” in ACM CCS, 2016.