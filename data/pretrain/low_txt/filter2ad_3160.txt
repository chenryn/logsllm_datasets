# Title: High-Throughput Secure Three-Party Computation of Kerberos Ticket Generation

## Authors:
- Toshinori Araki, NEC Corporation, Japan
- Assaf Barak, Bar-Ilan University, Israel
- Jun Furukawa, NEC Corporation, Japan
- Yehuda Lindell, Department of Computer Science, Bar-Ilan University, Israel
- Ariel Nof, Department of Computer Science, Bar-Ilan University, Israel
- Kazuma Ohara, NEC Corporation, Japan

## Abstract
Secure multi-party computation (SMPC) is a cryptographic technique that allows multiple parties to jointly compute any function of their inputs while preserving the privacy of those inputs. In our paper "High Throughput Semi-Honest Secure Three-Party Computation with an Honest Majority" presented at ACM CCS 2016 [4], we introduced a new protocol that achieved over 1,300,000 AES encryptions per second and supported 35,000 Kerberos authentication login queries per second. This poster/demo presents the design and implementation details of this high-throughput three-party computation, demonstrating its practicality for large-scale Kerberos authentication.

## 1. Introduction
In our previous work [4] at ACM CCS 2016, we proposed a novel provably secure three-party computation protocol with an honest majority. The protocol focused on achieving high throughput, reaching over 1,300,000 AES encryptions per second, which is 14 times faster than the latest optimized version of the Sharemind protocol [3]. Under this capability, we processed 35,000 Kerberos authentication login queries per second.

This poster and demo will present the detailed design and implementation of our system, which enabled this high throughput, and demonstrate the Kerberos authentication application. Our work is supported by the European Research Council under the ERC consolidators grant agreement n. 615172 (HIPS) and the European Union’s Seventh Framework Program (FP7/2007-2013) grant agreement n. 609611 (PRACTICE), as well as the BIU Center for Research in Applied Cryptography and Cyber Security in conjunction with the Israel National Cyber Bureau in the Prime Minister’s Office.

## 2. Design for Parallel AES
We implemented our SMPC protocol and applied it to a Kerberos authentication server, which issues Ticket-Granting-Tickets (TGTs) using AES encryption. The system architecture is shown in Figure 1. The "Secure KDC server" accepts requests for issuing tickets from clients. Instead of directly calling AES encryption, the server uses a new SMPC-proxy process to generate tickets. The SMPC-proxy receives a sequence of requests, generates shares, and sends them to MPC servers. The MPC servers process these shares in parallel, returning the encrypted results to the SMPC-proxy, which then returns the results to the KDC server.

### 2.1 Architecture
Our system consists of the following components:
- **KDC Server**: Acts as a Kerberos 5 KDC server, using 128-bit AES-CTR for ticket generation. It converts requests into sequences of 128-bit blocks.
- **SMPC-Proxy**: Receives data from the KDC server, converts it into shares, and sends these shares to MPC servers. It reconstructs the ciphertexts and returns them to the KDC server.
- **MPC Servers**: Process the shared data, perform bit-slicing, and execute the MPC protocol. They return the results to the SMPC-proxy.
- **Clients**: Use AES-CTR mode for encryption.

### 2.2 SIMD Bit-Slicing and PRNG
To achieve high throughput, we used the bit-slicing technique, which allows us to compute multiple operations in parallel. The bit-sliced data structure is compatible with Intel SIMD instructions, enabling efficient processing of large numbers of users. The XOR and AND operations for bit-sliced data are simple and lightweight, with minimal communication overhead. We also used AES counter mode (AES-NI) for random number generation, which can perform up to 8 encryptions in one instruction.

### 2.3 AES Circuit
We designed our AES circuit based on a suitable MPC circuit [5], adding round delimiters. The properties of our circuit are summarized in Table 1. Each gate in the circuit is represented by its input and output indexes, gate type, and buffer index for data transmission.

## 3. Contents of the Demo
We will demonstrate our Kerberos authentication server in a real environment, using three server machines, each equipped with two Intel Xeon E5-2650 v3 2.3GHz CPUs (total of 20 cores) connected via 10Gbps LAN. The demo will include:

- **Performance Simulation**: Using JMeter to simulate clients, we will show the throughput, latency, CPU utilization, and network utilization of our implementation.
- **Client Demonstration**: We will demonstrate the system with a Kinit client, showing that users can be authenticated in the same manner as with standard Kerberos, ensuring usability and lowering the barrier to adoption.

## 4. References
[1] D. Bogdanov, S. Laur, and J. Willemson. Sharemind: A framework for fast privacy-preserving computations. In ESORICS 2008, Springer (LNCS 5283), 192–206, 2008.
[2] D. Bogdanov, M. Niitsoo, T. Toft, J. Willemson. High-performance secure multi-party computation for data mining applications. Int. J. Inf. Sec. 11(6): 403-418, 2012.
[3] L. Kerik, P. Laud, and J. Randmets. Optimizing MPC for robust and scalable integer and floating-point arithmetic. In 4th WAHC, 2016.
[4] T. Araki, J. Furukawa, Y. Lindell, A. Nof, K. Ohara. High-Throughput Semi-Honest Secure Three-Party Computation with an Honest Majority. In ACM CCS 2016, to be appeared, 2016.
[5] Circuits of Basic Functions Suitable For MPC and FHE. http://www.cs.bris.ac.uk/Research/CryptographySecurity/MPC/
[6] Intel Architecture Instruction Set Extensions Programming Reference. http://www.naic.edu/~phil/software/intel/319433-014.pdf

---

This revised version aims to improve clarity, coherence, and professionalism.