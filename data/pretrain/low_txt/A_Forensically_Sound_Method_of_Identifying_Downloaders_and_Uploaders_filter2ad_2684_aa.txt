# A Forensically Sound Method of Identifying Downloaders and Uploaders in Freenet

**Authors:**
- Brian Neil Levine
- Marc Liberatore
- Brian Lynn
- Matthew Wright

**Affiliations:**
- Brian N. Levine, Marc Liberatore, Brian Lynn: University of Massachusetts Amherst, MA, USA
- Matthew Wright: Rochester Institute of Technology, NY, USA

## Abstract
The creation and distribution of Child Sexual Abuse Materials (CSAM) represents a continuous violation of the victims' privacy, extending beyond the initial harm. A significant volume of CSAM is distributed via the Freenet anonymity network, with nearly one-third of requests on Freenet being for known CSAM. In this paper, we propose and evaluate a novel forensic method to identify whether a neighboring peer is the actual uploader or downloader of a file, or merely a relayer. Our method requires only the analysis of traffic sent to a single, passive node. We extensively evaluate our method, demonstrating a False Positive Rate (FPR) of 0.002 ± 0.003 for identifying downloaders and an FPR of 0.009 ± 0.018, a precision of 1.00 ± 0.01, and a True Positive Rate (TPR) of 0.44 ± 0.01 for identifying uploaders. Additionally, we derive expressions for the FPR and Power of our hypothesis test, perform simulations of single and concurrent downloaders, and characterize the Freenet network to inform parameter selection. Our method has been upheld in several United States Federal Court cases.

**CCS Concepts:**
- Security and privacy → Privacy protections
- Applied computing → Network forensics

**Keywords:**
- forensics, child sexual abuse materials, child rescue, darknets, anonymous communication systems

**ACM Reference Format:**
Brian N. Levine, Marc Liberatore, Brian Lynn, and Matthew Wright. 2020. A Forensically Sound Method of Identifying Downloaders and Uploaders in Freenet. In Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security (CCS '20), November 9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3372297.3417876

**Permissions:**
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.

**CCS '20, November 9–13, 2020, Virtual Event, USA**
© 2020 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3417876

## 1 Introduction
Anonymous communication systems, such as Freenet [1, 2] and Tor [3], play a critical role in the distribution of Child Sexual Abuse Materials (CSAM). These systems not only facilitate the trafficking of CSAM but also mask the activities of perpetrators and ensure the persistence of such material over many years [27]. This persistence continues to victimize individuals into adulthood [28–32]. CSAM available through these systems is used by perpetrators to groom new victims by normalizing the depicted acts [33], representing severe privacy violations. Therefore, it is essential for investigators to have effective and forensically sound methods to combat these crimes.

Although less popular than Tor, Freenet has been consistently used by thousands of users daily for decades. Files published to Freenet are fragmented into small, encrypted blocks that are randomly dispersed throughout the network of peers. A manifest key, which is a URI, is necessary to retrieve and reconstruct the original file. Manifest keys for published files are often broadcast via open, public forums. In addition to representing files, manifest keys are used to find HTML-based websites called freesites and a Usenet-like forum called Frost.

We discovered several user-created areas on Freenet explicitly dedicated to child sexual exploitation. We harvested over 124,000 manifest keys from these public areas. Law enforcement confirmed that many referenced CSAM images, with half deemed severe, involving very young victims or violent acts. Our sample of Freenet traffic showed that over 30% of all requests were for the keys we harvested.

To stop these crimes, investigators need a method that is both effective and forensically sound. We adopt the Daubert standard [34] as our definition of forensic soundness, seeking a method based on a testable hypothesis, with a known error rate, following existing standards, and using generally accepted methods. Prior work has revealed vulnerabilities in Freenet’s approach [35–40], but these methods are relatively heavyweight, requiring active maneuvering, multiple peers, or relying on ephemeral bugs. Freenet developers have largely addressed these vulnerabilities.

**Contributions:**
- **Motivation:** We observe that at least 30% of request traffic on Freenet is for CSAM-related content, consistent over four years of measurements. We also analyze Freenet’s anonymity mechanism and prove it prevents the use of hop counters for de-anonymization.
- **Investigative Technique and In Situ Evaluation:** We derive an investigative technique based on a Bayesian hypothesis test that considers request traffic. The test models the investigator’s decision for whether a neighboring subject is a downloader or uploader of content. Our in situ evaluation shows an FPR of 0.002 ± 0.003 for downloaders and an FPR of 0.009 ± 0.018, a precision of 1.00 ± 0.01, and a TPR of 0.44 ± 0.01 for uploaders.
- **Analysis and Simulation:** We derive expressions for the FPR and Power of our Bayesian test, validating our in situ evaluation. Simulations show that the probability of false positives is very low and decreases with the size of the file shared, while the probability of a false negative remains low.
- **Deployment and Legal Outcomes:** We disclosed our work publicly [14] and were consulted during investigations using our method. We participated in several US Federal Court cases, resulting in justice for re-victimized persons and the rescue of children from hands-on abuse.
- **Anonymous System Design:** We discuss potential changes to Freenet that may allow requesters to avoid detection and compare our work to related research, reviewing ethical concerns. We argue that our investigative technique is highly accurate, efficient, effective, and forensically sound.

This paper expands on a prior workshop publication [14] with new contributions, including a proof that de-anonymization cannot be based on Freenet’s probabilistic packet hop counters, parameter validation based on Freenet’s topology, empirical measurements of FPR, and reporting of outcomes from law enforcement use.

## 2 Background
Freenet is an overlay network operating as a distributed data store, where each participating node anonymously contributes key-value storage to encrypted blocks of data [1, 2, 41]. A key is the SHA256 hash of the block. Freenet nodes form a small-world network [42], with each node connecting to other nodes, referred to as peers or neighbors. Unlike other anonymity systems, Freenet users do not hide their IP addresses behind proxy nodes. Instead, nodes blend their traffic into the traffic generated by other nodes.

Freenet operates in two modes: darknet and opennet. In darknet mode, nodes connect only to peers for which the user has given explicit permission. In opennet, nodes connect to other opennet nodes, discovered from well-known seed nodes or other nodes. Opennet allows neighbors to exchange information on their peers and form new connections to better organize the network. Our method focuses on opennet, though it should also work for darknet with additional social engineering.

### Uploading Files and Manifests
For a file to become available to Freenet nodes, it must first be uploaded by a node into the network. Nodes do not explicitly share files; files must be retrieved from the network’s distributed data store. When a file is inserted, Freenet divides it into encrypted 32KB content blocks. The inserting node distributes the blocks to its peers, which may place the block in their own storage and send it to their peers.

After distributing the content blocks, the inserting node inserts a separately encrypted 32KB manifest block. The manifest block holds the SHA256 hash and decryption key of each content block. For large files, the manifest block references another level of manifest blocks. Freenet returns a human-readable manifest key to the user, which is a URI consisting of the manifest block’s SHA256 hash and decryption key. Freenet allows two types of manifest keys: Content Hash Key (CHK) and Signed Subspace Key (SSK). CHK blocks are identical for multiple copies of the same file, while SSKs generate a unique encryption key per upload, making the blocks distinct per manifest and uploader. Anyone with the manifest key can retrieve the file.

### Downloading
Retrieving a file from the network is the inverse of inserting it. The downloading node (requester) first retrieves and decrypts the manifest block(s) to get the hash and encryption keys of the content blocks. The requester then retrieves and decrypts the content blocks and reconstructs the file data. Downloading does not result in the file’s blocks being placed into the node’s local storage.

In requesting blocks, if a node receiving a request has the block in its Freenet storage, it returns the block. Otherwise, it relays the request to one of its peers. The process continues until the block is found, returned in reverse order through the chain of peers, and cached for faster future replies. If a node fails to find the block, it may relay the request to other peers before returning a not-found result.

### Peer Selection and Routing
Each Freenet node and block is assigned a location, a 64-bit floating-point number between 0 and 1, inclusive. Locations are points on a circular ID space, with 0 and 1 being the same point. The distance between any two locations is the length of the shortest arc between the two points. A persistent location is randomly assigned to each opennet node, and each block’s SHA256 hash can be deterministically converted to a location.

An opennet node selects most of its peers from nodes close to its own location, with the remaining peers distributed throughout the circle. The total number of peers depends on the upload bandwidth allocated to the Freenet node. A node sends a request in the direction of the node closest to the block’s location. Freenet uses friend-of-a-friend (FOAF) routing, where nodes have visibility to their immediate peers’ locations and the locations of their peers’ peers. All visible locations are considered when selecting a recipient peer. If a request is unsuccessful, the next closest peer is tried, taking FOAF routing into account. A peer may reject a request due to resource constraints, causing the node to mark its peer as backed.