---
author: Steven J. Vaughan-Nichols
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 1037
date: '2023-11-26 23:39:05'
editorchoice: false
excerpt: 并不是，不过“功能源代码许可证”却进一步混淆了开源许可证的界限。
fromurl: https://www.theregister.com/2023/11/24/opinion_column/
id: 16418
islctt: true
largepic: /data/attachment/album/202311/26/233820r9j3x4mooj66hx6z.png
permalink: /article-16418-1.html
pic: /data/attachment/album/202311/26/233820r9j3x4mooj66hx6z.png.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 并不是，不过“功能源代码许可证”却进一步混淆了开源许可证的界限。
tags:
- 开源
- 许可证
thumb: false
title: 我们真的需要另一种非开源的源代码可用许可证吗？
titlepic: true
translator: ChatGPT
updated: '2023-11-26 23:39:05'
---

![](/data/attachment/album/202311/26/233820r9j3x4mooj66hx6z.png)

> 并不是，不过“功能源代码许可证”却进一步混淆了开源许可证的界限。

在早期的编程时代，所有的程序都是自由软件和开源的。然而，随着专有软件的出现，这种情况发生了变化。程序员们对此进行了反抗，并制定了第一个正式的自由和开源软件定义。如今，不开源的代码已成为罕见的例外。尽管如此，一些公司将开源视为商业模式而非开发模式，试图将专有方法与“开源”代码结合起来。最新的例子是Sentry推出的“功能源代码许可证”（FSL）。

沿袭服务端公共许可证（SSPL）、公共条款（Common Clause）和商业源代码许可证（Business Source License）的传统，FSL表面上似乎重视开源的重要性，但实际上嘲讽了开源的核心理念，将其描述为“享有自由却无需付出努力”。

实际上，Sentry是一个面向开发者的应用代码监控服务，起源于Django（一个开源的高级Python网络框架）的一些代码。如今，它仍然主要使用开源代码进行开发。显然，没有开源，Sentry就无法存在。

同样的情况也适用于其他使用“源代码可用”或其他半开源许可证的公司。它们都源自开源项目，为了最大化利润，它们重新许可免费获取的代码以锁定其所有权。

正如开源倡议（OSI）董事会副主席Thierry Carrez所说：“有些公司通过利用开源代码库建立了他们的软件，不需要在使用数百个开源软件包之前请求许可。他们通过公开承诺遵守开源原则建立了声誉。但在追求更大价值的过程中，他们短视地放弃了最初带给他们成功的模式。”

例如，Sentry、MariaDB、Redis和HashiCorp等前开源公司之所以能够这样做，是因为他们采用了侵犯贡献者权利的贡献者许可协议（CLA）。这些协议是一种法律文件，定义了贡献者为其代码在开源项目中使用的条款。虽然某些CLA（如Apache软件基金会的CLA或Linux的开发者原创证书）只是用来保护项目的法律权利，但其他一些CLA（如MongoDB的贡献者协议）则被用来占有你的代码及其版权。通过这样的CLA，这些公司在任何他们喜欢的方式中使用和重新许可你的代码变得轻而易举。

SourceHut的创始人兼首席执行官Drew Devault在谈到Elasticsearch从开源转向“源码可用”时表达了类似的观点：“Elasticsearch归其1,573名贡献者所有，他们自己保留着版权，并向Elastic授予了一个无条件分发他们作品的许可。当Elastic决定Elasticsearch不再开源时，他们利用了这个漏洞，这个漏洞实际上是他们故意安插进去的……Elastic对1,573名贡献者以及所有信任、支持他们的人翻了脸。”

现在，我们看到企业Sentry也在走同样的道路。公平地说，Sentry长期以来一直在使用源码可用许可证。自2018年以来，该公司就一直使用BSL。如果还有人继续向Sentry捐献代码，那他们肯定知道自己在做什么。

那么为什么要创建一个新的许可证呢？Sentry的开源负责人Chad Whitacre解释道：“BSL有两个显著的缺点。首先，预设的非竞争期为四年，对于软件行业来说，这实在是太长了。这可能会让人觉得最后的开源转变只是一种象征性的举措。对于Sentry，我们将这个期限缩短到三年，但我们承认，可能连三年都太长了。”

该许可证期满后，代码将使用Apache 2.0或MIT许可证。但实际上，这并不像听起来那么慷慨。根据FSL，你可以将代码用于任何用途——“除了竞争性使用的情况”。所谓竞争性使用，指的是利用该软件开发或提供能够与我们的产品或服务竞争的商业产品或服务，不论是该软件本身，还是我们基于该软件提供的任何其他产品或服务，只要我们是在该软件发布之日或之前就已经提供了这类竞争产品或服务。

换句话说，你可以查看代码，但不能用这些代码运营业务。更多细节可以查看该公司的FSL版本的Apache和MIT许可证。我个人认为，这两个都不算是真正的开源许可证。

Whitacre进一步指出：“更严重的问题是BSL有过多的参数：变更日期、变更许可证，以及额外使用授予。最大的问题是额外使用授予，这是一个巨大的填空题，意味着每个BSL实质上都是不同的许可证。”

我同意这一观点。每个公司的BSL都不同，这意味着客户在与使用BSL的公司签约时很难确切知道法律上为他们保留了哪些权益。Sentry希望通过FSL使其产品和服务对其客户更具吸引力。

也许这种方法会奏效。但我赞同Carrez的说法：“发布另一种能剥夺开发者在技术选择中的自主权的许可证变体并不是什么新鲜事：他们实际上是要摧毁整个软件生态系统中开发者的基本自由，从而明确自己对其专有软件及其许可使用权的所有权。这并不是开源：这只是包装在开源幌子下的专有门户。”

*（题图：MJ/beb19f23-c230-4a3f-9bb3-210066ad749b）*

via: 
作者：[Steven J. Vaughan-Nichols](https://www.theregister.com/Author/Steven-J-Vaughan-Nichols)  
译者：[ChatGPT](https://linux.cn/lctt/ChatGPT)  
校对：[wxy](https://github.com/wxy)