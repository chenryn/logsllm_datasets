### 了那个客户端信息的服务器上去
状态码303 See Other和307 Temporary Redirect可用于此类重定向。

**注7：** 有时，这些经过扩展和状态增强的URL被称为“胖URL”。

### Web服务器 | 133

- **规范目录名称**
  当客户端请求的URI是一个不带尾部斜线的目录名时，大多数Web服务器会将客户端重定向到一个加了斜线的URI上，这样相对链接就可以正常工作。

### 5.9 第六步——发送响应
在通过连接发送数据时，Web服务器面临与接收数据相同的问题。服务器可能同时处理多个客户端连接，其中一些是空闲的，一些正在向服务器发送数据，还有一些正在向客户端回送响应数据。
- 服务器必须记录每个连接的状态，并特别注意持久连接的处理。
- 对于非持久连接，服务器应在发送完整条报文后关闭自己这一端的连接。
- 对于持久连接，连接可能会保持打开状态，在这种情况下，服务器需要特别小心地计算Content-Length首部，以确保客户端能够知道响应何时结束（参见第4章）。

### 5.10 第七步——记录日志
当事务结束后，Web服务器会在日志文件中添加一个条目，描述已执行的事务。大多数Web服务器都提供了多种日志配置格式。更多细节请参见第21章。

### 5.11 更多信息
有关Apache、Jigsaw和ident的更多信息，请参阅以下参考资源：
- **《Apache权威指南》**：Ben Laurie和Peter Laurie编写，O’Reilly & Associates公司出版。
- **《Professional Apache》**：Peter Wainwright编写，Wrox公司出版。
- **Jigsaw**：W3C的服务器，网址为http://www.w3c.org/Jigsaw/。
- **RFC 1413**：“标识协议”，由M. St. Johns编写，网址为http://www.ietf.org/rfc/rfc1413.txt。

**注8：** 本书影印版由中国电力出版社出版。（编者注）

### 第6章 代理
Web代理服务器是网络中的中间实体，位于客户端和服务器之间，扮演“中间人”的角色，在各端点之间来回传送HTTP报文。本章介绍了所有与HTTP代理服务器相关的内容，包括它们提供的特殊支持以及使用代理服务器时遇到的一些问题。

#### 本章主要内容如下：
- 解释HTTP代理，并将其与Web网关进行对比，说明如何部署代理；
- 提供一些代理所能提供的帮助；
- 说明在现实网络中如何部署代理以及如何将网络流量导向代理服务器；
- 说明如何配置浏览器来使用代理；
- 展示HTTP的代理请求，说明它们与服务器请求的区别，以及代理是如何微妙地改变浏览器行为的；
- 解释如何通过Via首部和TRACE方法来记录报文传输路径上的代理服务器链；
- 描述基于代理的HTTP访问控制方法；
- 解释代理如何与客户端和服务器进行交互，每个客户端和服务器支持的特性和使用的版本都可能有所不同。

### 6.1 Web的中间实体
Web上的代理服务器是代表客户端完成事务处理的中间人。如果没有Web代理，HTTP客户端就要直接与HTTP服务器对话。有了Web代理，客户端可以与代理对话，然后由代理代表客户端与服务器交流。客户端仍然会完成对事务的处理，但它是通过代理服务器提供的优质服务来实现的。

- **HTTP的代理服务器既是Web服务器又是Web客户端**：HTTP客户端会向代理发送请求报文，代理服务器必须像Web服务器一样正确处理请求和连接，然后返回响应。同时，代理自身要向服务器发送请求，其行为必须像正确的HTTP客户端一样，发送请求并接收响应（参见图6-1）。如果要创建自己的HTTP代理，就要认真遵循为HTTP客户端和HTTP服务器制定的规则。

### 6.1.1 私有和共享代理
代理服务器可以是某个客户端专用的，也可以是很多客户端共享的。
- **私有代理**：单个客户端专用的代理被称为私有代理。
- **公共代理**：众多客户端共享的代理被称为公共代理。

  - **公共代理**：大多数代理都是公共的共享代理。集中式代理的成本效率更高，更容易管理。某些代理应用，比如高速缓存代理服务器，会利用用户间共同的请求，汇入同一个代理服务器的用户越多，它就越有用。
  - **私有代理**：专用的私有代理并不常见，但它们确实存在，尤其是直接运行在客户端计算机上的时候。有些浏览器辅助产品，以及一些ISP服务，会在用户的PC上直接运行一些小型的代理，以便扩展浏览器特性，提高性能，或为免费ISP服务提供主机广告。

  **图6-1** 代理既是服务器，又是客户端
  - 对Web客户端来说，代理扮演的是服务器的角色，接收请求报文，返回响应报文。
  - 对Web服务器来说，代理扮演的是客户端的角色，发送Web请求报文，接收Web响应报文。

### 6.1.2 代理与网关的对比
严格来说，代理连接的是两个或多个使用相同协议的应用程序，而网关连接的则是两个或多个使用不同协议的端点。网关扮演的是“协议转换器”的角色，即使客户端和服务器使用的是不同的协议，客户端也可以通过它完成与服务器之间的事务处理。

- **图6-2a** 中的中间设备是一个HTTP代理，因为代理与客户端和服务器之间使用的都是HTTP协议。
- **图6-2b** 中的中间设备是一个HTTP/POP网关，因为它把HTTP的前台与POP E-mail的后端连接了起来。网关将Web事务转换成适当的POP事务，使用户可以通过HTTP读取E-mail。基于Web的E-mail程序，比如Yahoo!邮件和MSN Hotmail都是HTTP E-mail网关。

  **图6-2** 代理使用同一种协议，网关则将不同的协议连接起来

实际上，代理和网关之间的区别很模糊。由于浏览器和服务器实现的是不同版本的HTTP，代理也经常要做一些协议转换工作。商业化的代理服务器也会实现网关的功能来支持SSL安全协议、SOCKS防火墙、FTP访问，以及基于Web的应用程序。我们将在第8章详细介绍网关。

### 6.2 为什么使用代理
代理服务器可以实现各种时髦且有用的功能。它们可以改善安全性，提高性能，节省费用。代理服务器可以看到并接触到所有流过的HTTP流量，所以代理可以监视流量并对其进行修改，以实现许多有用的增值Web服务。这里给出了一些代理使用方法的示例：

- **儿童过滤器**：小学在为教育站点提供无阻碍访问的同时，可以利用过滤器代理来阻止学生访问成人内容。如图6-3所示，代理应该允许学生无限制地访问教育性内容，但对不适合儿童的站点要强行禁止访问。
- **文档访问控制**：可以用代理服务器在大量Web服务器和Web资源之间实现统一的访问控制策略，创建审核跟踪机制。这在大型企业环境或其他分布式机构中非常有用。在集中式代理服务器上可以对所有访问控制功能进行配置，而无需在众多由不同组织管理、不同厂商制造、使用不同模式的Web服务器上进行经常性的访问控制升级。
- **安全防火墙**：网络安全工程师通常会使用代理服务器来提高安全性。代理服务器会在网络中的单一安全节点上限制哪些应用层协议的数据可以流入或流出一个组织。还可以提供用来消除病毒的Web和E-mail代理使用的那种挂钩程序，以便对流量进行详细的检查（参见图6-5）。
- **Web缓存**：代理缓存维护了常用文档的本地副本，并将它们按需提供，以减少缓慢且昂贵的因特网通信。在图6-6中，客户端1和客户端2会去访问附近Web缓存上的对象A，而客户端3和客户端4访问的则是原始服务器上的文档。
- **反向代理**：代理可以假扮Web服务器。这些被称为替代物（surrogate）或反向代理（reverse proxy）的代理接收发给Web服务器的真实请求，但与Web服务器不同的是，它们可以发起与其他服务器的通信，以便按需定位所请求的内容。可以用这些反向代理来提高访问慢速Web服务器上公共内容时的性能。在这种配置中，通常将这些反向代理称为服务器加速器（server accelerator）（参见图6-7）。还可以将替代物与内容路由功能配合使用，以创建按需复制内容的分布式网络。
- **内容路由器**：代理服务器可以作为“内容路由器”使用，根据因特网流量状况以及内容类型将请求导向特定的Web服务器。内容路由器也可以用来实现各种服务级的请求。例如，如果用户或内容提供者付费要求提供更高的性能，内容路由器可以将请求转发到附近的复制缓存（参见图6-8）。