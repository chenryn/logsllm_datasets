### Synchronization and Duty-Cycle Performance in GMAC

#### Experimental Results and Analysis

The results of our experimental set, as shown in Figure 9b, illustrate the impact of node duty-cycles on synchronization. Our default configuration has a frame time of 8, corresponding to a duty cycle of approximately 1.5%. We further simulated longer frame times, resulting in progressively lower duty cycles, with the lowest being around 0.15% at a frame length of 58.

In this context, we evaluate the performance of two configurations. As depicted in Figure 8, merging three separate clusters using the ClusterMerge method can significantly reduce the number of rounds required for synchronization, especially for nodes with few or no neighbors. This is evident from the data in Figure 7b, which shows a reduction in the time needed to achieve complete synchrony.

Figure 10 demonstrates that both configurations can effectively handle the simulated 64x64 node grid. The configuration that includes merge messages achieves synchronization in about 250 rounds, while the configuration without merge messages requires around 2000 rounds.

#### Conclusions and Future Work

The primary contribution of this paper is a comprehensive evaluation of the proposed methods for merging separately synchronized clusters. Our simulations show that these methods can achieve low duty-cycles, even with relatively inaccurate clocks. Specifically, duty-cycles as low as 0.35% are possible using these mechanisms.

We have demonstrated that GMAC can synchronize all nodes in a network to share a common active period in a decentralized manner. Our results indicate that passive detection, while effective, takes much longer than active detection. Additionally, a simple notification message can drastically reduce the time to reach a synchronized state by a factor of eight in a 4096-node topology.

Future work will focus on verifying the performance of these modifications under varying conditions, including the effects of node mobility. Mobility is a critical issue in sensor networks, as the network topology is constantly changing. Understanding how mobility affects synchronization is essential for evaluating the effectiveness of our methods in real-world scenarios.

Furthermore, we will explore ways to improve the adaptability of nodes to changing network conditions. For example, nodes could adjust the frequency of their join broadcasts based on the last time they heard a join message from another cluster. If a node in cluster A has not heard from any other cluster for an extended period, it can reduce the frequency of its join broadcasts, thereby conserving energy.

#### References

[1] M. Dobson, S. Voulgaris, and M. van Steen, "Network-level Synchronization in Decentralized Social Ad-Hoc Networks," in ICPCA 2010, 2010.

[2] W. Ye, J. Heidemann, and D. Estrin, "An Energy-Efficient MAC Protocol for Wireless Sensor Networks," in IEEE INFOCOM 2002, Twenty-First Annual Joint Conference of the IEEE Computer and Communications Societies, 2002, pp. 1567-1576.

[3] T. Van Dam and K. Langendoen, "An Adaptive Energy-Efficient MAC Protocol for Wireless Sensor Networks," in Proceedings of the 1st International Conference on Embedded Networked Sensor Systems, ACM, 2003, pp. 171-180.

[4] W. Ye, F. Silva, and J. Heidemann, "Ultra-Low Duty Cycle MAC with Scheduled Channel Polling," in Proceedings of the 4th International Conference on Embedded Networked Sensor Systems, ACM, 2006, p. 334.

[5] M. Liu, T. Lai, and M. Liu, "Is Clock Synchronization Essential for Power Management in IEEE 802.11-Based Mobile Ad Hoc Networks?"

[6] S. Mank, R. Karnapke, and J. Nolte, "An Adaptive TDMA Based MAC Protocol for Mobile Wireless Sensor Networks," in Proceedings of the 2007 International Conference on Sensor Technologies and Applications, IEEE Computer Society, 2007, pp. 62-69.

[7] --, "Mlmac-an Adaptive TDMA MAC Protocol for Mobile Wireless Sensor Networks," in Ad-Hoc & Sensor Wireless Networks: An International Journal, Special Issue on 1st International Conference on Sensor Technologies and Applications, 2008.

[8] I. Cidon and M. Sidi, "Distributed Assignment Algorithms for Multi-Hop Packet-Radio Networks," in IEEE INFOCOM'88, Seventh Annual Joint Conference of the IEEE Computer and Communications Societies, 1988, pp. 1110-1118.

[9] M. Arumugam and S. Kulkarni, "Self-Stabilizing Deterministic TDMA for Sensor Networks," in Distributed Computing and Internet Technology, 2005, pp. 69-81.

[10] S. Kulkarni and M. Arumugam, "SS-TDMA: A Self-Stabilizing MAC for Sensor Networks," in Sensor Network Operations, 2006.

[11] R. Tjoa, K. Chee, P. Sivaprasad, S. Rao, and J. Lim, "Clock Drift Reduction for Relative Time Slot TDMA-Based Sensor Networks," in 15th IEEE International Symposium on Personal, Indoor and Mobile Radio Communications, 2004, vol. 2, 2004.

[12] R. Pussente and V. Barbosa, "An Algorithm for Clock Synchronization with the Gradient Property in Sensor Networks," Distributed Journal of Parallel and Computing, vol. 69, no. 3, pp. 261-265, 2009.

---

This revised version aims to provide a clearer, more coherent, and professional presentation of the content.