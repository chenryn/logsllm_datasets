### Optimal Performance with 4 Threads for Inference

We observe optimal performance when using 4 threads for inference. This can be attributed to the adoption of Arm’s big.LITTLE architecture [49] in phones with 8 cores. In this architecture, 4 cores are designed for efficiency and are slower than the other 4 cores, which are designed for performance. In contrast, all cores in quad-core Android devices are uniform.

To validate the impact of heterogeneous cores on inference time, we plotted the variation in inference time against the number of threads used on an Android device with 8 cores following Arm’s big.LITTLE architecture and a Linux server with 24 equivalent cores running x86. The results show that inference times start increasing beyond 4 threads on the Android device, while they only begin to rise after 24 threads on the Linux server. These findings are illustrated in Figure 17.

Our producer/consumer OCR system is not affected by the heterogeneity of CPU cores because it invokes multiple interpreters.

### Error Analysis for Card Tampering and Fake Media Detection Models

The card tampering detection model, when tested on 50 random scans with feedback, made an average of 1.94 errors per frame. We also evaluated the model on 1,973 centered frames extracted from these scans, resulting in a total of 1.26 errors per frame.

For the fake media detection model, we tested it on 24,829 frames extracted from 330 scans without feedback. The model achieved an accuracy of 86.24%, making correct predictions on 21,413 out of 24,829 frames. Additionally, on 9,512 centered frames extracted from 273 scans with feedback, the model achieved an accuracy of 95.26%, making correct predictions on 9,061 frames.

### Impact of Increasing Frame Rate on Success Rate

This section addresses whether increasing the current frame rates would lead to further improvements in success rate without changing the machine learning model. Since card scanning involves sending frames from a live camera feed through a machine learning model, faster frame rates could result in consecutive frames being nearly identical, leading to no gains from a higher frame rate. Alternatively, there may be sufficient differences between consecutive frames for the machine learning model to produce better predictions, potentially reducing scanning duration.

To illustrate, consider an OCR model processing frames at 5 FPS for 10 seconds, resulting in 50 frames. If the model makes correct predictions on 10 frames, then 10 out of 50 frames are useful. If the same model processes the same 10-second feed at 10 FPS, it will process 100 frames. If this setting results in more useful frames, then a higher frame rate would lead to shorter scanning times on average.

To study this, we analyzed videos from our user study (Section VI-D) by simulating different frame rates by extracting frames at various intervals. Closer intervals represent faster frame rates, and wider intervals represent slower frame rates. We then passed these frames through two OCR models (Boxer OCR and Daredevil OCR) and computed the percentage of useful frames for each frame rate. Figure 19 shows the variation in frame rates to the percentage of frames with successful predictions, averaged over 27 different scanning videos. The plots indicate that as frame rates increase, the number of useful frames also increases, suggesting that even closely spaced frames contain sufficient diversity to lead to different and possibly correct predictions with the same machine learning model. Thus, enhancing systems to achieve higher frame rates can lead to faster scanning times and a better user experience.

### References

[1] Prepaid Cards for the Unbanked and Underbanked. https://www.needhelppayingbills.com/html/prepaid_cards_help_unbanked_and_underbanked.html.

[2] Martín Abadi, Paul Barham, Jianmin Chen, Zhifeng Chen, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Geoffrey Irving, Michael Isard, Manjunath Kudlur, Josh Levenberg, Rajat Monga, Sherry Moore, Derek G. Murray, Benoit Steiner, Paul Tucker, Vijay Vasudevan, Pete Warden, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. TensorFlow: A System for Large-Scale Machine Learning. In Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation, OSDI'16, pages 265–283, USA, 2016. USENIX Association.

[3] Apple, Inc. CoreML. https://developer.apple.com/machine-learning/core-ml/.

[4] Apple, Inc. Countries and Regions That Support Apple Pay. https://support.apple.com/en-us/HT207957.

[5] Alex Beutel, Jilin Chen, Tulsee Doshi, Hai Qian, Allison Woodruff, Christine Luu, Pierre Kreitmann, Jonathan Bischof, and Ed H. Chi. Putting Fairness Principles into Practice: Challenges, Metrics, and Improvements. In Proceedings of the 2019 AAAI/ACM Conference on AI, Ethics, and Society, AIES '19, pages 453–459, New York, NY, USA, 2019. Association for Computing Machinery.

[6] Airbnb Data Science Blog. Fighting Financial Fraud with Targeted Friction, February 2018. https://medium.com/airbnb-engineering/fighting-financial-fraud-with-targeted-friction-82d950d8900e.

[7] Uber Engineering Blog. Advanced Technologies for Detecting and Preventing Fraud at Uber, June 2018. https://eng.uber.com/advanced-technologies-detecting-preventing-fraud-uber/.

[8] Michal Busta, Lukas Neumann, and Jiri Matas. Deep TextSpotter: An End-to-End Trainable Scene Text Localization and Recognition Framework. In The IEEE International Conference on Computer Vision (ICCV), October 2017.

[9] Zainul Abi Din, Hari Venugopalan, Jaime Park, Andy Li, Weisu Yin, Haohui Mai, Yong Jae Lee, Steven Liu, and Samuel T. King. Boxer: Preventing Fraud by Scanning Credit Cards. In USENIX Security Symposium (USENIX Security 2020). USENIX, 2020.

[10] Sanghamitra Dutta, Dennis Wei, Hazar Yueksel, Pin-Yu Chen, Sijia Liu, and Kush R. Varshney. An Information-Theoretic Perspective on the Relationship Between Fairness and Accuracy, 2019.

[11] Kate Fazzini. How Criminals Use Uber and Airbnb to Launder Money Stolen from Your Credit Card, 2019. https://www.cnbc.com/2019/02/07/how-criminals-use-airbnb-uber-launder-stolen-credit-card-money.html.

[12] R. Girshick, J. Donahue, T. Darrell, and J. Malik. Rich Feature Hierarchies for Accurate Object Detection and Semantic Segmentation. In 2014 IEEE Conference on Computer Vision and Pattern Recognition, pages 580–587, 2014.

[13] Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative Adversarial Networks, 2014.

[14] Google. Add a Payment Method. https://support.google.com/pay/answer/7625139.

[15] Google. Countries Where You Can Use Google Pay. https://support.google.com/pay/answer/9023773.

[16] Google. Edge TPU. https://cloud.google.com/edge-tpu.

[17] Seungyeop Han, Haichen Shen, Matthai Philipose, Sharad Agarwal, Alec Wolman, and Arvind Krishnamurthy. MCDNN: An Approximation-Based Execution Framework for Deep Stream Processing Under Resource Constraints. In Proceedings of the 14th Annual International Conference on Mobile Systems, Applications, and Services, MobiSys '16, pages 123–136, New York, NY, USA, 2016. Association for Computing Machinery.

[18] Hans Peter Luhn. Computer for Verifying Numbers, August 1960. https://patents.google.com/patent/US2950048.

[19] Moritz Hardt, Eric Price, and Nathan Srebro. Equality of Opportunity in Supervised Learning. In Proceedings of the 30th International Conference on Neural Information Processing Systems, NIPS'16, pages 3323–3331, Red Hook, NY, USA, 2016. Curran Associates Inc.

[20] Andrew Howard, Mark Sandler, Grace Chu, Liang-Chieh Chen, Bo Chen, Mingxing Tan, Weijun Wang, Yukun Zhu, Ruoming Pang, Vijay Vasudevan, Quoc V. Le, and Hartwig Adam. Searching for MobileNetV3. CoRR, abs/1905.02244, 2019.

[21] Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun Wang, Tobias Weyand, Marco Andreetto, and Hartwig Adam. MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications. CoRR, abs/1704.04861, 2017.

[22] Yanping Huang, Youlong Cheng, Ankur Bapna, Orhan Firat, Dehao Chen, Mia Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc V Le, Yonghui Wu, and Zhifeng Chen. GPipe: Efficient Training of Giant Neural Networks Using Pipeline Parallelism. In Advances in Neural Information Processing Systems 32, pages 103–112. Curran Associates, Inc., 2019.

[23] Forrest N. Iandola, Matthew W. Moskewicz, Khalid Ashraf, Song Han, William J. Dally, and Kurt Keutzer. SqueezeNet: AlexNet-Level Accuracy with 50x Fewer Parameters and <1MB Model Size. CoRR, abs/1602.07360, 2016.

[24] Andrey Ignatov, Radu Timofte, William Chou, Ke Wang, Max Wu, Tim Hartley, and Luc Van Gool. AI Benchmark: Running Deep Neural Networks on Android Smartphones. CoRR, abs/1810.01109, 2018.

[25] Apple Inc. About Face ID Advanced Technology. https://support.apple.com/en-us/HT208108.

[26] Coinbase Inc. ID Document Verification. https://help.coinbase.com/en/coinbase/getting-started/authentication-and-verification/identity-verification.html.

[27] Lime Inc. Apply for Lime Access. https://www.fountain.com/limebike/apply/united-states-limeaccess.

[28] Lime Inc. Lime Access: Mobility for All. https://www.li.me/community-impact.

[29] Heinrich Jiang and Ofer Nachum. Identifying and Correcting Label Bias in Machine Learning. CoRR, abs/1901.04966, 2019.

[30] Jumio. Breathtaking Growth Requires Smart Onboarding. https://www.jumio.com/app/uploads/2018/01/Instacart-Case-Study.pdf.

[31] Niki Kilbertus, Mateo Rojas-Carulla, Giambattista Parascandolo, Moritz Hardt, Dominik Janzing, and Bernhard Schölkopf. Avoiding Discrimination Through Causal Reasoning. In Proceedings of the 31st International Conference on Neural Information Processing Systems, NIPS'17, pages 656–666, Red Hook, NY, USA, 2017. Curran Associates Inc.

[32] Jian Liu, Cong Shi, Yingying Chen, Hongbo Liu, and Marco Gruteser. CardioCam: Leveraging Camera on Mobile Devices to Verify Users While Their Heart is Pumping. In Proceedings of the 17th Annual International Conference on Mobile Systems, Applications, and Services, MobiSys '19, pages 249–261, New York, NY, USA, 2019. Association for Computing Machinery.

[33] Sicong Liu, Yingyan Lin, Zimu Zhou, Kaiming Nan, Hui Liu, and Junzhao Du. On-Demand Deep Model Compression for Mobile Devices: A Usage-Driven Model Selection Framework. In Proceedings of the 16th Annual International Conference on Mobile Systems, Applications, and Services, MobiSys '18, pages 389–400, New York, NY, USA, 2018. Association for Computing Machinery.

[34] Wei Liu, Dragomir Anguelov, Dumitru Erhan, Christian Szegedy, Scott Reed, Cheng-Yang Fu, and Alexander C. Berg. SSD: Single Shot MultiBox Detector. In Bastian Leibe, Jiri Matas, Nicu Sebe, and Max Welling, editors, Computer Vision – ECCV 2016, pages 21–37, Cham, 2016. Springer International Publishing.

[35] Lyft Engineering Blog. Stopping Fraudsters by Changing Products, December 2017. https://eng.lyft.com/stopping-fraudsters-by-changing-products-452240f2d2cc.

[36] Deepak Narayanan, Aaron Harlap, Amar Phanishayee, Vivek Seshadri, Nikhil R. Devanur, Gregory R. Ganger, Phillip B. Gibbons, and Matei Zaharia. PipeDream: Generalized Pipeline Parallelism for DNN Training. In Proceedings of the 27th ACM Symposium on Operating Systems Principles, SOSP '19, pages 1–15, New York, NY, USA, 2019. Association for Computing Machinery.

[37] Alfred Ng. Uber Fights Off Scammers Every Day. Here's How It Learned the Tricks. https://www-cnet-com.cdn.ampproject.org/c/s/www.cnet.com/google-amp/news/uber-fights-off-scammers-every-day-heres-how-it-learned-the-tricks/.

[38] Samuel S. Ogden and Tian Guo. Characterizing the Deep Neural Networks Inference Performance of Mobile Applications, 2019.

[39] PayPal. Card.io: Scan Credit Cards in Your Mobile App. https://card.io.

[40] Karthik Ramasamy and Lenny Evans. Using Computer Vision to Combat Stolen Credit Card Fraud. In Strata Data Conference, March 2018.

[41] X. Ran, H. Chen, X. Zhu, Z. Liu, and J. Chen. DeepDecision: A Mobile Deep Learning Framework for Edge Video Analytics. In IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, pages 1421–1429, 2018.

[42] Joseph Redmon, Santosh Kumar Divvala, Ross B. Girshick, and Ali Farhadi. You Only Look Once: Unified, Real-Time Object Detection. 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 779–788, 2016.

[43] Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun. Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in Neural Information Processing Systems 28, pages 91–99. Curran Associates, Inc., 2015.

[44] Sam Tolomei. Shrinking APKs, Growing Installs. https://medium.com/googleplaydev/shrinking-apks-growing-installs-5d3fcba23ce2.

[45] Mark Sandler, Andrew G. Howard, Menglong Zhu, Andrey Zhmoginov, and Liang-Chieh Chen. Inverted Residuals and Linear Bottlenecks: Mobile Networks for Classification, Detection, and Segmentation. CoRR, abs/1801.04381, 2018.

[46] N. Scaife, J. Bowers, C. Peeters, G. Hernandez, I. N. Sherman, P. Traynor, and L. Anthony. Kiss from a Rogue: Evaluating Detectability of Pay-at-the-Pump Card Skimmers. In 2019 IEEE Symposium on Security and Privacy (SP), pages 1000–1014, 2019.

[47] Nolen Scaife, Christian Peeters, and Patrick Traynor. Fear the Reaper: Characterization and Fast Detection of Card Skimmers. In 27th USENIX Security Symposium (USENIX Security 18), pages 1–14, Baltimore, MD, 2018. USENIX Association.

[48] Stripe. Disputes and Fraud. https://stripe.com/docs/disputes.

[49] Arm Technologies. Arm big.LITTLE. https://www.arm.com/why-arm/technologies/big-little.

[50] Uber. Verifying Your Account. https://help.uber.com/ubereats/article/verifying-your-account?nodeId=0b38e02f-eb4c-41f9-92e5-6b8c409e20c7.

[51] Erkam Uzun, Simon Chung, Irfan Essa, and Wenke Lee. RTCaptcha: A Real-Time CAPTCHA Based Liveness Detection System. 02 2018.

[52] Verizon. What is the Difference Between 3G, 4G, and 5G? https://www.verizon.com/about/our-company/5g/difference-between-3g-4g-5g.

[53] Robert Wang, Xiang Li, Shuang Ao, and Charles Ling. Pelee: A Real-Time Object Detection System on Mobile Devices. 04 2018.

[54] C. Wu, D. Brooks, K. Chen, D. Chen, S. Choudhury, M. Dukhan, K. Hazelwood, E. Isaac, Y. Jia, B. Jia, T. Leyvand, H. Lu, Y. Lu, L. Qiao, B. Reagen, J. Spisak, F. Sun, A. Tulloch, P. Vajda, X. Wang, Y. Wang, B. Wasti, Y. Wu, R. Xian, S. Yoo, and P. Zhang. Machine Learning at Facebook: Understanding Inference at the Edge. In 2019 IEEE International Symposium on High Performance Computer Architecture (HPCA), pages 331–344, 2019.

[55] Mengwei Xu, Jiawei Liu, Yuanqiang Liu, Felix Xiaozhu Lin, Yunxin Liu, and Xuanzhe Liu. A First Look at Deep Learning Apps on Smartphones. In The World Wide Web Conference, WWW '19, pages 2125–2136, New York, NY, USA, 2019. Association for Computing Machinery.