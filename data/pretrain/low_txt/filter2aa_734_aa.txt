# Printing is Still the Stairway to Heaven: A Decade After Stuxnet’s Printer Vulnerability

## Authors
- **Peleg Hadar, Senior Security Researcher**
  - 7+ years in Information Security (InfoSec)
  - Senior Security Researcher at SafeBreach Labs
  - Focus on Windows internals and vulnerability research
  - Twitter: @peleghd

- **Tomer Bar, Research Team Lead**
  - 15+ years in Cyber Security
  - Research Team Lead at SafeBreach Labs
  - Focus on Advanced Persistent Threats (APT) and vulnerability research
  - Past Publications:
    - "Prince of Persia - Terminating 10 Years Campaign For Fun And Profit"
    - "Infy Malware Active In Decade Of Targeted Attacks"
    - "KasperAgent and Micropsia - Targeted Attacks In The Middle East"
    - "Ride The Lightning With Foudre"
    - "Double Edge Sword Attack - Exploiting Quasar Rat Command and Control"
    - "BadPatch (APT-C-23)"

## Agenda
- **Is Stuxnet 2.0 Possible?**
  - Analysis of Stuxnet's propagation capabilities (vulnerabilities)
    - Root Cause
    - Patch
    - Re-Exploitation or Equivalent Newer Vulnerability in the Same Component
  - Our Research
    - How we re-exploited a patched 10-year-old MS Windows vulnerability
    - Demonstration of 2 unpatched 0-day vulnerabilities (pre-coordinated with Microsoft)
  - Mitigations and Suggestions
    - Better Patch
    - Better real-time prevention for an entire bug class

### Key Takeaways
- Is it possible to abuse patched vulnerabilities?
- Can these vulnerabilities reoccur?

## Terminology
- **Narrow Patch**: A patch that addresses only a specific aspect of a vulnerability without fully resolving the underlying issue.

## Stuxnet Recap & Timeline
- Stuxnet, as seen in "0 Days," utilized multiple vulnerabilities for its propagation and evasion capabilities.
- Propagation Capabilities:
  - 5 Vulnerabilities
    - 2 Local Privilege Escalation (LPE)
    - 3 Remote Code Execution (RCE)
  - Rootkit
  - Stolen Certificate
  - Final Payload
  - Siemens-Related Actions
- Evasion Capabilities
- ICS Target Detection
- ICS Capabilities

### Main Building Blocks
- **MS10-046 (LNK)**
- **MS10-061 (Spooler)**
- **MS06-040 (RPC)**
- **MS10-092 (Task Scheduler)**
- **MS10-073 (Win32k)**

## LNK File Exploitation
- **Root Cause**:
  - LNK file points to an icon resource.
  - CPL (DLL) file contains the malicious code.
  - Icon Resource ID = 0
  - User-controlled input from LNK.

- **Exploitation Path**:
  - LoadLibraryW
  - CPL_LoadCPLModule
  - LoadAndFindApplet

- **Patch Effectiveness (MS10-046)**:
  - The patch did not modify the call to `LoadLibraryW`.
  - Added validation to check if `IconID` is 0 and if the CPL is registered.
  - If not, change `IconID` to -1 and do not load the CPL.

- **CVE-2015-0096 Patch Bypass**:
  - Truncated to 260 wide characters.
  - Original path: 554 wide characters.
  - Example: `[ c : \ M a . d l l , -  \ 0 ]`
  - `int dwIconId = StrToIntW(L”-”)` results in `dwIconId` being 0.

- **CVE-2017-8464**:
  - Added validation to check if the CPL is registered.
  - Not yet exploited.

## RPC Exploitation
- **Root Cause (CVE-2006-3439)**:
  - NetpwPathCanonicalize allocates 0x414 bytes but limits the path length to 0x411 Unicode characters (0x822 bytes).
  - Stack-based buffer overflow.

- **Exploitation Path**:
  - Wcscat
  - NetpwPathCanonicalize
  - Stack Out-of-Bounds (OOB) write primitive

- **Patch (MS06-040)**:
  - Check if the path length is more than 0x207.
  - Omit the `wcscat` function call.

- **CVE-2008-4250**:
  - Similar stack-based buffer overflow.
  - _StringCopyWorkerW
  - Wcscpy
  - Stack OOB write primitive

- **Patch (MS08-067)**:
  - Addressed the buffer overflow by adding additional checks and modifying string copy functions.

## Conclusion
- The possibility of re-exploiting patched vulnerabilities remains a significant concern.
- Narrow patches can leave room for bypasses, highlighting the need for comprehensive security measures.
- Real-time prevention and better patching strategies are essential to mitigate such risks.