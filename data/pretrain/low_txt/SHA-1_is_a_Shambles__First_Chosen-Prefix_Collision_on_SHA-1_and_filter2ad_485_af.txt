### Certificates and SHA-1 Usage

SHA-1 certificates are still in use for legacy purposes, particularly in services that cater to older clients that cannot be upgraded. Despite the known vulnerabilities, it is still possible to purchase SHA-1 certificates today, and there are a few recently-issued SHA-1 certificates in use on the web. Additionally, some older SHA-1 certificates remain in circulation. While modern web browsers reject these certificates, non-web TLS clients may still accept them. For example, the Mail application in Windows 10 can open an IMAP session secured with a SHA-1 certificate without issuing a warning.

#### Historical Attacks on MD5 and SHA-1

In the past, chosen-prefix (CP) collisions against MD5 have been used to break the security of certificates. Notable examples include the creation of a rogue Certificate Authority (CA) by Stevens et al. [27] and the Flame malware [21]. If any CAs still issuing SHA-1 certificates use predictable serial numbers, a similar attack could be feasible today. The serial number is located at the beginning of the "to-be-signed" part of the certificate, and if it is unpredictable, the CP collision attack is thwarted as a crucial part of the hashed input is not controlled by the attacker.

### SHA-1 Usage in TLS

Beyond certificates, SHA-1 can be used in two other places within the TLS protocol: signing the handshake and using HMAC-SHA-1 to authenticate data in the record protocol.

#### Handshake

Client authentication in TLS involves a signature of the transcript, which can be abused using CP collisions, as demonstrated by the SLOTH attacks [1]. However, this remains impractical due to the short time window (typically a few seconds, but can be up to several minutes) required to compute the collision.

- **TLS 1.0 and 1.1**: The handshake is hashed with the concatenation of SHA-1 and MD5. Using the multicollision attack from Joux [9], computing a CP collision for MD5 || SHA-1 is not much harder than for SHA-1 alone. Table 2 provides concrete figures, indicating that this is likely within reach of a motivated adversary.
- **TLS 1.2**: The hash function used is configurable. Most TLS 1.0/1.1 clients and servers support SHA-1, and many servers prefer to use SHA-1 even when better algorithms are offered by the client.
- **TLS 1.3**: MD5 and SHA-1 have been removed from the protocol.

#### Ciphersuites

The majority of clients and servers support ciphersuites where HMAC-SHA-1 is used to authenticate packets, primarily for interoperability reasons. It is estimated that HMAC-SHA-1 usage represents a few percent of all connections. Although this usage is not directly threatened by our attack, we recommend avoiding SHA-1 when possible.

#### OpenSSL and Debian Linux

- **OpenSSL**: The next version of OpenSSL will no longer allow X.509 certificates signed with SHA-1 at security level 1 and above (commit 68436f0). Since security level 1 is the default configuration for TLS/SSL, this will prevent SHA-1 usage for certificates.
- **Debian Linux**: The latest release (Debian Buster) sets the default configuration to security level 2 (defined as 112-bit security), which already prevents dangerous SHA-1 usage for certificates and handshake signatures.

### SHA-1 Usage in SSH

SHA-1's usage in SSH is similar to its usage in TLS. The SSH-2 protocol supports SHA-1 for signing the transcript (at the end of the key exchange) and HMAC-SHA-1 for authenticating data in the record protocol. As in the TLS case, using SHA-1 to sign the transcript has been shown to be potentially vulnerable to the SLOTH attack [1], but this is not practical given the timing constraints.

- **Scans**: Approximately 17% of servers use SHA-1 to sign the transcript, and 9% of servers use HMAC-SHA-1 in the record protocol, primarily corresponding to servers running old versions of SSH daemons.
- **OpenSSH**: Starting with version 8.2, OpenSSH includes a "future deprecation notice" explaining that SHA-1 signatures will be disabled in the near future.

### Other Usages of SHA-1

#### DNSSEC

SHA-1 is still used in DNSSEC, with 18% of top-level domains using SHA-1 at the time of writing. Since DNSSEC signatures include user-supplied content, CP collisions could be used to attack the DNSSEC system.

#### GIT

GIT heavily relies on SHA-1 to identify all objects in a repository. While it does not necessarily require cryptographic security from SHA-1, there are attack scenarios where SHA-1 vulnerabilities could matter. Specifically, signed GIT commits are essentially signatures of a SHA-1 hash, making them sensitive to collision attacks. The GIT developers are working on replacing SHA-1 and use a collision detection library [26] to mitigate risks.

#### Timestamping

Many timestamping servers, such as those provided by Sectigo, still support SHA-1.

### Conclusion and Future Work

This work conclusively demonstrates that SHA-1 should not be used in any security protocol where collision resistance is expected. Continued use of SHA-1 for certificates or for authenticating handshake messages in TLS or SSH is dangerous and poses a concrete risk of abuse by a well-motivated adversary. We strongly advise users to remove SHA-1 support to avoid downgrade attacks.

We also show that gaming or mining GPUs offer a cost-effective way to attack symmetric cryptography primitives. For instance, it now costs less than US$ 100k to rent GPUs and break cryptography with a security level of 64 bits (i.e., to compute \(2^{64}\) operations of symmetric cryptography).

The cost of our attack is roughly four times that of a plain collision attack, leaving limited room for improvements in terms of complexity. However, there is potential to reduce the number of blocks used in the attack without significantly increasing complexity. This can be achieved by optimizing the global parameters of the general chosen-prefix collision attack and by considering additional differential trails.

### Acknowledgements

The authors would like to thank Vesselin Velichkov for his help with the initial analysis of neutral bits applicability on SHA-1 and Werner Koch for his comments on the applicability of our attacks on PGP. We also thank gpuserversrental.com for their efficient service regarding the GPU cluster renting. The second author is supported by Temasek Laboratories, Singapore.

A small part of the experiments presented in this paper was carried out using the Grid'5000 testbed, supported by a scientific interest group hosted by Inria and including CNRS, RENATER, and several Universities as well as other organizations (see https://www.grid5000.fr). Development and small-scale experiments before launching the main computation were carried out on the rioc cluster from Inria.

### References

[1] Karthikeyan Bhargavan and Gaëtan Leurent. Transcript collision attacks: Breaking authentication in TLS, IKE, and SSH. In NDSS 2016. The Internet Society, February 2016.

[2] Eli Biham and Raﬁ Chen. Near-collisions of SHA-0. In Franklin [8], pages 290–305.

[3] Eli Biham, Raﬁ Chen, Antoine Joux, Patrick Carribault, Christophe Lemuet, and William Jalby. Collisions of SHA-0 and reduced SHA-1. In Ronald Cramer, editor, EUROCRYPT 2005, volume 3494 of LNCS, pages 36–57. Springer, Heidelberg, May 2005.

[4] Gilles Brassard, editor. CRYPTO, volume 435 of Lecture Notes in Computer Science. Springer, 1990.

[5] J. Callas, L. Donnerhacke, H. Finney, D. Shaw, and R. Thayer. RFC 4880 - OpenPGP Message Format. Internet Activities Board, November 2007.

[6] Ivan Damgård. A Design Principle for Hash Functions. In Brassard [4], pages 416–427.

[7] Christophe De Cannière and Christian Rechberger. Finding SHA-1 characteristics: General results and applications. In Xuejia Lai and Kefei Chen, editors, ASIACRYPT 2006, volume 4284 of LNCS, pages 1–20. Springer, Heidelberg, December 2006.

[8] Matthew Franklin, editor. CRYPTO 2004, volume 3152 of LNCS. Springer, Heidelberg, August 2004.

[9] Antoine Joux. Multicollisions in iterated hash functions. Application to cascaded constructions. In Franklin [8], pages 306–316.

[10] Antoine Joux and Thomas Peyrin. Hash functions and the (amplified) boomerang attack. In Alfred Menezes, editor, CRYPTO 2007, volume 4622 of LNCS, pages 244–263. Springer, Heidelberg, August 2007.

[11] Vlastimil Klima. Tunnels in hash functions: MD5 collisions within a minute. Cryptology ePrint Archive, Report 2006/105, 2006. http://eprint.iacr.org/2006/105.

[12] Gaëtan Leurent and Thomas Peyrin. From collisions to chosen-prefix collisions application to full SHA-1. In Yuval Ishai and Vincent Rijmen, editors, EUROCRYPT 2019, Part III, volume 11478 of LNCS, pages 527–555. Springer, Heidelberg, May 2019.

[13] Gaëtan Leurent and Thomas Peyrin. SHA-1 is a Shambles - First Chosen-Prefix Collision on SHA-1 and Application to the PGP Web of Trust. Cryptology ePrint Archive, Report 2020/014, 2020. https://eprint.iacr.org/2020/014.

[14] Marc Stevens. Attacks on Hash Functions and Applications. PHD Thesis, Leiden University, June 2012.

[15] Ralph C. Merkle. One Way Hash Functions and DES. In Brassard [4], pages 428–446.

[16] National Institute of Standards and Technology. FIPS 180-1: Secure Hash Standard, April 1995.

[17] National Institute of Standards and Technology. FIPS 180-2: Secure Hash Standard, August 2002.

[18] National Institute of Standards and Technology. FIPS 202: SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions, August 2015.

[19] Ronald L. Rivest. The MD4 message digest algorithm. In Alfred J. Menezes and Scott A. Vanstone, editors, CRYPTO’90, volume 537 of LNCS, pages 303–311. Springer, Heidelberg, August 1991.

[20] Ronald L. Rivest. RFC 1321: The MD5 Message-Digest Algorithm. Internet Activities Board, April 1992.

[21] Marc Stevens. Counter-cryptanalysis. In Ran Canetti and Juan A. Garay, editors, CRYPTO 2013, Part I, volume 8042 of LNCS, pages 129–146. Springer, Heidelberg, August 2013.

[22] Marc Stevens. New collision attacks on SHA-1 based on optimal joint local-collision analysis. In Thomas Johansson and Phong Q. Nguyen, editors, EUROCRYPT 2013, volume 7881 of LNCS, pages 245–261. Springer, Heidelberg, May 2013.

[23] Marc Stevens, Elie Bursztein, Pierre Karpman, Ange Albertini, and Yarik Markov. The first collision for full SHA-1. In Jonathan Katz and Hovav Shacham, editors, CRYPTO 2017, Part I, volume 10401 of LNCS, pages 570–596. Springer, Heidelberg, August 2017.

[24] Marc Stevens, Pierre Karpman, and Thomas Peyrin. Freestart collision for full SHA-1. In Marc Fischlin and Jean-Sébastien Coron, editors, EUROCRYPT 2016, Part I, volume 9665 of LNCS, pages 459–483. Springer, Heidelberg, May 2016.

[25] Marc Stevens, Arjen K. Lenstra, and Benne de Weger. Chosen-prefix collisions for MD5 and colliding X.509 certificates for different identities. In Moni Naor, editor, EUROCRYPT 2007, volume 4515 of LNCS, pages 1–22. Springer, Heidelberg, May 2007.

[26] Marc Stevens and Daniel Shumow. Speeding up detection of SHA-1 collision attacks using unavoidable attack conditions. In Engin Kirda and Thomas Ristenpart, editors, USENIX Security 2017, pages 881–897. USENIX Association, August 2017.

[27] Marc Stevens, Alexander Sotirov, Jacob Appelbaum, Arjen K. Lenstra, David Molnar, Dag Arne Osvik, and Benne de Weger. Short chosen-prefix collisions for MD5 and the creation of a rogue CA certificate. In Shai Halevi, editor, CRYPTO 2009, volume 5677 of LNCS, pages 55–69. Springer, Heidelberg, August 2009.

[28] Paul C. van Oorschot and Michael J. Wiener. Parallel collision search with cryptanalytic applications. Journal of Cryptology, 12(1):1–28, January 1999.

[29] Xiaoyun Wang, Yiqun Lisa Yin, and Hongbo Yu. Finding collisions in the full SHA-1. In Victor Shoup, editor, CRYPTO 2005, volume 3621 of LNCS, pages 17–36. Springer, Heidelberg, August 2005.