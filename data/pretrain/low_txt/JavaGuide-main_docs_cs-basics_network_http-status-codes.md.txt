---
title: HTTP 常见状态码总结（应用层）
category: 计算机基础
tag:
  - 计算机网络
---

HTTP 状态码用于描述 HTTP 请求的结果，例如 2xx 表示请求已被成功处理。

![常见 HTTP 状态码](https://oss.javaguide.cn/github/javaguide/cs-basics/network/http-status-code.png)

### 1xx Informational（信息性状态码）
相较于其他类型的状态码，1xx 状态码在日常开发中较少遇到，因此本文将直接跳过该部分的详细说明。

### 2xx Success（成功状态码）
- **200 OK**：请求被成功处理。这是最常见的 HTTP 状态码之一，如发送一个查询用户数据的请求到服务器，并且服务器正确返回了所需的数据。
- **201 Created**：请求被成功处理并在服务器上创建了一个新的资源。例如，通过 POST 请求创建新用户时会使用此状态码。
- **202 Accepted**：服务器已接收到请求，但尚未开始处理。这通常意味着请求已经被队列化或计划在未来某个时间点执行。
- **204 No Content**：服务器已成功处理请求，但没有需要返回的内容。这种情况在只关心操作是否成功的场景下特别有用。

特别地，关于 204 状态码，根据 [RFC 2616 对 204 的定义](https://tools.ietf.org/html/rfc2616#section-10.2.5)：
> 服务器已经完成了请求，但是不需要返回任何实体体(body)。响应可能包含更新后的元信息（metadata）。如果客户端是用户代理，则不应更改其文档视图。这种响应主要用于允许输入操作发生而不改变用户代理当前活跃文档的显示方式。

简而言之，当您仅关心某项操作是否成功完成而无需接收额外数据时，可以使用 204 状态码。例如，在询问某人是否同意某事时，如果对方简单回复“好”，则相当于收到了一个 204 响应——表明请求已被接受且无需更多信息。

### 3xx Redirection（重定向状态码）
- **301 Moved Permanently**：资源已被永久移动至新位置。适用于网站 URL 更改等情况。
- **302 Found**：资源暂时位于另一个位置。可用于临时迁移某些资源。

### 4xx Client Error（客户端错误状态码）
- **400 Bad Request**：客户端发送了一个无效或格式不正确的请求。
- **401 Unauthorized**：请求要求身份验证，但未提供有效凭证。
- **403 Forbidden**：服务器理解请求但拒绝执行它。常用于阻止非法访问。
- **404 Not Found**：请求的资源不存在于服务器上。
- **409 Conflict**：请求与当前资源状态冲突，导致无法继续处理。

### 5xx Server Error（服务端错误状态码）
- **500 Internal Server Error**：服务器遇到意外情况，无法完成请求。通常是由于编程错误引起。
- **502 Bad Gateway**：作为网关或代理工作的服务器从上游服务器收到了无效响应。

### 参考资料
- [RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1](https://tools.ietf.org/html/rfc2616)
- [MDN Web Docs: HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)

希望上述内容能帮助您更好地理解和运用各种 HTTP 状态码！