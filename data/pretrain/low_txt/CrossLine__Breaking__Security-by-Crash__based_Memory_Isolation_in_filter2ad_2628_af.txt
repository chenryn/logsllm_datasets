### Address and Output of Tweak Functions

Wilke et al. [28] conducted a detailed study on the Xor-Encrypt-Xor (XEX) mode of memory encryption in AMD’s Epyc 3xx1 series processors. In this mode, the tweak function is XORed with the plaintext twice—both before and after the encryption process. However, the entropy of the tweak functions is limited to 32 bits, which makes brute-force attacks feasible. The authors demonstrated that an adversary who successfully breaks the tweak function can insert arbitrary 2-byte instructions into the encrypted memory using 8MB of plaintext-ciphertext pairs. Fortunately, the vulnerability in the XEX tweak function was addressed in the Zen 2 architecture, released in May 2019.

### Unprotected Nested Page Table (nPT)

Hetzelt and Buhren [10] explored address translation redirection attacks, a concept initially introduced by Jang et al. [11] in the context of hardware-based external monitors. They discussed the potential for remapping guest pages in the nPT to replay previously captured memory pages. This idea was later realized in SEVered [19, 20], where the hypervisor manipulates the nPT to breach the confidentiality of the memory encryption. Specifically, in the SEVered attack, the hypervisor triggers activities of the victim VM’s network-facing application and concurrently monitors its accesses to the encrypted memory using a page-level side channel. By determining the system physical page used to store the response data, the hypervisor can then change the memory mapping in the nPT, tricking the guest VM into responding to network requests from the target page, thereby leaking secrets to the adversary.

### Unprotected I/O Operations

Li et al. [17] exploited unprotected I/O operations to construct encryption and decryption oracles that could encrypt and decrypt arbitrary memory with the victim’s Virtual Encryption Key (VEK). Since SEV’s IOMMU hardware only supports DMA with the hypervisor’s VEK, a shared region within the SEV VM, called the Software I/O Translation Lookaside Buffer (SWIOTLB), is always required for SEV I/O operations. The SEV VM must copy I/O streaming from the SWIOTLB to its private memory when there are incoming I/O data and vice versa for outgoing I/O. This design provides the hypervisor with an opportunity to monitor and alter I/O streaming, thus building encryption and decryption oracles. The paper also noted that these unprotected I/O issues persist in SEV-ES.

### Ciphertext Accessibility

Li et al. [16] presented the first attacks against SEV-SNP, specifically the Cipherleaks attack, a novel side-channel attack on the SEV platform. In this attack, the adversaries continuously monitor ciphertext changes in the VMSA region to infer internal register states. The Cipherleaks attack has been applied to the state-of-the-art OpenSSL library to steal RSA private keys and ECDSA nonces. Microcode patches have been released to mitigate the ciphertext side channels.

### Summary of Attacks Against SEV

Table 1 summarizes the attacks against SEV, their exploited vulnerabilities, the consequences, and the stealthiness of the attacks. SEV-SNP effectively mitigates all known attacks targeting these design flaws, including unencrypted VMCB, unauthenticated encryption, unprotected nPT, and unprotected I/O. However, SEV-SNP does not address ASID abuses and the CrossLine attacks, although it prevents CrossLine V1 by disallowing nPT remapping. Future work will focus on investigating other forms of CrossLine attacks against SEV-SNP.

### Conclusion

In conclusion, this paper demystifies AMD SEV’s ASID-based isolation for encrypted memory pages, cache lines, and TLB entries. It challenges the “security-by-crash” design philosophy adopted by AMD and proposes the CrossLine attacks, a new class of attacks against SEV. These attacks allow an adversary to launch an attacker VM and change its ASID to that of the victim VM, impersonating the victim. Two variants of the CrossLine attacks have been presented and successfully demonstrated on SEV machines. These are the first SEV attacks that do not rely on SEV’s memory integrity flaws.

### Acknowledgements

We thank David Kaplan and other engineers of AMD’s SEV team for their valuable feedback and constructive suggestions, which have significantly improved this paper. This work was partially supported by NSF Awards 1750809, 1834213, and 1834216.

### References

[1] AMD. 2008. AMD-V Nested Paging. http://developer.amd.com/wordpress/media/2012/10/NPT-WP-1%201-final-TM.pdf.
[2] AMD. 2019. Secure Encrypted Virtualization API Version 0.22.
[3] AMD. 2020. AMD SEV-SNP: Strengthening VM Isolation with Integrity Protection and More. White paper (2020).
[4] AMD. 2020. AMD64 architecture programmer’s manual volume 2: System programming.
[5] AMD. 2020. AMDSEV/SEV-ES Branch. https://github.com/AMDESE/AMDSEV/tree/sev-es, commit = 969557455ee30f453da7d25af96291ea0236af77.
[6] Robert Buhren, Shay Gueron, Jan Nordholz, Jean-Pierre Seifert, and Julian Vetter. 2017. Fault Attacks on Encrypted General Purpose Compute Platforms. In 7th ACM on Conference on Data and Application Security and Privacy. ACM.
[7] Claudio Canella, Daniel Genkin, Lukas Giner, Daniel Gruss, Moritz Lipp, Marina Minkin, Daniel Moghimi, Frank Piessens, Michael Schwarz, Berk Sunar, et al. 2019. Fallout: Leaking data on meltdown-resistant cpus. In ACM SIGSAC Conference on Computer and Communications Security. 769–784.
[8] Zhao-Hui Du, Zhiwei Ying, Zhenke Ma, Yufei Mai, Phoebe Wang, Jesse Liu, and Jesse Fang. 2017. Secure Encrypted Virtualization is Unsecure. arXiv preprint arXiv:1712.05090 (2017).
[9] Google. 2020. Introducing Google Cloud Confidential Computing with Confidential VMs. https://cloud.google.com/blog/products/identity-security/introducing-google-cloud-confidential-computing-with-confidential-vms.
[10] Felicitas Hetzelt and Robert Buhren. 2017. Security analysis of encrypted virtual machines. In ACM SIGPLAN Notices. ACM.
[11] Daehee Jang, Hojoon Lee, Minsu Kim, Daehyeok Kim, Daegyeong Kim, and Brent Byunghoon Kang. 2014. Atra: Address translation redirection attack against hardware-based external monitors. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security. 167–178.
[12] David Kaplan. 2017. Protecting VM register state with SEV-ES. White paper.
[13] David Kaplan. 2020. Upcoming x86 Technologies for Malicious Hypervisor Protection. https://static.sched.com/hosted_files/lsseu2019/65/SEV-SNP%20Slides%20Nov%201%202019.pdf.
[14] David Kaplan, Jeremy Powell, and Tom Woller. 2016. AMD memory encryption. White paper (2016).
[15] Paul Kocher, Jann Horn, Anders Fogh, Daniel Genkin, Daniel Gruss, Werner Haas, Mike Hamburg, Moritz Lipp, Stefan Mangard, Thomas Prescher, et al. 2019. Spectre attacks: Exploiting speculative execution. In 2019 IEEE Symposium on Security and Privacy. IEEE, 1–19.
[16] Mengyuan Li, Yinqian Zhang, and Yueqiang Cheng. 2021. CIPHERLEAKS: Breaking Constant-time Cryptography on AMD SEV via the Ciphertext Side Channel. In 30th USENIX Security Symposium. 717–732.
[17] Mengyuan Li, Yinqian Zhang, Zhiqiang Lin, and Yan Solihin. 2019. Exploiting Unprotected I/O Operations in AMD’s Secure Encrypted Virtualization. In 28th USENIX Security Symposium. 1257–1272.
[18] Moritz Lipp, Michael Schwarz, Daniel Gruss, Thomas Prescher, Werner Haas, Anders Fogh, Jann Horn, Stefan Mangard, Paul Kocher, Daniel Genkin, et al. 2018. Meltdown: Reading kernel memory from user space. In 27th USENIX Security Symposium. 973–990.
[19] Mathias Morbitzer, Manuel Huber, and Julian Horsch. 2019. Extracting Secrets from Encrypted Virtual Machines. In 9th ACM Conference on Data and Application Security and Privacy. ACM.
[20] Mathias Morbitzer, Manuel Huber, Julian Horsch, and Sascha Wessel. 2018. SEVered: Subverting AMD’s Virtual Machine Encryption. In 11th European Workshop on Systems Security. ACM.
[21] AMD Roger Lai. 2013. UEFI PlugFest-March (2013), 18–22.
[22] Michael Schwarz, Moritz Lipp, Daniel Moghimi, Jo Van Bulck, Julian Stecklina, Thomas Prescher, and Daniel Gruss. 2019. ZombieLoad: Cross-privilege-boundary data sampling. arXiv preprint arXiv:1905.05726 (2019).
[23] Hovav Shacham. 2007. The Geometry of Innocent Flesh on the Bone: Return-into-libc Without Function Calls (on the x86). In 14th ACM Conference on Computer and Communications Security. ACM.
[24] Teja Singh, Alex Schaefer, Sundar Rangarajan, Deepesh John, Carson Henrion, Russell Schreiber, Miguel Rodriguez, Stephen Kosonocky, Samuel Naffziger, and Amy Novak. 2017. Zen: An Energy-Efficient High-Performance X86 Core. IEEE Journal of Solid-State Circuits 53, 1 (2017), 102–114.
[25] Jo Van Bulck, Marina Minkin, Ofir Weisse, Daniel Genkin, Baris Kasikci, Frank Piessens, Mark Silberstein, Thomas F Wenisch, Yuval Yarom, and Raoul Strackx. 2018. Foreshadow: Extracting the keys to the Intel SGX kingdom with transient out-of-order execution. In 27th USENIX Security Symposium. 991–1008.
[26] Stephan van Schaik, Alyssa Milburn, Sebastian Österlund, Pietro Frigo, Giorgi Maisuradze, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida. 2019. RIDL: Rogue In-Flight Data Load. 2019 IEEE Symposium on Security and Privacy (2019).
[27] Jan Werner, Joshua Mason, Manos Antonakakis, Michalis Polychronakis, and Fabian Monrose. 2019. The SEVerESt Of Them All: Inference Attacks Against Secure Virtual Enclaves. In ACM Asia Conference on Computer and Communications Security. ACM, 73–85.
[28] Luca Wilke, Jan Wichelmann, Mathias Morbitzer, and Thomas Eisenbarth. 2020. SEVurity: No Security Without Integrity–Breaking Integrity-Free Memory Encryption with Minimal Assumptions. 2020 IEEE Symposium on Security and Privacy (2020).