### Optimized Text

#### Reducing Storage in Routers with Low Connectivity
In topologies where routers exhibit low connectivity, one effective method to reduce their storage requirements, if necessary, is through forwarding entry aggregation or virtual address mapping. In most cases, the reduction can be significant, often lowering the average storage usage by more than 5%. 

Next, we examine the FIB (Forwarding Information Base) memory overhead as routers are incrementally removed in the shadow configuration. Our results show that even in the worst-case scenario, the FIB storage of the router with the highest overhead does not increase by more than 35%. The average overhead is significantly lower than this worst-case scenario.

#### FIB Update Overhead
To evaluate the performance impact of frequent FIB updates, we extended our FIB insertion and deletion routines to handle shadow configurations. We used the same setup as in the previous experiment on FIB data forwarding processing overhead, but also introduced random additions and deletions of between 1 and 100 routes in the real configuration (in the 10.0.0.0/8 network) every second at an intermediate router while it was forwarding traffic.

Figure 9 shows the results. There is no noticeable difference in performance whether the shadow configuration is supported or not. It is worth noting that when running this experiment without FIB updates, the CPU utilization for both the shadow kernel and the standard kernel fluctuates much less, but remains nearly identical throughout the experiment.

### Usage Scenarios for Shadow Configurations

#### Equipment Maintenance
One key use case for shadow configurations is equipment maintenance. To demonstrate the effectiveness of our commitment protocol, we conducted an experiment using the Abilene topology and configurations, generating transit traffic based on CAIDA traces from peering routers in New York, Seattle, and Atlanta. Emulab's delay nodes were used to model propagation delays.

In this scenario, the Kansas router was taken down for maintenance and then returned to service. Initially, the real configuration was cloned to the shadow configuration. Next, OSPF was disabled in the shadow configuration on the Kansas router, and after a 10-second wait, the commitment was executed at time 48. This allowed the network operator to safely perform upgrades and restart the router when finished. Once the shadow configuration with Kansas re-enabled converged, the configurations were swapped, allowing the Kansas router to resume forwarding transit traffic.

Figure 11 illustrates the round-trip time (RTT) between the peering routers at New York and Seattle during the commitment and rollback process. Three modes of operation are observed at 82 ms, 92 ms, and 102 ms due to asynchronous execution of the swap in phase 3 of the commitment protocol. The intermediate transition phase is brief, and packet forwarding behavior during this phase is clean and controlled, with no packet losses.

Our commitment protocol is executed over serial consoles to each router. We are currently developing a protocol to access the routers' configuration terminals using both the shadow and real configurations, ensuring resistance to misconfiguration in either configuration.

#### Parameter Tuning
Another use case for shadow configurations is parameter tuning. We evaluated the simultaneous update of a set of OSPF link weights. The real configuration used Abilene's normal link weights, while the shadow configuration had all link weights set to the inverse of the bandwidth (i.e., all equal in the Abilene case). Two methods were used: (1) manual configuration and (2) shadow configurations.

For manual configuration, we updated the link weights using parallel Telnet sessions, which took about 4 seconds. With shadow configurations, we updated the link weights in the shadow configuration, waited 20 seconds for convergence, and then executed the commitment protocol.

Figure 12 shows the RTT between the peering routers at New York and Seattle during the OSPF link weight change. Using the shadow configuration avoids the reconvergence process. Under manual configuration, the RTT fluctuated between 83 ms and 135 ms before settling at 80 ms. With shadow configurations, the transition was quick and smooth, as convergence occurred in the shadow configuration prior to commitment.

#### Testing New Services
The final use case is the testing of new services. We used this scenario to demonstrate our packet cancellation technique, showing that (1) there is minimal impact on transit traffic and (2) performance measurements on shadow traffic accurately reflect true performance.

**Setup:**
- **Real Configuration:** Abilene configuration.
- **Traffic:** Transit traffic generated from CAIDA traces with 30% utilization on the bottleneck link.
- **Shadow Configuration:** Abilene configuration with 4 link weights adjusted for load balancing.
- **Traffic:** Duplicated real traffic and UDP streaming video with 6 servers and 12 clients.

In this scenario, a network operator tested a streaming video application under a new set of OSPF link weights. UDP packet traces were constructed using a high-definition movie trailer and VideoLAN VLC software. The movie trailer alternated between complex scenes (up to 22 Mbps) and a black background with text (450 Kbps).

With this setup, there were intervals when the combined real and shadow traffic intensity exceeded link capacity, making bandwidth partitioning ineffective for accurate performance results. Delay nodes were removed from the Emulab experiment to observe small-scale variations over multihop flows, and 100 Mbps links were used to better observe delay variation.

**Safety for Transit Traffic:**
Our experiments showed that shadow traffic had little effect on real traffic when packet cancellation was enabled. Figure 13 illustrates the delay variation for traffic from Seattle to Chicago. Real traffic performance with packet cancellation enabled overlapped with the performance when only real transit traffic was present, while the delay variation increased sharply up to about 15 ms without packet cancellation. Similar behavior was observed between Salt Lake City and Atlanta (Figure 14), where the round-trip time increased from under 1 ms to 20 ms without packet cancellation. Round-trip time was largely unaffected with packet cancellation enabled.

**Shadow Performance Accuracy:**
We demonstrated that packet cancellation provided accurate performance measurements despite the presence of real transit traffic. For example, the throughput measurement for the video stream from Houston to Chicago (Figure 16) showed the correct value of 22 Mbps. Without packet cancellation, the measurements incorrectly indicated support for only 18 Mbps. Multiple video streams also showed that loss rates with packet cancellation were indicative of the true value. Figure 15 shows the loss rate of streams served by Salt Lake City. Without packet cancellation, it was erroneously reported to be up to 14%, while packet cancellation correctly showed no losses.

**Fine-grained Accuracy:**
Finally, we provided a detailed analysis of how real traffic is protected and the performance characteristics of shadow traffic are preserved under packet cancellation. Using a simple illustrative topology (Figure 5) and CAIDA traces, Figure 17 shows CDFs of delay variation for both real and shadow traffic. The observed performance for real traffic remained largely unchanged as shadow traffic increased until the total raw traffic intensity reached link capacity (100%). Similarly, delay variations for shadow traffic closely approximated its actual behavior.

### Related Work
The importance of configuration management has motivated numerous recent studies and proposals (e.g., [3, 7, 14, 36]). Due to space limitations, we review only the most directly related work.

**Static Analysis and Simulation Tools:**
These tools are valuable for configuration validation in many settings (e.g., [15, 17, 22, 37, 53]). Shadow configurations provide a complementary tool with several advantages, such as scalability. A particular advantage is that they do not depend on an abstract model of the real network, thus avoiding configuration errors caused by inconsistencies between the real network and the model.

- **Model Dependency:** Static analysis and simulation tools often rely on an abstract model of the real network, which may miss configuration errors due to inconsistencies between the real network and the model (e.g., forgotten network equipment or network connectivity).
- **Network Heterogeneity:** The final configuration depends on the entire network processing environment, including hardware, firmware, and software features (including bugs). Typical networks are heterogeneous, consisting of equipment from multiple vendors with distinct features. For example, a survey [36] of 31 production networks found over 200 different software versions running on multiple hardware platforms. Some routers may offer special non-standard features (e.g., Cisco-specific BGP decision steps in addition to the conventional BGP decision process [53]).
- **Interaction of Multiple Services:** The interactions of multiple services can be a source of configuration errors. Complex behaviors may arise only when two features interact. For instance, a routing protocol might compute a backup path, but all packets rerouted to the backup path could be dropped by a packet filter.

By addressing these challenges, shadow configurations offer a robust and practical solution for network configuration management.