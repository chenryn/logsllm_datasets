### Open Geospatial Consortium, Inc.
**Date:** 2010-08-04  
**Document Reference Number:** OGC 06-104r4  
**Version:** 1.2.1  
**Status:** Corrigendum  
**Category:** OpenGIS® Implementation Standard  
**Editor:** John R. Herring

### OpenGIS Implementation Standard for Geographic Information - Simple Feature Access - Part 2: SQL Option
**Copyright © 2010 Open Geospatial Consortium, Inc.**  
To obtain additional rights of use, visit [http://www.opengeospatial.org/legal/](http://www.opengeospatial.org/legal/)

**Document Type:** OpenGIS® Implementation Standard  
**Document Subtype:** None  
**Document Stage:** Approved Corrigendum  
**Document Language:** English

---

### License Agreement
The Open Geospatial Consortium, Inc. ("Licensor") grants permission, free of charge and subject to the terms below, to any person obtaining a copy of this Intellectual Property and associated documentation, to deal in the Intellectual Property without restriction (except as set forth below). This includes, but is not limited to, the rights to implement, use, copy, modify, merge, publish, distribute, and/or sublicense copies of the Intellectual Property. Each person to whom the Intellectual Property is furnished must agree to the terms of this Agreement and retain all copyright notices intact.

If you modify the Intellectual Property, all copies of the modified Intellectual Property must include, in addition to the above copyright notice, a notice that the Intellectual Property includes modifications not approved or adopted by the Licensor.

**This license is a copyright license only and does not convey any rights under any patents that may be in force anywhere in the world.**

**THE INTELLECTUAL PROPERTY IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE DO NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE INTELLECTUAL PROPERTY WILL MEET YOUR REQUIREMENTS OR THAT THE OPERATION OF THE INTELLECTUAL PROPERTY WILL BE UNINTERRUPTED OR ERROR FREE. ANY USE OF THE INTELLECTUAL PROPERTY SHALL BE MADE ENTIRELY AT THE USER’S OWN RISK.**

**IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY CONTRIBUTOR OF INTELLECTUAL PROPERTY RIGHTS TO THE INTELLECTUAL PROPERTY BE LIABLE FOR ANY CLAIM, OR ANY DIRECT, SPECIAL, INDIRECT, OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM ANY ALLEGED INFRINGEMENT OR ANY LOSS OF USE, DATA, OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE, OR UNDER ANY OTHER LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH THE IMPLEMENTATION, USE, COMMERCIALIZATION, OR PERFORMANCE OF THIS INTELLECTUAL PROPERTY.**

This license is effective until terminated. You may terminate it at any time by destroying the Intellectual Property together with all copies in any form. The license will also terminate if you fail to comply with any term or condition of this Agreement. No such termination shall require the termination of any third-party end-user sublicense to the Intellectual Property which is in force as of the date of notice of such termination. If the Intellectual Property, or its operation, infringes, or in the Licensor’s sole opinion is likely to infringe, any patent, copyright, trademark, or other right of a third party, the Licensor may terminate this license without any compensation or liability to you, your licensees, or any other party. Upon termination of any kind, you agree to destroy or cause to be destroyed the Intellectual Property together with all copies in any form, whether held by you or by any third party.

Except as contained in this notice, the name of the Licensor or of any other holder of a copyright in all or part of the Intellectual Property shall not be used in advertising or otherwise to promote the sale, use, or other dealings in this Intellectual Property without prior written authorization of the Licensor or such copyright holder. The Licensor is and shall at all times be the sole entity that may authorize you or any third party to use certification marks, trademarks, or other special designations to indicate compliance with any Licensor standards or specifications.

This Agreement is governed by the laws of the Commonwealth of Massachusetts. The application of the United Nations Convention on Contracts for the International Sale of Goods is hereby expressly excluded. In the event any provision of this Agreement is deemed unenforceable, void, or invalid, such provision shall be modified to make it valid and enforceable, and as so modified, the entire Agreement shall remain in full force and effect. No decision, action, or inaction by the Licensor shall be construed as a waiver of any rights or remedies available to it.

None of the Intellectual Property or underlying information or technology may be downloaded or otherwise exported or re-exported in violation of U.S. export laws and regulations. You are responsible for complying with any local laws in your jurisdiction that may impact your right to import, export, or use the Intellectual Property. You represent that you have complied with any regulations or registration procedures required by applicable law to make this license enforceable.

---

### Contents
- **Foreword** ........................................................................................................................................................... vii
- **Introduction** ...................................................................................................................................................... viii
- **1 Scope** ...................................................................................................................................................... 2
- **2 Conformance** .......................................................................................................................................... 3
- **3 Normative References** ............................................................................................................................ 3
- **4 Terms and Definitions** ........................................................................................................................... 3
- **5 Symbols and Abbreviated Terms** .......................................................................................................... 4
  - **5.1 Abbreviations** ......................................................................................................................................... 4
  - **5.2 Symbols** .................................................................................................................................................. 4
- **6 Architecture** ............................................................................................................................................ 5
  - **6.1 Architecture — SQL Implementation Using Predefined Data Types** .................................................. 5
    - **6.1.1 Overview** ................................................................................................................................................. 5
    - **6.1.2 Identification of Feature Tables and Geometry Columns** ..................................................................... 6
    - **6.1.3 Identification of Spatial Reference Systems** ....................................................................................... 7
    - **6.1.4 Feature Tables** ........................................................................................................................................ 7
    - **6.1.5 Geometry Tables** ..................................................................................................................................... 7
    - **6.1.6 Text** ......................................................................................................................................................... 9
    - **6.1.7 Use of Numeric Data Types** .................................................................................................................. 13
    - **6.1.8 Notes on SQL/CLI Access to Geometry Values Stored in Binary Form** ........................................... 13
  - **6.2 Architecture — SQL Implementation Using Geometry Types** ......................................................... 13
    - **6.2.1 Overview** ............................................................................................................................................... 13
    - **6.2.2 Identification of Feature Tables and Geometry Columns** ................................................................... 14
    - **6.2.3 Identification of Spatial Reference Systems** ..................................................................................... 15
    - **6.2.4 Feature Tables** ...................................................................................................................................... 15
    - **6.2.5 Background Information on SQL User Defined Types** .................................................................... 15
    - **6.2.6 SQL Geometry Type Hierarchy** ........................................................................................................... 16
    - **6.2.7 Geometry Values and Spatial Reference Systems** ............................................................................. 17
    - **6.2.8 Access to Geometry Values in the SQL with Geometry Type Case** ................................................ 17
    - **6.2.9 Text** ....................................................................................................................................................... 17
- **7 Clause Component Specifications** ..................................................................................................... 19
  - **7.1 Components — Implementation of Feature Tables Based on Predefined Data Types** .................... 19
    - **7.1.1 Conventions** ......................................................................................................................................... 19
    - **7.1.2 Spatial Reference System Information** ............................................................................................... 19
    - **7.1.3 Geometry Columns Information** ......................................................................................................... 20
    - **7.1.4 Feature Tables** ...................................................................................................................................... 24
    - **7.1.5 Geometry Tables** ................................................................................................................................... 25
    - **7.1.6 Operators** .............................................................................................................................................. 29
  - **7.2 Components — SQL with Geometry Types Implementation of Feature Tables** ............................. 29
    - **7.2.1 Conventions** ......................................................................................................................................... 29
    - **7.2.2 SQL Geometry Types** .......................................................................................................................... 29
    - **7.2.3 Feature Tables** ...................................................................................................................................... 29
    - **7.2.4 SQL Routines for Constructing a Geometry Object Given Its Well-Known Text Representation** ... 30
    - **7.2.5 SQL Routines for Constructing a Geometric Object Given Its Well-Known Binary Representation** .................................................................................................................................... 30
    - **7.2.6 SQL Routines for Obtaining Well-Known Text Representation of a Geometric Object** .................. 31
    - **7.2.7 SQL Routines for Obtaining Well-Known Binary Representations of a Geometric Object** ............ 31
    - **7.2.8 SQL Routines on Type Geometry** ........................................................................................................ 31
    - **7.2.9 SQL Routines on Type Point** ............................................................................................................... 37
    - **7.2.10 SQL Routines on Type Curve** .............................................................................................................. 40
    - **7.2.11 SQL Routines on Type LineString** ....................................................................................................... 41
    - **7.2.12 SQL Functions on Type Surface** ......................................................................................................... 42
    - **7.2.13 SQL Functions on Type Polygon** ........................................................................................................ 43
    - **7.2.14 SQL Functions on Type Polyhedral Surface** ...................................................................................... 45
    - **7.2.15 SQL Routines on Type GeomCollection** ............................................................................................. 47
    - **7.2.16 SQL Routines on Type MultiPoint** ....................................................................................................... 48
    - **7.2.17 SQL Routines on Type MultiCurve** ...................................................................................................... 48
    - **7.2.18 SQL Routines on Type MultiLineString** .............................................................................................. 49
    - **7.2.19 SQL Routines on Type MultiSurface** ................................................................................................... 50
    - **7.2.20 SQL Routines on Type Text** ................................................................................................................. 51
- **Annex A (Normative) Abstract Test Suite** ...................................................................................................... 56
  - **A.1 Purpose of This Annex** ........................................................................................................................ 56
  - **A.2 Conformance Tests** ............................................................................................................................ 56
    - **A.2.1 Feature Tables** ...................................................................................................................................... 56
    - **A.2.2 Geometry Tables or Type** ..................................................................................................................... 57
    - **A.2.3 Spatial Reference Systems** ................................................................................................................. 57
    - **A.2.4 Geometric Format Supported** ............................................................................................................. 58
    - **A.2.5 Geometric Categories Supported** ...................................................................................................... 59
    - **A.2.6 Text** ....................................................................................................................................................... 59
  - **A.3 Composite Conformance Clauses** .................................................................................................... 60
  - **A.4 Conformance Classes** ........................................................................................................................ 60
    - **A.4.1 Types of Conformance Classes** ......................................................................................................... 60
- **Annex B (Informative) Comparison of Simple Feature Access/SQL and SQL/MM – Spatial** .................... 62
- **Annex C (Informative) Conformance Tests from Version 1.1** ...................................................................... 64
  - **C.1 Purpose of This Annex** ........................................................................................................................ 64
  - **C.2 Test Data** .............................................................................................................................................. 64
    - **C.2.1 Test Data Semantics** ............................................................................................................................ 64
    - **C.2.2 Test Data Points and Coordinates** ..................................................................................................... 66
  - **C.3 Conformance Tests** ............................................................................................................................. 69
    - **C.3.1 Normalized Geometry Schema** ........................................................................................................... 69
    - **C.3.2 Binary Geometry Schema** ................................................................................................................... 79
    - **C.3.3 Geometry Types and Functions** .......................................................................................................... 89

---

### Figures
- **Figure 1: Schema for Feature Tables Using Predefined Data Types** .............................................................................. 6
- **Figure 2: Example of Geometry Table for Polygon Geometry Using SQL** ................................................................... 8
- **Figure 3: Schema for Feature Tables Using SQL with Geometry Types** .................................................................... 14
- **Figure 4: SQL Geometry Type Hierarchy** ..................................................................................................... 16
- **Figure C 1: Test Data Concept — Blue Lake Vicinity Map** ....................................................................................... 65
- **Figure C 2: Points in the Blue Lake Data Set** ............................................................................................................ 67

---

### Tables
- **Table 1: Example of Geometry Table for Polygon Geometry** .......................................................................................9
- **Table 2: Column Definitions for Annotation Text Metadata** ...................................................................................... 11
- **Table 3: Text Metadata Attributes** ............................................................................................................................ 18
- **Table 4: Geometry Type Codes** ................................................................................................................................. 22
- **Table A 1 - Equivalences Between V1.1 and V1.2 Compliance Classes** .................................................................. 61
- **Table B 1: Comparison of SFA-SQL and SQL/MM: Spatial** ................................................................................. 62
- **Table C 1: Coordinates Associated with Each Point in the Blue Lake Data Set** ........................................................ 68
- **Table C 2: Queries to Determine That Test Data Are Accessible via the Normalized Geometry Schema** ................... 69
- **Table C 3: Queries to Determine That Test Data Are Accessible via the Binary Geometry Schema** ........................... 79
- **Table C 4: Queries That Accomplish the Test of Geometry Types and Functions** ....................................................... 89

---

### Foreword
This standard consists of the following parts, under the general title **Geographic Information — Simple Feature Access**:
- **Part 1: Common Architecture**
- **Part 2: SQL Option**

This version supersedes all previous versions of the **OpenGIS® Simple Features Implementation Standard for SQL**, including OGC 99-049 "OpenGIS Simple Features Specification for SQL Rev 1.1," and OGC 05-134 "OpenGIS® Implementation Specification for Geographic Information - Simple Feature Access - Part 2: SQL Option."

**Version 1.1 of this standard is a profile of this version in the sense that it is a proper subset of the technology included here, except for some technical corrections and clarifications.**

Attention is drawn to the possibility that some elements of this document may be subject to patent rights. The Open Geospatial Consortium, Inc. shall not be held responsible for identifying any or all such patent rights. Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of the standard set forth in this document, and to provide supporting documentation.

---

### Introduction
This second part of the **OpenGIS® Simple Features Access (SFA)**, also known as ISO 19125, defines a standard Structured Query Language (SQL) schema that supports the storage, retrieval, query, and update of feature collections via the SQL Call-Level Interface (SQL/CLI) (ISO/IEC 9075-3:2003). A feature has both spatial and non-spatial attributes. Spatial attributes are geometry-valued, and simple features are based on two-or-fewer dimensional geometric (point, curve, and surface) entities in 2 or 3 spatial dimensions with linear or planar interpolation between vertices. This standard is dependent on the common architectural components defined in Part 1 of this standard.

In a SQL-implementation, a collection of features of a single type is stored as a "feature table" usually with some geometric-valued attributes (columns). Each feature is primarily represented as a row in this feature table and described by that and other tables logically linked to this base feature table using standard SQL techniques. The non-spatial attributes of features are mapped onto columns whose types are drawn from the set of SQL data types, potentially including SQL3 user-defined types (UDT). The spatial attributes of features are mapped onto columns whose types are based on the geometric data types for SQL defined in this standard and its references.

Feature-table schemas are described for two sorts of SQL-implementations: implementations based on a more classical SQL relational model using only the SQL predefined data types and SQL with additional types for geometry. In any case, the geometric representations have a set of SQL-accessible routines to support geometric behavior and query.

In an implementation based on predefined data types, a geometry-valued column is implemented using a "geometry ID" reference into a geometry table. A geometry value is stored using one or more rows in a single geometry table, all of which have the geometry ID as part of their primary key. The geometry table may be implemented using standard SQL numeric types or SQL binary types; schemas for both are described in this standard.

The term "SQL with Geometry Types" refers to a SQL-implementation that has been extended with a set of "Geometry Types." In this environment, a geometry-valued column is implemented as a column whose SQL type is drawn from this set of Geometry Types. The mechanism for extending the type system of an SQL-implementation is through the definition of user-defined types (UDTs). Commercial SQL-implementations with UDT support have been available since mid-1997, and an ISO standard is available for UDT definition. This standard does not prescribe a particular UDT mechanism but specifies the behavior of the UDTs through a specification of interfaces that must be supported. These interfaces are described for SQL3 UDTs in ISO/IEC 13249-3.

---

### Geographic Information — Simple Feature Access — Part 2: SQL Option

#### 1. Scope
This standard specifies an SQL schema that supports the storage, retrieval, query, and update of geospatial features with simple geometry via the SQL Call Level Interface (SQL/CLI) (ISO/IEC 9075-3:2003).

This standard:
- Establishes an architectural framework for the representation of features,
- Establishes a set of definitions for terms used within that framework,
- Defines a simple geometric profile of ISO 19107 for the definition of the geometric attributes used in that framework,
- Describes a set of SQL Geometry Types together with SQL functions on those types.

The Geometry Types and Functions described in this standard represent a profile of ISO 13249-3. This standard does not attempt to standardize and does not depend upon any part of the mechanism by which Types are added and maintained in the SQL environment, including:
- The syntax and functionality provided for defining types,
- The syntax and functionality provided for defining SQL functions,
- The physical storage of type instances in the database,
- Specific terminology used to refer to User-Defined Types, for example, UDT.

This standard does standardize:
- Names and geometric definitions of the SQL Types for Geometry,
- Names, signatures, and geometric definitions of the SQL Routines for Geometry.

This standard describes a feature access implementation in SQL based on a profile of ISO 19107. ISO 19107 is a behavioral standard and does not place any requirements on how to define the internal structures of Geometry Types in the schema. ISO 19107 does not place any requirements on when or how or who defines the Geometry Types. In particular, a compliant system may be shipped to the database user with the set of Geometry Types and Functions already built into the SQL-implementation, or with the set of Geometry Types and Functions supplied to the database user as a dynamically loaded extension to the SQL-implementation, or in any other implementation consistent with the behavior described in this standard, in ISO 19107, and in ISO/IEC CD 13249-3:2006.

#### 2. Conformance
To conform to this standard, an implementation shall satisfy the requirements of one of the following three conformance classes, as well as the appropriate components of Part 1:
- **SQL Implementation of Feature Tables Based on Predefined Data Types:**
  - Using numeric SQL types for geometry storage and SQL/CLI access,
  - Using binary SQL types for geometry storage and SQL/CLI access.
- **SQL with Geometry Types Implementation of Feature Tables:**
  - Supporting both textual and binary SQL/CLI access to geometry.

Annex B provides conformance tests for each implementation of this standard.

#### 3. Normative References
The following referenced documents are indispensable for the application of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies.

- **[1] ISO/IEC 9075-1, Information Technology — Database Languages — SQL — Part 1: Framework (SQL/Framework)**
- **[2] ISO/IEC 9075-2, Information Technology — Database Languages — SQL — Part 2: Foundation (SQL/Foundation)**
- **[3] ISO/IEC 9075-3, Information Technology — Database Languages — SQL — Part 3: Call-Level Interface (SQL/CLI)**
- **[4] ISO/IEC 9075-4, Information Technology — Database Languages — SQL — Part 4: Persistent Stored Modules (SQL/PSM)**
- **[5] ISO/IEC 9075-5, Information Technology — Database Languages — SQL — Part 5: Host Language Bindings (SQL/Bindings)**
- **[6] ISO/IEC CD 13249-3:2006(E) – Text for FDIS Ballot Information Technology – Database Languages – SQL Multimedia and Application Packages — Part 3: Spatial, May 15, 2006.**
- **[7] ISO 19107, Geographic Information — Spatial Schema**
- **[8] ISO 19109, Geographic Information — Rules for Application Schema**
- **[9] ISO 19119, Geographic Information — Services**
- **[10] ISO 19125-1, Geographic Information — Simple Feature Access — Part 1: Common Architecture**

#### 4. Terms and Definitions
For the purposes of this standard, the following terms and definitions apply:

- **4.1 Feature Table:**
  - A table where the columns represent feature attributes, and the rows represent features.

- **4.2 Geographic Feature:**
  - A representation of a real-world phenomenon associated with a location relative to the Earth.

#### 5. Symbols and Abbreviated Terms

- **5.1 Abbreviations:**
  - **FID:** Feature ID column in the implementation of feature tables based on predefined data types.
  - **GID:** Geometry ID column in the implementation of feature tables based on predefined data types.
  - **MM:** Multimedia.
  - **SQL:** Structured Query Language, not an acronym, pronounced as "sequel."
  - **SQL/MM:** SQL Multimedia and Application Packages.
  - **SRID:** Spatial Reference System Identifier.
  - **SRTEXT:** Spatial Reference System Well Known Text.
  - **WKB:** Well-Known Binary (representation, for example, geometry).
  - **WKT:** Well-Known Text.
  - **WKTR:** Well-Known Text Representation.

- **5.2 Symbols:**
  - **nD:** n-Dimensional, where n may be any integer.
  - **n:** n-Dimensional coordinate space, where n may be any integer.
  - **∅:** Empty set, the set having no members.
  - **∩:** Intersection, operation on two or more sets.
  - **∪:** Union, operation on two or more sets.
  - **\ :** Difference, operation on two sets.
  - **∈:** Is a member of, relation between an element and a set.
  - **∉:** Is not a member of.
  - **⊂:** Is a proper subset of, i.e., a smaller set not containing all of the larger.
  - **⊆:** Is a subset of.
  - **⇔:** If and only if, logical equivalence between statements.
  - **⇒:** Implies, logical implication where the second follows from the first statement.
  - **∃:** There exists.
  - **∀:** For all.
  - **|:** Such that.
  - **f: D → R:** Function "f" from domain "D" to range "R".
  - **{X | s}:** Set of "X" such that the statement "s" is TRUE.
  - **∧:** And, logical intersection.
  - **∨:** Or, logical union.
  - **¬:** Not, logical negation.
  - **=:** Equal.
  - **≠:** Not equal.
  - **≤:** Less than or equal to.
  - **<:** Less than.
  - **≥:** Greater than or equal to.
  - **>:** Greater than.
  - **∂:** Topological boundary operator, mapping a geometric object to its boundary.

#### 6. Architecture

##### 6.1 Architecture — SQL Implementation Using Predefined Data Types

###### 6.1.1 Overview
This section provides an overview of the architecture for implementing feature tables using predefined data types in SQL. It covers the identification of feature tables and geometry columns, the identification of spatial reference systems, and the structure of feature and geometry tables.