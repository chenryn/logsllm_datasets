### Service Stop
**Created:** 2019-03-29T19:00:55.901Z  
**Description:** Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment. (Citation: Talos Olympic Destroyer 2018) (Citation: Novetta Blockbuster)

Adversaries may accomplish this by disabling individual services of high importance to an organization, such as MSExchangeIS, which will make Exchange content inaccessible. (Citation: Novetta Blockbuster) In some cases, adversaries may stop or disable many or all services to render systems unusable. (Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server. (Citation: SecureWorks WannaCry Analysis)

**External References:**
- **Talos Olympic Destroyer 2018:** Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019.
- **Novetta Blockbuster:** Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016.
- **SecureWorks WannaCry Analysis:** Counter Threat Unit Research Team. (2017, May 18). WCry Ransomware Analysis. Retrieved March 26, 2019.

**Detection:**
- Monitor processes and command-line arguments to see if critical processes are terminated or stop running.
- Monitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at `HKLM\SYSTEM\CurrentControlSet\Services`. Systemd service unit files are stored within the `/etc/systemd/system`, `/usr/lib/systemd/system/`, and `/home/.config/systemd/user/` directories, as well as associated symbolic links.
- Alterations to the service binary path or the service startup type changed to disabled may be suspicious.
- Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, `ChangeServiceConfigW` may be used by an adversary to prevent services from starting. (Citation: Talos Olympic Destroyer 2018)

---

### Malware Development
**Created:** 2020-10-01T01:33:01.433Z  
**Description:** Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors. (Citation: Mandiant APT1) (Citation: Kaspersky Sofacy) (Citation: ActiveMalwareEnergy) (Citation: FBI Flash FIN7 USB)

As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.

Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006). (Citation: FireEye APT29)

**External References:**
- **Mandiant APT1:** Mandiant. (n.d.). APT1 Exposing One of China’s Cyber Espionage Units. Retrieved July 18, 2016.
- **Kaspersky Sofacy:** Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015.
- **ActiveMalwareEnergy:** Dan Goodin. (2014, June 30). Active malware operation let attackers sabotage US energy industry. Retrieved March 9, 2017.
- **FBI Flash FIN7 USB:** The Record. (2022, January 7). FBI: FIN7 hackers target US companies with BadUSB devices to install ransomware. Retrieved January 14, 2022.
- **FireEye APT29:** FireEye Labs. (2015, July). HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group. Retrieved September 17, 2015.

**Detection:**
- Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.
- Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.

---

### Regsvcs/Regasm
**Created:** 2017-05-31T21:31:33.499Z  
**Description:** `Regsvcs` and `Regasm` are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)

Adversaries can use `Regsvcs` and `Regasm` to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration or unregistration: `[ComRegisterFunction]` or `[ComUnregisterFunction]` respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs) (Citation: LOLBAS Regasm)

**External References:**
- **MSDN Regsvcs:** Microsoft. (n.d.). Regsvcs.exe (.NET Services Installation Tool). Retrieved July 1, 2016.
- **MSDN Regasm:** Microsoft. (n.d.). Regasm.exe (Assembly Registration Tool). Retrieved July 1, 2016.
- **LOLBAS Regsvcs:** LOLBAS. (n.d.). Regsvcs.exe. Retrieved July 31, 2019.
- **LOLBAS Regasm:** LOLBAS. (n.d.). Regasm.exe. Retrieved July 31, 2019.

**Detection:**
- Use process monitoring to monitor the execution and arguments of `Regsvcs.exe` and `Regasm.exe`.
- Compare recent invocations of `Regsvcs.exe` and `Regasm.exe` with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.
- Command arguments used before and after `Regsvcs.exe` or `Regasm.exe` invocation may also be useful in determining the origin and purpose of the binary being executed.

---

### Device Driver Discovery
**Created:** 2023-03-28T20:14:49.087Z  
**Description:** Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e., [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)), or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)).

Many OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows. (Citation: Microsoft Driverquery) (Citation: Microsoft EnumDeviceDrivers) Information about device drivers (as well as associated services, i.e., [System Service Discovery](https://attack.mitre.org/techniques/T1007)) may also be available in the Registry. (Citation: Microsoft Registry Drivers)

On Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`. (Citation: Linux Kernel Programming) (Citation: lsmod man) (Citation: modinfo man)

**External References:**
- **Microsoft Driverquery:** Microsoft. (n.d.). driverquery. Retrieved March 28, 2023.
- **Microsoft EnumDeviceDrivers:** Microsoft. (2021, October 12). EnumDeviceDrivers function (psapi.h). Retrieved March 28, 2023.
- **Microsoft Registry Drivers:** Microsoft. (2021, December 14). Registry Trees for Devices and Drivers. Retrieved March 28, 2023.
- **Linux Kernel Programming:** Pomerantz, O., Salzman, P. (2003, April 4). The Linux Kernel Module Programming Guide. Retrieved April 6, 2018.
- **lsmod man:** Kerrisk, M. (2022, December 18). lsmod(8) — Linux manual page. Retrieved March 28, 2023.
- **modinfo man:** Russell, R. (n.d.). modinfo(8) - Linux man page. Retrieved March 28, 2023.

**Detection:**
- Monitor for the execution of commands and processes related to device driver enumeration, such as `driverquery.exe`, `EnumDeviceDrivers()`, `lsmod`, and `modinfo`.
- Check for unusual or unauthorized changes to the Registry keys associated with device drivers, such as `HKLM\SYSTEM\CurrentControlSet\Services`.

---

### Sudo Caching
**Created:** 2018-04-18T17:59:24.739Z  
**Description:** The `sudo` command allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments. (Citation: sudo man page 2018) Since `sudo` was made for the system administrator, it has some useful configuration features such as a `timestamp_timeout` that is the amount of time in minutes between instances of `sudo` before it will re-prompt for a password. This is because `sudo` has the ability to cache credentials for a period of time. `Sudo` creates (or touches) a file at `/var/db/sudo` with a timestamp of when `sudo` was last run to determine this timeout. Additionally, there is a `tty_tickets` variable that treats each new tty (terminal session) in isolation. This means that, for example, the `sudo` timeout of one tty will not affect another tty (you will have to type the password again).

Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password. `/var/db/sudo`'s timestamp can be monitored to see if it falls within the `timestamp_timeout` range. If it does, then malware can execute `sudo` commands without needing to supply the user's password. When `tty_tickets` is disabled, adversaries can do this from any tty for that user.

The OSX Proton Malware has disabled `tty_tickets` to potentially make scripting easier by issuing `echo 'Defaults !tty_tickets' >> /etc/sudoers` (Citation: cybereason osx proton). In order for this change to be reflected, the Proton malware also must issue `killall Terminal`. As of macOS Sierra, the `sudoers` file has `tty_tickets` enabled by default.

**External References:**
- **sudo man page 2018:** Todd C. Miller. (2018). Sudo Man Page. Retrieved March 19, 2018.
- **cybereason osx proton:** Amit Serper. (2018, May 10). ProtonB What this Mac Malware Actually Does. Retrieved March 19, 2018.

**Detection:**
- This technique is abusing normal functionality in macOS and Linux systems, but `sudo` has the ability to log all input and output based on the `LOG_INPUT` and `LOG_OUTPUT` directives in the `/etc/sudoers` file.

---

### Domain Account Discovery
**Created:** 2020-02-21T21:08:26.480Z  
**Description:** Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.

Commands such as `net user /domain` and `net group /domain` of the [Net](https://attack.mitre.org/software/S0039) utility, `dscacheutil -q group` on macOS, and `ldapsearch` on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including `Get-ADUser` and `Get-ADGroupMember` may enumerate members of Active Directory groups.

**External References:**
- None

**Detection:**
- Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

---

### Active Setup
**Created:** 2020-12-18T16:33:13.098Z  
**Description:** Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. (Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.

Adversaries may abuse Active Setup by creating a key under `HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\` and setting a malicious value for `StubPath`. This value will serve as the program that will be executed when a user logs into the computer. (Citation: Mandiant Glyer APT 2010) (Citation: Citizenlab Packrat 2015) (Citation: FireEye CFR Watering Hole 2012) (Citation: SECURELIST Bright Star 2015) (Citation: paloalto Tropic Trooper 2016)

Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.

**External References:**
- **Klein Active Setup 2010:** Klein, H. (2010, April 22). Active Setup Explained. Retrieved December 18, 2020.
- **Mandiant Glyer APT 2010:** Glyer, C. (2010). Examples of Recent APT Persistence Mechanism. Retrieved December 18, 2020.
- **Citizenlab Packrat 2015:** Scott-Railton, J., et al. (2015, December 8). Packrat. Retrieved December 18, 2020.
- **FireEye CFR Watering Hole 2012:** Kindlund, D. (2012, December 30). CFR Watering Hole Attack Details. Retrieved December 18, 2020.
- **SECURELIST Bright Star 2015:** Baumgartner, K., Guerrero-Saade, J. (2015, March 4). Who’s Really Spreading through the Bright Star?. Retrieved December 18, 2020.
- **paloalto Tropic Trooper 2016:** Ray, V., et al. (2016, November 22). Tropic Trooper Targets Taiwanese Government and Fossil Fuel Provider With Poison Ivy. Retrieved December 18, 2020.

**Detection:**
- Monitor Registry key additions and/or modifications to `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\`.
- Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders. (Citation: TechNet Autoruns)
- Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.

---

### Hide Artifacts
**Created:** 2020-02-26T17:41:25.933Z  
**Description:** Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection. (Citation: Sofacy Komplex Trojan) (Citation: Cybereason OSX Pirrit) (Citation: MalwareBytes ADS July 2015)

Adversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology. (Citation: Sophos Ragnar May 2020)

**External References:**
- **Sofacy Komplex Trojan:** Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017.
- **Cybereason OSX Pirrit:** Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved December 10, 2021.
- **MalwareBytes ADS July 2015:** Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018.
- **Sophos Ragnar May 2020:** SophosLabs. (2020, May 21). Ragnar Locker ransomware deploys virtual machine to dodge security. Retrieved June 29, 2020.

**Detection:**
- Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts.
- Monitor event and authentication logs for records of hidden artifacts being used.
- Monitor the file system and shell commands for hidden attribute usage.

---

### Dynamic Data Exchange (DDE)
**Created:** 2020-02-12T14:10:50.699Z  
**Description:** Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.

Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: Microsoft ADV170021 Dec 2017) (Citation: Microsoft DDE Advisory Nov 2017)

Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. (Citation: SensePost PS DDE May 2016) (Citation: Kettle CSV DDE Aug 2014) (Citation: Enigma Reviving DDE Jan 2018) (Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program. (Citation: OWASP CSV Injection) (Citation: CSV Excel Macro Injection )

DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM). (Citation: Fireeye Hunting COM June 2019)

**External References:**
- **BleepingComputer DDE Disabled in Word Dec 2017:** Cimpanu, C. (2017, December 15). Microsoft Disables DDE Feature in Word to Prevent Further Malware Attacks. Retrieved December 19, 2017.
- **Microsoft ADV170021 Dec 2017:** Microsoft. (2017, December 12). ADV170021 - Microsoft Office Defense in Depth Update. Retrieved February 3, 2018.
- **Microsoft DDE Advisory Nov 2017:** Microsoft. (2017, November 8). Microsoft Security Advisory 4053440 - Securely opening Microsoft Office documents that contain Dynamic Data Exchange (DDE) fields. Retrieved November 21, 2017.
- **SensePost PS DDE May 2016:** El-Sherei, S. (2016, May 20). PowerShell, C-Sharp and DDE The Power Within. Retrieved November 22, 2017.
- **Kettle CSV DDE Aug 2014:** Kettle, J. (2014, August 29). Comma Separated Vulnerabilities. Retrieved November 22, 2017.
- **Enigma Reviving DDE Jan 2018:** Nelson, M. (2018, January 29). Reviving DDE: Using OneNote and Excel for Code Execution. Retrieved February 3, 2018.
- **SensePost MacroLess DDE Oct 2017:** Stalmans, E., El-Sherei, S. (2017, October 9). Macro-less Code Exec in MSWord. Retrieved November 21, 2017.
- **OWASP CSV Injection:** Albinowax Timo Goosen. (n.d.). CSV Injection. Retrieved February 7, 2022.
- **CSV Excel Macro Injection :** Ishaq Mohammed. (2021, January 10). Everything about CSV Injection and CSV Excel Macro Injection. Retrieved February 7, 2022.
- **Fireeye Hunting COM June 2019:** Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019.

**Detection:**
- Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as `cmd.exe`).
- OLE, Office Open XML, CSV, and other files can be scanned for ‘DDEAUTO’, ‘DDE’, and other strings indicative of DDE execution. (Citation: NVisio Labs DDE Detection Oct 2017) (Citation: OWASP CSV Injection) (Citation: CSV Excel Macro Injection )

---

### Malicious File
**Created:** 2020-03-11T14:49:36.954Z  
**Description:** An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including `.doc`, `.pdf`, `.xls`, `.rtf`, `.scr`, `.exe`, `.lnk`, `.pif`, and `.cpl`.

Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. (Citation: Password Protected Word Docs)

While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access, it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).

**External References:**
- **Password Protected Word Docs:** Lawrence Abrams. (2017, July 12). PSA: Don't Open SPAM Containing Password Protected Word Docs. Retrieved January 5, 2022.

**Detection:**
- Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.
- Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning `powershell.exe`).

---

### Identify Business Tempo
**Created:** 2020-10-02T16:34:32.435Z  
**Description:** Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). (Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).

**External References:**
- **ThreatPost Broadvoice Leak:** Seals, T. (2020, October 15). Broadvoice Leak Exposes 350M Records, Personal Voicemail Transcripts. Retrieved October 20, 2020.

**Detection:**
- Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
- Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.

---

### Security Software Discovery
**Created:** 2017-05-31T21:30:51.330Z  
**Description:** Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

**Examples:**
- **Windows:** Example commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), `reg query` with [Reg](https://attack.mitre.org/software/S0075), `dir` with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.
- **Mac:** It's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.

**Detection:**
- Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1086).

---

### Hardware Information Gathering
**Created:** 2020-10-02T16:40:47.488Z  
**Description:** Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. (Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).

**External References:**
- **ATT ScanBox:** Blasco, J. (2014, August 28). Scanbox: A Reconnaissance Framework Used with Watering Hole Attacks. Retrieved October 19, 2020.
- **ThreatConnect Infrastructure Dec 2020:** ThreatConnect. (2020, December 15). Infrastructure Research and Hunting: Boiling the Domain Ocean. Retrieved October 12, 2021.

**Detection:**
- Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors. (Citation: ThreatConnect Infrastructure Dec 2020) (Citation: ATT ScanBox)
- Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.

---

### Taint Shared Content
**Created:** 2017-05-31T21:31:01.759Z  
**Description:** Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.

A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory `.LNK` files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious `.LNK`-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)

Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, `.EXE`, `.DLL`, `.SCR`, `.BAT`, and/or `.VBS`.

**External References:**
- **Retwin Directory Share Pivot:** Routin, D. (2017, November 13). Abusing network shares for efficient lateral movements and privesc (DirSharePivot). Retrieved April 12, 2018.

**Detection:**
- Processes that write or overwrite many files to a network shared directory may be suspicious.