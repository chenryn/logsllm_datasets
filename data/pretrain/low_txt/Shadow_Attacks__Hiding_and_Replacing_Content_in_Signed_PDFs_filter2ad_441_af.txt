### PDF Signatures and Their Vulnerabilities

PDF signatures are designed to protect the integrity and authenticity of PDF documents. Unlike traditional digital signature use cases, which typically apply a signature only once to a target document, PDF signatures can address more complex scenarios. For instance, a signed PDF can be updated without invalidating its signature, but only under specific conditions. Additionally, a PDF can be signed multiple times in succession.

In this paper, we demonstrate how the flexibility of PDF signatures can be exploited to replace the entire content of a PDF without invalidating the signature. Our research found that 16 out of 29 applications tested were vulnerable to this type of attack. The reasons for this vulnerability can be attributed to several factors in the current PDF specification:

1. **Imprecise Specification**: The PDF specification does not provide clear guidelines on how signature validation should be implemented.
2. **Lack of Documentation for Edge Cases**: The specification fails to document edge cases and does not offer solutions or guidelines for handling them.
3. **Feature-Richness and Security Trade-offs**: The feature-rich nature of the PDF format can weaken security, as it allows for more complex and potentially exploitable behaviors.

As a result, developers must independently solve these issues, leading to inconsistencies and vulnerabilities across different applications. To address these concerns, we recommend that the PDF specification be revised to include stricter and more limited handling of cryptographic protections.

In response to our findings, we have become members of the ISO/TC 171/SC 2 technical committee to contribute to the development of future PDF standards.

### Acknowledgments

The authors would like to thank Sebastian Lauer, Paul Rölsler, Marcus Niemietz, and Jörg Schwenk for their valuable discussions, feedback, and support. Simon Rohlmann was supported by the German Federal Ministry of Economics and Technology (BMWi) project "Industrie 4.0 Recht-Testbed" (13I40V002C). This work was also supported by the German Research Foundation (DFG) within the framework of the Excellence Strategy of the Federal Government and the States – EXC 2092 CASA.

### References

1. United States Government Printing Office, “Electronic Signatures in Global and National Commerce Act,” 2000. [Online]. Available: https://www.govinfo.gov/content/pkg/PLAW-106publ229/pdf/PLAW-106publ229.pdf
2. European Union, “Regulation (EU) No 910/2014 of the European Parliament and of the Council on Electronic Identification and Trust Services for Electronic Transactions in the Internal Market and Repealing Directive 1999/93/EC,” 2014. [Online]. Available: https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32014R0910
3. Wikipedia. (2019) Electronic signatures and law. [Online]. Available: https://en.wikipedia.org/wiki/Electronic_signatures_and_law
4. Adobe. (2018, Nov.) Adobe Fast Facts. [Online]. Available: https://www.adobe.com/about-adobe/fast-facts.html
5. DocuSign. (2019) Docusign 2019 Annual Report. [Online]. Available: https://s22.q4cdn.com/408980645/files/doc_financials/2019/Annual/DocuSign-FY2019-Annual-Report.pdf
6. V. Mladenov, C. Mainka, K. Meyer zu Selhausen, M. Grothe, and J. Schwenk, “1 Trillion Dollar Refund – How to Spoof PDF Signatures,” in ACM Conference on Computer and Communications Security, Nov. 2019.
7. I. Markwood, D. Shen, Y. Liu, and Z. Lu, “PDF Mirage: Content Masking Attack Against Information-Based Online Services,” in 26th USENIX Security Symposium (USENIX Security 17), (Vancouver, BC), 2017, pp. 833–847.
8. pdf-insecurity.org. (2020, Apr) Exploits. [Online]. Available: https://www.pdf-insecurity.org/signature/evaluation_2018.html#desktop-viewer-applications
9. Intarsys. (2020) Release Notes: SignLive 7.1.6. [Online]. Available: https://www.intarsys.de/sites/default/files/Dokumente/ReleaseNotes_SignLive_7.1.6.txt
10. iText. (2020, September) Investigating PDF Shadow Attacks: What Are Shadow Attacks? [Online]. Available: https://itextpdf.com/en/blog/technical-notes/investigating-pdf-shadow-attacks-what-are-shadow-attacks-part-1
11. M. Contributors. (2019, Nov.) 2D Collision Detection. [Online]. Available: https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection
12. A. S. Incorporated, PDF Reference, version 1.7, 6th ed., November 2006.
13. P. Maupin. (2017, Sep.) pdfrw 0.4: Project Description. [Online]. Available: https://pypi.org/project/pdfrw/#all-examples
14. I. Grigg. (2008) Technologists on Signatures: The Wrong Place. [Online]. Available: http://financialcryptography.com/mt/archives/001056.html
15. ——. (2012) Signatures on Fax & Email - If You Did Not Intend to Be Bound, Why Did You Bother to Write It? [Online]. Available: http://financialcryptography.com/mt/archives/001364.html
16. F. Raynal, G. Delugré, and D. Aumaitre, “Malicious Origami in PDF,” Journal in Computer Virology, vol. 6, no. 4, pp. 289–315, 2010. [Online]. Available: http://esec-lab.sogeti.com/static/publications/08-pacsec-maliciouspdf.pdf
17. M. Stevens, E. Bursztein, P. Karpman, A. Albertini, and Y. Markov, “The First Collision for Full SHA-1,” in Annual International Cryptology Conference. Springer, 2017, pp. 570–596.
18. D. Popescu, “Hiding Malicious Content in PDF Documents,” CoRR, vol. abs/1201.0397, 2012. [Online]. Available: http://arxiv.org/abs/1201.0397
19. A. Albertini, “This PDF is a JPEG; or, This Proof of Concept is a Picture of Cats,” PoC || GTFO 0x03, 2014. [Online]. Available: https://www.alchemistowl.org/pocorgtfo/pocorgtfo03.pdf
20. G. Lax, F. Buccafurri, and G. Caminiti, “Digital Document Signing: Vulnerabilities and Solutions,” Information Security Journal: A Global Perspective, vol. 24, no. 1-3, pp. 1–14, 2015.
21. B. Rios, F. Lanusse, and M. Gentile. (2013) Adobe Reader Same-Origin Policy Bypass. [Online]. Available: http://www.sneaked.net/adobe-reader-same-origin-policy-bypass
22. A. Inführ. (2014, Dec.) Multiple PDF Vulnerabilities – Text and Pictures on Steroids. [Online]. Available: https://insert-script.blogspot.de/2014/12/multiple-pdf-vulnerabilites-text-and.html
23. ——. (2015, Sep.) PDF – Mess with the Web. [Online]. Available: https://2015.appsec.eu/wp-content/uploads/2015/09/owasp-appseceu2015-infuhr.pdf
24. H. Valentin, “Malicious URI Resolving in PDF Documents,” Blackhat Abu Dhabi, 2012.
25. G. Franken, T. V. Goethem, and W. Joosen, “Who Left Open the Cookie Jar? A Comprehensive Evaluation of Third-Party Cookie Policies,” in 27th USENIX Security Symposium (USENIX Security 18). Baltimore, MD: USENIX Association, 2018, pp. 151–168. [Online]. Available: https://www.usenix.org/conference/usenixsecurity18/presentation/franken
26. A. Inführ. (2018, May) Adobe Reader PDF Client-Side Request. [Online]. Available: https://insert-script.blogspot.de/2018/05/adobe-reader-pdf-client-side-request.html
27. P. Research. (2018, April) NTLM Credential Theft via Adobe PDF Injection. [Online]. Available: https://research.checkpoint.com/ntlm-credentials-theft-via-pdf-files/
28. P. Laskov and N. Šrndić, “Static Detection of Malicious JavaScript-Bearing PDF Documents,” in Proceedings of the 27th Annual Computer Security Applications Conference. ACM, 2011, pp. 373–382.
29. D. Maiorca, G. Giacinto, and I. Corona, “A Pattern Recognition System for Malicious PDF Files Detection,” in International Workshop on Machine Learning and Data Mining in Pattern Recognition. Springer, 2012, pp. 510–524.
30. C. Smutz and A. Stavrou, “Malicious PDF Detection Using Metadata and Structural Features,” in Proceedings of the 28th Annual Computer Security Applications Conference. ACM, 2012, pp. 239–248.
31. I. Corona, D. Maiorca, D. Ariu, and G. Giacinto, “Lux0r: Detection of Malicious PDF-Embedded JavaScript Code Through Discriminant Analysis of API References,” in Proceedings of the 2014 Workshop on Artificial Intelligent and Security Workshop. ACM, 2014, pp. 47–57.
32. D. Maiorca, D. Ariu, I. Corona, and G. Giacinto, “A Structural and Content-Based Approach for a Precise and Robust Detection of Malicious PDF Files,” in 2015 International Conference on Information Systems Security and Privacy (ICISSP). IEEE, 2015, pp. 27–36.
33. N. Šrndić and P. Laskov, “Hidost: A Static Machine-Learning-Based Detector of Malicious Files,” EURASIP Journal on Information Security, vol. 2016, no. 1, p. 22, 2016.
34. L. Tong, B. Li, C. Hajaj, C. Xiao, and Y. Vorobeychik, “A Framework for Validating Models of Evasion Attacks on Machine Learning, with Application to PDF Malware Detection,” arXiv preprint arXiv:1708.08327, 2017. [Online]. Available: https://arxiv.org/pdf/1708.08327.pdf
35. D. Maiorca and B. Biggio, “Digital Investigation of PDF Files: Unveiling Traces of Embedded Malware,” IEEE Security and Privacy: Special Issue on Digital Forensics, In Press. [Online]. Available: https://pralab.diee.unica.it/sites/default/files/maiorca17-sp.pdf
36. S. Dey, A. Kumar, M. Sawarkar, P. K. Singh, and S. Nandi, “EvadePDF: Towards Evading Machine Learning Based PDF Malware Classifiers,” in Communications in Computer and Information Science, vol. 939, 2019, pp. 140–150.
37. Y. Li, Y. Wang, Y. Wang, L. Ke, and Y. Tan, “A Feature-Vector Generative Adversarial Network for Evading PDF Malware Classifiers,” Information Sciences, vol. 523, pp. 38–48, 2020.
38. A. Corum, D. Jenkins, and J. Zheng, “Robust PDF Malware Detection with Image Visualization and Processing Techniques,” in Proceedings - 2019 2nd International Conference on Data Intelligence and Security, ICDIS 2019, 2019, pp. 108–114.
39. Y. Chen, S. Wang, D. She, and S. Jana, “On Training Robust PDF Malware Classifiers,” in 29th USENIX Security Symposium (USENIX Security 20). Boston, MA: USENIX Association, Aug. 2020. [Online]. Available: https://www.usenix.org/conference/usenixsecurity20/presentation/chen-yizheng
40. W. Xu, Y. Qi, and D. Evans, “Automatically Evading Classifiers,” in Proceedings of the 2016 Network and Distributed Systems Symposium, vol. 10, 2016.
41. N. Šrndić and P. Laskov, “Practical Evasion of a Learning-Based Classifier: A Case Study,” in 2014 IEEE Symposium on Security and Privacy, May 2014, pp. 197–211.
42. Y. Chen, S. Wang, D. She, and S. Jana, “On Training Robust PDF Malware Classifiers,” in 29th USENIX Security Symposium (USENIX Security 20). Boston, MA: USENIX Association, Aug. 2020. [Online]. Available: https://www.usenix.org/conference/usenixsecurity20/presentation/chen-yizheng
43. T. Kuchta, T. Lutellier, E. Wong, L. Tan, and C. Cadar, “On the Correctness of Electronic Documents: Studying, Finding, and Localizing Inconsistency Bugs in PDF Readers and Files,” EMPIRICAL SOFTWARE ENGINEERING, vol. 23, no. 6, pp. 3187–3220, DEC 2018.
44. S. Garfinkel, P. Farrell, V. Roussev, and G. Dinolt, “Bringing Science to Digital Forensics with Standardized Forensic Corpora,” Digital Investigation, vol. 6, pp. S2–S11, 2009.

### Appendix: Email Sent to Vendors

We contacted all vendors via email to gather information on how they fixed the shadow attacks. To ensure comparable results, we requested the information in a multiple-choice format.

**[CERT-Bund#2020030228000759]**

Dear Sir or Madam,

We are security researchers at Ruhr University Bochum. Together with the CERT-Bund (reference: / CVE-2020-9592 / CVE-2020-9596), we informed you in March of this year about security vulnerabilities (called "Shadow Attacks") in your PDF application.

For our research, we are very interested in how the vulnerabilities mentioned above were fixed. To avoid taking up too much of your time, we have created some keywords and would like to ask you to tick the appropriate lines. We are also grateful for any further comments in this context.

**Attack Variant "Hide-and-Replace":**
- [ ] We have not fixed the vulnerability yet.
- [ ] We always mark a signed document as invalid if there are any Incremental Updates after signing.
- [ ] If there is an Incremental Update after signing, we compare the parsed document with and without this Incremental Update.
- [ ] We check the document for hidden object paths before signing.

Thank you for your cooperation.

Best regards,
[Your Name]
[Your Contact Information]