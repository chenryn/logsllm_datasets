### Optimized Text

#### 7.2.2 Routing Process with SR-FCP

Consider a packet \( p \) being routed from the source Autonomous System (AS) \( S \) to the destination AS \( D \). When a router in the source AS \( S \) begins routing the packet, it adds the AS-level path (source route) to the packet header, as proposed by SR-FCP. Suppose an intermediate AS \( I \) contains a router \( R \) that receives the packet \( p \) with an AS-level source route \( ASR(p) \). Let \( ASR(R, D) \) represent the AS-level route computed by \( R \) to the destination AS \( D \), based on its BGP route selection criteria. Finally, let \( N \) be the AS-level next-hop for a given route. The following cases are possible:

1. **Next-Hop Match and Alive:**
   - If \( N = \text{NextHop}(ASR(p)) = \text{NextHop}(ASR(R, D)) \) and the next-hop to \( N \) is alive, \( R \) simply forwards the packet to \( N \).

2. **Next-Hop Match and Dead:**
   - If \( N = \text{NextHop}(ASR(p)) = \text{NextHop}(ASR(R, D)) \) but the next-hop to \( N \) is dead, \( R \) invokes SR-FCP. It adds the AS-path \( I \rightarrow N \) (where \( I \) is the intermediate AS that \( R \) belongs to) to the failure header. Then, \( R \) forwards the packet along the best AS-path it knows, which does not have any failures.

3. **Next-Hop Mismatch:**
   - If \( \text{NextHop}(ASR(p)) \neq \text{NextHop}(ASR(R, D)) \), the AS decides that the source route present in the packet is not compatible with its chosen routes. To prevent transient loops, \( R \) performs the following operations:
     1. Adds \( \text{NextHop}(ASR(p)) \) to the failure header of the packet.
     2. Uses the best route it has to the destination that does not have any failed links and adds that source route to the packet.
   - The degree to which an AS allows non-preferred routes to be used in the source route is a meta-policy decision. This meta-policy represents the tradeoff between the extent to which the AS allows FCP to recover from failures and the adherence to routing policies. For example, an AS might decide to allow only the top two preferred routes.

#### 7.2.3 Discussion

Since BGP propagates only routes that can potentially be used downstream, routers do not obtain the entire link-state of the network. However, after BGP converges, all nodes should have consistent route selection information, meaning all nodes will pick the same AS-level path for each destination prefix. In other words, at all nodes, the AS-level source route in the packet header will be identical to its most preferred route to the destination (Case 1 above).

During the convergence process, routing using the modified SR-FCP protocol ensures that packets will not enter into transient loops. This is because packets are routed using SR-FCP, ensuring that at every stage, the packet either makes progress based on the source route or a link is added to the list of failed links in the packet header. Eventually, the packet will reach the destination or will discover that there are no more paths (based on links in the failure header) and will be dropped. Additionally, the extent to which FCP helps route around failures depends on the flexibility of the policy at the ASes to use source routes that are not the most preferred.

A practical challenge our scheme faces is deployability, as it requires inserting the AS source route and the list of failed links into the IP header. While IP options can be used for this purpose, finding a comprehensive solution is a subject of future work.

#### 8. Related Work

Prior work addressing the problem of routing convergence at the protocol level can be classified into three categories: (a) designing loop-free convergence protocols, (b) reducing the convergence period of protocols, and (c) using precomputed backup paths to route around failures. We do not discuss higher-layer approaches, such as using overlays to bypass underlying routing problems.

The idea of carrying information to route a packet in the packet header itself is inspired by Stoicaâ€™s work on dynamic packet state [30]. FCP is similar in spirit to LOLS [26] used for routing in wireless ad hoc networks. However, FCP separates network map information and transient failures by not introducing transient failures into the map, thus providing better routing guarantees.

**Loop-free Convergence:**
Several approaches ensure that convergence occurs while obeying certain correctness constraints. For example, link-state vector routing [5] advertises a subset of links and uses a termination-detection algorithm to break loops. Diffusing computations [16] achieve theoretical loop-free routing convergence using a distance-vector paradigm. However, as noted by the authors, performance after node failures and network partitions is a concern because all network nodes must be involved in the same diffusing computation.

Reordering LSAs during propagation has been proposed to avoid transient loops for specific cases of protected and planned link failures and cost changes [15]. Not-via addresses [8] use a mechanism similar to the precomputation optimization presented in Section 3.1. A router \( R \) precomputes backup paths to all destinations assuming that another router \( R' \) is down. For link failures, it performs a similar precomputation by iterating over neighboring links. However, the draft states that they do not aim to handle multiple simultaneous link/router failures. Nearside tunneling [7] dynamically constructs tunnels to the closest router adjacent to the failure and forwards traffic via the tunnel during the convergence process. A simpler scheme is to forward via a loop-free alternate path in the presence of failure, or to forward to a U-turn alternate when no loop-free alternate exists [4]. The location of link failures may be inferred from the interface on which the packet arrives [27]. While these approaches improve the properties of the convergence process, they still require routing updates at the control plane and are subject to the control overhead versus availability tradeoff discussed in our results.

**Reducing Convergence Times:**
Some efforts have addressed failure recovery directly at the level of the routing protocol. For instance, Alaettinoglu et al. [3] propose modifying IGP implementations to reduce convergence time to a few milliseconds even when links fail, by adjusting timers and improving the runtime of the route computation algorithm. However, reducing timers can increase control overhead and worsen network stability, as shown by our experimental results. There has been substantial debate over what parameters to use, and it is not clear that there is a single correct choice of these timers or if they can be eliminated completely. Such protocol tweaks are restricted by protocol constraints; for example, arbitrarily reducing the timer values for detecting change in link status could potentially make routes oscillate due to false positives in detecting failed links. Furthermore, adjusting link weights in OSPF can temporarily destabilize the network because often multiple weights need to be adjusted simultaneously.

**Using Precomputed Backup Paths:**
Several works have proposed using precomputed backup routes when primary paths in the network fail. Examples include IP restoration [18], MPLS Fast-Reroute [28], and others [4, 6, 11, 19]. A short evaluation of fast reroute techniques is presented in [14]. More recently, R-BGP [20] proposes using a simple precomputation-based backup method for fast failover during the BGP convergence process, with provable guarantees such as loop-prevention and valley-free routing. Backup routes are practical only when there are small numbers of simultaneous failures. To achieve the guaranteed reachability property of FCP with multiple failures, several backup paths would be needed. From our experiments, we see that even with low failure rates, multiple failures can simultaneously occur in real networks. In contrast to precomputed backup paths, FCP not only provides correctness guarantees in the face of multiple link failures but does so by requiring much less state at the routers than backup path strategies typically do.

#### 9. Conclusion

We proposed Failure-Carrying Packets (FCP), a new routing technique that eliminates the convergence period endured by traditional routing protocols. The basic idea of FCP is simple: once all routers have a loosely-synchronized, consistent view of the network, it is enough for a router to know the list of failed links to correctly compute the path to a destination.

Though we primarily present FCP to introduce a new routing paradigm that is qualitatively different from previous approaches, we also present optimizations that make FCP practical. Using real-world ISP topologies and failure traces, we show that both the computational and packet overhead incurred by FCP is small. We also compare FCP with both OSPF and a commercially-used backup path technique. In the former case, we show that unlike OSPF, FCP can provide both low loss-rate and low control overhead. In the latter case, we show that FCP provides better routing guarantees under failures despite maintaining less state at the routers. Though the basic model of FCP as a link-state routing paradigm is directly applicable only to intradomain networks, we discuss how FCP can be applied to interdomain policy routing as well. Studying the applicability of FCP in different routing networks (such as interdomain routing, wireless networks, sensor networks) more deeply is a topic of future work.

#### Acknowledgements

We would like to thank our colleagues at Berkeley for their feedback and discussions on earlier drafts of the paper. We also thank our shepherd, Dina Papagiannaki, and the anonymous reviewers of SIGCOMM 2007 for valuable suggestions that helped improve the quality of presentation. This research was sponsored by NSF under grant numbers 0205519 and 0225660.

#### References

[1] Abilene observatory data collections. 2006. http://abilene.internet2.edu/observatory/.

[2] Anonymized OC48 traces, CAIDA. 2006. http://data.caida.org/.

[3] C. Alaettinoglu, V. Jacobson, and H. Yu. Towards Millisecond IGP Convergence. IETF Draft, 2000.

[4] A. Atlas. U-turn Alternates for IP/LDP Fast-Reroute. Internet Draft draft-atlas-ip-local-protect-uturn-03.txt, February 2006.

[5] J. Behrens and J. J. Garcia-Luna-Aceves. Distributed, scalable routing based on link-state vectors. In Proc. ACM SIGCOMM, 1994.

[6] S. Bryant, C. Filsls, S. Previdi, and M. Shand. IP Fast Reroute using Tunnels. Internet draft draft-bryant-ipfrr-tunnels-01.txt, Oct 2004.

[7] S. Bryant and M. Shand. A Framework for Loop-free Convergence. Internet Draft draft-bryant-shand-lf-conv-frmwk-03, October 2006.

[8] S. Bryant, M. Shand, and S. Previdi. IP Fast Reroute Using Not-via Addresses. Internet Draft draft-bryant-shand-ipfrr-notvia-addresses-03, 2006.

[9] M. Caesar, D. Caldwell, N. Feamster, J. Rexford, A. Shaikh, and J. van der Merwe. Design and implementation of a routing control platform. In Proc. NSDI, 2005.

[10] G. Choudhury. Prioritized Treatment of Specific OSPF Version 2 Packets and Congestion Avoidance. RFC 4222, October 2005.

[11] G. Choudhury, A. Atlas, R. Torvi, C. Martin, B. Imhoff, and D. Fedyk. Basic Specification for IP Fast-Reroute: Loop-free Alternates. IETF draft, 2005.

[12] B. Davie and Y. Rekhter. MPLS: Technology and Applications. Morgan Kaufmann, 2000.

[13] P. Franciosa, D. Frigioni, and R. Giaccio. Semi-dynamic shortest paths and breadth-first search in digraphs. In STACS, 1997.

[14] P. Francois and O. Bonaventure. An evaluation of IP-based Fast Reroute Techniques. In Proc. CoNEXT, 2005.

[15] P. Francois and O. Bonaventure. Avoiding transient loops during IGP convergence in IP networks. In Proc. INFOCOM, 2005.

[16] J. J. Garcia-Luna-Aceves. Loop-Free Routing Using Diffusing Computations. IEEE/ACM Transactions on Networking, 1993.

[17] Y. Hu, A. Perrig, and M. Sirbu. SPV: Secure Path Vector Routing for Securing BGP. In Proc. ACM SIGCOMM, 2004.

[18] G. Iannaccone, C. Chuah, S. Bhattacharyya, and C. Diot. Feasibility of IP Restoration in a Tier-1 Backbone. IEEE Networks, Special Issue, March 2004.

[19] Juniper-Networks. Configure alternate backup paths using fate-sharing. 2005. http://www.juniper.net/techpubs/software/junos/junos53/swconfig53-mpls-apps/html/mpls-signaled-config37.html.

[20] N. Kushman, S. Kandula, D. Katabi, and B. Maggs. R-BGP: Staying Connected in a Connected World. In Proc. NSDI, 2007.

[21] Z. Mao, R. Govindan, G. Varghese, and R. Katz. Route Flap Damping Exacerbates Internet Routing Convergence. In Proc. SIGCOMM, 2002.

[22] J. T. Moy. OSPF Database Overflow. RFC 1765, March 1995.

[23] J. T. Moy. OSPF Version 2. RFC 2328, April 1998.

[24] J. T. Moy. OSPF complete implementation. Addison-Wesley, New York, 2001.

[25] P. Narvaez, K.-Y. Siu, and H.-Y. Tzeng. New Dynamic Algorithms for Shortest Path Tree Computation. IEEE/ACM Transactions on Networking, 2000.

[26] S. Nelakuditi, S. Lee, Y. Yu, J. Wang, Z. Zhong, G.-H. Lu, and Z.-L. Zhang. Blacklist-Aided Forwarding in Static Multihop Wireless Networks. In Proc. of SECON, 2005.

[27] S. Nelakuditi, S. Lee, Y. Yu, Z.-L. Zhang, and C.-N. Chuah. Fast Local Rerouting for Handling Transient Link Failures. IEEE/ACM Transactions on Networking, 2007.

[28] P. Pan, G. Swallow, and A. Atlas. Fast Reroute Extensions to RSVP-TE for LSP Tunnels. RFC 4090, May 2005.

[29] N. Spring, R. Mahajan, and D. Wetherall. Measuring ISP Topologies with Rocketfuel. In Proc. of SIGCOMM, 2002.

[30] I. Stoica. Stateless Core: A Scalable Approach for Quality of Service in the Internet. PhD thesis, Carnegie Mellon University, Dec. 2000.

[31] L. Subramanian, R. H. Katz, V. Roth, S. Shenker, and I. Stoica. Reliable Broadcast in Unknown Fixed Identity Networks. In Proc. PODC, 2005.

[32] R. Teixeira, N. Duffield, J. Rexford, and M. Roughan. Traffic Matrix Reloaded: Impact of Routing Changes. In Proc. of PAM, 2005.

[33] R. Teixeira, T. Griffin, A. Shaikh, and G. Voelker. Network Sensitivity to Hot-Potato Disruptions. In Proc. of SIGCOMM, 2004.

[34] R. Teixeira, A. Shaikh, T. Griffin, and J. Rexford. Dynamics of Hot-Potato Routing in IP Networks. In Proc. of ACM SIGMETRICS, 2004.

[35] F. Wang and L. Gao. Inferring and Characterizing Internet Routing Policies. In Proc. IMC, 2003.