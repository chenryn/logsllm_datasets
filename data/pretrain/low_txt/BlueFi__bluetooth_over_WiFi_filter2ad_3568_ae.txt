### Audio and Communication Systems

Based on a similar principle, LTE2B [34] focuses on LTE to Zigbee communication. LongBee [35] extends the range of WEBee, while TwinBee [36] enhances reliability by applying additional channel coding. WIDE [37] is similar to WEBee but uses a different pulse-shaping waveform and employs USRP as the transmitter. A recent CTC work [38] explores communication between USRP-emulated WiFi transceivers and modified Bluetooth devices, focusing primarily on Bluetooth-to-WiFi communication.

### Differences in WiFi-to-Bluetooth Communication

There are several critical differences in WiFi-to-Bluetooth communication. First, prior work strictly requires firmware modifications on each Bluetooth device to implement a two-layer error correction algorithm. This algorithm first drops 1/4 of the Bluetooth bits and then decodes the remaining 3/4 bits using Hamming(7,4)-code. Our system, however, overcomes the impairments introduced by WiFi’s signal processing without relying on such error correction algorithms. Consequently, our system can directly work with unmodified commodity Bluetooth devices. Using unmodified Bluetooth devices is highly preferable because most users do not have the tools for firmware updates, and most device vendors do not share their firmware source codes. Additionally, a single WiFi device may interface with multiple Bluetooth devices (e.g., using APs as Bluetooth beacons), and requiring modifications on every Bluetooth device severely limits the use cases. Employing two error correction algorithms also significantly reduces throughput, as the combined efficiency is only 3/7 of the original data rate.

Second, our system is designed and shown to work with real, widely-deployed WiFi chips, not just SDR equipment. As detailed in Section 2, commercial off-the-shelf (COTS) WiFi chips behave differently from SDR devices, particularly in terms of OFDM symbol filtering and bit-stream scrambling. Experiments have shown that these differences are so critical that a design might work perfectly on SDR devices but fail entirely on COTS WiFi chips. Finally, we design and demonstrate practical, real-world applications, such as Bluetooth beacons and Bluetooth audio, running on our system in real time, rather than just sending physical-layer packets.

### Recitation and Security Studies

Recitation [39] examines implementations of WiFi to predict bit-prone locations. Several 802.11 security studies [14, 15, 40] found that the scrambler seeds in most 802.11p or 802.11n/ac chips are predictable, either constant, using arithmetic sequences, or selected from a few values.

### Conclusion

We have presented BlueFi, a novel system that transmits legitimate Bluetooth packets using commercial off-the-shelf WiFi hardware. BlueFi overcomes all signal impairments, enabling the signals to be received by unmodified Bluetooth devices. By repurposing existing WiFi hardware, BlueFi broadens the coverage of Bluetooth and enables the use of Bluetooth functions in WiFi-only environments or with WiFi-only devices. BlueFi can be controlled from the cloud, and its convergence of underlying hardware simplifies the cooperation between WiFi and Bluetooth. We have evaluated BlueFi on real, widely-adopted WiFi chips and demonstrated that it supports real-world, real-time Bluetooth applications. We believe that BlueFi will accelerate the adoption of rich and valuable Bluetooth frameworks and applications, such as beacons and audio streaming, already developed using omnipresent WiFi devices, and will help tens of billions of WiFi devices communicate with tens of billions of Bluetooth devices.

This work does not raise any ethical issues.

### Acknowledgments

We would like to thank our shepherd and anonymous reviewers for their insightful comments. This work was supported in part by NSF, Grant No. CNS-1646130, and ARO, Grant No. W911NF-21-1-0057.

### References

[1] Bluetooth SIG. Bluetooth market update 2019. https://www.bluetooth.com/wp-content/uploads/2018/04/2019-Bluetooth-Market-Update.pdf, 2019.

[2] Bluetooth SIG. Bluetooth market update 2020. https://www.bluetooth.com/wp-content/uploads/2020/03/2020_Market_Update-EN.pdf, 2020.

[3] Wi-Fi Alliance. Wi-fi® in 2019. https://www.wi-fi.org/news-events/newsroom/wi-fi-in-2019, Feb 2019.

[4] Cisco. Cisco annual internet report (2018–2023). https://www.cisco.com/c/en/us/solutions/collateral/executive-perspectives/annual-internet-report/white-paper-c11-741490.pdf, Mar 2020.

[5] Cisco. Cisco virtual beacon solution. https://content.etilize.com/Manufacturer-Brochure/1044848777.pdf, Dec 2017.

[6] Texas Instruments. Bluetooth low energy scanning and advertising. https://dev.ti.com/tirex/explore/node?node=AKvX4BPHvI6W3ea9a0OTxA_pTTHBmu__LATEST, 2020.

[7] IEEE standard for information technology—telecommunications and information exchange between systems local and metropolitan area networks—specific requirements - part 11: Wireless lan medium access control (mac) and physical layer (phy) specifications. IEEE Std 802.11-2016 (Revision of IEEE Std 802.11-2012), pages 1–3534, 2016.

[8] A. Viterbi. Convolutional codes and their performance in communication systems. IEEE Transactions on Communication Technology, 19(5):751–772, 1971.

[9] G. D. Forney. The viterbi algorithm. Proceedings of the IEEE, 61(3):268–278, 1973.

[10] OpenWrt. Openwrt. https://openwrt.org, May 2020.

[11] OpenWrt. ath79. https://openwrt.org/docs/techref/targets/ath79, May 2020.

[12] SciPy. Scipy. https://www.scipy.org/, Jan 2021.

[13] Piotr Gawłowicz, Anatolij Zubow, Suzan Bayhan, and Adam Wolisz. Ofdmfi: Enabling cross-technology communication between lte-u/laa and wifi, 2019.

[14] Tien Dang Vo-Huu, Triet Dang Vo-Huu, and Guevara Noubir. Fingerprinting wi-fi devices using software defined radios. In Proceedings of the 9th ACM Conference on Security and Privacy in Wireless and Mobile Networks, WiSec ’16, page 3–14, New York, NY, USA, 2016. Association for Computing Machinery.

[15] Mathy Vanhoef, Célestin Matte, Mathieu Cunche, Leonardo S. Cardoso, and Frank Piessens. Why mac address randomization is not enough: An analysis of wi-fi network discovery mechanisms. In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security, ASIA CCS ’16, page 413–424, New York, NY, USA, 2016. Association for Computing Machinery.

[16] Nordic Semiconductor. nrf connect for mobile. https://www.nordicsemi.com/Software-and-tools/Development-Tools/nRF-Connect-for-mobile, 2020.

[17] Nicolas Bridoux. Beacon scanner. https://play.google.com/store/apps/details?id=com.bridou_n.beaconscanner, 2020.

[18] Vincent Hiribarren. Beacon simulator. https://play.google.com/store/apps/details?id=net.alea.beaconsimulator, 2020.

[19] iPerf. iperf - the ultimate speed test tool for tcp, udp and sctp. https://iperf.fr/, 2020.

[20] OpenWrt. The high-resolution timer api. https://lwn.net/Articles/167897/, Jan 2020.

[21] Inc Teledyne LeCroy. Fts4bt bluetooth protocol analyzer and packet sniffer. https://www.fte.com/products/fts4bt.aspx, 2021.

[22] Matteo Frigo and Steven G. Johnson. The design and implementation of FFTW3. Proceedings of the IEEE, 93(2):216–231, 2005. Special issue on “Program Generation, Optimization, and Platform Adaptation”.

[23] Intel Open Source Technology Center. Powertop. https://01.org/powertop, 2021.

[24] Matthias Schulz, Jakob Link, Francesco Gringoli, and Matthias Hollick. Shadow Wi-Fi: Teaching smartphones to transmit raw signals and to extract channel state information to implement practical covert channels over wi-fi. In Proceedings of the 16th Annual International Conference on Mobile Systems, Applications, and Services, MobiSys ’18, page 256–268, New York, NY, USA, 2018. Association for Computing Machinery.

[25] P. Gawlowicz, A. Zubow, and A. Wolisz. Enabling cross-technology communication between lte unlicensed and wifi. In IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, pages 144–152, 2018.

[26] Z. Chi, Z. Huang, Y. Yao, T. Xie, H. Sun, and T. Zhu. Emf: Embedding multiple flows of information in existing traffic for concurrent communication among heterogeneous iot devices. In IEEE INFOCOM 2017 - IEEE Conference on Computer Communications, pages 1–9, 2017.

[27] Z. Yin, W. Jiang, S. M. Kim, and T. He. C-morse: Cross-technology communication with transparent morse coding. In IEEE INFOCOM 2017 - IEEE Conference on Computer Communications, pages 1–9, 2017.

[28] Song Min Kim and Tian He. Freebee: Cross-technology communication via free side-channel. In Proceedings of the 21st Annual International Conference on Mobile Computing and Networking, MobiCom ’15, page 317–330, New York, NY, USA, 2015. Association for Computing Machinery.

[29] Piotr Gawlowicz, Anatolij Zubow, Suzan Bayhan, and Adam Wolisz. Punched cards over the air: Cross-technology communication between lte-u/laa and wifi. In 2020 IEEE 21st International Symposium on "A World of Wireless, Mobile and Multimedia Networks" (WoWMoM), pages 297–306, 2020.

[30] Piotr Gawłowicz, Anatolij Zubow, and Suzan Bayhan. Demo abstract: Cross-technology communication between lte-u/laa and wifi. In IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), pages 1272–1273, 2020.

[31] Eugene Chai, Karthik Sundaresan, Mohammad A. Khojastepour, and Sampath Rangarajan. Lte in unlicensed spectrum: Are we there yet? In Proceedings of the 22nd Annual International Conference on Mobile Computing and Networking, MobiCom ’16, page 135–148, New York, NY, USA, 2016. Association for Computing Machinery.

[32] Vikram Iyer, Vamsi Talla, Bryce Kellogg, Shyamnath Gollakota, and Joshua Smith. Inter-technology backscatter: Towards internet connectivity for implanted devices. In Proceedings of the 2016 ACM SIGCOMM Conference, SIGCOMM ’16, page 356–369, New York, NY, USA, 2016. Association for Computing Machinery.

[33] Zhijun Li and Tian He. Webee: Physical-layer cross-technology communication via emulation. In Proceedings of the 23rd Annual International Conference on Mobile Computing and Networking, MobiCom ’17, page 2–14, New York, NY, USA, 2017. Association for Computing Machinery.

[34] Ruofeng Liu, Zhimeng Yin, Wenchao Jiang, and Tian He. Lte2b: Time-domain cross-technology emulation under lte constraints. In Proceedings of the 17th Conference on Embedded Networked Sensor Systems, SenSys ’19, page 179–191, New York, NY, USA, 2019. Association for Computing Machinery.

[35] Zhijun Li and Tian He. Longbee: Enabling long-range cross-technology communication. In IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, pages 162–170, 2018.

[36] Yongrui Chen, Shuai Wang, Zhijun Li, and Tian He. Reliable physical-layer cross-technology communication with emulation error correction. IEEE/ACM Transactions on Networking, 28(2):612–624, 2020.

[37] Xiuzhen Guo, Yuan He, Jia Zhang, and Haotian Jiang. Wide: Physical-level ctc via digital emulation. In 2019 18th ACM/IEEE International Conference on Information Processing in Sensor Networks (IPSN), pages 49–60, 2019.

[38] Zhijun Li and Yongrui Chen. Bluefi: Physical-layer cross-technology communication from bluetooth to wifi. In 2020 IEEE 40th International Conference on Distributed Computing Systems (ICDCS), pages 399–409, 2020.

[39] Zhenjiang Li, Yaxiong Xie, Mo Li, and Kyle Jamieson. Recitation: Rehearsing wireless packet reception in software. In Proceedings of the 21st Annual International Conference on Mobile Computing and Networking, MobiCom ’15, page 291–303, New York, NY, USA, 2015. Association for Computing Machinery.

[40] B. Bloessl, C. Sommer, F. Dressier, and D. Eckhoff. The scrambler attack: A robust physical layer attack on location privacy in vehicular networks. In 2015 International Conference on Computing, Networking and Communications (ICNC), pages 395–400, Feb 2015.

[41] Keysight Technologies. Guard interval (802.11a/g/j/p ofdm). http://rfmw.em.keysight.com/wireless/helpfiles/89600B/WebHelp/Subsystems/wlan-ofdm/content/dlg_ofdm_fmt_guardintrvlfrac.htm, 2020.

### Appendix

#### A.1 Processing Considerations

Although it is possible to implement BlueFi entirely on the microprocessors in WiFi APs or NICs, there is no compelling reason to do so if it can be implemented in software. Since WiFi devices are typically connected to much more powerful hosts or cloud servers, we can leverage the computing power on those devices to run BlueFi, allowing the WiFi hardware to focus solely on sending the final bit-stream.

#### A.2 Recommendations for WiFi Vendors

In designing BlueFi, we gained insights into how WiFi chip makers can integrate this functionality or further improve signal quality. The CP insertion block can disrupt reception, and bypassing it would improve signal quality. This feature is available on WiFi testing equipment [41] but not on commercial chips. Bypassing the IFFT operation would also simplify the optimization of time-domain phases. Our system is easier to use with chips that can control the scrambler seed and fully comply with the PSDU length specification in the 802.11n standard.

These recommendations are primarily from a signal quality perspective. In practice, it might be more beneficial to run BlueFi "as is" since some modifications may require recertification, and BlueFi is operational without these features.

#### A.3 Finding an Optimal Solution

The principle of BlueFi is to find near-optimal inverse operations of WiFi transmitters block-by-block. We used this approach because deriving a global optimal solution is intractable. A global optimal solution must not only guarantee optimality but also consider the interactions between blocks.

Even finding an optimal inversion of some blocks is challenging. As discussed in Section 2.5, finding an optimal combination of QAM symbols can be formulated as an integer programming (IP) problem, which is practically impossible for 64-QAM. The complexity becomes astronomical for 256- and 1024-QAM.