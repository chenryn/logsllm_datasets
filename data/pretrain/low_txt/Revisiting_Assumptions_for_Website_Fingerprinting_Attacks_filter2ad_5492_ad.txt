### 4.5 Predicting Overlapping Points

Previous work [24] demonstrated that the accuracy of identifying the split point in overlapped traces is approximately 32%. In Section 3, we showed that the split points of two continuous traces can be accurately identified. In this section, we aim to improve the prediction accuracy for the start and end points where two webpages overlap.

Our method involves hypothesizing that the number of packets during an overlap will be higher than when there is no overlap, due to the combined network traffic from two webpages. We divided the time into discrete bins and counted the number of packets in each bin. If the number of packets in a bin exceeds a threshold, we consider it an overlap. Since we know the ground truth for all our overlapped traces, we can calculate the prediction accuracy.

We varied the bin size from 1 millisecond to 10 seconds. Figure 17 shows the prediction accuracy for the overlap and non-overlap parts when the bin size was 500 milliseconds. The accuracy is around 60% for both overlap and non-overlap predictions. Increasing the bin size shifts the graph to the right. We also considered the total size of packets in each bin as a predictor and obtained similar results.

### 4.6 Summary

We proposed a "sectioning" algorithm that achieves better accuracy (around 70% for predicting either the first or second website) compared to previous methods (57% for the first website and 26% for the second website) when there is some overlap between two websites. We also demonstrated that the exact points where the overlap starts and stops can be reasonably predicted. The overlap part can thus be effectively ignored, enabling more effective website fingerprinting attacks.

### 5. Analysis of Partial Traces

#### 5.1 Motivation

This section examines the impact of partial traces (where only part of the website traffic is captured) on website fingerprinting attacks. This scenario can occur if a victim closes the browser before the download is complete or if the adversary records only a portion of the trace (either the beginning or the end).

We assume there is only one website in the traffic trace, but the adversary captures only a fraction \( n \) of the trace. When \( n = 100\% \), the assumption aligns with previous work that assumes the attacker captures entire traces for all websites. We varied \( n \) from 80% to 100% of the traffic trace, either from the beginning or the end. Figure 18 shows the results of our experiments. When the whole trace is recorded, the accuracy is 89.9%. If 10% of the packets are missed at the end, the accuracy drops to 64.1%. However, if 10% of the packets are missed at the beginning, the accuracy drops to 15.05%. This suggests that capturing the first \( n\% \) of a website's trace is more important than the last \( n\% \). This result confirms the findings of [9]. The figure also indicates that as the percentage of the trace available decreases, the accuracy significantly decreases.

#### 5.2 Sectioning Algorithm on Partial Traces

Given that our sectioning algorithm provides high prediction accuracy for overlapped traces, we applied the same algorithm to partial traces. The hypothesis is that some sections will be missing, but this should not affect the other sections. We used the sectioning algorithm by time duration, which has shown better prediction accuracy. We used the same dataset as before, with training datasets consisting of whole network traces and testing datasets consisting of instances with missing packets either at the beginning or the end. For each testing dataset, we removed the first \( n\% \) of packets either from the beginning or the end.

#### 5.3 Results

Figures 19 and 20 show the accuracy in correctly predicting websites based on partial traces, varying the percentage of missing packets and the number of sections. The base case is with 1 section, meaning no sectioning algorithm is applied. From Figure 19, with 5% missing packets from the beginning, the prediction accuracy with 1 section is 20.76%. When the number of sections increases to 4, the accuracy increases to 57.34%. This indicates that sectioning helps mitigate the impact of missing packets. Increasing the number of sections further from 4 to 10 slightly increases the prediction accuracy, peaking at 62.66% with 8 sections. As the percentage of missing packets increases from 5% to 20%, the accuracy decreases, as expected. Using our sectioning algorithm, the accuracy improves significantly from the base case.

Figure 20 shows the accuracy of correctly predicting websites based on partial traces with packets missing from the end. With 5% and 10% missing packets from the end, the prediction accuracy with 1 section is 79.02% and 58.80%, respectively. With 10 sections, the accuracy is 64.78% and 53.92%, respectively. It is slightly lower than the base case. However, when the percentage of missing packets increases to 15% and 20%, the accuracy with 10 sections is 42.35% and 30.61%, respectively, compared to the base case of 35.92% and 19.49%.

#### 5.4 Summary

We show that our "sectioning" algorithm can also be used for partial traces. It achieves better accuracy (62.66%) compared to previous methods (20.76%) for predicting websites with missing packets at the beginning. Our algorithm achieves similar accuracy with packets missing at the end. Overall, this demonstrates that our proposed sectioning algorithm provides higher or similar prediction accuracy as current algorithms.

### 6. Conclusion and Future Work

In this paper, we addressed the impracticalities of website fingerprinting attacks and proposed solutions to several limitations:
1. We proposed a "splitting" algorithm to identify two continuous network traces with 80% accuracy in finding the split point.
2. We proposed a "sectioning" algorithm to improve the accuracy in website prediction for overlapping traces from 22.80% to 67.9% and for partial traces from 20.76% to 62.66%.

For future work, we plan to test our algorithm in an open-world setting and consider scenarios with more than two overlapping or continuous pages. We will also further investigate the exact points where two webpages overlap and run more experiments with a more diverse dataset.

### Acknowledgments

This material is based upon work supported by the National Science Foundation under Grant No. IIS-1659645. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.

### References

[1] George Dean Bissias, Marc Liberatore, David Jensen, and Brian Neil Levine. 2006. Privacy Vulnerabilities in Encrypted HTTP Streams. In Proceedings of the 5th International Conference on Privacy Enhancing Technologies (PET’05). Springer-Verlag, Berlin, Heidelberg, 1–11. https://doi.org/10.1007/11767831_1

[2] P. Blunsom. 2004. Hidden Markov Models. http://digital.cs.usu.edu/~cyan/CS7960/hmm-tutorial.pdf

[3] Xiang Cai, Rishab Nithyanand, and Rob Johnson. 2014. CS-BuFLO: A Congestion Sensitive Website Fingerprinting Defense. In Proceedings of the 13th Workshop on Privacy in the Electronic Society (WPES ’14). ACM, New York, NY, USA, 121–130. https://doi.org/10.1145/2665943.2665949

[4] Xiang Cai, Rishab Nithyanand, Tao Wang, Rob Johnson, and Ian Goldberg. 2014. A Systematic Approach to Developing and Evaluating Website Fingerprinting Defenses. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS ’14). ACM, New York, NY, USA, 227–238. https://doi.org/10.1145/2660267.2660362

[5] Xiang Cai, Xin Cheng Zhang, Brijesh Joshi, and Rob Johnson. 2012. Touching from a Distance: Website Fingerprinting Attacks and Defenses. In Proceedings of the 2012 ACM Conference on Computer and Communications Security (CCS ’12). ACM, New York, NY, USA, 605–616. https://doi.org/10.1145/2382196.2382260

[6] Roger Dingledine, Nick Mathewson, and Paul Syverson. 2004. Tor: The Second-Generation Onion Router. In Proceedings of the 13th USENIX Security Symposium.

[7] Hasan Faik Alan and Jasleen Kaur. 2019. Client Diversity Factor in HTTPS Webpage Fingerprinting. 279–290. https://doi.org/10.1145/3292006.3300045

[8] Xun Gong, Nikita Borisov, Negar Kiyavash, and Nabil Schear. 2012. Website Detection Using Remote Traffic Analysis. In Proceedings of the 12th International Conference on Privacy Enhancing Technologies (PETS’12). Springer-Verlag, Berlin, Heidelberg, 58–78. https://doi.org/10.1007/978-3-642-31680-7_4

[9] Jamie Hayes and George Danezis. 2016. k-fingerprinting: A Robust Scalable Website Fingerprinting Technique. In 25th USENIX Security Symposium (USENIX Security 16). USENIX Association, Austin, TX, 1187–1203. https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/hayes

[10] Dominik Herrmann, Rolf Wendolsky, and Hannes Federrath. 2009. Website Fingerprinting: Attacking Popular Privacy Enhancing Technologies with the Multinomial Naïve-Bayes Classifier. In Proceedings of the 2009 ACM Workshop on Cloud Computing Security (CCSW ’09). ACM, New York, NY, USA, 31–42. https://doi.org/10.1145/1655008.1655013

[11] Andrew Hintz. 2003. Fingerprinting Websites Using Traffic Analysis. In Proceedings of the 2nd International Conference on Privacy Enhancing Technologies (PET’02). Springer-Verlag, Berlin, Heidelberg, 171–178. http://dl.acm.org/citation.cfm?id=1765299.1765312

[12] Marc Juarez, Sadia Afroz, Gunes Acar, Claudia Diaz, and Rachel Greenstadt. 2014. A Critical Evaluation of Website Fingerprinting Attacks. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS ’14). ACM, New York, NY, USA, 263–274. https://doi.org/10.1145/2660267.2660368

[13] Marc Liberatore and Brian Neil Levine. 2006. Inferring the Source of Encrypted HTTP Connections. In Proceedings of the 13th ACM Conference on Computer and Communications Security (CCS ’06). ACM, New York, NY, USA, 255–263. https://doi.org/10.1145/1180405.1180437

[14] Liming Lu, Ee-Chien Chang, and Mun Choon Chan. 2010. Website Fingerprinting and Identification Using Ordered Feature Sequences. Springer Berlin Heidelberg, Berlin, Heidelberg, 199–214. https://doi.org/10.1007/978-3-642-15497-3_13

[15] Se Eun Oh, Shuai Li, and Nicholas Hopper. 2017. Fingerprinting Keywords in Search Queries over Tor. PoPETs 2017 (2017).

[16] Andriy Panchenko, Fabian Lanze, Andreas Zinnen, Martin Henze, Jan Pennekamp, Klaus Wehrle, and Thomas Engel. 2016. Website Fingerprinting at Internet Scale. In Proceedings of the 23rd Internet Society (ISOC) Network and Distributed System Security Symposium (NDSS 2016).

[17] Andriy Panchenko, Lukas Niessen, Andreas Zinnen, and Thomas Engel. 2011. Website Fingerprinting in Onion Routing Based Anonymization Networks. In Proceedings of the 10th Annual ACM Workshop on Privacy in the Electronic Society (WPES ’11). ACM, New York, NY, USA, 103–114. https://doi.org/10.1145/2046556.2046570

[18] Tor Metrics Portal. 2017. https://metrics.torproject.org/.

[19] Raphael Spreitzer, Simone Griesmayr, Thomas Korak, and Stefan Mangard. 2016. Exploiting Data-Usage Statistics for Website Fingerprinting Attacks on Android. In Proceedings of the 9th ACM Conference on Security & Privacy in Wireless and Mobile Networks (WiSec ’16). ACM, New York, NY, USA, 49–60. https://doi.org/10.1145/2939918.2939922

[20] Qixiang Sun, Daniel R. Simon, Yi-Min Wang, Wilf Russell, Venkata N. Padmanabhan, and Lili Qiu. 2002. Statistical Identification of Encrypted Web Browsing Traffic. In Proceedings of the 2002 IEEE Symposium on Security and Privacy (SP ’02). IEEE Computer Society, Washington, DC, USA, 19–. http://dl.acm.org/citation.cfm?id=829514.830535

[21] Tor. 2017. https://www.torproject.org/.

[22] Tao Wang, Xiang Cai, Rishab Nithyanand, Rob Johnson, and Ian Goldberg. 2014. Effective Attacks and Provable Defenses for Website Fingerprinting. In Proceedings of the 23rd USENIX Conference on Security Symposium (SEC’14). USENIX Association, Berkeley, CA, USA, 143–157. http://dl.acm.org/citation.cfm?id=2671225.2671235

[23] Tao Wang and Ian Goldberg. 2013. Improved Website Fingerprinting on Tor. In Proceedings of the 12th ACM Workshop on Privacy in the Electronic Society (WPES ’13). ACM, New York, NY, USA, 201–212. https://doi.org/10.1145/2517840.2517851

[24] Tao Wang and Ian Goldberg. 2016. On Realistically Attacking Tor with Website Fingerprinting. In Privacy Enhancing Technologies Symposium (PETS).

[25] Yixiao Xu, Tao Wang, Qi Li, Qingyuan Gong, Yang Chen, and Yong Jiang. 2018. A Multi-tab Website Fingerprinting Attack. In Proceedings of the 34th Annual Computer Security Applications Conference (ACSAC ’18). ACM, New York, NY, USA, 327–341. https://doi.org/10.1145/3274694.3274697