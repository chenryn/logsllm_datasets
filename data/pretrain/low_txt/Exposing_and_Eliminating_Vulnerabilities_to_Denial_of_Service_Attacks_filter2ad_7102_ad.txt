### Figure 4: Average Received Throughput

**Figure 4(a)**
- **Y-Axis:** Average Throughput (messages/second)
- **X-Axis:** Attack Strength \( x \) (in terms of F)
- **Legend:**
  - Drum
  - Push
  - Pull
- **Observations:**
  - As the attack strength \( x \) increases, Drum's throughput remains stable.
  - Push shows a slight degradation in throughput.
  - Pull's throughput decreases significantly.

**Figure 4(b)**
- **Y-Axis:** Average Throughput (messages/second)
- **X-Axis:** Fraction of Attacked Processes \( \alpha \) (%)
- **Legend:**
  - Drum
  - Push
  - Pull
- **Observations:**
  - Drum's throughput degrades gracefully as the fraction of attacked processes \( \alpha \) increases.
  - Push exhibits a linear degradation in throughput.
  - Pull's throughput is drastically affected for any \( \alpha > 0 \).

### Figure 5: CDF of Average Latency of Successfully Received Messages

**Figure 5(a)**
- **Y-Axis:** Cumulative Distribution Function (CDF)
- **X-Axis:** Average Latency (milliseconds)
- **Parameters:**
  - \( \alpha = 10\% \)
  - \( x = 32F \)
- **Legend:**
  - Drum
  - Push
  - Pull
- **Observations:**
  - Push delivers messages to non-attacked processes faster but with high variation in latency for attacked processes.
  - Pull has a consistent but high average latency for all processes.
  - Drum combines the best of both, delivering messages quickly with low latency variation.

**Figure 5(b)**
- **Y-Axis:** Cumulative Distribution Function (CDF)
- **X-Axis:** Average Latency (milliseconds)
- **Parameters:**
  - \( \alpha = 40\% \)
  - \( x = 32F \)
- **Legend:**
  - Drum
  - Push
  - Pull
- **Observations:**
  - Similar trends are observed as in Figure 5(a), but with more pronounced differences due to the higher fraction of attacked processes.

### Conclusions

We have conducted the first systematic study on the impact of Denial of Service (DoS) attacks on multicast protocols using asymptotic analysis, simulations, and measurements. Our study has exposed vulnerabilities in traditional gossip-based multicast protocols, which, while robust against process crashes, are highly susceptible to DoS attacks. Specifically, an attacker with limited resources can cause significant performance degradation by targeting a small subset of processes.

To enhance system resilience against DoS attacks, we suggest the following measures:
1. Combining pull and push operations.
2. Bounding resources separately for each operation.
3. Random port selection.

We introduce Drum, a simple gossip-based multicast protocol that incorporates these measures to mitigate DoS vulnerabilities. Our mathematical analysis, simulations, and empirical tests demonstrate that using both push and pull operations significantly strengthens the system against DoS attacks. As the attack strength increases, the most effective attack against Drum is one that targets all correct processes, leading to similar performance degradation across all studied protocols. However, protocols using only pull or push operations perform much worse under focused attacks, which have minimal impact on Drum.

We anticipate that our proposed methods will be applicable to various systems operating in different contexts. Specifically, the use of well-known ports should be minimized, and each process should have the ability to choose some of its communication partners. Our analysis and metrics can be used to quantify the effect of DoS attacks, and we hope that other researchers will apply similar techniques to analyze their system's resilience to DoS attacks.

### Acknowledgments

We thank Aran Bergman and Dahlia Malkhi for their valuable comments and suggestions. We are grateful to the Flux research group at the University of Utah, especially Mac Newbold, for providing access to their network emulation testbed and assisting with our experiments.

### References

[1] G. Badishi, I. Keidar, and A. Sasson. "Exposing and eliminating vulnerabilities to denial of service attacks in secure gossip-based multicast." TR CCIT 477, Department of Electrical Engineering, Technion, March 2004. [Link](http://www.ee.technion.ac.il/~badishi/papers/drum-tr.ps)

[2] K. P. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, and Y. Minsky. "Bimodal multicast." ACM Transactions on Computer Systems (TOCS), 17(2):41–88, 1999.

[3] K. P. Birman, R. van Renesse, and W. Vogels. "Spinglass: Secure and scalable communications tools for mission-critical computing." In DARPA International Survivability Conference and Exposition (DISCEX), June 2001.

[4] R. K. C. Chang. "Defending against flooding-based distributed denial-of-service attacks: A tutorial." IEEE Communications Magazine, 40:42–51, October 2002.

[5] Cisco Systems. "Strategies to protect against TCP SYN denial of service attacks." [Link](http://www.cisco.com/warp/public/707/4.html)

[6] CSI/FBI. "Computer crime and security survey, 2003." [Link](http://www.gocsi.com/forms/fbi/pdf.jhtml)

[7] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Stuygis, D. Swinehart, and D. Terry. "Epidemic algorithms for replicated database maintenance." In PODC, pages 1–12, 1987.

[8] P. T. Eugster, R. Guerraoui, S. B. Handurukande, A. M. Kermarrec, and P. Kouznetsov. "Lightweight probabilistic broadcast." In DSN, 2001.

[9] I. Gupta, R. van Renesse, and K. P. Birman. "Scalable fault-tolerant aggregation in large process groups." In DSN, pages 433–442, 2001.

[10] R. M. Karp, C. Schindelhauer, S. Shenker, and B. Vocking. "Randomized rumor spreading." In IEEE Symposium on Foundations of Computer Science, pages 565–574, 2000.

[11] M. J. Lin, K. Marzullo, and S. Masini. "Gossip versus deterministically constrained flooding on small networks." In DISC, pages 253–267, 2000.

[12] P. Linga, I. Gupta, and K. Birman. "A churn-resistant peer-to-peer web caching system." ACM Workshop on Survivable and Self-Regenerative Systems, October 2003.

[13] D. Malkhi, Y. Mansour, and M. K. Reiter. "Diffusion without false rumors: On propagating updates in a Byzantine environment." Theoretical Computer Science, 299(1–3):289–306, April 2003.

[14] D. Malkhi, E. Pavlov, and Y. Sella. "Optimal unconditional information diffusion." In 15th International Symposium on DIStributed Computing (DISC), 2001.

[15] D. Malkhi, M. K. Reiter, O. Rodeh, and Y. Sella. "Efficient update diffusion in Byzantine environments." In 20th IEEE International Symposium on Reliable Distributed Systems (SRDS), October 2001.

[16] Y. M. Minsky and F. B. Schneider. "Tolerating malicious gossip." Distributed Computing, 16(1):49–68, February 2003.

[17] D. Moore, G. Voelker, and S. Savage. "Inferring Internet denial-of-service activity." In Proceedings of the 10th USENIX Security Symposium, pages 9–22, August 2001.

[18] National Institute for Standards and Technology. "Digital Signature Standard (DSS)." FIPS Publication 186-2, October 2001. [Link](http://csrc.nist.gov/publications/fips/)

[19] B. Pittel. "On spreading a rumor." SIAM Journal on Applied Mathematics, 47(1):213–223, February 1987.

[20] C. L. Schuba, I. V. Krsul, M. G. Kuhn, E. H. Spafford, A. Sundaram, and D. Zamboni. "Analysis of a denial of service attack on TCP." In Proceedings of the 1997 IEEE Symposium on Security and Privacy, pages 208–223, May 1997.

[21] B. White, J. Lepreau, L. Stoller, R. Ricci, S. Guruprasad, M. Newbold, M. Hibler, C. Barb, and A. Joglekar. "An integrated experimental environment for distributed systems and networks." In OSDI, pages 255–270, Boston, MA, Dec. 2002. USENIX Association.

[22] L. Zhou, F. B. Schneider, and R. van Renesse. "COCA: A secure distributed online certification authority." ACM Transactions on Computer Systems, 20(4):329–368, 2002.

---

**Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04)**  
0-7695-2052-9/04 $ 20.00 © 2004 IEEE  
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 10:04:10 UTC from IEEE Xplore. Restrictions apply.