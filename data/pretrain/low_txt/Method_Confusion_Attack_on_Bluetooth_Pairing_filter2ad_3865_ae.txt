### Extended and Divided Association Models

To enhance security, the existing association model can be extended and divided into two disjoint sets, each assigned to a specific Association Model. For example, one set may allow only 5 Latin letters for the PE-passkey, while the other set may permit only 6 digits for the NC-value. Although this approach may maintain or even reduce the guessing probability, it introduces significant challenges in terms of flexibility and backward compatibility. The implementation would require substantial changes to the protocol and device interfaces, potentially affecting backward compatibility.

### Applicability to Bluetooth Classic (BT Classic)

While our discussion has primarily focused on Bluetooth Low Energy (BLE), the proposed attack is also applicable to Bluetooth Classic (BC). The secure pairing methods in BC include Secure Simple Pairing (SSP) and Secure Connections (SC). SC is an enhanced mode of SSP that enforces stricter cryptographic requirements. SSP itself is largely equivalent to LE Secure Connections (LESC) with the following exceptions:

- **Elliptic Curve (EC):** SSP uses P-192 EC by default, but switches to P-256 when operating in SC-only mode (as LESC always does).
- **Encryption:** SSP employs E0 for encryption, whereas SC-only mode uses AES-CCM (as LESC always does).
- **IO Capability (IOCap):** SSP does not support the KeyboardDisplay IOCap.

According to the Bluetooth specification, the four Association Models in SSP are functionally equivalent to those in LESC. However, during the disclosure process, the Bluetooth SIG informed us that KeyboardDisplay is not available in BC. Consequently, our attack matrix for BC has been adjusted as shown in Figure 10. We argue that our findings are transferable between LESC, SSP, and SC, supported by comments from the Bluetooth SIG (Section X).

### Related Work

To provide context, we now discuss the most relevant attacks that have been discussed in prior research.

#### A. Offline PIN Cracking in Bluetooth Legacy Pairing

Jakobsson and Wetzel [3] described how the legacy key establishment method in BC is vulnerable to offline brute-force attacks on the PIN. An attacker can capture the communication of the key-generation material and the subsequent authentication handshake, which is protected solely by the shared symmetric secret (the PIN). Given the limited entropy of the PIN (typically 6 digits), the attacker can exhaust all possible PINs by re-simulating the captured processes until the simulated authentication handshake is successful, thereby revealing the PIN and allowing the calculation of the long-term secret.

Kügler [27] later refined this attack by exploiting the radio implementation of Bluetooth to establish a Man-in-the-Middle (MitM) position between the victim devices. BLE legacy pairing, which uses similar methods to exchange cryptographic key material, is also vulnerable to such attacks, as demonstrated by Ryan [28].

#### B. Passkey Entry Reuse Attack

Some implementations of Passkey Entry (PE) use a fixed passkey that is chosen randomly by the manufacturer and stored in the device's ROM. This approach, which disregards the Bluetooth SIG’s advice against reusing PINs, is targeted by attacks proposed by Lindell [4] and refined by Barnickel et al. [29]. An eavesdropper can learn the passkey bits during the Authentication stage and recover the entire passkey in 20 hashing operations. The attacker can then intercept and abort the pairing process, and if the same passkey is reused, act as a MitM using the known passkey.

#### C. Just Works MitM Attack

Many devices performing SSP, SC, or LESC do not request MitM protection during pairing, especially if they lack the physical interfaces to facilitate such protection. Examples include In-Ear-Bluetooth headphones and screenless fitness trackers. In these cases, Just Works (JW) is used, providing no protection against active MitM attackers. An attacker can take over the communication and insert their own public keys into the pairing process, as demonstrated by Hypponen and Haataja [5].

#### D. Downgrade Attacks

The exchange of Input/Output Capabilities (IOCaps) is vulnerable to interception and tampering due to the lack of authenticity at this stage. An attacker can act as a MitM, falsifying the IOCap and downgrading the authentication method to JW. The MitM-bit can protect against such attacks, but the Method Confusion Attack, which is fundamentally different, can still succeed if the MitM-bit is not set.

#### E. Fixed Coordinate Invalid Curve Attack

Biham and Neumann [6] showed that all SSP (and, by extension, SC and LESC) pairing methods are vulnerable to a Fixed Coordinate Invalid Curve Attack. This attack exploits the fact that only the x-component of the public keys is validated during the Authentication stage, allowing the attacker to manipulate the y-value and reduce the ECDH keyspace to two possible keys. The Bluetooth SIG addressed this vulnerability by requiring devices to validate whether the public keys lie on the ECDH-curve.

#### F. Other Attacks

While the above attacks focus on the Bluetooth pairing process, there are other attack vectors. For example, the KNOB attack [7] targets the encryption by downgrading the entropy of a connection. Fawaz et al. [31] found that many BLE devices do not properly implement privacy-preserving features, such as device address randomization, allowing adversaries to track users through advertisement messages. Additionally, the complexity of the Bluetooth specification often leads to implementation mistakes, as uncovered by analyses like [32] and [33].

### Responsible Disclosure Process

We reached out to the Bluetooth SIG, Google, and Apple regarding our findings. All parties responded promptly, and CERT/CC coordinated the efforts. Google and Apple acknowledged the seriousness of the issue and are working on a solution, though no concrete details were provided. The Bluetooth SIG noted certain limitations of our attack in BC, which were incorporated into this paper. The SIG acknowledged the vulnerability of BLE and agreed that the same weakness should apply to BC but did not approve our proposed fixes, citing backward compatibility concerns. Instead, the SIG announced plans to inform their members about the issue with the help of CERT/CC.

### Conclusion

We have demonstrated a novel attack on BLE pairing in BT version 5.2, utilizing a method called Method Confusion to gain a MitM position. This attack exploits a critical design flaw acknowledged by the Bluetooth SIG. We verified the attack's applicability by adapting a commonly used BLE driver into our framework, BThack, and successfully attacked multiple smartphones, a smartwatch, and a banking device. A user study with 40 participants confirmed that the attack goes unnoticed, with 92.5% of participants completing the pairing, leading to a MitM position.

We proposed several fixes, some of which are backward-compatible, while others require changes to the specification. As the number of BLE devices continues to grow, ensuring their security is crucial. Our findings enable attackers to steal and manipulate data, targeting otherwise protected APIs. We hope our work contributes to enhancing Bluetooth's security, allowing device vendors to continue using it as a trusted building block for their products.

### Availability

We plan to publish BThack and our PoC implementation of the Method Confusion Attack on GitHub: https://github.com/maxdos64/BThack.

### Acknowledgments

We thank Matthias Ringwald from BlueKitchen GmbH for permission to use BTstack, and Jiska Classen and Constantin Runge for their constructive feedback. We also appreciate the guidance of Yan Shoshitaishvili and Selcuk Uluagac.

### References

[1] Bluetooth Core Specification 5.2, Bluetooth Specification Contributors, December 2019.
[2] Bluetooth SIG, "Bluetooth market update 2019," https://3pl46c46ctx02p7rzdsvsg21-wpengine.netdna-ssl.com/wp-content/uploads/2018/04/2019-Bluetooth-Market-Update.pdf, 2019.
[3] M. Jakobsson and S. Wetzel, "Security weaknesses in Bluetooth," in Cryptographers' Track at the RSA Conference. Springer, 2001, pp. 176–191.
[4] A. Y. Lindell, "Attacks on the pairing protocol of Bluetooth v2.1," Black Hat USA, Las Vegas, Nevada, 2008.
[5] K. Hypponen and K. Haataja, "“Nino” man-in-the-middle attack on Bluetooth secure simple pairing," in 2007 3rd IEEE/IFIP International Conference in Central Asia on Internet, 2007, pp. 1–5.
[6] E. Biham and L. Neumann, "Breaking the Bluetooth pairing–fixed coordinate invalid curve attack," Technion–Israel Institute of Technology, Tech. Rep., 2018. Available: http://www.cs.technion.ac.il/~biham/BT/bt-fixed-coordinate-invalid-curve-attack.pdf
[7] D. Antonioli, N. O. Tippenhauer, and K. B. Rasmussen, "The KNOB is broken: Exploiting low entropy in the encryption key negotiation of Bluetooth BR/EDR," in 28th USENIX Security Symposium (USENIX Security 19), Aug. 2019, pp. 1047–1061.
[8] Bluekitchen GmbH, "Btstack." Available: http://bluekitchen-gmbh.com/btstack/
[9] R. Cayre, V. Nicomette, G. Auriol, E. Alata, M. Kaaniche, and G. Marconato, "Mirage: Towards a Metasploit-like framework for IoT," in 2019 IEEE 30th International Symposium on Software Reliability Engineering (ISSRE), 2019. Available: https://hal.laas.fr/hal-02346074
[10] R. Cayre and B. contributers, "Btlejack firmware," https://github.com/RCayre/btlejack-firmware, 2019.
[11] nRF51 Series Reference Manual Version 3.0.1, Nordic Semiconductor, December 2016.
[12] T. Issoufaly and P. U. Tournoux, "BLEB: Bluetooth Low Energy botnet for large scale individual tracking," in 2017 1st International Conference on Next Generation Computing Applications (NextComp), 2017, pp. 115–120.
[13] A. K. Das, P. H. Pathak, C.-N. Chuah, and P. Mohapatra, "Uncovering privacy leakage in BLE network traffic of wearable fitness trackers," in 17th International Workshop on Mobile Computing Systems and Applications, 2016, p. 99–104. Available: https://doi.org/10.1145/2873587.2873594
[14] B. Cyr, W. Horn, D. Miao, and M. Specter, "Security analysis of wearable fitness devices (Fitbit)," vol. 1, Massachusetts Institute of Technology, 2014. Available: https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2015/03/20082016/17-cyrbritt-webbhorn-specter-dmiao-hacking-fitbit.pdf
[15] T. Szigeti and C. Hattingh, "Quality of service design overview," Cisco, San Jose, CA, Dec, pp. 1–34, 2004.
[16] S. Schechter, "Common pitfalls in writing about security and privacy human subjects experiments, and how to avoid them," Microsoft Research Technical Report, 2013. Available: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/commonpitfalls.pdf
[17] K. J. Kuipers and S. J. Hysom, "Chapter 7 – Common problems and solutions in experiments," in Laboratory Experiments in the Social Sciences (Second Edition), M. Webster and J. Sell, Eds. Academic Press, 2014, pp. 145 – 177.
[18] Guide to Bluetooth Security, National Institute of Standards and Technology (NIST), May 2017, revision 2.
[19] Bluetooth SIG, "Launch studio," last accessed: April 31, 2020. Available: https://launchstudio.bluetooth.com/Listings/Search
[20] IDC, "Shipments of wearable devices reach 118.9 million units in 2019, up 89.0% year over year, according to IDC."