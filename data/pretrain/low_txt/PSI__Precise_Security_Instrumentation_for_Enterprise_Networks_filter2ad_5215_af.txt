### VIII. Discussion

The existing literature does not specifically address the security, policy, and scalability challenges we have outlined. However, recent trends in network architecture and security practices corroborate our arguments that the PSI (Policy-Driven Secure Isolation) architecture is not only viable but also likely to be the inevitable culmination of efforts to address today’s security concerns.

### IX. Conclusions

Current network security mechanisms often leave defenders at a disadvantage due to fundamental limitations in three key areas: 
1. **Isolation**: Policies can interfere with each other, leading to unintended security gaps.
2. **Context**: Defenders are unable to create truly customized responses, as they lack the necessary contextual information.
3. **Agility**: The ability to specify and implement dynamic security postures is constrained.

To overcome these challenges, PSI leverages recent advancements in software-defined networking (SDN) and network functions virtualization (NFV) to enable isolated, context-aware, and agile security postures. We have addressed key challenges in developing expressive policy abstractions and scalable orchestration mechanisms. Our results demonstrate that PSI is scalable and can facilitate new security capabilities that would be extremely difficult to implement with traditional solutions.

### Future Work

We identify two primary directions for future research:
1. **User Interface Development**: Enhancing the user interface to allow operators to more easily express and manage PSI-based policies.
2. **Cross-Device Policy Support**: Enabling the creation and enforcement of policies that span multiple devices, such as increasing monitoring fidelity for hosts in the same subnet when an intrusion prevention system (IPS) flags a specific host.

While PSI represents a significant step forward, it is not a panacea and remains vulnerable to certain types of attacks, such as covert channels and malware hidden in encrypted cloud storage. Nonetheless, PSI can help restore a more balanced playing field for defenders in their ongoing struggle against advanced adversaries.

### Acknowledgments

This work was supported in part by NSF award number CNS-1440056 and by Intel Labs University Research Office.

### References

[1] 10 strategies of a world-class cybersecurity operations center. https://www.mitre.org/sites/default/files/publications/pr-13-1028-mitre-10-strategies-cyber-ops-center.pdf.

[2] 13 signs that bad guys are using DNS exfiltration to steal your data. https://theworldsoldestintern.wordpress.com/2012/11/30/dns-exfiltration-udp-53-indicators-of-exfiltration-udp53ioe/.

[3] ACL and NAT conflict each other. Router stops working. http://www.networking-forum.com/viewtopic.php?f=33&t=7635.

[4] Amazon Web Services: Elastic Load Balancing. https://aws.amazon.com/elasticloadbalancing/.

[5] Angler EK exploits recently patched Flash bug to deliver Bedep. http://www.securityweek.com/angler-ek-exploits-recently-patched-flash-bug-deliver-bedep.

[6] ArcSight. http://www.ndm.net/arcsight.

[7] Balance. https://www.inlab.de/balance.html.

[8] Cisco Evolved Services Platform. https://www.cisco.com/c/en/us/solutions/collateral/service-provider/service-provider-strategy/brochure-c02-731348.html.

[9] Cisco PIX 500 Series Security Appliances. https://www.cisco.com/c/en/us/products/security/pix-500-series-security-appliances/index.html.

[10] Diary of a RAT. http://www.provision.ro/threat-management/data-aware-and-dlp/diary-of-a-rat-remote-access-tool.

[11] Exposed: An inside look at the Magnitude exploit kit. http://www.csoonline.com/article/2459925/malware-cybercrime/exposed-an-inside-look-at-the-magnitude-exploit-kit.html.

[12] FireEye. https://www.fireeye.com/.

[13] IEEE Std. 802.1Q-2005, Virtual Bridged Local Area Networks. https://standards.ieee.org/getieee802/download/802.1Q-2005.pdf.

[14] Integrating SDN into the Data Center. https://www.juniper.net/us/en/local/pdf/whitepapers/2000542-en.pdf.

[15] Malware-Traffic-Analysis.net. http://malware-traffic-analysis.net/.

[16] McAfee Report Reveals Organizations Choose Network Performance Over Advanced Security Features. https://www.mcafee.com/us/about/news/2014/q4/20141028-01.aspx.

[17] OpenDaylight. https://www.opendaylight.org/.

[18] OpenDaylight Group Based Policy. https://wiki.opendaylight.org/view/Group_Based_Policy_(GBP).

[19] PSI. https://github.com/PreciseSecurity/PSI.git.

[20] Server NIC Teaming to Multiple Switches. http://itknowledgeexchange.techtarget.com/network-engineering-journey/server-nic-teaming-to-multiple-switches/.

[21] Springbok. https://github.com/conix-security/springbok.

[22] Splunk. https://www.splunk.com/.

[23] Squid: Optimizing Web Delivery. https://www.squid-cache.org/.

[24] Throughput and Scalability Report, McAfee NGFW 5206, v5.8. https://www.mcafee.com/us/resources/reports/rp-miercom-throughput-scalability-ngfw.pdf.

[25] M. H. Almeshekah and E. H. Spafford. The case of using negative (deceiving) information in data protection. In Academic Conferences and Publishing International, 2014.

[26] R. Bejtlich. The Tao of Network Security Monitoring: Beyond Intrusion Detection. Pearson Education, 2004.

[27] S. Bellovin. Distributed firewalls. In Proceedings of the 1999 IEEE Symposium on Security and Privacy, pages 39–47, November 1999.

[28] P. Bosshart, D. Daly, G. Gibb, M. Izzard, N. McKeown, J. Rexford, C. Schlesinger, D. Talayco, A. Vahdat, G. Varghese, et al. P4: Programming protocol-independent packet processors. ACM SIGCOMM Computer Communication Review, 44(3):87–95, 2014.

[29] M. Casado et al. Ethane: Taking control of the enterprise. In Proc. SIGCOMM, 2007.

[30] M. Chiosi, D. Clarke, J. Feger, C. Cui, J. Benitez, U. Michel, K. Ogaki, M. Fukui, D. Dilisle, I. Guardini, et al. Network Functions Virtualisation: An introduction, benefits, enablers, challenges, and call for action. In SDN and OpenFlow World Congress, 2012.

[31] A. Cimatti, E. Clarke, E. Giunchiglia, F. Giunchiglia, M. Pistore, M. Roveri, R. Sebastiani, and A. Tacchella. NuSMV 2: An open-source tool for symbolic model checking. In Computer Aided Verification, pages 359–364. Springer, 2002.

[32] A. Dixit, F. Hao, S. Mukherjee, T. Lakshman, and R. Kompella. Towards an elastic distributed SDN controller. In Proceedings of the second ACM SIGCOMM workshop on Hot topics in software defined networking, pages 7–12. ACM, 2013.

[33] B. Elgin, D. Lawrence, and M. Riley. Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data. Bloomberg BusinessWeek. https://www.bloomberg.com/news/articles/2014-02-21/neiman-marcus-hackers-set-off-60-000-alerts-while-bagging-credit-card-data.

[34] S. K. Fayaz, Y. Tobioka, V. Sekar, and M. Bailey. Flexible and elastic DDoS defense using Bohatei. In USENIX Security Symposium, 2015.

[35] S. K. Fayaz, T. Yu, Y. Tobioka, S. Chaki, and V. Sekar. Buzz: Testing context-dependent policies in stateful networks. In Proc. NSDI, 2016.

[36] S. K. Fayazbakhsh, L. Chiang, V. Sekar, M. Yu, and J. C. Mogul. Enforcing network-wide policies in the presence of dynamic middlebox actions using FlowTags. In Proc. NSDI, 2014.

[60] A. Sharma, Z. Kalbarczyk, R. K. Iyer, and J. Barlow. Analysis of credential stealing attacks in an open networked environment. In NSS, pages 144–151, 2010.

[61] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. M. Wing. Automated generation and analysis of attack graphs. In Security and Privacy, 2002. Proceedings. 2002 IEEE Symposium on, pages 273–284. IEEE, 2002.

[62] S. Shin, P. Porras, V. Yegneswaran, M. Fong, G. Gu, and M. Tyson. FRESCO: Modular composable security services for software-defined networks. In Proc. NDSS, 2013.

[63] S. Shin, Y. Song, T. Lee, S. Lee, J. Chung, P. Porras, V. Yegneswaran, J. Noh, and B. B. Kang. Rosemary: A robust, secure, and high-performance network operating system. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security, pages 78–89. ACM, 2014.

[64] S. Shin, V. Yegneswaran, P. Porras, and G. Gu. Avant-Guard: Scalable and vigilant switch flow management in software-defined networks. In Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, pages 413–424. ACM, 2013.

[65] P. Simmonds. Perimeter Security: In Memoriam. Infosecurity Magazine. https://www.infosecurity-magazine.com/view/30984/perimeter-security-in-memoriam/.

[66] J. Sonchack, J. M. Smith, A. J. Aviv, and E. Keller. Enabling practical software-defined networking security applications with OFX. In NDSS, 2016.

[67] R. Soulé, S. Basu, R. Kleinberg, E. G. Sirer, and N. Foster. Managing the network with Merlin. In Proc. HotNets, 2013.

[68] A. Tootoonchian et al. On controller performance in software-defined networks. In USENIX Hot-ICE, 2012.

[69] M. Vallentin, R. Sommer, J. Lee, C. Leres, V. Paxson, and B. Tierney. The NIDS Cluster: Scalable, stateful network intrusion detection on commodity hardware, 2007.

[70] VMware. The VMware NSX Network Virtualization Platform. https://www.vmware.com/files/pdf/products/nsx/VMware-NSX-Network-Virtualization-Platform-WP.pdf.

[71] VMware. Next Generation Security with VMware NSX and Palo Alto Networks VM-Series. White Paper, pages 1–25, 2013.

[72] R. Ward and B. Beyer. BeyondCorp: A New Approach to Enterprise Security. ;login:, Vol. 39, No. 6:6–11, 2014.

[73] M. Yu, J. Rexford, X. Sun, S. Rao, and N. Feamster. A survey of virtual LAN usage in campus networks. IEEE Communications Magazine, 49(7):98–103, 2011.

[74] L. Yuan, H. Chen, J. Mai, C.-N. Chuah, Z. Su, and P. Mohapatra. FireMan: A toolkit for firewall modeling and analysis. In Security and Privacy, 2006 IEEE Symposium on, pages 15–pp. IEEE, 2006.

[75] H. Zeng. Automatic Data Plane Testing. PhD thesis, Stanford University, 2014.

[37] FirstPost. WikiLeaks Trial: Tech Experts Tie Bradley Manning to Database Breach. https://tech.firstpost.com/news-analysis/wikileaks-trial-tech-experts-tie-bradley-manning-to-database-breach-214128.html.

[38] M. Handley, V. Paxson, and C. Kreibich. Network intrusion detection: Evasion, traffic normalization, and end-to-end protocol semantics. In USENIX Security Symposium, pages 115–131, 2001.

[39] S. Hong, R. Baykov, L. Xu, S. Nadimpalli, and G. Gu. Towards SDN-defined programmable BYOD (Bring Your Own Device) security. In NDSS, 2016.

[40] H. Hu, W. Han, G.-J. Ahn, and Z. Zhao. FlowGuard: Building robust firewalls for software-defined networks. In Proceedings of the third workshop on Hot topics in software defined networking, pages 97–102. ACM, 2014.

[41] S. Ioannidis, A. D. Keromytis, S. M. Bellovin, and J. M. Smith. Implementing a distributed firewall. In Proceedings of the 7th ACM conference on Computer and communications security, pages 190–199. ACM, 2000.

[42] P. Kazemian, G. Varghese, and N. McKeown. Header space analysis: Static checking for networks. In Proc. NSDI, 2012.

[43] H. Kim, J. Reich, A. Gupta, M. Shahbaz, N. Feamster, and R. Clark. Kinetic: Verifiable dynamic network control. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15), pages 59–72, Oakland, CA, May 2015. USENIX Association.

[44] T. Koponen et al. Onix: A Distributed Control Platform for Large-scale Production Network. In Proc. OSDI, 2010.

[45] A. Krishnamurthy, S. P. Chandrabose, and A. Gember-Jacobson. Pratyastha: An efficient elastic distributed SDN control plane. In Proceedings of the third workshop on Hot topics in software defined networking, pages 133–138. ACM, 2014.

[46] J. Martins, M. Ahmed, C. Raiciu, V. Olteanu, M. Honda, R. Bifulco, and F. Huici. ClickOS and the art of network function virtualization. In Proc. NSDI, 2014.

[47] S. McCarthy. Business Strategy: U.S. Federal Government IT Security Spending Forecast and Market Outlook. IDC Government Insights, 2013.

[48] C. Monsanto, J. Reich, N. Foster, J. Rexford, and D. Walker. Composing software-defined networks. In Proc. NSDI, 2013.

[49] T. Nelson, C. Barratt, D. J. Dougherty, K. Fisler, and S. Krishnamurthi. The Margrave tool for firewall analysis. In LISA, 2010.

[50] S. Palkar, C. Lan, S. Han, K. J. amd Aurojit Panda, S. Ratnasamy, L. Rizzo, and S. Shenker. E2: A framework for NFV applications. In Proc. SOSP, 2015.

[51] V. Paxson. Bro: A system for detecting network intruders in real-time. In Computer Networks, pages 2435–2463, 1999.

[52] C. Prakash, J. Lee, Y. Turner, J.-M. Kang, A. Akella, S. Banerjee, C. Clark, Y. Ma, P. Sharma, and Y. Zhang. PGA: Using graphs to express and automatically reconcile network policies. In Proc. SIGCOMM, 2015.

[53] Z. Qazi, C. Tu, L. Chiang, R. Miao, and M. Yu. SIMPLE-fying middlebox policy enforcement using SDN. In Proc. SIGCOMM, 2013.

[54] M. N. Rabe, P. Lammich, and A. Popescu. A shallow embedding of HyperCTL*. Archive of Formal Proofs, Apr. 2014. http://afp.sf.net/entries/HyperCTL.shtml, Formal proof development.

[55] F. Rashid. For discerning hackers, malware is so last year. https://www.infoworld.com/article/2980341/security/for-discerning-hackers-malware-is-so-last-year.html.

[56] M. Riley, B. Elgin, D. Lawrence, and C. Matlack. Missed Alarms and 40 Million Stolen Credit Card Numbers: How Target Blew It. Bloomberg BusinessWeek. https://www.bloomberg.com/news/articles/2014-03-13/target-missed-alarms-in-epic-hack-of-credit-card-data.

[57] M. Roesch et al. Snort: Lightweight intrusion detection for networks. In LISA, volume 99, pages 229–238, 1999.

[58] S. Roschke, F. Cheng, and C. Meinel. A flexible and efficient alert correlation platform for distributed IDS. In Network and System Security (NSS), 2010 4th international conference on, pages 24–31. IEEE, 2010.

[59] V. Sekar, N. Egi, S. Ratnasamy, M. K. Reiter, and G. Shi. Design and implementation of a consolidated middlebox architecture. In Proc. NSDI, 2012.