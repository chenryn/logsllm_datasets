### Bottleneck and Performance in UOKMS

In large-scale operations, multiple HSMs (Hardware Security Modules) are typically used to address potential bottlenecks. Importantly, in the UOKMS (Updatable Oblivious Key Management System), encrypting data does not require interaction with the KMS (Key Management Service). This feature significantly enhances performance.

Additionally, the UOKMS approach offers more efficient key rotation compared to traditional systems. In conventional systems, key rotation necessitates communication with the KMS for each key (whether a Data Encryption Key (DEK) or a Key Encryption Key (KEK)) that needs to be updated. This process can slow down the rotation, leading to longer rotation periods and reduced security. In contrast, UOKMS streamlines this process, thereby improving overall security and efficiency.

### Acknowledgments

We would like to extend our gratitude to Anja Lehmann for her invaluable discussions on the security notions of Updatable Encryption schemes. Our implementation and reporting have greatly benefited from the contributions of Martin Schmatz, Navaneeth Rameshan, and Mark Seaborn. We also thank the CCS (Conference on Computer and Communications Security) reviewers for their constructive feedback, which has helped to improve the presentation of this paper.

### References

1. J. F. Almansa, I. Damgård, and J. B. Nielsen. Simplified threshold RSA with adaptive and proactive security. In S. Vaudenay, editor, *Advances in Cryptology - EUROCRYPT 2006*, pages 593–611, Berlin, Heidelberg, 2006. Springer Berlin Heidelberg.
2. Amazon Web Services. AWS Key Management Service cryptographic details, 2016. https://d1.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf.
3. Amazon Web Services. AWS Elastic Compute Cloud, 2018. https://aws.amazon.com/ec2/.
4. E. Barker and W. Barker. Recommendation for key management, part 2: Best practices for key management organizations (2nd draft). Technical report, National Institute of Standards and Technology, 2018.
5. M. Bellare, C. Namprempre, D. Pointcheval, and M. Semanko. The one-more-RSA-inversion problems and the security of Chaum’s blind signature scheme. *Journal of Cryptology*, 16(3):185–215, June 2003.
6. M. Bellare, C. Namprempre, D. Pointcheval, and M. Semanko. The One-More-RSA-Inversion problems and the security of Chaum’s blind signature scheme. *Journal of Cryptology*, 16(3):185–215, 2003.
7. M. Blaze, G. Bleumer, and M. Strauss. Divertible protocols and atomic proxy cryptography. In K. Nyberg, editor, *EUROCRYPT’98*, volume 1403 of LNCS, pages 127–144. Springer, Heidelberg, May / June 1998.
8. D. Boneh, X. Boyen, and H. Shacham. Short group signatures. In M. Franklin, editor, *CRYPTO 2004*, volume 3152 of LNCS, pages 41–55. Springer, Heidelberg, Aug. 2004.
9. D. Boneh, K. Lewi, H. W. Montgomery, and A. Raghunathan. Key homomorphic PRFs and their applications. In *Advances in Cryptology - CRYPTO 2013 - 33rd Annual Cryptology Conference, Santa Barbara, CA, USA, August 18-22, 2013. Proceedings, Part I*, pages 410–428, 2013.
10. D. Boneh, K. Lewi, H. W. Montgomery, and A. Raghunathan. Key homomorphic PRFs and their applications. IACR Cryptology ePrint Archive, 2015:220, 2015.
11. Z. Brakerski and V. Vaikuntanathan. Fully homomorphic encryption from ring-LWE and security for key dependent messages. In P. Rogaway, editor, *CRYPTO 2011*, volume 6841 of LNCS, pages 505–524. Springer, Heidelberg, Aug. 2011.
12. E. Brier, J.-S. Coron, T. Icart, D. Madore, H. Randriam, and M. Tibouchi. Efficient indifferentiable hashing into ordinary elliptic curves. Cryptology ePrint Archive, Report 2009/340, 2009. http://eprint.iacr.org/2009/340.
13. R. Canetti, R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. Adaptive security for threshold cryptosystems. In M. Wiener, editor, *Advances in Cryptology — CRYPTO’ 99*, pages 98–116, Berlin, Heidelberg, 1999. Springer Berlin Heidelberg.
14. R. Canetti, S. Halevi, and J. Katz. A forward-secure public-key encryption scheme. In E. Biham, editor, *EUROCRYPT 2003*, volume 2656 of LNCS, pages 255–271. Springer, Heidelberg, May 2003.
15. D. Chaum. Zero-knowledge undeniable signatures. In I. Damgård, editor, *EUROCRYPT’90*, volume 473 of LNCS, pages 458–464. Springer, Heidelberg, May 1991.
16. D. Chaum and T. P. Pedersen. Wallet databases with observers. In E. F. Brickell, editor, *CRYPTO’92*, volume 740 of LNCS, pages 89–105. Springer, Heidelberg, Aug. 1993.
17. A. Davidson, A. Deo, E. Lee, and K. Martin. Strong post-compromise secure proxy re-encryption. In *Information Security and Privacy (ACISP) 2019*.
18. D. Derler, S. Krenn, T. Lorünser, S. Ramacher, D. Slamanig, and C. Striecks. Revisiting proxy re-encryption: Forward secrecy, improved security, and applications. In M. Abdalla and R. Dahab, editors, *PKC 2018, Part I*, volume 10769 of LNCS, pages 219–250. Springer, Heidelberg, Mar. 2018.
19. A. Everspaugh, R. Chatterjee, S. Scott, A. Juels, and T. Ristenpart. The Pythia PRF service. In *24th USENIX Security Symposium (USENIX Security 15)*, pages 547–562, Washington, D.C., 2015. USENIX Association.
20. A. Everspaugh, K. G. Paterson, T. Ristenpart, and S. Scott. Key rotation for authenticated encryption. In *Advances in Cryptology - CRYPTO 2017 - 37th Annual International Cryptology Conference, Santa Barbara, CA, USA, August 20-24, 2017, Proceedings, Part III*, pages 98–129, 2017.
21. W. Ford and B. S. Kaliski Jr. Server-assisted generation of a strong secret from a password. In *9th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE 2000)*, pages 176–180, Gaithersburg, MD, USA, June 4–16, 2000. IEEE Computer Society.
22. M. J. Freedman, Y. Ishai, B. Pinkas, and O. Reingold. Keyword search and oblivious pseudorandom functions. In J. Kilian, editor, *TCC 2005*, volume 3378 of LNCS, pages 303–324. Springer, Heidelberg, Feb. 2005.
23. R. Gennaro, M. O. Rabin, and T. Rabin. Simplified VSS and fast-track multiparty computations with applications to threshold cryptography. In B. A. Coan and Y. Afek, editors, *17th ACM PODC*, pages 101–111. ACM, June / July 1998.
24. Google Cloud. Google Cloud Key Management Service, 2018. https://cloud.google.com/kms/.
25. A. Herzberg, S. Jarecki, H. Krawczyk, and M. Yung. Proactive secret sharing or: How to cope with perpetual leakage. In D. Coppersmith, editor, *CRYPTO’95*, volume 963 of LNCS, pages 339–352. Springer, Heidelberg, Aug. 1995.
26. B. A. Huberman, M. K. Franklin, and T. Hogg. Enhancing privacy and trust in electronic communities. In *EC, 1999*.
27. IBM. IBM Key Protect, 2018. https://console.bluemix.net/catalog/services/key-protect.
28. S. Jarecki, A. Kiayias, and H. Krawczyk. Round-optimal password-protected secret sharing and T-PAKE in the password-only model. In P. Sarkar and T. Iwata, editors, *ASIACRYPT 2014, Part II*, volume 8874 of LNCS, pages 233–253. Springer, Heidelberg, Dec. 2014.
29. S. Jarecki, A. Kiayias, H. Krawczyk, and J. Xu. Highly-efficient and composable password-protected secret sharing (or: how to protect your Bitcoin wallet online). In *Security and Privacy (EuroS&P), 2016 IEEE European Symposium on*, pages 276–291. IEEE, 2016.
30. S. Jarecki, A. Kiayias, H. Krawczyk, and J. Xu. TOPPSS: Cost-minimal password-protected secret sharing based on threshold OPRF. In D. Gollmann, A. Miyaji, and H. Kikuchi, editors, *ACNS 17*, volume 10355 of LNCS, pages 39–58. Springer, Heidelberg, July 2017.
31. S. Jarecki, A. Kiayias, H. Krawczyk, and J. Xu. TOPPSS: Cost-minimal password-protected secret sharing based on threshold OPRF. Cryptology ePrint Archive, Report 2017/363, 2017. http://eprint.iacr.org/2017/363.
32. S. Jarecki, H. Krawczyk, and J. Resch. Updatable oblivious key management for storage systems. In *2019 ACM SIGSAC Conference on Computer and Communications Security (CCS’19)*. ACM, 2019.
33. S. Jarecki and X. Liu. Fast secure computation of set intersection. In J. A. Garay and R. D. Prisco, editors, *SCN 10*, volume 6280 of LNCS, pages 418–435. Springer, Heidelberg, Sept. 2010.
34. Jeff Barr. Amazon S3: Two Trillion Objects, 1.1 Million Requests Per Second. 2013. https://aws.amazon.com/blogs/aws/amazon-s3-two-trillion-objects-11-million-requests-second/.
35. M. Klooß, A. Lehmann, and A. Rupp. (R)CCA secure updatable encryption with integrity protection. In *Eurocrypt 2019*.
36. R. Lai, C. Egger, M. Reinert, S. Chow, M. Maffei, and D. Schröder. Simple password-hardened encryption services. In *27th USENIX Security Symposium (USENIX Security 18)*, 2018.
37. A. Lehmann and B. Tackmann. Updatable encryption with post-compromise security. In *Advances in Cryptology - EUROCRYPT 2018 - 37th Annual International Conference on the Theory and Applications of Cryptographic Techniques, Tel Aviv, Israel, April 29 - May 3, 2018 Proceedings, Part III*, pages 685–716, 2018.
38. A. Y. Lindell. Adaptively secure two-party computation with erasures. In M. Fischlin, editor, *Topics in Cryptology – CT-RSA 2009*, pages 117–132, Berlin, Heidelberg, 2009. Springer Berlin Heidelberg.
39. Microsoft. How many cryptographic operations are supported per second with dedicated HSM? 2019. https://docs.microsoft.com/en-us/azure/dedicated-hsm/faq#performance-and-scale.
40. Microsoft Azure. Azure Key Vault, 2018. https://docs.microsoft.com/en-us/azure/key-vault/key-vault-overview.
41. M. Naor, B. Pinkas, and O. Reingold. Distributed pseudo-random functions and KDCs. In J. Stern, editor, *EUROCRYPT’99*, volume 1592 of LNCS, pages 327–346. Springer, Heidelberg, May 1999.
42. M. Naor and O. Reingold. Number-theoretic constructions of efficient pseudo-random functions. In *38th FOCS*, pages 458–467. IEEE Computer Society Press, Oct. 1997.
43. OASIS Open. PKCS #11 Cryptographic Token Interface Base Specification Version 2.40, 2015. https://docs.oasis-open.org/pkcs11/pkcs11-base/v2.40/os/pkcs11-base-v2.40-os.html.
44. R. Ostrovsky and M. Yung. How to withstand mobile virus attacks (extended abstract). In L. Logrippo, editor, *10th ACM PODC*, pages 51–59. ACM, Aug. 1991.
45. A. Patel and M. Yung. Fully dynamic password-protected secret sharing, 2017. Manuscript.
46. T. P. Pedersen. A threshold cryptosystem without a trusted party (extended abstract) (rump session). In D. W. Davies, editor, *EUROCRYPT’91*, volume 547 of LNCS, pages 522–526. Springer, Heidelberg, Apr. 1991.
47. Y. Polyakov, K. Rohloff, G. Sahu, and V. Vaikuntanathan. Fast proxy re-encryption for publish/subscribe systems. *ACM Transactions on Privacy and Security (TOPS)*, 20, 2017.
48. K. Sakurai and Y. Yamane. Blind decoding, blind undeniable signatures, and their applications to privacy protection. In *Proceedings of the First International Workshop on Information Hiding*, pages 257–264, London, UK, 1996. Springer-Verlag.
49. Thales. SafeNet Luna Network HSM, 2019. https://safenet.gemalto.com/resources/data-protection/luna-sa-network-attached-hsm-product-brief/.

### Proof of the OMDH-IO Assumption in the Generic Group Model

We outline the steps for adapting the GGM (Generic Group Model) proof of OMDH (One-More Discrete Logarithm Problem) from [31] to the OMDH-IO (One-More Discrete Logarithm Problem with Inverse Oracle) case. As argued in [31], it suffices to show OMDH security for \( N = Q + 1 \), in which case the upper bound on the probability that a GGM adversary solves the OMDH problem in a group of prime order \( q \) while making \( r \) group operations and \( Q \) queries to the exponentiation oracle \( (\cdot)^k \) is \( \frac{Q(2Q + r)^2}{q} \).

In a GGM proof, every group element the adversary obtains is represented by a polynomial in unknowns \( (u_1, \ldots, u_N, k) \) where \( u_i = \text{DL}(g, g^i) \). Group multiplications or divisions correspond to adding or subtracting such polynomials, and querying the oracle \( (\cdot)^k \) on a group element corresponds to multiplying the corresponding polynomial by \( k \).

The proof argues that the only way the adversary can win is either if some two different polynomials it creates have equal values on random inputs \( (u_1, \ldots, u_N, k) \), or if the group elements it outputs correspond to polynomials \( k \cdot u_1, \ldots, k \cdot u_N \). The latter case is easily seen as impossible for an adversary with only \( Q = N - 1 \) accesses to the "multiply-a-polynomial-by-\( k \)" oracle \( (\cdot)^k \). The upper bound on the probability of the first case comes from the fact that there are at most \( 2Q + r \) polynomials, each one having at most degree \( Q \) in \( k \) (and linear in variables \( u_1, \ldots, u_N \)), and the fact that a non-zero \( Q \)-degree polynomial can have at most \( Q \) roots. Hence, each pair of different polynomials can evaluate to the same value on random exponent \( (u_1, \ldots, u_N, k) \) with probability at most \( \frac{Q}{q} \).

If the GGM adversary makes \( t \) queries to the inverse-exponentiation oracle \( (\cdot)^{1/k} \), each query multiplies the corresponding polynomial by \( k^{-1} \). The resulting polynomials, after multiplying all of them by \( k^t \), can be thought of as polynomials of degree at most \( Q + t \) instead of \( Q \). Thus, by the same argument, the upper bound on the probability of the GGM adversary solving all \( N = Q + 1 \) challenges is bounded by \( \frac{(Q + t)(2Q + t + r)^2}{q} \). Note that \( r \gg \max(Q, t) \) in typical applications, including our UOKMS scheme, hence this bound can be approximated as \( \frac{(Q + t)r^2}{q} \).