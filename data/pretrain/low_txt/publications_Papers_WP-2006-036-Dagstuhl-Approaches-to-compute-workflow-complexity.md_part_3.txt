### Short-Term and Long-Term Memory in Workflow Design

Short-term memory (STM) limits the duration of storage to less than about 30 seconds, whereas long-term memory (LTM) can last from as little as 30 seconds to several decades. Understanding the roles of STM and LTM in information processing can lead to the development of workflow metrics that predict human performance and comprehension. These metrics can be used to assess and improve the understandability of workflows.

### Cognitive Complexity and Workflow Design

Consider the workflow on the left side of Figure 8, which consists of 18 activities. Each activity has a name and a perceived behavior. When a workflow designer examines this workflow, their brain attempts to group all the associated concepts into a single, abstract unit called a "chunk" (Cant, Jeffery et al., 1995). However, STM is a limited container that can only hold a small, finite number of concepts. According to Miller (1956), the average capacity of human STM is approximately seven items, plus or minus two. This means that a person can retain and recall around 7±2 items, such as words or numbers.

In our example, the workflow contains too many concepts for them all to be stored in STM. As a result, designers are at a higher risk of making errors when faced with workflow design decisions. Indeed, when STM is overloaded, errors are more likely to occur (Kintsch, 1998).

### Hierarchical Decomposition as a Solution

One solution to help workflow designers avoid errors is to hierarchically decompose the workflow. This involves breaking the workflow into a hierarchy of sub-workflows. By doing so, chunks can be composed of smaller chunks, and these smaller chunks can become part of LTM if they are encountered frequently enough. Once in LTM, these chunks can be recognized and recalled more easily. In the context of computer programs, it has been found that identifier density is a good predictor of error, especially under time constraints (Klemola, 1999). In our context, activities can be thought of as identifiers.

### Information Processing and Complexity

Athey (1976) and Ören (1978) have noted that for problems with low complexity, individuals may need a low level of information processing to make decisions. As the complexity of the problem increases, the required level of information processing also increases. However, there is a critical point beyond which the effectiveness of information processing decreases. After this point, an increase in complexity can worsen an individual's ability to cope with the problem by reducing the level of information processing. Therefore, workflows should be structured within predefined levels of complexity. The workflow on the left side of Figure 8 may exceed the critical point, leading to a decrease in the individual's ability to manage the complexity.

### Computational Complexity Theory

Computational complexity theory studies the resources required to solve a given problem, typically focusing on parameters such as time and space. Time complexity examines the length of time needed to find a solution, while space complexity looks at the amount of physical storage required. Both are functions of the input size.

Workflows are case-based, meaning each activity is executed for a specific case (Aalst, 1998). Time complexity can be used to study the number of activities needed to complete a particular workflow instance, and space complexity can be used to study the storage space required.

### Example: Time Complexity of a Workflow

Consider the workflow in Figure 9, where each activity is described using Big O notation. Some transitions are loops that are executed n times. Given these settings, what is the time computational complexity of the workflow? The difficulty in computing the overall complexity arises from the presence of parallel constructs and non-deterministic splits.

### Conclusions

Several workflow specification languages and systems have been developed to facilitate the modeling and support of business processes. Emerging business-to-business and business-to-customer distributed systems will likely be based on workflow management platforms. One step in this direction is the specification of BPEL, a language for designing processes that orchestrate Web services. As organizations adopt this new technological approach, they will need tools to ensure that workflows are simple, modular, easy to understand, maintain, and re-engineer. To achieve these objectives, one can calculate the complexity of workflows. The complexity of workflows is intuitively connected to factors such as readability, understandability, effort, testability, reliability, and maintainability. While these characteristics are fundamental, only a few contributions have targeted these issues.

In this paper, we surveyed several complexity approaches from other fields and discussed how these metrics and measurements can be adapted for workflows. We have focused on information complexity, cyclomatic complexity, Kolmogorov complexity, cognitive complexity, and computational complexity. Further empirical investigations could lead to the establishment of a complexity theory for business process models. To demonstrate the effectiveness of these metrics, we plan to conduct controlled experiments and develop tools for workflow designers.

### References

- Aalst, W. M. P. v. d. (1998). "The Application of Petri Nets to Workflow Management." The Journal of Circuits, Systems and Computers 8(1): 21-66.
- Aalst, W. M. P. v. d. and A. H. M. t. Hofstede (2005). "YAWL: Yet Another Workflow Language." Information Systems Frontiers 30(4): 245-275.
- Adams, M., D. Edmond, et al. (2003). The application of Activity Theory to dynamic workflow adaptation issues. 7th Pacific Asia Conference on Information Systems (PACIS 2003), Adelaide, South Australia.
- Alexander, C. (1979). The Timeless Way of Building, Oxford University Press.
- Arthur, W. B. (1999). "Complexity and the Economy." Science 284(5411): 107-109.
- Athey, T. H. (1976). Training the Systems Analysts to Solve Complex Real World Problems. 14th Annual Computer Personnel Research Conference, ACM Press.
- Bar-Yam, Y. (1997). Dynamics of Complex Systems, Perseus.
- Burbeck, S. (1996). "Real-time complexity metrics for smalltalk methods." IBM Systems Journal: 1-28.
- Cant, S., D. R. Jeffery, et al. (1995). "A conceptual model of cognitive complexity of elements of the programming process." Inf. Software Technol. 37(7): 351-362.
- Cardoso, J. (2005). About the Complexity of Teamwork and Collaboration Processes. IEEE International Symposium on Applications and the Internet (SAINT 2005), Workshop - Teamware: supporting scalable virtual teams in multi-organizational settings, Trento, Italy, IEEE Computer Society.
- Cardoso, J. (2005). About the Data-Flow Complexity of Web Processes. 6th International Workshop on Business Process Modeling, Development, and Support: Business Processes and Support Systems: Design for Flexibility, Porto, Portugal.
- Cardoso, J. (2005). Control-flow Complexity Measurement of Processes and Weyuker's Properties. 6th International Conference on Enformatika, 26-28, October 2005, Budapest, Hungary, International Academy of Sciences.
- Cardoso, J. (2005). Evaluating Workflows and Web Process Complexity. Workflow Handbook 2005. L. Fischer. Lighthouse Point, FL, USA, Future Strategies Inc.: 284-290.
- Cardoso, J. (2006). "Complexity Analysis of BPEL Web Processes." Journal of Software Process: Improvement and Practice, InterScience, Wiley (to appear).
- Cardoso, J. and A. Sheth (2005). Adaptation and Workflow Management Systems. International Conference WWW/Internet 2005, Lisbon, Portugal.
- Du, W., J. Davis, et al. (1999). Enterprise workflow resource management. International Workshop on Research Issues in Data Engineering, Sydney, Australia.
- Goldenfeld, N. and L. P. Kadanoff (1999). "Simple Lessons from Complexity." Science 284(5411): 87-89.
- Gruhn, V. and R. Laue (2006). Adopting the Cognitive Complexity Measure for Business Process Models. 5th IEEE International Conference on Cognitive Informatics, Beijing, China.
- Gruhn, V. and R. Laue (2006). Complexity Metrics for Business Process Models. 9th International Conference on Business Information Systems, Klagenfurt, Austria.
- Hermann, T. (1995). Workflow Management Systems: Ensuring Organizational Flexibility by Possibilities of Adaptation and Negotiation. Proceedings of the Conference on Organizational Computing Systems (COOCS'95).
- Holland, J. H. (1995). Hidden Order: How Adaptation Builds Complexity, Reading: Addison-Wesley.
- IEEE (1992). IEEE 610, Standard Glossary of Software Engineering Terminology. New York, Institute of Electrical and Electronic Engineers.
- Jones, T. C. (1986). Programming Productivity. New York, McGraw-Hill.
- Kauffman, S. A. (1993). The Origins of Order: Self-Organization and Selection in Evolution. New York, Oxford University Press.
- Kintsch, W. (1998). Comprehension: a paradigm for cognition, Cambridge University Press.
- Klemola, T. (1999). Software Comprehension: Theory and Metrics, Concordia University.
- Koch, C. and G. Laurent (1999). "Complexity and the Nervous System." Science 284(5411): 96-98.
- Lakshmanan, K. B., S. Jayaprakash, et al. (1991). "Properties of Control-Flow Complexity Measures." IEEE Transactions on Software Engineering archive 17(12): 1289 - 1295.
- Lee, T. (2003). Complexity Theory in Axiomatic Design. Department of Mechanical Engineering. Massachusetts, Massachusetts Institute of Technology: 182.
- Miller, G. A. (1956). "The Magical Number Seven, Plus or Minus Two: Some Limits on Our Capacity for Processing Information." Psychological Review 63: 81-97.
- Miller, J. A., J. S. Cardoso, et al. (2002). Using Simulation to Facilitate Effective Workflow Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego, California.
- Ören, T. I. (1978). Rationale for Large Scale Systems Simulation Software based on Cybernetics and General Systems Theories. Cybernetics and Modelling and Simulation Large Scale Systems, Namur, Belgium.
- Reijers, H. A. and I. T. P. Vanderfeesten (2004). Cohesion and Coupling Metrics for Workflow Process Design. BPM 2004 (LNCS 3080). J. Desel, B. Pernici and M. Weske. Berlin, Heidelberg, Springer-Verlag. LNCS 3080: 290-305.
- Rind, D. (1999). "Complexity and Climate." Science 284(5411): 103-107.
- Rolón, E., F. Ruíz, et al. (2005). "Aplicación de métricas software en la evaluación de modelos de procesos de negocio." Revista Sociedad Chilena de Ciencia de la Computación 6(1).
- Weng, G., U. S. Bhalla, et al. (1999). "Complexity in Biological Signaling Systems." Science 284(5411): 92-96.
- Whitesides, G. M. and R. F. Ismagilov (1999). "Complexity in Chemistry." Science 284(5411): 89-92.
- zur Mühlen, M. (1999). Resource Modeling in Workflow Applications. Workflow Management Conference, Muenster, Germany.
- Zuse, H. (1991). Software Complexity: Measures and Methods. Berlin, New York, DeGruyter Publisher.
- Zuse, H. (1997). A Framework of Software Measurement. Berlin, Walter de Gruyter Inc.