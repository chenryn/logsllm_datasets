# Optimized Text

## Table 1: Execution Times (in Clock Cycles) of Our ECC Software and Some Previous Implementations

| Operation | 159-bit Field | 191-bit Field |
|-----------|---------------|---------------|
| Multiplication | 1,828 | 3,248,819 |
| Squaring | 1,500 (approx.) | - |
| Inversion | 268,000 (approx.) | - |

### Arithmetic for Both of Our Prime Fields
For example, a full multiplication (including reduction) in our 159-bit field has an execution time of just 1,828 clock cycles, which improves the 160-bit multiplication times in [5] and [26] by 124 and 77 cycles, respectively. An execution time of 1,828 cycles is, to our knowledge, the best result for multiplication in a prime field of about 160 bits ever reported in the literature and, therefore, represents a new speed record. Squaring in our 159-bit prime field is approximately 18% faster than a multiplication, whereas the Fermat-based inversion has an execution time of roughly 147 multiplications. Note that all field operations listed in Table 1 have a regular execution profile and a constant execution time, independent of the actual value of the operands, which helps to thwart certain implementation attacks.

## Table 2: Execution Time (in Clock Cycles) of Point Addition and Point Doubling

| Operation | TE Point Add. | TE Point Dbl. | Mon Point Add. | Mon Point Dbl. |
|-----------|---------------|---------------|-----------------|-----------------|
| 159-bit | 14,685 | 13,263 | 10,276 | 8,183 |
| 191-bit | 19,852 | 17,514 | 13,586 | 10,733 |

### Implementation Details
We implemented the point arithmetic (i.e., point addition and doubling) in C, using Assembly functions for the field operations as subroutines. The execution times for the Montgomery shape and the twisted Edwards shape on both curves P159 and P191 are specified in Table 2. As expected, the point arithmetic on the Montgomery curve is faster than that on the twisted Edwards curve, mainly due to the fact that the differential point addition/doubling on a Montgomery curve does not involve the y coordinate. In summary, the simulation results in Table 2 agree with the number of field multiplications and squarings as analyzed in Subsection 2.1. A fixed-base scalar multiplication using the twisted Edwards model of MoTE curve P159 requires approximately 1.635 · 10^6 cycles on the MSP430F1611. We perform a fixed-base scalar multiplication via a fixed-base comb method with 8 pre-computed multiples of the base point so that four bits of the scalar can be processed at a time. A detailed description of this comb method, which is highly regular and has constant (i.e., operand-independent) execution time, can be found in [16]. As mentioned at the outset of this section, the fixed-base scalar multiplication also includes the conversion of the obtained point from the twisted Edwards curve to the birationally-equivalent Montgomery curve, on which the second scalar multiplication is performed. However, since this second scalar multiplication is variable-base, we use the Montgomery ladder to execute it in an efficient fashion. Taking curve P159 as an example, the second (i.e., variable-base) scalar multiplication executes in 3.249 · 10^6 cycles, which means the total computation time of ephemeral ECDH amounts to 4.884 · 10^6 cycles.

## Table 3: Comparison with Previous ECC Software Implementations for MSP430 Devices

| Implementation | Multiplication (Cycles) | Fixed-Base Scalar Mult. (Cycles) | Variable-Base Scalar Mult. (Cycles) | ECDH Key Exchange (Cycles) | Regular Execution Profile | Device |
|----------------|------------------------|---------------------------------|-------------------------------------|----------------------------|--------------------------|--------|
| Our Work (P159) | 1,828 | 1.635 · 10^6 | 3.249 · 10^6 | 4.884 · 10^6 | Yes | MSP430F1611 |
| [5] | 1,952 | n/a | n/a | n/a | No | MSP430F1611 |
| [26] | 1,828 | n/a | n/a | n/a | n/a | MSP430F1611 |
| [10] | 2,559 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [12] | 2,555 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [16] | 12,645,000 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [20] | 10,020,000 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [23] | 8,779,931 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [25] | 6,312,785 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [26] | 5,760,000 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [26] | 5,721,420 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [26] | 4,417,661 | n/a | n/a | n/a | Yes | MSP430F1611 |
| [26] | 3,248,819 | n/a | n/a | n/a | Yes | MSP430F1611 |

### Conclusions
We presented a high-speed implementation of ephemeral ECDH key exchange based on MoTE elliptic curves for the MSP430 family of microcontrollers. Our software exploits the birational equivalence between the Montgomery model and the twisted Edwards model of a MoTE curve with the goal of maximizing the performance of both fixed-base and variable-base scalar multiplication. In the case of a MoTE curve over a 159-bit pseudo-Mersenne prime, a fixed-base scalar multiplication (using the twisted Edwards form and eight pre-computed points) takes 1.635 · 10^6 cycles on an MSP430F1611, while a variable-base scalar multiplication on the birationally-equivalent Montgomery curve requires 3.249 · 10^6 clock cycles. Consequently, both scalar multiplications can be executed in only 4.884 · 10^6 cycles, which sets a new speed record for the computation of an ephemeral ECDH key exchange on the MSP430 platform and improves the previously best result in the literature by 21.84%. We achieved this performance gain through a careful selection of curve models and domain parameters, aiming for a good balance between security and efficiency, combined with a highly-optimized implementation of the low-level field and group arithmetic.

### Acknowledgements
- **Zhe Liu** is supported by the Fonds National de la Recherche (FNR) Luxembourg under AFR grant no. 1359142.
- **Hwajeong Seo** is supported by the MSIP (Ministry of Science, ICT and Future Planning), Korea, under the ITRC (Information Technology Research Center) support program (NIPA-2014-H0301-14-1048) supervised by the NIPA (National IT Industry Promotion Agency).
- **Xinyi Huang** is supported by the National Natural Science Foundation of China (61472083, U1405255, 61202450), Fok Ying Tung Education Foundation (141065), Ph.D. Programs Foundation of the Ministry of Education of China (20123503120001), Program for New Century Excellent Talents in Fujian University (JA14067), Distinguished Young Scholars Fund of Department of Education, Fujian Province, China (JA13062).

### References
1. I. F. Akyildiz and M. C. Vuran. *Wireless Sensor Networks*. John Wiley and Sons, 2010.
2. D. J. Bernstein. "Curve25519: New Diffie-Hellman Speed Records." In *Public Key Cryptography — PKC 2006*, vol. 3958 of Lecture Notes in Computer Science, pp. 207–228. Springer Verlag, 2006.
3. D. J. Bernstein, P. Birkner, M. Joye, T. Lange, and C. Peters. "Twisted Edwards Curves." In *Progress in Cryptology — AFRICACRYPT 2008*, vol. 5023 of Lecture Notes in Computer Science, pp. 389–405. Springer Verlag, 2008.
4. D. J. Bernstein and T. Lange. "SafeCurves: Choosing Safe Curves for Elliptic-Curve Cryptography." Available online at http://safecurves.cr.yp.to, 2013.
5. C. P. Gouvêa and J. López. "Software Implementation of Pairing-Based Cryptography on Sensor Networks Using the MSP430 Microcontroller." In *Progress in Cryptology — INDOCRYPT 2009*, vol. 5922 of Lecture Notes in Computer Science, pp. 248–262. Springer Verlag, 2009.
6. J. Großschädl. "A Family of Implementation-Friendly MoTE Elliptic Curves." Technical report TR-LACS-2013-01, Laboratory of Algorithmics, Cryptology and Security (LACS), University of Luxembourg, Luxembourg, 2013.
7. N. Gura, A. Patel, A. S. Wander, H. Eberle, and S. Chang Shantz. "Comparing Elliptic Curve Cryptography and RSA on 8-bit CPUs." In *Cryptographic Hardware and Embedded Systems — CHES 2004*, vol. 3156 of Lecture Notes in Computer Science, pp. 119–132. Springer Verlag, 2004.
8. D. R. Hankerson, A. J. Menezes, and S. A. Vanstone. *Guide to Elliptic Curve Cryptography*. Springer Verlag, 2004.
9. G. Hinterwälder, C. Paar, and W. P. Burleson. "Privacy Preserving Payments on Computational RFID Devices with Application in Intelligent Transportation Systems." In *Radio Frequency Identification Security and Privacy Issues — RFIDSec 2012*, vol. 7739 of Lecture Notes in Computer Science, pp. 109–122. Springer Verlag, 2012.
10. G. Hinterwälder, A. Moradi, M. Hutter, P. Schwabe, and C. Paar. "Full-Size High-Security ECC Implementation on MSP430 Microcontrollers." In *Progress in Cryptology — LATINCRYPT 2014*, vol. 8895 of Lecture Notes in Computer Science, pp. 31–47. Springer Verlag, 2015.
11. H. Hisil, K. K.-H. Wong, G. Carter, and E. Dawson. "Twisted Edwards Curves Revisited." In *Advances in Cryptology — ASIACRYPT 2008*, vol. 5350 of Lecture Notes in Computer Science, pp. 326–343. Springer Verlag, 2008.
12. C. Lederer, R. Mader, M. Koschuch, J. Großschädl, A. Szekely, and S. Tillich. "Energy-Efficient Implementation of ECDH Key Exchange for Wireless Sensor Networks." In *Information Security Theory and Practice — WISTP 2009*, vol. 5746 of Lecture Notes in Computer Science, pp. 112–127. Springer Verlag, 2009.
13. A. Liu and P. Ning. "TinyECC: A Configurable Library for Elliptic Curve Cryptography in Wireless Sensor Networks." In *Proceedings of the 7th International Conference on Information Processing in Sensor Networks (IPSN 2008)*, pp. 245–256. IEEE Computer Society, 2008.
14. Z. Liu, J. Großschädl, L. Li, and Q. Xu. "Energy-Efficient Elliptic Curve Cryptography for MSP430-Based Wireless Sensor Nodes." Preprint, submitted for publication, 2015.
15. Z. Liu, J. Großschädl, and D. S. Wong. "Low-Weight Primes for Lightweight Elliptic Curve Cryptography on 8-bit AVR Processors." In *Information Security and Cryptology — INSCRYPT 2013*, vol. 8567 of Lecture Notes in Computer Science, pp. 217–235. Springer Verlag, 2014.
16. Z. Liu, E. Wenger, and J. Großschädl. "MoTE-ECC: Energy-Scalable Elliptic Curve Cryptography for Wireless Sensor Networks." In *Applied Cryptography and Network Security — ACNS 2014*, vol. 8479 of Lecture Notes in Computer Science, pp. 361–379. Springer Verlag, 2014.
17. J. Lopez and J. Zhou. *Wireless Sensor Network Security*. IOS Press, 2008.
18. L. Marin, A. J. Jara, and A. F. Gómez-Skarmeta. "Shifting Primes: Extension of Pseudo-Mersenne Primes to Optimize ECC for MSP430-Based Future Internet of Things Devices." In *Availability, Reliability and Security for Business, Enterprise and Health Information Systems*, vol. 6908 of Lecture Notes in Computer Science, pp. 205–219. Springer Verlag, 2011.
19. P. L. Montgomery. "Speeding the Pollard and Elliptic Curve Methods of Factorization." *Mathematics of Computation*, 48(177):243–264, Jan. 1987.
20. C. Pendl, M. Pelnar, and M. Hutter. "Elliptic Curve Cryptography on the WISP UHF RFID Tag." In *RFID Security and Privacy — RFIDSec 2011*, vol. 7055 of Lecture Notes in Computer Science, pp. 32–47. Springer Verlag, 2012.
21. H. Seo, Y. Lee, H. Kim, T. Park, and H. Kim. "Binary and Prime Field Multiplication for Public Key Cryptography on Embedded Microprocessors." *Security and Communication Networks*, 7(4):774–787, Apr. 2014.
22. H. Seo, K.-A. Shim, and H. Kim. "Performance Enhancement of TinyECC Based on Multiplication Optimizations." *Security and Communication Networks*, 6(2):151–160, Feb. 2013.
23. P. Szczechowiak, L. B. Oliveira, M. Scott, M. Collier, and R. Dahab. "NanoECC: Testing the Limits of Elliptic Curve Cryptography in Sensor Networks." In *Wireless Sensor Networks — EWSN 2008*, vol. 4913 of Lecture Notes in Computer Science, pp. 305–320. Springer Verlag, 2008.
24. Texas Instruments, Inc. *MSP430x1xx Family User’s Guide (Rev. F)*. Manual, available for download at http://www.ti.com/lit/ug/slau049f/slau049f.pdf, 2006.
25. H. Wang, B. Sheng, and Q. Li. "Elliptic Curve Cryptography-Based Access Control in Sensor Networks." *International Journal of Security and Networks*, 1(3–4):127–137, Dec. 2006.
26. E. Wenger. "Hardware Architectures for MSP430-Based Wireless Sensor Nodes Performing Elliptic Curve Cryptography." In *Applied Cryptography and Network Security — ACNS 2013*, vol. 7954 of Lecture Notes in Computer Science, pp. 290–306. Springer Verlag, 2013.
27. E. Wenger and M. Werner. "Evaluating 16-bit Processors for Elliptic Curve Cryptography." In *Smart Card Research and Advanced Applications — CARDIS 2011*, vol. 7079 of Lecture Notes in Computer Science, pp. 166–181. Springer Verlag, 2011.