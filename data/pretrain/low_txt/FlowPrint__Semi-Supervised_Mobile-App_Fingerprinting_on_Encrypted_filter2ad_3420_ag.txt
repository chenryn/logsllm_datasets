### Original App Recognition and Its Inherent Flaws

None of the existing approaches address the fundamental issue of app recognition, specifically the inability to recognize previously unseen apps.

### Real-Time Fingerprint Generation

Related methods for real-time fingerprint generation in app detection either require decrypted network traffic or focus on identifying the application layer rather than the mobile app itself. Bernaille et al. [13] emphasized the importance of rapid app recognition in network traffic and proposed clustering TCP flows based on their first five messages. This approach is effective for recognizing application-layer protocols, which may be sufficient for desktop apps. However, it is inadequate for mobile apps, which primarily use HTTPS or QUIC. DECANTeR [15] generates desktop app fingerprints from HTTP message headers without prior knowledge of the apps. Nevertheless, this method also depends on decrypted traffic for fingerprint generation.

### TLS Fingerprinting

In addition to app fingerprinting, TLS fingerprinting techniques are often used to track communicating processes [6, 8, 41, 42]. These techniques leverage the diversity of fields in ClientHello messages generated by different TLS implementations to create fingerprints. However, they are less effective in the homogeneous mobile environment, where many apps use the same SSL/TLS implementation provided by the underlying OS. As a result, different apps can produce identical TLS fingerprints, making it impractical to recognize or discover new apps. This property is even exploited by tools [29] to bypass censorship systems.

TLS fingerprinting can also be applied to ServerHello messages, as demonstrated by JA3S [6]. In this case, the destination rather than the app is fingerprinted. While this technique can potentially enhance our destination clustering step, it is not directly applicable to fingerprinting mobile apps. Generally, destination-based TLS fingerprinting techniques that focus on desktop applications do not perform well when applied to mobile apps because, as shown in Section V-E, mobile apps often share destination-based clusters (e.g., advertisement networks).

### Malware Detection

Our approach demonstrates value in detecting previously unseen apps, treating new apps as potentially malicious. This decision can complement techniques that focus on classifying malicious traffic [7, 9]. These methods cannot distinguish between individual apps but determine whether the traffic contains malicious patterns. Therefore, our approach complements these techniques by providing more detailed insights into the individual apps active on the network.

### Conclusion

In this work, we introduced FLOWPRINT, a novel approach for creating real-time app fingerprints from encrypted network traffic of mobile devices. Unlike existing methods, FLOWPRINT does not rely on prior knowledge about the apps active in a certain network. This capability allows FLOWPRINT to detect previously unseen apps, making it suitable for evolving sets of apps and opening up various security applications.

In our evaluation, FLOWPRINT achieved an accuracy of 89.2% for recognizing apps, outperforming the state-of-the-art supervised approach. Additionally, we demonstrated that our approach can detect previously unseen apps with a precision of 93.5%. These results highlight the effectiveness of semi-supervised approaches in handling evolving systems like mobile apps, even in the presence of largely homogeneous traffic due to third-party libraries and services.

### Acknowledgements

We would like to thank our reviewers for their valuable comments, which significantly improved our paper. This work was partially supported by the Netherlands Organisation for Scientific Research (NWO) in the context of the SeReNity project and grants from DHS S&T (contract FA8750-17-2-0145), NSF award CNS-1909020, the Data Transparency Lab, and Comcast Innovation Fund. Some of the analysis in the work was also supported by a Farsight Research Grant. The research leading to these results has further received funding from SBA Research (SBA-K1), which is funded within the framework of COMET Competence Centers for Excellent Technologies by BMVIT, BMDW, and the federal state of Vienna, managed by the FFG. Financial support from the Christian Doppler Research Association, the Austrian Federal Ministry for Digital and Economic Affairs, and the National Foundation for Research, Technology, and Development is also gratefully acknowledged.

### References

[1] Abbas Acar, Hossein Fereidooni, Tigist Abera, Amit Kumar Sikder, Markus Miettinen, Hidayet Aksu, Mauro Conti, Ahmad-Reza Sadeghi, and A. Selcuk Uluagac. Peek-a-Boo: I see your smart home activities, even encrypted! arXiv preprint arXiv:1808.02741, 2018.

[2] Giuseppe Aceto, Domenico Ciuonzo, Antonio Montieri, and Antonio Pescapé. Multi-Classification Approaches for Classifying Mobile App Traffic. Journal of Network and Computer Applications, 2018.

[3] Jagdish Prasad Achara, Gergely Acs, and Claude Castelluccia. On the Unicity of Smartphone Applications. In Proc. of the ACM Workshop on Privacy in the Electronic Society (WPES), 2015.

[4] Khaled Al-Naami, Swarup Chandra, Ahmad Mustafa, Latifur Khan, Zhiqiang Lin, Kevin Hamlen, and Bhavani Thuraisingham. Adaptive Encrypted Traffic Fingerprinting With Bi-Directional Dependence. In Proc. of the Annual Computer Security Applications Conference (ACSAC), 2016.

[5] Hasan Faik Alan and Jasleen Kaur. Can Android Applications Be Identified Using Only TCP/IP Headers of Their Launch Time Traffic? In Proc. of the ACM Conference on Security & Privacy in Wireless and Mobile Networks (WiSec), 2016.

[6] John B. Althouse, Jeff Atkinson, and Josh Atkins. JA3 - A method for profiling SSL/TLS Clients. https://github.com/salesforce/ja3, June 2017.

[7] Blake Anderson and David McGrew. Identifying Encrypted Malware Traffic with Contextual Flow Data. In Proc. of the ACM Workshop on Artificial Intelligence and Security (AISec), 2016.

[8] Blake Anderson and David McGrew. TLS Beyond the Browser: Combining End Host and Network Data to Understand Application Behavior. In Proc. of the ACM Internet Measurement Conference (IMC), 2019.

[9] Blake Anderson, Subharthi Paul, and David McGrew. Deciphering Malware’s use of TLS (without Decryption). Journal of Computer Virology and Hacking Techniques, 2018.

[10] AppAnnie. The State of Mobile in 2019. https://www.appannie.com/de/insights/market-data/the-state-of-mobile-2019/, January 2019.

[11] Michael Backes, Sven Bugiel, and Erik Derr. Reliable Third-Party Library Detection in Android and its Security Applications. In Proc. of the ACM Conference on Computer and Communications Security (CCS), 2016.

[12] Taimur Bakhshi and Bogdan Ghita. On Internet Traffic Classification: A Two-Phased Machine Learning Approach. Journal of Computer Networks and Communications, 2016.

[13] Laurent Bernaille, Renata Teixeira, Ismael Akodkenou, Augustin Soule, and Kave Salamatian. Traffic Classification On The Fly. ACM SIGCOMM Computer Communication Review, 2006.

[14] Matthias Böehmer, Brent Hecht, Johannes Schöning, Antonio Krüger, and Gernot Bauer. Falling Asleep with Angry Birds, Facebook and Kindle – A Large Scale Study on Mobile Application Usage. In Proc. of the International Conference on Human-Computer Interaction with Mobile Devices and Services (MobileHCI), 2011.

[15] Riccardo Bortolameotti, Thijs van Ede, Marco Caselli, Maarten H Everts, Pieter Hartel, Rick Hofstede, Willem Jonker, and Andreas Peter. DECANTeR: DEteCtion of Anomalous outbouNd HTTP TRaffic by Passive Application Fingerprinting. In Proc. of the Annual Computer Security Applications Conference (ACSAC), 2017.

[16] Riccardo Bortolameotti, Thijs van Ede, Andrea Continella, Thomas Hupperich, Maarten Everts, Reza Rafati, Willem Jonker, Pieter Hartel, and Andreas Peter. HeadPrint: Detecting Anomalous Communications through Header-based Application Fingerprinting. In Proc. of the ACM Symposium on Applied Computing (SAC), 2020.

[17] Yi Chen, Wei You, Yeonjoon Lee, Kai Chen, XiaoFeng Wang, and Wei Zou. Mass Discovery of Android Traffic Imprints through Instantiated Partial Execution. In Proc. of the ACM Conference on Computer and Communications Security (CCS), 2017.

[18] Yi-Chao Chen, Yong Liao, Mario Baldi, Sung-Ju Lee, and Lili Qiu. OS Fingerprinting and Tethering Detection in Mobile Networks. In Proc. of the ACM Internet Measurement Conference (IMC), 2014.

[19] Zhengyang Chen, Bowen Yu, Yu Zhang, Jianzhong Zhang, and Jingdong Xu. Automatic Mobile Application Traffic Identification by Convolutional Neural Networks. In Proc. of IEEE Trustcom/BigDataSE/ISPA, 2016.

[20] Yeongrak Choi, Jae Yoon Chung, Byungchul Park, and James Won-Ki Hong. Automated classifier generation for application-level mobile traffic identification. In Proc. of the IEEE/IFIP Network Operations and Management Symposium (NOMS), 2012.

[21] Cisco. SNORT Users Manual. https://www.snort.org/documents/snort-users-manual, 2018.

[22] Stefano Comino, Fabio M. Manenti, and Franco Mariuzzo. Updates Management in Mobile Applications. iTunes vs Google Play. Journal of Economics & Management Strategy, 2018.

[23] Mauro Conti, Luigi V. Mancini, Riccardo Spolaor, and Nino Vincenzo Verde. Can’t You Hear Me Knocking: Identification of User Actions on Android Apps via Traffic Analysis. In Proc. of the ACM Conference on Data and Application Security and Privacy (CODASPY), 2015.

[24] Andrea Continella, Yanick Fratantonio, Martina Lindorfer, Alessandro Puccetti, Ali Zand, Christopher Kruegel, and Giovanni Vigna. Obfuscation-Resilient Privacy Leak Detection for Mobile Apps Through Differential Analysis. In Proc. of the ISOC Network and Distributed System Security Symposium (NDSS), 2017.

[25] Shuaifu Dai, Alok Tongaonkar, Xiaoyin Wang, Antonio Nucci, and Dawn Song. NetworkProfiler: Towards Automatic Fingerprinting of Android Apps. In Proc. of the IEEE International Conference on Computer Communications (INFOCOM), 2013.

[26] Trinh Minh Tri Do and Daniel Gatica-Perez. Where and What: Using Smartphones to Predict Next Locations and Applications in Daily Life. Pervasive and Mobile Computing, 2014.

[27] Zakir Durumeric, Zane Ma, Drew Springall, Richard Barnes, Nick Sullivan, Elie Bursztein, Michael Bailey, J Alex Halderman, and Vern Paxson. The Security Impact of HTTPS Interception. In Proc. of the ISOC Network and Distributed System Security Symposium (NDSS), 2017.

[28] David Formby, Preethi Srinivasan, Andrew Leonard, Jonathan Rogers, and Raheem Beyah. Who’s in Control of Your Control System? Device Fingerprinting for Cyber-Physical Systems. In Proc. of the ISOC Network and Distributed System Security Symposium (NDSS), 2016.

[29] Sergey Frolov and Eric Wustrow. The use of TLS in Censorship Circumvention. In Proc. of the ISOC Network and Distributed System Security Symposium (NDSS), 2019.

[30] Julien Gamba, Mohammed Rashed, Abbas Razaghpanah, Juan Tapiador, and Narseo Vallina-Rodriguez. An Analysis of Pre-installed Android Software. In Proc. of the IEEE Symposium on Security and Privacy (S&P), 2020.

[31] Google. An Update on Android TLS Adoption. https://security.googleblog.com/2019/12/an-update-on-android-tls-adoption.html, December 2019.

[32] Cyril Goutte and Eric Gaussier. A Probabilistic Interpretation of Precision, Recall and F-Score, with Implication for Evaluation. In Proc. of the European Conference on Information Retrieval (ECIR), 2005.

[33] Aric Hagberg, Daniel Schult, and Pieter Swart. Exploring Network Structure, Dynamics, and Function using NetworkX. In Proc. of the Python in Science Conference (SciPy), 2008.

[34] Tin Kam Ho. Random Decision Forests. In Proc. of IEEE International Conference on Document Analysis and Recognition (ICDAR), 1995.

[35] Paul Jaccard. The Distribution of the Flora of the Alpine Zone. New Phytologist, 1912.

[36] Martin Lastovicka, Tomas Jirsik, Pavel Celeda, Stanislav Spacek, and Daniel Filakovsky. Passive OS Fingerprinting Methods in the Jungle of Wireless Networks. In Proc. of the IEEE/IFIP Network Operations and Management Symposium (NOMS), 2018.

[37] Fangfan Li, Arian Akhavan Niaki, David Choffnes, Phillipa Gill, and Alan Mislove. A Large-Scale Analysis of Deployed Traffic Differentiation Practices. In Proc. of the ACM Special Interest Group on Data Communication (SIGCOMM), 2019.

[38] Li Li, Daoyuan Li, Tegawendé F. Bissyandé, Jacques Klein, Yves Le Traon, David Lo, and Lorenzo Cavallaro. Understanding Android App Piggybacking: A Systematic Study of Malicious Code Grafting. IEEE Transactions on Information Forensics and Security, 2017.

[39] Marc Liberatore and Brian Neil Levine. Inferring the Source of Encrypted HTTP Connections. In Proc. of the ACM Conference on Computer and Communications Security (CCS), 2006.

[40] Martina Lindorfer, Matthias Neugschwandtner, Lukas Weichselbaum, Yanick Fratantonio, Victor Van Der Veen, and Christian Platzer. Andrubis - 1,000,000 Apps Later: A View on Current Android Malware Behaviors. In Proc. of the IEEE International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS), 2014.

[41] David McGrew, Blake Anderson, Philip Perricone, and Bill Hudson. JOY. https://github.com/cisco/joy/, February 2017.

[42] David McGrew, Brandon Enright, Blake Anderson, Shekhar Acharya, and Adam Weller. Mercury. https://github.com/cisco/mercury, August 2019.

[43] Wes McKinney et al. Data Structures for Statistical Computing in Python. In Proc. of the Python in Science Conference (SciPy), 2010.

[44] Stanislav Miskovic, Gene Moo Lee, Yong Liao, and Mario Baldi. AppPrint: Automatic Fingerprinting of Mobile Applications in Network Traffic. In Proc. of the International Conference on Passive and Active Network Measurement (PAM), 2015.

[45] Travis E. Oliphant. A Guide to NumPy. Trelgol Publishing, 2006.

[46] Ioannis Papapanagiotou, Erich M Nahum, and Vasileios Pappas. Configuring DHCP Leases in the Smartphone Era. In Proc. of the ACM Internet Measurement Conference (IMC), 2012.

[47] Fabian Pedregosa et al. Scikit-learn: Machine Learning in Python. Journal of Machine Learning Research, 2011.

[48] Emanuele Petagna, Giuseppe Laurenza, Claudio Ciccotelli, and Leonardo Querzoni. Peel the Onion: Recognition of Android Apps Behind the Tor Network. In Proc. of the International Conference on Information Security Practice and Experience (ISPEC), 2019.

[49] Lawrence R. Rabiner and Bernard Gold. Theory and Application of Digital Signal Processing. Prentice Hall, 1975.

[50] Abbas Razaghpanah, Arian Akhavan Niaki, Narseo Vallina-Rodriguez, Srikanth Sundaresan, Johanna Amann, and Phillipa Gill. Studying TLS Usage in Android Apps. In Proc. of the ACM International Conference on emerging Networking EXperiments and Technologies (CoNEXT), 2017.

[51] Jingjing Ren, Daniel J. Dubois, and David Choffnes. An International View of Privacy Risks for Mobile Apps, 2019.

[52] Jingjing Ren, Martina Lindorfer, Daniel Dubois, Ashwin Rao, David Choffnes, and Narseo Vallina-Rodriguez. Bug Fixes, Improvements, ... and Privacy Leaks – A Longitudinal Study of PII Leaks Across Android App Versions. In Proc. of the ISOC Network and Distributed System Security Symposium (NDSS), 2018.

[53] Jingjing Ren, Ashwin Rao, Martina Lindorfer, Arnaud Legout, and David Choffnes. ReCon: Revealing and Controlling PII Leaks in Mobile Network Traffic. In Proc. of the International Conference on Mobile Systems, Applications and Services (MobiSys), 2016.

[54] Andrew Rosenberg and Julia Hirschberg. V-Measure: A Conditional Entropy-Based External Cluster Evaluation Measure. In Proc. of the Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), 2007.

[55] Brendan Saltaformaggio, Hongjun Choi, Kristen Johnson, Yonghwi Kwon, Qi Zhang, Xiangyu Zhang, Dongyan Xu, and John Qian. Eavesdropping on Fine-Grained User Activities Within Smartphone Apps Over Encrypted Network Traffic. In Proc. of the USENIX Workshop on Offensive Technologies (WOOT), 2016.

[56] Farsight Security. Newly Observed Domains. https://www.farsightsecurity.com, January 2020.

[57] Asaf Shabtai, Uri Kanonov, Yuval Elovici, Chanan Glezer, and Yael Weiss. “Andromaly”: a behavioral malware detection framework for Android devices. Journal of Intelligent Information Systems, 2012.

[58] Ravi Sharma. Android Q will let you run multiple apps simultaneously with Multi Resume feature. https://www.91mobiles.com/hub/android-q-multi-resume-feature-how-to-use-2-android-apps-at-same-time, November 2018.

[59] Statcounter. Mobile Browser Market Share Worldwide. https://gs.statcounter.com/browser-market-share/mobile/worldwide. Accessed: February 2019.

[60] Statista. Number of Apps Available in Leading App Stores as of 2nd Quarter 2019. https://www.statista.com/statistics/276623/number-of-apps-available-in-leading-app-stores/, August 2019.

[61] Tim Stöber, Mario Frank, Jens Schmitt, and Ivan Martinovic. Who do you sync you are? Smartphone Fingerprinting via Application Behaviour. In Proc. of the ACM Conference on Security and Privacy in Wireless and Mobile Networks (WiSec), 2013.

[62] Vincent F. Taylor, Riccardo Spolaor, Mauro Conti, and Ivan Martinovic. AppScanner: Automatic Fingerprinting of Smartphone Apps from Encrypted Network Traffic. In Proc. of the IEEE European Symposium on Security and Privacy (EuroS&P), 2016.

[63] Vincent F Taylor, Riccardo Spolaor, Mauro Conti, and Ivan Martinovic. Robust Smartphone App Identification via Encrypted Network Traffic Analysis. IEEE Transactions on Information Forensics and Security, 2018.

[64] Eline Vanrykel, Günes Acar, Michael Herrmann, and Claudia Diaz. Leaky Birds: Exploiting Mobile Application Traffic for Surveillance. In Proc. of the International Conference on Financial Cryptography and Data Security (FC), 2016.

[65] Antoine Vastel, Pierre Laperdrix, Walter Rudametkin, and Romain Rouvoy. FP-STALKER: Tracking Browser Fingerprint Evolutions. In Proc. of the IEEE Symposium on Security and Privacy (S&P), 2018.

[66] Nguyen Xuan Vinh, Julien Epps, and James Bailey. Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance. Journal of Machine Learning Research, 2010.

[67] Yong Wang, Jinpeng Wei, and Karthik Vangury. Bring Your Own Device Security Issues and Challenges. In Proc. of the IEEE Consumer Communications and Networking Conference (CCNC), 2014.

[68] Hongyi Yao, Gyan Ranjan, Alok Tongaonkar, Yong Liao, and Zhuoqing Morley Mao. SAMPLES: Self Adaptive Mining of Persistent LExical Snippets for Classifying Mobile Application Traffic. In Proc. of the ACM Annual International Conference on Mobile Computing and Networking (MobiCom), 2015.