# Spring Semester GRANT

## Figure 6: Example XML Encoding of Role Definitions and Policy Statements
### ERole Defs
- **No ERoles**
- **1 Variable**
- **2 Variables**
- **3 Variables**
- **4 Variables**
- **5 Variables**
- **6 Variables**
- **7 Variables**
- **8 Variables**
- **9 Variables**
- **10 Variables**

### No Cache
- 25
- 26
- 29
- 32
- 30
- 35
- 36
- 39
- 57
- 37
- 38

### ERAS Cache AS Cache
- 9
- 6
- 2
- 5
- 6
- 7
- 7
- 6
- 6
- 5
- 5
- 9
- 10
- 10
- 12
- 13
- 14
- 13
- 13
- 15
- 18
- 16

### Table 1: Request over HTTP (in milliseconds)
- **ERole Defs**
  - **No ERoles**: 775
  - **1 Variable**: 885
  - **2 Variables**: 935
  - **3 Variables**: 1181
  - **4 Variables**: 1610
  - **5 Variables**: 1946
  - **6 Variables**: 1737
  - **7 Variables**: 1925
  - **8 Variables**: 2173
  - **9 Variables**: 2417
  - **10 Variables**: 2450
- **ERAS Cache AS Cache**
  - 212
  - 221
  - 230
  - 206
  - 215
  - 217
  - 275
  - 243
  - 227
  - 213
  - 193
  - 536
  - 485
  - 490
  - 438
  - 462
  - 438
  - 500
  - 426
  - 436
  - 525
  - 415

### Table 2: Request over HTTPS (in milliseconds)
- **ERole Defs**
  - **No ERoles**: 775
  - **1 Variable**: 885
  - **2 Variables**: 935
  - **3 Variables**: 1181
  - **4 Variables**: 1610
  - **5 Variables**: 1946
  - **6 Variables**: 1737
  - **7 Variables**: 1925
  - **8 Variables**: 2173
  - **9 Variables**: 2417
  - **10 Variables**: 2450
- **ERAS Cache AS Cache**
  - 212
  - 221
  - 230
  - 206
  - 215
  - 217
  - 275
  - 243
  - 227
  - 213
  - 193
  - 536
  - 485
  - 490
  - 438
  - 462
  - 438
  - 500
  - 426
  - 436
  - 525
  - 415

## Discussion
Our implementation is highly efficient in determining ERole status. The majority of the time spent evaluating ERole status is actually used for communicating with environmental sensors that monitor variable conditions.

To ensure that policies are protected and credentials are not observed during transmission, we support encrypted communication channels in the CASA implementation. We conducted a second set of experiments using SSL-encrypted HTTP channels for communication. As before, eleven access requests were sent to the Authorization Service. Table 2 shows the results of our application test.

The results presented here were obtained using SSL-encrypted HTTP communication channels. Compared to the previous results, these demonstrate the cost of establishing and using secure communications. The overhead introduced by the processing at the services is not significant compared to the connection establishment and communication times. We are currently working on a communication subsystem that utilizes session key-reuse, which we expect will eliminate a significant portion of the overhead cost associated with HTTPS-based communication.

The experimental results show that our architecture can authorize requests in a reasonable amount of time. By leveraging our caching framework and other runtime efficiencies, such as leaving established (secure) connections open between requests, context-aware security does not present any significant overhead to the application.

In future work, we will complete our analysis of the overall architecture and build a secure implementation of a smart intercom application that will provide a foundation for our experiments. We will focus on comparing an insecure, context-aware application with a secured version and analyze the effectiveness of the interfaces exposed to residents in the Aware Home.

## Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC'02)
1063-9527/02 $17.00 © 2002 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25, 2021, at 07:13:07 UTC from IEEE Xplore. Restrictions apply.

## 5. Related Work
Despite considerable interest and research in pervasive computing, security concerns in such environments have received little attention. In this section, we briefly highlight several existing projects and technologies that have influenced our work in providing security services in context-aware environments.

### Existing Architectures
- **Kerberos System [13]**: Implements a protocol for efficiently authenticating entities in a distributed system.
- **Andrew Distributed Computing Environment [21]**: Discusses architectural issues surrounding the security services incorporated into the environment.
- **Public Key Infrastructures (PKIs)**: Significant work has been focused on modeling, building, and analyzing secure PKIs.
- **Subject Role Authentication and Delegation [15]**: Addresses issues related to building secure distributed systems.

### Specific Authorization Logic
- **Distributed Document Management System [2]**: Proposes an architecture for securing distributed document management systems, addressing the need for access control logic in complex distributed systems.
- **Smart Spaces [1]**: Presents an approach to transfer traditional security solutions, specifically the Kerberos extension SESAME, into "smart spaces" such as homes. This work focuses on the integration issues when placing computing-intensive security mechanisms into devices with limited resources.

### Role-Based Access Control (RBAC)
- **Traditional RBAC [20, 9]**: Our work expands the RBAC model by providing a more versatile and expressive framework that incorporates the use of environment and object roles. By using the uniform notion of a role to capture user, environmental, and resource attributes, our model allows for the definition of context-aware security policies.

### XML in Security Policy Definition
- **XML-Based Access Control [7, 3, 11, 18]**: Various works have explored the use of XML in defining and enforcing security policies. For example, Damiani et al. [7] present an access control model using XML to define and enforce restrictions on Web documents. Bertino et al. [3] present an XML-compliant formalism for specifying security-related information for Web document protection. Herzberg et al. [11] present a Trust Policy Language (TPL) that defines policies using well-formed XML documents. Netegrity [18] has presented S2ML, a Security Services Markup Language that provides a mechanism for describing existing security models using XML syntax.

## 6. Conclusion
In this paper, we introduced a new model for securing context-aware environments and described why it will be useful for securing applications in the highly-connected world of tomorrow. Our work focuses on providing more adaptive security services than those found in traditional computing environments.

We presented a framework for providing authorization services in context-aware environments and applications. This framework supports the collection of contextual information from resources, the environment, and the users who interact in that environment. Through the context-aware security architecture, we implemented the Generalized Role-Based Access Control (GRBAC) model. We discussed our initial experience with the security framework and provided experimental results regarding its effectiveness in securing context-aware applications.

## References
[1] Jalal Al-Muhtadi, Manish Anand, M. Denis Mickunas, and Roy H. Campbell. Secure smart homes using Jini and UIUC SESAME. In Proceedings of the Annual Computer Security Applications Conference (ACSAC), December 2000.

[2] Dirk Balfanz, Drew Dean, and Mike Spreitzer. A security infrastructure for distributed Java applications. In Proceedings of the IEEE Symposium on Security and Privacy, pages 15–26, 2000.

[3] Elisa Bertino, Silvana Castano, and Elena Ferrari. On specifying security policies for web documents with an XML-based language. In Proceedings of the 6th ACM Symposium on Access Control Models and Technologies, pages 57–74, Chantilly, Virginia, USA, May 2001.

[4] World-Wide Web Consortium. eXtensible Markup Language (XML). W3C Specifications. http://www.w3.org/TR/WD-xml-lang.html.

[5] Michael J. Covington, Wende Long, Srividhya Srinivasan, Anind Dey, Mustaque Ahamad, and Gregory Abowd. Securing context-aware applications using environment roles. In Proceedings of the 6th ACM Symposium on Access Control Models and Technologies, pages 10–20, Chantilly, Virginia, USA, May 2001.

[6] Michael J. Covington, Matthew J. Moyer, and Mustaque Ahamad. Generalized role-based access control for securing future applications. In Proceedings of the 23rd National Information Systems Security Conference (NISSC), pages 40–51, Baltimore, Maryland, USA, October 2000.

[7] Ernesto Damiani, Sabrina De Capitani di Vimercati, Stefano Paraboschi, and Pierangela Samarati. A fine-grained access control system for XML documents. ACM Transactions on Information and System Security, 5(2):169–202, May 2002.

[8] Anind K. Dey, Daniel Salber, and Gregory D. Abowd. A context-based infrastructure for smart environments. In Proceedings of the 1st International Workshop on Managing Interactions in Smart Environments (MANSE '99), Dublin, Ireland, pages 114–128, December 1999.

[9] David F. Ferraiolo, John F. Barkley, and D. Richard Kuhn. A role-based access control model and reference implementation within a corporate intranet. In ACM Transactions on Information and System Security, volume 1, February 1999.

[10] Gregory R. Ganger. Position summary: Authentication confidences. In Proceedings of the IEEE Workshop on Hot Topics in Operating Systems (HotOS), 2001.

[11] Amir Herzberg, Yosi Mass, and Joris Mihaeli. Access control meets public key infrastructure, or: Assigning roles to strangers. In Proceedings of the IEEE Symposium on Security and Privacy, pages 2–14, 2000.

[12] Georgia Tech Broadband Institute. The Aware Home Research Initiative. Research Initiative Web Page, 2002. http://www.cc.gatech.edu/fce/ahri/.

[13] John T. Kohl, B. Clifford Neuman, and Theodore Y. T’so. The evolution of the Kerberos authentication system. Distributed Open Systems (IEEE Computer Society Press), 1994.

[14] Subramanian Lakshmanan, Mustaque Ahamad, and H. Venkateswaran. A secure and highly available distributed store for meeting diverse data storage needs. In International Conference on Dependable Systems and Networks (DSN), July 2001.

[15] Butler Lampson, Martin Abadi, and Michael Burrows. Authentication in distributed systems: Theory and practice. ACM Transactions on Computer Systems, 1992.

[16] Sun Microsystems. Java 2 standard edition. Software Development Kit. http://java.sun.com.

[17] Matthew J. Moyer and Mustaque Ahamad. Generalized role-based access control. In Proceedings of the IEEE International Conference on Distributed Computing Systems (ICDCS), Mesa, Arizona, USA, April 2001.

[18] Netegrity. S2ML: The XML standard for describing and sharing security services on the internet. Technical report, 2001.

[19] Daniel M. Russell and Mark Weiser. The future of integrated design of ubiquitous computing in combined real & virtual worlds. In Communications of the ACM, page 275. ACM, 1998.

[20] Ravi S. Sandhu, Edward J. Coyne, Hal L. Feinstein, and Charles E. Youman. Role-based access control models. In IEEE Computer, volume 2, February 1996.

[21] M. Satyanarayanan. Integrating security in a large distributed system. ACM Transactions on Computer Systems, 7:247–280, August 1989.

[22] Roy Want, Andy Hopper, Veronica Falcao, and Jon Gibbons. The active badge location system. Technical report, Olivetti Research Ltd. (ORL), 1992.

[23] Mark Weiser. The computer for the 21st century. Scientific American, September 1991.