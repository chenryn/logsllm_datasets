### B. 数据收集
本文在Telegram平台上收集了大量的即时通讯（IM）数据。选择Telegram作为数据收集平台的原因有二：首先，Telegram拥有大量的公共频道，这些频道可以公开加入以获取实际的IM流量。这与许多其他流行的IM服务不同，后者通常具有封闭或私有的通信环境。其次，Telegram近期成为审查和监控的重点对象，而对其他消息传递服务的分析和攻击方法同样适用于Telegram。

利用Telegram API，我们收集了1,000个随机信道的通信数据，每个信道持续24小时。对于每条收集到的消息，我们提取了发送频道ID、时间戳、消息类型（文本、图片、视频、音频或文件）以及消息大小。由于Telegram每天限制用户最多只能加入50个新频道，因此我们在几天内使用了多个电报账户进行数据收集。值得注意的是，每个Telegram账户都必须绑定一个真实的手机号码，以此来限制单个用户可创建的账户数量。

尽管我们选择了Telegram来收集IM流量，但观察到类似WhatsApp和Signal等其他IM服务上的攻击算法表现相似。这是因为这些服务均未实现流量混淆技术，导致不同IM服务之间的流量模式较为一致。下图展示了相同消息通过四个不同的IM服务发送时产生的流量模式，可以看出，不同IM服务之间的流量模式非常相似。

### C. IM通信建模
基于收集到的IM流量数据，我们建立了IM通信的统计模型，重点研究了两个关键特征：消息间延迟（IMD）和消息大小。此外，还对IM流量中的通信延迟进行了建模，并使用最大似然估计（MLE）拟合每个特征的最佳概率分布。

**消息间延迟（IMD）：**
IMD是指IM通信中连续消息之间的时间间隔。在模型中，我们将那些IMD极小的消息（即，消息间的间隔小于某个阈值te秒）合并处理。这样做的原因是，在加密的IM流量中，这类紧密相邻的消息会形成一个不可分割的流量突发。这种情况通常出现在管理员从另一组转发一批IM消息时。同时，我们也过滤掉了长时间不活跃期间（如深夜）的IMD。

实验证明，使用MLE算法可以将IMD的概率密度函数紧密拟合为指数分布。上图展示了200个IM频道的IMD概率密度函数，其中每个频道的日均消息速率为130条。IMD的指数行为可以解释为频道中独立发送的消息（或批量消息）。此外，我们认为IMD与消息类型和大小无关，因为在实践中，消息的发送时间与其类型或大小没有明显关联。

**消息大小：**
上表显示了五种主要消息类型的大小统计信息和频率。根据这些经验统计数据，我们创建了一个五状态马尔可夫链，用于对IM通信流中发送的消息大小进行建模。我们获得了所有频道以及速率相似频道组的经验转移概率矩阵。可以看到，具有不同日均消息速率的IM频道的转移矩阵略有差异。

最后，下图展示了不同消息类型的归一化消息大小的互补累积密度函数（CCDF），其中大小由每个类别的最大消息大小归一化。观察发现，不同消息类型的消息大小分布有所不同。

**通信延迟：**
IM消息的传输延迟有两个主要原因：网络延迟和IM服务器的处理延迟。为了测量这种延迟，我们使用Telegram API从500个频道中收集了IM流量，每个频道持续一小时（总计500小时的IM流量）。然后设置了两个IM客户端，并在这两个客户端之间发送收集到的IM流量，以测量实际的通信延迟。使用MLE发现，传输延迟最适合拉普拉斯分布fµ,b(x)，其中µ是平均值，2b^2是延迟的方差。由于网络延迟不能为负，因此我们仅考虑拉普拉斯分布的正部分。下图显示了数据包延迟相对于最佳拉普拉斯分布的分位数-分位数（Q-Q）图。

### D. 合成IM流量
上述经验模型可用于生成合成IM通信。合成IM通信跟踪由具有特定大小、时间和消息类型的消息组成。这样的综合流量能够使用比在线收集的流量更多的样本进行实验验证。

算法的输入包括λ（要合成的频道的消息率，每天）和T（合成频道的长度）。首先，该算法使用IMD的经验分布创建一系列IM消息时序。然后，算法利用马尔可夫模型为序列中的每个消息分配类型。最后，对于每条消息，算法使用相应消息类型的大小的经验分布来确定其大小。该算法的输出是一系列IM消息，每条消息都有一个时间戳、一个大小和一个消息类型。

由于流量合成算法使用样本IM跟踪来生成合成IM流量模式，因此通过增加训练数据集的大小可以提高合成流量的质量。或者，可以训练生成对抗网络（GAN）来生成合成IM跟踪，但这将留待未来的工作进行探讨。

## 结论
本文介绍了流量分析攻击，该攻击可以通过安全的IM服务可靠地识别参与敏感通信的用户。发起此类攻击并不需要与IM提供商合作，也不需要利用目标IM服务的安全漏洞。通过对大量实际IM频道的流量进行分析，我们建立了常规IM通信的统计模型。

在后续文章中，我们将对Telegram、WhatsApp和Signal等流行IM服务进行广泛的实验，以证明攻击的有效性。同时，我们还将研究针对此类攻击的潜在对策，并设计并部署了IMProxy，这是一个开源且公开可用的对策系统。IMProxy适用于所有主要的IM服务，无需IM提供商的支持。

## 参考文献
[1] S. E. Coull and K. P. Dyer, “Traffic Analysis of Encrypted Messaging Services: Apple iMessage and Beyond,” SIGCOMM CCR, 2014  
[2] K. Park and H. Kim, “Encryption is Not Enough: Inferring User Activities on KakaoTalk with Traffic Analysis,” in WISA, 2015.  
[3] N. Unger, S. Dechand, J. Bonneau, S. Fahl, H. Perl, I. Goldberg, and M. Smith, “SoK: Secure Messaging,” in IEEE S&P, 2015.  
[4] P. K. Aggarwal, P. Grover, and L. Ahuja, “Security Aspect in Instant Mobile Messaging Applications,” in RAETCS, 2018.  
[5] M. Schliep, I. Kariniemi, and N. Hopper, “Is Bob Sending Mixed Signals?” in WPES, 2017.  
[6] M. Nasr, A. Bahramali, and A. Houmansadr, “DeepCorr: Strong Flow Correlation Attacks on Tor Using Deep Learning,” in CCS, 2018.  
[7] D. Kedogan, D. Agrawal, and S. Penz, “Limits of anonymity in open environments,” in Information Hiding, 2002.  
[8] G. Danezis, “Statistical disclosure attacks,” in IFIP SEC, 2003.  
[9] Y.-C. Chang, K.-T. Chen, C.-C. Wu, and C.-L. Lei, “Inferring speech activity from encrypted Skype traffic,” in GLOBECOM, 2008.  
[10] S. Chen, R. Wang, X. Wang, and K. Zhang, “Side-channel leaks in web applications: A reality today, a challenge tomorrow,” in IEEE S&P, 2010.  
[11] R. Schuster, V. Shmatikov, and E. Tromer, “Beauty and the Burst: Remote Identification of Encrypted Video Streams,” in USENIX Security, 2017.