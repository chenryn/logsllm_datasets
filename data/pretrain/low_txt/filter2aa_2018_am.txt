### Client Indicators and Connection Types

The client also specifies the type of connection served. For instance, the RDP (Remote Desktop Protocol) server component employs a specific signing key pair with the identifier "TSSecKeySet1," which is a reference to "Terminal Services." In addition to the information available from the public certificate, the Session ID can provide insights into whether the host on the other end of the connection is a Windows server.

### Extraction Methods and Analysis Environment

The methods used for extracting credentials do not rely on proprietary functions, making the extraction process agnostic to the analysis environment. This feature enables the possibility of transparently decrypting connections retroactively through the use of virtual machines and memory introspection. For example, one could monitor connections inside a Windows virtual machine when those connections leverage Schannel.

### Anecdotes

- **Cipher Suite Preference**: By leveraging Microsoft’s provided code to execute "BCryptEnumContextFunctions" and return cipher suites in order of preference, all examined systems returned ephemeral suites first, contrary to the cited Schannel documentation.
- **Data Structures**: Previous research focused heavily on the process itself rather than the underlying data structures. The methodology employed in this research took a reverse approach, illuminating overlooked but valuable structures like the "KPSK" Key storage structure, which points to the private key. Other research indirectly touched upon these structures via some of the Microsoft cryptographic functions.
- **Symbol Existence**: The author noted that, in the limited samples observed, a symbol for "CSchannelTelemetryContext" existed in Windows 10, which was absent in the symbols for the Schannel versions observed in Windows 8 and Windows 7. These versions were, however, excluded from the study.
- **AES Key Schedule Verification**: An open-source Python AES implementation was briefly employed to compare the key schedule to the fixed-length 448-byte field in the "MSSK" structure. It verified that, in the case of AES 256, the first 240 bytes match the key schedule, but the remaining bytes are unaccounted for.

### Future Work

Given these findings, there are still several questions to be addressed and work to be done. The technique developed is self-validating; if it fails or is erroneous, it will not correctly decrypt the session. However, it should be rigorously evaluated by other practitioners to identify any flaws or acknowledged gaps in the implementation, ensuring it meets the standards required of a forensic tool. A list of future work includes:

- **Client Random Values and Master Key Relationship**: Identify any relationship between the client random values and the master key to process session tickets in a way suitable for use with Wireshark.
- **Rigorous Testing Paradigm**: Set up a rigorous testing paradigm to evaluate the current method thoroughly across platforms and cipher suites to identify edge cases.
- **SSL Magic Values Functions**: Examine the functions identified as related to the numbered SSL magic values to gain further insight into the ssl7 structure.
- **Rekall Plugin Development**: Write a Rekall plugin that leverages symbols for efficiency and accuracy over the current method.
- **Private Key Extraction**: Further explore extracting private keys from memory alone using DPAPI-NG.
- **Session Key Structure Scanning**: Add functionality to the plugin to scan all processes with Schannel loaded for session key structures.
- **Ticket Encryption Scheme**: Identify the ticket encryption scheme and add functionality to the LSASSLKey plugin to decrypt session tickets.

### References

- Bhargavan, K., Delignat-Lavaud, A., Pironti, A., Langley, A., & Ray, M. (2015, September). Transport Layer Security (TLS) session hash and extended master secret extension (RFC No. 7627). Internet Engineering Task Force. Retrieved from http://www.ietf.org/rfc/rfc5246.txt
- Checkoway, S., Niederhagen, R., Everspaugh, A., Green, M., Lange, T., Ristenpart, T., ... Fredrikson, M. (2014). On the practical exploitability of Dual EC in TLS implementations. In 23rd USENIX security symposium (USENIX security 14) (pp. 319–335).
- Cohen, M. (2015a). Rekall memory forensics framework. http://www.rekall-forensic.com/about.html.
- Daigniere, F. (2013). TLS 'secrets'. BlackHat USA 2013. https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-WP.pdf.
- Delphy, B. (2013). Windbg et l’extension de mimikatz! Blog. http://blog.gentilkiwi.com/securite/mimikatz/windbg-extension.
- Dierks, T., & Allen, C. (1999, January). The TLS protocol version 1.0 (RFC No. 2246). Internet Engineering Task Force. Retrieved from http://www.ietf.org/rfc/rfc2246.txt
- Dierks, T., & Rescorla, E. (2008, August). The Transport Layer Security (TLS) protocol version 1.2 (RFC No. 5246). Internet Engineering Task Force. Retrieved from http://www.ietf.org/rfc/rfc5246.txt
- Diffie, W., Van Oorschot, P. C., & Wiener, M. J. (1992). Authentication and authenticated key exchanges. Designs, Codes and Cryptography, 2(2), 107–125.
- Dolan-Gavitt, B. (2007). The VAD tree: A process-eye view of physical memory. Digital Investigation, 4, 62–64.
- Dreijer, J., & Rijs, S. (2013, December). Perfect forward not so secrecy. https://os3.nl/media/2013-2014/courses/ssn/projects/perfect-forward-not-so-secrecy-report.pdf.
- Elliot, S. (2014). RDP Replay. Contextis Blog. http://www.contextis.com/resources/blog/rdp-replay/.
- Freier, A., Karlton, P., & Kocher, P. (2011, August). The Secure Sockets Layer (SSL) protocol version 3.0 (RFC No. 6101). Internet Engineering Task Force. Retrieved from http://www.ietf.org/rfc/rfc6101.txt
- Garfinkel, S. L. (2013). Digital media triage with bulk data analysis and bulk extractor. Computers & Security, 32, 56–72.
- Geffner, J. (2011). Exporting non-exportable RSA keys. BlackHat Europe 2011. https://media.blackhat.com/bh-eu-11/Geffner/BlackHat-EU-2011-Geffner-Exporting-RSA-Keys-WP.pdf.
- Goh, E.-J., & Boneh, D. (2001, October). SSLv3/TLS Sniffer (proxy server): Documentation page. https://crypto.stanford.edu/~eujin/ssl_sniffer/documentation.html.
- Halderman, J. A., Schoen, S. D., Heninger, N., Clarkson, W., Paul, W., Calandrino, J. A., ... Felten, E. W. (2008). Lest we remember: Cold-boot attacks on encryption keys. In 17th USENIX security symposium (USENIX security 08) (pp. 45–60).
- Huppert, P. (2015). Volatility. RSAKey community plugin. https://github.com/volatilityfoundation/community/blob/master/PhilipHuppert/rsakey.py.
- Inman, K., & Rudin, N. (2002). The origin of evidence. Forensic Science International, 126(1), 11–16.
- Intel Corporation. (2015, December). Intel® 64 and IA-32 Architectures software developer’s manual. Computer software manual No. 325462-057US.
- Jaquemet, L. (2015). Volatility. HayStack community plugin. https://github.com/volatilityfoundation/community/blob/master/Lo%C3%AFcJaquemet/vol_haystack.py.
- Klein, T. (2006, February). All your private keys are belong to us. Extracting RSA private keys and certificates from process memory. http://www.trapkit.de/research/sslkeyfinder/keyfinder_v1.0_20060205.pdf.
- Kornblum, J. (2011). Finding AES keys. Blog. http://jessekornblum.livejournal.com/269749.html.
- Ligh, M. H., Case, A., Levy, J., & Walters, A. (2014). The art of memory forensics: Detecting malware and threats in Windows, Linux, and Mac memory. John Wiley & Sons.
- Microsoft. (n.d.-a). Certificate file formats. Technet Article No. cc770735. https://technet.microsoft.com/en-us/library/cc770735.aspx.
- Microsoft. (n.d.-b). Coding style conventions. Developer Network Article No. 378932. https://msdn.microsoft.com/en-us/library/windows/desktop/aa378932.aspx.
- Microsoft. (n.d.-c). Common data types. Document No. cc230309. https://msdn.microsoft.com/en-us/library/cc230309.aspx.
- Microsoft. (n.d.-d). Cryptographic primitives. Document No. bb204776. https://msdn.microsoft.com/en-us/library/windows/desktop/bb204776.aspx.
- Microsoft. (n.d.-e). Memory limits for Windows and Windows Server releases. Developer Network Article No. aa36677. https://msdn.microsoft.com/en-us/library/windows/desktop/aa366778.aspx.
- Microsoft. (n.d.-f). Memory pools. Document No. aa965226. https://msdn.microsoft.com/en-us/library/windows/desktop/aa965226.aspx.
- Microsoft. (n.d.-g). Names of classes, structs, and interfaces. Document No. ms299040. https://msdn.microsoft.com/en-us/library/ms299040.aspx.
- Microsoft. (n.d.-h). PEB structure. Document No. aa813706. https://msdn.microsoft.com/en-us/library/windows/desktop/aa813706.aspx.
- Microsoft. (n.d.-i). s (search memory). WinDbg Document No. ↵558855. https://msdn.microsoft.com/en-us/library/windows/hardware/↵558855.aspx.
- Microsoft. (2003a, July). How TLS/SSL works. Document No. cc783349. https://technet.microsoft.com/en-us/library/cc783349.aspx.
- Microsoft. (2003b, March). TLS/SSL tools and settings. Document No. cc776467. https://technet.microsoft.com/en-us/library/cc776467.aspx.
- Microsoft. (2010, July). How to create a user-mode process dump file in Windows Vista and in Windows 7. Knowledge Base Article No. 931673. https://support.microsoft.com/en-us/kb/931673.
- Microsoft. (2014a, July). CNG features. Document No. bb204775. https://msdn.microsoft.com/en-us/library/windows/desktop/bb204775.aspx.
- Microsoft. (2014b, July). Key storage and retrieval. Document No. bb204778. https://msdn.microsoft.com/en-us/library/windows/desktop/bb204778.aspx.
- Microsoft. (2014c, July). Prioritizing Schannel cipher suites. Document No. bb870930. https://msdn.microsoft.com/en-us/library/windows/desktop/bb870930.aspx.
- Microsoft. (2014d, July). Transport Layer Security protocol. Document No. dn786441. https://technet.microsoft.com/en-us/library/dn786441.aspx#BKMK_SessionResumption.
- Microsoft. (2015a, July). DER encoding of ASN.1 types. Document No. bb648640. https://msdn.microsoft.com/en-us/library/windows/desktop/bb648640.aspx.
- Microsoft. (2015b, November). Public and private symbols. Document No. ↵553493. https://msdn.microsoft.com/en-us/library/windows/hardware/↵553493.aspx.
- Microsoft. (2015c). Remote Desktop Connection: frequently asked questions. http://windows.microsoft.com/en-us/windows/remote-desktop-connection-faq.
- Microsoft. (2015d, July). Schannel SSP overview. Document No. dn786429. https://technet.microsoft.com/en-us/library/dn786429.aspx.
- Microsoft. (2015e, November). TLS/SSL settings. Document No. dn786418. https://technet.microsoft.com/en-us/library/dn786418.aspx.
- Microsoft. (2015f). Upgrade to Windows 10: FAQ. http://windows.microsoft.com/en-us/windows-10/upgrade-to-windows-10-faq.
- miTLS. (n.d.). Cross-layer protocol attacks. https://mitls.org/pages/attacks/VHC.
- Mozilla. (2015). NSS key log format. Mozilla Developer Network. https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format.
- Myerson, T. (2015). Windows 10: Preparing to upgrade one billion devices. Blog. https://blogs.windows.com/windowsexperience/2015/07/02/windows-10-preparing-to-upgrade-one-billion-devices/.
- NIST. (2001, November). Announcing the Advanced Encryption Standard (AES). FIPS Publication No. 197. National Institute of Standards and Technology (NIST). Retrieved from http://csrc.nist.gov/publications/fips/fips197/fips-197.pdf.
- Petroni, N. L., Jr., Walters, A., Fraser, T., & Arbaugh, W. A. (2006, December). Fatkit: A framework for the extraction and analysis of digital forensic data from volatile system memory. Digit. Investig., 3(4), 197–210. doi: 10.1016/j.diin.2006.10.001
- Picasso, F. (2015). Happy dpapi! Blog. http://blog.digital-forensics.it/2015/01/happy-dpapi.html.
- Picod, J.-M. (2016). Dpapick. Certifi