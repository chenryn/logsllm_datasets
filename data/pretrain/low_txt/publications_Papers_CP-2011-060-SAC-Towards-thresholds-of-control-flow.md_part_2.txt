### Experiments with Decimal Rounding

In this section, we explore the alpha and beta values that allowed us to derive VARL (Value at Risk Level) values for each model. These values are based on different levels of understandability, as determined by the application of a specific formula. Table 5 presents the number of decision nodes, which is a key factor in assessing the understandability of business process models.

For instance, a business process model considered "easy to understand" would have no more than 12 XOR-split nodes, 2 OR-split nodes, and 1 AND-split node. The CFC (Control-Flow Complexity) values can be interpreted as follows:
- If the CFC value is lower than 9, the risk of the model being non-understandable is less than 30%.
- If the CFC value is lower than 4, the risk of the model being non-understandable is less than 50%.

### Levels of Understandability

Table 6 outlines the levels of understandability based on the CFC values for different types of decision nodes:

| Levels of Understandability | CFC XOR-split | CFC OR-split | CFC AND-split |
|-----------------------------|---------------|--------------|---------------|
| 1. Very easy to understand   | 6             | 1            | 1             |
| 2. Easy to understand        | 12            | 2            | 1             |
| 3. Moderately understandable | 22            | 6            | 3             |
| 4. Difficult to understand   | 31            | 9            | 4             |
| 5. Very difficult to understand | 46           | 14           | 7             |

### Thresholds for CFC Measures

Establishing thresholds for CFC measures has helped in formulating guidelines for the use of decision nodes in business process modeling. For example:
- The threshold for OR-split type decision nodes is 14, meaning that a model is understandable if it contains no more than 3 OR-split nodes.
- The threshold for AND-split type decision nodes is 7, indicating that an understandable model should have no more than 7 AND-split nodes.
- For XOR-split nodes, the CFC values are calculated considering a fan-out. Assuming an average fan-out value of 2, an understandable model should have no more than 23 XOR-split nodes.

### Fluctuation of Values

The fluctuation of CFC values across different experiments (see Table 5) may depend on the cognitive abilities of the subjects. This implies that threshold values can vary based on the stakeholders' prior knowledge and experience in modeling and the business process domain. Our work involved subjects with limited theoretical knowledge (under- and post-graduate students), which may have influenced the results (e.g., overestimation of capabilities, low efficiency).

### Practical Application

We present two examples of applying these results to evaluate business process models (Figures 2 & 3). Both models have the same size but differ in the number and type of decision nodes. Abstract labels are used in tasks to avoid adding complexity from the business domain.

**Model 1:**
- CFC XOR-split = 11
- CFC OR-split = 2
- CFC AND-split = 3
- CFC TOTAL = 16

**Model 2:**
- CFC XOR-split = 18
- CFC OR-split = 7
- CFC AND-split = 4
- CFC TOTAL = 29

Using the average threshold values, we can evaluate the complexity of these models:
- **Model 1:**
  - CFC XOR-split = 11 → 21% probability of being non-understandable
  - CFC OR-split = 2 → 25% probability of being non-understandable
  - CFC AND-split = 3 → 42% probability of being non-understandable
  - CFC TOTAL = 16 → 24% probability of being non-understandable

- **Model 2:**
  - CFC XOR-split = 18 → 24% probability of being non-understandable
  - CFC OR-split = 7 → 48% probability of being non-understandable
  - CFC AND-split = 4 → 54% probability of being non-understandable
  - CFC TOTAL = 29 → 42% probability of being non-understandable

**Conclusion:**
- Model 1 is easier to understand and falls into the second level of understandability ("easy to understand").
- Model 2 is more complex and falls into the third level of understandability ("moderately understandable").

### Conclusions and Future Work

In this paper, we investigated threshold values for business process measures and Cardoso’s Control-Flow Complexity (CFC) measure using the Bender method. Our findings show that it is possible to obtain CFC thresholds, though they may vary based on the subjects' backgrounds. A business process model should have no more than 31 decision nodes to avoid increased difficulty in understanding. Specifically, there should be about 22 XOR-split nodes, no more than 6 OR-split nodes, and no more than 3 AND-split nodes.

Future research will involve validating these threshold values through new experiments with subjects of varying backgrounds and knowledge. Additionally, applying this method to other business process measures could provide a comprehensive set of indicators for assessing model complexity.

### Acknowledgments

This work was partially funded by projects INGENIO (Junta de Comunidades de Castilla-La Mancha, PAC08-0154-9262), ESFINGE (Ministerio de Educación y Ciencia, FEDER, TIN2006-15175-C05-05), and PEGASO/MAGO (Ministerio de Ciencia e Innovación, FEDER, TIN2009-13718-C02-01).

### References

[1] Park, R.E., W.B. Goethert, and W.A. Florac, Goal-Driven Software Measurement: A Guidebook. HANDBOOK CMU/SEI-96-HB-002, 1996.

[2] OMG. Business Process Maturity Model (BPMM), Beta 1 Adopted Specification. 2007; Available from: http://www.omg.org/docs/dtc/07-07-02.pdf.

[3] Sánchez, L., F. García, F. Ruiz, and M. Piattini, Measurement in Business Processes: a Systematic Review. Business Process Management Journal, 2010. 16(1): p. 114-134.

[4] Henderson-Sellers, B., Object-Oriented Metrics: Measures of Complexity. Prentice-Hall, 1996.

[5] Shatnawi, R., W. Li, J. Swain, and T. Newman, Finding Software Metrics Threshold Values Using ROC Curves. Software Maintenance and Evolution: Research and Practice, 2009.

[6] Churchill, G.A. and R.W. Doerge, Empirical Threshold Values for Quantitative Trait Mapping. Genetics Society of America, 1995. 138: p. 963-971.

[7] Bender, R., Quantitative Risk Assessment in Epidemiological Studies Investigating Threshold Effects. Biometrical Journal, 1999. 41(3): p. 305-319.

[8] Cardoso, J., Process Control-Flow Complexity Metric: An Empirical Validation. SCC '06: Proceedings of the IEEE International Conference on Services Computing, 2006: p. 167-173.

[9] OMG. Business Process Modeling Notation (BPMN), Final Adopted Specification. 2006; Available from: http://www.omg.org/bpm.

[10] García, F., M. Bertoa, C. Calero, A. Vallecillo, F. Ruiz, M. Piattini, and M. Genero, Towards a Consistent Terminology for Software Measurement. Information and Software Technology, 2005. 48: p. 631-644.

[11] Vanderfeesten, I., H.A. Reijers, and W.M.P. van der Aalst, Evaluating Workflow Process Designs Using Cohesion and Coupling Metrics. Computers in Industry, 2008.

[12] Vanderfeesten, I., H.A. Reijers, J. Mendling, W.M.P. van der Aalst, and J. Cardoso, On a Quest for Good Process Models: The Cross-Connectivity Metric. International Conference on Advanced Information Systems Engineering, 2008.

[13] Rolón, E., F. García, and F. Ruiz, Evaluation Measures for Business Process Models. Symposium on Applied Computing (SAC 2006), 2006.

[14] Mendling, J., Testing Density as a Complexity Metric for EPCs, in Technical Report JM-2006-11-15. 2006.

[15] Cardoso, J., How to Measure the Control-Flow Complexity of Web Processes and Workflows, in Workflow Handbook 2005. 2005.

[16] Jung, J.Y., Measuring Entropy in Business Process Models. International Conference on Innovative Computing, Information and Control, 2008. 0: p. 246-252.

[17] Gruhn, V. and R. Laue, Complexity Metrics for Business Process Models. International Conference on Business Information Systems, 2006.

[18] Gruhn, V. and R. Laue, Adopting the Cognitive Complexity Measure for Business Process Models. Cognitive Informatics, 2006. ICCI 2006. 5th IEEE International Conference on, 2006. 1: p. 236-241.

[19] Rozinat, A. and W.M.P. van der Aalst, Conformance Checking of Processes Based on Monitoring Real Behavior. Information Systems, 2008. 33: p. 64-95.

[20] Laue, R. and J. Mendling, Structuredness and Its Significance for Correctness of Process Models. Information Systems and E-Business Management, 2009.

[21] Meimandi Parizi, R. and A.A.A. Ghani, An Ensemble of Complexity Metrics for BPEL Web Processes. Ninth ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/Distributed Computing, 2008: p. 753-758.

[22] Bisgaard Lassen, K. and W. Van der Aalst, Complexity Metrics for Workflow Nets. Information and Software Technology, 2008: p. 610-626.

[23] Huan, Z. and A. Kumar, New Quality Metrics for Evaluating Process Models. Business Process Intelligence Workshop, 2008.

[24] McCabe, T.J., A Complexity Measure. IEEE Transactions on Software Engineering, 1976. SE-2(4): p. 308-320.

[25] Nejmeh, B.A., NPATH: A Measure of Execution Path Complexity and Its Applications. ACM, 1988. 31(2): p. 188-200.

[26] Coleman, D., B. Lowther, and P. Oman, The Application of Software Maintainability Models in Industrial Software Systems. Journal of Systems and Software, 1995. 29(1): p. 3-16.

[27] Shatnawi, R., A Quantitative Investigation of the Acceptable Risk Levels of Object-Oriented Metrics in Open-Source Systems. IEEE Transactions on Software Engineering, 2010. 36(2): p. 216-225.

[28] Benlarbi, S., K. El-Emam, N. Goel, and S.N. Rai, Thresholds for Object-Oriented Measures. Institute for Information Technology, National Research Council Canada, 2000.

[29] Chidamber, S.R. and C.F. Kemerer, A Metrics Suite for Object-Oriented Design. IEEE Transactions on Software Engineering, 1994. 20(6): p. 476-493.

[30] Grouven, U., H. Küchenhoff, P. Shräder, and R. Bender, Flexible Regression Models Are Useful Tools to Calculate and Assess Threshold Values in the Context of Minimum Provider Volumes. Journal of Clinical Epidemiology, 2007. 61: p. 1125-1131.

[31] Experiments URL, http://alarcos.inf-cr.uclm.es/bpmnexperiments/. 2009.

[32] Shatnawi, R., An Investigation of CK Metrics Thresholds. ISSRE Supplementary Conference Proceedings, 2006.

[33] Erni, K. and C. Lewerentz, Applying Design Metrics to Object-Oriented Frameworks. Proceedings of METRICS, 1996: p. 64-74.

[34] Hosmer, D. and S. Lemeshow, Applied Logistic Regression (2nd edn). Wiley-InterScience, 2000.

[35] Royston, P., G.A. Douglas, and W. Sauerbrei, Dichotomizing Continuous Predictors in Multiple Regression: A Bad Idea. Statistics in Medicine, Wiley InterScience, 2005. 25: p. 127-141.

[36] Rolón, E., L. Sánchez, F. García, F. Ruiz, M. Piattini, D. Caivano, and G. Visaggio, Prediction Models for BPMN Usability and Maintainability. BPMN 2009 - 1st International Workshop on BPMN, 2009: p. 383-390.