以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[65] Y. Kwon, F. Wang, W. Wang, K. H. Lee, W.-C. Lee, S. Ma, X. Zhang, D. Xu, S. Jha, G. Ciocarlie 等人，“MCI: 基于模型的因果推理在审计日志中的应用”，发表于《网络与分布式系统安全研讨会（NDSS）》，2018年。

[66] K. H. Lee, “UBSI,” https://github.com/kyuhlee/UBSI, 最后访问日期：2019年4月20日。

[67] K. H. Lee, X. Zhang, 和 D. Xu, “通过基于二进制的执行分区实现高精度攻击溯源。” 发表于《网络与分布式系统安全研讨会（NDSS）》，2013年。

[68] ——, “LogGC: 审计日志垃圾收集”，发表于《ACM计算机与通信安全会议（CCS）》，2013年。

J. Lind, C. Priebe, D. Muthukumaran, D. O’Keeffe, P.-L. Aublin, F. Kelbert, T. Reiher, D. Goltzsche, D. Eyers, R. Kapitza 等人，“Glamdring: 用于Intel SGX的自动应用程序分区”，发表于《USENIX年度技术会议（ATC）》，2017年。

[70] Linux Audit, “audit-userspace,” https://github.com/linux-audit/audit-userspace, 最后访问日期：2019年4月20日。

[71] Y. Liu, M. Zhang, D. Li, K. Jee, Z. Li, Z. Wu, J. Rhee, 和 P. Mittal, “面向企业安全的及时因果分析”，发表于《网络与分布式系统安全研讨会（NDSS）》，2018年。

[72] K. Lucas, “UnixBench,” https://github.com/kdlucas/byte-unixbench, 最后访问日期：2019年4月20日。

[73] D. Ma 和 G. Tsudik, “一种新的安全日志方法”，《ACM存储交易（TOS）》第5卷，第1期，2009年。

[74] S. Ma, K. H. Lee, C. H. Kim, J. Rhee, X. Zhang, 和 D. Xu, “准确、低成本且无需工具的安全审计日志记录在Windows上的应用”，发表于《年度计算机安全应用大会（ACSAC）》，2015年。

[75] S. Ma, J. Zhai, F. Wang, K. H. Lee, X. Zhang, 和 D. Xu, “MPI: 具有语义感知执行分区的多视角攻击调查”，发表于《USENIX安全研讨会（USENIX）》，2017年。

[76] S. Ma, X. Zhang, 和 D. Xu, “ProTracer: 通过交替使用日志记录和污点跟踪实现实用溯源追踪”。发表于《网络与分布式系统安全研讨会（NDSS）》，2016年。

[77] maldevel, “ClearLogs,” https://sourceforge.net/projects/clearlogs/, 最后访问日期：2020年2月7日。

[78] S. Matetic, M. Ahmed, K. Kostiainen, A. Dhar, D. Sommer, A. Gervais, A. Juels, 和 S. Capkun, “ROTE: 可信执行的回滚保护”，发表于《USENIX安全研讨会（USENIX）》，2017年。

[79] S. Matetic, M. Schneider, A. Miller, A. Juels, 和 S. Capkun, “DelegaTEE: 使用可信执行环境的代理委托”，发表于《USENIX安全研讨会（USENIX）》，2018年。

J. M. McCune, B. J. Parno, A. Perrig, M. K. Reiter, 和 H. Isozaki, “Flicker: 一个最小化TCB的执行基础设施”，《ACM操作系统评论》第42卷，第4期，2008年。

[80]

[81] F. McKeen, I. Alexandrovich, A. Berenzon, C. V. Rozas, H. Shafi, V. Shanbhogue, 和 U. R. Savagaonkar, “创新指令和隔离执行的软件模型”。发表于《硬件和架构支持安全和隐私国际研讨会（HASP）》，2013年。

[82] L. McVoy, “LMbench,” http://www.bitmover.com/lmbench/, 最后访问日期：2019年4月20日。

[83] S. M. Milajerdi, R. Gjomemo, B. Eshete, R. Sekar, 和 V. Venkatakrishnan, “HOLMES: 通过可疑信息流的相关性实现实时APT检测”，发表于《IEEE安全与隐私研讨会（S&P）》，2019年。

[84] K.-K. Muniswamy-Reddy, D. A. Holland, U. Braun, 和 M. I. Seltzer, “具备来源意识的存储系统”，发表于《USENIX年度技术会议（ATC）》，2006年。

[85] 国家标准与技术研究院，“NIST特别出版物800-53（修订版4），联邦信息系统和组织的安全控制与评估程序”，2013年。

[86] 国家安全局，“受控访问保护配置文件，版本1.d”，https://www.niap-ccevs.org/Profile/Info.cfm?PPID=14&id=14, 1999年。

[87] NGINX Inc., “Nginx 1.13.1,” https://www.nginx.com/, 最后访问日期：2019年4月20日。

[88] D. Nguyen, J. Park, 和 R. Sandhu, “在OpenStack云IaaS中采用基于来源的访问控制”，发表于《国际网络与系统安全会议（NSS）》，2014年。

[89] H. Nguyen, B. Acharya, R. Ivanov, A. Haeberlen, L. T. X. Phan, O. Sokolsky, J. Walker, J. Weimer, W. Hanson, 和 I. Lee, “医疗设备的基于云的安全日志”，发表于《IEEE互联健康：应用、系统和工程技术国际会议（CHASE）》，2016年。

[90] OccupytheWeb, “如何掩盖你的踪迹并在目标系统上不留痕迹”，https://null-byte.wonderhowto.com/how-to/hack-like-pro-cover-your-tracks-leave-no-trace-behind-target-system-0148123/, 2013年，最后访问日期：2019年4月20日。

[91] O. Ohrimenko, F. Schuster, C. Fournet, A. Mehta, S. Nowozin, K. Vaswani, 和 M. Costa, “在可信处理器上进行多方机器学习”，发表于《USENIX安全研讨会（USENIX）》，2016年。

[92] P. H. O’Neill, “零日漏洞比以往任何时候都更罕见且更昂贵”，https://www.cyberscoop.com/zero-day-vulns-are-rarer-and-more-expensive-than-ever/, 2017年4月。

[93] A. Oprea, Z. Li, T.-F. Yen, S. H. Chin, 和 S. Alrwais, “通过挖掘大规模日志数据检测早期企业感染”，发表于《可信赖系统和网络会议（DSN）》，2015年。

[94] A. Ortiz Cornet 和 J. M. Bardera Bosch, “生成不可变审计日志的方法和系统”，专利US20 090 016 534，2009年。

[95] J. Park, D. Nguyen, 和 R. Sandhu, “基于来源的访问控制模型”，发表于《年度国际隐私、安全和信任会议（PST）》，2012年。

[96] T. Pasquier, X. Han, T. Moyer, A. Bates, O. Hermant, D. Eyers, J. Bacon, 和 M. Seltzer, “全系统来源的运行时分析”，发表于《ACM计算机与通信安全会议（CCS）》，2018年。

[97] T. Pasquier, J. Singh, D. Eyers, 和 J. Bacon, “Camflow: 云服务的管理数据共享”，《IEEE云计算交易（TCC）》，2015年。

[98] K. Pei, Z. Gu, B. Saltaformaggio, S. Ma, F. Wang, Z. Zhang, L. Si, X. Zhang, 和 D. Xu, “HERCULE: 通过相关日志图的社区发现重建攻击故事”，发表于《年度计算机安全应用大会（ACSAC）》，2016年。

[99] D. Pohly, S. McLaughlin, P. McDaniel, 和 K. Butler, “Hi-Fi: 收集高保真全系统来源”，发表于《年度计算机安全应用大会（ACSAC）》，2012年。

[100] C. Priebe, K. Vaswani, 和 M. Costa, “EnclaveDB: 使用SGX的安全数据库”，发表于《IEEE安全与隐私研讨会（S&P）》，2018年。

[101] T. Pulls 和 R. Peeters, “Balloon: 一种前向安全的追加认证数据结构”，发表于《欧洲计算机安全研究研讨会（ESORICS）》，2015年。

[102] H. Raj, S. Saroiu, A. Wolman, R. Aigner, J. Cox, P. England, C. Fenner, K. Kinshumann, J. Loeser, D. Mattoon 等人，“fTPM: TPM芯片的纯软件实现”，发表于《USENIX安全研讨会（USENIX）》，2016年。

[103] A. Rane, C. Lin, 和 M. Tiwari, “Raccoon: 通过混淆执行关闭数字侧信道”。发表于《USENIX安全研讨会（USENIX）》，2015年。

[104] Rapid7, “Metasploit, 世界上使用最广泛的渗透测试框架”，https://www.metasploit.com/, 最后访问日期：2019年4月20日。

[105] Red Hat Customer Portal, “系统审计”，https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing, 最后访问日期：2019年4月20日。

[106] Redis Labs, “Redis 3.0.6,” https://redis.io/, 最后访问日期：2019年4月20日。

[107] R. Sailer, X. Zhang, T. Jaeger, 和 L. van Doorn, “基于TCG的完整性度量架构的设计与实现”，发表于《USENIX安全研讨会（USENIX）》，2004年。

[108] B. Schneier 和 J. Kelsey, “在不受信任的机器上支持安全日志的加密方法”。发表于《USENIX安全研讨会（USENIX）》，1998年。

[109] ——, “支持计算机取证的安全审计日志”，《ACM信息和系统安全交易（TISSEC）》，1999年。

[110] F. Schuster, M. Costa, C. Fournet, C. Gkantsidis, M. Peinado, G. Mainar-Ruiz, 和 M. Russinovich, “VC3: 使用SGX在云端进行可信数据分析”，发表于《IEEE安全与隐私研讨会（S&P）》，2015年。

[111] C. Shepherd, R. N. Akram, 和 K. Markantonakis, “EmLog: 适用于受限设备的具有TEE的防篡改系统日志”，发表于《国际信息安全理论与实践会议（WISTP）》，2017年。

[112] M.-W. Shih, M. Kumar, T. Kim, 和 A. Gavrilovska, “S-NFV: 使用SGX保护NFV状态”，发表于《ACM国际软件定义网络与网络功能虚拟化研讨会》，2016年。

[113] S. Shinde, D. Tien, S. Tople, 和 P. Saxena, “Panoply: 低TCB的Linux应用程序与SGX enclave”，发表于《网络与分布式系统安全研讨会（NDSS）》，2017年。

[114] A. Sinha, L. Jia, P. England, 和 J. R. Lorch, “使用TPM 2.0进行连续防篡改日志记录”，发表于《国际信任与可信计算会议（TRUST）》，2014年。

[115] Splunk Inc., “Splunk,” https://www.splunk.com, 最后访问日期：2020年2月7日。

[116] P. Subramanyan, R. Sinha, I. Lebedev, S. Devadas, 和 S. A. Seshia, “安全远程执行enclave的形式基础”，发表于《ACM计算机与通信安全会议（CCS）》，2017年。

[117] SUSE Linux AG, “Linux内核2.6的审计子系统设计文档v0.1”，http://uniforum.chi.il.us/slides/HardeningLinux/LAuS-Design.pdf, 2004年。

[118] C. Tan, L. Yu, J. B. Leners, 和 M. Walfish, “高效服务器审计问题、去重重新执行与Web”，发表于《操作系统原则研讨会（SOSP）》，2017年。

[119] The Apache Software Foundation, “ab 2.3,” https://httpd.apache.org/docs/2.4/programs/ab.html, 最后访问日期：2019年4月20日。

[120] ——, “httpd 2.4.18,” https://httpd.apache.org/, 最后访问日期：2019年4月20日。

[121] The MITRE Corporation, “Capec-81: Web日志篡改”，https://capec.mitre.org/data/definitions/81.html, 2017年，最后访问日期：2019年4月20日。

[122] S. Tople 和 P. Saxena, “关于混淆执行技术的权衡”，发表于《入侵检测与恶意软件及漏洞评估国际会议（DIMVA）》，2017年。

utds3lab, “sgx-log,” https://github.com/utds3lab/sgx-log, 最后访问日期：2019年4月20日。

[123]

[124] Q. Wang, W. U. Hassan, D. Li, K. Jee, X. Yu, K. Zou, J. Rhee, Z. Chen, W. Cheng, C. Gunter, 和 H. Chen, “你就是你的行为：通过数据来源分析猎杀隐蔽恶意软件”，发表于《网络与分布式系统安全研讨会（NDSS）》，2020年。

[125] W. Wang, G. Chen, X. Pan, Y. Zhang, X. Wang, V. Bindschaedler, H. Tang, 和 C. A. Gunter, “黑暗之地的漏斗：理解SGX中的内存侧信道危害”，发表于《ACM计算机与通信安全会议（CCS）》，2017年。

[126] O. Weisse, V. Bertacco, 和 T. Austin, “HotCalls: SGX安全enclave的快速接口”，发表于《年度国际计算机体系结构研讨会（ISCA）》，2017年。

[127] A. A. Yavuz, P. Ning, 和 M. K. Reiter, “高效、抗妥协且仅追加的加密方案用于安全审计日志”，发表于《国际金融密码学与数据安全会议（FC）》，2012年。

[128] A. A. Yavuz 和 P. Ning, “BAF: 一种高效的公开验证安全审计日志方案用于分布式系统”，发表于《年度计算机安全应用大会（ACSAC）》，2009年。

J. Yu, L. Hsiung, M. El Hajj, 和 C. W. Fletcher, “用于侧信道抵抗和高性能计算的数据无感知ISA扩展”。发表于《网络与分布式系统安全研讨会（NDSS）》，2019年。

[129]

[130] W. Zheng, A. Dave, J. G. Beekman, R. A. Popa, J. E. Gonzalez, 和 I. Stoica, “Opaque: 一种混淆和加密的分布式分析平台”。发表于《USENIX网络系统设计与实现研讨会（NSDI）》，2017年。

[131] W. Zhou, Q. Fei, A. Narayan, A. Haeberlen, B. T. Loo, 和 M. Sherr, “安全网络来源”，发表于《ACM操作系统原则研讨会（SOSP）》，2011年。

**附录A 错误恢复**

回想第五节的内容，如果在启动阶段提供了损坏或过时的数据，日志记录器将引发错误。存在多种可能导致这种情况发生的场景：(1) 攻击者在获得root权限后关闭日志记录器，并擦除、损坏或替换存储在磁盘上的密封数据；(2) 攻击者在获得root权限后强制终止日志记录器，导致其跳过关闭阶段；(3) 良性的故障，如电源丢失、系统崩溃或磁盘损坏等。我们在第十二节中讨论了为什么当前设计下的CUSTOS无法区分这些不同场景（它们都会在下一次启动时引发错误，并在下一次审计时生成警报），并且在良性情况和敌对情况下都需要人工干预。现在我们提供一个关于CUSTOS如何从这些错误中恢复的讨论。

算法7展示了CUSTOS提供的恢复阶段，该阶段接受密封密钥和单调计数器ID（sealed-key-id）作为输入。回想一下，这些数据在初始化阶段结束时被复制到管理机器上，因此即使攻击者在受损主机上破坏了这些数据，也不会丢失。然后，飞地解封这些数据，通过调用DestroyMC（参见表I）销毁与之关联的单调计数器ID，并再次运行初始化阶段，以创建新的密钥对和单调计数器。最后，管理员将其新sealed-key-id（与新的密钥对和单调计数器ID关联）复制到他们的机器上，并将更新后的节点公钥注册到密钥管理服务中。在重新初始化CUSTOS的日志记录器之前删除之前的单调计数器是很重要的，以避免达到SGX可用的单调计数器的限制。同时请注意，攻击者滥用恢复阶段来阻止检测（场景2）并不符合其利益，因为这会导致主机使用未注册的公钥，从而在下一次审计时仍然会生成警报。

一旦CUSTOS重新初始化，先前故障前生成签名的日志的完整性仍将使用之前的公钥进行验证。未来的日志将使用新的公钥进行验证。只有在故障发生时属于当前块的日志（在场景2和3中）将没有关联的签名，但CUSTOS生成警报并由管理员介入重新初始化新的密钥对和计数器这一事实意味着这种篡改（无论是良性的还是恶意的）并未逃过检测，因此故障不会违反G1（防篡改日志）。

---

希望这些改进能帮助您更好地传达您的内容。