### Synchronization and Security in Mobile Systems Management

In the context of mobile systems management, a flexible level of synchronization is more appropriate than strict commit protocols. Current practices often involve even looser levels of synchronization. To address the security implications, we propose adapting lessons from Role-Based Access Control (RBAC). By assigning fine-grained roles to experts in different layers of the stack, we can leverage the significant progress in RBAC to manage these roles with sophistication, allowing for hierarchies, overlaps, and transient existence.

### Commonalities Among Multiple Mobile Devices

We believe that multiple mobile devices will share common interests, particularly when they are in close geographic proximity. For example, two administrators in a lab might simultaneously require additional data after an initial problem alert. Given the high cost and energy consumption of direct data connections between mobile clients and managed servers, a middle tier that provides aggregation services and feeds multiple mobile clients could be beneficial. Previous work [13], [14] has explored this model, but challenges remain, such as ensuring timely updates and managing security implications, given that different individuals have varying access privileges to different pieces of information.

### Case Study: IBM Mobile Systems Remote

**IBM Mobile Systems Remote (IBM Remote)** is an iPhone and Android application developed by IBM Research for managing IBM server systems. It employs a View-Cache-Engine (VCE) Architecture [15], where the mobile application fetches specific data items of interest, such as chassis temperature and fan speeds. The views express interest in certain data items to a cache, which is updated asynchronously by a communication engine. The cache then updates the subscribed views. The frequency of updates is determined by the **Freshness** of the data item, a criterion that varies from static data like machine hostname and MAC address to dynamic data like fan speed.

#### Application Screenshots

- **Main View**: Displays management endpoints, each representing an IBM BladeCenter managed by an Advanced Management Module (AMM). Each cell provides a high-level overview, including name, label, machine type, and health status.
- **Front View**: Shows detailed information about individual blades within a BladeCenter chassis, including power state and control options.
- **Health and Event Log Views**: Provide comprehensive health messages and filtered event logs, respectively, to facilitate timely action by system administrators.

**Empirical Findings**

- **Battery Performance**: The Freshness concept improved battery performance by reducing unnecessary data refreshes, resulting in a 17% relative energy saving compared to updating all data items every 30 seconds.
- **Publish-Subscribe Model**: This model reduces network traffic by allowing multiple views to subscribe to overlapping sets of data items.

### Configuration Bugs in Virtualized Environments

Configuration bugs in virtualized environments, such as those in a production data center running KVM virtual machines, highlight the complexity of systems management. For instance, the performance of a Web 2.0 benchmark called Olio [17] is influenced by Apache and PHP configuration parameters, which have non-linear dependencies and vary with workload intensity and interference. This underscores the need for dynamic tuning and effective mobile applications to handle complex data.

### Design Challenges and Solutions

Building IBM Remote and the configuration engine involved several design challenges:

1. **Limited Screen Real Estate**: Summarized views of machine health, highlighting error conditions and allowing drill-down, were found to be most effective.
2. **Parameter Dependencies**: A table lookup of parameter values for different operational regions was implemented, with potential for further optimization.
3. **Communication Mechanisms**: A push-based interface through Views and pull-based through the Cache was provided to accommodate various platforms.

### Related Work

Previous work in mobile systems management has primarily focused on managing mobile devices rather than using them to manage servers. Some related work includes:

- **Mobile Agents for Monitoring Servers** [18], [19]: These agents can dynamically change monitoring policies.
- **UCSand** [21]: An Android app for Cisco Unified Computing Systems monitoring, but it lacks periodic updates.
- **PCMonitor** [22]: A commercial product for monitoring PCs from mobile devices, relying on middleware.
- **VMWare vCenter Mobile Access** [23]: A virtual appliance for managing VMware environments, lacking a native application.
- **HP Proliant-8 Family** [24]: A mobile application for configuration, monitoring, and management, indicating vendor interest in this area.

### Conclusion

This paper envisions the use of mobile clients, such as smartphones, for managing large masses of physical and virtual servers. Two fundamental changes are identified: management through resource-constrained mobile devices and a crowdsourcing flavor of systems management. We outline solution directions and present a concrete case study with IBM Remote, highlighting requirements for effective mobile systems management.

### References

[1] Splunk Inc., “Splunk for Application Management,” http://www.splunk.com/web assets/pdfs/secure/Splunk for Application Management.pdf.

[2] V. Varadarajan, T. Kooburat, B. Farley, T. Ristenpart, and M. M. Swift, “Resource-freeing attacks: improve your cloud performance (at your neighbor’s expense),” in Proceedings of the 2012 ACM conference on Computer and communications security. ACM, 2012, pp. 281–292.

[3] D. Williams and B. Newton, “Dell-BMC Industry Insights: Data Center Automation Your Path to the Cloud,” http://www.bmc.com/products/documents/54/69/215469/215469.pdf, 2011.

[4] A. Kumar Maji, K. Hao, S. Sultana, and S. Bagchi, “Characterizing failures in mobile OSes: A case study with Android and Symbian,” in IEEE 21st International Symposium on Software Reliability Engineering (ISSRE), 2010, pp. 249–258.

[5] A. Carroll and G. Heiser, “An analysis of power consumption in a smartphone,” in USENIX ATC, 2010.

[6] V. Shnayder, M. Hempstead, B.-r. Chen, G. W. Allen, and M. Welsh, “Simulating the power consumption of large-scale sensor network applications,” in SenSys, 2004.

[7] IBM, “Advanced Management Module,” http://publib.boulder.ibm.com/infocenter/bladectr/documentation/index.jsp?topic=/com.ibm.bladecenter.8886.doc/dw1fs c advanced management module.html.

[8] Dell Inc., “Remote Management with the Baseboard Management Controller in Eighth-Generation Dell PowerEdge Servers,” www.dell.com/downloads/global/power/ps4q04-20040110-Zhuo.pdf.

[9] P. Dutta, M. Grimmer, A. Arora, S. Bibyk, and D. Culler, “Design of a wireless sensor network platform for detecting rare, random, and ephemeral events,” in At the 4th International Symposium on Information Processing in Sensor Networks (IPSN), 2005.

[10] Q. Cao, T. Abdelzaher, T. He, and J. Stankovic, “Towards optimal sleep scheduling in sensor networks for rare-event detection,” in Proceedings of the 4th international symposium on Information processing in sensor networks, 2005.

[11] M. Hoque, M. Siekkinen, and J. Nurminen, “On the energy efficiency of proxy-based traffic shaping for mobile audio streaming,” in Consumer Communications and Networking Conference (CCNC), 2011.

[12] A. K. Maji, F. A. Arshad, S. Bagchi, and J. S. Rellermeyer, “An empirical study of the robustness of inter-component communication in android,” in DSN, 2012.

[13] M. Pitkanen, T. Karkkainen, and J. Ott, “Opportunistic Web Access via WLAN Hotspots,” in IEEE International Conference on Pervasive Computing and Communications (PerCom). IEEE, 2010, pp. 20–30.

[14] B. Han, P. Hui, V. Kumar, M. Marathe, J. Shao, and A. Srinivasan, “Mobile Data Offloading through Opportunistic Communications and Social Participation,” IEEE Transactions on Mobile Computing, vol. 11, no. 5, pp. 821 –834, may 2012.

[15] J. S. Rellermeyer, T. H. Osiecki, E. A. Holloway, P. J. Bohrer, and M. Kistler, “System management with ibm mobile systems remote - a question of power and scale,” in 13th International Conference on Mobile Data Management (MDM), 2012, pp. 1–6.

[16] IBM, “IBM BladeCenter blade server,” http://www.ibm.com/systems/bladecenter/index.html.

[17] Olio, “Olio: Web 2.0 application,” http://incubator.apache.org/olio, 2013.

[18] A. Tripathi, T. Ahmed, S. Pathak, M. Carney, and P. Dokas, “Paradigms for mobile agent based active monitoring of network systems,” in Network Operations and Management Symposium, 2002. NOMS 2002. 2002 IEEE/IFIP, 2002, pp. 65 – 78.

[19] A. R. Tripathi, D. Kulkarni, H. Talkad, M. Koka, S. Karanth, T. Ahmed, and I. Osipkov, “Autonomic configuration and recovery in a mobile agent-based distributed event monitoring system,” Software: Practice and Experience, vol. 37, no. 5, pp. 493–522, 2007. [Online]. Available: http://dx.doi.org/10.1002/spe.777

[20] A. Koliousis and J. Sventek, “A trustworthy mobile agent infrastructure for network management,” in Integrated Network Management, 2007. IM ’07. 10th IFIP/IEEE International Symposium on, 2007, pp. 383 –390.

[21] W. V. Schaik, “UCSand,” https://market.android.com/details?id=net.ecliptic.ucsand, Aug 27, 2011.

[22] MMSOFT Design Ltd., “PCMonitor,” http://mobilepcmonitor.com/, 2011.

[23] V. Labs, “VMWare vCenter Mobile Access,” http://labs.vmware.com/flings/vcma, 2011.

[24] A. Shah, “HP to Release Server Management Apps for iOS, Android,” February 2012.