### Name Constraints Extension and Client Support

The `nameConstraints` extension is not universally supported, and clients that do not support this extension will reject certificates that include it. Intermediate certificates using this extension may also face similar rejection issues.

### Continuity in TACK vs. HSTS/HPKP

In TACK (Trust Assertions for Certificate Keys), the continuity of a policy is distinct from HSTS (HTTP Strict Transport Security) and HPKP (HTTP Public Key Pinning). Clients retain a TACK policy for as long into the future as the policy has been consistently observed in the past, with a maximum retention period of 30 days.

### Transition to CT Proofs

Even after universal adoption of Certificate Transparency (CT), clients must wait until all existing legacy certificates have expired before requiring CT proofs. Private Certificate Authorities (CAs), such as those used within an enterprise, are excluded from this requirement.

### Developer Familiarity and Implementation Errors

Some of these issues can be attributed to developers' unfamiliarity with new tools. Previous studies have shown that developers often make critical mistakes during the early implementation of new techniques. However, many of the errors we observed were made by large websites, which are often at the forefront of web security. These developers should, in theory, be well-versed in these new tools. While familiarity may improve over time, less security-aware developers will begin implementing these techniques, potentially increasing the number of errors.

### Simplicity for Developers

Our work underscores the importance of simplicity for developers in any web security technology. For example, better default values might help. We advocate for a default value of 30 days for HSTS policies set without an explicit `max-age`. Requiring all developers to choose this value has led to unwise choices on both ends of the spectrum, as well as malformed headers. Setting sensible defaults for pinning is more challenging, as there is no clear way to choose a default "backup pin" besides the values currently in use. This suggests that pinning may never be a simple "on switch" for developers unless TLS certificate management can be completely abstracted away.

### Understanding Subdomains and Same-Origin Policy

Many developers do not fully understand the same-origin policy and the relationship between subdomains, particularly in the context of cookies. For both HSTS and pinning, having policies apply to subdomains by default, with an option to disable this or turn it off for specific subdomains, would be a safer design. This recommendation is already reflected in Chrome’s new policy for preloaded inclusion, which requires sites to set `includeSubDomains`. Extending the `secure` attribute of cookies to require pinning (where applicable) as well as HTTPS, as discussed in Section VI-C, would also help align the technology with developer expectations.

### Streamlining HTTPS Security Features

We advocate for streamlining HTTPS security features to make configuration as simple as possible. HSTS and pinning will likely not be the last HTTPS enhancements. Currently, there are two distinct syntaxes being standardized for setting these in HTTP headers and browser preloads. It would be beneficial to combine dynamic HSTS and pinning declarations into a more flexible and extensible syntax that developers can declare once, preferably with sensible defaults, rather than expecting them to learn new syntax and subtleties with each new patch.

### References

[1] E. Rescorla, “HTTP over TLS,” RFC 2818, Internet Engineering Task Force, 2000.
[2] T. Dierks and E. Rescorla, “The Transport Layer Security (TLS) Protocol Version 1.2,” RFC 5246, Internet Engineering Task Force, 2008.
[3] J. Clark and P. C. van Oorschot, “SSL and HTTPS: Revisiting past challenges and evaluating certificate trust model enhancements,” IEEE Symposium on Security and Privacy, 2013.
[4] M. Marlinspike, “New Tricks For Defeating SSL In Practice,” in Black Hat DC, 2009.
[5] J. Hodges, C. Jackson, and A. Barth, “HTTP Strict Transport Security (HSTS),” RFC 6797, Internet Engineering Task Force, 2012.
[6] C. Soghoian and S. Stamm, “Certified Lies: Detecting and Defeating Government Interception Attacks Against SSL,” Financial Cryptography and Data Security, 2012.
[7] C. Evans, C. Palmer, and R. Sleevi, “Internet-Draft: Public Key Pinning Extension for HTTP,” 2012.
[8] S. Englehardt, C. Eubank, P. Zimmerman, D. Reisman, and A. Narayanan, “Web Privacy Measurement: Scientific principles, engineering platform, and new results,” 2014.
[9] “Alexa: The Web Information Company,” http://www.alexa.com, 2014.
[10] T. Dierks and C. Allen, “The Transport Layer Security (TLS) Protocol Version 1.0,” RFC 2246, Internet Engineering Task Force, 1999.
[11] T. Dierks and E. Rescorla, “The Transport Layer Security (TLS) Protocol Version 1.1,” RFC 4346, Internet Engineering Task Force, 2006.
[12] A. Freier, P. Karlton, and P. Kocher, “The Secure Sockets Layer (SSL) Protocol Version 3.0,” RFC 6101, Internet Engineering Task Force, May 2011.
[13] D. Dolev and A. C. Yao, “On the security of public key protocols,” IEEE Transactions on Information Theory, vol. 29, no. 2, 1983.
[14] R. Housley, W. Ford, W. Polk, and D. Solo, “Internet X.509 Public Key Infrastructure Certificate and CRL Profile,” RFC 2459, Internet Engineering Task Force, 1999.
[15] J. Sunshine, S. Egelman, H. Almuhimedi, N. Atri, and L. F. Cranor, “Crying Wolf: An Empirical Study of SSL Warning Effectiveness,” USENIX Security Symposium, 2009.
[16] D. Akhawe and A. P. Felt, “Alice in Warningland: A Large-Scale Field Study of Browser Security Warning Effectiveness,” USENIX Security Symposium, 2013.
[17] D. Akhawe, B. Amann, M. Vallentin, and R. Sommer, “Here’s my cert, so trust me, maybe?: Understanding TLS errors on the web,” 22nd International Conference on World Wide Web (WWW), 2013.
[18] L.-S. Huang, A. Rice, E. Ellingsen, and C. Jackson, “Analyzing Forged SSL Certificates in the Wild,” IEEE Symposium on Security and Privacy, 2014.
[19] A. Ornaghi and M. Valleri, “Man in the middle attack demos,” Blackhat Security, 2003.
[20] S. E. Schechter, R. Dhamija, A. Ozment, and I. Fischer, “The Emperor’s New Security Indicators,” IEEE Symposium on Security and Privacy, 2007.
[21] C. Jackson and A. Barth, “Beware of Finer-Grained Origins,” Web 2.0 Security and Privacy, 2008.
[22] Jose Selvi, “Bypassing HTTP Strict Transport Security,” Black Hat Europe, 2014.
[23] I. Ristic, “Internet SSL Survey 2010,” Black Hat USA, 2010.
[24] P. Eckersley and J. Burns, “The (decentralized) SSL observatory (Invited Talk),” 20th USENIX Security Symposium, 2011.
[25] J. Kasten, E. Wustrow, and J. A. Halderman, “Cage: Taming certificate authorities by inferring restricted scopes,” Financial Cryptography and Data Security, 2013.
[26] A. Niemann and J. Brendel, “A Survey on CA Compromises,” 2013.
[27] J. Huggins and P. e. a. Hammant, “Selenium browser automation framework,” http://code.google.com/p/selenium, 2014.
[28] Z. Durumeric, E. Wustrow, and J. A. Halderman, “Zmap: Fast internet-wide scanning and its security applications.” USENIX Security Symposium, 2013.
[29] A. Langley, “Strict Transport Security,” Imperial Violet (blog), January 2010.
[30] ——, “Public Key Pinning,” Imperial Violet (blog), May 2011.
[31] D. Keeler, “Preloading HSTS,” Mozilla Security blog, November 2012.
[32] Google Support, “Block adult content at your school with SafeSearch,” retrieved 2014.
[33] J. Ruderman, “The same origin policy,” http://www.mozilla.org/projects/security/components/same-origin.html, 2001.
[34] A. Barth, “The Web Origin Concept,” RFC 6454, Internet Engineering Task Force, 2011.
[35] I. Ristic, “HTTPS Mixed Content: Still the Easiest Way to Break SSL,” Qualys Security Labs Blog, 2014.
[36] T. Vyas, “Mixed Content Blocking Enabled in Firefox 23!” Mozilla Security Engineering—Tanvi’s Blog, 2013.
[37] M. Zusman and A. Sotirov, “Sub-prime PKI: Attacking extended validation SSL,” Black Hat Security Briefings, 2009.
[38] D. Kristol, “HTTP State Management Mechanism,” RFC rfc2109, Internet Engineering Task Force, 1997.
[39] D. Kristol and L. Montulli, “HTTP State Management Mechanism,” RFC 2965, Internet Engineering Task Force, 2000.
[40] A. Barth, “HTTP State Management Mechanism,” RFC 6265, Internet Engineering Task Force, 2011.
[41] M. Zalewski, The Tangled Web: A Guide to Securing Modern Web Applications. No Starch Press, 2012.
[42] Y. Zhou and D. Evans, “Why Aren’t HTTP-only Cookies More Widely Deployed?” Web 2.0 Security and Privacy, 2010.
[43] K. Fu, E. Sit, K. Smith, and N. Feamster, “Dos and don’ts of client authentication on the web,” in USENIX Security. Berkeley, CA, USA: USENIX Association, 2001.
[44] J. Bonneau and S. Preibusch, “The password thicket: technical and market failures in human authentication on the web,” Workshop on the Economics of Information Security (WEIS), 2010.
[45] C. Yue and H. Wang, “Characterizing insecure JavaScript practices on the web,” 18th International Conference on World Wide Web (WWW), 2009.
[46] N. Nikiforakis, L. Invernizzi, A. Kapravelos, S. Van Acker, W. Joosen, C. Kruegel, F. Piessens, and G. Vigna, “You are what you include: Large-scale evaluation of remote JavaScript inclusions,” in ACM Conference on Computer and Communications Security (CCS), 2012.
[47] J. Mayer and J. Mitchell, “Third-party web tracking: Policy and technology,” in IEEE Symposium on Security and Privacy, 2012.
[48] F. Roesner, T. Kohno, and D. Wetherall, “Detecting and defending against third–party tracking on the web,” 9th USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2012.
[49] A. Venkataraman, “Analyzing the Flash crossdomain policies,” Master’s thesis, 2012.
[50] S.-T. Sun and K. Beznosov, “The devil is in the (implementation) details: an empirical analysis of OAuth SSO systems,” in ACM Conference on Computer and Communications Security (CCS). ACM, 2012.
[51] R. Wang, S. Chen, and X. Wang, “Signing me onto your accounts through Facebook and Google: A traffic-guided security study of commercially deployed single-sign-on web services,” IEEE Symposium on Security and Privacy, 2012.
[52] G. A. Di Lucca, A. R. Fasolino, M. Mastoianni, and P. Tramontana, “Identifying cross site scripting vulnerabilities in web applications,” in Int. Telecommunications Energy Conference (INTELEC), 2004.
[53] N. Jovanovic, C. Kruegel, and E. Kirda, “Pixy: A static analysis tool for detecting web application vulnerabilities,” IEEE Symposium on Security and Privacy, 2006.
[54] G. Wassermann and Z. Su, “Static detection of cross-site scripting vulnerabilities,” 30th International Conference on Software Engineering (ICSE), 2008.
[55] A. E. Nunan, E. Souto, E. M. dos Santos, and E. Feitosa, “Automatic classification of cross-site scripting in web pages using document-based and URL-based features,” in 2012 IEEE Symposium on Computers and Communications (ISCC), 2012.
[56] S. Kals, E. Kirda, C. Kruegel, and N. Jovanovic, “Secubat: a web vulnerability scanner,” 15th International Conference on World Wide Web (WWW), 2006.
[57] M. Curphey and R. Arawo, “Web application security assessment tools,” IEEE Symposium on Security & Privacy, 2006.
[58] M. Vieira, N. Antunes, and H. Madeira, “Using web security scanners to detect vulnerabilities in web services,” in IEEE/IFIP International Conference on Dependable Systems & Networks (DSN), 2009.
[59] S. Yilek, E. Rescorla, H. Shacham, B. Enright, and S. Savage, “When private keys are public: results from the 2008 debian openssl vulnerability,” ACM SIGCOMM Internet Measurement Conference, 2009.
[60] A. K. Lenstra, J. P. Hughes, M. Augier, J. W. Bos, T. Kleinjung, and C. Wachter, “Ron was wrong, Whit is right,” IACR Cryptology ePrint Archive, 2012.
[61] N. Heninger, Z. Durumeric, E. Wustrow, and J. A. Halderman, “Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices,” USENIX Security Symposium, 2012.
[62] J. W. Bos, J. A. Halderman, N. Heninger, J. Moore, M. Naehrig, and E. Wustrow, “Elliptic curve cryptography in practice.” IACR Cryptology ePrint Archive, 2013.
[63] R. Holz, L. Braun, N. Kammenhuber, and G. Carle, “The SSL landscape: a thorough analysis of the X.509 PKI using active and passive measurements,” ACM SIGCOMM Internet Measurement Conference, 2011.
[64] B. Amann, M. Vallentin, S. Hall, and R. Sommer, “Revisiting SSL: A large-scale study of the internet's most trusted protocol,” Technical report, ICSI, Tech. Rep., 2012.
[65] S. Chen, Z. Mao, Y.-M. Wang, and M. Zhang, “Pretty-bad-proxy: An overlooked adversary in browsers’ HTTPS deployments,” IEEE Symposium on Security and Privacy, 2009.
[66] C. Brubaker, S. Jana, B. Ray, S. Khurshid, and V. Shmatikov, “Using Frankencerts for Automated Adversarial Testing of Certificate Validation in SSL/TLS Implementations,” IEEE Symposium on Security and Privacy, 2014.
[67] M. Georgiev, S. Iyengar, S. Jana, R. Anubhai, D. Boneh, and V. Shmatikov, “The most dangerous code in the world: validating SSL certificates in non-browser software,” ACM Conference on Computer and Communications Security, 2012.
[68] J. Liang, J. Jiang, H. Duan, K. Li, T. Wan, and J. Wu, “When https meets CDN: A case of authentication in delegated service,” IEEE Symposium on Security and Privacy, 2014.
[69] S. Fahl, M. Harbach, T. Muders, L. Baumgärtner, B. Freisleben, and M. Smith, “Why Eve and Mallory love Android: An analysis of Android SSL (in)security,” ACM Conference on Computer and Communications Security (CCS), 2012.
[70] S. Fahl, M. Harbach, H. Perl, M. Köttler, and M. Smith, “Rethinking SSL development in an appified world,” ACM Conference on Computer and Communications Security (CCS), 2013.
[71] S. Stamm, B. Sterne, and G. Markham, “Reining in the web with content security policy,” in 19th International Conference on World Wide Web (WWW), 2010.
[72] P. Hoffman and J. Schlyter, “RFC 6698: The DNS-based authentication of named entities (DANE) transport layer security (TLS) protocol: TLSA,” 2012.
[73] G. Ateniese and S. Mangard, “A new approach to DNS security (DNSSEC),” ACM Conference on Computer and Communications Security (CCS), 2001.
[74] M. Marlinspike and T. Perrin, “Internet-Draft: Trust Assertions for Certificate Keys,” 2012.
[75] P. Eckersley, “Internet-Draft: Sovereign Key Cryptography for Internet Domains,” 2012.
[76] B. Laurie, A. Langley, and E. Käsper, “Internet-Draft: Certificate Transparency,” 2013.
[77] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor, “Accountable key infrastructure (AKI): A proposal for a public-key validation infrastructure,” 22nd International Conference on World Wide Web (WWW), 2013.