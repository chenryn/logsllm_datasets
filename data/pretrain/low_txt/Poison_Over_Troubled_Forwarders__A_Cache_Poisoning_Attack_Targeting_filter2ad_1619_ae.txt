### Vulnerabilities in DNS Forwarders and Their Security Implications

An attacker can inject rogue DNS records for arbitrary domain names into the caches of DNS forwarders, thereby bypassing common defenses such as randomized ephemeral ports and 0x20 encoding. Our tests on current implementations reveal that several home router models and DNS software from major vendors are vulnerable to this attack. Additionally, a nationwide measurement study was conducted to assess the impact on mobile clients using these vulnerable devices.

Our findings highlight a lack of consistency in the industry's understanding of the role of DNS forwarders. Furthermore, there is an absence of clear implementation guidelines for forwarding devices in DNS specifications. We believe that more attention should be directed towards understanding and enhancing the security status of DNS forwarders.

**USENIX Association**
**29th USENIX Security Symposium**  
**589**

### Acknowledgements

We sincerely thank all anonymous reviewers for their valuable comments, which significantly improved the paper. We also extend our gratitude to the GeekPwn Cyber Security Competition.

This work is supported by:
- National Key R&D Program of China, Grant No. 2017YFB0803202
- NSFC Grants No. U1836213, U1636204
- State Key Laboratory of Computer Architecture (ICT, CAS) under Grant No. CARCH201703
- National Science Foundation under Grants No. 1652954, 1646641, and 1619391

### References

1. Cloud-delivered enterprise security by OpenDNS. [https://www.opendns.com/](https://www.opendns.com/)
2. Cloudflare Resolver. [https://cloudflare-dns.com/](https://cloudflare-dns.com/)
3. Comodo Secure DNS. [https://www.comodo.com/secure-dns/](https://www.comodo.com/secure-dns/)
4. Create your perfect Wi-Fi system - Linksys. [https://www.linksys.com/us/](https://www.linksys.com/us/)
5. D-Link: Consumer. [https://www.dlink.com/en/consumer](https://www.dlink.com/en/consumer)
6. DNRD, Domain Name Relay Daemon. [http://dnrd.sourceforge.net/](http://dnrd.sourceforge.net/)
7. Dnsmasq - Network services for small networks. [http://www.thekelleys.org.uk/dnsmasq/doc.html](http://www.thekelleys.org.uk/dnsmasq/doc.html)
15. Netgear. [https://www.netgear.com/](https://www.netgear.com/)
16. Norton ConnectSafe. [https://www.publicdns.xyz/public/norton-connectsafe.html](https://www.publicdns.xyz/public/norton-connectsafe.html)
17. OpenWRT Project. [https://openwrt.org/](https://openwrt.org/)
18. PowerDNS. [https://www.powerdns.com/](https://www.powerdns.com/)
19. Quad9 DNS: Internet Security & Privacy In a Few Easy Steps. [https://www.quad9.net/](https://www.quad9.net/)
20. Tenda Wireless Router. [http://simulator.tendacn.com/N301v2/](http://simulator.tendacn.com/N301v2/)
21. TP-Link: Wi-Fi networking equipment for home & business. [https://www.tp-link.com/us/](https://www.tp-link.com/us/)
22. Verisign Public DNS offers DNS stability and security. [https://www.verisign.com/en_US/security-services/public-dns/index.xhtml](https://www.verisign.com/en_US/security-services/public-dns/index.xhtml)
23. Wireless Routers | Networking | ASUS Global. [https://www.asus.com/Networking/Wireless-Routers-Products/](https://www.asus.com/Networking/Wireless-Routers-Products/)
24. Dan Kaminsky’s Blog. [http://dankaminsky.com/2008/07/21/130/](http://dankaminsky.com/2008/07/21/130/), 2008.
25. BIND 9 - Versatile, classic, complete name server software. [https://www.isc.org/bind/](https://www.isc.org/bind/), 2019.
26. Bugcrowd. [https://www.bugcrowd.com/](https://www.bugcrowd.com/), 2019.
27. NLnet Labs - Unbound. [https://nlnetlabs.nl/projects/unbound/about/](https://nlnetlabs.nl/projects/unbound/about/), 2019.
28. Geoffrey Alexander, Antonio M Espinoza, and Jedidiah R Crandall. Detecting TCP/IP connections via IPID hash collisions. Proceedings on Privacy Enhancing Technologies, 2019(4):311–328, 2019.
29. Mark Andrews. Negative caching of DNS queries (DNS ncache). 1998.
30. R Arends, R Austein, M Larson, Daniel Massey, and Scott W Rose. Protocol modifications for the DNS security extensions RFC 4035. Technical report, 2005.
31. Ray Bellis. DNS proxy implementation guidelines. 2009.
32. Stéphane Bortzmeyer. DNS privacy considerations. 2015.
33. Markus Brandt, Tianxiang Dai, Amit Klein, Haya Shulman, and Michael Waidner. Domain validation++ for MITM-resilient PKI. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pages 2060–2076. ACM, 2018.
34. Taejoong Chung, Roland van Rijswijk-Deij, Balakrishnan Chandrasekaran, David Choffnes, Dave Levin, Bruce M Maggs, Alan Mislove, and Christo Wilson. A longitudinal, end-to-end view of the DNSSEC ecosystem. In 26th USENIX Security Symposium (USENIX Security 17), pages 1307–1322, 2017.
35. Carlo Contavalli, Wilmer van der Gaast, David C Lawrence, and Warren Kumari. RFC 7871 - Client subnet in DNS queries. 2016.
36. David Dagon, Manos Antonakakis, Paul Vixie, Tatuya Jinmei, and Wenke Lee. Increased DNS forgery resistance through 0x20-bit encoding: Security via leet queries. In Proceedings of the 15th ACM conference on Computer and communications security, pages 211–222. ACM, 2008.
46. John W Heffner, Ben Chandler, and Matt Mathis. IPv4 reassembly errors at high data rates. 2007.
47. Amir Herzberg and Haya Shulman. Security of patched DNS. In European Symposium on Research in Computer Security, pages 271–288. Springer, 2012.
48. Amir Herzberg and Haya Shulman. Fragmentation considered poisonous, or: One-domain-to-rule-them-all. org. In 2013 IEEE Conference on Communications and Network Security (CNS), pages 224–232. IEEE, 2013.
49. Amir Herzberg and Haya Shulman. Vulnerable delegation of DNS resolution. In European Symposium on Research in Computer Security, pages 219–236. Springer, 2013.
50. Paul Hoffman, Andrew Sullivan, and K Fujiwara. DNS terminology. Technical report, 2019.
51. Charles Hornig. A standard for the transmission of IP datagrams over Ethernet networks. Technical report, 1984.
52. A Hubert and R Van Mook. Measures for making DNS more resilient against forged answers. Technical report, RFC 5452, January, 2009.
53. Dan Kaminsky. The massive, multi-vendor issue and the massive, multi-vendor fix. Technical report, 2008.
54. Christopher A Kent and Jeffrey C Mogul. Fragmentation considered harmful, volume 17. 1987.
55. Amit Klein and Benny Pinkas. From IP ID to device ID and KASLR bypass. In 28th USENIX Security Symposium (USENIX Security 19), pages 1063–1080, Santa Clara, CA, August 2019. USENIX Association.
56. Jeffrey Knockel and Jedidiah R Crandall. Counting packets sent between arbitrary internet hosts. In 4th USENIX Workshop on Free and Open Communications on the Internet (FOCI 14), 2014.
57. Marc Kührer, Thomas Hupperich, Jonas Bushart, Christian Rossow, and Thorsten Holz. Going wild: Large-scale classification of open DNS resolvers. In Proceedings of the 2015 Internet Measurement Conference, pages 355–368. ACM, 2015.
58. Paul Mockapetris. RFC-1034 domain names - concepts and facilities. Network Working Group, page 55, 1987.
59. Jeffrey C Mogul and Steven E Deering. Path MTU discovery. Technical report, 1990.
60. VC NewsNetwork. Wi-Fi home router market 2019 global analysis, opportunities and forecast to 2025. [https://www.reuters.com/brandfeatures/venture-capital/article?id=105961](https://www.reuters.com/brandfeatures/venture-capital/article?id=105961), 2019.
61. Vicky Risk. EDNS (in) compatibility. [https://www.isc.org/docs/DNS-OARC-EDNS-Compliance.pdf](https://www.isc.org/docs/DNS-OARC-EDNS-Compliance.pdf), 2015.
62. Kyle Schomp, Tom Callahan, Michael Rabinovich, and Mark Allman. On measuring the client-side DNS infrastructure. In Proceedings of the 2013 conference on Internet measurement conference, pages 77–90. ACM, 2013.
63. Kyle Schomp, Tom Callahan, Michael Rabinovich, and Mark Allman. Assessing DNS vulnerability to record injection. In Proceedings of the Passive and Active Measurement Conference, 2014.
64. Kyle Schomp, Tom Callahan, Michael Rabinovich, and Mark Allman. DNS record injection vulnerabilities in home routers. [http://www.icir.org/mallman/talks/schomp-dns-security-nanog61.pdf](http://www.icir.org/mallman/talks/schomp-dns-security-nanog61.pdf), 2014.
65. Christoph Schuba. Addressing weaknesses in the domain name system protocol. Master’s thesis, Purdue University, West Lafayette, IN, 1993.
66. Haya Shulman and Michael Waidner. Fragmentation considered leaking: port inference for DNS poisoning. In International Conference on Applied Cryptography and Network Security, pages 531–548. Springer, 2014.
67. Joe Stewart. DNS cache poisoning – the next generation, 2003.
68. Yves Vanaubel, Jean-Jacques Pansiot, Pascal Mérindol, and Benoit Donnet. Network fingerprinting: TTL-based router signatures. In Proceedings of the 2013 conference on Internet measurement conference, pages 369–376. ACM, 2013.
69. Paul Vixie. DNS and BIND security issues. In Usenix Security Symposium, 1995.
70. Paul Vixie, S Thomson, Y Rekhter, and J Bound. RFC 2136: Dynamic updates in the domain name system (DNS update), 1997.
71. Xu Zhang, Jeffrey Knockel, and Jedidiah R Crandall. ONIS: Inferring TCP/IP-based trust relationships completely off-path. In IEEE INFOCOM 2018-IEEE Conference on Computer Communications, pages 2069–2077. IEEE, 2018.

### Appendices

#### A. IP Fragmentation

IP fragmentation allows IP datagrams to be transmitted through networks with size limitations. The Path Maximum Transmission Unit (PMTU) defines the size limit of IP packets, and datagrams larger than the PMTU will be fragmented. The PMTU is determined by the minimum MTU of each hop in the path and can be discovered using techniques described in [59]. For Ethernet, the MTU is 1,500 bytes [51].

As shown in Figure 11, IP fragmentation and reassembly are supported by several fields in the IP header: Identification (IPID), Don’t Fragment bit (DF), More Fragment bit (MF), and Fragment Offset. If a sender does not want a datagram to be fragmented, the DF flag is set. The MF flag indicates whether this is the last fragment of the datagram and is cleared in the last fragment. The Fragment Offset shows the position of the current fragment in the original datagram. Fragments of one IP datagram share the same IPID to ensure correct reassembly.

For DNS packets, they contain an IP header, UDP header, and DNS header. If a DNS packet is fragmented, only the first fragment will have the UDP and DNS headers.

Despite being a fundamental IP function, IP fragmentation has been a subject of long-standing discussions due to its potential problems. Early reports, such as [54], highlighted that fragmentation can lead to poor performance and communication failure. More recent studies, like [46], show that IP fragmentation can cause frequent data corruption. Recent research has also demonstrated that IP fragmentation can be used to circumvent DNS cache injection defenses [43, 48] or cause CAs to issue fraudulent certificates [33]. These security issues have led to discussions about avoiding fragmentation altogether [40].

#### B. IPID Assignment of Public DNS Services

Using the technique described in Section 4, we tested the IPID assignment of egress resolvers for seven public DNS services. We used two vantage points as DNS clients and started the measurements simultaneously. The speed of DNS queries was changed every 100 seconds (from 1Qps, 10Qps to 100Qps).

**Hash-based IPID counters:** We found that egress resolvers of Cloudflare, Quad9, OpenDNS, Comodo, and Norton use hash-based IPID counters. Figure 12 shows the IPIDs of DNS responses received by one DNS client. After separating responses from different egress resolvers, we observed that the egress resolvers use predictable incremental IPID counters. The increments are linear with time because, in hash-based algorithms, each IPID counter is shared by an array of destination addresses. This was confirmed by the fact that the IPIDs of DNS responses sent to our two vantage points were not related.

**Random IPID assignment:** As shown in Figure 14, egress resolvers of Google and Verisign use random IPID assignment. As upstream resolvers, these services cannot be exploited in the attack.

**Figure 12:** IPID assignment of a) Cloudflare DNS, b) Quad9 DNS, c) OpenDNS, and d) Comodo Secure DNS, observed from one vantage point. Each line represents one egress resolver, and each dot marks one DNS response packet.

**Figure 13:** IPID assignment of Norton ConnectSafe for fragmented DNS responses (egress resolver: 156.154.180.*).

**Figure 14:** IPID assignment of Google Public DNS (egress resolver: 172.253.0.*).

**USENIX Association**  
**29th USENIX Security Symposium**  
**593**