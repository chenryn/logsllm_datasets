### 10. Conclusion

Our analysis of the TLS 1.3 candidate handshake designs, draft-05 and draft-dh, is encouraging. Both designs can be shown to be cryptographically sound, even in terms of established stand-alone key exchange security notions. The analyses also highlight areas where security aspects allow for flexibility and various options without compromising security, as discussed in Section 3.

From a theoretical perspective, our "cascading" approach, which treats session resumption not as part of the key exchange protocol but as another symmetric-key protocol composed with the main handshake protocol, is useful for managing the complexity of such analyses. This approach can be further developed to provide a comprehensive compositional analysis of the TLS 1.3 candidates. Our results already confirm the robust design of the handshake protocols, as we have demonstrated that the session keys can be safely used in the channel protocol and session resumption, and that session resumption itself is a strongly secure key exchange protocol.

### Acknowledgments

We thank Markulf Kohlweiss for insightful discussions on the necessity of the PRF-ODH assumption for proofs of the TLS 1.3 handshakes. We also thank Håkon Jacobsen for his comments on the proof for the pre-shared key handshake. Additionally, we are grateful to the anonymous reviewers for their valuable feedback. Marc Fischlin is supported by Heisenberg grant Fi 940/3-2 from the German Research Foundation (DFG). This work has been co-funded by the DFG as part of project S4 within the CRC 1119 CROSSING. Benjamin Dowling and Douglas Stebila are supported by the Australian Research Council (ARC) Discovery Project grant DP130104304. This research was conducted while B.D. and D.S. were at the Queensland University of Technology in Brisbane, Australia.

### References

[ABD+15] David Adrian, Karthikeyan Bhargavan, Zakir Durumeric, Pierrick Gaudry, Matthew Green, J. Alex Halderman, Nadia Heninger, Drew Springall, Emmanuel Thomé, Luke Valenta, Benjamin VanderSloot, Eric Wustrow, Santiago Zanella-Béguelin, and Paul Zimmermann. *Imperfect forward secrecy: How Diffie-Hellman fails in practice*. In ACM CCS 15, May 2015. (Cited on page 3.)

[ABP+13] Nadhem AlFardan, Daniel J. Bernstein, Kenneth G. Paterson, Bertram Poettering, and Jacob C. N. Schuldt. *On the security of RC4 in TLS*. In Proc. 22nd USENIX Security Symposium, pages 305–320. USENIX, 2013. (Cited on page 3.)

[ABR01] Michel Abdalla, Mihir Bellare, and Phillip Rogaway. *The oracle Diffie-Hellman assumptions and an analysis of DHIES*. In David Naccache, editor, Topics in Cryptology – CT-RSA 2001, volume 2020 of Lecture Notes in Computer Science, pages 143–158, San Francisco, CA, USA, April 8–12, 2001. Springer, Heidelberg, Germany. (Cited on page 48.)

[AP13] Nadhem J. AlFardan and Kenneth G. Paterson. *Lucky thirteen: Breaking the TLS and DTLS record protocols*. In 2013 IEEE Symposium on Security and Privacy, pages 526–540, Berkeley, CA, USA, May 19–22, 2013. IEEE Computer Society Press. (Cited on page 3.)

[AWZ10] J. Altman, N. Williams, and L. Zhu. *Channel Bindings for TLS*. RFC 5929 (Proposed Standard), July 2010. (Cited on page 11.)

[BBDL+15] Benjamin Beurdouche, Karthikeyan Bhargavan, Antoine Delignat-Levaud, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Jean Karim Zinzindohoue. *A messy state of the union: Taming the composite state machines of TLS*. In Proc. IEEE Symp. on Security & Privacy (S&P) 2015, pages 535–552. IEEE, 2015. (Cited on page 3.)

[BDF+14] Karthikeyan Bhargavan, Antoine Delignat-Lavaud, Cédric Fournet, Alfredo Pironti, and Pierre-Yves Strub. *Triple handshakes and cookie cutters: Breaking and fixing authentication over TLS*. In 2014 IEEE Symposium on Security and Privacy, pages 98–113, Berkeley, CA, USA, May 18–21, 2014. IEEE Computer Society Press. (Cited on pages 3 and 11.)

[BFK+13] Karthikeyan Bhargavan, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, and Pierre-Yves Strub. *Implementing TLS with verified cryptographic security*. In 2013 IEEE Symposium on Security and Privacy, pages 445–459, Berkeley, CA, USA, May 19–22, 2013. IEEE Computer Society Press. (Cited on page 5.)

[BFK+14] Karthikeyan Bhargavan, Cédric Fournet, Markulf Kohlweiss, Alfredo Pironti, Pierre-Yves Strub, and Santiago Zanella Béguelin. *Proving the TLS handshake secure (as it is)*. In Juan A. Garay and Rosario Gennaro, editors, Advances in Cryptology – CRYPTO 2014, Part II, volume 8617 of Lecture Notes in Computer Science, pages 235–255, Santa Barbara, CA, USA, August 17–21, 2014. Springer, Heidelberg, Germany. (Cited on pages 4, 5, 6, and 11.)

[BFWW11] Christina Brzuska, Marc Fischlin, Bogdan Warinschi, and Stephen C. Williams. *Composability of Bellare-Rogaway key exchange protocols*. In Yan Chen, George Danezis, and Vitaly Shmatikov, editors, ACM CCS 11: 18th Conference on Computer and Communications Security, pages 51–62, Chicago, Illinois, USA, October 17–21, 2011. ACM Press. (Cited on pages 5, 12, 18, 31, 32, and 33.)

[BR94] Mihir Bellare and Phillip Rogaway. *Entity authentication and key distribution*. In Douglas R. Stinson, editor, Advances in Cryptology – CRYPTO’93, volume 773 of Lecture Notes in Computer Science, pages 232–249, Santa Barbara, CA, USA, August 22–26, 1994. Springer, Heidelberg, Germany. (Cited on pages 9, 12, and 17.)

[Brz13] Christina Brzuska. *On the Foundations of Key Exchange*. PhD thesis, Technische Universität Darmstadt, Darmstadt, Germany, 2013. http://tuprints.ulb.tu-darmstadt.de/3414/. (Cited on pages 12, 18, and 31.)

[CF12] Cas J. F. Cremers and Michele Feltz. *Beyond eCK: Perfect forward secrecy under actor compromise and ephemeral-key reveal*. In Sara Foresti, Moti Yung, and Fabio Martinelli, editors, ESORICS 2012: 17th European Symposium on Research in Computer Security, volume 7459 of Lecture Notes in Computer Science, pages 734–751, Pisa, Italy, September 10–12, 2012. Springer, Heidelberg, Germany. (Cited on page 5.)

[CK01] Ran Canetti and Hugo Krawczyk. *Analysis of key-exchange protocols and their use for building secure channels*. In Birgit Pfitzmann, editor, Advances in Cryptology – EUROCRYPT 2001, volume 2045 of Lecture Notes in Computer Science, pages 453–474, Innsbruck, Austria, May 6–10, 2001. Springer, Heidelberg, Germany. (Cited on page 17.)

[CK02] Ran Canetti and Hugo Krawczyk. *Security analysis of IKE’s signature-based key-exchange protocol*. In Moti Yung, editor, Advances in Cryptology – CRYPTO 2002, volume 2442 of Lecture Notes in Computer Science, pages 143–161, Santa Barbara, CA, USA, August 18–22, 2002. Springer, Heidelberg, Germany. http://eprint.iacr.org/2002/120/. (Cited on page 13.)

[Cod14] Codenomicon. *The Heartbleed bug*. http://heartbleed.com, April 2014. (Cited on page 3.)

[DFGS16] Benjamin Dowling, Marc Fischlin, Felix Günther, and Douglas Stebila. *A cryptographic analysis of the TLS 1.3 draft-10 full and pre-shared key handshake protocol*. Cryptology ePrint Archive, Report 2016/081, 2016. http://eprint.iacr.org/2016/081. (Cited on page 3.)

[Duo11] Thai Duong. *BEAST*. http://vnhacker.blogspot.com.au/2011/09/beast.html, September 2011. (Cited on page 3.)

[FG14] Marc Fischlin and Felix Günther. *Multi-stage key exchange and the case of Google’s QUIC protocol*. In Gail-Joon Ahn, Moti Yung, and Ninghui Li, editors, ACM CCS 14: 21st Conference on Computer and Communications Security, pages 1193–1204, Scottsdale, AZ, USA, November 3–7, 2014. ACM Press. (Cited on pages 4, 5, 12, 13, 15, 18, 31, 33, 34, and 36.)

[FKS11] Cédric Fournet, Markulf Kohlweiss, and Pierre-Yves Strub. *Modular code-based cryptographic verification*. In Yan Chen, George Danezis, and Vitaly Shmatikov, editors, ACM CCS 11: 18th Conference on Computer and Communications Security, pages 341–350, Chicago, Illinois, USA, October 17–21, 2011. ACM Press. (Cited on page 5.)

[FGMP15] Marc Fischlin, Felix Günther, Giorgia Azzurra Marson, and Kenneth G. Paterson. *Data is a stream: Security of stream-based channels*. In Rosario Gennaro and Matthew J. B. Robshaw, editors, Advances in Cryptology – CRYPTO 2015, Part II, volume 9216 of Lecture Notes in Computer Science, pages 545–564, Santa Barbara, CA, USA, August 16–20, 2015. Springer, Heidelberg, Germany. (Cited on page 5.)

[Int] Internet Engineering Task Force (IETF). *Charter for Transport Layer Security (TLS) Working Group*. https://datatracker.ietf.org/wg/tls/charter/. (Cited on page 11.)

[Jos15] Simon Josefsson. *Channel bindings for TLS based on the PRF*. https://tools.ietf.org/html/draft-josefsson-sasl-tls-cb-03, March 2015. (Cited on page 11.)

[JKSS12] Tibor Jager, Florian Kohlar, Sven Schäge, and Jörg Schwenk. *On the security of TLS-DHE in the standard model*. In Reihaneh Safavi-Naini and Ran Canetti, editors, Advances in Cryptology – CRYPTO 2012, volume 7417 of Lecture Notes in Computer Science, pages 273–293, Santa Barbara, CA, USA, August 19–23, 2012. Springer, Heidelberg, Germany. (Cited on pages 3, 4, 14, 25, and 48.)

[KMO+14] Markulf Kohlweiss, Ueli Maurer, Cristina Onete, Björn Tackmann, and Daniele Venturi. *(De-)constructing TLS*. Cryptology ePrint Archive, Report 2014/020, 2014. http://eprint.iacr.org/2014/020. (Cited on page 6.)

[KPW13] Hugo Krawczyk, Kenneth G. Paterson, and Hoeteck Wee. *On the security of the TLS protocol: A systematic analysis*. In Ran Canetti and Juan A. Garay, editors, Advances in Cryptology – CRYPTO 2013, Part I, volume 8042 of Lecture Notes in Computer Science, pages 429–448, Santa Barbara, CA, USA, August 18–22, 2013. Springer, Heidelberg, Germany. (Cited on pages 4, 11, 25, and 48.)

[Kra10] Hugo Krawczyk. *Cryptographic extraction and key derivation: The HKDF scheme*. In Tal Rabin, editor, Advances in Cryptology – CRYPTO 2010, volume 6223 of Lecture Notes in Computer Science, pages 631–648, Santa Barbara, CA, USA, August 15–19, 2010. Springer, Heidelberg, Germany. (Cited on page 8.)

[LC13] Adam Langley and Wan-Teh Chang. *QUIC Crypto*. https://docs.google.com/document/d/1g5nIXAIkN_Y-7XJW5K45IblHd_L2f5LTaDUDwvZ5L6g/, June 2013. (Cited on page 12.)

[LLM07] Brian A. LaMacchia, Kristin Lauter, and Anton Mityagin. *Stronger security of authenticated key exchange*. In Willy Susilo, Joseph K. Liu, and Yi Mu, editors, ProvSec 2007: 1st International Conference on Provable Security, volume 4784 of Lecture Notes in Computer Science, pages 1–16, Wollongong, Australia, November 1–2, 2007. Springer, Heidelberg, Germany. (Cited on page 17.)

[MDK14] Bodo Möller, Thai Duong, and Krzysztof Kotowicz. *This POODLE bites: Exploiting the SSL 3.0 fallback*. https://www.openssl.org/~bodo/ssl-poodle.pdf, September 2014. (Cited on page 3.)

[Res15a] E. Rescorla. *The Transport Layer Security (TLS) Protocol Version 1.3 – draft-ietf-tls-tls13-05*. https://tools.ietf.org/html/draft-ietf-tls-tls13-05, March 2015. (Cited on pages 3, 11, and 19.)

[Res15b] E. Rescorla. *The Transport Layer Security (TLS) Protocol Version 1.3 – draft-ietf-tls-tls13-10*. https://tools.ietf.org/html/draft-ietf-tls-tls13-10, October 2015. (Cited on page 3.)

[Res15c] E. Rescorla. *The Transport Layer Security (TLS) Protocol Version 1.3 – draft-ietf-tls-tls13-dh-based*. https://github.com/ekr/tls13-spec/blob/ietf92_materials/draft-ietf-tls-tls13-dh-based.txt, March 2015. (Cited on pages 3, 11, and 26.)

[Ros13] Jim Roskind. *Stream Transport Over UDP: Multiplexed QUIC (Quick UDP Internet Connections)*. https://docs.google.com/document/d/1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34/, December 2013. (Cited on page 12.)

### A Proof of Theorem 5.2: Hybrid Argument

We provide here the details of the hybrid argument showing that if we restrict the adversary in Theorem 5.2 to a single Test query, this reduces its advantage by a factor of at most \( \frac{1}{3n_s} \) (for the three stages in each of the \( n_s \) sessions).

The hybrid argument consists of a sequence of games \( G_\lambda \) for \( \lambda = 0, \ldots, 3n_s \), where \( G_\lambda \) behaves like Multi-Stage,D except that the first \( \lambda \) tested keys are the actual derived keys, and the remaining ones are replaced by random ones (uniformly chosen from \( D \)). Here, however, we assume consistent replacements in the sense that a Test query returns the previously returned key if a partnered session has already been tested. In particular, if for a tested session there is a partner session among the first \( \lambda \) tested sessions, then we return the actual derived key, even if the now tested session comes after the \( \lambda \)-th Test query.

Note that, by construction, identical session identifiers yield identical keys, such that we cannot generate inconsistencies by having partners (with identical identifiers) but different keys. Also observe that \( G_{3n_s} \) equals the unmodified game \( G_{\text{Multi-Stage},D}^{\text{draft-05,A}} \) with test bit \( b_{\text{test}} = 0 \) even if the adversary makes less than \( 3n_s \) Test queries, and that in \( G_0 \) all keys are chosen uniformly at random (but consistent over partnered sessions). This means that \( G_0 \) is identical to \( G_{\text{Multi-Stage},D}^{\text{draft-05,A}} \) with test bit \( b_{\text{test}} = 1 \).

Initially, \( B \) chooses an index \( \lambda \) at random between 1 and \( 3n_s \). It initializes a counter \( c \) to \( c = 0 \) (indicating the number of tested session keys replaced by random values so far) as well as (initially empty) sets \( SKEY1, SKEY2, SKEYe2, SKEY3, SKEYe3 \subseteq \{0, 1\}^* \times [D] \) for identifiers and keys in the support \( [D] \) of \( D \), to keep track of established session keys for a consistent simulation.19

For the hybrid argument, we construct a reduction \( B \) as follows. Initially, \( B \) chooses an index \( \lambda \) at random between 1 and \( 3n_s \). It initializes a counter \( c \) to \( c = 0 \) (indicating the number of tested session keys replaced by random values so far) as well as (initially empty) sets \( SKEY1, SKEY2, SKEYe2, SKEY3, SKEYe3 \subseteq \{0, 1\}^* \times [D] \) for identifiers and keys in the support \( [D] \) of \( D \), to keep track of established session keys for a consistent simulation.19

Basically, \( SKEY1 \) corresponds to session identifier–key pairs of the first stage which \( B \) has already collected, similarly \( SKEY2 \) and \( SKEY3 \) are for the second and third stage, and \( SKEYe2 \) resp. \( SKEYe3 \) for transcripts and second-stage (resp. third-stage) keys where \( B \) cannot decrypt the data in the session identifier (yet), since the data entering the identifier are encrypted for transmission. We usually write \( sid1 \) and \( sid2 = (sid1, sid+2) \) for the session identifiers for the first and second stage, respectively, denoting the second part of the stage-two identifier as \( sid+2 \); we also write \( \{sid+2\} \) to denote the fact that \( B \) only holds an encrypted version of the second part. Recall that \( sid3 = (sid2, \text{“RMS”}) \), hence we can