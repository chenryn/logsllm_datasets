# Messaging Protocols and Security Vulnerabilities in VoIP and Messaging Applications

## 1. Introduction
This document discusses the messaging protocols and security vulnerabilities in various Voice over IP (VoIP) and messaging applications, including WhatsApp, Viber, Tango, eBuddy XMS, WowTalk, Voypi, Forfone, and easyTalk. The focus is on unrequested SMS, enumeration, and other vulnerabilities.

## 2. Messaging Protocols
### 2.1 Protocol Fields
- **Receiver Phone Number**
- **Receiver Country Code**
- **Message**
- **Timestamp**
- **Sender Phone Number**
- **Sender UDID**

### 2.2 Table of Messaging Protocols
| Application | Protocol Fields |
|-------------|-----------------|
| Voypi       | POST            |
| Forfone     | POST            |

## 3. Unrequested SMS
### 3.1 Authentication Mechanisms
Several applications use SMS for authentication to verify the validity of a request and prevent account hijacking. However, these mechanisms can be misused to send verification messages to arbitrary users. In some cases, such as with WhatsApp, the content of the messages can even be modified, allowing free communication or spamming.

### 3.2 General Approach
The general approach involves spamming an arbitrary user with text messages containing validation requests from a messaging service. This can be frustrating for the victim, who constantly receives authorization requests. Most applications have timeouts to prevent mass spamming, but an attacker can still send messages at regular intervals. Targeting emergency numbers can cause significant disruption.

### 3.3 Affected Messengers
- **WhatsApp**
- **Viber**
- **Tango**
- **eBuddy XMS**
- **WowTalk**
- **Voypi**
- **Forfone**
- **easyTalk**

### 3.4 Specific Attacks
#### 3.4.1 WhatsApp
- **Content Injection**: The PIN generated by the phone can be intercepted and modified, allowing an attacker to send SMS messages with nearly arbitrary content.
- **URL for Verification**: `https://s.whatsapp.net/client/iphone/smsproxy.php?to=&auth=`

#### 3.4.2 Viber
- **Phone Call Request**: If the SMS message for authentication is not answered, the attacker can set up an authentication request using a phone call.

## 4. Enumeration
### 4.1 Contact Import
Most applications allow users to upload their entire address book to the server, which compares the contained phone numbers to registered numbers and returns a subset of the contact list.

### 4.2 Threats
- **Identification of Active Phone Numbers**
- **Operating System Identification**: Based on the applications installed on the phone, an attacker can target a system with OS-specific exploits.

### 4.3 Example: WhatsApp
- **Area Code 619**: Covers the southern half of San Diego, CA.
- **Number Range**: 000-0000 to 999-9999.
- **Result**: 21,095 valid phone numbers using WhatsApp were identified.
- **Countermeasure**: Introduce a rate limit to detect and block large uploads.

### 4.4 HeyTell
- **No Address Book Upload**: Enumeration can be done number by number by requesting to send a voice message for each number, but this is restricted by privacy settings.

## 5. Other Vulnerabilities
### 5.1 WhatsApp
- **Status Message Change**: Anyone can change another user's status message via an HTTPS request.
- **URL for Status Update**: `https://s.whatsapp.net/client/iphone/u.php?cc=&me=&s=`

### 5.2 WowTalk
- **Status Message Change**: A user can change the status message for any other user by issuing a POST request.
- **URL for Status Update**: `https://sip.wowtalk.org/wowtalk_srv.php?action=user_status_update&username=&status=`

### 5.3 Voypi
- **User Request**: An HTTP request with the phone number of the victim can retrieve a subset of Voypi users from the victim’s address book.
- **URL for User Request**: `http://msg.voypi.com/myphone_v1/getusers.php?phone=&version=1.2`
- **Message Request**: An attacker can request messages of other users without authentication.
- **URL for Message Request**: `http://msg.voypi.com/myphone_v1/getmsg.php?dbname=8&version=1.2`

## 6. Conclusion
Many mobile messaging and VoIP applications have broken authentication mechanisms, making them vulnerable to account hijacking and other attacks. These vulnerabilities can have a severe impact on user privacy. Future work should include security assessments of upcoming solutions and the development of best practice templates for new applications.

## 7. Acknowledgements
This work was supported by the Austrian Research Promotion Agency under grant 824709 (Kiras) and the Austrian COMET Program (FFG).

## 8. References
[1] M. Balduzzi, C. Platzer, T. Holz, E. Kirda, D. Balzarotti, and C. Kruegel. Abusing social networks for automated user profiling. In Recent Advances in Intrusion Detection: 13th International Symposium, RAID 2010, Ottawa, Ontario, Canada, September 15-17, 2010, Proceedings, volume 6307, page 422. Springer-Verlag New York Inc, 2010.

[2] M. Bishop. Computer Security: Art and Science. Addison-Wesley, 2002.

[3] L. Davi, A. Dmitrienko, A. Sadeghi, and M. Winandy. Privilege escalation attacks on Android. Information Security, pages 346–360, 2011.

[4] W. Diffie and M. Hellman. New directions in cryptography. Information Theory, IEEE Transactions on, 22(6):644–654, 1976.

[5] M. Egele, C. Kruegel, E. Kirda, and G. Vigna. Pios: Detecting privacy leaks in iOS applications. In Network and Distributed System Security Symposium (NDSS), 2011.

[6] W. Enck, P. Gilbert, B. Chun, L. Cox, J. Jung, P. McDaniel, and A. Sheth. Taintdroid: An information-flow tracking system for real-time privacy monitoring on smartphones. In Proceedings of the 9th USENIX conference on Operating systems design and implementation, pages 1–6. USENIX Association, 2010.

[7] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A study of Android application security. In Proc. of the 20th USENIX Security Symposium, 2011.

[8] W. Enck, M. Ongtang, and P. McDaniel. On lightweight mobile phone application certification. In Proceedings of the 16th ACM conference on Computer and communications security, pages 235–245. ACM, 2009.

[9] W. Enck, M. Ongtang, and P. McDaniel. Understanding Android Security. Security & Privacy, IEEE, 7(1):50–57, 2009.

[10] A. Felt, H. Wang, A. Moshchuk, S. Hanna, E. Chin, K. Greenwood, D. Wagner, D. Song, M. Finifter, J. Weinberger, et al. Permission re-delegation: Attacks and defenses. In 20th Usenix Security Symposium, San Francisco, CA, 2011.

[11] K. Fu, E. Sit, K. Smith, and N. Feamster. Dos and Don’ts of Client Authentication on the Web. In Proceedings of the 10th conference on USENIX Security Symposium-Volume 10, pages 19–19. USENIX Association, 2001.

[12] Intrepidus Group. Dropbox for Android vulnerability breakdown. [Online; retrieved Aug 21st, 2011], http://intrepidusgroup.com/insight/2011/08/dropbox-for-android-vulnerability-breakdown/.

[13] B. Lampson, M. Abadi, M. Burrows, and E. Wobber. Authentication in distributed systems: Theory and practice. ACM Transactions on Computer Systems (TOCS), 10(4):265–310, 1992.

[14] M. Marlinspike. Website of sslsniff tool, 2011. [Online; retrieved Jun 21st, 2011], Online at http://www.thoughtcrime.org/software/sslsniff.

[15] B. Neuman and T. Ts’o. Kerberos: An authentication service for computer networks. Communications Magazine, IEEE, 32(9):33–38, 1994.

[16] W. Stallings. Cryptography and network security: principles and practice. Prentice Hall Press, 2010.

[17] Whisper Systems. Whisper systems, 2011. [Online; retrieved Aug 21st, 2011], http://www.whispersys.com/.

[18] A. Whitten and J. Tygar. Why Johnny can’t encrypt: A usability evaluation of PGP 5.0. In Proceedings of the 8th USENIX Security Symposium, pages 169–184, 1999.

[19] XMPP Foundation. XMPP Standard, 2011. [Online; retrieved Jun 21st, 2011], http://xmpp.org/l.