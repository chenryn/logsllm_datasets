### Hardware Black Magic: Building Devices with FPGAs

**Presenter:**
Dr. Fouad Kiamilev, Professor  
CVORG Labs  
Electrical and Computer Engineering  
University of Delaware  
[http://cvorg.ece.udel.edu](http://cvorg.ece.udel.edu)

**Materials:**
Updated slides and video tutorials will be available on our website after the conference: [http://www.cvorg.ece.udel.edu](http://www.cvorg.ece.udel.edu).

**Engagement:**
During our talk, to keep things engaging during compilation, we will be giving away swag. See the slides towards the end for details.

### What is CVORG?
- **Location:** University of Delaware, "Dela-where?"
- **Culture:** We operate like a pirate ship, sailing where our curious minds take us.
- **Interests:** Reverse engineering, custom hardware, red-teaming, security (especially hardware), networking, high-speed communications, and more.
- **Philosophy:** A jack-of-all-trades research group!

### What are FPGAs?
- **Definition:** Field-Programmable Gate Arrays (FPGAs) contain logic blocks that can be reconfigured.
- **Functionality:** This allows an FPGA to act as any moderately complex embedded device.
- **Design Tools:** FPGA design tools cover the entire range of hardware and software design. For example, in the Xilinx world, ISE is used for writing HDL, and EDK is used for writing C code.

### Embracing Hardware
- **Importance:** While it can be intimidating, hardware should be embraced, not avoided.
- **Relevance:** Every piece of software relies on underlying hardware.
- **Efficiency:** Why spend hours hacking firmware when you can build a device to do what you want?

### Embedded Design
- **Physical Layout and Interconnects:** Functional hardware units, interconnects, and controllers.
- **Operating System and Software:** Choices for digital system development.

### Digital System Development Options
- **Processor:**
  - Easy to write code
  - Expensive chips
  - Moderate performance
  - Power-hungry
- **Gate Array (ASIC):**
  - Very high performance
  - Low power consumption
  - Difficult to design
  - Expensive to manufacture
- **Field-Programmable Gate Array (FPGA):**
  - No manufacturing needed (just programming)
  - Easier to design than ASIC
  - High performance
  - Lower power consumption

### Applications of FPGAs
- **Set-Top Boxes**
- **Printers**
- **Networking Equipment**
- **Large Integrated Systems**

### FPGA's Advantage: Application-Specific Speed
- **802.11 Key Cracking:**
  - **PC jc-wepcrack:**
    - 1.25 GHz G4: 150,000/sec
    - 3.6 GHz P4: 300,000/sec
  - **PS3 cbe-client:**
    - 1 SPU 3.2 GHz: 241,000/sec
    - 6 SPU 3.2 GHz: 1,446,000/sec
  - **FPGA pico-wepcrack:**
    - 1 Virtex-4 LX-25: 12,000,000/sec
- **WPA Crack:**
  - 800 MHz P3: 25/sec
  - 3.6 GHz P4: 60/sec
  - 2.16 GHz Intel Duo: 70/sec
  - **FPGA coWPAtty:**
    - 1 Virtex-4 LX-20: 380/sec
    - 1 Virtex-4 LX-25: 430/sec
    - 1 Virtex-4 LX-60: 1,000/sec
- **Data Source:** Shmoocon 3 presentation by H1kari, OpenCiphers

### Steps in FPGA Design
- **From Idea to Operation:**
  - **Designing Logic:**
    - Schematic or HDL source code
  - **Design Entry Tools:**
    - Internal Logic Analyzer
    - State Diagram
    - Embedded Processor
  - **Simulation Test Bench:**
    - VHDL, Verilog, and waveform
  - **Synthesis:**
    - Check syntax
    - View schematics
    - Generate post-synthesis simulation model
  - **Netlist:**
    - Define how logic blocks connect
    - Internal signals vs. external I/O
  - **Implementing Designs:**
    - Translate
    - Floorplan design
    - Map
      - Access reports
      - Analyze timing
      - Manually place components
      - Generate simulation model
    - Place & Route
      - Utilization reports
      - Analyze timing
      - Check I/O standards
      - Manually place & route components
  - **Post-Mapping Simulation Results:**
    - Clock-to-state propagation delay: 1.2ns
  - **Post-Place and Route Simulation Results:**
    - Clock-to-state propagation delay: 4ns

### Configuring Your FPGA
- **Programming Methods:**
  - JTAG
  - USB
  - SPI Flash
  - SPI PROM
- **When to Program:**
  - On boot
  - On demand
- **Recommended Programmer:**
  - Digilent JTAG programmer: Inexpensive and reliable

### The Next ~2.5 Hours
- **Overview:**
  - Explain Xilinx and Altera software (lots of acronyms)
  - Step-by-step demos:
    - Writing simple VHDL
    - Writing C code for a processor written in HDL
    - Creating high-speed interconnects between functional units
- **Demo Boards:**
  - Some are less than $100
  - Others include a touch screen LCD and 5-megapixel camera
- **Free Stuff:**
  - FPGA Design Kits and other hardware
  - Lots of corporate swag
  - A netbook

### Acknowledgments
- **Digilent:**
  - Takes FPGAs and makes useful things from them.
  - Makes our favorite demo board, the Spartan-3E, and cool add-on modules.
- **Altera and Xilinx:**
  - Major FPGA hardware/software manufacturers and other programmable logic devices.
- **Intel:**
  - Provided lots of giveaways.
  - Uses FPGAs for designing and testing CPUs.
- **Dr. David Sincoskie:**
  - Professor and Director, Center on Information and Communications Sciences at UD.
  - Donated funds to make this trip and presentation possible.
- **Educational Support:**
  - If you are in the education field, approach these companies to get support for teaching FPGAs to your students.

Thank you!