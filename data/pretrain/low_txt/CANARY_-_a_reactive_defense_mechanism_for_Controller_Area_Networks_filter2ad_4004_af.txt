### Real-World In-Vehicle Trace in Laboratory Setup

We have successfully ported a real-world in-vehicle trace to our laboratory setup, demonstrating the feasibility of practical use inside vehicles. While numerous studies focus on detecting intrusions on the CAN bus, there is still significant work to be done in designing systems that can effectively prevent such intrusions. We hope that our research paves the way for the development of such systems.

### Acknowledgments

We are grateful to the anonymous referees for their valuable comments, which helped us improve our work. This research was supported by a grant from the Ministry of Research and Innovation, CNCS-UEFISCDI, under project number PN-III-P1-1.1-TE-2016-1317, within PNCDI III (2018-2020). For more information, please visit: http://www.aut.upt.ro/~bgroza/projects/presence/.

### 30th USENIX Security Symposium
USENIX Association
4273

### References

1. Emad Aliwa, Omer Rana, Charith Perera, and Peter Burnap. "Cyberattacks and countermeasures for in-vehicle networks." arXiv preprint arXiv:2004.10781, 2020.
2. AUTOSAR. "Specification of Secure Onboard Communication," 4.3.1 edition, 2017.
3. Burton H Bloom. "Space/time trade-offs in hash coding with allowable errors." Communications of the ACM, 13(7):422–426, 1970.
4. Mehmet Bozdal, Mohammad Samie, Sohaib Aslam, and Ian Jennions. "Evaluation of CAN bus security challenges." Sensors, 20(8):2364, 2020.
5. Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, Stefan Savage, Karl Koscher, Alexei Czeskis, Franziska Roesner, Tadayoshi Kohno, et al. "Comprehensive experimental analyses of automotive attack surfaces." In USENIX Security Symposium. San Francisco, 2011.
6. Kyong-Tak Cho and Kang G Shin. "Error handling of in-vehicle networks makes them vulnerable." In Proc. ACM SIGSAC Conference on Computer and Communications Security, pages 1044–1055. ACM, 2016.
7. Kyong-Tak Cho and Kang G Shin. "Fingerprinting electronic control units for vehicle intrusion detection." In 25th USENIX Security Symposium, 2016.
8. Wonsuk Choi, Kyungho Joo, Hyo Jin Jo, Moon Chan Park, and Dong Hoon Lee. "VoltageIDS: Low-level communication characteristics for automotive intrusion detection system." IEEE Transactions on Information Forensics and Security, 2018.
9. Tsvika Dagan and Avishai Wool. "Parrot, a software-only anti-spoofing defense system for the CAN bus." ESCAR EUROPE, page 34, 2016.
10. Dario Stabili, Mirco Marchetti, and Michele Colajanni. "Detecting attacks to internal vehicle networks through Hamming distance." In IEEE Intl. Annual Conference-Infrastructures for Energy and ICT (AEIT), 2017.
11. H. Giannopoulos, A. M. Wyglinski, and J. Chapman. "Securing vehicular controller area networks: An approach to active bus-level countermeasures." IEEE Vehicular Technology Magazine, 12(4):60–68, Dec 2017.
12. B. Groza and P. Murvay. "Efficient intrusion detection with Bloom filtering in controller area networks." IEEE Transactions on Information Forensics and Security, 14(4):1037–1051, April 2019.
13. Ulrike Hoff and Dan Scott. "Challenges for wiring harness development." CAN Newsletter, pages 14–19, 2020.
14. Tobias Hoppe, Stefan Kiltz, and Jana Dittmann. "Security threats to automotive CAN networks–practical examples and selected short-term countermeasures." In International Conference on Computer Safety, Reliability, and Security, pages 235–248. Springer, 2008.
15. Abdulmalik Humayed and Bo Luo. "Using ID-hopping to defend against targeted DoS on CAN." In 1st International Workshop on Safe Control of Connected and Autonomous Vehicles, page 19–26. ACM, 2017.
16. R. Kurachi, Y. Matsubara, H. Takada, N. Adachi, Y. Miyashita, and S. Horihata. "CaCAN - centralized authentication system in CAN (controller area network)." In 14th Intl. Conf. on Embedded Security in Cars (ESCAR), 2014.
17. Hyunsung Lee, Seong Hoon Jeong, and Huy Kang Kim. "OTIDS: A novel intrusion detection system for in-vehicle network by using remote frame." In Proceedings of PST (Privacy, Security and Trust), 2017.
18. Mirco Marchetti, Dario Stabili, Alessandro Guido, and Michele Colajanni. "Evaluation of anomaly detection for in-vehicle networks through information-theoretic algorithms." In Research and Technologies for Society and Industry Leveraging a better tomorrow (RTSI), pages 1–6. IEEE, 2016.
19. Tsutomu Matsumoto, Masato Hata, Masato Tanabe, Katsunari Yoshioka, and Kazuomi Oishi. "A method of preventing unauthorized data transmission in controller area network." In Vehicular Technology Conference (VTC Spring), 2012 IEEE 75th, pages 1–5. IEEE, 2012.
20. Charlie Miller and Chris Valasek. "A survey of remote automotive attack surfaces." Black Hat USA, 2014.
21. Pal-Stefan Murvay and Bogdan Groza. "DoS attacks on controller area networks by fault injections from the software layer." In Proceedings of the 12th International Conference on Availability, Reliability and Security, ARES '17, pages 71:1–71:10. ACM, 2017.
22. Michael Müter and Naim Asaj. "Entropy-based anomaly detection for in-vehicle networks." In Intelligent Vehicles Symposium (IV), pages 1110–1115. IEEE, 2011.
23. R. Obermaisser and R. Kammerer. "A router for improved fault isolation, scalability, and diagnosis in CAN." In 2010 8th IEEE International Conference on Industrial Informatics, pages 123–129, July 2010.
24. Andrea Palanca, Eric Evenchick, Federico Maggi, and Stefano Zanero. "A stealth, selective, link-layer denial-of-service attack against automotive networks." In Detection of Intrusions and Malware, and Vulnerability Assessment, pages 185–206. Springer, 2017.
25. H. Sivencrona, T. Olsson, R. Johansson, and J. Torin. "RED-CAN/sup TM/: Simulations of two fault recovery algorithms for CAN." In 10th IEEE Pacific Rim Intl. Symposium on Dependable Computing, pages 302–311, 2004.
26. Daisuke Souma, Akira Mori, Hideki Yamamoto, and Yoichi Hata. "Counter attacks for bus-off attacks." In International Conference on Computer Safety, Reliability, and Security, pages 319–330. Springer, 2018.
27. Sasu Tarkoma, Christian Esteve Rothenberg, and Eemil Lagerspetz. "Theory and practice of Bloom filters for distributed systems." IEEE Communications Surveys & Tutorials, 14(1):131–155, 2011.
28. Adrian Taylor, Nathalie Japkowicz, and Sylvain Leblanc. "Frequency-based anomaly detection for the automotive CAN bus." In World Congress on Industrial Control Systems Security (WCICSS), pages 45–49. IEEE, 2015.
29. Haohuang Wen, Qi Alfred Chen, and Zhiqiang Lin. "Plug-N-Pwned: Comprehensive vulnerability analysis of OBD-II dongles as a new over-the-air attack surface in automotive IoT." 2020.
30. Marko Wolf, André Weimerskirch, and Christof Paar. "Security in automotive bus systems." In Workshop on Embedded Security in Cars. Bochum, 2004.
31. W. Wu, R. Kurachi, G. Zeng, Y. Matsubara, H. Takada, R. Li, and K. Li. "IDH-CAN: A Hardware-Based ID Hopping CAN Mechanism With Enhanced Security for Automotive Real-Time Applications." IEEE Access, 6:54607–54623, 2018.
32. Leiming Zhang, Yong Lei, and Qing Chang. "Intermittent connection fault diagnosis for CAN using data link layer information." IEEE Transactions on Industrial Electronics, 64(3):2286–2295, 2016.
33. Leiming Zhang, Fan Yang, and Yong Lei. "Tree-based intermittent connection fault diagnosis for controller area network." IEEE Transactions on Vehicular Technology, 68(9):9151–9161, 2019.

### Figure 21: Oscilloscope Plot of Incoming Frames During Relay Action

#### Appendix A - Testing Relay Impact on Legitimate Bus Traffic

To establish a performance baseline, we first tested the relays and filtering mechanism in the absence of an adversary. Table 3 summarizes the frame loss due to relay actions with or without filtering, measured in terms of left transmitted count (LTC), left failed count (LFC), right transmission count (RTC), and right failed count (RFC). There is a slight increase of 1%-2% in frame loss from the right side, which can be attributed to possible differences in the relay blocks and slight asymmetries in the network traffic. Frame loss is not due to relay actions but rather to buffering, i.e., the Bus Guardian does not manage to send frames as quickly as they arrive from one side to another. This issue is resolved by properly buffering incoming frames. Surprisingly, a 1-frame buffer reduces frame loss to under 1%. For a DoS attack at 1ms, as shown in our experiments, a 32-frame buffer is needed. A buffer of this size also suffices for the adversary-free bus, reducing the number of lost frames to zero. The frame loss when using Bloom filters is almost identical to the case with no filtering, proving that the filters do not affect performance.

Triggering the relays causes a brief disturbance on the bus, affecting frames transmitted during this short period. Figure 21 depicts the effect of switching the relays on the bus. According to the data sheet, the relays we used have an operation time of 5ms, but the actual time during which the bus is unavailable is much less, around 1.5ms. Conveniently, frames destroyed during relay switching are automatically retransmitted thanks to the design of CAN. Specifically, the sender node will get a transmission error and then automatically re-attempt to send the frame on the bus until it succeeds. The error counters remain within acceptable margins, as discussed next.

**Impact on REC and TEC Counters:**
Figure 22 shows the evolution of REC and TEC counters during 100ms and 1s relay triggering rates on one of the channels (the other channel looks identical). In both cases, the counters increase to at most 50, keeping them in the Error Active state, the normal state of CAN nodes. There is still room before the Error Passive state (where nodes can still communicate but will not signal errors) and the Bus Off state. Nonetheless, the counters quickly decrease on the next successful transmissions/receptions, so disturbances are short-lived and have little effect on the ECUs. We also tried triggering the relays at 10ms, and the nodes remained in the Error Active state while counters rarely increased up to 80.

| Buffering | None | 1 Frame | 32 Frames |
|-----------|------|---------|-----------|
| Retransmission | None | None | None |
| Filter Size | 1024 | 1024 | None |
| Adversary | None | Single Side | Single Side |
| Relay Rate (s) | 0.1 | 0.1 | 0.1 |
| LTC | 113673 | 120333 | 120687 |
| RTC | 106356 | 114291 | 114559 |
| LFC | 6856 | 344 | 0 |
| RFC | 8522 | 246 | 0 |
| LF% | 8.0% | 6.0% | 0.22% |
| RF% | 6.0% | 0.28% | 0.0% |

### Figure 23: An Existing In-Vehicle CAN Demonstration from CANoe

#### Appendix B - Further Validations with a CANoe Car Simulation

The first attacks on vehicular CAN buses were demonstrated by Hoppe et al. [14] as early as 2008 using a CANoe simulation linked to a few car components on a bench. As an additional validation for the proposed solution, we use an existing car simulation from CANoe and show that a DoS attack will completely halt all car functions, while CANARY is able to fully mitigate the attack.

Figure 23 shows the default CAN demo from CANoe. Five IDs are broadcast related to car ignition, engine, ABS, and gearbox, with cycles of 20ms (for the ignition) and 50ms for the rest. Figure 24 (i) shows the plots with recorded signals from the car in the case of normal traffic. Then we mounted a full DoS on the bus, and in Figure 24 (ii), we show the effects: the entire bus is locked, and incoming signals halt, i.e., the current value remains the last received value (which is incorrect). In Figure 24 (iii), with 50ms load balancing, the signals are almost identical to those in the adversary-free bus. While there is still a long road ahead from this simulator to a real-world demonstration, this at least proves that the attacks can be efficiently mitigated by CANARY within the simulation.

### Figure 24: CAN Bus Signals as Interpreted by the CANoe Car Simulator

(i) Normal Traffic
(ii) Full DoS
(iii) Load Balancing at 50ms

4276
USENIX Association
30th USENIX Security Symposium