### Frequency Modes and Movements in MEMS-based PUFs

The proposed design includes nine in-plane frequency modes along the x-direction (modes 9b, 9d, 9i) and six out-of-plane frequency modes. The out-of-plane modes are further divided into three translational motions (modes 9c, 9h, 9k) and three rotational motions (modes 9f, 9j, 9l). All of these mode shapes can be driven and measured.

A significant advantage of this dedicated MEMS-based PUF is the ability to design the mechanical structure such that the usable frequency modes are closely grouped and well-defined for PUF applications. This contrasts with the design of a MEMS-based gyroscope, where the focus is on shifting all other frequency modes as far away as possible from the drive and detection modes. Additionally, each frequency mode has an associated quadrature signal, and the design includes six pairs of electrodes, providing a total of twelve frequency modes, twelve quadrature signals, and six electrical capacitances.

### Estimation of Derivable Bits

To estimate the number of bits that can be derived from this structure, we conducted FEM-simulations using ANSYS to calculate the frequency modes. We then determined the capacitances between the electrodes and the quadrature signals using a reduced-order model developed by Gugel [37], which is based on the principle of modal superposition. This method transforms the equation of motion used in the FEM analysis into a system with reduced complexity, solving the eigenvalue problem \((-ω_i^2 M + K)ϕ_i = 0\) with eigenvectors \(ϕ_i\) and eigenvalues \(ω_i\). The result is the transformation matrix \(Φ\) including the eigenvectors \(ϕ_i\). Here, \(M\) is the mass matrix, \(K\) is the stiffness matrix, and \(D\) is the damping matrix.

### Frequency Mode Visualization

The following figures illustrate the 12 frequency modes of our design proposal for a dedicated MEMS-based PUF:

- **Mode 1 @ 9500 Hz (in-plane y)**
- **Mode 2 @ 10059 Hz (in-plane x)**
- **Mode 3 @ 17728 Hz (out-of-plane translational)**
- **Mode 4 @ 33462 Hz (in-plane x)**
- **Mode 5 @ 35299 Hz (in-plane y)**
- **Mode 6 @ 35629 Hz (out-of-plane rotational)**
- **Mode 7 @ 52041 Hz (in-plane y)**
- **Mode 8 @ 57902 Hz (out-of-plane translational)**
- **Mode 9 @ 63992 Hz (in-plane x)**
- **Mode 10 @ 71521 Hz (out-of-plane rotational)**
- **Mode 11 @ 79420 Hz (out-of-plane translational)**
- **Mode 12 @ 96497 Hz (out-of-plane rotational)**

### Limitations and Further Research

We have demonstrated the feasibility of deriving a cryptographic key from a MEMS structure. However, there is a need to extract more bits from the MEMS structure to enhance the key generation process. Two approaches are possible:

1. **Use of Multiple Existing MEMS Sensors:**
   - Integrate several existing MEMS sensors in a sensor system, such as 9 degree-of-freedom sensor nodes, and combine the cryptographic key seeds derived from each sensor.
   - This approach adds value to existing sensors and aims to enhance their capabilities. Further investigations are needed to identify more suitable parameters. For example, gyroscopes may have more than nine frequency modes. Additionally, measuring quadrature signals for each frequency mode can lengthen the derivable keys, as they show little correlation with other parameters. Tests on packaged devices, such as mechanical stress and aging tests, should also be conducted to assess the reliability of different parameters.

2. **Development of a Dedicated MEMS-based PUF:**
   - Design and manufacture a specific MEMS-based PUF optimized for PUF applications, leveraging insights gained from studying existing MEMS sensors.
   - This approach aims to increase variability and derive more bits per parameter. A dedicated MEMS PUF would be an excellent candidate for high-security applications due to its small size and minimal impact on the overall sensor functionality.

### Related Work

**Physical Unclonable Functions (PUFs):** PUFs are categorized into strong PUFs and weak PUFs based on the number of uncorrelated challenge-response pairs (CRPs) they accept. Strong PUFs, like Arbiter PUFs, generate responses by exploiting delay information and are designed to be resistant to modeling attacks. Weak PUFs, such as SRAM PUFs, have fewer CRPs and require additional measures to protect the key against unauthorized access.

- **Arbiter PUFs:** These generate responses by comparing the delays of two paths in an IC. Variants include XOR Arbiter PUFs, Lightweight PUFs, and Feed Forward Arbiter PUFs, which aim to enhance security. However, machine learning techniques have been shown to model Arbiter PUF behavior based on a given set of CRPs.
- **SRAM PUFs:** These utilize the power-up behavior of SRAM cells, which tend to initialize to a random bit. The concatenation of start-up values forms a unique characteristic of each memory array. While SRAM PUFs can deliver a large number of bits, they are vulnerable to invasive and semi-invasive attacks.

**MEMS-based PUFs:** These have received less attention compared to Arbiter and SRAM PUFs. The first MEMS-based PUF was proposed by Rosenfeld et al. [46], using an array of on-chip photodiodes and a translucent coating. Another work by Aysu et al. [14] used deviations in accelerometer self-test and offset values for low-cost device authentication, but noted that the keys did not achieve the uniqueness of SRAM PUFs.

### References

[1] M. Weiser, “The computer for the 21st century—scientific american special issue on communications,” Computers, and Networks (September 1991), 1991.

[2] D. Evans, “The internet of things—how the next evolution of the internet is changing everything,” CISCO white paper, vol. 1, p. 14, 2011.

[3] K. Eldefrawy, G. Tsudik, A. Francillon, and D. Perito, “SMART: secure and minimal architecture for (establishing dynamic) root of trust,” in 19th Annual Network and Distributed System Security Symposium, NDSS 2012, San Diego, California, USA, February 5-8, 2012. The Internet Society, 2012.

[4] F. F. Brasser, B. E. Mahjoub, A. Sadeghi, C. Wachsmann, and P. Koeberl, “Tytan: tiny trust anchor for tiny devices,” in Proceedings of the 52nd Annual Design Automation Conference, San Francisco, CA, USA, June 7-11, 2015. ACM, 2015, pp. 34:1–34:6.

[5] N. Asokan, F. F. Brasser, A. Ibrahim, A. Sadeghi, M. Schunter, G. Tsudik, and C. Wachsmann, “SEDA: scalable embedded device attestation,” in Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security, Denver, CO, USA, October 12-6, 2015, 2015, pp. 964–975.

[6] B. Gassend, D. E. Clarke, M. van Dijk, and S. Devadas, “Silicon physical random functions,” in Proceedings of the 9th ACM Conference on Computer and Communications Security, CCS 2002, Washington, DC, USA, November 18-22, 2002, V. Atluri, Ed. ACM, 2002, pp. 148–160.

[7] J. Lee, D. Lim, B. Gassend, G. Suh, M. van Dijk, and S. Devadas, “A technique to build a secret key in integrated circuits for identification and authentication applications,” in VLSI Circuits, 2004. Digest of Technical Papers. 2004 Symposium on, June 2004, pp. 176–179.

[8] G. Suh and S. Devadas, “Physical unclonable functions for device authentication and secret key generation,” in Design Automation Conference, 2007. DAC ’07. 44th ACM/IEEE, June 2007, pp. 9–14.

[9] J. Guajardo, S. Kumar, G.-J. Schrijen, and P. Tuyls, “FPGA intrinsic PUFs and their use for IP protection,” in Cryptographic Hardware and Embedded Systems—CHES 2007, ser. Lecture Notes in Computer Science, P. Paillier and I. Verbauwhede, Eds. Springer Berlin Heidelberg, 2007, vol. 4727, pp. 63–80.

[10] B. Gassend, M. V. Dijk, D. Clarke, E. Torlak, S. Devadas, and P. Tuyls, “Controlled physical random functions and applications,” ACM Trans. Inf. Syst. Secur., vol. 10, no. 4, pp. 3:1–3:22, Jan. 2008.

[11] D. Samyde, S. P. Skorobogatov, R. J. Anderson, and J. Quisquater, “On a new way to read data from memory,” in Proceedings of the First International IEEE Security in Storage Workshop, SISW 2002, Greenbelt, Maryland, USA, December 11, 2002. IEEE Computer Society, 2002, pp. 65–69.

[12] S. P. Skorobogatov, “Data remanence in flash memory devices,” in Cryptographic Hardware and Embedded Systems—CHES 2005, 7th International Workshop, Edinburgh, UK, August 29 - September 1, 2005, Proceedings, ser. Lecture Notes in Computer Science, J. R. Rao and B. Sunar, Eds., vol. 3659. Springer, 2005, pp. 339–353.

[13] J. A. Halderman, S. D. Schoen, N. Heninger, W. Clarkson, W. Paul, J. A. Calandrino, A. J. Feldman, J. Appelbaum, and E. W. Felten, “Lest we remember: cold-boot attacks on encryption keys,” Commun. ACM, vol. 52, no. 5, pp. 91–98, 2009.

[14] A. Aysu, N. F. Ghalaty, Z. Franklin, M. P. Yali, and P. Schaumont, “Digital fingerprints for low-cost platforms using MEMS sensors,” in Proceedings of the Workshop on Embedded Systems Security, ser. WESS ’13. New York, NY, USA: ACM, 2013.

[15] Y.-J. Chang, W. Zhang, and T. Chen, “Biometrics-based cryptographic key generation.” in IEEE International Conference on Multimedia and Expo (ICME), vol. 3, 2004.

[16] J. M. G. Linnartz and P. Tuyls, “New shielding functions to enhance privacy and prevent misuse of biometric templates,” in Audio-and Video-Based Biometrie Person Authentication, 4th International Conference, AVBPA 2003, Proceedings, ser. LNCS, J. Kittler and M. S. Nixon, Eds., vol. 2688. Springer, June 9-11, 2003, pp. 393–402.

[17] Y. Dodis, L. Reyzin, and A. Smith, “Fuzzy extractors: How to generate strong keys from biometrics and other noisy data,” in Advances in cryptology—Eurocrypt 2004. Springer, 2004, pp. 523–540.

[18] C. Acar and A. Shkel, MEMS vibratory gyroscopes: structural approaches to improve robustness. Springer Science & Business Media, 2008.

[19] U. R¨uhrmair, S. Devadas, and F. Koushanfar, Introduction to Hardware Security and Trust. Springer, 2012, ch. Security Based on Physical Unclonability and Disorder, pp. 65–102.

[20] H. Zhun and C. Hongyi, “A truly random number generator based on thermal noise,” in ASIC, 2001. Proceedings. 4th International Conference on, 2001, pp. 862–864.

[21] G. Taylor and G. Cox, “Behind Intel’s new random-number generator,” IEEE Spectrum, Aug 2011.

[22] M. Wolf and T. Gendrullis, “Design, implementation, and evaluation of a vehicular hardware security module,” in Information Security and Cryptology—ICISC 2011, ser. Lecture Notes in Computer Science, H. Kim, Ed. Springer Berlin Heidelberg, 2012, vol. 7259, pp. 302–318.

[23] T. Morris, “Trusted platform module,” in Encyclopedia of Cryptography and Security. Springer, 2011, pp. 1332–1335.

[24] F. Sch¨on, “Frequenzgenauigkeit von silizium-basierten mikroelektromechanischen, passiv kompensierten resonatoren f¨ur kraftfahrzeug-anwendungen,” Ph.D. dissertation, Technische Fakult¨at der Universit¨at Erlangen-N¨urnberg, 2010.

[25] F. M. Willems, Y. M. Shtarkov, and T. J. Tjalkens, “The context-tree weighting method: basic properties,” Information Theory, IEEE Transactions on, vol. 41, no. 3, pp. 653–664, 1995.

[26] ——, “Context weighting for general finite-context sources,” IEEE transactions on information theory, vol. 42, no. 5, pp. 1514–1520, 1996.

[27] T. Ignatenko, G.-J. Schrijen, B. Skoric, P. Tuyls, and F. Willems, “Estimating the secrecy-rate of physical unclonable functions with the context-tree weighting method,” in Information Theory, 2006 IEEE International Symposium on. IEEE, 2006, pp. 499–503.

[28] Y. Gao, I. Kontoyiannis, and E. Bienenstock, “Estimating the entropy of binary time series: Methodology, some theory and a simulation study,” Entropy, vol. 10, no. 2, pp. 71–99, 2008.

[29] A. Rukhin, J. Soto, J. Nechvatal, M. Smid, and E. Barker, “A statistical test suite for random and pseudorandom number generators for cryptographic applications,” DTIC Document, Tech. Rep., 2001.

[30] V. Van der Leest, G.-J. Schrijen, H. Handschuh, and P. Tuyls, “Hardware intrinsic security from D flip-flops,” in Proceedings of the fifth ACM workshop on Scalable trusted computing. ACM, 2010, pp. 53–62.

[31] E. Barker and J. Kelsey, “NIST draft special publication 800-90B recommendation for the entropy sources used for random bit generation,” 2012.

[32] U. M. Maurer, “A universal statistical test for random bit generators,” Journal of cryptology, vol. 5, no. 2, pp. 89–105, 1992.

[33] Y. Dodis, J. Katz, L. Reyzin, and A. Smith, “Robust fuzzy extractors and authenticated key agreement from close secrets,” in Advances in Cryptology—CRYPTO 2006. Springer, 2006, pp. 232–250.

[34] A. Van Herrewege, S. Katzenbeisser, R. Maes, R. Peeters, A.-R. Sadeghi, I. Verbauwhede, and C. Wachsmann, “Reverse fuzzy extractors: Enabling lightweight mutual authentication for PUF-enabled RFID,” in Financial Cryptography and Data Security. Springer, 2012, pp. 374–389.

[35] P. Koeberl, J. Li, A. Rajan, and W. Wu, “Entropy loss in PUF-based key generation schemes: The repetition code pitfall,” in Hardware-Oriented Security and Trust (HOST), 2014 IEEE International Symposium on. IEEE, 2014, pp. 44–49.

[36] A. Bogdanov, M. Kneˇzevi´c, G. Leander, D. Toz, K. Varıcı, and I. Verbauwhede, “Spongent: A lightweight hash function,” in Cryptographic Hardware and Embedded Systems—CHES 2011. Springer, 2011, pp. 312–325.

[37] D. Gugel, “Ordnungsreduktion in der Mikrosystemtechnik,” Ph.D. dissertation, TU Chemnitz, 2009.

[38] U. R¨uhrmair, J. S¨olter, and F. Sehnke, “On the foundations of physical unclonable functions,” Cryptology ePrint Archive, Report 2009/277, 2009, http://eprint.iacr.org/.

[39] F. Armknecht, R. Maes, A. Sadeghi, O.-X. Standaert, and C. Wachsmann, “A formalization of the security features of physical functions,” in Security and Privacy (SP), 2011 IEEE Symposium on, May 2011, pp. 397–412.

[40] M. Majzoobi, F. Koushanfar, and M. Potkonjak, “Lightweight secure PUFs,” in Computer-Aided Design, 2008. ICCAD 2008. IEEE/ACM International Conference on, Nov 2008, pp. 670–673.

[41] U. R¨uhrmair, F. Sehnke, J. S¨olter, G. Dror, S. Devadas, and J. Schmidhuber, “Modeling attacks on physical unclonable functions,” in Proceedings of the 17th ACM Conference on Computer and Communications Security, ser. CCS ’10. New York, NY, USA: ACM, 2010, pp. 237–249.

[42] U. R¨uhrmair, J. S¨olter, F. Sehnke, X. Xu, A. Mahmoud, V. Stoyanova, G. Dror, J. Schmidhuber, W. Burleson, and S. Devadas, “PUF modeling attacks on simulated and silicon data,” IEEE Transactions on Information Forensics and Security, vol. 8, no. 11, pp. 1876–1891, 2013.

[43] D. Nedospasov, J.-P. Seifert, C. Helfmeier, and C. Boit, “Invasive PUF analysis,” in Fault Diagnosis and Tolerance in Cryptography (FDTC), 2013 Workshop on. IEEE, 2013, pp. 30–38.

[44] C. Helfmeier, C. Boit, D. Nedospasov, and J.-P. Seifert, “Cloning physically unclonable functions,” in Hardware-Oriented Security and Trust (HOST), 2013 IEEE International Symposium on, June 2013, pp. 1–6.

[45] U. R¨uhrmair and D. Holcomb, “PUFs at a glance.” in Proceedings—Design, Automation and Test in Europe, DATE, 2014.

[46] K. Rosenfeld, E. Gavas, and R. Karri, “Sensor physical unclonable functions,” in Hardware-Oriented Security and Trust (HOST), 2010 IEEE International Symposium on, June 2010, pp. 112–117.