### The RGB-Mix Mechanism and (n-1) Attacks

The RGB-mix mechanism [18] utilizes heartbeat loop messages to detect (n-1) attacks [45]. Each mix node sends heartbeat messages back to itself, and if an (n-1) attack is detected, the mix injects cover traffic to confuse the adversary. However, this mechanism's key assumption is limited to ensuring anonymity among mix peers.

### Mixmaster and Mixminion: Infrastructure of Pingers

Mixmaster [39] and Mixminion [14] employed an infrastructure of pingers [43], which are special clients that send probe traffic through different paths in the mix network and publicly record the observed reliability of delivery. Users can use these reliability statistics to choose which nodes to use.

### Recent Proposals for Anonymous Communication

Recent proposals for anonymous communication have also incorporated built-in reliability mechanisms. For example, the Loopix [44] mix-network system uses loop cover traffic to detect (n-1) attacks, both for clients and mixes. However, this approach is limited to detecting only aggressive (n-1) attacks, and mix nodes that systematically drop single packets can operate undetected. Additionally, the authors do not specify any follow-up actions or penalties for misbehaving mixes.

### The Atom Messaging System

The Atom [33] messaging system is an alternative design to traditional mix networks and uses trap messages to detect misbehaving servers. The sender submits a trap ciphertext along with the message ciphertext, and later uses it to check whether the relaying server modified the message. However, the trap message does not identify which mix failed. Moreover, Atom does not describe any technique to exclude malicious servers, and a failed trap only protects against the release of secret keys.

### Other Approaches: Secure Electronic Elections

The literature on secure electronic elections has focused on reliable mixing to ensure the integrity of election results using zero-knowledge proofs [3, 6, 29] to verify correct shuffling. However, these methods rely on computationally intensive primitives and require re-encryption mix networks, significantly increasing performance costs and limiting their applicability. More efficient proofs restrict message sizes to a single group element, which is too small for email or instant messaging.

### Mix-Nets with Randomized Partial Checking (RPC)

An alternative approach for verifying the correctness of the mixing operation is the use of mix-nets with randomized partial checking (RPC) [30]. This cut-and-choose technique detects packet drops in both Chaumian and re-encryption mixnets but requires interactivity and considerable network bandwidth. Additionally, mix nodes must routinely disclose information about their input/output relations, which was later proven to be flawed [32].

### Limitations and Future Work

#### Challenges for Making Miranda Practical

The Miranda design includes several simplifying assumptions: (1) a fixed set of mixes, (2) a majority of benign mixes, (3) reliable communication and processing, and (4) synchronized clocks. These assumptions are limiting for practical deployment. Future work should aim to avoid these assumptions while maintaining tight security analysis and properties.

Avoiding the clock synchronization assumption seems straightforward by adopting a secure clock synchronization protocol. However, avoiding the other three assumptions is more challenging.

First, consider assumptions (1) and (2): a fixed set of mixes with a majority of benign mixes. These assumptions are central to Miranda's design, as its goal is to penalize active attackers. If the adversary can retire penalized malicious nodes and replace them with new nodes, there is no real gain in penalizing or exposing the adversary. A practical mixnet must allow a dynamic set of mixes for scalability and churnâ€”mixes joining and leaving over time.

Next, consider the third assumption: reliable communication and processing. In practice, failures will occur, especially due to intentional DoS attacks. Future work may address this challenge by minimizing failures through robust underlying mechanisms and refined assumptions and analysis, such as considering incentives and game-theory analysis, to ensure the system is robust to 'reasonable' levels of failures.

These issues are significant challenges for future research, essential for implementing Miranda in practical systems. For example, such research must develop a reasonable model to allow nodes to join (or re-join) without allowing the adversary to gain a majority by adding many mixes, as in Sybil attacks, and to retain the impact of removing corrupt mixes.

#### Extension to Continuous Mixnet

Miranda is designed for a synchronous mixnet. Recent research in mix networks has shown that continuous-time mixes, especially pool mixes, may allow low-latency communication [44]. Future work may investigate how to integrate Miranda with continuous mixnets like Loopix [44]. Such integration would raise challenges, such as determining when a mix should receive a response from the next mix without leaking information to an attacker.

### Conclusion

In this work, we revisited the problem of protecting mix networks against active attacks. Our analysis showed that active attacks can significantly increase the adversary's chances of de-anonymizing users. Miranda achieves better efficiency than previous designs while quickly detecting and mitigating active adversaries. Miranda employs previously studied techniques such as packet receipts and loop traffic, alongside novel techniques to ensure each dropped packet penalizes the adversary. We focus on problematic links between mixes rather than the mixes themselves and investigate how community detection enhances our mechanism. The overall contribution of our work is an efficient and scalable detection and mitigation of active attacks. For additional details, including implementation and efficiency, see [34].

### Acknowledgments

We are grateful to our shepherd, Roger Dingledine, and the anonymous reviewers for their helpful and constructive feedback. This work was partially supported by the IRIS Grant Ref: EP/R006865/1 and an endowment from the Comcast corporation. The opinions expressed in the paper are those of the researchers and not of the universities or sources of support.

### References

[1] Nym technologies, 2019. https://nymtech.net/.
[2] Panoramix project, 2019. https://panoramix.me/.
[3] Masayuki Abe. Mix-networks on permutation networks. In International Conference on the Theory and Application of Cryptology and Information Security, 1999.
[4] Dakshi Agrawal and Dogan Kesdogan. Measuring anonymity: The disclosure attack. IEEE Security & Privacy, 2003.
[5] Anonymous. QuicR: extending Quic for resiliency to extreme packet losses, 2019. Available from the authors.
[6] Stephanie Bayer and Jens Groth. Efficient zero-knowledge argument for correctness of a shuffle. In Advances in Cryptology - EUROCRYPT 2012 - 31st Annual International Conference on the Theory and Applications of Cryptographic Techniques, 2012.
[7] Mihir Bellare, Juan A. Garay, and Tal Rabin. Distributed pseudo-random bit generators: A new way to speed-up shared coin tossing. In Proceedings of the 15th Annual ACM Symposium on Principles of Distributed Computing (PODC), 1996.
[8] Oliver Berthold, Andreas Pfitzmann, and Ronny Standtke. The disadvantages of free mix routes and how to overcome them. In Designing Privacy Enhancing Technologies. Springer, 2001.
[9] Nikita Borisov, George Danezis, Prateek Mittal, and Parisa Tabriz. Denial of service or denial of security? In Proceedings of the 14th ACM conference on Computer and communications security, 2007.
[10] Carole Cadwalladr and Emma Graham-Harrison. Revealed: 50 million Facebook profiles harvested for Cambridge Analytica in major data breach. The Guardian, 2018.
[11] David Chaum. The dining cryptographers problem: Unconditional sender and recipient untraceability. Journal of cryptology, Springer, 1988.
[12] David L Chaum. Untraceable electronic mail, return addresses, and digital pseudonyms. Communications of the ACM, 1981.
[13] Henry Corrigan-Gibbs, Dan Boneh, and David Mazieres. Riposte: An anonymous messaging system handling millions of users. 2015.
[14] George Danezis, Roger Dingledine, and Nick Mathewson. Mixminion: Design of a type III anonymous remailer protocol. In IEEE Symposium on Security and Privacy, 2003.
[15] George Danezis and Ian Goldberg. Sphinx: A compact and provably secure mix format. In 30th IEEE Symposium on Security and Privacy (S&P), 2009.
[16] George Danezis, Chris Lesniewski-Laas, M. Frans Kaashoek, and Ross J. Anderson. Sybil-resistant DHT routing. In 10th European Symposium on Research in Computer Security ESORICS, 2005.
[17] George Danezis and Prateek Mittal. Sybilinfer: Detecting sybil nodes using social networks. In Proceedings of the Network and Distributed System Security Symposium, NDSS, 2009.
[18] George Danezis and Len Sassaman. Heartbeat traffic to counter (n-1) attacks: red-green-black mixes. In Proceedings of the 2003 ACM workshop on Privacy in the electronic society, 2003.
[19] Harry Davies. Ted Cruz using firm that harvested data on millions of unwitting Facebook users. 2015.
[20] Roger Dingledine, Michael J Freedman, David Hopwood, and David Molnar. A reputation system to increase mix-net reliability. In International Workshop on Information Hiding, 2001.
[21] Roger Dingledine, Vitaly Shmatikov, and Paul Syverson. Synchronous batching: From cascades to free routes. In International Workshop on Privacy Enhancing Technologies, 2004.
[22] Roger Dingledine and Paul Syverson. Reliable MIX cascade networks through reputation. In International Conference on Financial Cryptography, 2002.
[23] Danny Dolev and H. Raymond Strong. Authenticated algorithms for Byzantine agreement. SIAM Journal on Computing, 1983.
[24] Nethanel Gelernter, Amir Herzberg, and Hemi Leibowitz. Two cents for strong anonymity: the anonymous post-office protocol. 2018.
[25] Rosario Gennaro, StanisÅ‚aw Jarecki, Hugo Krawczyk, and Tal Rabin. Robust threshold DSS signatures. In Advances in Cryptologyâ€”EUROCRYPT, 1996.
[42] Lasse Overlier and Paul Syverson. Locating hidden servers. In IEEE Symposium on Security and Privacy, 2006.
[43] Peter Palfrader. Echolot: a pinger for anonymous remailers, 2002.
[44] Ania M. Piotrowska, Jamie Hayes, Tariq Elahi, Sebastian Meiser, and George Danezis. The Loopix anonymity system. In 26th USENIX Security Symposium, 2017.
[45] Andrei Serjantov, Roger Dingledine, and Paul Syverson. From a trickle to a flood: Active attacks on several mix types. In International Workshop on Information Hiding, 2002.
[46] Victor Shoup. Practical threshold signatures. In International Conference on the Theory and Application of Cryptographic Techniques, 2000.
[47] Paul Syverson, Gene Tsudik, Michael Reed, and Carl Landwehr. Towards an analysis of onion routing security. In Designing Privacy Enhancing Technologies. Springer, 2001.
[48] Jelle van den Hooff, David Lazar, Matei Zaharia, and Nickolai Zeldovich. Vuvuzela: Scalable private messaging resistant to traffic analysis. In Proceedings of the 25th Symposium on Operating Systems Principles, SOSP. ACM, 2015.
[26] Oded Goldreich, Silvio Micali, and Avi Wigderson. How to play any mental game or A completeness theorem for protocols with honest majority. In Proceedings of the 19th Annual ACM Symposium on Theory of Computing, 1987.
[27] Glenn Greenwald and Ewen MacAskill. NSA Prism program taps in to user data of Apple, Google and others. 2013.
[28] Markus Jakobsson. Flash mixing. In Proceedings of the 18th ACM symposium on Principles of distributed computing, 1999.
[29] Markus Jakobsson and Ari Juels. Millimix: Mixing in small batches. Technical report, DIMACS Technical report, 1999.
[30] Markus Jakobsson, Ari Juels, and Ronald L Rivest. Making mix nets robust for electronic voting by randomized partial checking. In USENIX Security Symposium, 2002.
[31] Don Johnson, Alfred Menezes, and Scott Vanstone. The elliptic curve digital signature algorithm (ECDSA). International journal of information security, 2001.
[32] Shahram Khazaei and Douglas WikstrÃ¶m. Randomized partial checking revisited. In RSA Conference. Springer, 2013.
[33] Albert Kwon, Henry Corrigan-Gibbs, Srinivas Devadas, and Bryan Ford. Atom: Horizontally scaling strong anonymity. In Proceedings of the 26th Symposium on Operating Systems Principles, 2017.
[34] Hemi Leibowitz, Ania Piotrowska, George Danezis, and Amir Herzberg. No right to remain silent: Isolating malicious mixes - full version. https://eprint.iacr.org/2017/1000.
[35] Shengyun Liu, Christian Cachin, Vivien QuÃ©ma, and Marko Vukolic. XFT: Practical fault tolerance beyond crashes. 2015.
[36] Nancy A Lynch. Distributed algorithms. Elsevier, 1996.
[37] Ralph Merkle. A digital signature based on a conventional encryption function. In Advances in Cryptologyâ€”CRYPTO, 1987.
[38] Masashi Mitomo and Kaoru Kurosawa. Attack for flash mix. In International Conference on the Theory and Application of Cryptology and Information Security, 2000.
[39] Ulf MÃ¶ller, Lance Cottrell, Peter Palfrader, and Len Sassaman. Mixmaster protocol â€“ version 2. IETF Draft, 2004.
[40] Steven J Murdoch. Hot or not: Revealing hidden services by their clock skew. In Proceedings of the 13th ACM conference on Computer and communications security, 2006.
[41] Steven J Murdoch and George Danezis. Low-cost traffic analysis of Tor. In IEEE Symposium on Security and Privacy, 2005.

---

This optimized version of the text aims to improve clarity, coherence, and professionalism, making it easier to read and understand.