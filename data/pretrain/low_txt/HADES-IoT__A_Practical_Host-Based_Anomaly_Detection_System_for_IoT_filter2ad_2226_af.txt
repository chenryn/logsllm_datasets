### 7.3 Potential Attacks on HADES-IoT

#### Buffer Overflow and Code Injection
Buffer overflow attacks exploit an unhandled write to a program’s buffer, allowing the attacker to write malicious data beyond the buffer's boundary. Code injection attacks, on the other hand, take advantage of improper input validation, enabling the injection of malicious code into the program. In both scenarios, an attacker can alter the program’s execution flow by crafting a specific payload and writing it to memory.

HADES-IoT does not inherently protect against these types of attacks because it does not check the memory content of processes. However, the attacker's goal is crucial in determining the system's effectiveness. If the attacker aims to manipulate a vulnerable service without executing any additional programs, HADES-IoT will not detect the attack. Conversely, if the attacker intends to execute a remote shell command (e.g., opening a reverse shell or downloading malicious binaries via an FTP client), the attack will fail because these programs would not be included in the whitelist. Although HADES-IoT cannot detect the initial phase of such an attack, it will still protect the IoT device when an "anomalous" binary is executed.

#### Utilization of Whitelisted Programs
If an attacker is aware of the whitelisted programs, they could potentially chain these programs to conduct an attack similar to return-oriented programming (ROP). Since HADES-IoT only checks the parameters of programs in specific cases, such an attack might go undetected. This type of attack is possible given HADES-IoT’s design, and while it cannot be fully prevented, it can be mitigated by implementing more fine-grained logic in the whitelist.

### 7.4 Possible Extensions

In this section, we present potential extensions aimed at enhancing the practical features of HADES-IoT. These features are not part of the proof-of-concept, as they do not directly improve detection performance.

#### Malware Collection
Malware often deletes itself after execution to hide traces. HADES-IoT, by pausing program execution in its initial stage, can retrieve the binary of malware before it is potentially deleted. This capability can be added to the reporting subsystem, allowing HADES-IoT to collect and report suspicious binaries. This feature would enable the collection of the latest malware samples.

#### Automated Extraction of Configuration
To ensure compatibility with a Linux kernel on a specific IoT device, certain configuration options must be extracted from the device and stored in the kernel configuration file. The configuration file, which contains information about all set options, can be parsed and adjusted automatically instead of being manually configured. By running a script that connects to the IoT device, extracts the necessary data, and modifies the stock configuration file of a vanilla Linux, the kernel configuration process can be automated. The resulting configuration file can then be used for compiling the required kernel parts, ensuring proper compilation of HADES-IoT.

### 8. Related Work

In this section, we discuss host-based intrusion detection systems (IDS) for IoT devices.

- **Yoon et al. [32]**: They propose a lightweight, anomaly-based approach using the distribution of system call frequencies. By performing cluster analysis, they first learn the benign execution context and then monitor the device in real-time to detect anomalies. However, their method only considers attacks that alter system calls in benign programs and uses only one sample for evaluation.
  
- **Smart Meters IDS [28]**: This research focuses on smart meters and uses system call sequences, where the benign program is represented by a finite state machine (FSM). The system calls are captured by the `strace` utility, incurring only 1% performance overhead. The second component, which compares the captured system calls with the FSM, is more resource-intensive and is executed every 10 seconds. The IDS incurs an overhead of only 4%, but it is designed for smart meters and requires annotations from developers.

- **Agarwal et al. [1]**: They present a concept for anomaly detection using context-sensitive features based on Ball-Larus path profiling. This approach requires source code instrumentation to record function calls during execution. The study includes a preliminary evaluation of the overhead for two programs—`tcpecho` and a consumer health IoT gateway—but does not evaluate detection performance.

- **An et al. [2]**: They propose behavioral anomaly detection for home routers using three semi-supervised algorithms (principal component analysis, one-class SVM, and a naïve detector based on unseen n-grams) with captured kernel-level system calls. The trained classifiers achieved a 100% detection rate with a low false alarm rate, but the overhead was not evaluated. The downside is that full kernel recompilation with enabled `ftrace` support is required.

- **Su et al. [27]**: They present a lightweight image recognition technique for malware classification, transforming a program’s binary into 64x64 pixel images. These images are then analyzed by a convolutional neural network to determine whether the program is malicious or benign. The authors achieved 94% accuracy for two-class classification and 81% for three-class classification, but their approach is susceptible to complex code obfuscation.

- **NEC [21]**: NEC announced a tamper detection technology for IoT devices leveraging ARM’s TrustZone. The detection method, based on memory inspection, claims to check only 2kB of memory and can detect tampering during device operation and on first activation. However, a thorough explanation and evaluation are lacking.

### 9. Conclusion

In this paper, we introduced HADES-IoT, a host-based anomaly detection system for IoT devices that provides proactive detection and tamper-proof resistance. HADES-IoT is based on whitelisting and utilizes system call interception within a loadable kernel module (LKM). This allows HADES-IoT to gain complete control over the execution of all user space programs, preventing the execution of unauthorized binaries. HADES-IoT is lightweight in terms of size, memory, and CPU demands, with computational overhead influenced only by the number of spawned processes, not by operations with the whitelist. In our evaluation, we demonstrated that an accurate device profile can be extracted in an hour, and HADES-IoT achieved 100% effectiveness in detecting five types of attacks.

### References

[1] Akash Agarwal, Samuel Dawson, Derrick McKee, Patrick Eugster, Matthew Tancreti, and Vinaitheerthan Sundaram. 2017. Detecting Abnormalities in IoT Program Executions through Control-Flow-Based Features. In Proceedings of the Second International Conference on Internet-of-Things Design and Implementation. ACM, 339–340.

[2] Ni An, Alexander Duff, Gaurav Naik, Michalis Faloutsos, Steven Weber, and Spiros Mancoridis. 2017. Behavioral anomaly detection of malware on home routers. In Malicious and Unwanted Software (MALWARE), 2017 12th International Conference on. IEEE, 47–54.

[3] Manos Antonakakis, Tim April, Michael Bailey, Matt Bernhard, Elie Bursztein, Jaime Cochran, Zakir Durumeric, J Alex Halderman, Luca Invernizzi, Michalis Kallitsis, et al. 2017. Understanding the Mirai botnet. In USENIX Security Symposium. 1092–1110.

[10] Neil J. Gunther. 2010. UNIX Load Average, Part 1. https://www.teamquest.com/import/pdfs/whitepaper/ldavg1.pdf.

[11] Ivan Homoliak. 2016. Intrusion Detection in Network Traffic. Ph.D. Dissertation. Faculty of Information Technology, University of Technology Brno. https://doi.org/10.13140/RG.2.2.25780.24963/1.

[12] Ivan Homoliak, Martin Teknøs, Martín Ochoa, Dominik Breitenbacher, Saeid Hosseini, and Petr Hanacek. 2018. Improving Network Intrusion Detection Classifiers by Non-payload-Based Exploit-Independent Obfuscations: An Adversarial Approach. EAI Endorsed Transactions on Security and Safety 5, 17 (December 2018). https://doi.org/10.4108/eai.10-1-2019.156245.

[13] George V. Hulme. 2012. Embedded system security much more dangerous, costly than traditional software vulnerabilities. Retrieved September 05, 2018, from http://www.csoonline.com/article/2131478/critical-infrastructure/embedded-system-security-much-more-dangerous-costly-than-traditional-softwa.html.

[4] Ankit Anubhav. 2018. Understanding the IoT Hacker – A Conversation With Owari/Sora IoT Botnet Author. https://blog.newskysecurity.com/understanding-the-iot-hacker-a-conversation-with-owari-sora-iot-botnet-author-117feff56863.

[5] Mark Boltz, Mika Jalava, and Jack Walsh. 2010. New Methods and Combinatorics for Bypassing Intrusion Prevention Technologies. Technical Report. Stonesoft.

[6] David Canellis. 2018. Crypto-jacking epidemic spreads to 30K routers across India. Retrieved October 19, 2018, from https://thenextweb.com/hardfork/2018/10/05/crypto-jacking-malware-coinhive/.

[7] Catalin Cimpanu. 2016. You Can Now Rent a Mirai Botnet of 400,000 Bots. Retrieved October 19, 2018, from https://www.bleepingcomputer.com/news/security/you-can-now-rent-a-mirai-botnet-of-400-000-bots/.

[8] Prahlad Fogla, Monirul I. Sharif, Roberto Perdisci, Oleg M. Kolesnikov, and Wenke Lee. 2006. Polymorphic Blending Attacks. In USENIX Security Symposium. 241–256.

[9] Dan Gooding. 2018. New IoT botnet offers DDoSes of once-unimaginable sizes for $20. Retrieved October 19, 2018, from https://arstechnica.com/information-technology/2018/02/new-iot-botnet-offers-ddoses-of-once-unimaginable-sizes-for-20/.

[14] Leslie Lamport. 1979. Constructing digital signatures from a one-way function. Technical Report. Technical Report CSL-98, SRI International Palo Alto.

[15] Bellevue Linux. 2006. System Call Definition. Retrieved September 05, 2018, from http://www.linfo.org/system_call.html.

[16] Knud Lasse Lueth. 2018. State of the IoT 2018: Number of IoT devices now at 7B – Market accelerating. https://iot-analytics.com/state-of-the-iot-update-q1-q2-2018-number-of-iot-devices-now-7b/.

[17] Fernando Merces. 2018. Cryptocurrency-Mining Malware Targeting IoT, Being Offered in the Underground. Retrieved October 19, 2018, from https://blog.trendmicro.com/trendlabs-security-intelligence/cryptocurrency-mining-malware-targeting-iot-being-offered-in-the-underground/.

[18] Ralph C. Merkle. 1989. A certified digital signature. In Conference on the Theory and Application of Cryptology. Springer, 218–238.

[19] Rob van der Meulen. 2017. Gartner Says 8.4 Billion Connected “Things” Will Be in Use in 2017, Up 31 Percent From 2016. http://www.gartner.com/newsroom/id/3598917.

[20] Kerrisk Michael. 2017. Linux Programmer’s Manual. Retrieved September 05, 2018, from http://man7.org/linux/man-pages/man2/syscalls.2.html.

[21] NEC. 2018. NEC develops tamper detection technology to protect IoT devices. Retrieved October 23, 2018, from https://www.nec.com/en/press/201804/global_20180402_01.html.

[22] Richard Newell. 2016. The Biggest Security Threats Facing Embedded Designers. Retrieved September 05, 2018, from http://www.electronicdesign.com/iot/biggest-security-threats-facing-embedded-designers.

[23] Nuvias. 2017. The Cost of Renting an IoT Botnet. Retrieved October 19, 2018, from https://www.nuviasblog.com/main-category/security/cost-renting-iot-botnet/.

[24] Yin Minn Pa Pa, Shogo Suzuki, Katsunari Yoshioka, Tsutomu Matsumoto, Takahiro Kasama, and Christian Rossow. 2016. Iotpot: A novel honeypot for revealing current IoT threats. Journal of Information Processing 24, 3 (2016), 522–533.

[25] Ryan Roemer, Erik Buchanan, Hovav Shacham, and Stefan Savage. 2012. Return-oriented programming: Systems, languages, and applications. ACM Transactions on Information and System Security (TISSEC) 15, 1 (2012), 2.

[26] Dimitrios N. Serpanos and Artemios G. Voyiatzis. 2013. Security Challenges in Embedded Systems. ACM Trans. Embed. Comput. Syst. 12, 1s, Article 66 (March 2013), 10 pages. https://doi.org/10.1145/2435227.2435262.

[27] Jiawei Su, Vargas Danilo Vasconcellos, Sanjiva Prasad, Sgandurra Daniele, Yaokai Feng, and Kouichi Sakurai. 2018. Lightweight Classification of IoT Malware Based on Image Recognition. In 2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC). IEEE, 664–669.

[28] Farid Molazem Tabrizi and Karthik Pattabiraman. 2014. A model-based intrusion detection system for smart meters. In High-Assurance Systems Engineering (HASE), 2014 IEEE 15th International Symposium on. IEEE, 17–24.

[29] OWASP IoT Security Team. 2018. OWASP IoT Top 10. https://www.owasp.org/images/1/1c/OWASP-IoT-Top-10-2018-final.pdf.

[30] TrendMicro. 2018. Rid-dled with 19 Vulnerabilities. Retrieved October 22, 2018, from https://blog.trendmicro.com/trendlabs-security-intelligence/vpnfilter-affected-devices-still-riddled-with-19-vulnerabilities/.

[31] Giovanni Vigna, William Robertson, and Davide Balzarotti. 2004. Testing Network-based Intrusion Detection Signatures Using Mutant Exploits. In 11th ACM conference on Computer and Communications Security (CCS). ACM, 21–30.

[32] Man-Ki Yoon, Sibin Mohan, Jaesik Choi, Mihai Christodorescu, and Lui Sha. 2017. Learning Execution Contexts from System Call Distribution for Anomaly Detection in Smart Embedded System. In Internet-of-Things Design and Implementation (IoTDI), 2017 IEEE/ACM Second International Conference on. IEEE, 191–196.

[33] Jin young Cho. 2017. Linux Takes Lead in IoT Market Keeping 80% Market Share. Retrieved September 05, 2018, from http://www.businesskorea.co.kr/news/articleView.html?idxno=18525.