# System Call and Network Analysis for Attack Detection

## 1. Introduction
This section provides an overview of the system call and network analysis methods used to detect and analyze specific types of attacks, including the OpenSSH, Tcpdump, and Neptune attacks.

### 1.1 System Call Analysis
- **E2(s6)**: `syscall` with return.
  - **Log Elements**: [U1, C1]
- **E2(ua)**: `syscall` with argument.
  - **Log Elements**: [U1, C1/C2]
- **E2(s5)**: `syscall` with argument.
  - **Log Elements**: [U1, C1/C2]
- **E2(s6)**: `syscall` with argument.
  - **Log Elements**: [U1, C1/C2]
- **E2(sr)**: `syscall` with argument.
  - **Log Elements**: 
    1. dst-port(7000), data-len
    2. dst-port, src-port, srcIP, dstIP
    3. dst-port(X), srcIP, dstIP
    4. dst-port(7000), data
    5. src-port(X), data
    6. process name(tcpdump), execve()
    7. process name(tcpdump), getuid() (or getgid(), geteuid(), getegid())
    8. process name(tcpdump), setresuid() (or setregid())
    9. process name(tcpdump), personality()
    10. process name(tcpdump), access()
    11. process name(tcpdump, sh, xterm), execve(), ...
    12. process name(tcpdump, sh), pid, getuid() with return value
    13. process name(tcpdump), recvfrom(..., arg2, ...)
    14. process name(tcpdump, sh), pid, execve(arg1, ...)
    15. process name(tcpdump, sh), pid, read(..., arg2, ...)

### 1.2 Indicators and Log Data
- **Indicator 1**: Checks for incoming packets on port 7000.
- **Indicator 2**: Checks for a large number of SYN packets to the same port without responses.
- **Indicator 3**: Checks for many packets received by `tcpdump` but few other processes activated.

## 2. Neptune Attack Analysis
The Neptune attack generates significant entries in the network traffic log, while both `syslog` and `syscall` logs contain very few useful entries. This is because it is a network protocol attack that does not activate new processes. The only process revealing the attack is `tcpdump`.

### 2.1 Events and Manifestations
- **Meta-Event 1**:
  - **User Action**: Connect to port to test if it is open.
  - **System Response**: Answer from service on port.
- **Meta-Event 1(v2)**:
  - **User Action**: Port scan.
  - **System Response**: Answer from service on port.
- **Meta-Event 2**:
  - **User Action**: Send 1000 attack packets.
  - **System Reaction**: Receive packets, fill memory buffer.
  - **System Response**: No response.
- **Meta-Event 3**:
  - **User Action**: Test port.
  - **System Reaction**: Receive SYN packet, full buffer prevents answer.
  - **System Response**: No response.

### 2.2 Summary of Indicators and Useful Log Data
- **E2(ua)**: `syscall` sequence.
  - **Log Elements**: dst-port, TCP-flags, srcIP
  - **Indicator Class**: [U1, C2]
- **E2(sr)**: `syscall` sequence.
  - **Log Elements**: dst-port, src-port, TCP-flags, srcIP, dstIP
  - **Indicator Class**: [U2, C2]

## 3. Discussion of Attack Analysis
The analysis of three types of attacks and three types of log sources shows that the methodology is feasible for different types of attacks and log sources. Automation of the manifestation extraction would be beneficial due to its time-consuming nature.

### 3.1 Questions and Log Elements
- **When did it happen?**
  - **Log Elements**: date and time
- **Who did it?**
  - **Log Elements**: user name
- **From where was it done?**
  - **Log Elements**: source IP
- **Did someone attempt to do something malicious?**
  - **Log Elements**: user action part of meta-events, `open()`, `read()`, `recvfrom()`
- **Did the malicious activity succeed?**
  - **Log Elements**: system response, `setresuid()`, `getuid()`, `execve()`
- **What effect did the attack have on the system?**
  - **Log Elements**: system response, system reactions
- **What did the attacker change in the system?**
  - **Log Elements**: events in attack phase three

## 4. Discussion of Log Sources
- **Syslog**: Not very useful for detecting the studied attacks but can provide additional information through correlation.
- **Tcpdump**: Very useful for the Neptune and Tcpdump attacks. For the Neptune attack, the packet header is the most interesting part, while for the Tcpdump attack, the data part is the most interesting.
- **System Call Logs**: Essential for the OpenSSH attack and very useful for the Tcpdump attack. Specific system calls include `execve()`, `open()`, `read()`, `write()`, `setresuid()`, `getuid()`, `geteuid()`, `chdir()`, `fstat64()`, `old mmap()`, `mprotect()`, `recvfrom()`, `access()`, and `personality()`.

## 5. Conclusions
This paper presents a framework for determining the log data requirements for attack detection. We have suggested methods for extracting log entries that differ between an attack event and a normal event, and how these can be used for attack detection. The three attacks studied have different demands on log data, and none can be detected with only the information from `syslog`. This work provides a good starting point for finding new information sources for attack detection and may help in constructing intrusion detection signatures.

## 6. Acknowledgements
Thanks to Magnus Almgren and Ulf Larsson for valuable discussions and suggestions in the construction of this paper.

## 7. References
- [ADD00] M. Almgren, H. Debar, and M. Dacier. Lightweight tool for detecting web server attacks. In Proceedings of the Network and Distributed System Security Symposium, 2000.
- [ALGJ98] Stefan Axelsson, Ulf Lindqvist, Ulf Gustafson, and Erland Jonsson. An approach to UNIX security logging. In Proceedings of the 21st National Information Systems Security Conference, Arlington, Virginia, USA, 1998.
- [ATS+03] Christina Abad, Jed Taylor, Cigdem Sengul, William Yurcik, Yuanyuan Zhou, and Ken Rowe. Log correlation for intrusion detection: A proof of concept. In Proceedings of the 19th Annual Computer Security Applications Conference, Las Vegas, NV, USA, 2003.
- [HA93] Stephen E. Hansen and E. Todd Atkins. Automated system monitoring and notification with Swatch. In Proceedings of the Seventh Systems Administration Conference (LISA ’93), Monterey, CA, 1993.
- [Kum95] Sandeep Kumar. Classification and Detection of Computer Intrusions. PhD thesis, Purdue University, West Lafayette, IN, USA, August 1995.
- [LP01] Ulf Lindqvist and Phillip A Porras. eXpert-BSM: A host-based intrusion detection solution for Sun Solaris. In Proceedings of the 17th Annual Computer Security Applications Conference, New Orleans, Louisiana, USA, 2001.
- [Max03] Roy A Maxion. Masquerade detection using enriched command lines. In International Conference on Dependable Systems & Networks (DSN-03), San Francisco, California, 2003.
- [Roe99] Martin Roesch. SNORT - lightweight intrusion detection for networks. In Proceedings of the 13th Systems Administration Conference - LISA ’99, Seattle, Washington, USA, 1999. USENIX.
- [Sun00] Sun Microsystems, Inc., 901 San Antonio Road, Palo Alto, CA, USA. SunSHIELD Basic Security Module Guide, February 2000. http://docs.sun.com/db/doc/806-1789.
- [VRKK03] G. Vigna, W. Robertson, V. Kher, and R.A. Kemmerer. A stateful intrusion detection system for world-wide web servers. In Proceedings of the 19th Annual Computer Security Applications Conference, Las Vegas, Nevada, USA, 2003.