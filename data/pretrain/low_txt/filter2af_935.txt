### 版权声明
本文由先知技术社区独家发表，如需转载，请事先联系先知技术社区获取授权。未经授权请勿转载。
投稿邮箱：[PI:EMAIL]

### 0x00 前言
随着物联网技术的迅猛发展，各种IoT设备通过无线技术（如蓝牙低功耗BTLE、ZigBee、Wi-Fi和6LoWPAN）实现了万物互联。然而，随之而来的安全和个人隐私问题也变得越来越敏感。本文将分享一个关于BTLE智能锁的安全分析案例，希望能为IoT安全研究提供一些启示。

BTLE（蓝牙低功耗）因其在功耗和成本控制方面的优势，已成为许多IoT产品的首选技术。例如，小米手环、飞利浦HUE智能灯，甚至一些成人用品都使用了BTLE技术。据称，过去15年内，BTLE设备的年出货量增加了1000倍，达到了30亿台，并预计在未来4到5年内增长至50亿台。

然而，越流行的技术越容易成为黑客的目标。通过简单的搜索可以发现许多关于BTLE设备安全漏洞的文章。其中一个著名的例子是编号为CVE-2013-4866的硬编码PIN漏洞，这是第一个针对智能马桶的漏洞。

### 0x01 BTLE基础
有些读者可能认为家中的智能灯或手环被黑不会造成严重后果。然而，某些蓝牙智能设备的安全问题却远非如此简单。在深入探讨之前，我们先了解一下BTLE的基本知识。

BTLE设备运行在2.4GHz频段，分为40个频道，每个频道带宽为2MHz。其中，频道37、38和39用于广播，其余37个频道用于数据传输。

BTLE定义了三种匹配模式：JustWorks、6-digit PIN和Out of Band。JustWorks默认使用000000作为PIN进行匹配，这虽然方便了不带输入方式的设备，但也使得任何人都能轻易与其匹配。我们的目标——DOG&BONE智能锁正是采用了这种模式。

成功匹配后，我们可以通过唯一的UUID对特性进行读写操作，实现不同的功能，如开关灯等。UUID分为两种格式：Bluetooth Special Interest Group (SIG) 规范的16位公共UUID（例如：0000180F-0000-1000-8000-00805F9B34FB）和厂商自定义的128位私有UUID（例如：00001524-1212-EFDE-1523-785FEABCD123）。

在硬件方面，与BTLE交互非常简单，只需一个便宜的BTLE蓝牙适配器即可。大多数智能手机（如iPhone）自带BTLE功能。若要增加信号范围，还可以外接天线。

软件方面，iPhone用户推荐使用LightBlue，而更深入的研究则需要Linux下的开源工具，如hcitool和gatttool，尤其是gatttool提供了很好的交互界面。

### 0x02 BTLE智能锁
市面上有许多具备BTLE功能的安防产品，其中以智能锁为主。然而，这些产品的安全性如何呢？

在DEFCON24上，安全研究员揭露了多款蓝牙智能锁的安全漏洞，包括明文密码、重放攻击等。甚至有一款门锁在Fuzzing攻击下完全失效，导致门户大开。

智能锁的架构相对简单，通过手机APP与云服务器交互，用户可以从任何地方控制锁。今天的主角是DOG&BONE蓝牙智能锁，由一家英国公司生产，售价100美元。逆向其手机APP后发现，真正的开发者可能是华人。该公司声称其智能锁具有银行级别的安全性，甚至需要传奇硬件黑客Steve Wozniak亲自破解。那么实际情况是否如此呢？让我们来测试一下。

### 0x03 攻击准备
在攻击初期，情报收集至关重要。对于DOG&BONE锁，我们可以使用LightBLUE与其交互，获取基本信息。如图所示，我们可以知道DOG&BONE的蓝牙地址、使用的Nordic蓝牙芯片以及提供的服务及其UUID。

通过Google搜索，我们还发现了其他研究人员对其内部结构的解剖信息，确认了DOG&BONE使用的是Nordic NRF51822芯片。

从官方发布的APP中，我们可以了解DOG&BONE的功能。该APP有iOS和Android两个版本，建议分别进行测试。APP可以实时查看锁的电池容量等信息，并通过tap to unlock和设置passcodes等方式开锁。此外，还可以共享给其他用户，并限制使用次数和时间。功能越多，潜在的攻击点也越多。

大多数Android APP没有加固，因此我们可以轻松使用JD-GUI获取Java字节码。代码揭示了DOG&BONE的工作机制和认证方式，暴露了一些关键信息，如UUID及其对应的功能。

尽管DOG&BONE APP使用SSL加密与云服务器的交互数据，但并未启用Certs-Pinning。因此，我们仍可以通过中间人攻击（如MitMProxy和BurpSuite Pro）抓取所有交互数据包并进行分析。

另一方面，DOG&BONE通过蓝牙与智能锁交互。从Android 4.4开始，系统提供了Bluetooth HCI Logs功能，我们可以将btsnoop_hci.log导入Wireshark进行分析。

分析后，我们得知DOG&BONE通过对属性为lock_password的UUID写入正确的解锁密码来开锁。这个密码由服务端生成，并发送到锁和APP中保存。只有当用户取消绑定并重新绑定时，密码才会更新。那么，用户会每次开锁都取消绑定吗？

通过中间人攻击，我们可以获取当前的开锁密码，并用BTLE适配器将其写入lock_password的UUID进行验证。但请注意，目前我们仅从自己的手机获取开锁密码。如果想截取他人的开锁密码，我们需要知道如何从空中抓包。

**视频演示：Unlock DogBone Lock**

### 0x04 攻击 – RF无线层
如何从空中抓取蓝牙包？这里必须提到Michael Ossmann设计的Ubertooth，它可以说是蓝牙安全研究的瑞士军刀。具体使用方法可参考其官网。为了确保抓取蓝牙包，我们需要使用三个Ubertooth监控37、38和39这三个广播频道。

获得足够的数据包后，我们可以使用CrackLE破解BTLE配对密码。但由于DOG&BONE使用的是JustWorks配对模式，实际上可以省略这一步。

如果觉得Ubertooth价格过高，也可以选择基于CC2540芯片的TI-SmartRF Sniffer及其自带的SmartRF软件。测试发现，其抓包效果优于Ubertooth。

### 0x05 攻击 – APP应用层
还记得DOG&BONE的共享锁功能吗？在共享给其他用户时，可以限制使用次数和时间。那么，这期间到底发生了什么？是否可以绕过限制？我们可以通过BurpSuite Pro一探究竟。

共享过程很简单：锁的所有者决定共享给某个用户，服务端会发送邀请token给该用户。用户接受邀请后，服务端会将锁的ID和共享类型等信息返回到用户的账号。这里的共享类型包含了次数和时间限制信息。

当用户尝试开锁时，客户端会发送请求到服务端。如果一切顺利，服务端会返回当前的解锁密码，从而开锁。但如果用户的次数用完，再发送开锁请求时，服务端会返回错误信息。

由于整个过程都在我们的掌控之中，我们可以将服务端的返回信息替换成任意我们想要的信息，如提高共享次数。以下是绕过共享次数限制的视频演示。

**视频演示：Bypass DogBone lock sharing limits**

### 0x06 攻击 – 物理机械层
通过逆向应用程序和蓝牙数据包嗅探，我们已经攻破了Dog&Bone智能锁的安全防御。但实际上，还有一个非常简单且致命的方法可以打开锁：SHIM（铁片）攻击。事实证明，最简单的攻击方式往往是最有效的。以下是演示视频，在看过之后，你还愿意花100美元购买这款所谓的智能锁吗？

**视频演示：Bypass DogBone by SHIM**

### 0x07 总结
通过DOG&BONE蓝牙锁的案例，相信读者对低功耗蓝牙设备的分析和攻击方式有了一定了解。市场上的BTLE相关产品种类繁多，每款产品的安全性各不相同。大家可以自行尝试更多方法。从开发者的角度来看，在设计阶段就要考虑安全防御，并在产品上市前找白帽黑客进行测试。

### 0x08 参考文献
（此处列出参考文献）

希望这篇优化后的文章能够更加清晰、连贯和专业。