### Table 4: Confusion Matrix for Bhattacharyya + Average Bytes/Second + Threshold = 0.09

|   | F | H | I | IX | N | Q | S |
|---|---|---|---|---|---|---|---|
| **F** | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 |
| **H** | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 |
| **I** | 0.00 | 0.00 | 89.43 | 0.00 | 0.00 | 0.00 | 0.00 |
| **IX** | 0.00 | 0.00 | 22.22 | 0.00 | 0.00 | 0.00 | 0.00 |
| **N** | 0.00 | 0.00 | 0.00 | 74.24 | 0.00 | 0.00 | 0.00 |
| **Q** | 0.00 | 0.00 | 0.44 | 0.00 | 0.00 | 44.44 | 0.00 |
| **S** | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 14.29 |

**XX Count**
- F: 114
- H: 49
- I: 227
- IX: 66
- N: 8
- Q: 9
- S: 14

**Accuracy (Diagonal Elements)**
- F: 25.44%
- H: 14.29%
- I: 10.13%
- IX: 25.76%
- N: 87.50%
- Q: 33.33%
- S: 85.71%

---

### Analysis and Discussion

As shown in the confusion matrix, both measures do a reasonable job of separating the four classes with the largest number of connections. However, they perform less effectively for the three classes with only a few connections. To improve class separation, we introduced the "bytes per second" measure, which indicates the amount of data transferred during each session, and a simple threshold on the final composite score. This threshold helps to capture the idea that another distribution must be "close enough" to be considered a good match. This is particularly important when classifying connections involving a protocol for which no training samples have been previously collected.

Table 4 shows the results of the classification using a threshold value of 0.09, determined experimentally. While many connections are now classified as "unknown," class separation has otherwise improved significantly. This improvement can be useful in detecting certain types of non-permitted uses of SSH. For example, 85% of tunneled HTTP connections were successfully classified with no false positives. This could be valuable in identifying unauthorized SSH usage, such as tunneling HTTP traffic, which may not be permitted by security policies.

### Practical Implications

Practical deployment of systems that detect anomalies in the operation of some system or the use of some protocol can be challenging. Collecting clean training data, which does not contain any attacks, is difficult. This problem is familiar to researchers working with intrusion detection systems. In our case, generic behavior profiles could be provided. If local customization is required to improve detection performance or provide detection for obscure uses, trusted staff, including IT personnel and other users who work with SSH, could be enlisted to help create clean data for anomaly detection.

### Conclusion

Tunneling one network protocol through another is a method used by attackers or malicious insiders to communicate through firewalls or other traffic control and monitoring devices. Some network protocols, like SSH, have multiple uses, some of which may be desirable, while others are prohibited by security policies. By monitoring network traffic, it is possible to determine the types of activity taking place, providing a simple audit capability for compliance with security policies.

Our work aimed to separate SSH connections into different classes using simple statistical calculations and comparisons. We found that these methods can identify different types of SSH activity with a reasonable degree of confidence (greater than 74% for the main four types of activity examined, with very low false positives). Furthermore, without identifying the specific type of traffic, it is possible to identify types of activity other than simple interactive use of SSH with a high degree of confidence.

We also found that a reasonable classification can be achieved without heavily relying on inter-arrival times. While we did collect this information, the manner in which we captured the traffic did not ideally reflect the environment in which such captures would be conducted in practice, typically on a gateway machine at an intermediate point between the traffic source and sink. It was considered that this did not adversely affect the packet size data.

All sessions were based on the activities of a single user. We endeavored to ensure that a reasonable range of activities were performed during the monitored sessions so that the results would be reflective of a wider user population. Future work could include enrolling additional users, using more sophisticated machine learning methods, incorporating more statistical measures, extending the analysis to other types of tunneled protocols, and attempting classification based on a sliding window of packets within a session to identify different uses, some of which may not conform to policy, within the same SSH session.

### References

[1] R. J. Anderson. Security Engineering: A Guide to Building Dependable Distributed Systems. Wiley, 2001.
[2] G. D. Bissias, M. Liberatore, D. Jensen, and B. N. Levine. Privacy vulnerabilities in encrypted HTTP streams. In Privacy Enhancing Technologies Workshop, May–June 2005.
[3] K. Borders and A. Prakash. Web tap: detecting covert web traffic. In Proceedings of the 11th ACM conference on Computer and communications security, pages 110–120, Washington, DC, 2004.
[4] L. Brinkhoff. GNU httptunnel. http://www.nocrew.org/software/httptunnel.html. Last checked: 20060529.
[5] S. Chapman. String similarity metrics for information integration. http://www.dcs.shef.ac.uk/~sam/stringmetrics.html. Last checked: 20060529.
[6] daemon9. Project Loki: ICMP tunneling. http://www.phrack.org/show.php?p=49&a=6, November 1996.
[7] Department of Defence. Australian Government Information and Communications Technology Security Manual (ACSI 33), March 2006. Available from http://www.dsd.gov.au/library/infosec/acsi33.html.
[8] J. P. Early, C. E. Brodley, and C. Rosenberg. Behavioral authentication of server flows. In ACSAC ’03: Proceedings of the 19th Annual Computer Security Applications Conference, December 2003.
[9] G. Fisk, M. Fisk, C. Papadopoulos, and J. Neil. Eliminating steganography in internet traffic with active wardens. In Information Hiding 2002, volume 2578 of Lecture Notes in Computer Science, pages 18–35. Springer-Verlag, October 2002.
[10] D. Giampaolo. xkey.c. http://www.phreak.org/archives/exploits/unix/xwin-exploits/x11serv.c. Last checked: 20060531.
[11] J. Griffin, R. Greenstadt, P. Litwack, and R. Tibbetts. Covert messaging through TCP timestamps. In Privacy Enhancing Technologies, volume 2482 of Lecture Notes in Computer Science, pages 194–208. Springer-Verlag, April 2002.
[12] T. G. Handel and I. Maxwell T. Sandford. Hiding data in the OSI network model. In Proceedings of the First International Workshop on Information Hiding, volume 1174 of Lecture Notes in Computer Science, pages 23–38. Springer-Verlag, 1996.
[13] B. Hatch. SSH users beware: The hazards of X11 forwarding. http://www.hackinglinuxexposed.com/articles/20040705.html, 2004. Last checked: 20060531.
[14] D. R. Hipp. SQLite: An embeddable SQL database engine. http://www.sqlite.org/. Last checked: 20060529.
[15] T. Kailath. The divergence and Bhattacharyya distance measures in signal selection. IEEE Transactions on Communications, 15(1):52–60, February 1967.
[16] D. Kaminsky. OzymanDNS. http://www.doxpara.com/ozymandns_src_0.1.tgz. Last checked: 20060531.
[18] N. B. Lucena, G. Lewandowski, and S. J. Chapin. Covert channels in IPv6. In Privacy Enhancing Technologies Workshop, May 2005. (Not yet published.).
[19] Mudge. Insider threat: Models and solutions. ;login:, 28(6):29–33, December 2003.
[20] S. J. Murdoch and S. Lewis. Embedding covert channels into TCP/IP. In Information Hiding: 7th International Workshop, volume 3727 of Lecture Notes in Computer Science, pages 247–261. Springer Verlag, June 2005.
[21] National Computer Security Center. Department of Defense Trusted Computer System Evaluation Criteria. DoD 5200.28-STD, December 1985. (“Orange Book”).
[22] OpenBSD Project. OpenSSH. http://www.openssh.org. Last checked: 20060531.
[23] D. J. Pack and B. E. Mullins. A portable microcontroller-based HTTP tunnelling activity detection system. In Proceedings of the 2003 IEEE International Conference on Systems, Man and Cybernetics, volume 2, pages 1544–1549, October 2003.
[24] D. J. Pack, W. Streilein, S. Webster, and R. Cunningham. Detecting HTTP tunneling activities. In Proceedings Of The 2002 IEEE Workshop On Information Assurance, 2002.
[25] M. J. Ranum. What is “deep inspection”? http://www.ranum.com/security/computer_security/editorials/deepinspect/%index.html, 2005. Last visited: 2006-08-25.
[26] A. Singh, O. Nordström, C. Lu, and A. L. M. dos Santos. Malicious ICMP tunneling: Defense against the vulnerability. In Proceedings of ACISP ’03: the 8th Australasian Conference on Information Security and Privacy, volume 2727 of Lecture Notes in Computer Science, pages 226–236. Springer-Verlag, 2003.
[27] T. Sohn, J. Moon, S. Lee, D. H. Lee, and J. Lim. Covert channel detection in the ICMP payload using Support Vector Machine. In Computer and Information Sciences - ISCIS 2003, volume 2869 of Lecture Notes in Computer Science, pages 828–835. Springer-Verlag, 2003.
[28] D. X. Song, D. Wagner, and X. Tian. Timing analysis of keystrokes and timing attacks on SSH. In Proceedings of the 10th USENIX Security Symposium, Washington, D.C., USA, August 2001. USENIX Association.
[29] W. R. Stevens, B. Fenner, and A. M. Rudoff. UNIX Network Programming: The Sockets Networking API, volume 1. Addison-Wesley, 3rd edition, 2004.
[30] I. H. Witten and E. Frank. Data mining: practical machine learning tools and techniques. Morgan Kaufman, 2nd edition, 2005.
[31] C. Wright, F. Monrose, and G. M. Masson. HMM profiles for network traffic classification. In Proceedings of the 2004 ACM workshop on Visualization and data mining for computer security, pages 9–15, October 2004.
[32] C. V. Wright, F. Monrose, and G. M. Masson. Towards better protocol identification using profile HMMs. Technical Report JHU-SPAR051201, Johns Hopkins University, 2005.
[17] T. Karagiannis, A. Broido, M. Faloutsos, and kc claffy. Transport layer identification of P2P traffic. In Proceedings of the 4th ACM SIGCOMM Conference on Internet Measurement (IMC’04), pages 121–134, Taormina, Sicily, Italy, October 2004.