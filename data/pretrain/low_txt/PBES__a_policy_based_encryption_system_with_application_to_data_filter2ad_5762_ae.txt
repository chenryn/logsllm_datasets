### Achieved

- **Key Distribution**: Public keys must be distributed to senders.
- **Offline Key Generation**: Recipients generate their private keys offline.
- **Key Escrow**: Keys are escrowed with the PKG (Private Key Generator).
- **PKG Parameters Distribution**: PKG parameters need to be distributed to senders.
- **Per-Policy Private Keys Distribution**: Per-policy private keys must be distributed to recipients.

### CP-ABE [10, 34]

- **Policy Flexibility**: Supports flexible attribute-based policies [10] and multi-valued attributes with AND gates [34].
- **AND Gate Support**: Supported in [34], not supported in [10].
- **Prevention of Collusion**: Prevented via per-attribute, per-user private keys.
- **Key Escrow**: Keys are escrowed with the PKG.
- **PKG Parameters Distribution**: PKG parameters need to be distributed to senders.
- **Per-Attribute, Per-User Private Keys Distribution**: These keys must be distributed to recipients.

### Revocation

- **OCSP/CRLs**: Used for revocation. The CA (Certificate Authority) can be largely offline.
- **Short-Lived Keys**: Supported via per-policy short-lived keys.
- **Online Requirement**: The PKG needs to be online to generate private keys.
- **Short-Lived Attribute Keys**: Supported via per-attribute short-lived keys.
- **Online Requirement for Users**: The PKG needs to be online to generate and distribute new private keys to users.

### Performance Analysis

- **Key Generation Cost**: Using the cp-abe toolkit [10], the average cost for generating 10 attribute private keys is 2.64 seconds, with 3 numerical and 7 boolean attributes.
- **Scalability**: In a system with 50,000 users, each having 10 attributes with a one-week lifetime, it would take a PKG 36 hours to complete one round of key generation.

### Application Analysis

- **Power Grid Data Sharing**: Envision one or more KDCs (Key Distribution Centers) at each ISO (Independent System Operator) for fault tolerance and load balancing.
- **KDC Capacity**: Each KDC should support 510 requests/min to meet grid data sharing needs.
- **Future Work**: A formal analysis of data sharing transaction patterns and a comprehensive performance analysis, including networking and storage components, will be conducted.

### Related Work

#### Schemes Compared

1. **CertiÔ¨Åcate Based FSGuard [37]**
   - **Policy Flexibility**: Flexible attribute-based policy, but limited to policies that can be satisfied by the encrypting entity.
   - **Collusion Prevention**: Prevented via per-user decryption key distribution.
   - **Key Escrow**: Keys are escrowed with the PKG.
   - **Key Distribution**: Per-policy encryption keys to senders and per-attribute, per-user private keys to recipients.

2. **PEAPOD [30]**
   - **Policy Flexibility**: Flexible attribute-based policy.
   - **Vulnerability**: Vulnerable to user collusion.
   - **Key Distribution**: Attribute public keys to senders and per-attribute, per-user private keys to recipients.
   - **Revocation**: Immediate revocation via Security Mediator (SEM).

3. **IB-mRSA [18]**
   - **Recipient Identity**: Policy secret from eavesdroppers, recipients, and CA.
   - **Key Escrow**: Keys are escrowed with the CA.
   - **Key Distribution**: CA parameters to senders and private keys generated offline by the CA.

4. **PBES**
   - **Policy Flexibility**: Flexible identity, role, attribute, and context-based policies.
   - **Policy Secrecy**: Policy secret from eavesdroppers and recipients.
   - **Key Escrow**: Keys are escrowed with the KDC.
   - **Key Distribution**: KDC public key to senders and mediated decryption via KDC.
   - **Revocation**: Immediate revocation via KDC.

### Summary of Characteristics

- **CP-ABE, FSGuard, PEAPOD, and PBES** provide policy-based encryption for multiple recipients.
- **PBES** supports context-based policies (e.g., time of day, location).
- **Policy Secrecy**: Provided by CP-ABE [34], PEAPOD, and PBES, with CP-ABE [34] and PEAPOD providing secrecy against all servers.
- **Collusion Resistance**: Only PEAPOD is vulnerable to user collusion; PBES provides resistance via mediated decryption.
- **End-to-End Encryption**: All schemes achieve this to some extent, but IBE, CP-ABE, FSGuard, IB-mRSA, and KDC have implicit key escrow.
- **Key Distribution Efficiency**: IBE, CP-ABE, IB-mRSA, and PBES require senders to fetch one public key/parameters per domain.
- **Revocation**: PEAPOD, IB-mRSA, and PBES provide immediate revocation.
- **Security Against Adaptive Chosen Ciphertext Attacks**: IBE, IB-mRSA, CP-ABE [14], and PBES are secure, with PBES offering a generic construction.

### Conclusion

In this work, we develop a Policy-Based Encryption System (PBES) that addresses the challenges of policy-based encryption and applies it to data sharing in electricity grids. PBES supports flexible policy-based encryption, policy secrecy, efficient key management, and security against adaptive chosen ciphertext attacks. We prototype the system and demonstrate its reasonable performance. A usable library for PBES will be released in the near future for easy integration with applications.