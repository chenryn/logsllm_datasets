### In Session “Web Services and Grid Computing,” Proceedings of the Conference on Systemics, Cybernetics, and Informatics, Orlando, FL, July 2002

**Title: QoS for Service-oriented Middleware**

**Authors:**
- Amit Sheth
- Jorge Cardoso
- John Miller
- Krys Kochut
- Myong Kang

**Affiliations:**
- Large Scale Distributed Information Systems Lab, Computer Science, University of Georgia
- Mitretek Systems, Center for Information Systems

**Contact:**
- {amit, cardoso, miller, kochut}@cs.uga.edu
- http://lsdis.cs.uga.edu
- PI:EMAIL

**Abstract:**
Service-oriented Middleware (SoM) is proposed to provide a higher-level middleware over emerging Web Services-based systems, simplifying the development of complex, multi-organizational business applications within the scope of the Open Grid Service Architecture (OGSA). Our approach builds on our experience in distributed workflow management, focusing on Quality of Service (QoS) management, which is crucial for meeting user and application requirements. This paper reviews a QoS model that supports automatic computation based on the QoS specifications of component web services. The OGSA must include effective and efficient QoS management to ensure the satisfaction and fulfillment of user requirements, especially in e-commerce processes.

**Keywords:**
- Quality of Service (QoS)
- Web Service QoS
- Process QoS
- Multi-organizational Workflows
- Service-oriented Middleware

---

### 1. Introduction

The Open Grid Service Architecture (OGSA) envisions an integrated approach to support both e-science and e-business. This vision aligns with the convergence of distinct communities (Web, Grid, and P2P) towards integrated Internet distributed computing. As with previous software architecture evolutions, we expect a layered approach to achieve this vision. We propose a Service-oriented Middleware (SoM) that builds upon the progress in Grid middleware and rapidly emerging Web Services. Our objective is to address key issues such as making it easier to build complex applications by composing Web Services and managing them, including orchestration.

Processes based on Web Services are inherently more complex due to their scale and heterogeneity. The number of potentially relevant Web service providers and their independent development and modification result in functional and operational differences, even when standards are used. Effective and efficient QoS management is a critical component of SoM, ensuring the satisfaction and fulfillment of user and application requirements.

---

### 2. Background and Relevant Work

#### 2.1 Recent Commercial Moves Toward Service-based Architectures and Solutions

The commercial world is increasingly adopting service-based infrastructure and solutions. Examples include:
- **Propel Platform Development Team**: Focuses on a scalable infrastructure for advanced e-services.
- **HP Labs (Casati, Lee et al. 2001)** and **BizTalk Server 2000 (Mehta, Levy et al. 2001)**: Emphasize the process-oriented dimension of e-services and the role of workflow technology.
- **Bell Labs (Christophides, Hull et al. 2001)**: Studies workflow mediation using XML-based vortex architecture.
- **WISE Approach (Lazcano, Schuldt et al. 2001)**: Reviews research efforts toward more flexible, interoperable, and dependable workflows in an e-service environment.
- **CrossFlow (Grefen, Aberer et al. 2001)**: A multinational research project on cooperation in virtual enterprises using contract mechanisms for service outsourcing and integration.

#### 2.2 Workflow Process Management

The need for constructing processes across multiple domains using existing applications has gained attention in the context of business-to-business applications. OGSA recognizes the importance of workflow management. Despite efforts to facilitate such needs, building complex applications remains challenging, and there is limited work supporting QoS for end-to-end processes created by composing or coordinating individual applications or Web Services.

#### 2.3 METEOR Project

The METEOR project at the Large Scale Distributed Information Systems (LSDIS) Lab in the Computer Science Department of the University of Georgia is one of the largest academic efforts in this area. The project includes design tools, monitoring tools, a workflow repository, and enactment systems. Two enactment services, OrbWork and WebWork, have been developed to support mission-critical applications requiring high scalability and robustness.

---

### 3. Specification of Web Service and Process QoS

#### 3.1 SoM QoS Requirements

Our main objectives for the SoM architecture are to specify QoS, develop estimation algorithms and methods, create monitoring tools, and implement mechanisms to control QoS. An integrated solution combining these modules will result in a sophisticated quality management framework. The functionalities of each module include:
- **Specification**: Defining QoS requirements.
- **Estimation Algorithms and Methods**: Calculating QoS based on historical data and a priori estimates.
- **Monitoring Tools**: Tracking and reporting QoS metrics.
- **Control Mechanisms**: Adjusting QoS parameters to meet requirements.

#### 3.2 QoS Model

QoS is typically decomposed into several dimensions. For business processes, successful companies assert themselves in competitive markets through three essential pillars: time, cost, and quality. These dimensions have been extensively studied in various fields, including networking, real-time applications, and middleware. For middleware systems, practical dimensions include time to repair (TTR), time to failure (TTF), availability, failure masking, and server performance.

---

This revised version aims to provide a clear, coherent, and professional presentation of the original text, with improved structure and readability.