# 优化后的文本

## 封面
### Broadview MANNING
**www.broadview.com.cn**

**RabbitMQ实战：高效部署分布式消息队列**

- **原书名**: RabbitMQ in Action: Distributed Messaging for Everyone
- **作者**: Alvaro Videla（美国）
- **译者**: 汪佳南
- **审校**: Jason J. W. Williams
- **出版社**: 电子工业出版社
- **出版集团**: 中国工信出版集团

---

## 内容简介
本书首先简要回顾了消息通信的历史，随后从基本的消息通信原理入手，带领读者深入了解RabbitMQ的消息通信世界。书中不仅涵盖了单台RabbitMQ服务器和RabbitMQ集群的讲解，还详细介绍了如何使用各种工具进行监控。

本书内容浅显易懂，文笔风趣幽默，包含丰富的可运行示例程序源代码，帮助读者通过实践加深对相关主题的理解。无论是初学者还是有一定RabbitMQ使用经验的读者，都能从中受益匪浅。对于初学者来说，本书是很好的入门读物；而对于有经验的读者，它不仅能巩固基础知识，还能进一步理解RabbitMQ的高级特性，如编写RabbitMQ插件等。

**版权信息**
- 原版英文版由Manning Publications, USA 出版，版权所有 © 2012 Manning Publications。
- 简体中文版由电子工业出版社出版，版权所有 © 2015 Publishing House of Electronics Industry。
- 未经许可，不得以任何形式复制或抄袭本书的任何部分。专有出版权受法律保护。
- 版权贸易合同登记号: 图字：01-2014-4907
- ISBN: 978-7-121-27164-9

**图书在版编目（CIP）数据**
- 书名原文: RabbitMQ in Action: Distributed Messaging for Everyone
- 分类号: TN918.6
- 中国版本图书馆CIP数据核字 (2015) 第224246号

**编辑与制作**
- 策划编辑: 张春雨
- 责任编辑: 李云静
- 印刷: 北京天宇星印刷厂
- 装订: 三河市皇庄路通装订厂
- 出版发行: 电子工业出版社
- 地址: 北京市海淀区万寿路173信箱 邮编: 100036
- 开本: 787×980 1/16
- 印张: 20.75 字数: 395千字
- 版次: 2015年10月第1版
- 印次: 2015年10月第1次印刷
- 定价: 75.00元

**售后服务**
- 如购买的图书存在质量问题，请向购买书店调换。若书店售缺，请联系本社发行部，电话: (010) 88254888。
- 质量投诉请发邮件至 [服务邮箱]，盗版侵权举报请发邮件至 [举报邮箱]。
- 服务热线: (010) 88258888

---

## 译者序
我从事互联网行业已有五年多的时间，参与过多个项目，包括金融交易系统、医疗护理信息系统以及淘宝第三方软件供应商。这些经历让我深刻认识到降低软件复杂性的重要性。为此，我们需要采用可复用的软件设计模式，并选择合适的软件组件来构建系统。其中，消息队列就是一种非常重要的工具。

消息队列提供了一种异步通信协议，发送者无需等待消息被处理完毕即可返回。消息暂存于队列中，由感兴趣的消费者订阅并处理。那么，在什么情况下需要使用消息队列呢？例如，在系统集成中，我们可能需要将同一条消息发送给多个系统，并确保每个系统只接收符合特定模式的消息。此外，随着业务需求的增长，同步处理方式可能会严重影响系统的吞吐量，这时就需要将某些操作改为异步处理。同时，高可用性和实时监控也是必须考虑的因素。

市面上有许多开源的消息队列系统，如JBoss Messaging、JORAM、Apache ActiveMQ、Sun Open Message Queue、Apache Qpid 和RabbitMQ等。RabbitMQ因其支持多种编程语言且易于与Spring框架集成而受到广泛欢迎。最重要的是，使用消息队列并不是“大材小用”，而是为未来的系统扩展做好准备。

翻译这本书并非易事。在此，我要感谢赵震一和陈祥奎夫妇的帮助和支持，你们是我的挚友与伯乐。感谢电子工业出版社的编辑张春雨和李云静，是你们的细心指导保证了本书的翻译质量。最后，感谢我的女友，你的陪伴和支持使我能够全心投入工作。

由于时间仓促，文中难免有不足之处，希望读者海涵。希望大家能从中收获知识和快乐。

汪佳南
2015年9月于杭州

---

## 致谢
首先，我们要感谢RabbitMQ的CEO Alexis Richardson，没有他的引荐，Manning不会给我们这个机会，我们也无法共同创作这本书。同时，感谢他为本书作序。同样地，我们要感谢RabbitMQ团队一直以来的帮助，特别是Matthew Sackman和[其他成员]。他们的耐心解答使我们能够更好地理解和解释RabbitMQ的细节。

Alvaro Videla
迪本多夫，瑞士

Jason J. W. Williams
爱达荷州博伊西市，美国

---

## 序言
欢迎阅读本书。如果你像我一样，你可能在想：“我是否应该从头开始阅读呢？”的确，市面上的技术书籍琳琅满目，但并不是所有的书都值得花时间去读。因此，请允许我邀请你继续往下阅读，看看下面的内容是否符合你的需求：

- 你希望通过实用的方法学习推送技术、流数据以及其他消息通信模式。
- 你希望获得专家级别的RabbitMQ技能，包括设计和生产环境中的最佳实践。

换句话说，本书不仅仅是一本RabbitMQ指南。它会为你讲解多种使用场景下的基本设计模式，展示为什么越来越多的应用开始使用这些模式，以及哪些是可以做的，哪些是不可以做的。

这些模式是什么样的呢？如果你曾经想过将系统绘制成信息流图或网络图，而不是栈的形式，那么你可能正在使用或即将使用消息通信。你可能一直在考虑数据投递、非阻塞操作或推送通知。或者，你想使用发布/订阅模式、异步处理或工作队列。所有这些模式构成了众所周知的消息通信。

消息通信是一种至关重要的能力，它使得软件应用可以相互连接并得以扩展。应用程序既可以像一个巨大应用中的组件一样相互连接起来，也可以连接用户的设备和数据。消息通信本质上是异步的，因为它通过分离数据的发送和接收来解耦应用。最奇妙的地方在于这种连接模式可以在任何规模下以相同的方式工作。

规模是关键点。互联网无处不在，作为应用程序投递的基础，规模在应用程序设计中变得至关重要。最近，技术的发展趋势都是往大规模方向发展。例如，移动连接设备的数量很快将超过地球上的人口数量。在我撰写本书时，Facebook正准备IPO。CTO Bret Taylor说：“如果Mark Zuckerberg在宿舍编写Facebook的时候这些技术就已经成熟的话，那么现在的Facebook就是一个移动应用了。”

花点时间思考一下。大多数应用曾经都是这样运作的：加载文档或从数据库获取数据，做一些处理，然后将结果写入磁盘。未来的应用程序将更像Facebook：总是在线，托管在云端，可以从任何地方访问。输入和处理是连续且自动的，并即时输出用户想要的过滤信息流。

如果不采用一系列专门的设计模式，这样的自动化、可访问性和伸缩性都无法实现。在本书中，你将学到这些模式。现代消息通信技术的发起者之一Derek Collison将消息通信描述为“移动的数据”，这一点令人印象深刻。很难想象有什么应用是不需要移动数据的。因此，消息通信无处不在。

这本书可以帮助你立即上手。消息通信模式将以可运行代码的形式展现在你面前。作者也会帮助你在自己的系统上运行起来。在Jason J. W. Williams和Alvaro Videla的帮助下，你可以近距离接触那些拥有多年运行大规模RabbitMQ系统经验的专家。本书是他们将经验分享给社区这一杰出工作的成果。

在对RabbitMQ有了一点感觉之后，无论你使用何种语言编写程序，都能很容易地在广大的RabbitMQ用户社区里寻求到帮助并找到更多示例。这使得RabbitMQ成为满足你消息通信需求的最佳选择。

希望你已经被吊起了胃口，准备翻开下一页继续阅读。书中会有关于消息和RabbitMQ的一切，作者将会为你揭开它们的神秘面纱。

Alexis Richardson
Rabbit Technologies公司创始人和前任CEO
VMware云应用平台高级总监

---

## 前言
编写本书就像是在探索RabbitMQ一样——遇到需要解决的问题，但却不知道解决方案是什么。在2010年5月前，我们甚至都不认识对方。在过去两年里，我们在RabbitMQ社区都很活跃，但从未真正相遇过。直到有一天，在与Alexis Richardson（时任Rabbit CEO）的一次谈话中，我和Alvaro才互相认识了对方，这才有了你现在手中的这本书。我们的共同之处在于，我们都希望将自己通过艰难困苦才掌握的所有RabbitMQ知识写下来。回到2010年，这些知识（并且现今大部分时候仍然如此）散落在网络上那些一知半解的博客文章和简洁的技术指引中。换句话说，我们俩都想编写这本书。真心希望这本书能在我们着手使用RabbitMQ的两年前就已经存在了。

我们并非传统意义上的消息通信背景出身，这使得我们很快成为朋友，并在很大程度上形成了本书的基调；我们假定本书的读者是那些之前从未听说过队列或绑定的人。事实上，当我们探索RabbitMQ时，我们甚至不知道消息通信是什么，或者说我们不知道这就是我们所寻找问题的解决方案。我的处境是公司需要一种方法来获取从客户那里收到的垃圾邮件报告，并在不同于主流数据的带外数据中进行处理。而Alvaro的情况是，他们公司的社交网络成员通信系统在200GB数据库负载下无法正常工作。就像很多其他诉诸消息通信的人一样，我们首先尝试使用数据库表来解决以队列为中心的问题。然而，像确保只有一个应用实例消费任意特定队列条目这样的问题，让我们在数据库驱动的方案上的尝试备受折磨，迫使我们寻找更好的方法。毕竟，我们认识到自己不会是软件历史上第一个碰到这类问题的人。

我们两个问题的解决方案竟然惊人地相似：一位在Plaxo的朋友告诉我看看“RabbitMQ之类的东西”是否能解决我的以队列为中心的问题，同时在中国的一位Alvaro的Erlang同事也给了他相同的建议。相距半个地球，我们以相同的方式发现了RabbitMQ，为了解决几乎同样的问题！事实上，你正在阅读有关RabbitMQ的书，很可能是因为类似的挑战以相同的方式引导你发现了RabbitMQ。这也解释了为什么RabbitMQ如此流行：当尝试扩大我们构建的软件规模时，它能轻而易举地解决那些挥之不去的分布式数据的基本问题。

我们希望本书能够帮助你更快、更轻松地设计这些挑战的解决方案，从而使你可以将更多的时间用于编写改变世界的软件，同时花费更少的时间来了解如何加速消息通信代理。在这个过程中，也许RabbitMQ会给你带来一位了不起的合著者，你从未想过他会成为你终生的朋友。本书是我们热爱编写软件的产物，同时也希望它能以你从未想象的方式来帮助你完成相同的事情。

Alvaro Videla
迪本多夫，瑞士

Jason J. W. Williams
爱达荷州博伊西市，美国

注：大家都说合著者的关系相比婚姻来说拥有更高的“离婚率”。这倒是一个不错的比较，因为合著一本书需要合著者不断地相互迁就和尊重，这样彼此才能生活在同一“屋檐”下。感谢上帝能让我撰写本书，同时能交到这么一位志同道合的朋友。