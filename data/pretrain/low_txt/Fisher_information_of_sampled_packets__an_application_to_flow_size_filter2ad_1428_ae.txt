### Further Investigation
Flow splitting could be one potential cause and is a subject for further investigation.

### SYN-seq MLE Estimates
**BB-East-2 Original Flow Size Distribution**
```
 0.35
 0.30
 0.25
 0.20
 0.15
 0.10
 0.05
  0
  2
  4
  6
  8
 10
 12
 14
 16
 18
 20
Flow size i
```
**Figure 7:** Estimated flow size distribution from the BB-East-2 trace versus the original flow size distribution. Packet sampling rate \( p = 0.01 \) using the SYN-seq MLE.

### Sampling at Multiple Monitors
In the following section, we evaluate the value of sampling at multiple monitors.

### Flow Size Estimation on Multiple Monitors
So far, we have considered samples from a single monitor. Flows crossing a backbone network typically pass through multiple monitors. This section examines the value of information obtained from multiple monitors and how to best use the collected samples.

#### Combining Sampled Network Measurements
The combination of sampled network measurements from multiple monitors was previously considered in [4]. In this work, the authors focused on estimating \(\theta\), using local estimates \(\tilde{\theta}^{(m)}\) obtained at \(m\) monitors. They assumed all monitors would sample independently and aimed to find a new estimate \(\tilde{\theta}\) using a linear combination of the local estimates such that the variance of \(\hat{X}\) is minimized among all linear combinations. The method in [4] provides reasonable, though not optimal, traffic matrix information from combined samples. Our focus here is on the flow size distribution, with the goal of determining the information loss from combining local estimates instead of combining all samples and then estimating the desired quantity. This allows us to assess how close the method in [4] is to being optimal. We will focus on the SYN-seq estimator.

Assume there are \(u\) monitors sampling packets at rates \(p_1, \ldots, p_u\) respectively, and that the same traffic is seen by these \(u\) monitors. Let \(B\) be a matrix as defined in Section 2.2 for the TCP sequence number case, with the only change being the sampling rate \(p = (1 - Qz(1 - pz))\).

**Figure 8:**
```
 1.8
 1.7
 1.6
 1.5
 1.4
 1.3
 1.2
 1.1
  1.0
  0.9
  0
  10
  20
  30
  40
  50
  60
  70
  80
  90
 100
Flow size i
```
This graph uses the Cramér-Rao bound to show the advantage of making the estimation with the combined samples taken at each monitor over the combination of two independent estimations taken at each monitor. The evaluation is done over the distribution from trace BB-East-2.

This models the case where all packet samples are combined at a single central server, and the estimation is performed on the combined samples. An alternative approach is to form an estimate at each monitor and then combine them into a single estimate, as suggested in [4].

Let \(W = 200\) be the maximum flow size and \(p = 1/64\) be the packet sampling rate when there is only one monitor, or \(p_1 = p_2 = 1/128\) when there are two monitors. Figure 8 compares the standard deviation of the estimation error for three approaches:
1. Estimation using one monitor with sampling rate \(p\).
2. Estimation using the combined samples of two monitors at rates \(p_1\) and \(p_2\).
3. Estimation using the combined estimates obtained at each monitor.

The results are presented by evaluating \(\sigma_i^{(L)}\), \(\sigma_i^{(SM)}\), and \(\sigma_i^{(TM)}\) obtained by the Cramér-Rao bound. Figure 8 shows the graph of curve \(\sigma_i^{(L)} / \sigma_i^{(SM)}\) ("Combining independent estimates") against curve \(\sigma_i^{(TM)} / \sigma_i^{(SM)}\) ("Combining samples").

The results indicate that combining the samples at a central server is almost as good as sampling at one monitor with double the rate. Combining two independent estimates increases the standard deviation error of the estimates by 50%. Using a central site comes with the cost of transferring all data to the central site, which can be reduced by sending summarized data.

### Conclusions and Future Work
In this paper, we focused on a key issue in conducting measurements for estimating network statistics, such as the flow size distribution: what are the values of different types of information on the quality of the estimate? Using the flow size distribution as an example and packet sampling as the measurement technique, we studied the values of different types of information, such as packet counts, SYN information, and sequence number information. Using the Fisher information and its application via the Cramér-Rao bound on mean squared error, we found that TCP sequence number information is essential for accurate flow size estimation. We also explored the benefit of including SYN flag information, determining that it reduces errors associated with estimating the fraction of small-sized flows. Using this as a starting point, we presented MLEs based on the conjugate gradients method, which come close to the Cramér-Rao bound even for small sample set sizes. Finally, we applied the framework to determine the benefits of combining observations from multiple monitoring sites. Our analysis shows substantial benefits in performing estimation on the combined set of observations rather than combining the estimates made on observations at individual monitoring sites. To our knowledge, this is the first study of flow size estimation from samples collected at multiple monitors.

This is a first step in understanding the value of different types of information for estimating network statistics. Our future work will focus on applying our framework to other estimation problems and refining the application to flow size distribution estimation. For example, there is a need for a parsimonious model of the flow size distribution with a small number of parameters. Another research direction is to extend the work on multiple monitors. Can one use the Fisher information to derive an adaptive mechanism for determining sampling rates at different monitors to minimize error subject to a resource constraint?

### Acknowledgments
We acknowledge the fundamental contribution of Darryl Veitch, who suggested the TCP sequence number field as a high-informational protocol field for flow size estimation. We also thank George D. Konidaris for fruitful discussions on MLEs. We acknowledge the many anonymous reviewers for their comments and suggestions.

This work has been supported in part by NSF under grant ANI-0325868, the CAPES Brazilian agency award 2165031, and the Sprint Advanced Technology Laboratories. The equipment was supported in part by NFS RI infrastructure grant under award number EIA-0080119. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.

### References
[1] Weifeng Chen, Yong Huang, Bruno F. Ribeiro, Kyoungwon Suh, Honggang Zhang, Edmundo de Souza e Silva, Jim Kurose, and Don Towsley. Exploiting the IPID field to infer network path and end-system characteristics. In Proceeding of the 2005 Passive and Active Measurement (PAM’05) Workshop, March 2005.

[2] Thomas M. Cover and Joy A. Thomas. Elements of Information Theory. John Wiley & sons, 1991.

[3] Nick Duffield, Carsten Lund, and Mikkel Thorup. Estimating flow distributions from sampled flow statistics. IEEE/ACM Transactions on Networking, 13(5):933–946, 2005.

[4] Nick Duffield, Carsten Lund, and Mikkel Thorup. Optimal combination of sampled network measurements. In IMC '05: Proceedings of the 5th ACM/USENIX Internet Measurement Conference, October 2005.

[5] Nick G. Duffield, Carsten Lund, and Mikkel Thorup. Learn more, sample less: control of volume and variance in network measurement. 51(5):1756–1775, 2005.

[6] Cristian Estan, Stefan Savage, and George Varghese. Automatically Inferring Patterns of Resource Consumption in Network Traffic. In Proc. ACM SIGCOMM '03, Karlsruhe, Germany, Aug. 2003.

[7] C. Fraleigh, S. Moon, B. Lyles, C. Cotton, M. Khan, D. Moll, R. Rockell, T. Seely, and C. Diot. Packet-level traffic measurements from the Sprint IP backbone. IEEE Network, 2003.

[8] John D. Gorman and Alfred O. Hero. Lower bounds for parametric estimation with constraints. IEEE Transactions on Information Theory, 36(6):1285–1301, Nov 1990.

[9] Nicolas Hohn and Darryl Veitch. Inverting sampled traffic. In IMC '03: Proceedings of the 3rd ACM SIGCOMM conference on Internet measurement, pages 222–233, New York, NY, USA, 2003. ACM Press.

[10] Steven M. Kay. Fundamentals of Statistical Signal Processing, Volume I: Estimation Theory. Prentice Hall PTR, March 1993.

[11] Ramana Rao Kompella and Cristian Estan. The power of slicing in internet flow measurement. In IMC '05: Proceedings of the 5th ACM/USENIX Internet Measurement Conference, October 2005.

[12] S. Muthukrishnan. Data streams: algorithms and applications. In Proc. of ACM SODA, invited talks, pages 413–413, 2003. A complete version is available at (http://athos.rutgers.edu/~muthu/stream-1-1.ps).

[13] William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. Numerical Recipes in C: The Art of Scientific Computing. Cambridge University Press, October 1992.

[14] Richard A. Redner and Homer F. Walker. Mixture Densities, Maximum Likelihood and the EM Algorithm. SIAM Review, 26(2):195–239, April 1984.

[15] RFC791. Internet protocol. September 1981. DARPA Internet Program Protocol Specification.

[16] M. J. Schervish. Theory of Statistics. Springer, 1995.

[17] Ram Zamir. A Proof of the Fisher Information Inequality via a Data Processing Argument. IEEE Transactions on Information Theory, 44(3):1246–1250, 1998.

[18] Qi Zhao, Abhishek Kumar, Jia Wang, and Jun Xu. Data streaming algorithms for accurate and efficient measurement of traffic and flow matrices. In Proc. of ACM SIGMETRICS, June 2005. to appear.

[19] Cisco NetFlow. http://www.cisco.com/warp/public/732/-Tech/nmp/netflow.

[20] IPFIX, IETF Working Group Charter IP Flow Information Export. http://www.ietf.org/html.charters/ipfixcharter.html.

[21] Packet Sampling, IETF Working Group Charter PSAMP. http://www.ietf.org/html.charters/psampcharter.html.

[22] sFlow. http://www.sflow.org.

[23] Sprint packet trace analysis. http://ipmon.sprint.com/packstat.