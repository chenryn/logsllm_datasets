# Burp Suite

## 免责声明
本文档仅供学习和研究使用，请勿将文中的技术或源码用于非法用途。因任何不当使用造成的负面影响，与作者无关。

## 简介
Burp Suite 是一个集成的 Web 应用安全测试平台，能够无缝融合多种安全工具，并提供全面的接口适配。它支持从最初的映射及应用程序攻击面分析到发现并利用安全漏洞等全过程的 Web 应用测试。

## 官网
- [PortSwigger](https://portswigger.net/)

## 资源
- [Mr-xn/BurpSuiteSuite-collections](https://github.com/Mr-xn/BurpSuiteSuite-collections) - 集合了关于 Burp Suite 的插件（非商店）、文章及使用技巧。
- [snoopysecurity/awesome-burp-extensions](https://github.com/snoopysecurity/awesome-burp-extensions) - 英文版的 Burp 相关资源集合。
- [alphaSeclab/awesome-burp-suite](https://github.com/alphaSeclab/awesome-burp-suite) - 中文版的 Burp 相关资源集合。

## 教程
- [Burp Suite 实战指南](https://t0data.gitbooks.io/BurpSuitesuite/content/)

## 相关文章
- [使用 Burp Suite 进行业务安全测试](https://testerhome.com/topics/15709)
- [商业 Web 漏洞扫描神器——Burp Suite 详解](https://blog.csdn.net/dongfei2033/article/details/78323010)
- [关于 Burp Intruder 模块的小技巧](https://mp.weixin.qq.com/s/E-Dlhbduf5TSjKeZWL25xw)
- [Burp Suite 使用的一些小技巧【更新】](https://www.t00ls.net/thread-49051-1-1.html)
- [基于 Burp Suite 插件打造渗透测试自动化之路](https://www.freebuf.com/sectool/243617.html)
- [解决某次 Burp 抓包出错的方法](https://www.cnblogs.com/cwkiller/p/13846754.html)
- [每天一个小技巧：Burp Suite](https://mp.weixin.qq.com/s/j6x28xHln3guULkPLdat5w)
- [减少 Burp Suite 抓包过程中的“噪音”](https://mp.weixin.qq.com/s/GGpojt445WrBlZw1BzQfCQ_)
- [基础入门：Burp Suite 的常用 Tips](https://mp.weixin.qq.com/s/Qlr1-VOUyOzjnHzx6CTJWw)
- [Burp Suite Pro 实战技巧：命令行工具的身份验证引擎](https://blog.z-labs.eu/2022/01/12/burp-suite-pro-authn-for-cli-tools.html)
- [武装你的 Burp Suite](https://mp.weixin.qq.com/s/V6ejFDAoEbh3QsNdLMQ2og)

## 使用技巧
- **篡改前端 JS 回包信息**：
  右键选择 "Do intercept -- Response to this request"。
  ![](../../../assets/img/Security/安全工具/BurpSuite/33.png)

- **Firefox 下抓包出现浏览器自身请求**：
  在 Firefox `about:config` 中将 `network.captive-portal-service.enabled` 设置为 `false`，以关闭向 `http://detectportal.firefox.com/` 发送请求。
  或者右键选择 "Request in browser -- In original session" 来忽略特定域名的请求。
  ![](../../../assets/img/Security/安全工具/BurpSuite/34.png)

- **自动忽略未导证书的不安全域名**：
  在 Burp Proxy 组件的选项中勾选 "TLS Pass Through" 下的 "automatically add entries on client SSL negotiation failure"。
  ![](../../../assets/img/Security/安全工具/BurpSuite/35.png)

- **快速哈希爆破模块的 payload**：
  在 Burp Intruder 组件的 "Payloads" 选项中添加 "Hash -- MD5" 处理。
  ![](../../../assets/img/Security/安全工具/BurpSuite/36.png)

- **中文显示乱码问题**：
  - 在 "User options - Display - HTTP Message Display" 中选择一个中文字体格式，并调整字体大小。
  - 在 "User options - Display - Character Sets" 中选择 UTF-8 编码。

- **拦截指定 URL 的请求响应包**：
  - 请求包设置：Proxy - Options - Intercept Client Requests - Add
  - 响应包设置：Proxy - Options - Intercept Server Responses - Add

- **自动替换数据包中的内容**：
  Proxy - Options - Match and Replace - Add
  ![](../../../assets/img/Security/安全工具/BurpSuite/53.png)

- **不断提示连接超时**：
  删除 "Connection: close" 头部，或在 Proxy - Options - Set response header "Connection: close" 中进行设置。

- **关闭 http://burp 接口**：
  Proxy - Options - Miscellaneous - Disable web interface at http://burp

- **自动生成 CSRF PoC**：
  右键请求选择 "Engagement tools - Generate CSRF PoC"
  ![](../../../assets/img/Security/安全工具/BurpSuite/48.png)

- **只显示范围内的流量**：
  在 Target - Scope 中设置所需范围即可。

- **自定义字典路径**：
  ![](../../../assets/img/Security/安全工具/BurpSuite/49.png)

- **SwitchyOmega + Burpsuite + Chrome 无法抓取 127.0.0.1/localhost 问题**：
  - [解决方案](https://syunaht.com/p/1006188223.html)：在 SwitchyOmega 插件的不代理地址列表中强制让 Chrome 浏览器代理本地回环。

- **修改 JA3 特征**：
  Project options -- TLS 选择 "Use custom protocols and ciphers" 并随意修改 Cipher Suites，以简单快速地更改 JA3 特征。

## 插件
### 信息收集
- [BeanStack](https://github.com/x41sec/beanstack) - 使用堆栈跟踪进行 Java 指纹识别，实用性一般。
- [Domain Hunter Pro](https://github.com/bit4woo/domain_hunter_pro) - 信息收集工具。
  - [Domain Hunter](https://github.com/bit4woo/domain_hunter) - 利用 Burp 收集整个企业或组织的域名（不仅仅是单个主域名）的插件。
- [Jsdir](https://github.com/Lopseg/Jsdir) - 从 JS 文件中提取隐藏路径并进行美化以便进一步阅读。
- [BurpJSLinkFinder](https://github.com/InitRoot/BurpJSLinkFinder) - 自动收集 JS 内的路径。
  - 注意：该扩展占用大量内存，建议不要在 8GB 内存以下的机器上使用。
- [HaE](https://github.com/gh0stkey/HaE) - 高亮并提取敏感信息。
  - [官方网站](https://gh0st.cn/HaE/)
- [BurpCollector](https://github.com/TEag1e/BurpCollector) - 通过 BurpSuite 构建自己的爆破字典，可用于发现隐藏资产。
  - [BurpCollect](https://github.com/orleven/BurpCollect) - 基于 BurpCollector 的二次开发，记录 Burp Map 记录的数据包中的目录路径参数名信息，并存入 SQLite 数据库，可导出为文本文件。
- [Asset Discover](https://github.com/redhuntlabs/BurpSuite-Asset_Discover) - 从 HTTP 响应中发现资产的 Burp 扩展。
- Active Scan++ - 主动扫描器，但实际效果可能并不理想。
- [CaA](https://github.com/gh0stkey/CaA) - BurpSuite 流量收集和分析插件。

### 功能增强
- [HackBar](https://github.com/d3vilbug/HackBar) - Burp 中的黑客工具栏。
- [Knife](https://github.com/bit4woo/knife) - 添加一些右键菜单使 Burp 使用起来更顺畅。
- [LoggerPlusPlus](https://github.com/nccgroup/LoggerPlusPlus) - BurpSuite 的日志插件，增强版本。
- Collaborator