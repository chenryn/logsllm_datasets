### Microscope: Queue-based Performance Diagnosis for Network Functions

#### 9. Conclusion

In this paper, we introduced Microscope, a tool designed to diagnose network performance issues. We first demonstrated how the stringent performance requirements of Virtual Network Functions (VNFs) can have a lasting impact on latency and throughput across time and network functions, affecting downstream VNFs. We then presented the design and implementation of Microscope, which leverages the key insight of analyzing queuing periods to diagnose such problems.

We evaluated Microscope in a realistic service function chain testbed, where it successfully diagnosed several performance issues for various traffic scenarios. Specifically, Microscope accurately and correctly identified performance problems caused by interrupts, software bugs, traffic bursts, resource exhaustion, and other issues across a chain of different network functions. To the best of our knowledge, Microscope is the first work that shows how microsecond-level events can degrade performance several hops away and how these problems can be diagnosed quickly with low overhead. While Microscope is not a panacea, we believe it can help operators maximize performance while reaping the benefits of virtualization.

This work does not raise any ethical issues.

#### Diagnosing Networked Systems vs. Distributed Systems

Diagnosing distributed systems differs from diagnosing networked systems like VNFs and routers. Networked systems have stricter per-packet latency requirements (e.g., 10-100 microseconds) compared to the per-request latency (millisecond level) in distributed systems. Consequently, the same event (e.g., an interrupt) can affect a larger number of packets in networked systems than requests in distributed systems. For example, an interrupt lasting 100 microseconds may be acceptable in a distributed system but can introduce significant latency in packet processing in networked systems. Furthermore, these smaller problems can propagate across the network, as discussed in Section 2.

#### Acknowledgments

We thank our shepherd Aurojit Panda and the SIGCOMM reviewers for their valuable feedback. We also thank Vijay Gopalakrishnan and Wei Bai for their helpful comments. Junzhi Gong, Yuliang Li, and Minlan Yu are supported in part by the NSF grant CNS-1618138.

#### References

[1] Brocade vyatta 5400 vrouter. http://www.brocade.com/products/all/network-functions-virtualization/product-details/5400-vrouter/index.page.
[2] The Cooperative Association for Internet Data Analysis (CAIDA). http://www.caida.org/.
[3] Data Plane Development Kit. https://www.dpdk.org/.
[4] Evolution of the Broadband Network Gateway. https://www.tmcnet.com/tmc/whitepapers/documents/whitepapers/2013/6756-evolution-the-broadband-network-gateway.pdf.
[5] IEEE Standard 1588-2008. http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=4579757.
[6] Jaeger: Open source, end-to-end distributed tracing. https://www.jaegertracing.org/.
[7] Microscope Survey Form and Results. https://www.dropbox.com/s/66cp4k3wl8zm0q5/survey.pdf?dl=0.
[8] Migration to Ethernet-based Broadband Aggregation. https://www.broadband-forum.org/download/TR-101_Issue-2.pdf.
[9] NFV Proofs of Concept. http://www.etsi.org/technologies-clusters/technologies/nfv/nfv-poc.
[10] Open vSwitch. https://www.openvswitch.org/.
[11] VPP. https://fd.io/.
[12] Zipkin: A distributed tracing system. https://zipkin.io/.

[13] Omid Alipourfard and Minlan Yu. Decoupling algorithms and optimizations in network functions. In Proceedings of the 17th ACM Workshop on Hot Topics in Networks, pages 71–77, 2018.
[14] Bilal Anwer, Theophilus Benson, Nick Feamster, and Dave Levin. Programming slick network functions. In Proceedings of the 1st ACM SIGCOMM Symposium on Software Defined Networking Research, pages 1–13, 2015.
[15] Muhammad Bilal Anwer, Murtaza Motiwala, Mukarram bin Tariq, and Nick Feamster. Switchblade: A platform for rapid deployment of network protocols on programmable hardware. In Proceedings of the ACM SIGCOMM 2010 Conference, pages 183–194, 2010.
[16] Paramvir Bahl, Ranveer Chandra, Albert Greenberg, Srikanth Kandula, David A. Maltz, and Ming Zhang. Towards highly reliable enterprise network services via inference of multi-level dependencies. ACM SIGCOMM Computer Communication Review, 37(4):13–24, 2007.
[17] Paul Barham, Austin Donnelly, Rebecca Isaacs, and Richard Mortier. Using Magpie for request extraction and workload modeling. In OSDI, volume 4, pages 18–18, 2004.
[18] Anat Bremler-Barr, Yotam Harchol, and David Hay. OpenBox: A software-defined framework for developing, deploying, and managing network functions. In Proceedings of the 2016 ACM SIGCOMM Conference, pages 511–524. ACM, 2016.
[19] Mike Y. Chen, Emre Kiciman, Eugene Fratkin, Armando Fox, and Eric Brewer. Pinpoint: Problem determination in large, dynamic internet services. In Proceedings of the International Conference on Dependable Systems and Networks, pages 595–604. IEEE, 2002.
[20] Mosharaf Chowdhury, Zhenhua Liu, Ali Ghodsi, and Ion Stoica. Multi-resource fairness for correlated and elastic demands. In 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16), pages 407–424, 2016.
[21] Mihai Dobrescu, Norbert Egi, Katerina Argyraki, Byung-Gon Chun, Kevin Fall, Gianluca Iannaccone, Allan Knies, Maziar Manesh, and Sylvia Ratnasamy. RouteBricks: Exploiting parallelism to scale software routers. In Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles, pages 15–28, 2009.
[22] Nick G. Duffield and Matthias Grossglauser. Trajectory sampling for direct traffic observation. IEEE/ACM Transactions on Networking, 9(3):280–292, 2001.
[23] Daniel E. Eisenbud, Cheng Yi, Carlo Contavalli, Cody Smith, Roman Kononov, Eric Mann-Hielscher, Ardas Cilingiroglu, Bin Cheyney, Wentao Shang, and Jinna Dylan Hosein. Maglev: A fast and reliable software network load balancer. In 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16), pages 523–535, 2016.
[24] Paul Emmerich, Sebastian Gallenmüller, Daniel Raumer, Florian Wohlfart, and Georg Carle. MoonGen: A scriptable high-speed packet generator. In Proceedings of the 2015 Internet Measurement Conference, pages 275–287, 2015.
[25] Cristian Estan, Stefan Savage, and George Varghese. Automatically inferring patterns of resource consumption in network traffic. In Proceedings of the 2003 Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, pages 137–148, 2003.
[26] Rodrigo Fonseca, George Porter, Randy H. Katz, and Scott Shenker. X-Trace: A pervasive network tracing framework. In 4th USENIX Symposium on Networked Systems Design & Implementation (NSDI 07), 2007.
[27] Rohan Gandhi, Hongqiang Harry Liu, Y. Charlie Hu, Guohan Lu, Jitendra Padhye, Lihua Yuan, and Ming Zhang. Duet: Cloud-scale load balancing with hardware and software. ACM SIGCOMM Computer Communication Review, 44(4):27–38, 2014.
[28] Yilong Geng, Shiyu Liu, Zi Yin, Ashish Naik, Balaji Prabhakar, Mendel Rosenblum, and Amin Vahdat. Exploiting a natural network effect for scalable, fine-grained clock synchronization. In 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18), pages 81–94, 2018.
[29] Younghwan Go, Muhammad Asim Jamshed, YoungGyoun Moon, Changho Hwang, and KyoungSoo Park. APUNet: Revitalizing GPU as packet processing accelerator. In 14th USENIX Symposium on Networked Systems Design and Implementation (NSDI 17), pages 83–96, 2017.
[30] Sangjin Han, Keon Jang, Aurojit Panda, Shoumik Palkar, Dongsu Han, and Sylvia Ratnasamy. SoftNIC: A software NIC to augment hardware. EECS Department, University of California, Berkeley, Tech. Rep. UCB/EECS-2015-155, 2015.
[31] Sangjin Han, Keon Jang, KyoungSoo Park, and Sue Moon. PacketShader: A GPU-accelerated software router. ACM SIGCOMM Computer Communication Review, 40(4):195–206, 2010.
[32] Muhammad Asim Jamshed, Jihyung Lee, Sangwoo Moon, Insu Yun, Deokjin Kim, Sungryoul Lee, Yung Yi, and KyoungSoo Park. Kargus: A highly-scalable software-based intrusion detection system. In Proceedings of the 2012 ACM Conference on Computer and Communications Security, pages 317–328. ACM, 2012.
[33] Keon Jang, Sangjin Han, Seungyeop Han, Sue B. Moon, and KyoungSoo Park. SSLShader: Cheap SSL acceleration with commodity processors. In NSDI, pages 1–14, 2011.
[34] Murad Kablan, Azzam Alsudais, Eric Keller, and Franck Le. Stateless network functions: Breaking the tight coupling of state and processing. In 14th USENIX Symposium on Networked Systems Design and Implementation (NSDI 17), pages 97–112, 2017.
[35] Kostis Kaffes, Timothy Chong, Jack Tigar Humphries, Adam Belay, David Mazières, and Christos Kozyrakis. Shinjuku: Preemptive scheduling for µsecond-scale tail latency. In 16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19), pages 345–360, 2019.
[36] Srikanth Kandula, Ratul Mahajan, Patrick Verkaik, Sharad Agarwal, Jitendra Padhye, and Paramvir Bahl. Detailed diagnosis in enterprise networks. ACM SIGCOMM Computer Communication Review, 39(4):243–254, 2009.
[37] Rishi Kapoor, Alex C. Snoeren, Geoffrey M. Voelker, and George Porter. Bullet trains: A study of NIC burst behavior at microsecond timescales. In Proceedings of the Ninth ACM Conference on Emerging Networking Experiments and Technologies, pages 133–138, 2013.
[38] Georgios P. Katsikas, Tom Barbette, Dejan Kostic, Rebecca Steinert, and Gerald Q. Maguire Jr. Metron: NFV service chains at the true speed of the underlying hardware. In 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18), pages 171–186, 2018.
[39] Joongi Kim, Keon Jang, Keunhong Lee, Sangwook Ma, Junhyun Shim, and Sue Moon. NBA (Network Balancing Act): A high-performance packet processing framework for heterogeneous processors. In Proceedings of the Tenth European Conference on Computer Systems, page 22. ACM, 2015.
[40] Eddie Kohler, Robert Morris, Benjie Chen, John Jannotti, and M. Frans Kaashoek. The Click modular router. ACM Transactions on Computer Systems (TOCS), 18(3):263–297, 2000.
[41] Ramana Rao Kompella, Jennifer Yates, Albert Greenberg, and Alex C. Snoeren. IP fault localization via risk modeling. In Proceedings of the 2nd Conference on Symposium on Networked Systems Design & Implementation - Volume 2, NSDI'05, pages 57–70, Berkeley, CA, USA, 2005. USENIX Association.
[42] Sameer G. Kulkarni, Wei Zhang, Jinho Hwang, Shriram Rajagopalan, K. K. Ramakrishnan, Timothy Wood, Mayutan Arumaithurai, and Xiaoming Fu. NFVnice: Dynamic backpressure and scheduling for NFV service chains. In Proceedings of the Conference of the ACM Special Interest Group on Data Communication, pages 71–84. ACM, 2017.
[43] Bojie Li, Kun Tan, Layong Larry Luo, Yanqing Peng, Renqian Luo, Ningyi Xu, Yongqiang Xiong, Peng Cheng, and Enhong Chen. ClickNP: Highly flexible and high-performance network processing with reconfigurable hardware. In Proceedings of the 2016 ACM SIGCOMM Conference, pages 1–14. ACM, 2016.
[44] Jonathan Mace, Peter Bodik, Rodrigo Fonseca, and Madanlal Musuvathi. Retro: Targeted resource management in multi-tenant distributed systems. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15), pages 589–603, 2015.
[45] Jonathan Mace, Ryan Roelke, and Rodrigo Fonseca. Pivot tracing: Dynamic causal monitoring for distributed systems. ACM Transactions on Computer Systems (TOCS), 35(4):1–28, 2018.
[46] Karthik Nagaraj, Charles Killian, and Jennifer Neville. Structured comparative analysis of systems logs to diagnose performance problems. In Presented as part of the 9th USENIX Symposium on Networked Systems Design and Implementation (NSDI 12), pages 353–366, 2012.
[47] Jaehyun Nam, Junsik Seo, and Seungwon Shin. Probius: Automated approach for VNF and service chain analysis in software-defined NFV. In Proceedings of the Symposium on SDN Research, pages 1–13, 2018.
[48] Shoumik Palkar, Chang Lan, Sangjin Han, Keon Jang, Aurojit Panda, Sylvia Ratnasamy, Luigi Rizzo, and Scott Shenker. E2: A framework for NFV applications. In Proceedings of the 25th Symposium on Operating Systems Principles, pages 121–136, 2015.
[49] Aurojit Panda, Sangjin Han, Keon Jang, Melvin Walls, Sylvia Ratnasamy, and Scott Shenker. NetBricks: Taking the V out of NFV. In 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 16), pages 203–216, 2016.
[50] Luigi Rizzo. Netmap: A novel framework for fast packet I/O. In 21st USENIX Security Symposium (USENIX Security 12), pages 101–112, 2012.
[51] Chen Sun, Jun Bi, Zhilong Zheng, Heng Yu, and Hongxin Hu. NFP: Enabling network function parallelism in NFV. In Proceedings of the Conference of the ACM Special Interest Group on Data Communication, pages 43–56. ACM, 2017.
[52] Shivaram Venkataraman, Zongheng Yang, Michael Franklin, Benjamin Recht, and Ion Stoica. Ernest: Efficient performance prediction for large-scale advanced analytics. In 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16), pages 363–378, 2016.
[53] Wenfei Wu, Keqiang He, and Aditya Akella. PerfSight: Performance diagnosis for software dataplanes. In Proceedings of the 2015 Internet Measurement Conference, pages 409–421, 2015.
[54] Shaula Alexander Yemini, Shmuel Kliger, Eyal Mozes, Yechiam Yemini, and David Ohsie. High speed and robust event correlation. IEEE Communications Magazine, 34(5):82–90, 1996.
[55] Kai Zhang, Bingsheng He, Jiayu Hu, Zeke Wang, Bei Hua, Jiayi Meng, and Lishan Yang. G-Net: Effective GPU sharing in NFV systems. In 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18), pages 187–200, 2018.
[56] Yang Zhang, Bilal Anwer, Vijay Gopalakrishnan, Bo Han, Joshua Reich, Aman Shaikh, and Zhi-Li Zhang. ParaBox: Exploiting parallelism for virtual network functions in service chaining. In Proceedings of the Symposium on SDN Research, pages 143–149, 2017.