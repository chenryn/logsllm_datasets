### 服务存储与合规性审查

- **敏感信息存储**：该服务是否保存持卡人信息（如信用卡号码）或个人身份信息（如社会保险号或患者护理记录）？是否存在其他可能引发监管、合同义务、隐私侵犯或声誉损害的安全隐患？
- **法规与合同要求**：此服务是否需遵守特定的法律法规或合同规定，例如美国出口管制条例、支付卡行业数据安全标准 (PCI-DSS) 或健康保险流通与责任法案 (HIPAA) 等？

这些信息对于有效管理技术风险以及潜在的安全和合规性风险至关重要。同时，它们也是设计生产控制环境时不可或缺的输入参考。请参阅图11-1和图11-2中启动及移交准备审查的例子。

![谷歌的启动准备审查](media/rId27.png){width="3.0866666666666664in" height="2.3133333333333335in"}

- 来源：["SRE@谷歌：自2004年以来的数千个DevOps"](https://www.youtube.com/watch?v=iIuTnhdTzK0)，USENIX发布的YouTube视频，时长45:57，发布日期为2012年1月12日。

![谷歌的移交准备审查](media/rId29.png){width="3.0866666666666664in" height="2.3066666666666666in"}

- 同上。

正如*《云系统管理实践》*（Addison-Wesley, 2002）一书的共同作者、前Google网站可靠性工程师Tom Limoncelli所指出，“在理想情况下，产品团队会持续利用LRR检查表作为指导，在开发过程中努力完成，并根据需要联系SRR获取支持。”此外，Limoncelli于2016年曾分享道：
> “那些获得最快HRR生产批准的团队往往是在项目初期就积极寻求SRE合作的团队，从设计阶段一直到最终推出。令人欣慰的是，总是很容易找到愿意帮忙的SRE。每位SRE都认为向项目团队提供早期建议非常有价值，并且通常会在几个小时甚至几天内主动提出帮助。”

这种SRE早期介入支持产品团队的做法是Google文化中的一项重要规范。Limoncelli进一步解释说：“协助产品团队是一种长期投资，将在几个月后的发布阶段得到回报。这是一种‘良好公民’行为和‘社区服务’，受到高度重视；在评估SRE晋升时，这一点通常会被考虑进去。”

### 创建共享源代码库模式

公司范围内的共享源代码库是集成组织内部发现的有效机制之一。每当工程师更新共享库中的内容时，这些更改将迅速自动传播至所有使用该库的服务，并通过每个团队的部署流水线进行整合。

Google便是采用此类大规模共享源代码库的一个典型案例。截至2015年，Google拥有一个包含超过十亿文件和二十多亿行代码的单一仓库，服务于其两万五千名工程师，覆盖了包括搜索、地图、文档、Google+、日历、Gmail和YouTube在内的所有主要组件。Chrome和Android项目则位于独立的仓库中，某些敏感算法（如PageRank）仅限特定团队访问。

其中一个显著的好处在于，工程师可以充分利用整个组织的知识资源。负责开发者基础设施小组的Google工程经理Rachel Potvin在接受[*Wired*](https://www.wired.com/2015/09/google-2-billion-lines-codeand-one-place/)采访时提到：“每位Google工程师都能访问‘丰富的收藏’，因为几乎所有事情都已经被做过。”

此外，Eran Messeri强调，使用统一仓库的一个优势在于它使用户能够轻松访问所有代码的最新版本而无需额外协调。我们不仅将源代码放入共享仓库，还包括编码知识和其他学习成果，具体如下：
- 库、基础设施和环境配置标准（如Chef食谱、Puppet脚本等）
- 部署工具
- 测试标准及工具，特别是安全性相关
- 部署流水线工具
- 监控与分析工具
- 教程与指南

通过这样的方式对知识进行编码并共享是我们最有效的传播手段之一。Randy Shoup在2014年表示：
> “防止Google故障发生的最强有力措施就是单个代码仓库。每次有人提交到仓库时，都会触发一次新的构建过程，确保所有内容都是最新的。一切都是从源头构建而来，而非运行时动态链接。始终存在当前正在使用的库的一个明确版本，这是在构建过程中静态链接的结果。”

Tom Limoncelli在其著作中也提到，为整个组织建立这样一个仓库的价值难以言喻。
> “你可以开发一个工具供所有项目使用。你有百分之百的信心知道哪些组件依赖于某个库；因此，当你重构这个库时，你能准确地知道谁会受到影响，并且确切地知道谁需要运行回归测试。我可以再列举上百个例子来说明这对Google的竞争优势有多么巨大。”

在Google，每个库（例如libc、OpenSSL以及内部开发的Java线程库等）都有专门的负责人，以确保该库不仅能成功编译，还能通过所有项目的测试，成为可靠的资源。这位负责人还负责指导各项目从一个版本迁移到下一个版本。

举例来说，某组织在其生产环境中运行着81个不同版本的Java Struts框架库，除了其中一个版本外，其余均存在严重的安全漏洞。维护如此众多的版本及其各自的特性给运维带来了巨大的负担。同时，这使得版本升级变得异常困难且充满风险，从而阻碍了开发者采取行动。这一恶性循环得以延续。

然而，单一源代码仓库极大地缓解了这些问题，并通过自动化测试让团队能够安全自信地迁移至新版本。如果无法在一个源树上构建一切，则必须找到其他方法来维护库及其依赖项的良好状态版本。例如，我们可以设立一个全公司范围内的仓库，如Nexus、Artifactory或Debian/RPM仓库，并在这些仓库中及时更新已知存在漏洞的部分。

### 结论

希望上述模式能够揭示SRE与DevOps之间存在的紧密联系——两者之间的共通之处远超人们想象，并且基于相似的原则与目标运作。

### 进一步阅读与参考资料

- Mike Bland在2015 DevOps企业峰会上的演讲：“痛苦结束了，如果你愿意的话”，Slideshare.net，由Gene Kim发布，2015年11月18日。
- Eran Messeri在GOTO Conference上的演讲：“当数千名工程师共享同一个持续构建时会发生什么？”丹麦奥胡斯，2013年10月2日。
- Tom Limoncelli关于“SRE@Google: 自2004年起的数千个DevOps”的USENIX协会演讲，YouTube视频，时长45:57，2012年1月12日发布。
- Ben Treynor在Usenix SREcon14上的演讲：“SRE的关键”，加利福尼亚州圣克拉拉市，2014年5月30日。
- Cade Metz的文章：“Google拥有20亿行代码——而且都在一个地方”，*Wired*杂志，2015年9月16日。
- Eran Messeri的文章：“当数千名工程师共享同一个持续构建时会发生什么？”（2013年）。
- Tom Limoncelli的文章：“是的，你真的可以从HEAD开始工作”，EverythingSysAdmin.com，2014年3月15日。
- Tom Limoncelli的文章：“Python优于Perl6”，EverythingSysAdmin.com，2011年1月10日。
- Quora论坛上的讨论：“Google内部使用哪些编程语言？”及“Google何时允许除Python、C++、Java和Go之外的语言用于内部项目？”访问日期为2016年5月29日。
- Tom Limoncelli、Strata Chalup和Christina Hogan合著的*《云计算系统管理实践》*（Addison-Wesley出版社，2002年版）。

### 编者简介

Gene Kim是一位屡获殊荣的CTO、研究员以及*《凤凰计划》*、*《DevOps手册》*和*《加速》*（IT Revolution出版）的合著者。他还是DevOps企业峰会的组织者。