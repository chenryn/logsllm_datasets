### 5. Further Discussion

In this section, we highlight the significant reduction in traffic observed when comparing the original and filtered views in all visualizations presented in Section 4. The exposure map-filtered views consistently provided a quick and effective way to focus on what we term "dangerous traffic." While it is possible to identify such traffic in the unfiltered views, the filtered views significantly expedite the process, thereby enhancing the efficiency of network flow analysis for security analysts.

Our filtering technique, as demonstrated in Section 4, offers a valuable tool for security analysts to better understand and detect malicious activity within their networks. However, it is important to acknowledge that our approach has limitations. For instance, sophisticated attackers who are careful to probe only open ports or use a large botnet to scan and attack selectively may evade detection. In such cases, the exposure maps, which assume that attackers will attempt connections to both open and closed ports, may not classify the traffic as suspicious.

In more advanced scenarios, an attacker could use each bot to probe a single port on a single host, and then launch attacks on identified open ports using new bots. This type of coordinated attack would be challenging to detect, although visual patterns might still be discernible. Additionally, high volumes of potentially malicious traffic can clutter the filtered visualizations, which can be mitigated by further basic filtering, such as limiting the visualization to specific destination hosts, ports, or protocols.

Many of the issues discussed above are not unique to our visualization method. Conti et al. [5] have highlighted various information visualization attacks targeting both users and the tools themselves. We believe that any network analysis visualization tool will have its own set of drawbacks, and often a combination of approaches may be necessary. Despite these limitations, our filtering approach remains useful, even if it occasionally misclassifies some traffic.

Given the vast amount of raw network traffic and logs, real-time monitoring of network activities using most existing visualization techniques is challenging. Our technique can be adapted to filter network flows on-the-fly with immediate visualization, allowing analysts to focus exclusively on suspicious or dangerous network flows in real time. For each new externally initiated flow, at most two comparisons are needed to determine if the flow should be added to the dangerous table (T4 in Section 3). First, we use the Network Exposure Map (NEM) to check if the flow is destined for a host/port combination for which no authorized service is offered. If so, the flow is added to the dangerous table only if the source IP address has previously attempted to connect to an open port within a predefined time window. Otherwise, if the flow is attempting to connect to an open port, it will be added to the dangerous table only if the source IP address has probed at least one closed port. This can be efficiently managed using bit array data structures to track whether each source IP address has probed open and closed ports. The processing time for each network flow is thus bounded by a small constant.

### 6. Related Work

Interest in information security visualization has grown rapidly in recent years, providing network security analysts with new tools and methods for visually identifying and classifying network attacks. Most of these visualization systems follow the information visualization mantra: "overview first, zoom and filter, details on demand" [19]. These systems initially display large amounts of data, allowing analysts to zoom and filter into areas of interest. However, modern attacks are becoming more sophisticated and stealthy, making it difficult for analysts to select the appropriate areas to zoom into. This often results in an inefficient process of repeatedly zooming in and viewing details, only to find that the area is not of interest. Visualization should ideally speed up data interpretation by leveraging human visual processing power, but highly distributed attacks and excessive Internet background radiation [15] make it challenging to use standard visualization tools effectively.

Conti et al. [4, 6] discuss visualization systems that filter data but leave it up to the analyst to select which records to display. The prefiltering phase involves removing unwanted fields from flows or formatting the data, but does not automatically remove full flows. Tools like Portvis [11, 2] allow analysts to see port activity over a defined period, offering a high-level method of detecting malicious activity. However, attackers can bypass detection by using frequently used ports or a small number of packets. NvisionIP [23] uses a grid-based visualization to plot source IP addresses and colors to identify accessed ports, but this can become cluttered with a large number of sources and ports.

Honeynets are commonly used to analyze malicious network behavior. Grizzard et al. [8] compared honeynet data to real-world data, using histograms to visualize large amounts of data. While they can detect large spikes in activity related to major worms, stealth scans are largely undetectable. An alternative approach is to characterize or model malicious behavior through visualization. Muelder et al. [13] suggested a tighter interaction between overview and detail phases, while Conti et al. [3] explored visualizing scanning tool behavior under different operating systems. Although useful, minor modifications to these tools can generate different visual footprints. Muelder et al. [12] also pursued the classification of suspicious network traffic using associative memory with neural networks to reduce noise and identify scans. The Spinning Cube of Potential Doom [9] highlights different types of scans, but advanced techniques like slow or highly distributed scans may be hidden by normal traffic and background radiation. Gates et al. [7] used the concept of unique source IP addresses per hour to detect malicious activity. The Isis tool [18] allows visualization of intrusions through variable time-scales.

### 7. Concluding Remarks

Our visualization proposal relies heavily on the exposure maps technique [22] for filtering network traffic. This significantly reduces the amount of traffic displayed for security monitoring and analysis, focusing attention on flows from sources that have probed at least one closed and one open port. While not foolproof, this approach is useful for highlighting both common and some advanced adversaries, as well as compromised hosts.

In contrast, many available tools and methodologies require the analyst to input appropriate filtering parameters, which, if incorrect, can result in unnecessary processing overhead and difficulty in identifying malicious activity. Our simple visualizations demonstrate the effectiveness of filtering out "known good" and "harmless bad" traffic, allowing focus on specific types of suspicious traffic. Although our dataset was from a relatively small university network, the unfiltered visualizations were still challenging due to the volume and richness of the traffic. Future work includes experimenting with larger datasets and combining our approach with other visualization methods [11, 18, 9, 12].

### References

[1] Argus Suite. http://qosient.com/argus. Accessed January 2008.
[2] C. Muelder, K.-L. Ma, and T. Bartoletti. Interactive visualization for network and port scan detection. In RAID'05: Proceedings of Recent Advances in Intrusion Detection, September 2005.
[3] G. Conti and K. Abdullah. Passive visual fingerprinting of network attack tools. In VizSEC/DMSEC '04: Proceedings of the 2004 ACM Workshop on Visualization and Data Mining for Computer Security, pages 45–54, New York, NY, USA, 2004.
[4] G. Conti, K. Abdullah, J. Grizzard, J. Stasko, J. A. Copeland, M. Ahamad, and C. Lee. Countering security analyst and network administrator overload through alert and packet visualization. IEEE Computer Graphics & Applications, 26(2):60–70, March/April 2006.
[5] G. Conti, M. Ahamad, and J. Stasko. Attacking information visualization system usability: Overloading and deceiving the human. In Proceedings of the 2005 Symposium on Usable Privacy and Security (SOUPS 05), pages 89–100, 2005.
[6] G. Conti, J. Grizzard, M. Ahamad, and H. Owen. Visual exploration of malicious binary objects using semantic zoom, interactive encoding, and dynamic queries. In Proceedings of the Workshop on Visualization for Computer Security (VizSEC 05), pages 83–90, October 2005.
[7] C. Gates, J. McNutt, J. Kadane, and M. Kellner. Detecting scans at the ISP level. Technical Report CMU/SEI-2006-TR-005, Software Engineering Institute, Carnegie Mellon University, 2006.
[8] J. Grizzard, J. Charles Simpson, S. Krasser, H. Owen, and G. Riley. Flow-based observations from NETI@home and honeynet data. In Proceedings of the Sixth IEEE Systems, Man, and Cybernetics Information Assurance Workshop, pages 244–251, June 2005.
[9] S. Lau. The spinning cube of potential doom. Communications of the ACM, 47(6):25–26, 2004.
[10] LBNL/ICSI Enterprise Tracing Project. http://www.icir.org/enterprise-tracing/Overview.html.
[11] J. McPherson, K.-L. Ma, P. Krystosk, T. Bartoletti, and M. Christensen. Portvis: A tool for port-based detection of security events. In VizSEC/DMSEC '04: Proceedings of the ACM Workshop on Visualization and Data Mining for Computer Security, pages 73–81, New York, NY, USA, 2004.
[12] C. Muelder, L. Chen, R. Thomason, K.-L. Ma, and T. Bartoletti. Intelligent classification and visualization of network scans. In Proceedings of the Workshop on Visualization for Computer Security (VizSEC 07), October 2007.
[13] C. Muelder, K.-L. Ma, and T. Bartoletti. A visualization methodology for characterization of network scans. In Proceedings of the Workshop on Visualization for Computer Security (VizSEC 05), pages 29–38, Washington, DC, USA, 2005. IEEE Computer Society.
[14] NMAP. http://nmap.org. Accessed April 2008.
[15] R. Pang, V. Yegneswaran, P. Barford, V. Paxson, and L. Peterson. Characteristics of internet background radiation. In IMC '04: Proceedings of the 4th ACM SIGCOMM Conference on Internet Measurement, pages 27–40, New York, NY, USA, 2004.
[16] PCAP. http://tcpdump.org. Accessed January 2008.
[17] M. Peck. A brainy approach to image sorting. http://www.spectrum.ieee.org/apr08/6121, April 2008.
[18] D. Phan, J. Gerth, M. Lee, A. Paepcke, and T. Winograd. Visual analysis of network flow data with timelines and event plots. In Proceedings of the Workshop on Visualization for Computer Security (VizSEC 07), 2007.
[19] B. Shneiderman. The eyes have it: A task by data type taxonomy for information visualizations. Technical Report UMCP-CSD CS-TR-3665, College Park, Maryland, 1996.
[20] K. Stockinger, E. W. Bethel, S. Campbell, E. Dart, and K. Wu. Detecting distributed scans using high-performance query-driven visualization. In Proceedings of the 2006 ACM/IEEE Conference on Supercomputing, New York, NY, USA, 2006.
[21] A. Wagner and B. Plattner. Entropy-based worm and anomaly detection in fast IP networks. 14th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprise, pages 172–177, June 2005.
[22] D. Whyte, P. C. van Oorschot, and E. Kranakis. Tracking darkports for network defense. Twenty-Third Annual Computer Security Applications Conference, ACSAC 2007, pages 161–171.
[23] W. Yurcik. Tool update: NVisionIP improvements (difference view, sparklines, and shapes). In Proceedings of the Workshop on Visualization for Computer Security (VizSEC 06), New York, NY, USA, 2006.