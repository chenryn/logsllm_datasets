### Extended Application of the Technique

The technique has been extended to various scenarios, including file system forensics [73] and intrusion recovery [26]. Beyond desktop computers, it has also been applied to high-performance computing systems [15] and web servers [3, 4].

### Reducing Storage Overhead in System Logs

Maintaining system logs from enterprise machines consumes significant storage space. Recent research efforts have focused on reducing this overhead. One primary approach involves removing logs that meet specific conditions, such as edges with identical source and target [83], temporary files [45], frequently invoked programs [77], and identical events with multiple versions [37]. Additionally, operating system labels [76] and access control policies [5] have been utilized for log removal. SEAL stands out by compressing logs using various coding techniques, ensuring that all information necessary for attack investigation is preserved.

### Enhancing Logger Efficiency

Since system logs are generated by the logger of end-hosts, several studies have explored ways to improve the logger's efficiency. Techniques such as in-kernel caching [49], kernel-space hooks [65, 66], dual execution [43], execution partitioning [50], tracing-tainting alternation [51], on-demand information flow tracking [39], and library-aware tracing [81] have been proposed to enhance the logger for efficient provenance analysis. Furthermore, the security of the logger itself has been a subject of investigation [6, 9]. SEAL, being applied on the data aggregator side, can complement these end-host approaches.

### Log Analysis and Representation

After collecting logs, connecting and representing them effectively is crucial for attack investigation. Most efforts have been directed towards tailoring logs for graph-based analytics [31, 33, 36, 57, 58, 70]. Some works have also focused on reconstructing the "crime scene" from the logs [46, 56, 67, 80]. Given that log analytics results need to be processed by human analysts, research has developed new domain-specific query languages [23–25, 44, 72] and task prioritization methods [34, 48] to reduce their workload.

### Breach Detection in Enterprise Environments

Before conducting attack investigations, detection systems like firewalls, web proxies, and IDS must promptly identify breaches and generate alerts. Research has employed machine learning techniques to mine attacks from enterprise logs. Classical models such as logistic regression and random forest have been used to detect malicious domains from network logs [62, 63, 84] and malicious files from end-host logs [10]. Recently, deep learning models like Long Short-Term Memory (LSTM) [19] and embedding [47] have been leveraged for similar purposes. While SEAL's primary application is causality analysis, it could be adapted for breach detection, which is a topic for future exploration.

### Data Compression in Databases

Database compression can be traced back to Bassiouni [2] and Cormack [13] in 1985, where compression techniques were applied to record properties or fields. Graefe and Shapiro [29] proposed compressing properties and querying compressed data as much as possible. Cross-property compression was investigated in [68] to explore dependencies among related fields. Column-oriented databases [1, 38, 75] store each column separately, allowing for the exploration of compression potential along columns. Bitmap index compression has been developed in various works [12, 61, 74, 82] to improve query processing. Our work investigates a new application, causality analysis, with compression.

### Conclusion

Causality analysis reconstructs information flow across different files, processes, and hosts, enabling effective attack investigation and forensic analysis. However, it requires substantial storage, which hinders its widespread adoption by enterprises. Our work demonstrates that storage overhead can be mitigated through query-friendly compression. Compared to previous data reduction methods, our system, SEAL, offers similar or better storage (e.g., 9.81x event reduction and 2.63x database size reduction on DSind) and query efficiency (average query speed is 64% of the uncompressed form) with no false positives or negatives in causality queries. We make the first attempt to integrate coding techniques (like Delta and Golomb coding) with a security application. We hope that more security applications will benefit from coding community techniques, and we will continue this investigation.

### Acknowledgments

We thank our shepherd Birhanu Eshete and the anonymous reviewers for their valuable comments that improved the paper.

### References

[1] Daniel J Abadi, Peter A Boncz, and Stavros Harizopoulos. Column-oriented database systems. Proceedings of the VLDB Endowment, 2(2):1664–1665, 2009.
[2] Mostafa A. Bassiouni. Data compression in scientific and statistical databases. IEEE Transactions on Software Engineering, (10):1047–1058, 1985.
[3] Adam Bates, Kevin Butler, Alin Dobra, Brad Reaves, Patrick Cable, Thomas Moyer, and Nabil Schear. Retrofitting applications with provenance-based security monitoring. arXiv preprint arXiv:1609.00266, 2016.
[4] Adam Bates, Wajih Ul Hassan, Kevin Butler, Alin Dobra, Bradley Reaves, Patrick Cable, Thomas Moyer, and Nabil Schear. Transparent web service auditing via network provenance functions. In Proceedings of the 26th International Conference on World Wide Web, pages 887–895, 2017.
[5] Adam Bates, Dave Tian, Grant Hernandez, Thomas Moyer, Kevin RB Butler, and Trent Jaeger. Taming the costs of trustworthy provenance through policy reduction. ACM Transactions on Internet Technology (TOIT), 17(4):1–21, 2017.
[6] Adam Bates, Dave Jing Tian, Kevin RB Butler, and Thomas Moyer. Trustworthy whole-system provenance for the Linux kernel. In 24th USENIX Security Symposium (USENIX Security 15), pages 319–334, 2015.
[7] Monica Bianchini, Marco Gori, and Franco Scarselli. Inside PageRank. ACM Transactions on Internet Technology (TOIT), 5(1):92–128, 2005.
[8] VMware Carbon Black. Threat hunting and incident response for hybrid deployments. https://www.carbonblack.com/products/edr/, 2020.
[9] Kevin D Bowers, Catherine Hart, Ari Juels, and Nikos Triandopoulos. Pillarbox: Combating next-generation malware with fast forward-secure logging. In International Workshop on Recent Advances in Intrusion Detection, pages 46–67. Springer, 2014.
[10] Ahmet Salih Buyukkayhan, Alina Oprea, Zhou Li, and William Robertson. Lens on the endpoint: Hunting for malicious software through endpoint data analysis. In International Symposium on Research in Attacks, Intrusions, and Defenses, pages 73–97. Springer, 2017.
[11] Bryan Cantrill, Michael W Shapiro, and Adam H Leventhal. Dynamic Instrumentation of Production Systems. USENIX Annual Technical Conference (ATC), Boston, MA, 2004.
[12] Zhen Chen, Yuhao Wen, Junwei Cao, Wenxun Zheng, Jiahui Chang, Yinjun Wu, Ge Ma, Mourad Hakmaoui, and Guodong Peng. A survey of bitmap index compression algorithms for big data. Tsinghua Science and Technology, 20(1):100–115, 2015.
[13] Gordon V Cormack. Data compression on a database system. Communications of the ACM, 28(12):1336–1342, 1985.
[14] Cybereason. Defense platform. https://www.cybereason.com/platform/endpoint-detection-response-edr. Accessed: 2020-2-15.
[15] Dong Dai, Yong Chen, Philip Carns, John Jenkins, and Robert Ross. Lightweight provenance service for high-performance computing. In 2017 26th International Conference on Parallel Architectures and Compilation Techniques (PACT), pages 117–129. IEEE, 2017.
[16] DARPA/I2O. DARPA Transparent Computing. https://github.com/darpa-i2o/Transparent-Computing, 2020.
[17] Anirban Dasgupta, Ravi Kumar, and Tamas Sarlos. On estimating the average degree. In Proceedings of the 23rd international conference on World wide web, pages 795–806, 2014.
[18] Peter Deutsch et al. Gzip file format specification version 4.3. Technical report, RFC 1952, May, 1996.
[19] Min Du, Feifei Li, Guineng Zheng, and Vivek Srikumar. DeepLog: Anomaly detection and diagnosis from system logs through deep learning. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages 1285–1298, 2017.
[20] Wenfei Fan, Jianzhong Li, Xin Wang, and Yinghui Wu. Query preserving graph compression. In Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data, pages 157–168, 2012.
[21] Uriel Feige. On sums of independent random variables with unbounded variance and estimating the average degree in a graph. SIAM Journal on Computing, 35(4):964–984, 2006.
[22] FireEye. Endpoint security and solutions. https://www.fireeye.com/solutions/hx-endpoint-security-products.html, 2020.
[23] Peng Gao, Xusheng Xiao, Ding Li, Zhichun Li, Kangkook Jee, Zhenyu Wu, Chung Hwan Kim, Sanjeev R Kulkarni, and Prateek Mittal. SAQL: A stream-based query system for real-time abnormal system behavior detection. In 27th USENIX Security Symposium (USENIX Security 18), pages 639–656, 2018.
[24] Peng Gao, Xusheng Xiao, Zhichun Li, Kangkook Jee, Fengyuan Xu, Sanjeev R Kulkarni, and Prateek Mittal. A query system for efficiently investigating complex attack behaviors for enterprise security. Proceedings of the VLDB Endowment, 12(12):1802–1805, 2019.
[25] Peng Gao, Xusheng Xiao, Zhichun Li, Fengyuan Xu, Sanjeev R Kulkarni, and Prateek Mittal. AIQL: Enabling efficient attack investigation from system monitoring data. In 2018 USENIX Annual Technical Conference (USENIX ATC 18), pages 113–126, 2018.
[26] Ashvin Goel, Kenneth Po, Kamran Farhadi, Zheng Li, and Eyal De Lara. The Taser intrusion recovery system. In Proceedings of the twentieth ACM symposium on Operating systems principles, pages 163–176, 2005.
[27] Oded Goldreich and Dana Ron. Approximating average parameters of graphs. Random Structures & Algorithms, 32(4):473–493, 2008.
[28] Solomon W Golomb, Basil Gordon, and Lloyd R Welch. Comma-free codes. Canadian Journal of Mathematics, 10:202–209, 1958.
[29] Goetz Graefe and Leonard D Shapiro. Data compression and database performance. University of Colorado, Boulder, Department of Computer Science, 1990.
[30] Xueyuan Han, Thomas Pasquier, Adam Bates, James Mickens, and Margo Seltzer. UNICORN: Runtime Provenance-Based Detector for Advanced Persistent Threats. In NDSS, San Diego, CA.
[31] Xueyuan Han, Thomas Pasquier, Adam Bates, James Mickens, and Margo Seltzer. UNICORN: Runtime provenance-based detector for advanced persistent threats. arXiv preprint arXiv:2001.01525, 2020.
[32] Morris H Hansen and William N Hurwitz. On the theory of sampling from finite populations. The Annals of Mathematical Statistics, 14(4):333–362, 1943.
[33] Wajih Ul Hassan, Lemay Aguse, Nuraini Aguse, Adam Bates, and Thomas Moyer. Towards scalable cluster auditing through grammatical inference over provenance graphs. In Network and Distributed Systems Security Symposium, 2018.
[34] Wajih Ul Hassan, Shengjian Guo, Ding Li, Zhengzhang Chen, Kangkook Jee, Zhichun Li, and Adam Bates. Nodoze: Combatting threat alert fatigue with automated provenance triage. In NDSS, 2019.
[35] Kelly Jackson Higgins. The rebirth of endpoint security. https://www.darkreading.com/endpoint/the-rebirth-of-endpoint-security/d/d-id/1322775, 2015.
[36] Md Nahid Hossain, Sadegh M Milajerdi, Junao Wang, Birhanu Eshete, Rigel Gjomemo, R Sekar, Scott Stoller, and VN Venkatakrishnan. SLEUTH: Real-time attack scenario reconstruction from COTS audit data. In 26th USENIX Security Symposium (USENIX Security 17), pages 487–504, 2017.
[37] Md Nahid Hossain, Junao Wang, Ofer Weisse, R Sekar, Daniel Genkin, Boyuan He, Scott D Stoller, Gan Fang, Frank Piessens, Evan Downing, et al. Dependence-preserving data compaction for scalable forensic analysis. In 27th USENIX Security Symposium (USENIX Security 18), pages 1723–1740, 2018.
[38] S Idreos, F Groffen, N Nes, S Manegold, S Mullender, and M Kersten. MonetDB: Two decades of research in column-oriented database. IEEE Data Engineering Bulletin, 2012.
[39] Yang Ji, Sangho Lee, Evan Downing, Weiren Wang, Mattia Fazzini, Taesoo Kim, Alessandro Orso, and Wenke Lee. Rain: Refinable attack investigation with on-demand inter-process information flow tracking. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages 377–390, 2017.
[40] Vishal Karande, Erick Bauman, Zhiqiang Lin, and Latifur Khan. SGX-Log: Securing system logs with SGX. In Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security, pages 19–30, 2017.
[41] Liran Katzir, Edo Liberty, and Oren Somekh. Estimating sizes of social networks via biased sampling. In Proceedings of the 20th international conference on World wide web, pages 597–606, 2011.
[42] Samuel T King and Peter M Chen. Backtracking intrusions. In Proceedings of the nineteenth ACM symposium on Operating systems principles, pages 223–236, 2003.
[43] Yonghwi Kwon, Dohyeong Kim, William Nick Sumner, Kyungtae Kim, Brendan Saltaformaggio, Xiangyu Zhang, and Dongyan Xu. LDX: Causality inference by lightweight dual execution. In Proceedings of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems, pages 503–515, 2016.
[44] Yonghwi Kwon, Fei Wang, Weihang Wang, Kyu Hyung Lee, Wen-Chuan Lee, Shiqing Ma, Xiangyu Zhang, Dongyan Xu, Somesh Jha, Gabriela F Ciocarlie, et al. MCI: Modeling-based causality inference in audit logging for attack investigation. In NDSS, 2018.
[45] Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. LogGC: Garbage collecting audit log. In Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security, pages 1005–1016. ACM, 2013.
[46] Bo Li, Phani Vadrevu, Kyu Hyung Lee, Roberto Perdisci, Jienan Liu, Babak Rahbarinia, Kang Li, and Manos Antonakakis. JSgraph: Enabling reconstruction of web attacks via efficient tracking of live in-browser JavaScript executions. In NDSS, 2018.
[47] Fucheng Liu, Yu Wen, Dongxue Zhang, Xihe Jiang, Xinyu Xing, and Dan Meng. Log2Vec: A heterogeneous graph embedding based approach for detecting cyber threats within enterprise. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, pages 1777–1794, 2019.
[48] Yushan Liu, Mu Zhang, Ding Li, Kangkook Jee, Zhichun Li, Zhenyu Wu, Junghwan Rhee, and Prateek Mittal. Towards a timely causality analysis for enterprise security. In NDSS, 2018.
[49] Shiqing Ma, Juan Zhai, Yonghwi Kwon, Kyu Hyung Lee, Xiangyu Zhang, Gabriela Ciocarlie, Ashish Gehani, Vinod Yegneswaran, Dongyan Xu, and Somesh Jha. Kernel-supported cost-effective audit logging for causality tracking. In 2018 USENIX Annual Technical Conference (USENIX ATC 18), pages 241–254, 2018.
[50] Shiqing Ma, Juan Zhai, Fei Wang, Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. MPI: Multiple perspective attack investigation with semantic aware execution partitioning. In 26th USENIX Security Symposium (USENIX Security 17), pages 1111–1128, 2017.
[51] Shiqing Ma, Xiangyu Zhang, and Dongyan Xu. ProTracer: Towards practical provenance tracing by alternating between logging and tainting. In NDSS, 2016.
[52] Antonio Maccioni and Daniel J Abadi. Scalable pattern matching over compressed graphs via dedensification. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 2016.