### Bandwidth Enforcer (BwE) for WAN Distributed Computing

Bandwidth Enforcer (BwE) is designed to address the challenges of bandwidth allocation in Wide Area Network (WAN) distributed computing. We believe BwE can also be applied to a variety of emerging application classes on the broader Internet. For example, video streaming services, which are increasingly dominating WAN communication, have well-defined bandwidth requirements with step functions for incremental utility. A 720P video stream, for instance, may not benefit from an additional 100Kbps of bandwidth; only sufficient additional bandwidth to enable 1080P streaming would be useful. Additionally, homes and businesses are trending toward multiple simultaneous video streams with known relative priorities and incremental bandwidth utilities, all sharing a single bottleneck with a known capacity.

### Internet of Things (IoT) Applications

Consider the move towards the Internet of Things (IoT), where hundreds of devices in a home or business may have varying wide-area communication requirements. These applications range from home automation and security to health monitoring and backup. For instance, home security may have moderate bandwidth requirements but be of the highest priority, while remote backup may have substantial, sustained bandwidth requirements but no hard deadlines and low sensitivity to packet loss. Investigating BwE-based mechanisms for fair allocation based on an understanding of relative application utility in response to additional bandwidth is an interesting area for future work.

### Related Work

This paper focuses on allocating bandwidth among users in emerging multi-datacenter WAN environments. Given the generality of the problem, we build on a rich body of related efforts, including utility functions, weighted fair sharing, and host-based admission control. We extend existing Utility max-min approaches for multipath routing and hierarchical fairness.

#### Weighted Queuing
Weighted queuing is a common bandwidth allocation paradigm. While it is a good starting point, we find that weights alone are insufficient for delivering user guarantees. Relative to weighted queuing, BwE focuses on rate limiting based on demand estimation. BwE control is centralized and protocol-agnostic, supporting both TCP and UDP. This is in contrast to DRL, which solves the problem via distributed rate control for TCP without explicitly accounting for network capacity.

#### Other Mechanisms
Netshare and Seawall also use weighted bandwidth allocation mechanisms. Seawall, in particular, achieves per-link proportional fairness. We have found max-min fairness to be more practical because it provides better isolation. Gatekeeper employs host-based hierarchical token buckets to share bandwidth among data center tenants, emphasizing work-conserving allocation. However, Gatekeeper assumes a simplified topology for every tenant. BwE, on the other hand, considers complex topologies, multipath forwarding, centralized bandwidth allocation, and a range of flexible bandwidth allocation mechanisms.

Secondnet provides pairwise bandwidth guarantees but requires accurate user-provided demands and is not work-conserving. Oktopus proposes a datacenter tree topology with specified edge capacity, suitable for datacenters but not a natural fit for the WAN, where user demands vary based on source-destination pairs. The BwE abstraction is more fine-grained, with associated implementation and configuration challenges. Oktopus also ties the problem of bandwidth allocation with VM placement, whereas our work does not affect computation placement but rather takes the source of demand as fixed. We believe there are opportunities to apply such joint optimization to BwE.

Datacenter bandwidth sharing efforts such as ElasticSwitch, FairCloud, and EyeQ focus on a hose model for tenants. EyeQ uses ECN to detect congestion at the edge and assumes a congestion-free core. In contrast, our flow-wise bandwidth sharing model allows aggregation across users and is explicitly focused on a congested core.

Recent efforts such as SWAN and B4 are closely related but focus on the network and routing infrastructure to effectively scale and utilize emerging WAN environments. They employ Software-Defined Networking constructs for controlling and efficiently scaling the network. Our work is complementary and focuses on enforcing policies given an existing multipath routing configuration. Jointly optimizing network routing and bandwidth allocation is an area for future investigation.

TEMPUS focuses on optimizing network utilization by accounting for deadlines for long-lived flows. Our bandwidth sharing model applies to non-long-lived flows as well and does not require deadlines to be known ahead of time. Flow deadlines open up the possibility of further optimization, such as smoothing bandwidth allocation over a longer period, which remains an area for future work.

Work in RSVP, Differentiated Services, and Traffic Engineering overlaps in terms of goals. However, these approaches are network-centric, assuming that host control is not possible. In some sense, we take the opposite approach, considering an orthogonal hierarchical control infrastructure that leverages host-based demand measurement and enforcement.

Congestion Manager is an inspiration for our work on BwE, enabling a range of flexible bandwidth allocation policies to individual flows based on an understanding of application requirements. However, Congestion Manager still manages bandwidth at the granularity of individual hosts, whereas we focus on the infrastructure and algorithms for bandwidth allocation in a large-scale distributed computing WAN environment.

### Conclusions

In this paper, we present Bandwidth Enforcer (BwE), our mechanism for WAN bandwidth allocation. BwE allocates bandwidth to competing applications based on flexible policy configured by bandwidth functions. BwE supports hierarchical bandwidth allocation and delegation among services while simultaneously accounting for multipath WAN communication.

Based on multiple years of production experience, we summarize several important benefits to our WAN. First, BwE provides isolation among competing services, delivering plentiful capacity in the common case while maintaining required capacity under failure and maintenance scenarios. Second, we provide a single point for specifying allocation policy to administrators. While pathing, RTT, and capacity can shift substantially, BwE continues to allocate bandwidth according to policy. Finally, BwE enables the WAN to run at higher levels of utilization than before. By tightly integrating new loss-insensitive file transfer protocols running at low priority with BwE, we run many of our WAN links at 95% utilization.

### Acknowledgements

Many teams within Google collaborated towards the success of the BwE project. We would like to acknowledge the BwE development, test, and operations groups, including Aaron Racine, Alex Docauer, Alex Perry, Anand Kanagala, Andrew McGregor, Angus Lees, Deepak Nulu, Dmitri Nikulin, Eric Yan, Jon Zolla, Kai Song, Kirill Mendelev, Mahesh Kallahalla, Matthew Class, Michael Frumkin, Michael O’Reilly, Ming Xu, Mukta Gupta, Nan Hua, Nikhil Panpalia, Phong Chuong, Rajiv Ranjan, Richard Alimi, Sankalp Singh, Subbaiah Venkata, Vijay Chandramohan, Xijie Zeng, Yuanbo Zhu, Aamer Mahmood, Ben Treynor, Bikash Koley, and Urs Hölzle for their significant contributions to the project. We would also like to thank our shepherd, Srikanth Kandula, and the anonymous SIGCOMM reviewers for their useful feedback.

### References

[1] Wikipedia: Differentiated services. http://en.wikipedia.org/wiki/Differentiated_services.
[2] Avi Fabrikant, Yishay Mansour. Centralized and Distributed Algorithms for Routing and Weighted Max-Min Fair Bandwidth Allocation. IEEE/ACM Trans. Networking 14, 1 (February 2006), 130–142.
[3] Hari Balakrishnan, Srinivasan Seshan, Randy H. Katz. An integrated congestion management architecture for internet hosts. In In Proc. ACM SIGCOMM (August 1997), pp. 153–164.
[4] Mohammad Alizadeh, Albert Greenberg, David A. Maltz, Jitendra Padhye, Parveen Patel, Balaji Prabhakar, Sudipta Sengupta, Murari Sridharan. Towards predictable datacenter networks. In SIGCOMM (2010).
[5] Scott Bradner, et al. An Architecture for Differentiated Service. RFC 2475 (Informational), December 1998. Updated by RFC 3260.
[6] Jean-Yves Le Boudec. Rate adaptation, congestion control and fairness: A tutorial, 2004.
[7] R. Braden, L. Zhang, S. Berson, S. Herzog, S. Jamin. Resource ReSerVation Protocol (RSVP) – Version 1 Functional Specification. RFC 2205 (Proposed Standard), September 1997. Updated by RFCs 2210, 3209, 3473, 3477, 4558.
[8] Zhen Liu, Edward W. Knightly. Utility max-min: An application-oriented bandwidth allocation scheme. In INFOCOM (1997).
[9] Byung-Kwan Choi, Robert L. Grossman. Endpoint admission control: network based approach. In Distributed Computing Systems, 2004. 24th International Conference on. (April 2004), pp. 112–119.
[10] David D. Clark, Martin L. Lambert, Lixia Zhang. Netblt: A high throughput transport protocol. In Proceedings of the ACM Workshop on Frontiers in Computer Communications Technology (New York, NY, USA, 1987), SIGCOMM '87, ACM, pp. 101–109.
[11] Eitan Altman, Tamer Başar, Tomasz Breng, Ariel Orda, Daniel Raz, Moshe Sidi. Upward Max Min Fairness. In INFOCOM (2004), pp. 243–252.
[12] Eitan Altman, Shmuel Moran, Ariel Orda. A Practical Algorithm for Balancing the Max-min Fairness and Throughput Objectives in Traffic Engineering. In Proc. INFOCOM (March 2004), pp. 271–280.
[13] Jeffrey Dean, Sanjay Ghemawat. MapReduce: Simplified data processing on large clusters. Commun. ACM 51, 1 (January 2008), 107–113.
[14] Bruce Fortz, James Rexford, Mikkel Thorup. Traffic Engineering with Traditional IP Routing Protocols. IEEE Communications Magazine 40 (October 2002), 118–124.
[15] Chuanxiong Guo, Guohan Lu, Haitao Wu, Shu Yang, Chengchen Wang, Pengcheng Sun, Wei Wu, Yajun Zhu. SecondNet: A data center network virtualization architecture with bandwidth guarantees. In CoNEXT (2010).
[16] Changhoon Kim, Ramakrishna Kotla, Ramya Raghavendra, Mike Watson, Vinod Valancce, Malte Schwarzkopf, Ratul Mahajan. Have Your Network and Use It Fully Too: Achieving High Utilization in Inter-Datacenter WANs. In Proc. SIGCOMM (August 2014).
[17] S. Jain, A. Kumar, S. Mandal, J. Ong, L. Poutievski, A. Singh, S. Venkata, J. Wanderer, J. Zhou, M. Zhu, U. Hoelzle, S. Stuart, A. Vahdat. B4: Experience with a Globally-Deployed Software Defined WAN. In Proceedings of the ACM SIGCOMM 2013 (2013), ACM, pp. 3–14.
[18] Vishal Jain, Manoj Agarwal, Daniele Miorandi, Brian Platt, Chinmay Kulkarni, Arvind Krishnamurthy. EyeQ: Practical network performance isolation at the edge. In Proc. of NSDI (2014), USENIX Association, pp. 121–134.
[19] Sujata Banerjee, Inderjit Lamba, Rajiv Raman, Sharad Singhal, Steven R. Brandt. Calendaring for wide area networks. In Proc. SIGCOMM (August 2012).
[20] Teemu Koponen, Scott Shenker, Amin Vahdat, George Varghese. NetShare: Virtualizing data center networks across services. Tech. rep., 2010.
[21] Ina Minei, Jennifer Rexford. MPLS-Enabled Applications: Emerging Developments and New Technologies. Wiley Series on Communications Networking & Distributed Systems. Wiley, 2005.
[22] Eric C. Rosen, Alok G. Parekh. Traffic Engineering with MPLS (Paperback). Networking Technology Series. Cisco Press, 2004.
[23] Liang Pang, Aleksandra Krol, Sangeetha Seshadri, Ion Stoica. Faircloud: Sharing the network in cloud computing. In Proceedings of the 10th ACM Workshop on Hot Topics in Networks (New York, NY, USA, 2011), HotNets-X, ACM, pp. 11–16.
[24] Liang Pang, Paul Yi, Sean Blagsvedt, John C. Mogul, Yibo Zhu, John R. Stribling. Elasticswitch: Practical work-conserving bandwidth guarantees for cloud computing. In Proceedings of the ACM SIGCOMM 2014 Conference on SIGCOMM (New York, NY, USA, 2014), SIGCOMM '14, ACM, pp. 153–166.
[25] Benjamin Riedl, Kevin Van de Velde, Stefan Schmid, Klaus-Tycho Foerster, Katerina Argyraki, Anja Feldmann. Cloud control with distributed rate limiting. In In SIGCOMM (2011).
[26] Hongyi Zeng, John R. Stribling, Yibo Zhu, Patrick Stuedi, Dejan Kostic. Gatekeeper: Supporting bandwidth guarantees for multi-tenant datacenter networks. In Workshop on I/O Virtualization (2010).
[27] Mark Russinovich, Mike Treacy, Y. Charlie Hu. Traffic Engineering with Estimated Traffic Matrices. In Proc. IMC (2009), pp. 1–10.
[28] Jerome H. Saltzer, David P. Reed, David D. Clark. End-to-end arguments in system design. ACM Trans. Comput. Syst. 2, 4 (November 1984), 277–288.
[29] Sanjay Sarma, Daniel L. Brock, Kevin Ashton. The networked physical world–proposals for engineering the next generation of computing, commerce & automatic identification. White Paper, Auto-ID Center, MIT. Designed by Foxner. www.foxner.com (2004).
[30] Alexander Shieh, Sujata Banerjee, Arvind Krishnamurthy, Craig Labovitz. Sharing the data center network. In NSDI (2010).