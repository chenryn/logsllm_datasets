### Research Findings and Impact

We utilized PhishPrint to evaluate 23 web crawlers over a 70-day period, which revealed several previously unknown cloaking weaknesses across the crawler ecosystem. To confirm the practical impact of our findings, we deployed evasive phishing web pages and conducted user studies. We also discussed concrete mitigation measures for crawling and reporting infrastructures. The identified weaknesses were communicated to the crawler vendors through a vulnerability disclosure process, leading to remedial actions and multiple vulnerability rewards.

---

### Acknowledgements

We extend our gratitude to Anish Chand for developing an early prototype of PhishPrint as a proof of concept. We also acknowledge Julian Gale and Christopher Martin for their contributions in building the Web Scan Requestor module. Special thanks to Roberto Perdisci for providing valuable research advice throughout the project. We are grateful to the PC members at IEEE SSP 2021 and Usenix Security 2021 for their detailed and constructive feedback. Additionally, we thank Pierre Laperdrix and the AmIUnique project team for enabling access to crucial browser fingerprinting data and code. This work was supported by funds from the UNO Office of Research and the UNO Tolmas Scholars Program, whose support we gratefully acknowledge.

---

### References

1. **Advanced Outlook.com Security for Office 365 Subscribers**  
   https://web.archive.org/web/20200901032551/https://support.microsoft.com/en-us/office/advanced-outlook-com-security-for-office-365-subscribers-882d2243-eab9-4545-a58a-b36fee4a46e2

2. **AmIUnique**  
   https://amiunique.org

3. **Browser Market Share Worldwide**  
   https://gs.statcounter.com/browser-market-share

4. **Browserling**  
   https://www.browserling.com/

5. **Google Safe Browsing: Block All My Subdomains Instead of Only One**  
   https://support.google.com/webmasters/thread/17514260?hl=en

6. **Google Safe Browsing: Erroneously Blocking My Whole Domain and Subdomains**  
   https://support.google.com/webmasters/thread/32022154?hl=en

7. **Hola Better Internet - Access Censored Sites**  
   https://hola.org/faq

8. **Page Load Times**  
   https://backlinko.com/page-speed-stats

9. **Program Rules - Application Security: Reward Amounts for Abuse-Related Methodologies**  
   https://www.google.com/about/appsecurity/reward-program/

10. **Teams Powers Office 365 Growth**  
    https://office365itpros.com/2020/04/30/office365-teams-power-growth/

11. **VirusTotal**  
    https://www.virustotal.com/gui/

12. **XYZ Domain Name Policies**  
    https://nic.monster/files/XYZ-registry-domain-name-policies.pdf?v=2.0

13. **Furkan Alaca and Paul C. van Oorschot. Device Fingerprinting for Augmenting Web Authentication: Classification and Analysis of Methods. In ACSAC 2016.**

14. **APWG. Phishing Activity Trends Report: 3rd Quarter 2019**  
    https://docs.apwg.org/reports/apwg_trends_report_q3_2019.pdf

15. **Michael Archambault. Microsoft Security Reports a Massive Increase in Malicious Phishing Scams**  
    https://www.digitaltrends.com/computing/microsoft-security-massive-increase-phishing-scams/

16. **Eric Bidelman. Getting Started with Headless Chrome**  
    https://developers.google.com/web/updates/2017/04/headless-chrome, Jan 2019

17. **Yinzhi Cao, Song Li, and Erik Wijmans. (Cross-)Browser Fingerprinting via OS and Hardware Level Features. In NDSS 2017.**

18. **Zi Chu, Steven Gianvecchio, Aaron Koehl, Haining Wang, and Sushil Jajodia. Blog or Block: Detecting Blog Bots Through Behavioral Biometrics. Comput. Networks, 2013.**

19. **Amit Datta, Jianan Lu, and Michael Carl Tschantz. Evaluating Anti-Fingerprinting Privacy Enhancing Technologies. In WWW 2019, pages 351–362.**

20. **MDN Web Docs. Canvas API**  
    https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API

21. **MDN Web Docs. WebGL: 2D and 3D Graphics for the Web**  
    https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API

22. **Alejandro Gómez-Boix, Pierre Laperdrix, and Benoit Baudry. Hiding in the Crowd: An Analysis of the Effectiveness of Browser Fingerprinting at Large Scale. In WWW 2018, pages 309–318.**

23. **Luca Invernizzi, Kurt Thomas, Alexandros Kapravelos, Oxana Comanescu, Jean Michel Picod, and Elie Bursztein. Cloak of Visibility: Detecting When Machines Browse a Different Web. In IEEE Symposium on Security and Privacy, SP 2016, pages 743–758.**

24. **Umar Iqbal, Steven Englehardt, and Zubair Shafiq. To the Fingerprinters: Learning to Detect Browser Fingerprinting Behaviors. CoRR, abs/2008.04480, 2020.**

25. **Paul Irish. paulirish/headless-cat-n-mouse**  
    https://github.com/paulirish/headless-cat-n-mouse, Jan 2018

26. **Jordan Jueckstock and Alexandros Kapravelos. VisibleV8: In-Browser Monitoring of JavaScript in the Wild. In IMC 2019, pages 393–405.**

27. **Pierre Laperdrix, Gildas Avoine, Benoit Baudry, and Nick Nikiforakis. Morellian Analysis for Browsers: Making Web Authentication Stronger with Canvas Fingerprinting. In DIMVA 2019, pages 43–66.**

28. **Pierre Laperdrix, Benoit Baudry, and Vikas Mishra. FPRandom: Randomizing Core Browser Objects to Break Advanced Device Fingerprinting Techniques. In ESSoS 2017, pages 97–114.**

29. **Pierre Laperdrix, Walter Rudametkin, and Benoit Baudry. Beauty and the Beast: Diverting Modern Web Browsers to Build Unique Browser Fingerprints. In IEEE Symposium on Security and Privacy, SP 2016, pages 878–894.**

30. **Pierre Laperdrix, Walter Rudametkin, and Benoit Baudry. Mitigating Browser Fingerprint Tracking: Multi-Level Reconfiguration and Diversification. In 10th IEEE/ACM International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS 2015, pages 98–108.**

31. **Peter Snyder, Mark Pilgrim, and Ben Livshits. Fingerprint Randomization.**  
    https://web.archive.org/web/20200728132011/https://brave.com/whats-brave-done-for-my-privacy-lately-episode3/

32. **Sourena Maroofi, Maciej Korczynski, and Andrzej Duda. Are You Human?: Resilience of Phishing Detection to Evasion Techniques Based on Human Verification. In IMC 2020, pages 78–86.**

33. **Angela Moscaritolo. Beware: Phishing Attacks Are on the Rise**  
    https://www.pcmag.com/news/beware-phishing-attacks-are-on-the-rise

34. **Keaton Mowery and Hovav Shacham. Pixel Perfect: Fingerprinting Canvas in HTML5. Proceedings of W2SP, pages 1–12, 2012.**

35. **Nick Nikiforakis, Wouter Joosen, and Benjamin Livshits. Privaricator: Deceiving Fingerprinters with Little White Lies. In WWW 2015, pages 820–830.**

36. **Nick Nikiforakis, Alexandros Kapravelos, Wouter Joosen, Christopher Kruegel, Frank Piessens, and Giovanni Vigna. Cookieless Monster: Exploring the Ecosystem of Web-Based Device Fingerprinting. In 2013 IEEE Symposium on Security and Privacy, SP 2013, pages 541–555.**

37. **Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon Ahn, Brad Wardman, and Kevin Tyers. PhishFarm: A Scalable Framework for Measuring the Effectiveness of Evasion Techniques Against Browser Phishing Blacklists. In IEEE Symposium on Security and Privacy, SP 2019, pages 1344–1361.**

38. **Adam Oest, Yeganeh Safaei, Adam Doupé, Gail-Joon Ahn, Brad Wardman, and Gary Warner. Inside a Phisher’s Mind: Understanding the Anti-Phishing Ecosystem Through Phishing Kit Analysis. In eCrime 2018, pages 1–12.**

39. **Adam Oest, Yeganeh Safaei, Penghui Zhang, Brad Wardman, Kevin Tyers, Yan Shoshitaishvili, and Adam Doupé. PhishTime: Continuous Longitudinal Measurement of the Effectiveness of Anti-Phishing Blacklists. In USENIX Security 2020, pages 379–396.**

40. **Peng Peng, Limin Yang, Linhai Song, and Gang Wang. Opening the Blackbox of VirusTotal: Analyzing Online Phishing Scan Engines. In IMC 2019, pages 478–485.**

41. **Peter Snyder and Ben Livshits. Brave, Fingerprinting, and Privacy Budgets.**  
    https://web.archive.org/web/20200809060950/https://brave.com/brave-fingerprinting-and-privacy-budgets/

42. **Ke Tian, Steve T. K. Jan, Hang Hu, Danfeng Yao, and Gang Wang. Needle in a Haystack: Tracking Down Elite Phishing Domains in the Wild. In IMC 2018, pages 429–442.**

43. **Christof Ferreira Torres, Hugo L. Jonker, and Sjouke Mauw. FP-Block: Usable Web Privacy by Controlling Browser Fingerprinting. In ESORICS 2015, pages 3–19.**

44. **Erik Trickel, Oleksii Starov, Alexandros Kapravelos, Nick Nikiforakis, and Adam Doupé. Everyone Is Different: Client-Side Diversification for Defending Against Extension Fingerprinting. In USENIX Security 2019, pages 1679–1696.**

45. **Phani Vadrevu and Roberto Perdisci. What You See Is NOT What You Get: Discovering and Tracking Social Engineering Attack Campaigns. In IMC 2019, pages 308–321.**

46. **Antoine Vastel, Pierre Laperdrix, Walter Rudametkin, and Romain Rouvoy. FP-Scanner: The Privacy Implications of Browser Fingerprint Inconsistencies. In USENIX Security 2018, pages 135–150.**

47. **Antoine Vastel, Pierre Laperdrix, Walter Rudametkin, and Romain Rouvoy. FP-STALKER: Tracking Browser Fingerprint Evolutions. In IEEE Symposium on Security and Privacy, SP 2018, pages 728–741.**

48. **Antoine Vastel, Walter Rudametkin, Romain Rouvoy, and Xavier Blanc. FP-Crawlers: Studying the Resilience of Browser Fingerprinting to Block Crawlers. In MADWeb 2020.**

49. **David Y. Wang, Stefan Savage, and Geoffrey M. Voelker. Cloak and Dagger: Dynamics of Web Search Cloaking. In CCS 2011, pages 477–490.**

50. **Shujiang Wu, Song Li, Yinzhi Cao, and Ningfei Wang. Rendered Private: Making GLSL Execution Uniform to Prevent WebGL-Based Browser Fingerprinting. In USENIX Security 2019, pages 1645–1660.**

51. **Katsunari Yoshioka, Yoshihiko Hosobuchi, Tatsunori Orii, and Tsutomu Matsumoto. Your Sandbox Is Blinded: Impact of Decoy Injection to Public Malware Analysis Systems. J. Inf. Process., 19:153–168, 2011.**

52. **Penghui Zhang, Adam Oest, Haehyun Cho, Zhibo Sun, RC Johnson, Brad Wardman, Shaown Sarker, Alexandros Kapravelos, Tiffany Bao, Ruoyu Wang, et al. CrawlPhish: Large-Scale Analysis of Client-Side Cloaking Techniques in Phishing. In Proceedings of the IEEE Symposium on Security and Privacy, 2021.**

---

### Breakdown of MTurk Study Results

Table 7 provides a breakdown of the results from our second user study, described in §4.2, by operating system (OS). It is important to note that the sum of values in the third, fourth, and fifth columns does not add up to the values in the final row due to a small amount of overlap in fingerprints across different platforms. The final column shows the breakdown of the 137 collisions observed with the crawlers' fingerprints.

| **OS**        | **# Users** | **# Distinct** | **# Unique** | **# Shared** | **Norm. Entropy** | **# Collide** |
|---------------|-------------|----------------|--------------|--------------|-------------------|---------------|
| Windows       | 693         | 425            | 344          | 81           | 0.866             | 115           |
| Chrome OS     | 35          | 17             | 12           | 5            | 0.707             | 8             |
| Linux         | 16          | 16             | 16           | 0            | 1.0               | 0             |
| iOS           | 29          | 10             | 6            | 4            | 0.568             | 0             |
| Mac OS X      | 146         | 87             | 68           | 19           | 0.824             | 8             |
| Android       | 88          | 41             | 26           | 15           | 0.731             | 6             |
| **All**       | **1007**    | **592**        | **469**      | **123**      | **0.865**         | **137**       |

**Table 7: OS-based breakdown of fingerprints collected from our second user study**

---

### Specific Recommendations

During our profiling study, we identified specific issues with PhishTank and Google Safe Browsing (GSB) that are discussed below along with suitable recommendations.

#### B.1 PhishTank

PhishTank displays reported URLs on their website to allow human analysts to investigate them. We found a couple of serious issues with PhishTank's web portal ecosystem:

1. **Repeated URL Submissions:**
   - **Issue:** Repeated URL submissions are ignored by PhishTank and not shown on their homepage, even if the URL is re-submitted from a different user account.
   - **Exploit:** An attacker can self-report their URLs to PhishTank a few days before adding malicious content, effectively preventing the URL from appearing on the homepage and reducing exposure to potential visitors.
   - **Recommendation:** PhishTank should bump up URLs to their homepage whenever they are resubmitted by a different user account.

2. **Referer Artifact:**
   - **Issue:** PhishTank allows visitors to open and check new URLs either in a new window or in an iframe on PhishTank. However, in both cases, it is possible for an attacker to check if the Referer points to phishtank.com and trigger benign behavior.
   - **Exploit:** Unless a human analyst copies the URL and pastes it into their address bar, it will always carry the Referer artifact, making it easy for an attacker to decide to cloak and evade manual analysis.
   - **Recommendation:** PhishTank should use Referrer-Policy headers (e.g., setting it to `same-origin`) to combat such evasion strategies.

#### B.2 Google Safe Browsing (GSB)

During the initial setup phase of our longitudinal study, we identified a couple of serious issues with Google Safe Browsing's (GSB) crawler infrastructure. These issues are specific to GSB and are reported separately here.