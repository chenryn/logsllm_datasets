### 优化后的文本

#### 4.1.4. 对云服务提供商的建议
通常，SSRF攻击通过控制HTTP请求中的`host`和`path`字段来实现。这类攻击通常无法注入或操作其他HTTP头部。以Google Cloud的Compute Engine为例，它已经实现了访问管理API所需的特定头部（如`Metadata-Flavor: Google`），从而减少了那些无法设置该头部的SSRF攻击的成功率（Google, 2019）。相比之下，AWS目前没有类似的保护措施。如果AWS增加一个难以模仿的访问EC2实例元数据服务（EC2 IMS）的前提要求，这可能会降低SSRF攻击的成功率。

EC2 IMS提供了一个可预测的目标，即所有攻击者都知道的链路本地地址（169.254.169.254）。当前，AWS WAF不包括默认的内容检查规则来检测包含该地址的请求或包含临时访问密钥的响应。因此，对于云服务提供商而言，如果能在WAF中默认包含许多覆盖SSRF用例的规则，将提高客户的常规检测能力。

通过IMS获取的临时密钥可以从AWS基础设施外部发出API调用，部分原因是在2017年11月AWS PrivateLink出现之前，AWS在云网络内的API调用是通过公网Internet从外部路由的（Amazon Web Services, 2017）。如果云服务提供商（包括AWS）要求调用方身份验证才能访问敏感操作，并限制调用方对内部临时访问凭证的使用，则可以减少SSRF攻击的潜在危害。

此外，虽然按照惯例，临时访问密钥以字符`ASIA`开头，但这种密钥并不隐式地局限于调用方。因此，通过IMS获得的临时密钥可以从AWS基础设施的外部发出API调用。

### 4.2. 对未来研究的意义
对未来研究的意义在于：

  * **常见场景**
    * **1. 将现有业务迁移上云**
      * 许多公司将工作负载迁移到云。传统上，这被称为“lift and shift”操作，因为IT专业人员使用熟悉的技术将在本地基础设施或位于同一位置的数据中心的虚拟机迁移到作为EC2实例运行的虚拟机。这些系统提供了熟悉的交互式管理访问。
    * **2. 直接利用云环境重新开发业务**
      * 很多公司也会利用新颖的云服务（如AWS Elastic Kubernetes Services、AWS Fargate、AWS Lambda等）直接在云上开发新的工作负载。所有这些服务都提供了计算环境，但抽象了管理访问，为云提供商保留了管控规划。

每个云服务提供商的产品都为存在SSRF漏洞的应用程序和代码提供了机会，并且每个产品都限制了安全专业人员使用传统工具检测并阻止此类攻击的能力。可能存在仅限于云基础设施的检测技术，同时安全研究人员应继续寻找更多分层控制，以保护敏感数据免受云环境中SSRF漏洞的影响。

## 5. 结论
总而言之，云环境也无法幸免于SSRF漏洞带来的危害，并且存在实用的技术来检测和防止对存在SSRF漏洞的应用程序的攻击。企业如果在云中传输或存储了敏感数据，则应该执行适当的检测控制措施，以识别SSRF攻击尝试，而不是等到发生数据泄露事件。通过在云上利用这些完善的工具，安全专业人员可以保护云上的工作负载，避免针对AWS API和EC2 IMS的SSRF攻击。云能够成为一个经济、高效且安全的地方，支持大规模的快速创新。

## 参考文献
- Amazon Web Services. (2017, September 7). Announcing Network Load Balancer for Elastic Load Balancing. Retrieved from About AWS.
- Amazon Web Services. (2017, November). AWS re:Invent 2017: NEW LAUNCH! Amazon EC2 Bare Metal Instances (CMP330). Retrieved October 7, 2019, from Amazon Web Services channel on YouTube.com.
- Amazon Web Services. (2017, November 8). Introducing AWS PrivateLink for AWS Services. Retrieved from About AWS.
- Amazon Web Services. (2019, September 6). CloudTrail Concepts. Retrieved from AWS CloudTrail User Guide.
- Amazon Web Services. (2019, October). Elastic Network Interfaces. Retrieved from Amazon Elastic Compute Cloud User Guide for Linux Instances.
- Amazon Web Services. (2019, September 21). Instance Metadata and User Data. Retrieved from AWS Documentation for EC2.
- Amazon Web Services. (2019, October 1). What Is Amazon GuardDuty? Retrieved from Amazon Guard Duty User Guide.
- Art, S. (2016, September 26). Nodejs-SSRF-App. Retrieved October 8, 2019, from GitHub.com.
- Bengtston, W. (2018, August 8). Netflix Cloud Security: Detecting Credential Compromise in AWS. Retrieved from The Netflix Tech Blog.
- C. Linhart, A. K. (2005). HTTP Request Smuggling. Watchfire.
- C. Mazzariello, R. B. (2010). Integrating a Network IDS into an Open Source Cloud Computing Environment. 2010 Sixth International Conference on Information Assurance and Security (IAS). IEEE.
- ERPScan. (2013, March 27). SSRF DoS Relaying. Retrieved from ERPScan.io Blog.
- Fernandez, G. (2019, September 3). Metadata abuse in AWS. Retrieved from Technology with a business perspective.
- Google. (2019, October 01). Storing and retrieving instance metadata. Retrieved from Compute Engine Documentation.
- Institute of Information Security. (2015, April 16). Server Side Request Forgery (SSRF). Retrieved from Institute of Information Security Blog.
- Kelly, R. (2018, September 10). Security Bugs in Practice: SSRF via Request Splitting. Retrieved from Personal blog.
- Kettle, J. (2017, July 27). Cracking the lens: targeting HTTP's hidden attack-surface. Retrieved from PortSwigger Research.
- Kettle, J. (2019). HTTP Desync Attacks: Request Smuggling Reborn. PortSwigger Web Security.
- Modi, C. &. (2017, March). Virtualization layer security challenges and intrusion detection/prevention systems in cloud computing: a comprehensive review. Journal of Supercomputing, 73(3), 1192-1234.
- OWASP. (2017). Top 10-2017 A1-Injection. Retrieved from The Open Web Application Security Project.
- P. K. Shelke, S. S. (2012, May). Intrusion Detection System for Cloud Computing. International Journal of Scientific & Technology Research(4).
- rain.forest.puppy. (1998, December 25). NT Web Technology Vulnerabilities. Phrack Magazine, 8(54). Retrieved from.
- Reese, S. (2018, January 15). Network Traffic Capture in Virtual Environments. Retrieved from rsreese.com.
- Sripati, P. (2019, September 26). How To Secure Web Applications With AWS WAF? Retrieved from AWS Architect Certification Training.