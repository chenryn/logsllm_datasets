### Other Books You May Enjoy

**Hands-On Linux for Architects**  
*By Denis Salamanca and Esteban Flores*  
ISBN: 978-1-78953-410-8

- **Learn the fundamentals of infrastructure design and the steps involved.**
- **Expand your design portfolio with Linux-based solutions.**
- **Discover open-source software-based solutions to optimize your architecture.**
- **Understand the role of high availability and fault tolerance in resilient design.**
- **Identify the role of containers and how they enhance continuous integration and deployment pipelines.**
- **Gain insights into optimizing, making resilient, and highly available designs by applying industry best practices.**

---

### Leave a Review

We value your feedback! Please share your thoughts on this book by leaving a review on the platform where you purchased it. If you bought the book from Amazon, please leave an honest review on the book's Amazon page. Your unbiased opinion is crucial for other potential readers, our authors, and Packt Publishing. It only takes a few minutes but is invaluable to all.

---

### Index

#### A
- **One-off tasks**: Running with Ansible (pages 452-456)
- **Active Directory (AD)**: Installing packages (pages 126-129)
- **Advanced Intrusion Detection Environment (AIDE)**: About (page 335), installing (page 357), process management (pages 338-341), roles (pages 42-45), building security policies (pages 378-385), testing security policy (pages 394-396)

#### A (continued)
- **Amazon Web Services (AWS)**: Pages 95, 117
- **Ansible**: 
  - Configuration file reference link (page 31)
  - Documentation (page 29)
  - Dynamic inventories (pages 445-448)
  - Galaxy (page 45)
  - Module (page 32)
  - Playbook structure (pages 29-35)
  - Security policies (pages 374-394)
  - Templates (pages 52-55)
  - Variables (pages 47-52)
  - Application of enterprise-wide policy (pages 390-394)
  - Build cleanup (pages 139-140)
  - Combining with SOE (pages 56-57)
  - Implementing complex security benchmarks (pages 385-387)
  - Editing configuration files (pages 130-133)
  - Maintaining configuration integrity (pages 187-189)
  - Auditing configuration (page 284)
  - Enforcing configuration (page 284)
  - Transferring files into image (pages 121-125)
  - Validating image build (pages 133-137)
  - Integrating with Git (pages 436-438)
  - Exploring inventories (pages 35-41)
  - Installing (page 29)
  - Automating routine tasks (pages 84-86)
  - Creating template (pages 120-121)
  - Creating configuration changes (pages 184-186)
  - Installing databases (page 291)
  - Installing MariaDB server (pages 291-300)
  - Installing PostgreSQL Server (pages 300-305)
  - Managing sudoers (pages 284-285)
  - Modifying user accounts (pages 270-276)
  - Performing routine maintenance on PostgreSQL (pages 318-322)
  - Process management (pages 337-341)
  - Removing users (pages 276-277)
  - Rolling updates (pages 342-345)
  - Standardizing template (pages 120-121)

#### AWX
- **About**: Page 60
- **Benefits**: Pages 61-64
- **Credentials setup**: Page 71
- **Installing**: Pages 64-70
- **Creating inventories**: Pages 72-74
- **Executing playbook**: Pages 70, 80-84
- **Creating project**: Pages 75-79

#### D
- **Data**: Exporting (page 306), importing (page 306)
- **Database Administrator (DBA)**: Page 76
- **Databases**: Installing with Ansible (page 291)
- **DEB-based patching**: Using Pulp (pages 230-234)
- **DEB-based repositories**: Building in Pulp (pages 220-223)
- **DEB-based systems**: Patching with Katello (pages 261-266)
- **Disaster Recovery (DR)**: Page 206
- **Disk space**: Clearing (pages 325-331)

#### Docker
- **Deployments**: Pages 98-99

#### E
- **eXtensible Configuration Checklist Description Format (XCCDF)**: Pages 408, 410

#### F
- **Fedora project web site**: URL (page 110)
- **Filesystems**: Mounting (pages 356-357)
- **FreeIPA**: About (pages 281-284), reference link (page 282)

#### G
- **Git**: Integrating with Ansible (pages 436-438)
- **Google Cloud Platform (GCP)**: Page 95
- **Graphical User Interface (GUI)**: Page 207

#### H
- **Hammer**: Page 237
- **HEAD**: Page 76
- **Hosts**: Allowing by network (pages 358-359)

#### I
- **Initial build**: Performing (page 109)
- **Inventories**: About (pages 444-445), creating in AWX (pages 72-74), exploring in Ansible (pages 35-41), inventory host variables (page 41)
- **Linux environment scaling**:
  - Challenges (page 9)
  - Addressing challenges (page 11)
  - Requisites (pages 12-16)
- **Linux images**: Ensuring consistency (pages 103-106)
- **Linux infrastructure**: Scanning with OpenSCAP tools (pages 412-422)
- **Local firewalls**: Page 359

#### J
- **Java Runtime Environment (JRE)**: Page 407
- **Jinja2 templating**: Page 54
- **Just enough Operating System (JeOS)**: Page 19

#### K
- **Katello 3.12 documentation**: Reference link (page 239)
- **Katello**:
  - About (pages 237-238)
  - Installation preparation (pages 239-242)
  - Installing (page 239)
  - Patching (pages 242-243)
  - DEB-based systems (pages 261-266)
  - RPM-based systems (pages 243-261)

#### L
- **LDAP**: Centralizing user account management (page 277)
- **Kickstart**: Unattended builds (pages 158-166)
- **Linux environment scaling**: Early growth (page 9), impacts (page 10), scaling up (page 10)

#### M
- **MariaDB data loading**: Automating with Ansible (pages 306-317)
- **MariaDB server**: Installation (page 292), installing with Ansible (pages 291-300)
- **Microsoft AD**: Pages 278-281
- **Nagios Cross-Platform Agent (NCPA)**: Page 19
- **Network boot**: Performing (pages 152-158)
- **Network installation images**: Obtaining (pages 149-151)
- **Network Operations Center (NOC)**: Page 60
- **Non-native packages**: Installing (pages 182-183)
- **Non-standard environments**: Challenges (page 9), early growth (page 9), impacts (page 10), scaling up (page 10)

#### O
- **Open source software (OSS)**: Page 35
- **Open Vulnerability and Assessment Language (OVAL)**: Pages 408, 410
- **OpenSCAP**:
  - Base tool (pages 401-402)
  - Daemon (pages 402-403)
  - Policies (pages 410-411)
  - Server (page 400)
  - Tools (pages 404-422)
- **Operating system default repositories**: Installing package (pages 177-181)
- **Organizational unit (OU)**: Page 280
- **OSSEC project**: Reference link (page 357)

#### P
- **Package**: Installing from operating system default repositories (pages 177-181)
- **Patch management**: Pulp (pages 206-207)
- **Payment Card Industry (PCI)**: Page 410
- **Playbook design**: Making appropriate decisions (pages 388-390)
- **Playbook**: About (page 30), executing from AWX (pages 70, 80-84)
- **PostgreSQL Server**: Installing with Ansible (pages 300-305)
- **Pre-eXecution Environment (PXE)**: Pages 93, 144
- **Pre-seed files**: Unattended builds (pages 167-171)
- **Process IDs (PIDs)**: Page 337
- **Process management**: With Ansible (pages 337-341)
- **Project**: Creating in AWX (pages 75-79)
- **Pulp Consumer**: Page 223
- **Pulp**:
  - DEB-based repositories (pages 220-223)
  - Installing (pages 207-213)
  - Patch management (page 206)
  - Repositories (pages 214-234)
  - RPM-based repositories (pages 214-220)
  - Patching processes (page 223)
  - RPM-based patching (pages 224-234)
  - DEB-based patching (pages 230-234)
- **PXE-related services**: Configuring (pages 145-149), installing (pages 145-149)

#### Q
- **Quick Copy On Write (QCOW2)**: Page 113

#### R
- **Ready-made template images**: Using (pages 110-112)
- **Red Hat Enterprise Linux (RHEL)**: Pages 178, 281, 292
- **Red Hat Subscription Management (RHSM)**: Page 237
- **Remote root login**: Disabling (pages 360-365)
- **Role-Based Access Control (RBAC)**: Page 76
- **Roles and directory structure**: Reference link (page 45)

#### S
- **Scalable dynamic configuration changes**: Creating (pages 196-202)
- **Scalable static configuration changes**: Creating (pages 190-196)
- **Scan reports**: Interpreting (pages 428-431)
- **Scans**: Executing with OpenSCAP Daemon (pages 422-426)
- **SCAP Security Guide (SSG)**: Pages 406-408
- **SCAP Workbench**: About (page 403), executing (pages 403-404), scanning (pages 426-428)
- **SCAPTimony**: Page 404
- **Scoring**: Page 359
- **Scripted approaches, CIS Benchmark application**: Packet redirect sending (pages 365-368)
- **SSH root login**: Disabling (pages 360-365)
- **Standard Operating Environment (SOE)**:
  - Benefits (pages 20-23)
  - About (pages 16-19, 158)
  - Combining with Ansible (pages 56-57)
  - Deviations (page 24)
  - Maintenance (pages 25-26)
- **Sudoers**: Managing with Ansible (pages 284-285)
- **Surveys**: Page 321
- **System preparation (sysprep)**: Page 118

#### T
- **Trivial File Transfer Protocol (TFTP)**: Page 144
- **Template**: Creating in AWX (pages 79-80)
- **Tower-cli command**: Reference link (page 64)
- **Traditional virtualization environments**: Deploying (pages 93-95)

#### U
- **Ubuntu repositories**: Reference link (page 221)
- **Unattended boot configuration**: Adding custom scripts (page 171)
- **Unattended builds**: Performing (page 158), kickstart files (pages 158-166), pre-seed files (pages 167-171)
- **Unique identification number (UID)**: Page 270
- **Unpackaged software**: Installing (page 183)
- **User account management**: Centralizing with LDAP (page 277)
- **User accounts**: Auditing with Ansible (pages 286-288), removing with Ansible (pages 276-277)

#### V
- **Vault**: About (page 52), reference link (page 52)
- **Version control**: For scripts (pages 435-436), organizing repositories (pages 438-439)
- **Virtual machine images**: Creating (pages 112-120)
- **Virtualmin**: Page 183

#### W
- **Windows Subsystem for Linux (WBL)**: Page 29
- **X Windows**: Page 358

#### Y
- **YAML Ain't Markup Language (YAML)**: Page 31