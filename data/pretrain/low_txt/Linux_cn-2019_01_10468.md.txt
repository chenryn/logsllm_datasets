---
**作者**: Rich Butkevic  
**类别**: 观点  
**评论数据**: 无  
**统计信息**:
  - 评论数: 0
  - 收藏次数: 0
  - 点赞数: 0
  - 分享次数: 1
  - 阅读量: 3888
**日期**: 2019-01-23 00:23:14  
**编辑推荐**: 否  
**摘要**: 本文探讨了从发现软件故障到解决它们的全过程，详细介绍了开发团队如何应对和修复软件 bug。  
**来源链接**: <https://opensource.com/article/18/6/life-cycle-software-bug>  
**文章ID**: 10468  
**是否翻译自英文**: 是  
**大图链接**: /data/attachment/album/201901/23/002319dwfsgwpp7mhr7fg4.jpg  
**永久链接**: /article-10468-1.html  
**图片链接**: /data/attachment/album/201901/23/002319dwfsgwpp7mhr7fg4.jpg.thumb.jpg  
**相关文章**: 无  
**审阅者**: wxy  
**选择者**: lujun9972  
**标签**:
  - bug
  - 软件开发
**是否为缩略图**: 否  
**标题**: 软件 bug 的生命周期  
**是否有标题图片**: 是  
**译者**: lixinyuxx  
**更新时间**: 2019-01-23 00:23:14  

---

## 摘要
本文探讨了从发现软件故障到解决它们的全过程，详细介绍了开发团队如何应对和修复软件 bug。

![](/data/attachment/album/201901/23/002319dwfsgwpp7mhr7fg4.jpg)
1947 年，发现了第一个计算机 bug —— 被困在计算机继电器中的飞蛾。

随着软件变得越来越复杂，测试和调试过程也变得更加复杂。如今，软件 bug 的生命周期可能会很长，尽管正确的技术和业务流程可以提供帮助。对于开源软件，开发人员使用严格的工单系统和协作来查找和解决 bug。

### 确认计算机 bug
在测试过程中，发现的 bug 会报告给开发团队。质量保证（QA）测试人员尽可能详细地描述 bug，包括他们的系统状态、操作过程以及 bug 的表现形式。

然而，并非所有 bug 都能得到确认。有些 bug 可能在测试中被报告，但在受控环境中无法重现，因此可能不会得到解决而被关闭。某些 bug 可能由于平台种类繁多和用户行为多样而难以确认。有些 bug 仅在特定情况下或间歇性地出现，另一些则可能随机发生。

在开源软件中，许多用户同时充当 QA 测试人员的角色，这有助于更全面地发现和报告 bug。

### 分配要修复的 bug
已确认的 bug 被分配给负责解决的开发人员或开发团队。在此阶段，需要重现 bug，发现问题，并修复相关代码。如果 bug 的优先级较低，开发人员可以将其分类为稍后处理的问题；如果优先级较高，则立即指派某人进行修复。无论哪种情况，都会在开发过程中创建一个工单，并将 bug 标记为已知问题。

在开源项目中，开发人员可以选择他们想要解决的 bug，通常会选择他们最熟悉的代码区域或优先级最高的问题。像 GitHub 这样的工具使得多个开发人员能够协同工作而不互相干扰。

当将 bug 设置为需要修复时，bug 报告者还可以为其设置优先级。主要的 bug 可能具有较高的优先级，而仅与外观相关的 bug 可能优先级较低。优先级决定了开发团队解决问题的方式和时间。无论哪种方式，所有的 bug 都需要先解决，然后才能认为产品已完成。

### 解决 bug
一旦修复了 bug，通常会将其作为已解决的 bug 发送回 QA 测试人员。测试人员再次运行相关测试以确保 bug 不再出现。如果无法重现 bug，QA 测试人员将假定它已得到适当解决。

在开源项目中，任何更改通常会作为暂定版本分发给用户，用户再次履行 QA 测试人员的职责并测试产品。如果 bug 再次出现，问题将被发送回开发团队，重新进入修复循环。这种情况可能会多次发生，尤其是在 bug 不可预知或间歇性发生的情况下。间歇性的 bug 很难解决。

如果 bug 不再出现，则该问题将被标记为已解决。在某些情况下，最初的 bug 得到了解决，但由于所做的更改，会出现其他新的 bug。这时可能需要新的 bug 报告，然后重新开始整个过程。

### 关闭 bug
在处理、识别和解决 bug 后，该 bug 将被关闭，开发人员可以继续软件开发和测试的其他阶段。如果始终找不到 bug 或无法重现 bug，该 bug 也将被关闭。无论如何，开发和测试的下一阶段都将开始。

在测试版本中对解决方案所做的任何更改都将滚动到产品的下一个版本中。如果 bug 是严重的，在下一个版本发布之前，可能会为当前用户提供修补程序。这在安全问题中尤为常见。

### 结论
软件 bug 可能很难找到，但通过遵循规范的过程，开发人员可以使开发更快、更容易、更一致。QA 测试人员必须发现和识别 bug，并帮助开发人员重现这些 bug。只有当 bug 不再发生时，才能关闭和解决 bug。

开源解决方案分散了 QA 测试、开发和缓解的负担，这往往导致 bug 被更快、更全面地发现和缓解。然而，由于开源技术的性质，此过程的速度和准确性通常取决于解决方案的受欢迎程度及其维护和开发团队的敬业精神。

**作者简介**:
Rich Butkevic 是一名 PMP 认证的项目经理，也是敏捷开发框架认证的 Scrum Master。他维护着 [Project Zendo](https://projectzendo.com)，这是一个帮助项目管理专业人员发现、简化和改进其项目成果策略的网站。可以在 [Richbutkevic.com](https://richbutkevic.com) 或通过 [LinkedIn](https://www.linkedin.com/in/richbutkevic) 与 Rich 联系。

**原文作者**: [Rich Butkevic](https://opensource.com/users/rich-butkevic)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**译者**: [lixinyuxx](https://github.com/lixinyuxx)  
**校对**: [wxy](https://github.com/wxy)  
**本文由 LCTT 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。**

---