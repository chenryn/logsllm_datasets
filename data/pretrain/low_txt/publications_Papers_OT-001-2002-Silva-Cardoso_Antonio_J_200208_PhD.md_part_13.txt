### 125
Once the reduction process is completed, the Quality of Service (QoS) for the system being reduced is calculated (lines 23 and 24), and the workflow is subsequently transformed (lines 25 and 26). This transformation involves replacing the system being reduced—whether it is a sequential, parallel, conditional, basic loop, dual loop, or network system—with a new task that has the QoS corresponding to the reduction.

### 126
```plaintext
1) boolean applyConditionalRule(workflow wf, task tk) begin
2)     // Check if the task tk is an "xor split" and not a network task
3)     if isaXORsplit(tk) and not isaNetwork(tk) begin
4)         // Get the tasks involved in the xor-split and xor-join system
5)         task[] next_tasks = wf.getNextTasks(tk);
6)         // Check if all tasks involved in the xor-split and xor-join system have only one input and one output
7)         if not hasOneInputOneOutput(next_tasks) return false;
8)         // Get a task between the xor-split and xor-join task
9)         task a_next_tk = next_tasks.getTask();
10)        // Get the xor-join task
11)        task xor_join = wf.getNextTask(a_next_tk);
12)        // Check if the xor_join task is indeed an "xor join", if the xor_join is not a network task, and if the tasks involved in the xor-split and xor-join system are not network tasks
13)        if not isaXORjoin(xor_join) or isaNetwork(xor_join) or isaNetwork(next_tasks) return false;
14)        // Check if the tasks following the xor-split are connected to the same xor-join
15)        if not sameDstTask(next_tasks, xor_join) return false;
16)        // Check if the xor-split degree is equal to the xor-join degree
17)        if wf.getNextTasks(tk).size != wf.getPrevTasks(xor_join).size return false;
18)        // Compute the QoS for the conditional system
19)        QoS qos = computeQoSConditionalSystem(wf, tk);
20)        // Change the workflow structure and set the QoS for the new task created
21)        ...
22)        return true;
23)    end if
24)    return false;
25) end function
```
**Listing 3-2: The `applyConditionalRule` Function**

### 127
#### 3.9 REFERENCES
- Aalst, W. M. P. v. d. (1999). *Generic Workflow Models: How to Handle Dynamic Change and Capture Management Information*. Proceedings of the Fourth IFCIS International Conference on Cooperative Information Systems (CoopIS'99), Edinburgh, Scotland, IEEE Computer Society Press. pp. 115-126.
- Aalst, W. M. P. v. d., A. P. Barros, A. H. M. t. Hofstede, and B. Kiepuszeski (2002). *Workflow patterns homepage*. http://tmitwww.tm.tue.nl/research/patterns.
- Anyanwu, K., A. P. Sheth, J. A. Miller, K. J. Kochut, and K. Bhukhanwala (1999). *Healthcare Enterprise Process Development and Integration*. LSDIS Lab, Department of Computer Science, University of Georgia, Athens, GA, Technical Report.
- Berners-Lee, T. (2001). *Keynote presentation on web services and the future of the web*. Software Development Expo 2001 Visionary Keynote, http://www.technetcast.com/tnc_play_stream.html?stream_id=616.
- CAPA (1997). *Course Approval Process Automation (CAPA)*, LSDIS Lab, Department of Computer Science, University of Georgia, Athens, GA. July 1, 1996 - June 30, 1997.
- Cardoso, J. (2002). *Stochastic Workflow Reduction Algorithm*. LSDIS Lab, Department of Computer Science, University of Georgia, http://lsdis.cs.uga.edu/proj/meteor/QoS/SWR_Algorithm.htm.
- Cardoso, J., A. Sheth, and J. Miller (2002). *Workflow Quality of Service*. International Conference on Enterprise Integration and Modeling Technology and International Enterprise Modeling Conference (ICEIMT/IEMC’02), Valencia, Spain, Kluwer Publishers.
- Chen, Y. (2000). *Design and Implementation of Dynamic Process Definition Modifications in OrbWork Enactment System*. M.Sc. Thesis, Department of Computer Science, University of Georgia, Athens, GA.
- Clark, D., S. Shenker, and L. Zhang (1992). *Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism*. Proceedings of ACM SIGCOMM. pp. 14-26.
- Cruz, R. L. (1995). *Quality of service guarantees in virtual circuit switched networks*. IEEE J. Select. Areas Commun. 13(6): 1048-1056.
- Dadam, P., M. Reichert, and K. Kuhn (2000). *Clinical Workflows: the Killer Application for Process Oriented Information Systems*. 4th International Conference on Business Information Systems (BIS 2000), Poznan, Poland. pp. 36-59.
- Damen, Z., W. Derks, M. Duitshof, and H. Ensing (2000). *Business-to-business E-Commerce in a Logistics Domain*. The CAiSE*00 Workshop on Infrastructures for Dynamic Business-to-Business Service Outsourcing, Stockholm, Sweden.
- DAML-S (2001). *Technical Overview - a white paper describing the key elements of DAML-S*.
- Eder, J., E. Panagos, H. Pozewaunig, and M. Rabinovich (1999). *Time Management in Workflow Systems*. BIS'99 3rd International Conference on Business Information Systems, Poznan, Poland, Springer Verlag. pp. 265-280.
- Fensel, D. and C. Bussler (2002). *The Web Service Modeling Framework*. Vrije Universiteit Amsterdam (VU) and Oracle Corporation, http://www.cs.vu.nl/~dieter/ftp/paper/wsmf.pdf.
- Frölund, S. and J. Koistinen (1998). *Quality-of-Service Specification in Distributed Object Systems*. Distributed Systems Engineering Journal 5(4).
- Garvin, D. (1988). *Managing Quality: The Strategic and Competitive Edge*. New York, Free Press.
- Georgiadis, L., R. Guerin, V. Peris, and K. Sivarajan (1996). *Efficient Network QoS Provisioning Based on Per Node Traffic Shaping*. IEEE ACM Transactions on Networking 4(4): 482-501.
- Grefen, P., K. Aberer, Y. Hoffner, and H. Ludwig (2000). *CrossFlow: Cross-Organizational Workflow Management in Dynamic Virtual Enterprises*. International Journal of Computer Systems Science & Engineering 15(5): 227-290.
- Hall, D., J. A. Miller, J. Arnold, K. J. Kochut, A. P. Sheth, and M. J. Weise (2000). *Using Workflow to Build an Information Management System for a Geographically Distributed Genome Sequence Initiative*, LSDIS Lab, Department of Computer Science, University of Georgia, Athens, GA, Technical Report.
- Hiltunen, M. A., R. D. Schlichting, C. A. Ugarte, and G. T. Wong (2000). *Survivability through Customization and Adaptability: The Cactus Approach*. DARPA Information Survivability Conference and Exposition (DISCEX 2000). pp. 294-307.
- Kang, M. H., J. N. Froscher, A. P. Sheth, K. J. Kochut, and J. A. Miller (1999). *A Multilevel Secure Workflow Management System*. Proceedings of the 11th Conference on Advanced Information Systems Engineering, Heidelberg, Germany, Springer. pp. 271-285.
- Kang, M. H., J. S. Park, and J. N. Froscher (2001). *Access Control Mechanisms for Inter-organizational Workflows*. Proceedings of 6th ACM Symposium on Access Control Models and Technologies, Chantilly, VA.
- Klingemann, J., J. Wäsch, and K. Aberer (1999). *Deriving Service Models in Cross-Organizational Workflows*. Proceedings of RIDE - Information Technology for Virtual Enterprises (RIDE-VE '99), Sydney, Australia. pp. 100-107.
- Kobielus, J. G. (1997). *Workflow Strategies*, IDG Books Worldwide.
- Kochut, K. J. (1999). *METEOR Model version 3*, Large Scale Distributed Information Systems Lab, Department of Computer Science, University of Georgia, Athens, GA.
- Kochut, K. J., A. P. Sheth, and J. A. Miller (1999). *ORBWork: A CORBA-Based Fully Distributed, Scalable and Dynamic Workflow Enactment Service for METEOR*, Large Scale Distributed Information Systems Lab, Department of Computer Science, University of Georgia, Athens, GA.
- Krishnakumar, N. and A. Sheth (1995). *Managing Heterogeneous Multi-system Tasks to Support Enterprise-wide Operations*. Distributed and Parallel Databases Journal 3(2): 155-186.
- Luo, Z. (2000). *Knowledge Sharing, Coordinated Exception Handling, and Intelligent Problem Solving to Support Cross-Organizational Business Processes*. Ph.D. Dissertation, Department of Computer Science, University of Georgia, Athens, GA.
- Marjanovic, O. and M. Orlowska (1999). *On modeling and verification of temporal constraints in production workflows*. Knowledge and Information Systems 1(2): 157-192.
- METEOR (2002). *METEOR (Managing End-To-End OpeRations) Project Home Page*. LSDIS Lab, http://lsdis.cs.uga.edu/proj/meteor/meteor.html.
- Miller, J. A., J. S. Cardoso, and G. Silver (2002). *Using Simulation to Facilitate Effective Workflow Adaptation*. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego, California. pp. 177-181.
- Miller, J. A., R. Nair, Z. Zhang, and H. Zhao (1997). *JSIM: A Java-Based Simulation and Animation Environment*. Proceedings of the 30th Annual Simulation Symposium, Atlanta, GA. pp. 786-793.
- Miller, J. A., D. Palaniswami, A. P. Sheth, K. J. Kochut, and H. Singh (1998). *WebWork: METEOR2's Web-based Workflow Management System*. Journal of Intelligence Information Management Systems: Integrating Artificial Intelligence and Database Technologies (JIIS) 10(2): 185-215.
- Miller, J. A., A. F. Seila, and X. Xiang (2000). *The JSIM Web-Based Simulation Environment*. Future Generation Computer Systems: Special Issue on Web-Based Modeling and Simulation 17(2): 119-133.
- Nahrstedt, K. and J. M. Smith (1996). *Design, Implementation and Experiences of the OMEGA End-point Architecture*. IEEE JSAC 14(7): 1263-1279.
- Nair, R., J. A. Miller, and Z. Zhang (1996). *A Java-Based Query Driven Simulation Environment*. Proceedings of the 1996 Winter Simulation Conference, Colorado, CA. pp. 786-793.
- Nelson, E. C. (1973). *A Statistical Basis for Software Reliability*, TRW Software Series March.
- OMG (1998). *BODTF RFP #2 Submission, Workflow Management Facility, Revised Submission*, ftp://ftp.omg.org/pub/docs/bom/98-06-07.pdf.
- Pozewaunig, H., J. Eder, and W. Liebhart (1997). *ePERT: Extending PERT for workflow management systems*. First European Symposium in Advances in Databases and Information Systems (ADBIS), St. Petersburg, Russia. pp. 217-224.
- Reichert, M. and P. Dadam (1998). *ADEPTflex - Supporting Dynamic Changes of Workflows Without Losing Control*. Journal of Intelligent Information Systems - Special Issue on Workflow Managament 10(2): 93-129.
- Rommel, G. (1995). *Simplicity wins: how Germany's mid-sized industrial companies succeed*. Boston, Mass, Harvard Business School Press.
- Sheth, A. P., W. v. d. Aalst, and I. B. Arpinar (1999). *Processes Driving the Networked Economy*. IEEE Concurrency 7(3): 18-31.
- Son, J. H., J. H. Kim, and M. H. Kim (2001). *Deadline Allocation in a Time-Constrained Workflow*. International Journal of Cooperative Information Systems (IJCIS) 10(4): 509-530.
- Song, M. (2001). *RepoX: A Repository for Workflow Designs and Specifications*. M.Sc. Department of Computer Science, University of Georgia, Athens.
- Stalk, G. and T. M. Hout (1990). *Competing against time: how time-based competition is reshaping global markets*. New York, Free Press.
- Swenson, K. (1998). *SWAP - Simple Workflow Access Protocol*.
- Weikum, G. (1999). *Towards Guaranteed Quality and Dependability of Information Service*. Proceedings of the Conference Datenbanksysteme in Buro, Technik und Wissenschaft, Freiburg, Germany, Springer Verlag. pp. 379-409.
- Zinky, J., D. Bakken, and R. Schantz (1997). *Architectural Support for Quality of Service for CORBA Objects*. Theory and Practice of Object Systems 3(1): 1-20.

### 133
#### CHAPTER 4
#### SEMANTIC E-WORKFLOW COMPOSITION
*Cardoso, J.S. and A. Sheth. Submitted to the Journal of Intelligent Information Systems (07/12/2002).*

### 134
#### 4.1 ABSTRACT
Systems and infrastructures are currently being developed to support Web services. The main idea is to encapsulate an organization’s functionality within an appropriate interface and advertise it as Web services. While in some cases Web services may be utilized in an isolated form, it is normal to expect Web services to be integrated as part of workflow processes. The composition of workflow processes that model e-service applications differs from the design of traditional workflows in terms of the number of tasks (Web services) available for the composition process, their heterogeneity, and their autonomy. Therefore, two problems need to be solved: how to efficiently discover Web services based on functional and operational requirements, and how to facilitate the interoperability of heterogeneous Web services. In this paper, we present a solution based on ontologies that addresses these problems. We start by illustrating the steps involved in the composition of a workflow. Two of these steps are the discovery of Web services and their subsequent integration into a workflow. To assist designers with these two steps, we have devised an algorithm to simultaneously discover Web services and resolve heterogeneity among their interfaces and the workflow host. Finally, we describe a prototype that has been implemented to illustrate how discovery and interoperability functions are achieved.

### 135
#### 4.2 INTRODUCTION
E-services have been announced as the next wave of Internet-based business applications that will dramatically change the use of the Internet (Fabio Casati, Ming-Chien Shan et al. 2001). With the development and maturity of infrastructures and solutions that support e-services, we expect organizations to incorporate Web services as part of their business processes. While in some cases Web services may be utilized in an isolated form, it is natural to expect that Web services will be integrated as part of workflows (Berners-Lee 2001; Fensel and Bussler 2002). Workflow management systems are capable of integrating business objects to set up e-services in an amazingly short time and at impressively low cost (Shegalov, Gillmann et al. 2001). Workflows and Web services play a major role in architectures such as business-to-business (B2B), business-to-customer (B2C), customer-to-customer (C2C), dynamic trading processes (Sheth, Aalst et al. 1999), dynamic value chains (Lee and Whang 2001), virtual organizations, and virtual Web organizations (Ulrich 2001).

A workflow is an abstraction of a business process. It comprises a number of logical steps (known as tasks or activities), dependencies among tasks, routing rules, and participants. In a workflow, a task can represent a human activity or a software system. The emergent need for workflows to model e-service applications makes it essential that workflow tasks be associated with Web services. As a result, research is currently being carried out to enhance workflow systems in their support and management of Web services (Shegalov, Gillmann et al. 2001).

The modeling of e-services using workflows raises two challenges for workflow systems. First, Web services must be located that might contain (a) the desired functionality and (b) operational requirements needed to carry out the realization of a given task. It is necessary to efficiently discover Web services from the potentially thousands of services available on the Internet. Second, once the desired Web services have been found, mechanisms are needed to (c) facilitate the resolution of structural and semantic differences. This is because the heterogeneous Web services found in the first step need to interoperate with other components present in a workflow host.

(a) The design of traditional workflow applications involves the selection of appropriate tasks with their desired functionality to compose a workflow and to establish connections among these tasks (control and data flow). Tasks are selected from a workflow repository (Arpinar, Miller et al. 2001; Song 2001) which typically contains only tens to a few hundred tasks. Since the number of tasks to choose from is modest, the process is manageable without requiring sophisticated search or discovery mechanisms. However, when a workflow is employed to model e-services, the potential number of Web services available for the composition process can be extremely large. Then, we are no longer searching for a task from a set of a few hundred, but we are searching for a service from a set that can potentially contain thousands of Web services. One cannot expect a designer to manually browse through all of the Web services available and select the most suitable ones.

(b) The autonomy of Web services does not allow users to identify their operational metrics at design time, i.e., before their actual execution. Operational metrics characterize Web services according to their Quality of Service (QoS), which includes their timeliness, quality of products delivered, cost of service, and reliability. When composing a workflow, it is indispensable to analyze and compute its overall QoS (Cardoso, Miller et al. 2002; Cardoso, Sheth et al. 2002; Miller, Cardoso et al. 2002). This allows organizations to translate their vision into their business processes more efficiently, since workflows can be designed according to QoS metrics. The management of QoS directly impacts the success of organizations participating in electronic activities. Good management of quality leads to the creation of quality products and services, which in turn fulfills customer expectations and achieves customer satisfaction. To achieve these objectives, one of the first steps is to develop an adequate QoS model for workflow processes, tasks, and Web services. Such a model will allow for the discovery of Web services and for the composition of workflows based on operational requirements.

(c) The information interoperability problems that the composition of workflows involving Web services face are already well known within the distributed database systems community (Sheth and Larson 1990; Kashyap and Sheth 1996; Calvanese, Giacomo et al. 1998; Parent and Spaccapietra 1998). To achieve interoperability, it is necessary to address the problem of semantic integration—the identification of semantically similar objects that belong to different systems and the resolution of their schematic differences (Kashyap and Sheth 1996). When tasks and Web services are put together, their interfaces (inputs and outputs) need to interoperate; therefore, structural and semantic differences must be resolved.