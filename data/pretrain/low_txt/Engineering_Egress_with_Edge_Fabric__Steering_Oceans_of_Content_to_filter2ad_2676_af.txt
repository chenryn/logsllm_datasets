### Engineering Egress with Edge Fabric
**ACM SIGCOMM, August 21–25, 2017, Los Angeles, CA, USA**

#### Capacity and Utilization
We manage overload on these connections using the same approach as a regular PNI (Private Network Interconnect) interface, but with the added constraint of limiting utilization per next hop.

#### 9. Related Work

**CDN Traffic Engineering:**
With the growth of CDN (Content Delivery Network) traffic, researchers and engineers have proposed new traffic engineering solutions. A common approach, also employed by Edge Fabric, is centralized (SDN) control that integrates network and traffic information to configure network devices. Researchers have explored various methods to direct client requests, such as anycast [11] and DNS extensions [7], which aim to route clients to nearby servers. These solutions address different challenges than those described in §3 and are complementary to Edge Fabric. For instance, Facebook uses solutions to determine where to direct a client, but still relies on Edge Fabric to choose the optimal route for sending data to the client.

**Comparative Solutions:**
Footprint [16], PECAN [28], Entact [32], and Espresso [31] propose directing clients to specific PoPs (Points of Presence) or paths based on path performance. Footprint focuses on shifting load between PoPs to avoid congestion, while PECAN measures performance and selects ingress routes. Edge Fabric, on the other hand, shifts client traffic between alternate egress routes to avoid congestion. These proposals are complementary, and our techniques could be applied to Footprint and PECAN, and vice versa.

**Entact and Espresso:**
Entact and Espresso are the most similar to Edge Fabric. Entact overrides BGP's default routing decisions through a well-designed approach that balances performance, load, and cost, evaluating the approach via emulation [32]. Similar to AltPath, Entact directs some traffic to alternate paths to measure their performance. We build on this idea, deploying it in production at scale, applying it to all our services and users. For example, while Entact measures alternate path performance for individual IP addresses within prefixes, AltPath can assign flows randomly or select them across the address space, guarding against varying performance and enabling application-specific routing. Entact uses active measurements (pings) to measure path performance but can only make decisions for 26% of MSN traffic due to the need for responsive addresses. This limits the number of alternate paths it can measure in parallel and prevents it from increasing decision granularity by deaggregating prefixes. Edge Fabric, using passive measurement of production traffic, leverages Facebook’s existing server-side measurement infrastructure to collect representative data, split prefixes, and use multiple paths in parallel. Additionally, we address practical challenges, such as potential oscillations, not present in Entact’s emulated evaluation.

**Espresso:**
Espresso is Google’s SDN-based system for controlling egress routing [31]. Both Espresso and Edge Fabric are designed by large content providers to overcome BGP and BGP router limitations as they expand their PoP and peering footprint. They centralize routing control while retaining BGP as the interface to peers. However, they prioritize different trade-offs in design decisions. Espresso uses a bespoke architecture to eliminate the need for BGP routers supporting full Internet routing tables, whereas Edge Fabric relies on BGP and vendor BGP routers, building on existing systems. Edge Fabric restricts the size of its routing tables by isolating PoPs, ensuring a low number of user-traffic-carrying prefixes per PoP (Figure 3). While Facebook achieves simplicity by isolating prefix announcements, ingress, egress, and control to individual PoPs, Espresso uses a single global controller and can route traffic across the WAN to distant PoPs, providing flexibility. Edge Fabric’s controller pushes egress decisions only to peering routers, isolating Facebook’s hosts from network state. Espresso, however, pushes routing decisions to hosts, maximizing flexibility but requiring a more sophisticated controller architecture and continuous synchronization to prevent blackholing. Section 8.1 discusses these trade-offs in more detail, based on our experience with routing egress traffic and host-based routing (earlier Edge Fabric designs similar to Espresso).

**B4 and SWAN:**
B4 [14] and SWAN [13] centralize control of inter-datacenter networks to maximize utilization without affecting high-priority traffic. Edge Fabric shares this goal but faces unique challenges. B4 and SWAN operate in a closed environment with unified administration and traffic that can tolerate delay and loss. In contrast, Edge Fabric controls egress traffic to external networks and users, with much of the traffic being adaptive bitrate video, which has strict latency demands. Fibbing [29] centralizes control of legacy OSPF networks, injecting information to influence distributed routers. Edge Fabric similarly injects routes but has less visibility and control over end-to-end paths in an interdomain setting. Richer mechanisms for traffic engineering, such as iSDX [12], could be beneficial.

**Performance Monitoring:**
To inform CDN traffic engineering, existing techniques measure path performance through active or passive monitoring. Active measurement techniques instrument clients [4, 21] or dedicated measurement vantage points [1, 18, 19], while passive techniques require monitoring functionality in network equipment [15, 17]. Edge Fabric conducts passive measurements at Facebook’s servers, allowing comprehensive monitoring of all paths and services without instrumenting millions of clients and collecting richer metrics (e.g., SRTT) compared to on-path devices. Our finding that a small number of interfaces experience congestion aligns with previous IXP (Internet Exchange Point) characterization studies [2, 8, 16].

#### 10. Conclusion
Today’s Internet traffic is dominated by a few large content providers, and their interactions with other ASes (Autonomous Systems) significantly shape interdomain routing. This paper provides the first public details of the design, implementation, and operational experience of Edge Fabric, a system that steers vast amounts of content to the world. Edge Fabric enhances BGP with measurement and control mechanisms to overcome its lack of congestion and performance awareness. Designed to be simple and scalable, it leverages centralized control, existing vendor support, and server-based measurements. Our results show that Edge Fabric successfully avoids congesting capacity-constrained interconnections and demonstrates the potential for performance-aware interdomain routing through alternative path measurements.

BGP will remain the Internet’s interdomain routing standard for the foreseeable future. By sharing our four years of experience in engineering egress traffic, including a detailed look at the opportunities and challenges presented by the Internet connectivity of today’s large content providers, we hope to better understand BGP’s limitations and improve the Internet experience for all users.

#### Acknowledgements
We thank our Facebook colleagues for their insights and feedback, including Steve Shaw, Manikandan Somasundaram, Lisa Guo, Alexander Kramarov, Bolek Kulbabinski, Vincent Mauge, Jimmy Ottosson, Callahan Warlick, Emre Cantimur, Yudong Yang, Martin Lau, Omar Baldonado, and especially Niky Riga and Varghese Vaidhyan. We also thank our shepherd Olaf Maennel and the SIGCOMM reviewers. Special thanks to the Espresso authors [31], especially K.K. Yap and Amin Vahdat, for informative exchanges. Brandon Schlinker’s research was partially funded by the Facebook Graduate Fellowship. The PEERING testbed and Ethan Katz-Bassett’s and Harsha Madhyastha’s participation were funded in part by Facebook Faculty Awards and the National Science Foundation (CNS-1406042, CNS-1351100, CNS-1413978, CNS-1563849, and CNS-1564242). Italo Cunha is funded in part by CNPq and FAPEMIG.

#### References
[1] ThousandEyes: Network Intelligence Software. www.thousandeyes.com.
[2] B. Ager, N. Chatzis, A. Feldmann, N. Sarrar, S. Uhlig, and W. Willinger. Anatomy of a Large European IXP. In Proc. ACM SIGCOMM, 2012.
[3] M. Calder, X. Fan, Z. Hu, E. Katz-Bassett, J. Heidemann, and R. Govindan. Mapping the Expansion of Google’s Serving Infrastructure. In Proc. ACM IMC, 2013.
[4] M. Calder, A. Flavel, E. Katz-Bassett, R. Mahajan, and J. Padhye. Analyzing the Performance of an Anycast CDN. In Proc. ACM IMC, 2015.
[5] Y.-C. Chiu, B. Schlinker, A. B. Radhakrishnan, E. Katz-Bassett, and R. Govindan. Are We One Hop Away from a Better Internet?. In Proc. ACM IMC, 2015.
[6] F. Dobrian, V. Sekar, A. Awan, I. Stoica, D. Joseph, A. Ganjam, J. Zhan, and H. Zhang. Understanding the Impact of Video Quality on User Engagement. In Proc. ACM SIGCOMM, 2011.
[7] M. T. Fangfei Chen, Ramesh K. Sitaraman. End-User Mapping: Next Generation Request Routing for Content Delivery. In Proc. ACM SIGCOMM, 2015.
[8] N. Feamster. 2016. Revealing Utilization at Internet Interconnection Points. CoRR abs/1603.03656 (2016).
[9] T. Flach, N. Dukkipati, A. Terzis, B. Raghavan, N. Cardwell, Y. Cheng, A. Jain, S. Hao, E. Katz-Bassett, and R. Govindan. Reducing Web Latency: The Virtue of Gentle Aggression. In Proc. ACM SIGCOMM, 2013.
[10] T. Flach, P. Papageorge, A. Terzis, L. D. Pedrosa, Y. Cheng, T. Karim, E. Katz-Bassett, and R. Govindan. An Internet-Wide Analysis of Traffic Policing. In Proc. ACM SIGCOMM, 2016.
[11] A. Flavel, P. Mani, D. Maltz, N. Holt, J. Liu, Y. Chen, and O. Surmachev. FastRoute: A Scalable Load-Aware Anycast Routing Architecture for Modern CDNs. In Proc. USENIX NSDI, 2015.
[12] A. Gupta, R. MacDavid, R. Birkner, M. Canini, N. Feamster, J. Rexford, and L. Vanbever. An Industrial-scale Software Defined Internet Exchange Point. In Proc. USENIX NSDI, 2016.
[13] C.-Y. Hong, S. Kandula, R. Mahajan, M. Zhang, V. Gill, M. Nanduri, and R. Wattenhofer. Achieving High Utilization with Software-driven WAN. In Proc. ACM SIGCOMM, 2013.
[14] S. Jain, A. Kumar, S. Mandal, J. Ong, L. Poutievski, A. Singh, S. Venkata, J. Wanderer, J. Zhou, M. Zhu, J. Zolla, U. Hölzle, S. Stuart, and A. Vahdat. B4: Experience with a Globally-deployed Software Defined WAN. In Proc. ACM SIGCOMM, 2013.
[15] C. Labovitz, S. Iekel-Johnson, D. McPherson, J. Oberheide, and F. Jahanian. Internet Inter-domain Traffic. In Proc. ACM SIGCOMM, 2010.
[16] H. H. Liu, R. Viswanathan, M. Calder, A. Akella, R. Mahajan, J. Padhye, and M. Zhang. Efficiently Delivering Online Services over Integrated Infrastructure. In Proc. USENIX NSDI, 2016.
[17] Z. Liu, A. Manousis, G. Vorsanger, V. Sekar, and V. Braverman. One Sketch to Rule Them All: Rethinking Network Flow Monitoring with UnivMon. In Proc. ACM SIGCOMM, 2016.
[18] M. Luckie, B. Huffaker, K. Claffy, A. Dhamdhere, and V. Giotsas. AS Relationships, Customer Cones, and Validation. In Proc. ACM IMC, 2013.
[19] H. Madhyastha, T. Isdal, M. Piatek, C. Dixon, T. Anderson, A. Krishnamurthy, and A. Venkataramani. iPlane: an Information Plane for Distributed Services. In Proc. USENIX OSDI, 2006.
[20] S. Meinders. In RIPE NCC Regional Meeting: Eurasia Network Operators Group (ENOG 11), 2016.
[21] A. Nikravesh, H. Yao, S. Xu, D. Choffnes, and Z. M. Mao. Mobilyzer: An Open Platform for Controllable Mobile Network Measurements. In Proc. ACM MobiSys, 2015.
[22] R. Sambasivan, D. Tran-Lam, A. Akella, and P. Steenkiste. Bootstrapping Evolvability for Inter-domain Routing with D-BGP. In Proc. ACM SIGCOMM, 2017.
[23] Sandvine. Global Internet Phenomena Report 2H2016. Available at: http://www.sandvine.com/trends/global-internet-phenomena.
[24] B. Schlinker, K. Zarifis, I. Cunha, N. Feamster, and E. Katz-Bassett. PEERING: An [25] J. Scudder, R. Fernando, and S. Stuart. RFC 7854: BGP Monitoring Protocol (BMP). AS for Us. In Proc. ACM HotNets, 2014. http://www.ietf.org/rfc/rfc7854.txt.
[26] D. Sommermann and A. Frindell. Introducing Proxygen, Facebook’s C++ HTTP framework. https://code.facebook.com/posts/1503205539947302.
[27] Y.-W. E. Sung, X. Tie, S. H. Wong, and H. Zeng. Robotron: Top-down Network Management at Facebook Scale. In Proc. ACM SIGCOMM, 2016.
[28] V. Valancius, B. Ravi, N. Feamster, and A. C. Snoeren. Quantifying the Benefits of Joint Content and Network Routing. In Proc. ACM SIGMETRICS, 2013.
[29] S. Vissicchio, O. Tilmans, L. Vanbever, and J. Rexford. Central Control Over Distributed Routing. In Proc. ACM SIGCOMM, 2015.
[30] D. Wing and A. Yourtchenko. RFC 6555 Happy Eyeballs: Success with Dual-Stack Hosts. http://www.ietf.org/rfc/rfc6555.txt.
[31] K. K. Yap, M. Motiwala, J. Rahe, S. Padgett, M. Holliman, G. Baldus, M. Hines, T. Kim, A. Narayanan, A. Jain, V. Lin, C. Rice, B. Rogan, A. Singh, B. Tanaka, M. Verma, P. Sood, M. Tariq, M. Tierney, D. Trumic, V. Valancius, C. Ying, M. Kallahalla, B. Koley, and A. Vahdat. Taking the Edge off with Espresso: Scale, Reliability and Programmability for Global Internet Peering. In Proc. ACM SIGCOMM, 2017.
[32] Z. Zhang, M. Zhang, A. Greenberg, Y. C. Hu, R. Mahajan, and B. Christian. Optimizing Cost and Performance in Online Service Provider Networks. In Proc. USENIX NSDI, 2010.
[33] J. Zhou, M. Tewari, M. Zhu, A. Kabbani, L. Poutievski, A. Singh, and A. Vahdat. WCMP: Weighted Cost Multipathing for Improved Fairness in Data Centers. In Proc. ACM EuroSys, 2014.