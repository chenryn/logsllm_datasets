**作者：水泡泡@知道创宇404积极防御实验室  
日期：2021年3月5日**

### 0x01 漏洞描述
View Planner 是 VMware 官方推出的一款用于测试 View 桌面性能的工具。通过该工具，用户可以评估在特定应用环境下可发布的 View 桌面数量。然而，View Planner 的 logupload 端点缺乏输入验证机制，这使得未经授权的攻击者（只要拥有对 View Planner Harness 的网络访问权限）能够上传并执行精心构造的文件，从而在 logupload 容器中实现远程代码执行。

**影响范围：VMware View Planner**

提取码: vv42

### 0x02 环境搭建
使用 VMware 直接加载 ova 文件进行安装。安装过程中，请根据提示初始化 SSH root 账号的初始密码，以完成环境搭建。

### 0x03 漏洞复现
根据 Twitter 上公开的 POC，向 logupload 端点构造请求包（路径使用相对路径）。上传的文件内容是 `log_upload_wsgi.py` 的源文件，但额外添加了执行命令的代码。上传成功后，再次请求 logupload 端点，即可收到 curl 请求，表明命令已成功执行，漏洞复现成功。

### 0x04 漏洞分析
在深入分析之前，先简要介绍 View Planner 的部署架构。View Planner 的 Web 服务由 Docker 提供，其中 80 和 443 端口的内容由 Apache Server 容器提供，而 8081 端口则由 crossbar 容器提供，主要用于处理登录后的后端交互逻辑。

通过 SSH 连接到 viewplanner 虚拟机，并使用 SCP 命令将 `/root/viewplanner` 源码下载到本地。全局搜索 logupload 关键字后发现，Apache 配置文件中指定了 logupload 端点指向的文件为 `/etc/httpd/html/wsgi_log_upload/log_upload_wsgi.py`。实际上，此路径对应于宿主机上的 `/root/viewplanner/httpd` 目录。

定位到 `/root/viewplanner/httpd/wsgi_log_upload/log_upload_wsgi.py` 文件。该脚本从 CGI 中获取 `logfile` 和 `logMetaData` 两个参数的数据。如果 `logMetaData` 参数包含 JSON 数据，则从中提取 `itrLogPath` 和 `logFileType` 两个键值。随后，将 `itrLogPath` 和 `logFileType` 与 `resultBasePath` 进行路径拼接。如果目标路径不存在，则创建该路径。接下来，判断 `logfile` 是否为上传文件，如果是并且 `logFileType` 参数不等于 `workloadLogsZipFile`，则直接将 `resultBasePath`、`itrLogPath` 和 `logFileType` 的值拼接成完整路径，并写入文件。

由于缺少路径规范化过滤，攻击者可以通过构造特殊的数据包将恶意文件上传至任意位置，进而覆盖 `log_upload_wsgi.py` 文件，达到远程代码执行的目的。

### 0x05 补丁分析
官方补丁已在最新版本中发布。对比分析显示，新版本加入了 `password` 参数，意味着使用 `logupload` 端点需要提供密码。然而，这个密码 (`secret_key`) 来自于 `wsgi.config` 文件，且其硬编码值为 `vmware-viewplanner-ca$hc0w`，这种做法的安全性值得商榷。

尽管如此，后续代码中引入了 `normpath` 函数对拼接后的路径进行了规范化处理，并利用 `startswith` 方法确保所有写入操作仅限于 `/etc/httpd/html/vpresults` 目录下，从而防止跨目录上传行为的发生。因此，该漏洞得到了有效修复。

### 0x06 总结
尽管受影响系统多数部署于内网环境中，但鉴于此漏洞的简单性和潜在危害性，强烈建议管理员尽快升级至最新版本，以防在未来的安全事件中遭受损失。