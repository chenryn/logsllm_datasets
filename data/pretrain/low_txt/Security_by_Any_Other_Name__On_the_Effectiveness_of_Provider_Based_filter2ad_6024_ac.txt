### 4.2 Incoming MTA Behavior

- **STARTTLS Extension Advertisement:** A significant portion (44.60%) of the servers did not advertise the STARTTLS extension. Despite this, we did not exclude these servers and proceeded to issue the STARTTLS command in the next step, regardless of whether the support was advertised.
- **STARTTLS Command Issuance:** We issued the STARTTLS command to the server. This command failed for 0.51% of incoming MTAs that had advertised the STARTTLS option (45.31% of all servers). Interestingly, 0.30% of the servers that did not advertise STARTTLS support still responded by initiating a TLS handshake.
- **TLS Handshake:** We conducted the TLS negotiation phase, recording the supported options and the server certificate. We did not provide a client certificate.
- **Mail Transfer:** With TLS encryption in place, we either sent an email message (if we had an account with the service, as described in Section 4.1.2) or issued the QUIT command.

### 4.3 Outgoing MTA Behavior

- **Role of Outgoing MTA:** The outgoing MTA acts as a client when transferring mail to an incoming MTA of another provider. It must issue the STARTTLS command to initiate the TLS session.
- **Testing Method:** To test which outgoing MTAs issued the STARTTLS command, we generated a message from the provider to an incoming MTA server under our control. This required creating accounts at the providers. We created accounts at 22 mail providers, representing 75.05% of users according to the provider list ranking.
- **Interaction Steps:**
  1. **HELO/EHLO Command:** The client must first issue a HELO or EHLO command to identify itself. All 22 providers used the EHLO command, indicating ESMTP support.
  2. **ESMTP Options:** If the client used the EHLO command, we advertised the STARTTLS extension.
  3. **STARTTLS Command:** A client wishing to use TLS would then issue the STARTTLS command to protect the rest of the SMTP session. 15 out of the 22 ESMTP-speaking outgoing MTAs did so. For MSAs, we also tested if the provider would accept login credentials and mail over an unsecured connection.
  4. **TLS Handshake:** We carried out the TLS handshake, offering different certificates each session to determine the level of certificate checking done by the client. We also requested a client certificate and recorded it if provided.
  5. **Mail Transfer:** We accepted any mail offered by the client.

### 4.4 SMTP MSA Behavior

- **TLS Support Assessment:** To assess TLS support by SMTP MSAs, we obtained mail submission configuration information from the 22 providers on the select provider list. 15 of the 22 providers instructed users to configure their mail readers to use TLS.
- **Interaction for SMTP with STARTTLS:** We performed the same interaction as for SMTP incoming MTAs (Section 4.2), but also checked if the MSA would proceed without the client issuing STARTTLS first.
- **Interaction for SMTPS MSAs:** We carried out the TLS handshake and captured the server certificate.

### 4.5 POP and IMAP Behavior

- **Support and Configuration:** For the 22 providers, we contacted each provider’s POP and IMAP server. All 22 offered POP and IMAP support, with 15 instructing users to configure their mail readers to use TLS.
- **Interaction Steps:**
  - For POP3 and IMAP, we carried out the handshake and captured the certificate.
  - For POP3 and IMAP with STARTTLS, we recorded whether the STARTTLS option was advertised, issued STARTTLS, and captured the certificate. We did not use a client certificate.

### 4.6 Webmail Behavior

- **Web Interface Support:** All 22 providers in our select provider set supported webmail interfaces. We recorded whether the webmail interface supported HTTPS, if it was the default, and if the certificate was valid.

### 4.7 Reported TLS Use

- **Received Header Analysis:** The SMTP standard requires mail servers to prepend a Received header line, indicating when, by which server, and from which server a message was received. RFC 5321 defines additional information, including protocol information introduced by the WITH keyword (e.g., ESMTP, ESMTPS).
- **TLS Use Inference:** We used this feature to map TLS use on internal hops by sending messages between our accounts and collecting the Received headers. We extracted the WITH clause to infer TLS use.

### 4.8 Cross-Provider Validation

- **Validation Method:** To validate our inference method, we sent messages between all pairs of providers on the select provider list (484 messages in total). We used the Received header information to determine if providers exhibited different pairwise behavior than expected from their interaction with us. Results are discussed in Section 5.3.

### 4.9 Certificates

- **Certificate Validation:** We checked if the certificate was revoked, expired, or signed by a trusted CA using the Mozilla list. We also verified if the common name or subjectAltName matched the host name and noted the signature algorithm used.

### 4.10 DKIM

- **DKIM Signing:** To determine DKIM signing by outgoing mail providers, we examined the messages used in the outgoing MTA measurement. We checked for the presence and validity of the DKIM signature.
- **Effect of DKIM on Incoming Mail:** We generated mail to providers, sending three types of messages: without a DKIM signature, with a valid DKIM signature, and with an invalid DKIM signature. We recorded the message outcomes and whether the provider queried our DNS server for the DKIM key.

### 4.11 SPF, ADSP, DMARC, and DNSSEC

- **SPF, DMARC, and DNSSEC Testing:** We queried the name servers of providers for DNS TXT records used by SPF and DMARC. We also checked if the provider’s mail server supported DNSSEC and returned signed records.
- **DNSSEC Verification:** We verified DNSSEC by querying the DNSKEY record and testing the response from DNS servers with and without DNSSEC support.
- **SPF and DMARC Validation:** We tested SPF validation by setting the SPF TXT record to “v=spf1 a -all” and sending messages from an unauthorized IP address. For DMARC, we set the DMARC TXT record to “v=DMARC1 p=reject” and repeated the DKIM experiment.

### 5. RESULTS

- **Submission and Delivery Security:** The security of the first and last hop in a message path (labeled (a) and (e) in Figure 1) depends on the user MUA and the MSA and MDA of the provider.
- **SMTP, POP, and IMAP:** We tested the SMTP, IMAP, and POP servers specified by each provider. Our results show that most providers supported TLS, with only one provider (sohu.com) not providing TLS support for submission or delivery.
- **Certiﬁcates:** Table 3 indicates the type of TLS certificate presented by the MSA or MDA. Most certificates met the required conditions, but some did not match the server host name.

This revised version is more structured and coherent, making it easier to follow the various steps and findings.