### 9. Discussion

In this paper, we demonstrated that widely used TLS libraries can harbor critical vulnerabilities that can be exposed through systematic fuzzing. The case of the OpenSSL stack overflow illustrates how a critical vulnerability can be introduced in a specific library version, for example, due to code restructuring. More intriguingly, new vulnerabilities can arise from implementing countermeasures against known attacks. For instance, the incorrect implementation of countermeasures against padding oracle attacks in OpenSSL and MatrixSSL transformed a server offering a timing oracle into one with a direct oracle or even a buffer overflow vulnerability.

We conclude that similar fuzzing technologies, as introduced in our paper, should be integrated into library test suites and continuous integration processes, or at least run before the release of new library versions. Currently, both the MatrixSSL and Botan libraries are in the process of incorporating TLS-Attacker into their test suites.

In future work, TLS-Attacker fuzzing could be extended to include new fuzzing strategies or compile-time instrumentation to observe new code paths at runtime. The concepts of TLS-Attacker fuzzing could also be applied to validate TLS clients or to test other security protocols, such as IPSec or SSH.

### Acknowledgments

We would like to extend our gratitude to Hanno Böck, Robert Gawlik, Thorsten Holz, Tibor Jager, René Korthaus, Felix Lange, Christian Mainka, Robert Merget, Daniel Neus, Florian Pfützenreuter, Philip Riese, Jörg Schwenk, and Aaron Zauner for their valuable discussions and additional contributions. We also thank our reviewers for their insightful comments and suggestions.

This work was partially supported by the European Commission through the FutureTrust project (grant 700542-Future-Trust-H2020-DS-2015-1) and by the Federal Office for Information Security through project 197 (Sichere Implementierung einer allgemeinen Kryptobibliothek).

### 10. References

1. **Botan: Crypto and TLS for C++11.**
   - [http://botan.randombit.net/](http://botan.randombit.net/)

2. **Gnutls Security Advisory.**
   - [http://www.gnutls.org/security.html](http://www.gnutls.org/security.html)

3. **Java Architecture for XML Binding.**
   - [https://jaxb.java.net/](https://jaxb.java.net/)

4. **Java Platform Debugger Architecture.**
   - [http://docs.oracle.com/javase/1.5.0/docs/guide/jpda/](http://docs.oracle.com/javase/1.5.0/docs/guide/jpda/)

5. **Java Secure Socket Extension (JSSE).**
   - [https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html](https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html)

6. **MatrixSSL. Compact Embedded SSL/TLS Stack.**
   - [http://www.matrixssl.org/](http://www.matrixssl.org/)

7. **Mbed TLS.**
   - [https://tls.mbed.org/](https://tls.mbed.org/)

8. **OpenSSL – Cryptography and SSL/TLS Toolkit.**
   - [https://www.openssl.org](https://www.openssl.org)

9. **OpenSSL Security Advisory.**
   - [https://www.openssl.org/news/vulnerabilities.html](https://www.openssl.org/news/vulnerabilities.html)

10. **The GnuTLS Transport Layer Security Library.**
    - [http://www.gnutls.org](http://www.gnutls.org)

11. **Albrecht, M. R., and Paterson, K. G. Lucky Microseconds: A Timing Attack on Amazon’s s2n Implementation of TLS.**
    - In *Advances in Cryptology - EUROCRYPT 2016 - 35th Annual International Conference on the Theory and Applications of Cryptographic Techniques, Vienna, Austria, May 8-12, 2016, Proceedings, Part I* (2016), pp. 622–643.

12. **AlFardan, N., and Paterson, K. Plaintext-Recovery Attacks Against Datagram TLS.**
    - In *Network and Distributed System Security Symposium (NDSS 2012)* (Feb. 2012).

13. **AlFardan, N. J., and Paterson, K. G. Lucky Thirteen: Breaking the TLS and DTLS Record Protocols.**
    - *2013 IEEE Symposium on Security and Privacy* (2013), 526–540.
    - [http://www.isg.rhul.ac.uk/tls/TLStiming.pdf](http://www.isg.rhul.ac.uk/tls/TLStiming.pdf)

14. **Almeida, J. B., Barbosa, M., Barthe, G., and Dupressoir, F. Verifiable Side-Channel Security of Cryptographic Implementations: Constant-Time MEE-CBC.**
    - In *Fast Software Encryption - 23rd International Conference, FSE* (2016).

15. **Aviram, N., Schinzel, S., Somorovsky, J., Heninger, N., Dankel, M., Steube, J., Valenta, L., Adrian, D., Halderman, J. A., Dukhovni, V., Kasper, E., Cohney, S., Engels, S., Paar, C., and Shavitt, Y. DROWN: Breaking TLS Using SSLv2.**
    - *25th USENIX Security Symposium (USENIX Security 16)* (Aug. 2016).

16. **Bardou, R., Focardi, R., Kawamoto, Y., Steel, G., and Tsay, J.-K. Efficient Padding Oracle Attacks on Cryptographic Hardware.**
    - In *Advances in Cryptology – CRYPTO* (2012), Canetti and R. Safavi-Naini, Eds.

17. **Beurdouche, B., Bhargavan, K., Delignat-Lavaud, A., Fournet, C., Kohlweiss, M., Pironti, A., Strub, P.-Y., and Zinzindohoue, J. K. A Messy State of the Union: Taming the Composite State Machines of TLS.**
    - *IEEE Symposium on Security & Privacy 2015 (Oakland’15)* (2015), IEEE.

18. **Beurdouche, B., Delignat-Lavaud, A., Kobeissi, N., Pironti, A., and Bhargavan, K. FLEXTLS: A Tool for Testing TLS Implementations.**
    - *9th USENIX Workshop on Offensive Technologies (WOOT 15)* (Washington, D.C., Aug. 2015), USENIX Association.

19. **Bhargavan, K., Delignat-Lavaud, A., Fournet, C., Pironti, A., and Strub, P.-Y. Triple Handshakes and Cookie Cutters: Breaking and Fixing Authentication over TLS.**
    - *IEEE Symposium on Security & Privacy 2014 (Oakland’14)* (2014), IEEE.

20. **Bhargavan, K., and Leurent, G. Transcript Collision Attacks: Breaking Authentication in TLS, IKE, and SSH.**
    - *Proceedings of the ISOC Network and Distributed System Security Symposium (NDSS '16)* (Feb 2016).

21. **Biehl, I., Meyer, B., and Müller, V. Differential Fault Attacks on Elliptic Curve Cryptosystems.**
    - In *Proceedings of the 20th Annual International Cryptology Conference on Advances in Cryptology* (London, UK, UK, 2000), CRYPTO ’00, Springer-Verlag, pp. 131–146.

22. **Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and Moeller, B. Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS).**
    - *RFC 4492 (Informational)*, May 2006. Updated by RFCs 5246, 7027.

23. **Bleichenbacher, D. Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS #1.**
    - In *Advances in Cryptology — CRYPTO '98, vol. 1462 of Lecture Notes in Computer Science*. Springer Berlin / Heidelberg, 1998.

24. **Böck, H. A Little POODLE Left in GnuTLS (Old Versions), Nov. 2015.**
    - [https://blog.hboeck.de/archives/877-A-little-POODLE-left-in-GnuTLS-old-versions.html](https://blog.hboeck.de/archives/877-A-little-POODLE-left-in-GnuTLS-old-versions.html)

25. **de Ruiter, J., and Poll, E. Protocol State Fuzzing of TLS Implementations.**
    - *24th USENIX Security Symposium (USENIX Security 15)* (Washington, D.C., Aug. 2015), USENIX Association, pp. 193–206.

26. **Dierks, T., and Allen, C. The TLS Protocol Version 1.0.**
    - *RFC 2246 (Proposed Standard)*, Jan. 1999. Obsoleted by RFC 4346, updated by RFCs 3546, 5746, 6176, 7465, 7507.

27. **Dierks, T., and Rescorla, E. The Transport Layer Security (TLS) Protocol Version 1.2.**
    - *RFC 5246 (Proposed Standard)*, Aug. 2008. Updated by RFCs 5746, 5878, 6176, 7465, 7507, 7568, 7627, 7685.

28. **Dierks, T., and Rescorla, E. The Transport Layer Security (TLS) Protocol Version 1.3.**
    - *draft-ietf-tls-tls13-04*, Jan. 2015.

29. **Dietz, W., Li, P., Regehr, J., and Adve, V. Understanding Integer Overflow in C/C++.**
    - In *Proceedings of the 2012 International Conference on Software Engineering* (Piscataway, NJ, USA, 2012), ICSE 2012, IEEE Press, pp. 760–770.

30. **Duong, T., and Rizzo, J. Here Come the ⊕ Ninjas.**
    - Unpublished manuscript, 2011.

31. **Eastlake, D. Transport Layer Security (TLS) Extensions: Extension Definitions.**
    - *RFC 6066 (Proposed Standard)*, Jan. 2011.

32. **Gueron, S. Intel Advanced Encryption Standard (AES) New Instructions Set, Revision 3.01, 2012.**

33. **Haller, I., Slowinska, A., Neugschwandtner, M., and Bos, H. Dowsing for Overflows: A Guided Fuzzer to Find Buffer Boundary Violations.**
    - *Presented as part of the 22nd USENIX Security Symposium (USENIX Security 13)* (Washington, D.C., 2013), USENIX, pp. 49–64.

34. **Haugh, E. Testing C Programs for Buffer Overflow Vulnerabilities.**
    - *In Proceedings of the Network and Distributed System Security Symposium (NDSS)* (2003).

35. **Irazoqui, G., Inci, M. S., Eisenbarth, T., and Sunar, B. Lucky 13 Strikes Back.**
    - *Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security* (New York, NY, USA, 2015), ASIA CCS '15, ACM, pp. 85–96.

36. **Jager, T., Schinzel, S., and Somorovsky, J. Bleichenbacher's Attack Strikes Again: Breaking PKCS#1 v1.5 in XML Encryption.**
    - *Computer Security - ESORICS 2012 - 17th European Symposium on Research in Computer Security, Pisa, Italy, September 10-14, 2012. Proceedings* (2012), S. Foresti and M. Yung, Eds., LNCS, Springer.

37. **Jager, T., Schwenk, J., and Somorovsky, J. Practical Invalid Curve Attacks on TLS-ECDH.**
    - *20th European Symposium on Research in Computer Security (ESORICS)* (2015).

38. **Kario, H. Testing TLS.**
    - *Ruxcon*, Oct. 2015.
    - [https://github.com/tomato42/tlsfuzzer](https://github.com/tomato42/tlsfuzzer)

39. **Kikuchi, M. CCS Injection Vulnerability, 2014.**
    - [http://ccsinjection.lepidum.co.jp](http://ccsinjection.lepidum.co.jp)

40. **Klíma, V., Pokorný, O., and Rosa, T. Attacking RSA-Based Sessions in SSL/TLS.**
    - *Cryptographic Hardware and Embedded Systems - CHES 2003, vol. 2779 of Lecture Notes in Computer Science*. Springer Berlin / Heidelberg, Sept. 2003.

41. **Langley, A. The POODLE Bites Again, Nov. 2014.**
    - [https://www.imperialviolet.org/2014/12/08/poodleagain.html](https://www.imperialviolet.org/2014/12/08/poodleagain.html)

42. **Merkle, J., and Lochter, M. Elliptic Curve Cryptography (ECC) Brainpool Curves for Transport Layer Security (TLS).**
    - *RFC 7027 (Informational)*, Oct. 2013.

43. **Meyer, C. 20 Years of SSL/TLS Research: An Analysis of the Internet's Security Foundation.**
    - PhD thesis, Ruhr-University Bochum, Feb. 2014.

44. **Meyer, C., Somorovsky, J., Weiss, E., Schwenk, J., Schinzel, S., and Tews, E. Revisiting SSL/TLS Implementations: New Bleichenbacher Side Channels and Attacks.**
    - *23rd USENIX Security Symposium, San Diego, USA* (August 2014).

45. **Möller, B., Duong, T., and Kotowicz, K. This POODLE Bites: Exploiting the SSL 3.0 Fallback, 2014.**

46. **Monégro, A. Penetration Testing Custom TLS Stacks.**
    - *ShmooCon*, Feb. 2016.
    - [https://github.com/tintinweb/scapy-ssl-tls](https://github.com/tintinweb/scapy-ssl-tls)

47. **Ray, M., and Dispensa, S. Renegotiating TLS.**
    - Tech. rep., PhoneFactor, Inc., Nov. 2009.

48. **Rescorla, E., and Modadugu, N. Datagram Transport Layer Security Version 1.2.**
    - *RFC 6347 (Proposed Standard)*, Jan. 2012. Updated by RFC 7507.

49. **Riku, Antti, Matti, and Mehta. Heartbleed, CVE-2014-0160, 2015.**
    - [http://heartbleed.com/](http://heartbleed.com/)

50. **Seggelmann, R., Tuexen, M., and Williams, M. Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) Heartbeat Extension.**
    - *RFC 6520 (Proposed Standard)*, Feb. 2012.

51. **Sheffer, Y., Holz, R., and Saint-Andre, P. Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS).**
    - *RFC 7457 (Informational)*, Feb. 2015.

52. **Somorovsky, J. Curious Padding Oracle in OpenSSL (CVE-2016-2107).**
    - [http://web-in-security.blogspot.de/2016/05/curious-padding-oracle-in-openssl-cve.html](http://web-in-security.blogspot.de/2016/05/curious-padding-oracle-in-openssl-cve.html)

53. **Sullivan, N. The Results of the Cloudflare Challenge.**
    - [https://blog.cloudflare.com/the-results-of-the-cloudflare-challenge](https://blog.cloudflare.com/the-results-of-the-cloudflare-challenge)

54. **Valsorda, F. Yet Another Padding Oracle in OpenSSL CBC Ciphersuites.**
    - [https://blog.cloudflare.com/yet-another-padding-oracle-in-openssl-cbc-ciphersuites](https://blog.cloudflare.com/yet-another-padding-oracle-in-openssl-cbc-ciphersuites)

55. **Vaudenay, S. Security Flaws Induced by CBC Padding — Applications to SSL, IPSEC, WTLS...**
    - *Advances in Cryptology — EUROCRYPT 2002, vol. 2332 of Lecture Notes in Computer Science*. Springer Berlin / Heidelberg, Apr. 2002.