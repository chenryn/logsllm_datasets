# Real-time Steganography with RTP

## Copyright and Disclaimer
© 2007 Computer Academic Underground

## Introduction
### Who am I?
- Founder, Computer Academic Underground (CAU)
- Co-Founder, Austin Hackers Association (AHA!)
- Employed by TippingPoint DVLabs, performing VoIP security research

## Overview
- **VoIP, RTP, and Audio Steganography**
  - Previous Research
  - Real-Time Steganography
  - Using steganography with RTP
  - Problems and Challenges
- **SteganRTP**
  - About, Goals, Etc.
  - Architecture, Operational Flow
  - Message Structures
  - Functional Subsystems
  - Challenges Met
- **Live Demo**
- **Conclusions, Future Work**
- **Q&A**

## VoIP and RTP
- **Voice over IP (VoIP)**
  - Internet Telephony
- **Real-time Transport Protocol (RTP)**
  - Used by most VoIP systems to transmit call audio data

## Audio Steganography
- **Introduction to Steganography**
  - Steganos (covered) graphein (writing)
  - Hiding a secret message within a cover-medium in such a way that others cannot discern the presence of the hidden message
  - Hiding one piece of data within another

- **Steganography Terms**
  - **Message**: The data to be hidden or extracted
  - **Cover-Medium**: The medium in which information is hidden. Also sometimes called “cover-image/data/etc.”
  - **Stego-Medium**: A medium within which information is hidden
  - **Redundant Bits**: Bits of data in a cover-medium that can be modified without compromising the medium’s perceptible integrity

- **Types of Covert Channels**
  - **Storage-based**
    - Persistent
    - Embedding message data into a static cover-medium
    - Extracting message data from a static stego-medium
  - **Timing-based**
    - Transient
    - Signaling message data by modulating behavior
    - Extracting message data by observing effects of modulation

- **Digitally Embedding**
  - Digitally embedding a message in a cover-medium usually involves two steps:
    - Identify the redundant bits of a cover-medium
    - Decide which redundant bits to use and then modify them
  - Generally, redundant bits are likely to be the least-significant bit(s) of each data word value of the cover-medium

- **Digitally Embedding in Audio**
  - Audio is a very inaccurate type of data; slight changes will be indistinguishable from the original to the human ear
  - In audio, you can use the least-significant bits of each word value as redundant bits
  - Use the redundant bits to minimize the impact of changes

- **Example: 8-bit Audio Embedding**
  - Assume an 8-bit cover-audio file with the following 8 bytes of data:
    - 0xb4, 0xe5, 0x8b, 0xac, 0xd1, 0x97, 0x15, 0x68
  - In binary:
    - 10110100, 11100101, 10001011, 10101100, 11010001, 10010111, 00010101, 01101000
  - To hide the byte value ‘214’ (11010110), replace the least significant bit from each byte:
    - 10110101, 11100101, 10001010, 10101101, 11010000, 10010111, 00010101, 01101000
  - The modifications result in the following:
    - Original: 0xb4, 0xe5, 0x8b, 0xac, 0xd1, 0x97, 0x15, 0x68
    - Modified: 0xb5, 0xe5, 0x8a, 0xad, 0xd0, 0x97, 0x15, 0x68

## Previous Research
- **Audio Steganography Tools**
  - **Data Stash**: MP3 files
    - [Website](http://www.skyjuicesoftware.com/software/ds_info.html)
  - **Hide4PGP**: WAV and VOC files
    - [Website](http://www.heinz-repp.onlinehome.de/Hide4PGP.htm)
  - **InvisibleSecrets**: WAV files
    - [Website](http://www.invisiblesecrets.com/)
  - **MP3Stego**: MP3 files
    - [Website](http://www.petitcolas.net/fabien/steganography/mp3stego/)
  - **ScramDisk**: WAV files
    - [Website](http://www.scramdisk.clara.net/)
  - **S-Tools 4**: Embedding into a WAV file
    - [FTP Link](ftp://ftp.funet.fi/pub/crypt/mirrors/idea.sec.dsi.unimi.it/code/s-tools4.zip)
  - **Steganos**: WAV and VOC files
    - [FTP Link](ftp://ftp.hacktic.nl/pub/crypto/steganographic/steganos3r5.zip)
  - **StegHide**: WAV and AU files
    - [Website](http://steghide.sourceforge.net/)
  - **StegMark**: MIDI, WAV, AVI, MPEG
    - [Website](http://www.datamark.com.sg/onlinedemo/stegmark/)

- **VoIP Steganography**
  - **Previous Research Efforts**
    - Using redundant bits to widen RTP audio band
    - Using redundant bits for error correction
    - Replacing RTCP
    - Watermarking audio for integrity checking
  - **Deficiencies**
    - Some are just “theory” papers, don’t explain how they intend to accomplish certain tasks
    - Don’t achieve the primary goal of steganography
      - Use of steganographic techniques easily identifiable by an observer
      - Message data is trivially recognized and extracted from stego-medium
    - Only one public Proof of Concept (PoC); no full implementations
    - Analysis paper forthcoming

## Real-time Steganography
- **Context Terminology**
  - **Packet**: A network data packet
  - **Message**: Data being embedded or extracted via steganographic techniques

- **“Real-time” Steganography?**
  - Separate “hide” and “retrieve” modes are common in storage-based steganography implementations
  - Common cover-mediums are static or unidirectional
  - Utilizing steganography with RTP provides the opportunity to establish an active, or “real-time” covert communications channel

- **RTP’s Redundant Bits**
  - RTP packet payloads are encoded multimedia
  - Focusing on RTP audio
  - RTP supports many different audio Codecs
  - RTP’s redundant bits are determined by the codec used
  - 8-bit sample size Codecs are generally resilient to changes of the LSB for each sample
  - Larger sample size Codecs may provide for one or more LSBs to be modified per sample

- **Audio Codec Word Sizes**
  - **G.711 alaw**: 8-bit word size
  - **G.711 ulaw**: 8-bit word size
  - **Speex**: dynamic, variable word size
  - **iLBC**: class-based bit distribution

- **Throughput**
  - **G.711 (ulaw/alaw)**
    - 160-byte RTP payload
    - 8-bit sample word size
    - Utilizing 1 bit per sample word
    - 8 words needed per byte of message data
    - ~50 packets/sec unidirectional
    - (160/8)*50 == 1,000 bytes/sec

## Problems and Challenges
- **Unreliable Transport**
  - **Problems**
    - RTP uses UDP as its transport protocol
    - UDP is connectionless and unreliable
  - **Challenges**
    - Data split across multiple packets may arrive out of order
    - One or more parts of data split across multiple packets may not arrive at all

- **Cover-Medium Size Limitations**
  - **Problems**
    - Individual RTP packets don’t provide much space for embedding message data
    - Different audio Codecs use different audio word sizes
  - **Challenges**
    - Large message data will likely be split across multiple packets and will need to be reassembled

- **Latency**
  - **Problems**
    - RTP is extremely sensitive to network latency and other QoS issues
  - **Challenges**
    - Overall system must not interfere too much with RTP packet routing
    - Use of steganography cannot delay any individual RTP packet for too long

- **RTP Streams**
  - **Problems**
    - RTP employs two separate half-duplex packet streams to achieve full-duplex communication

## Conclusion
- **Future Work**
- **Q&A**

© 2007 Computer Academic Underground