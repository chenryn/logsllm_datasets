The `IOWebSocketChannel.connect` method encounters an issue as described in the following documentation:
https://dart.dev/guides/libraries/futures-error-handling#potential-problem-failing-to-register-error-handlers-early

When attempting to connect using a URL that cannot be resolved (e.g., due to the Wi-Fi being turned off), an exception is thrown. This exception, however, cannot be caught by `channel.stream.handleError(onError)`.

According to the documentation, all exceptions should be catchable via `stream.handleError`, and the channel's stream should emit a `WebSocketChannelException` wrapping the error before closing. The relevant documentation can be found here:
https://api.flutter.dev/flutter/web_socket_channel/io/IOWebSocketChannel/IOWebSocketChannel.connect.html

### Stack Trace
```
flutter: #0      new IOWebSocketChannel._withoutSocket (package:web_socket_channel/io.dart:83:24)
    #1      _invokeErrorHandler (dart:async/async_error.dart:13:29)
    #2      _HandleErrorStream._handleError (dart:async/stream_pipe.dart:286:9)
    #3      _ForwardingStreamSubscription._handleError (dart:async/stream_pipe.dart:168:13)
    #4      _rootRunBinary (dart:async/zone.dart:1144:38)
    #5      _CustomZone.runBinary (dart:async/zone.dart:1037:19)
    #6      _CustomZone.runBinaryGuarded (dart:async/zone.dart:939:7)
    #7      _BufferingStreamSubscription._sendError.sendError (dart:async/stream_impl.dart:355:15)
    #8      _BufferingStreamSubscription._sendError (dart:async/stream_impl.dart:373:16)
    #9      _BufferingStreamSubscription._addError (dart:async/stream_impl.dart:272:7)
    #10     _SyncStreamController._sendError (dart:async/stream_controller.dart:767:19)
    #11     _StreamController._addError (dart:async/stream_controller.dart:647:7)
    #12     _rootRunBinary (dart:async/zone.dart:1144:38)
```

### Flutter Doctor Output
```sh
[✓] Flutter (Channel master, v0.7.1-pre.26, on Mac OS X 10.13.6 17G2208, locale en-GB)
    • Flutter version 0.7.1-pre.26 at /Users/steve/code/flutter
    • Framework revision 510c0eeaff (3 days ago), 2018-08-24 17:19:30 -0700
    • Engine revision 0914926014
    • Dart version 2.1.0-dev.1.0.flutter-ccb16f7282

[✓] Android toolchain - develop for Android devices (Android SDK 28.0.1)
    • Android SDK at /Users/steve/Library/Android/sdk
    • Android NDK location not configured (optional; useful for native profiling support)
    • Platform android-28, build-tools 28.0.1
    • Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1024-b01)
    • All Android licenses accepted.

[✓] iOS toolchain - develop for iOS devices (Xcode 9.4.1)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Xcode 9.4.1, Build version 9F2000
    • ios-deploy 1.9.2
    • CocoaPods version 1.5.3

[✓] Android Studio (version 3.1)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin version 26.0.1
    • Dart plugin version 173.4700
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1024-b01)

[✓] VS Code (version 1.26.1)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 2.17.1

[✓] Connected devices (1 available)
    • iPhone X • 1E0393AA-EF50-42AA-A244-3279599BE2C1 • ios • iOS 11.4 (simulator)

• No issues found!
```

### Summary
The `IOWebSocketChannel.connect` method does not properly handle errors when the connection fails, such as when the Wi-Fi is turned off. This results in uncatchable exceptions, which contradicts the expected behavior as documented.