### NOT (~) Operator
- **Page Reference:** 365

### NotImplementedException
- **Page References:** 243, 299, 439

### ContinueWith Method Options
- **NotOnCanceled Option:** 531
- **NotOnFaulted Option:** 531
- **NotOnRanToCompletion Option:** 531
- **OnlyOnCanceled Option:** 531
- **OnlyOnFaulted Option:** 531
- **OnlyOnRanToCompletion Option:** 531

### NuGet Package Manager
- **Page References:** 70, 727

### Null Strings
- **Page Reference:** 376

### Null Values
- **Overview:** 189–190
- **Testing for Nulls:** 190–191
- **Nullable Types:**
  - **Enumerations:** 210
  - **Structures:** 218
- **Properties of Nullable Values:** 192–193
- **Null-Conditional (?) Operator:**
  - **Usage and Overview:** 190–191, 207
- **NullReferenceException:** 190

### NumCircles Field (Circle Class)
- **Page References:** 174–175

### Numeric Values
- **Converting Strings to Numeric Values:** 47
- **Infinite Values:** 49
- **Primitive Data Types:**
  - **Displaying Values:** 41–46
  - **Table of Primitive Data Types:** 40
  - **Specifying Values:** 39–40

### Numerics Namespace
- **Page Reference:** 511

### Object Class
- **Page References:** 199, 270

### Object Initializers
- **Page Reference:** 357

### Object Keyword
- **Page References:** 199, 215

### ObjectComparer Object
- **Page Reference:** 406

### ObjectCount Method
- **Page Reference:** 178

### Object.Finalize Method
- **Page Reference:** 318

### Objects
- **Calling Methods from Objects:** 68
- **CancellationToken:** 551–552, 590
- **CancellationTokenSource:** 590, 610
- **cardsInSuit:** 428
- **Casting Objects:**
  - **InvalidCastException:** 201
  - **is Operator:** 202
  - **as Operator:** 202–203
  - **Quick Reference:** 207
  - **switch Statement:** 203–204
- **Classes vs. Objects:** 161
- **Creating Objects:** 315–316
- **Deconstructing Objects:** 172–173
- **Destroying Objects:** 316
- **Dispatcher:** 571
- **Initializers with Properties:** 356–358, 361
- **Lifetime of Objects:** 319
- **MessageDialog:** 580
- **ObjectComparer:** 406
- **Passing by Reference:** 189
- **speechRecognitionResult:** 691
- **StopWatch:** 534
- **Task:**
  - **Abstracting Tasks:** 545–549
  - **Canceling Tasks:** 551–561, 566
  - **Continuations:** 530–531, 563–564, 565
  - **Identifying CPU Bottlenecks:** 533–545
  - **Creating Tasks:** 529, 564
  - **Exception Handling:** 562–563, 565
  - **Faulted Tasks:** 557, 563–564
  - **Parallelism:** 531–538, 545–551, 565
  - **Running Tasks:** 530, 564
  - **Synchronizing Tasks:** 531
  - **Waiting for Tasks:** 531, 564–565
  - **TaskCreationOptions:** 530
- **ViewModel:**
  - **Adding Commands:** 675–685
  - **Adding/Editing Data:** 731
  - **Creating ViewModel:** 671–675
  - **Error Reporting:** 743–746
  - **MVVM (Model-View-ViewModel) Pattern:** 657–658
  - **UI Updates:** 746–748
- **VoiceCommandActivatedEventArgs:** 691
- **WriteableBitmap:** 532, 582

### obo Prefix
- **Page References:** 364, 378

### on Clause
- **Page Reference:** 491

### OnActivated Method
- **Page References:** 691–692, 697

### OnLaunched Method
- **Page Reference:** 690

### OnNavigatedTo Method
- **Page References:** 694, 699

### OnPropertyChanged Method
- **Page References:** 666–668, 679

### openFileClick Method
- **Page Reference:** 119

### OperationCanceledException
- **Page References:** 559–560, 596

### operator Keyword
- **Page References:** 504, 518

### Operators
- **Arithmetic Operators:**
  - **Applying to int Values:** 49–54
  - **Associativity:** 54–56
  - **Data Types and Operators:** 47–49
  - **Overview:** 47
  - **Precedence:** 54, 59
  - **Prefix and Postfix Forms:** 56–57
- **as Operator:** 202–203, 207
- **Assignment (=) Operator:**
  - **Associativity:** 54–56
  - **Overview:** 39
- **Associativity:** 98–99, 503
- **await Operator:** 555, 564, 572–574, 608
- **Binary Operators:** 504
- **Bitwise Operators:** 365–366
- **Boolean Operators:**
  - **Associativity:** 98–99
  - **Conditional Logical Operators:** 97
  - **Defined:** 96
  - **Equality Operators:** 96
  - **Precedence:** 98–99
  - **Relational Operators:** 96
  - **Short-Circuiting:** 97–98
- **Comparing in Structures and Classes:** 509–510
- **Compound Assignment Operators:**
  - **Associativity:** 116
  - **Delegates and Compound Assignment:** 455
  - **Evaluation:** 507–508
  - **Events and Compound Assignment:** 466, 476
  - **Examples:** 132
  - **Overview:** 115–116
  - **Precedence:** 116
  - **Table of Operators:** 116
- **Constraints:** 504
- **Conversion Operators:**
  - **Built-in Conversions:** 517
  - **Narrowing Conversions:** 517
  - **Overview:** 516–517
  - **User-Defined Conversions:** 518
  - **Widening Conversions:** 517
  - **Writing Conversion Operators:** 519–521, 522
- **Decrement (--):** 56–57, 59, 116, 508–509
- **Dot (.) Operator:** 316
- **Equality (==) Operator:** 96, 99, 112, 510
- **equals Operator:** 490
- **from Operator:** 489, 501
- **group by Operator:** 489, 501
- **Implementing Operators:** 511–516, 522
- **Increment (++) Operator:** 56–57, 59, 116, 508–509
- **is Operator:** 202, 207
- **join Operator:** 490, 502
- **Lambda (=>) Operator:** 425
- **Language Interoperability and Operators:** 507
- **nameof Operator:** 668–669
- **Naming Conventions:** 505
- **NOT (!) Operator:** 96
- **Null-Conditional (?) Operator:** 190–191, 207
- **orderby Operator:** 489, 501
- **Overloading Operators:**
  - **Constraints:** 504
  - **Syntax:** 504–505
- **Pairs of Operators:** 510
- **Precedence:** 98–99, 503
- **Prefix Operators:** 56–57
- **Public Operators:** 505
- **Query Operators:** 489–491
- **Quick Reference:** 59, 522
- **select Operator:** 489, 501
- **Static Operators:** 505
- **Structures and Operators:** 216
- **Symmetric Operators:** 506–507, 519
- **Unary Operators:** 56, 504
- **where Operator:** 489, 501

### Optional Parameters
- **Defining Optional Parameters:** 86, 94
- **Resolving Ambiguities with Optional Parameters:** 87–92
- **When to Use Optional Parameters:** 84–86

### optMethod Method
- **Page References:** 86–88

### OR Operators
- **OR (|) Operator:** 365
- **Logical OR (||) Operator:**
  - **Associativity:** 99
  - **Precedence:** 99
  - **Short-Circuiting:** 97–98
  - **Syntax:** 97

### Order Placed Dialog Box
- **Page Reference:** 458

### OrderBy Method
- **Page References:** 485–486, 501

### orderby Operator
- **Page References:** 489, 501

### OrderByDescending Method
- **Page Reference:** 486

### Ordering Data
- **Page References:** 485–487, 501

### OrdersInMemory Class
- **Page Reference:** 588

### out Keyword
- **Page References:** 194–195, 207, 405, 409

### out Parameters
- **Page References:** 194–195, 207

### OutOfMemoryException
- **Page References:** 198, 238, 533

### Output Window
- **Page Reference:** 12

### OverflowException
- **Page References:** 135, 144–149, 517
- **Checked Expressions:** 146–148
- **Checked Statements:** 145

### Overloading
- **Constructors:** 164–165
- **Methods:** 72–73, 255–256
- **Operators:**
  - **Constraints:** 504
  - **Syntax:** 504–505

### Overpartitioning
- **Page Reference:** 529

### override Keyword
- **Page References:** 275–276, 288, 307, 313

### Override Methods
- **Declaring Override Methods:** 275–276, 288
- **Sealed Override:** 307

### Overriding Operators
- **Equality (==) Operator:** 510
- **Inequality (!=) Operator:** 510
- **Operator Precedence:** 54, 59

### Pack Class
- **Page References:** 242–243, 428

### Package Managers
- **NuGet Package Manager:**
  - **Page References:** 70, 727

### Package.appxmanifest File
- **Page Reference:** 614

### Packages
- **System.ValueType:** 173
- **ValueTuple:** 70

### Pairs of Operators
- **Page Reference:** 510

### Parallel Class
- **Abstracting Classes with Parallel Class:** 545–549
- **ForEach Method:** 546, 565
- **Invoke Method:** 546, 565
- **For Method:** 545–546, 565
- **When to Use Parallel Class:** 549–551

### Parallel LINQ (PLINQ)
- **Overview:** 585
- **Parallelized Query over Simple Collection:** 585–587
- **Parallelized Query that Joins Two Collections:** 587–590
- **Query Cancellation:** 587–590
- **Quick Reference:** 608

### Parallel.For Method
- **Canceling Parallel.For:** 557–558
- **Syntax:** 565
- **When to Use Parallel.For:** 545–546

### Parallel.ForEach Method
- **Page References:** 546, 565

### Parallel.Invoke Method
- **Page Reference:** 546

### Parallelism
- **Identifying CPU Bottlenecks:** 533–545
- **Implementing Parallelism:** 531–538, 565
- **Parallel Class:** 545–551
- **PLINQ (Parallel LINQ):**
  - **Overview:** 585
  - **Parallelized Query over Simple Collection:** 585–587
  - **Parallelized Query that Joins Two Collections:** 587–590
  - **Query Cancellation:** 587–590

### ParallelLoop Project
- **Page Reference:** 549

### ParallelPI Method
- **Page References:** 603–604, 607

### ParallelTest Method
- **Page References:** 592–593

### ParamArray Project
- **Page References:** 260–263, 264–265

### Parameter Arrays
- **Advantages of Parameter Arrays:** 255
- **Declaring Parameter Arrays:** 257–259, 266
- **int Data Type in Parameter Arrays:** 257–258
- **Optional Parameters Compared to Parameter Arrays:** 263–265
- **params object[]:** 259–260
- **Priority of Parameter Arrays:** 259
- **Quick Reference:** 266
- **Sum Method Used with Parameter Arrays:** 260–263

### Parameters (Method)
- **Arrays as Parameters:** 235–236
- **Defining Parameters:** 62
- **Named Arguments:** 94
- **Passing Parameters:** 86–87
- **Resolving Ambiguities with Parameters:** 87–92
- **Optional Parameters:**
  - **Defining Optional Parameters:** 86, 94
  - **Resolving Ambiguities with Optional Parameters:** 87–92
  - **When to Use Optional Parameters:** 84–86
- **out Parameters:**
  - **Page References:** 194–195, 207
- **Parameter Arrays:**
  - **Advantages of Parameter Arrays:** 255
  - **Declaring Parameter Arrays:** 257–259, 266
  - **int Data Type in Parameter Arrays:** 257–258
  - **Optional Parameters Compared to Parameter Arrays:** 263–265
  - **params object[]:** 259–260
  - **Priority of Parameter Arrays:** 259
  - **Quick Reference:** 266
  - **Sum Method Used with Parameter Arrays:** 260–263
- **ref Parameters:**
  - **Creating ref Parameters:** 193–194, 207
  - **Overview:** 193

### Parameters Project
- **Page References:** 195–196, 186–188, 195–196

### params Keyword
- **Page References:** 256, 258, 731

### params object[]
- **Page References:** 259–260

### Parentheses ()
- **in if Statements:** 100
- **in Method Calls:** 62, 66
- **Precedence Override:** 54

### Parse Method
- **Page Reference:** 47

### Partial Classes
- **Page References:** 165–172

### partial Keyword
- **Page Reference:** 166

### PascalCase Naming Scheme
- **Page Reference:** 163

### Pass Class
- **Reference Method:** 188
- **Value Method:** 186–187

### Passing
- **Arrays:** 235–236
- **Named Arguments:** 86–87, 94
- **by Reference:** 189

### Peek Definition Window
- **Page Reference:** 90

### Percent Sign (%)
- **Compound Modulus (%=) Operator:** 116
- **Modulus (%) Operator:** 48

### Performance Explorer
- **Identifying CPU Bottlenecks:** 533–545

### performCalculationDelegate
- **Page References:** 450–451

### Period (.)
- **Dot Notation:** 284
- **Dot Operator:** 316

### Phone Book Project
- **Page References:** 372–378

### PhoneNumber Structure
- **Page References:** 373–375

### PhraseTopic Element (CustomerVoiceCommands.xml)
- **Page References:** 688, 689

### Pi, Calculating
- **with Parallel Tasks:** 603–605
- **with Single Thread:** 600–603

### PI Field (Math Class)
- **Page References:** 160, 175

### PickMultipleFilesAsync Method
- **Page Reference:** 581

### PickSingleFileAsync Method
- **Page Reference:** 581

### Pipe (|)
- **Logical OR (||) Operator:**
  - **Associativity:** 99
  - **Precedence:** 99
  - **Short-Circuiting:** 97–98
  - **Syntax:** 97
- **OR (|) Operator:** 365

### PlayingCard Class
- **Page References:** 241–242, 429–430

### PLINQ (Parallel LINQ)
- **Overview:** 585
- **Parallelized Query over Simple Collection:** 585–587
- **Parallelized Query that Joins Two Collections:** 587–590
- **Query Cancellation:** 587–590
- **Quick Reference:** 608

### PLINQ Project
- **Page References:** 586–587

### plotButton_Click Method
- **Page References:** 533, 545, 554–555, 575–576, 577

### plotXY Method
- **Page Reference:** 535

### Plus Sign (+)
- **Addition (+) Operator:** 47
- **Compound Addition (+=) Operator:** 116, 466, 476
- **Increment (++) Operator:** 56–57, 59, 116, 146, 508–509

### Point Class
- **Declaring Point Class:** 167–171
- **Deconstructor:** 172
- **objectCount Field:** 177–178
- **ObjectCount Method:** 178

### Pointers
- **Function Pointers:** 451
- **Memory Pointers:** 204–206

### pointsList Collection
- **Page Reference:** 605

### Polygon Class
- **Page References:** 358–359

### Polymorphism
- **Virtual Methods and Polymorphism:** 277
- **Windows Runtime Compatibility:** 311–313

### Pop Method
- **Page References:** 411–412

### Populating Arrays
- **Page References:** 231–232

### POST Requests
- **Page Reference:** 733

### PostCustomer Method
- **Page References:** 721, 740, 741

### PostCustomerAsync Method
- **Page Reference:** 740

### PostCustomerWithHttpMessagesAsync Method
- **Page Reference:** 742

### Postfix Form of Operator
- **Page References:** 56–57

### Precedence of Operators
- **Page Reference:** 503
- **Boolean Operators:** 98–99
- **Compound Assignment Operators:** 116
- **Controlling Precedence:** 54, 59
- **Table of Precedence:** 98–99

### Predicates
- **Page References:** 423–425

### Prefix Form of Operator
- **Page References:** 56–57

### Previous Buttons
- **Adding to Forms:** 682–685

### Previous Method
- **Page References:** 680–681

### PreviousCustomer Command
- **Page References:** 679–682

### PreviousCustomer Property (ViewModel)
- **Page References:** 681–682

### Primary Operators
- **Associativity:** 98
- **Precedence:** 98

### Primitive Data Types
- **Displaying Values of Primitive Data Types:** 41–46
- **Table of Primitive Data Types:** 40

### PrimitiveDataTypes Project
- **Page References:** 41–46

### Privacy, Data
- **Page References:** 185–186

### Private Classes
- **Page References:** 162–163

### Private Constructors
- **Page Reference:** 164

### Private Fields
- **Page Reference:** 162

### private Keyword
- **Page References:** 65, 162–163, 278, 313

### ProcessData Method
- **Page Reference:** 235

### Processors, Multicore
- **Page References:** 526–527

### Profiling Reports
- **Page References:** 539–544

### Program Class
- **Page Reference:** 187

### ProgressRing Control
- **Page Reference:** 747

### Projects
- **AuditService:** 459
- **AutomaticProperties:** 358–359
- **BinaryTree:** 392–396, 445–447
- **BinaryTreeTest:** 396–399
- **BuildTree:** 400–402
- **CalculatePI:** 600–603
- **Cards:**
  - **AddCardToHand Method:** 246
  - **Collection Classes:** 427–431
  - **DealCardFromPack Method:** 243
  - **dealClick Method:** 246
  - **IsCardAlreadyDealt Method:** 244
  - **IsSuitEmpty Method:** 243–244
  - **for Loop:** 247–248
  - **Pack Class:** 242–243
  - **PlayingCard Class:** 241–242
  - **randomCardSelector Variable:** 242
  - **ToString Method:** 245
  - **Value Enumeration:** 241
- **CheckoutService:** 461–463
- **Classes:** 166–172
- **ComplexNumbers:** 511–514

This reorganization and formatting should make the content more readable and easier to navigate.