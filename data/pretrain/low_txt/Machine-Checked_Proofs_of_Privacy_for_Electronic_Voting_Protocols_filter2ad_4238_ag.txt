### Production of Machine-Checked Implementations for Voting Protocols

EasyCrypt provides multiple methods for generating machine-checked implementations from machine-checked specifications. The first method involves extracting a specification in the WhyML language, which is suitable for use with many program verifiers. This technique, which then refines the final result into an implementation through manual and verified steps, has been used in the past to obtain security proofs, even in the presence of side-channel adversaries, for RSA-OAEP [5] and MEE-CBC [6]. Although random oracles can be an obstacle to verifying the entire system, hash functions typically constitute a small part of the system, and their security is often not fully established. For example, Almeida et al. [6] exclude symmetric primitives from the refinement proof but include them in the side-channel-freeness check. Currently, these techniques are not scalable for systems as large and complex as Helios.

The second method directly extracts a working OCaml implementation from the EasyCrypt specification. This approach has previously been used to produce relatively efficient implementations of secure and verifiable computation protocols [4]. In our case, because several components are left unspecified or abstract (e.g., the tally process and bulletin board), our specification is insufficient to generate a full working implementation of the voting scheme. However, it would be sufficient to produce a working implementation of a voting client, whether device-based or direct-recording electronic (DRE) based. We do not make any claims about the practical security of this extracted code.

### Conclusion and Future Work

We have developed a machine-checked framework for proving ballot privacy in electronic voting systems. Our framework is sufficiently general to cover hundreds of variants of Helios, including most existing implemented ones.

We reduced ballot privacy to the security of underlying primitives, such as an IND-1-CCA-secure encryption scheme and secure mixnets. ElGamal, together with proofs of knowledge, has been proven secure in [15], but formalizing this proof in EasyCrypt is challenging due to the need for support for rewinding adversaries. Similarly, proving the security of mixnets is difficult, and developing an EasyCrypt framework for mixnets would be an interesting research project.

For future work, we plan to extend our framework to other voting systems, as discussed in the previous section. We also intend to consider other properties such as verifiability, accountability, receipt-freeness, and coercion-resistance. Verifiability seems within reach; it requires formalizing this property, for example, along the lines of [21], and identifying the conditions under which Labelled-MiniVoting preserves verifiability. This should allow us to prove verifiability for many Helios variants. Accountability will require more work, as it is necessary to specify who is responsible for data displayed on the ballot box and the distribution of credentials, and how this is cryptographically enforced. We would first need to enrich Labelled-MiniVoting to account for these additional procedures. Receipt-freeness and coercion-resistance would require even more extensions to Labelled-MiniVoting, as Helios and its variants, and thus the current Labelled-MiniVoting scheme, are not coercion-resistant. Considering these various properties under varying trust assumptions for each party would also be interesting.

### Acknowledgments

The authors thank Gilles Barthe for useful input and discussions, and David Bernhard and David Galindo for their early involvement in this work. Benjamin Grégoire provided valuable support in the development and use of EasyCrypt. We also thank Matt Fredrikson for shepherding the paper to its current form and the anonymous reviewers at IEEE Security & Privacy for their helpful comments. This work has received funding from the Office of Naval Research (grant agreement NO N000141512750) and the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation program (grant agreement No 645865-SPOOC).

### References

[1] Easycrypt code for privacy of Labelled-MiniVoting. https://github.com/catalindragan/minivoting-privacy/tree/master/proof.
[2] B. Adida. Helios: Web-based Open-Audit Voting. In P. C. van Oorschot, editor, USENIX Security’08: 17th USENIX Security Symposium, July 28-August 1, 2008, San Jose, CA, USA, pages 335–348. USENIX Association, 2008. Helios website: heliosvoting.org.
[3] B. Adida, O. de Marneffe, O. Pereira, and J.-J. Quisquater. Electing a University President Using Open-Audit Voting: Analysis of Real-World Use of Helios. USENIX/ACCURATE Electronic Voting Technology (EVT 2009), 2009.
[4] J. B. Almeida, M. Barbosa, G. Barthe, G. Davy, F. Dupressoir, B. Grégoire, and P.-Y. Strub. Verified Implementations for Secure and Verifiable Computation. Cryptology ePrint Archive, Report 2014/456, 2014. http://eprint.iacr.org/2014/456.
[5] J. B. Almeida, M. Barbosa, G. Barthe, and F. Dupressoir. Certified computer-aided cryptography: efficient provably secure machine code from high-level implementations. In 2013 ACM SIGSAC Conference on Computer and Communications Security, CCS’13, Berlin, Germany, November 4-8, 2013, pages 1217–1230, 2013.
[6] J. B. Almeida, M. Barbosa, G. Barthe, and F. Dupressoir. Verifiable side-channel security of cryptographic implementations: constant-time MEE-CBC. In FSE’16: 23rd International Conference on Fast Software Encryption, Mar. 2016. To appear.
[7] G. Barthe, J. M. Crespo, Y. Lakhnech, and B. Schmidt. Mind the Gap: Modular Machine-Checked Proofs of One-Round Key Exchange Protocols. In E. Oswald and M. Fischlin, editors, EUROCRYPT’15: 34th Annual International Conference on the Theory and Applications of Cryptographic Techniques, volume 9057 of LNCS, pages 689–718. Springer, 2015.
[8] G. Barthe, F. Dupressoir, B. Grégoire, C. Kunz, B. Schmidt, and P.-Y. Strub. EasyCrypt: A Tutorial. In A. Aldini, J. Lopez, and F. Martinelli, editors, Foundations of Security Analysis and Design VII, volume 8604 of LNCS, pages 146–166. Springer International Publishing, 2014.
[9] G. Barthe, B. Grégoire, S. Heraud, and S. Zanella-Béguelin. Computer-Aided Security Proofs for the Working Cryptographer. In CRYPTO’11: 31st Annual Cryptology Conference, volume 6841 of LNCS, pages 71–90. Springer, 2011. Best Paper Award.
[10] M. Bellare and G. Neven. Multi-signatures in the plain public-key model and a general forking lemma. In CCS’06: 13th ACM conference on Computer and Communications Security, pages 390–399. ACM, 2006.
[11] N. Benton. Simple Relational Correctness Proofs for Static Analyses and Program Transformations. In POPL ’04: 31st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, page 43. ACM, January 2004.
[12] D. Bernhard. Zero-Knowledge Proofs in Theory and Practice. PhD thesis, University of Bristol, 2014.
[13] D. Bernhard, V. Cortier, D. Galindo, O. Pereira, and B. Warinschi. SoK: A Comprehensive Analysis of Game-Based Ballot Privacy Definitions. In S&P’15: 36th IEEE Symposium on Security and Privacy, pages 499–516. IEEE Computer Society, 2015.
[14] D. Bernhard, V. Cortier, O. Pereira, B. Smyth, and B. Warinschi. Adapting Helios for Provable Ballot Privacy. In ESORICS’11: 16th European Symposium on Research in Computer Security, volume 6879 of LNCS, pages 335–354. Springer, 2011.
[15] D. Bernhard, O. Pereira, and B. Warinschi. How Not to Prove Yourself: Pitfalls of the Fiat-Shamir Heuristic and Applications to Helios. In X. Wang and K. Sako, editors, ASIACRYPT’12: 18th International Conference on the Theory and Application of Cryptology and Information Security, volume 7658 of LNCS, pages 626–643. Springer, 2012.
[16] D. Bernhard and B. Warinschi. Cryptographic Voting - A Gentle Introduction. In A. Aldini, J. Lopez, and F. Martinelli, editors, Foundations of Security Analysis and Design VII - FOSAD 2012/2013 Tutorial Lectures, volume 8604, pages 167–211. Springer, 2014.
[17] B. Blanchet. An Automatic Security Protocol Verifier based on Resolution Theorem Proving (invited tutorial). In 20th International Conference on Automated Deduction (CADE-20), Tallinn, Estonia, July 2005.
[18] D. Chaum and T. P. Pedersen. Wallet Databases with Observers. In E. F. Brickell, editor, CRYPTO’92: 12th Annual International Cryptology Conference, Santa Barbara, California, USA, August 16-20, 1992, volume 740 of LNCS, pages 89–105, 1992.
[19] D. L. Chaum. Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms. Commun. ACM, 24(2):84–90, Feb. 1981.
[20] V. Cortier, F. Eigner, S. Kremer, M. Maffei, and C. Wiedling. Type-Based Verification of Electronic Voting Protocols. In POST’15: 4th Conference on Principles of Security and Trust, volume 9036 of LNCS, pages 303–323, London, UK, April 2015. Springer.
[21] V. Cortier, D. Galindo, S. Glondu, and M. Izabachène. Election Verifiability for Helios under Weaker Trust Assumptions. In M. Kutylowski and J. Vaidya, editors, Computer Security - ESORICS 2014 - 19th European Symposium on Research in Computer Security, Wroclaw, Poland, September 7-11, 2014. Proceedings, Part II, volume 8713 of LNCS, pages 327–344. Springer, 2014.
[22] V. Cortier, D. Galindo, R. Küsters, J. Müller, and T. Truderung. SoK: Verifiability Notions for E-Voting Protocols. In S&P’16: 37th IEEE Symposium on Security and Privacy, San Jose, CA, USA, May 2016. IEEE Computer Society Press.
[23] V. Cortier and B. Smyth. Attacking and Fixing Helios: An Analysis of Ballot Secrecy. In CSF’11: 24th IEEE Computer Security Foundations Symposium, pages 297–311. IEEE Computer Society, 2011.
[24] V. Cortier and B. Smyth. Attacking and fixing Helios: An analysis of ballot secrecy. Journal of Computer Security, 21(1):89–148, 2013.
[25] V. Cortier and C. Wiedling. A formal analysis of the Norwegian E-voting protocol. In POST’12: 1st International Conference on Principles of Security and Trust, volume 7215 of Lecture Notes in Computer Science, pages 109–128, Tallinn, Estonia, Mar. 2012. Springer.
[26] R. Cramer, R. Gennaro, and B. Schoenmakers. A Secure and Optimally Efficient Multi-Authority Election Scheme. In Advances in Cryptology (EUROCRYPT’97), pages 103–118, 1997.
[27] S. Delaune, S. Kremer, and M. Ryan. Verifying privacy-type properties of electronic voting protocols. Journal of Computer Security, 17(4):435–487, 2009.
[28] D. Fiore and A. Nitulescu. On the (In)Security of SNARKs in the Presence of Oracles. In TCC’2016: 14th International Conference on the Theory of Cryptography, volume 9985 of LNCS, pages 108–138, Berlin, Heidelberg, 2016. Springer Berlin Heidelberg.
[29] T. E. Gamal. A public key cryptosystem and a signature scheme based on discrete logarithms. IEEE Trans. Information Theory, 31(4):469–472, 1985.
[30] M. Jakobsson, A. Juels, and R. L. Rivest. Making Mix Nets Robust for Electronic Voting by Randomized Partial Checking. In USENIX Security’02: 11th USENIX Security Symposium, pages 339–353, Berkeley, CA, USA, 2002. USENIX Association.
[31] A. Juels, D. Catalano, and M. Jakobsson. Coercion-Resistant Electronic Elections. In Towards Trustworthy Elections, pages 37–63, 2010.
[32] S. Khazaei, T. Moran, and D. Wikström. A Mix-Net from Any CCA2 Secure Cryptosystem. In ASIACRYPT’12: 18th International Conference on the Theory and Application of Cryptology and Information Security, volume 7658 of LNCS, pages 607–625, 2012.
[33] R. Küsters and T. Truderung. Security Analysis of Re-Encryption RPC Mix Nets. In EuroS&P’16: 1st IEEE European Symposium on Security and Privacy, pages 227–242. IEEE, 2016.
[34] R. Küsters, T. Truderung, and A. Vogt. Accountability: Definition and Relationship to Verifiability. In CCS’10: 17th ACM Conference on Computer and Communications Security, pages 526–535. ACM Press, 2010.
[35] C. H. Lim and P. J. Lee. Another Method for Attaining Security Against Adaptively Chosen Ciphertext Attacks. In Crypto ’93: Advances in Cryptology, volume 773 of LNCS, pages 420–434. Springer Verlag, 1993.
[36] C. A. Neff. A Verifiable Secret Shuffle and Its Application to e-Voting. In CCS’01: 8th ACM Conference on Computer and Communications Security, CCS ’01, pages 116–125, New York, NY, USA, 2001. ACM.
[37] C. Park, K. Itoh, and K. Kurosawa. Efficient Anonymous Channel and All/Nothing Election Scheme. In EUROCRYPT’93: Workshop on the Theory and Application of Cryptographic Techniques, pages 248–259, Berlin, Heidelberg, 1994. Springer Berlin Heidelberg.
[38] V. Shoup. A Proposal for an ISO Standard for Public Key Encryption (version 2.0), 2001.
[39] V. Shoup and R. Gennaro. Securing Threshold Cryptosystems against Chosen Ciphertext Attack. In Journal of Cryptology, pages 1–16. Springer-Verlag, 1999.
[40] D. Springall, T. Finkenauer, Z. Durumeric, J. Kitcat, H. Hursti, M. MacAlpine, and J. A. Halderman. Security Analysis of the Estonian Internet Voting System. In CCS’14: 21st ACM Conference on Computer and Communications Security, Scottsdale, AZ, USA, 2014.
[41] D. Wikström. A Universally Composable Mix-Net. In TCC’04: 1st Theory of Cryptography Conference, volume 2951 of LNCS, pages 317–335. Springer, 2004.
[42] S. Wolchok, E. Wustrow, D. Isabel, and A. Halderman. Attacking the Washington, D.C. Internet Voting System. In Financial Cryptography 2012, pages 114–128, 2012.