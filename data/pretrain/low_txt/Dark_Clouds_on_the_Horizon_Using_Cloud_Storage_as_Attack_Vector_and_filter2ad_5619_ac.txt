### Long-Term Undelete

With a free account, users can revert file modifications or recover deleted files through the web interface for up to 30 days. For "Pro" accounts, which offer additional storage and features for a fee, undelete functionality is available for all files, regardless of the time elapsed since deletion. On October 7, 2010, we uploaded 55 files: 30 in a shared folder with another Dropbox account and 25 in an unshared folder. Until Dropbox resolved the HTTPS download vulnerability at the end of April 2011, all 55 files were consistently available. More than six months after uploading, every file remained retrievable without exception.

### Online Slack Space

On January 7, 2011, we uploaded 30 files of various sizes using the HTTPS method, without linking them to any Dropbox account. Over four weeks later, all files were still accessible. After Dropbox fixed the HTTPS download attack in late April 2011, only 50% of the files remained available. For more details, see Figure 4.

### 5.3 Discussion

We found it surprising that from every .torrent file, either the .torrent file itself, its content, or both could be retrieved from Dropbox, especially considering that some .torrent files were created just hours before retrieval. The 97% success rate suggests that Dropbox is extensively used for storing files from file-sharing networks. Additionally, some .torrent files contained more data than the 2 gigabytes offered by the free Dropbox account, with 11 out of 107 .torrents exceeding 2 gigabytes, the largest being 7.2 gigabytes. This indicates that the users either have a Pro account or have invited many friends to gain extra storage through Dropbox's referral program.

However, our findings are limited to inferring the existence of these files. Our approach does not quantify the extent to which Dropbox is used for file-sharing among multiple users. We can only conclude that within the last three to six months, at least one BitTorrent user saved their downloads in Dropbox. We cannot determine whether these files are stored in shared folders or if they are used by a single person or thousands of users. It is equally likely that a single individual uses Dropbox to store these files.

Our experiments on online slack space demonstrated that it is easy to hide data on Dropbox with minimal accountability. It becomes trivial to access advanced features like unlimited undelete and versioning without incurring costs. A malicious user can upload files without linking them to their account, potentially gaining unlimited storage. This can cause significant problems in standard forensic examinations. In an advanced setup, an examiner might encounter a computer booting from read-only media (e.g., a Linux live CD) and saving all files in online slack space, leaving no local traces or evidence. This is similar to using the private mode in modern browsers, which do not save information locally [8].

### 6. Keeping the Cloud Secure

To maintain trust in cloud storage providers, it is essential to ensure that the provider not only keeps files secure but also prevents client-side attacks. We recommend generic security measures for all storage providers to prevent such attacks and propose changes to Dropbox's communication protocol to include pre-calculated data possession proofs.

#### 6.1 Basic Security Primitives

Our attacks apply to all cloud storage services using server-side deduplication. Current implementations rely on simple hashing, but this cannot be trusted. A stronger proof of ownership is needed, which is a new security aspect in cloud computing. To ensure that a client possesses a file, a robust protocol for provable data possession is required, based on cryptography or probabilistic proofs. This can be achieved using recent algorithms such as [11], where the cloud storage operator challenges the client to prove data possession, thus avoiding costly retransmission. SSL should be used for all communications, which was not always the case in our observations.

#### 6.2 Secure Dropbox

To address the security issues in Dropbox, we propose several steps:

1. **Data Possession Protocol**: Implement a secure protocol to prevent clients from accessing files solely by knowing the hash value.
2. **No Unlinked Chunks**: Disallow uploading chunks without linking them to a user's account to prevent unlimited storage and online slack space.
3. **Host ID Activity Check**: Monitor host ID activity to ensure that only authorized IP addresses can download files.
4. **Dynamic Host ID**: Use dynamic and changeable host IDs to reduce the window of opportunity for attackers.
5. **Enforcement of Data Ownership**: Track which files are in which Dropboxes to detect unauthorized access.

These measures can be implemented as database lookups, and the performance impact is expected to be minimal. Table 6 summarizes the necessary steps to prevent our identified attacks.

### 7. Conclusion

In this paper, we presented specific attacks on cloud storage operators, demonstrating their feasibility on Dropbox. We showed that Dropbox is heavily used for storing data from The Pirate Bay, a popular BitTorrent site. We also defined and evaluated online slack space, showing its potential for hiding files. These vulnerabilities are not unique to Dropbox, as the underlying communication protocol is common among cloud storage providers. The discussed countermeasures, particularly the data possession proof, should be adopted by all cloud storage operators.

### Acknowledgements

We thank Arash Ferdowsi and Lorcan Morgan for their helpful comments and the reviewers for their feedback. This work was supported by the Austrian Research Promotion Agency under grants 825747 and 820854.

### References

[1] Amazon.com, Amazon Web Services (AWS). Online at http://aws.amazon.com.

[2] At Dropbox, Over 100 Billion Files Served–And Counting, Online at http://gigaom.com/2011/05/23/at-dropbox-over-100-billion-files-served-and-counting/, retrieved May 23rd, 2011.

[3] Dropbox Users Save 1 Million Files Every 10 Minutes, Online at http://mashable.com/2011/05/23/dropbox-stats/, retrieved May 24th, 2011.

[4] Grab the pitchforks!... again, retrieved April 19th, 2011. Online at http://benlog.com/articles/2011/04/19/grab-the-pitchforks-again/.

[5] How Dropbox sacrifices user privacy for cost savings, Online at http://paranoia.dubfire.net/2011/04/how-dropbox-sacrifices-user-privacy-for.html, retrieved April 12th, 2011.

[6] NCrypto Homepage, Online at http://ncrypto.sourceforge.net/, retrieved June 1st, 2011.

[7] Piratebay top 100. Online at http://thepiratebay.org/top/all.

[8] AGGARWAL, G., BURSZTEIN, E., JACKSON, C., AND BONEH, D. An analysis of private browsing modes in modern browsers. In Proceedings of the 19th USENIX conference on Security (2010), USENIX Security'10.

[9] ARMBRUST, M., FOX, A., GRIFFITH, R., JOSEPH, A. D., KATZ, R., KONWINSKI, A., LEE, G., PATTERSON, D., RABKIN, A., STOICA, I., AND ZAHARIA, M. A view of cloud computing. Communications of the ACM 53, 4 (2010), 50–58.

[10] ATENIESE, G., BURNS, R., CURTMOLA, R., HERRING, J., KHAN, O., KISSNER, L., PETERSON, Z., AND SONG, D. Remote data checking using provable data possession. ACM Transactions on Information and System Security (TISSEC) 14, 1 (2011), 12.

[11] ATENIESE, G., BURNS, R., CURTMOLA, R., HERRING, J., KISSNER, L., PETERSON, Z., AND SONG, D. Provable data possession at untrusted stores. In Proceedings of the 14th ACM conference on Computer and communications security (2007), CCS '07, ACM, pp. 598–609.

[12] ATENIESE, G., DI PIETRO, R., MANCINI, L., AND TSUDIK, G. Scalable and Efficient Provable Data Possession. In Proceedings of the 4th international conference on Security and privacy in communication networks (2008), ACM, pp. 1–10.

[13] BOWERS, K., JUELS, A., AND OPREA, A. HAIL: A high-availability and integrity layer for cloud storage. In Proceedings of the 16th ACM conference on Computer and communications security (2009), ACM, pp. 187–198.

[14] BOWERS, K., JUELS, A., AND OPREA, A. Proofs of retrievability: Theory and implementation. In Proceedings of the 2009 ACM workshop on Cloud computing security (2009), ACM, pp. 43–54.

[15] BREZINSKI, D., AND KILLALEA, T. Guidelines for Evidence Collection and Archiving (RFC 3227). Network Working Group, The Internet Engineering Task Force (2002).

[16] CABUK, S., BRODLEY, C. E., AND SHIELDS, C. IP covert timing channels: design and detection. In Proceedings of the 11th ACM conference on Computer and communications security (2004), CCS '04, pp. 178–187.

[17] CHOW, R., GOLLE, P., JAKOBSSON, M., SHI, E., STADDON, J., MASUOKA, R., AND MOLINA, J. Controlling data in the cloud: outsourcing computation without outsourcing control. In Proceedings of the 2009 ACM workshop on Cloud computing security (2009), ACM, pp. 85–90.

[18] COX, M., ENGELSCHALL, R., HENSON, S., LAURIE, B., YOUNG, E., AND HUDSON, T. OpenSSL, 2001.

[19] EASTLAKE, D., AND HANSEN, T. US Secure Hash Algorithms (SHA and HMAC-SHA). Tech. rep., RFC 4634, July 2006.

[20] ERWAY, C., KÜPCÜ, A., PAPAMANTHOU, C., AND TAMASSIA, R. Dynamic Provable Data Possession. In Proceedings of the 16th ACM conference on Computer and communications security (2009), ACM, pp. 213–222.

[21] GARFINKEL, S., AND SHELAT, A. Remembrance of data passed: A study of disk sanitization practices. Security & Privacy, IEEE 1, 1 (2003), 17–27.

[22] GOLAND, Y., WHITEHEAD, E., FAIZI, A., CARTER, S., AND JENSEN, D. HTTP Extensions for Distributed Authoring–WEBDAV. Microsoft, UC Irvine, Netscape, Novell. Internet Proposed Standard Request for Comments (RFC) 2518 (1999).

[23] GROLIMUND, D., MEISSER, L., SCHMID, S., AND WATTENHOFER, R. Cryptree: A folder tree structure for cryptographic file systems. In Reliable Distributed Systems, 2006. SRDS'06. 25th IEEE Symposium on (2006), IEEE, pp. 189–198.

[24] HARNIK, D., PINKAS, B., AND SHULMAN-PELEG, A. Side channels in cloud services: Deduplication in cloud storage. Security & Privacy, IEEE 8, 6 (2010), 40–47.

[25] JUELS, A., AND KALISKI JR, B. PORs: Proofs of retrievability for large files. In Proceedings of the 14th ACM conference on Computer and communications security (2007), ACM, pp. 584–597.

[26] KRISTOL, D. HTTP Cookies: Standards, privacy, and politics. ACM Transactions on Internet Technology (TOIT) 1, 2 (2001), 151–198.

[27] PIATEK, M., KOHNO, T., AND KRISHNAMURTHY, A. Challenges and directions for monitoring P2P file sharing networks—or: why my printer received a DMCA takedown notice. In Proceedings of the 3rd conference on Hot topics in security (2008), USENIX Association, p. 12.

[28] POSTEL, J., AND REYNOLDS, J. RFC 959: File transfer protocol. Network Working Group (1985).

[29] SCHWARZ, T., AND MILLER, E. Store, forget, and check: Using algebraic signatures to check remotely administered storage. In Distributed Computing Systems, 2006. ICDCS 2006. 26th IEEE International Conference on (2006), IEEE, p. 12.

[30] SUBASHINI, S., AND KAVITHA, V. A survey on security issues in service delivery models of cloud computing. Journal of Network and Computer Applications (2010).

[31] WANG, C., WANG, Q., REN, K., AND LOU, W. Ensuring data storage security in cloud computing. In Quality of Service, 2009. IWQoS. 17th International Workshop on (2009), Ieee, pp. 1–9.

[32] WANG, Q., WANG, C., LI, J., REN, K., AND LOU, W. Enabling public verifiability and data dynamics for storage security in cloud computing. Computer Security–ESORICS 2009 (2010), 355–370.