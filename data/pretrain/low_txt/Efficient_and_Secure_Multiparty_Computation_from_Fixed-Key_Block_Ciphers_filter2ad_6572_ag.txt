### REFERENCES

1. G. Asharov, Y. Lindell, T. Schneider, and M. Zohner, “More efficient oblivious transfer and extensions for faster secure computation,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2013, pp. 535–548.

2. ——, “More efficient oblivious transfer extensions with security for malicious adversaries,” in *Advances in Cryptology—Eurocrypt 2015, Part I*, ser. LNCS, vol. 9056. Springer, 2015, pp. 673–701.

3. Bar Ilan Cryptography Research Group, “libscapi: The Secure Computation API,” 2016.

4. D. Beaver, “Correlated pseudorandomness and the complexity of private computations,” in *28th Annual ACM Symposium on Theory of Computing (STOC)*. ACM Press, 1996, pp. 479–488.

5. M. Bellare, V. T. Hoang, S. Keelveedhi, and P. Rogaway, “Efficient garbling from a fixed-key blockcipher,” in *IEEE Symposium on Security and Privacy*, 2013, pp. 478–492.

6. S. Bhattacharya and M. Nandi, “Full indifferentiable security of the XOR of two or more random permutations using the χ² method,” in *Advances in Cryptology—Eurocrypt 2018, Part I*, ser. LNCS. Springer, 2018, pp. 387–412.

7. A. Biryukov and D. Wagner, “Advanced slide attacks,” in *Advances in Cryptology—Eurocrypt 2000*, ser. LNCS, vol. 1807. Springer, 2000, pp. 589–606.

8. J. Black, M. Cochran, and T. Shrimpton, “On the impossibility of highly-efficient blockcipher-based hash functions,” *Journal of Cryptology*, vol. 22, no. 3, pp. 311–329, 2009.

9. D. Bogdanov, L. Kamm, B. Kubo, R. Rebane, V. Sokk, and R. Talviste, “Students and taxes: A privacy-preserving study using secure computation,” *Proceedings on Privacy Enhancing Technologies*, no. 3, pp. 117–135, 2016.

10. P. Bogetoft, D. L. Christensen, I. Damgård, M. Geisler, T. Jakobsen, M. Krøigaard, J. D. Nielsen, J. B. Nielsen, K. Nielsen, J. Pagter, M. I. Schwartzbach, and T. Toft, “Secure multiparty computation goes live,” in *Financial Cryptography and Data Security (FC)*, ser. LNCS. Springer, 2009, pp. 325–343.

11. E. Boyle, N. Gilboa, and Y. Ishai, “Function secret sharing,” in *Advances in Cryptology—Eurocrypt 2015, Part II*, ser. LNCS, vol. 9057. Springer, 2015, pp. 337–367.

12. S. Chen, R. Lampe, J. Lee, Y. Seurin, and J. P. Steinberger, “Minimizing the two-round Even-Mansour cipher,” in *Advances in Cryptology—Crypto 2014, Part I*, ser. LNCS, vol. 8616. Springer, 2014, pp. 39–56.

13. S. Chen and J. P. Steinberger, “Tight security bounds for key-alternating ciphers,” in *Advances in Cryptology—Eurocrypt 2014*, ser. LNCS, vol. 8441. Springer, 2014, pp. 327–350.

14. S. G. Choi, J. Katz, R. Kumaresan, and H.-S. Zhou, “On the security of the ‘free-XOR’ technique,” in *Theory of Cryptography Conference 2012*, ser. LNCS, vol. 7194. Springer, 2012, pp. 39–53.

15. H. Corrigan-Gibbs, D. Boneh, and D. Mazières, “Riposte: An anonymous messaging system handling millions of users,” in *IEEE Symposium on Security and Privacy*, 2015, pp. 321–338.

16. W. Dai, V. T. Hoang, and S. Tessaro, “Information-theoretic indistinguishability via the chi-squared method,” in *Advances in Cryptology—Crypto 2017, Part III*, ser. LNCS. Springer, 2017, pp. 497–523.

17. D. Demmler, T. Schneider, and M. Zohner, “ABY—A framework for efficient mixed-protocol secure two-party computation,” in *Network and Distributed System Security Symposium*, 2015.

18. Y. Dodis, L. Reyzin, R. L. Rivest, and E. Shen, “Indifferentiability of permutation-based compression functions and tree-based modes of operation, with applications to MD6,” in *Fast Software Encryption (FSE) 2009*, ser. LNCS. Springer, 2009, pp. 104–121.

19. J. Doerner and A. Shelat, “Scaling ORAM for secure computation,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2017, pp. 523–535.

20. X. Fan, C. Ganesh, and V. Kolesnikov, “Hashing garbled circuits for free,” in *Advances in Cryptology—Eurocrypt 2017, Part III*, ser. LNCS. Springer, 2017, pp. 456–485.

21. A. Faz-Hernández, J. López, and A. K. D. S. de Oliveira, “SoK: A performance evaluation of cryptographic instruction sets on modern architectures,” in *Proceedings of the 5th ACM ASIA Public-Key Cryptography Workshop*. ACM, 2018, pp. 9–18.

22. T. K. Frederiksen, T. P. Jakobsen, J. B. Nielsen, and R. Trifiletti, “TinyLEGO: An interactive garbling scheme for maliciously secure two-party computation,” *Cryptology ePrint Archive*, Report 2015/309, 2015, http://eprint.iacr.org/2015/309.

23. O. Goldreich, S. Goldwasser, and S. Micali, “How to construct random functions,” *Journal of the ACM*, vol. 33, no. 4, pp. 792–807, Oct. 1986.

24. O. Goldreich, S. Micali, and A. Wigderson, “How to play any mental game or A completeness theorem for protocols with honest majority,” in *19th Annual ACM Symposium on Theory of Computing (STOC)*. ACM Press, 1987, pp. 218–229.

25. S. Gueron, Y. Lindell, A. Nof, and B. Pinkas, “Fast garbling of circuits under standard assumptions,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2015, pp. 567–578.

26. M. Hastings, B. Hemenway, D. Noble, and S. Zdancewic, “SoK: General purpose compilers for secure multi-party computation,” in *IEEE Symposium on Security and Privacy*, 2019.

27. B. Hemenway, S. Lu, R. Ostrovsky, and W. Welser IV, “High-precision secure computation of satellite collision probabilities,” in *International Conference on Security and Cryptography for Networks (SCN)*, ser. LNCS. Springer, 2016, pp. 169–187.

28. Y. Ishai, J. Kilian, K. Nissim, and E. Petrank, “Extending oblivious transfers efficiently,” in *Advances in Cryptology—Crypto 2003*, ser. LNCS, vol. 2729. Springer, 2003, pp. 145–161.

29. M. Keller, E. Orsini, and P. Scholl, “Actively secure OT extension with optimal overhead,” in *Advances in Cryptology—Crypto 2015, Part I*, ser. LNCS, vol. 9215. Springer, 2015, pp. 724–741.

30. ——, “MASCOT: Faster malicious arithmetic secure computation with oblivious transfer,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2016, pp. 830–842.

31. V. Kolesnikov and T. Schneider, “Improved garbled circuit: Free XOR gates and applications,” in *International Colloquium on Automata, Languages, and Programming (ICALP)*, ser. LNCS. Springer, 2008, pp. 486–498.

32. A. Lapets, F. Jansen, K. D. Albab, R. Issa, L. Qin, M. Varia, and A. Bestavros, “Accessible privacy-preserving web-based data analysis for assessing and addressing economic inequalities,” in *Proceedings of the 1st ACM SIGCAS Conference on Computing and Sustainable Societies*. ACM, 2018, pp. 48:1–48:5.

33. J. Lee, “Indifferentiability of the sum of random permutations toward optimal security,” *IEEE Transactions on Information Theory*, vol. 63, no. 6, pp. 4050–4054, 2017.

34. M. Liskov, R. L. Rivest, and D. Wagner, “Tweakable block ciphers,” *Journal of Cryptology*, vol. 24, no. 3, pp. 588–613, Jul. 2011.

35. S. Lucks, “The sum of PRPs is a secure PRF,” in *Advances in Cryptology—Eurocrypt 2000*, ser. LNCS, vol. 1807. Springer, 2000, pp. 470–484.

36. A. Luykx, B. Mennink, B. Preneel, and L. Winnen, “Two-permutation-based hashing with binary mixing,” *Journal of Mathematical Cryptology*, pp. 139–150, 2015.

37. A. Mandal, J. Patarin, and V. Nachef, “Indifferentiability beyond the birthday bound for the XOR of two public random permutations,” in *Progress in Cryptology—Indocrypt 2010*, ser. LNCS. Springer, 2010, pp. 69–81.

38. U. M. Maurer, R. Renner, and C. Holenstein, “Indifferentiability, impossibility results on reductions, and applications to the random oracle methodology,” in *Theory of Cryptography Conference*, ser. LNCS, vol. 2951. Springer, 2004, pp. 21–39.

39. B. Mennink and B. Preneel, “On the XOR of multiple random permutations,” in *International Conference on Applied Cryptography and Network Security (ACNS)*, ser. LNCS. Springer, 2015, pp. 619–634.

40. P. Mohassel and Y. Zhang, “SecureML: A system for scalable privacy-preserving machine learning,” in *IEEE Symposium on Security and Privacy*, 2017, pp. 19–38.

41. J. B. Nielsen, T. Schneider, and R. Trifiletti, “Constant round maliciously secure 2PC with function-independent preprocessing using LEGO,” in *Network and Distributed System Security Symposium*, 2017.

42. J. Patarin, “The ‘coefficients H’ technique (invited talk),” in *Annual International Workshop on Selected Areas in Cryptography (SAC)*, ser. LNCS. Springer, 2009, pp. 328–345.

43. M. O. Rabin, “How to exchange secrets with oblivious transfer,” *Cryptology ePrint Archive*, Report 2005/187, Aiken Computation Lab, Harvard University, Tech. Rep. TR-81, 1981, available at http://eprint.iacr.org/2005/187.

44. P. Rindal, “libOTe: Oblivious Transfer Library,” an efficient, portable, and easy-to-use library. https://github.com/osu-crypto/libOTe, 41c55052627081363364370ba7f7893b3c413951.

45. Unbound Tech, “Protecting seed secrets and cryptographic keys with multi-party computation.” https://github.com/unbound-tech/blockchain-crypto-mpc, 94d5b83dc83e920a668d6e737c0a720c3abca7dc, 2018.

46. University of Bristol, “Apricot: Advanced implementation of protocols for oblivious transfers.” https://github.com/bristolcrypto/apricot, 3760dda51b0080ee0fb79c7184cbe2c00762c2b8, 2016.

47. ——, “Multiparty computation with SPDZ, MASCOT, and overdrive offline phases (inactive).” https://github.com/bristolcrypto/SPDZ-2, 2016, 721abfae849625a02ea49aabc534f9cf41ca643f.

48. F. Wang, C. Yun, S. Goldwasser, V. Vaikuntanathan, and M. Zaharia, “Splinter: Practical private queries on public data,” in *14th USENIX Symposium on Networked Systems Design and Implementation (NSDI 17)*, 2017, pp. 299–313.

49. X. Wang, A. J. Malozemoff, and J. Katz, “EMP-toolkit: Efficient MultiParty computation toolkit,” https://github.com/emp-toolkit, 2016.

50. X. Wang, S. Ranellucci, and J. Katz, “Authenticated garbling and efficient maliciously secure two-party computation,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2017, pp. 21–37.

51. ——, “Global-scale secure multiparty computation,” in *ACM Conference on Computer and Communications Security (CCS)*. ACM, 2017, pp. 39–56.

52. A. C.-C. Yao, “How to generate and exchange secrets (extended abstract),” in *27th Annual Symposium on Foundations of Computer Science (FOCS)*. IEEE, 1986, pp. 162–167.

53. S. Zahur, M. Rosulek, and D. Evans, “Two halves make a whole—reducing data transfer in garbled circuits using half gates,” in *Advances in Cryptology—Eurocrypt 2015, Part II*, ser. LNCS, vol. 9057. Springer, 2015, pp. 220–250.

54. R. Zhu and Y. Huang, “JIMU: Faster LEGO-based secure computation using additive homomorphic hashes,” in *Advances in Cryptology—Asiacrypt 2017, Part II*, ser. LNCS. Springer, 2017, pp. 529–572.

### APPENDIX A: RANDOM-OT EXTENSION

Random OT is similar to correlated OT except that both "messages" of the sender are chosen uniformly by the ideal functionality; see Figure 6. It also has applications to secure computation [1]. In Figure 7, we show a protocol realizing this functionality in the \( F_{\Delta} \)-ROT-hybrid model, in both the semi-honest and malicious settings.

**Theorem 7.** If \( H \) is cr (resp., tcr) then protocol \( \Pi_{\text{R-OT}} \) securely realizes \( F_{\text{R-OT}} \) for semi-honest (resp., malicious) adversaries in the \( F_{\Delta} \)-ROT-hybrid model.

**Proof.** The proof is very similar to the proof of Theorem 2. As in that case, security for a corrupted \( P_A \) is perfect and easy to show, and we thus focus on a corrupted \( P_B \). We consider the malicious setting; the semi-honest setting follows similarly.

The simulator \( S \) for a malicious \( P_B \) is as follows:

1-2. \( S \) obtains the inputs \( (x_1, \ldots, x_m) \), as well as the values \( \{b_i\}_{i \in [m]} \) that \( A \) sends to \( F_{\Delta} \)-ROT. \( S \) also chooses a uniform \( \Delta \) and answers \( A \)'s global key query (if any) using \( \Delta \).

3. \( S \) sets \( m_{x_i} := H(b_i, i) \) and sends \( (x_1, \ldots, x_m) \) and \( \{m_{x_i}\} \) to \( F_{\text{R-OT}} \).

A proof of indistinguishability follows as in the proof of Theorem 1.

### APPENDIX B: ON DEFINING CORRELATED OT

We provide an explicit attack showing that the protocol for correlated-OT extension by Asharov et al. [2] does not realize their correlated-OT functionality in the malicious setting. A similar attack also works for random-OT extension.

In Figure 8, we show the original correlated-OT functionality as defined by Asharov et al. [2]. Compared to our version of the ideal functionality in Figure 4, this ideal functionality is stronger because it does not allow the adversary to specify the output it receives. In particular, a malicious \( P_B \) is no longer allowed to specify the values \( \{m_{x_i}\} \). Asharov et al. propose a protocol that is the same as ours (cf. Figure 5), and claim that it realizes their correlated-OT functionality. However, we demonstrate an attack that shows this is not the case.

**Functionality \( F_{\text{R-OT}} \)**

Upon receiving (Extend) from \( P_A \) and \( (x_1, \ldots, x_m) \) from \( P_B \) with \( x_i \in \{0, 1\} \) do:
1. For each \( i \in [m] \), sample uniform \( m^0_i, m^1_i \).
2. If \( P_A \) is corrupted, wait for \( A \) to send \( \{(m^0_i, m^1_i)\} \). If \( P_B \) is corrupted, wait for \( A \) to send \( \{m_{x_i}\} \).
3. Send \( \{(m^0_i, m^1_i)\} \) to \( P_A \) and \( \{m_{x_i}\} \) to \( P_B \).

**Figure 6. Functionality \( F_{\text{R-OT}} \)**

**Protocol \( \Pi_{\text{R-OT}} \)**

Inputs: \( P_B \) has \( x_1, \ldots, x_m \) with \( x_i \in \{0, 1\} \).

Protocol:
1. \( P_A \) chooses uniform \( \Delta \) and sends (Init, \( \Delta \)) to \( F_{\Delta} \)-ROT; \( P_B \) sends (Init) to \( F_{\Delta} \)-ROT, which returns \( a_1, \ldots, a_m \) to \( P_A \) and \( b_1, \ldots, b_m \) to \( P_B \).
2. Semi-honest security: For \( i \in [m] \) and \( b \in \{0, 1\} \), \( P_A \) computes \( m_b := H(b_i) \).
   - Malicious security: For \( i \in [m] \) and \( b \in \{0, 1\} \), \( P_A \) computes \( m_b := H(b_i, i) \).
3. \( P_B \) sets \( m_{x_i} := H(a_i \oplus b_{\Delta}) \); \( P_B \) sends \( (x_1, \ldots, x_m) \) and \( \{m_{x_i}\} \) to \( F_{\text{R-OT}} \).

**Figure 7. Protocol \( \Pi_{\text{R-OT}} \)**

**Functionality \( F_{\mathcal{C}-\text{OT}} \)**

Upon receiving \( (\Delta_1, \ldots, \Delta_m) \) from \( P_A \) and \( (x_1, \ldots, x_m) \) from \( P_B \) with \( x_i \in \{0, 1\} \) do:
1. For each \( i \in [m] \), sample uniform \( m^0_i \) and set \( m^1_i := m^0_i \oplus \Delta_i \).
2. Send \( \{(m^0_i, m^1_i)\} \) to \( P_A \) and \( \{m_{x_i}\} \) to \( P_B \).

**Figure 8. The original functionality \( F_{\mathcal{C}-\text{OT}} \) for correlated OT proposed by Asharov et al. [1, 2].**

---

This optimized version ensures clarity, coherence, and professional formatting.