# 优化后的文本

## 摘要
本文介绍了Common Friends服务，这是一个支持安全发现共同好友的框架。该框架保护非共同好友的隐私，并确保好友关系的真实性。我们首先提出了一个通用的构建方法，将寻找好友的问题简化为私有集合交集问题，并通过承载能力确保声称的好友关系的真实性。接下来，我们引入了一个基于Bloom过滤器的高效实例化方法，该方法仅需要常数数量的公钥加密操作。我们还将Common Friends与现有的互联网连接共享应用程序集成在一起，用户可以根据是否存在共同好友来决定是否共享。

## 实验结果
我们在不同的设备模型（三星Galaxy S3）上重复了测试。对于BFPSI和PSI-CA协议，测得的功耗分别为0.12 mAh和0.38 mAh。因此，我们得出结论，在不同设备模型上，BFPSI和PSI-CA之间的功耗比保持不变。

## 讨论
使用BFPSI实现Common Friends显然比使用PSI-CA提供了更好的性能。BFPSI需要较少的计算（常数与线性数量的公钥操作），更低的带宽和功耗。因此，使用BFPSI在Common Friends服务中可以提供更好的用户体验，并支持更频繁的运行。另一方面，如果只想披露共同好友的数量，则需要容忍PSI-CA带来的额外开销。

最后，观察到传统的PSI和PSI-CA协议具有类似的复杂度（例如，它们都需要与集合大小成线性的公钥操作）。因此，我们可以预期，当应用于查找共同好友时，BFPSI相对于传统PSI协议的性能提升将非常接近于其相对于PSI-CA的性能提升。这证实了我们的直觉，即虽然PSI协议设计用于处理低熵输入集，但在查找共同好友的上下文中，我们不需要它们的全部安全性，从而能够显著提高效率。

## 相关工作
随着社交网络影响力的增加，一些技术开始关注用户社交网络资料的安全操作，如匹配共同属性、兴趣和好友。Li等人[39]正式分析了隐私保护个人资料匹配的问题，并提出了一系列利用PSI和/或PSI-CA来安全匹配不同用户属性集的协议。Dong等人[19]将用户的个人资料表示为向量，并通过私有向量点积[31]来衡量社交接近度，而Zhang等人[53]则进一步改进了其细粒度属性。

Zhang等人[52]还提出了一种基于对称密码系统的隐私保护验证配置文件匹配方案，从而提高了效率。该方案依赖于预先确定的有序属性集，并将其作为用户之间的共同秘密。然而，该方案不适用于无序属性集，如随机能力（如我们的情况）。

在VENETA[50]中，Von Arb等人使用PSI进行隐私保护匹配，以支持通过蓝牙进行分散式短信消息传递。VENETA没有解决恶意用户声称不存在友谊的问题，只建议将输入集的大小限制在300以内。Huang等人[28]展示了一个Android应用程序，该程序使用混淆电路并让用户私下找到他们地址簿中的共同条目。除了存在与VENETA相同的潜在攻击风险外，[28]报告的时间值为匹配128个联系人需要150秒，这引发了对其实际可行性的担忧。尽管Carter等人[12]最近提出了基于专门的安全函数评估协议的更快原型实现。

De Cristofaro等人[16]提出了一种用于私人发现共同社交联系人的框架。在他们的方案中，用户需要提供先前关系的证明（特别是加密证书）来声明某个友谊。共同好友是通过类似于秘密握手[6, 40]的技术私下发现的，其中证书的有效性被验证以保证隐私并强制真实性。然而，与依赖承载能力和BFPSI的解决方案相比，该方案需要更高的计算开销。具体来说，[16]需要与朋友数量成线性的昂贵模幂运算（以及二次模乘法），并且通信开销类似于传统的PSI技术。

我们的前期工作[5]提出了一个资源共享框架（例如，互联网连接），用户基于他们在特定社交网络中是否是好友或至少有一些共同好友来执行访问控制。在[5]中，我们提到了使用社交网络应用程序交换承载能力作为友谊关系证明的可能性，并将这些承载能力与现有的PSI方案一起使用以确定共同好友。相比之下，除了实际构建和实现一个安全发现共同好友的框架外，本工作表明，设计用于处理低熵集合项的传统PSI技术实际上是“过度杀伤”。更高效的解决方案，如第2.4节中介绍的基于Bloom过滤器的方法，可以显著降低通信复杂度，并消除对线性数量公钥操作的需求。此外，我们还展示了Common Friends框架的设计，旨在使开发人员能够将其集成到应用程序中，并用它来支持基于社交接近度的信任和访问控制决策。我们通过实验评估验证了所提技术的实用性，结果显示使用BFPSI比设计用于低熵项目的传统PSI协议具有显著的性能提升。我们还将Common Friends服务集成到[5]中描述的共享连接应用程序中，该应用程序支持共享连接，并展示了完整的实现。

Bloom过滤器已在其他安全协议场景中得到应用。例如，Bellovin和Cheswick[9]提出了基于加密Bloom过滤器的隐私保护信息匹配，用于隐私保护数据库搜索。Kerschbaum[36]将其应用于供应链完整性保护，并减轻工业间谍的风险。Eppstein和Goodrich[20]提出了隐私增强可逆Bloom过滤器，用于安全比较压缩DNA序列。显然，这些技术都没有将Bloom过滤器用于安全发现共同好友和/或高效、隐私保护的高熵项目交集。

最后，一些技术[30, 22, 25, 34, 21]通过引入假设（如可信硬件令牌的存在）来改进PSI的性能。这些令牌可能需要双方信任[30, 22, 25]，或者只需要一方信任[34]，甚至可能是不受信任的[21]。尽管这些协议很高效，但它们需要移交硬件令牌，因此在诸如陌生人设备之间查找共同好友等场景中不适用。

## 结论
本文介绍了Common Friends服务，这是一个支持安全发现共同好友的框架，保护非共同好友的隐私并确保好友关系的真实性。我们首先提出了一个通用的构建方法，将寻找好友的问题简化为私有集合交集问题，并通过承载能力确保声称的好友关系的真实性。接下来，我们引入了一个基于Bloom过滤器的高效实例化方法，该方法仅需要常数数量的公钥加密操作。我们还将Common Friends与现有的互联网连接共享应用程序集成在一起，用户可以根据是否存在共同好友来决定是否共享。全面的实验评估证实了所提技术的实用性。

本文所述协议允许用户检测另一个用户是否在社交图中距离两个跳远。作为未来的工作，我们计划将其推广到检测距离超过两个跳远的好友。我们还打算扩展本文提出的基础设施，以检测两个用户之间的其他共同属性，如共同兴趣和群组成员资格，并探索使用社交接近度支持其他访问控制决策（例如，拼车/乘车共享、路由、临时在线约会或多媒体内容分发）。最后，是否可以设计出一种高效的基于Bloom过滤器的PSI-CA变体来处理高熵项目仍然是一个开放的问题。

## 致谢
我们感谢Elena Reshetova为原始共享应用程序[5]的实现做出的贡献，感谢Thomas Schneider在使用承载能力与PSI协议方面的合作，以及Mark Manulis和Bertram Poettering的富有成果的合作。Marcin Nagy的工作得到了欧盟第七框架计划SCAMPI项目（资助编号258414）的支持。赫尔辛基大学和阿尔托大学的工作分别得到了诺基亚研究中心的捐赠和谷歌研究奖的部分支持。

## 参考文献
[1] Bandwagon. http://bandwagon.io.
[2] Sidecar—My ride is your ride. http://side.cr/.
[3] Zoosk. http://zoosk.com.
[4] AGRAWAL, R., EVFIMIEVSKI, A., AND SRIKANT, R. Information sharing across private databases. In SIGMOD (2003).
[5] ASOKAN, N., DMITRIENKO, A., NAGY, M., RESHETOVA, E., SADEGHI, A.-R., SCHNEIDER, T., AND STELLE, S. Crowdshare: Secure mobile resource sharing. In ACNS (2013).
[6] BALFANZ, D., DURFEE, G., SHANKAR, N., SMETTERS, D. K., STADDON, J., AND WONG, H.-C. Secret Handshakes from Pairing-Based Key Agreements. In S&P (2003).
[7] BELLARE, M. New proofs for NMAC and HMAC: Security without collision-resistance. In CRYPTO (2006).
[8] BELLARE, M., NAMPREMPRE, C., POINTCHEVAL, D., AND SEMANKO, M. The One-More-RSA-Inversion Problems and the Security of Chaum’s Blind Signature Scheme. Journal of Cryptology 16, 3 (2003).
[9] BELLOVIN, S. M., AND CHESWICK, W. R. Privacy-Enhanced Searches Using Encrypted Bloom Filters. Tech. Rep. CUCS-034-07, Columbia University and AT&T, 2004. https://mice.cs.columbia.edu/getTechreport.php?techreportID=483.
[10] BLOOM, B. H. Space/time trade-offs in hash coding with allowable errors. Communications of the ACM 13, 7 (1970).
[11] CAMENISCH, J., AND ZAVERUCHA, G. Private intersection of certified sets. In Financial Cryptography (2009).
[12] CARTER, H., AMRUTKAR, C., DACOSTA, I., AND TRAYNOR, P. For your phone only: custom protocols for efficient secure function evaluation on mobile devices. Security and Communication Networks (2013).
[13] DANEZIS, G., AND MITTAL, P. Sybilinfer: Detecting Sybil Nodes using Social Networks. In NDSS (2009).
[14] DE CRISTOFARO, E., GASTI, P., AND TSUDIK, G. Fast and Private Computation of Cardinality of Set Intersection and Union. In CANS (2012).
[15] DE CRISTOFARO, E., KIM, J., AND TSUDIK, G. Linear-Complexity Private Set Intersection Protocols Secure in Malicious Model. In ASIACRYPT (2010).
[16] DE CRISTOFARO, E., MANULIS, M., AND POETTERING, B. Private Discovery of Common Social Contacts. In ACNS (2011).
[17] DE CRISTOFARO, E., AND TSUDIK, G. Practical Private Set Intersection Protocols with Linear Complexity. In Financial Cryptography (2010).
[18] DE CRISTOFARO, E., AND TSUDIK, G. Experimenting with Fast Private Set Intersection. In TRUST (2012).
[19] DONG, W., DAVE, V., QIU, L., AND ZHANG, Y. Secure friend discovery in mobile social networks. In INFOCOM (2011).
[20] EPPSTEIN, D., GOODRICH, M. T., AND BALDI, P. Privacy-Enhanced Methods for Comparing Compressed DNA Sequences. http://arxiv.org/abs/1107.3593, 2011.
[21] FISCHLIN, M., PINKAS, B., SADEGHI, A.-R., SCHNEIDER, T., AND VISCONTI, I. Secure Set Intersection with Untrusted Hardware Tokens. In CT-RSA (2011).
[22] FORT, M., FREILING, F. C., PENSO, L. D., BENENSON, Z., AND KESDOGAN, D. TrustedPals: Secure Multiparty Computation Implemented with Smart Cards. In ESORICS (2006).
[23] FREEDMAN, M. J., NISSIM, K., AND PINKAS, B. Efficient Private Matching and Set Intersection. In EUROCRYPT (2004).
[24] HARDT, D. The OAuth 2.0 authorization framework. RFC 6749, RFC Editor, 2012.
[25] HAZAY, C., AND LINDELL, Y. Constructions of truly practical secure protocols using standard smartcards. In CCS (2008).
[26] HAZAY, C., AND LINDELL, Y. Efficient protocols for set intersection and pattern matching with security against malicious and covert adversaries. In TCC (2008).
[27] HOHENBERGER, S., AND WEIS, S. Honest-Verifier Private Disjointness Testing Without Random Oracles. In PETS (2006).
[28] HUANG, Y., CHAPMAN, E., AND EVANS, D. Privacy-preserving applications on smartphones. In HotSec (2011).
[29] HUANG, Y., EVANS, D., AND KATZ, J. Private Set Intersection: Are Garbled Circuits Better than Custom Protocols? In NDSS (2012).
[30] ILIEV, A., AND SMITH, S. More Efficient Secure Function Evaluation Using Tiny Trusted Third Parties. Tech. Rep. TR2005-551, Dartmouth College, 2005.
[31] IOANNIDIS, I., GRAMA, A., AND ATALLAH, M. A Secure Protocol for Computing Dot-Products in Clustered and Distributed Environments. In ICPP (2002).
[32] JARECKI, S., AND LIU, X. Efficient Oblivious Pseudorandom Function with Applications to Adaptive OT and Secure Computation of Set Intersection. In TCC (2009).
[33] JARECKI, S., AND LIU, X. Fast Secure Computation of Set Intersection. In SCN (2010).
[34] JÄRVINEN, K., KOLESNIKOV, V., SADEGHI, A.-R., AND SCHNEIDER, T. Embedded SFE: Offloading Server and Network Using Hardware Tokens. In Financial Cryptography (2010).
[35] JOHNSON, A., SYVERSON, P., DINGLEDINE, R., AND MATHEWSON, N. Trust-based anonymous communication: Adversary models and routing algorithms. In CCS (2011).
[36] KERSCHBAUM, F. Public-key encrypted bloom filters with applications to supply chain integrity. In CODASPY (2011).
[37] KISSNER, L., AND SONG, D. X. Privacy-Preserving Set Operations. In CRYPTO (2005).
[38] KOSTIAINEN, K., RESHETOVA, E., EKBERG, J.-E., AND ASOKAN, N. Old, new, borrowed, blue – a perspective on the evolution of mobile platform security architectures. In CODASPY (2011).
[39] LI, M., CAO, N., YU, S., AND LOU, W. FindU: Privacy-preserving personal profile matching in mobile social networks. In INFOCOM (2011).
[40] MANULIS, M., PINKAS, B., AND POETTERING, B. Privacy-Preserving Group Discovery with Linear Complexity. In ACNS (2010).
[41] MITTAL, P., WRIGHT, M., AND BORISOV, N. Pisces: Anonymous Communication Using Social Networks. In NDSS (2013).
[42] MOHAISEN, A., TRAN, H., CHANDRA, A., AND KIM, Y. Trustworthy distributed computing on social networks. In ASIACCS (2013).
[43] NAGY, M., ASOKAN, N., AND OTT, J. PeerShare: A System Secure Distribution of Sensitive Data Among Social Contacts. In NordSec (2013).
[44] NIST. http://www.nsa.gov/ia/_files/nist-routines.pdf.
[45] NORCIE, G., DE CRISTOFARO, E., AND BELLOTTI, V. Bootstrapping Trust in Online Dating: Social Verification of Online Dating Profiles. In USEC (2013).
[46] RANTALA, E., KARPPANEN, A., GRANLUND, S., AND SAROLAHTI, P. Modeling energy efficiency in wireless Internet communication. In MobiHeld (2009).
[47] RECORDON, D., AND REED, D. OpenID 2.0: a platform for user-centric identity management. In DIM (2006).
[48] TANENBAUM ET AL., A. S. Using Sparse Capabilities in a Distributed Operating System. In ICDCS (1986).
[49] THIAGARAJAN, N., AGGARWAL, G., NICOARA, A., BONEH, D., AND SINGH, J. P. Who killed my battery?: Analyzing mobile browser energy consumption. In WWW (2012).
[50] VON ARB, M., BADER, M., KUHN, M., AND WATTENHOFER, R. VENETA: Serverless friend-of-friend detection in mobile social networking. In WiMob (2008).
[51] YAO, A. C. How to Generate and Exchange Secrets. In FOCS (1986), pp. 162–167.
[52] ZHANG, L., AND LI, X.-Y. Message in a Sealed Bottle: Privacy Preserving Friending in Social Networks. http://arxiv.org/abs/1207.7199, 2012.
[53] ZHANG, R., ZHANG, Y., SUN, J., AND YAN, G. Fine-grained private matching for proximity-based mobile social networking. In INFOCOM (2012).

希望这个优化后的文本更加清晰、连贯和专业。如果有任何进一步的修改需求，请告诉我！