### Email Header Analysis

The following is an annotated version of the `Received` header fields from an email, detailing the sequence in which they were added to the email header. The timestamps are highlighted for clarity.

1. **From `backend.www.inm.smartertravel.net` (helo=localhost)**
   - **by `backend.www.inm.smartertravel.net` (Exim 4.76)**
   - **with local-bsmtp (envelope-from: <>)**
   - **id 1S1J8d-0007SB-QG**
   - **for PI:EMAIL;**
   - **Sat, 25 Feb 2012 10:02:19 -0500**

2. **From `backend.www.inm.smartertravel.net` (backend.www.inm.smartertravel.net [75.98.73.172])**
   - **by `seal.eecs.umich.edu` (Postfix)**
   - **with ESMTPS id CA35354C722**
   - **for <PI:EMAIL>;**
   - **Sat, 25 Feb 2012 10:05:12 -0500 (EST)**

3. **From `seal.eecs.umich.edu` (localhost [127.0.0.1])**
   - **by `seal.eecs.umich.edu` (Postfix)**
   - **with ESMTP id EE11954C72F**
   - **for <PI:EMAIL>;**
   - **Sat, 25 Feb 2012 10:05:12 -0500 (EST)**

4. **From `seal.eecs.umich.edu` (d-110-235.eecs.umich.edu. [141.212.110.235])**
   - **by `mx.google.com`**
   - **with ESMTP id no10si2673927igc.10.2012.02.25.07.02.20;**
   - **Sat, 25 Feb 2012 07:02:20 -0800 (PST)**

### Potential Issues and Mitigations

**Legitimate Senders Treated as Untrusted:**
In some cases, known legitimate senders may be treated as untrusted. For example, if a user subscribes to a mailing list using a semi-private alias and later marks it as restricted, and the domain name of the mailing list's server changes, the mailing list might be treated as untrusted. This could result in the newsletter being silently blocked. A simple mitigation would be to deliver these messages to the user’s spam folder instead of blocking them entirely. This requires cooperation between SEAL and the mail provider. The user can then mark the senders that are incorrectly delivered as trusted.

**Spammer Misuse:**
There is a concern that spammers might misuse SEAL by creating aliases for the `From` field of spam messages, providing a channel for recipients to respond. However, this does not offer significant advantages to spammers since they can easily create multiple email addresses using mail servers they control. Additionally, a spammer would need to create an account with an email provider coupled with their SEAL account. Legitimate SEAL servers can be configured to only allow coupling with email providers that have robust checks against spammer registration or receipt of large amounts of bulk mail in short intervals. Illegitimate SEAL servers designed to protect spammers would likely get blacklisted over time.

**SEAL Protocol Attacks:**
Spammers could attempt to spoof a legitimate user and send commands to add themselves to the trusted set. To do this, the spammer would need several pieces of information, such as the email ID with the mail provider and the account userid/password on SEAL. Email sent to command addresses, like `getalias@sealserver`, is rejected unless it arrives over an authenticated SMTP session, and the commands are executed under the identity of the user that authenticated, rather than the content of the `From` field in the message headers.

**Infrastructure Compromise:**
While SEAL servers should be secured using best practices, there are two forms of attacks to consider:
1. **One-time intrusion:** An attacker steals all the data within the databases. In this case, the only email IDs the attacker gets hold of are the user’s email ID at the mail provider (e.g., Gmail ID). All other email IDs are stored as salted hashes, which are difficult to reverse.
2. **Active attack:** The attacker compromises the code within the server. If a spammer compromises the SEAL servers, they can monitor emails flowing through the system and collect addresses. While serious, the addresses collected are limited to the time the attack goes unnoticed. It is less serious than the compromise of an email provider, where both older messages and future email are potentially accessible.

**Network Snooping:**
SEAL is not designed to provide anonymity against local network snooping. A government, for example, could monitor the network channels to a SEAL server and collect emails, as they could go over unauthenticated and unencrypted SMTP from arbitrary senders. This is not a typical attack used by spammers.

### Usability Considerations

**Permanent vs. Semi-Private Aliases:**
Despite efforts to make SEAL easy to use and minimize impact on non-spam senders, some users may still prefer permanent addresses. Permanent addresses can be printed on business cards and are easy to remember. With SEAL, a user could generate an alias on a mobile device and write it by hand on a form or business card. For better scalability, a possible solution is to publish a means for a requester to send a text message and receive the alias as a response, tying the requester’s cell phone number to the alias.

**Web Page Integration:**
For publishing email IDs on web pages, we are experimenting with a mechanism that generates a semi-private alias based on the IP address from which the HTTP request was received. This aims to identify servers used to harvest email IDs from web sites. We are still collecting data from this mechanism.

**Address Book Management:**
A significant usability concern with SEAL is that one person could appear multiple times in an address book due to the use of aliases in the `From` or `To` fields. Many address books permit multiple email IDs to be associated with one person. With SEAL, being able to mark an email ID as the preferred or primary email ID will be useful. In our design, the alias name of an alias is associated with a single account, allowing a SEAL-compatible address book to automatically associate all email IDs with the same alias name (e.g., `aliasname.*@sealserver`) with the same person.

**Browser Extension:**
The browser extension for using aliases as web usernames was adapted from PwdHash, inheriting some of its limitations, including lack of portability to all applications that render HTML, vulnerability to spyware, and susceptibility to DNS attacks. One potential improvement in usability over PwdHash is that the username field is not normally scrambled on login web forms, making it easier for users to see the fetching and replacement of their username and know that it was successful.

### Conclusion

The current paradigm does not provide email address owners sufficient control, leading to email address leakages. SEAL, a system that provides users more control over their email aliases, allows web services to validate the user’s affiliation without accessing private information. Experimental results indicate that SEAL can be useful in controlling unsolicited email while being compatible with existing email systems.

### Acknowledgments

This paper is based upon work supported by the National Science Foundation Grant No. CNS 0916126. Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.

### References

[1] David Mazières and M. Frans Kaashoek. The design, implementation, and operation of an email pseudonym server. In Proceedings of the 5th ACM conference on Computer and communications security, CCS '98, pages 27–36, New York, NY, USA, 1998. ACM.

[2] Jean-Marc Seigneur and Christian Damsgaard Jensen. Privacy recovery with disposable email addresses. IEEE Security and Privacy, 1:35–39, November 2003.

[3] Anonymous Email: Free disposable email service for receiving emails anonymously. Online, 2011.

[4] Your Own Protection Mail. Online. http://www.yopmail.com/en/, 2011.

[5] Mailinator. Online, 2011.

[6] Aram Yegenian and Tassos Dimitriou. Inexpensive Email Addresses: An Email Spam-Combating System. In Sushil Jajodia, Jianying Zhou, Ozgur Akan, Paolo Bellavista, Jiannong Cao, Falko Dressler, Domenico Ferrari, Mario Gerla, Hisashi Kobayashi, Sergio Palazzo, Sartaj Sahni, Xuemin (Sherman) Shen, Mircea Stan, Jia Xiaohua, Albert Zomaya, and Geoffrey Coulson, editors, Security and Privacy in Communication Networks, volume 50 of Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering, pages 35–52. Springer Berlin Heidelberg, 2010.

[7] John Ioannidis. Fighting spam by encapsulating policy in email addresses.

[8] TMDA. Tagged Message Delivery Agent (TMDA). Online.

[9] David Recordon and Drummond Reed. OpenID 2.0: A platform for user-centric identity management. In Proceedings of the second ACM workshop on Digital identity management, DIM '06, pages 11–16, New York, NY, USA, 2006. ACM.

[10] Gary Robinson. A statistical approach to the spam problem. Linux J., 2003:3–, March 2003.

[11] Le Zhang, Jingbo Zhu, and Tianshun Yao. An evaluation of statistical spam filtering techniques. ACM Trans. Asian Lang. Inf. Process., 3(4):243–269, December 2004.

[12] Ion Androutsopoulos, John Koutsias, Konstantinos Chandrinos, Georgios Paliouras, and Constantine D. Spyropoulos. An evaluation of Naive Bayesian anti-spam filtering. CoRR, cs.CL/0006013, 2000.

[13] Ion Androutsopoulos, John Koutsias, Konstantinos V. Chandrinos, and Constantine D. Spyropoulos. An experimental comparison of naive Bayesian and keyword-based anti-spam filtering with personal e-mail messages. In Proceedings of the 23rd annual international ACM SIGIR conference on Research and development in information retrieval, SIGIR '00, pages 160–167, New York, NY, USA, 2000. ACM.

[14] Karl-Michael Schneider. A comparison of event models for Naive Bayes anti-spam e-mail filtering. In Proceedings of the tenth conference on European chapter of the Association for Computational Linguistics - Volume 1, EACL '03, pages 307–314, Stroudsburg, PA, USA, 2003. Association for Computational Linguistics.

[15] Tony A. Meyer and Brendon Whateley. Spambayes: Effective open-source, Bayesian-based, email classification system. In CEAS, 2004.

[16] Cormac O'Brien and Carl Vogel. Spam filters: Bayes vs. chi-squared; letters vs. words. In Proceedings of the 1st international symposium on Information and communication technologies, ISICT '03, pages 291–296. Trinity College Dublin, 2003.

[17] Jonathan A. Zdziarski. Ending Spam: Bayesian Content Filtering and the Art of Statistical Language Classification. No Starch Press, San Francisco, CA, USA, 2005.

[18] Vipul Ved Prakash and Adam O'Donnell. Fighting Spam with Reputation Systems. Queue, 3:36–41, November 2005.

[19] Jennifer Golbeck and James Hendler. Reputation Network Analysis for Email Filtering. In In Proc. of the Conference on Email and Anti-Spam (CEAS), Mountain View, 2004.

[20] P. Oscar Boykin and Vwani Roychowdhury. Personal Email Networks: An Effective Anti-Spam Tool. IEEE COMPUTER, 38:61, 2004.

[21] Sushant Sinha, Michael Bailey, and Farnam Jahanian. Shades of Grey: On the Effectiveness of Reputation-based "blacklists". In Proceedings of the 3rd International Conference on Malicious and Unwanted Software (MALWARE '08), pages 57–64, Fairfax, Virginia, USA, October 2008.

[22] Joshua Goodman and Robert Rounthwaite. Stopping Outgoing Spam, 2004.

[23] Chris Kanich, Christian Kreibich, Kirill Levchenko, Brandon Enright, Geoffrey M. Voelker, Vern Paxson, and Stefan Savage. Spamalytics: An empirical analysis of spam marketing conversion. In Proceedings of the 15th ACM conference on Computer and communications security, CCS '08, pages 3–14, New York, NY, USA, 2008. ACM.

[24] Martín Abadi, Andrew Birrell, Mike Burrows, Frank Dabek, and Ted Wobber. Bankable Postage for Network Services. In In Proc. Asian Computing Science Conference, pages 72–90, 2003.

[25] Blake Ross, Collin Jackson, Nick Miyake, Dan Boneh, and John C. Mitchell. Stronger password authentication using browser extensions. In Proceedings of the 14th conference on USENIX Security Symposium - Volume 14, pages 2–2, Berkeley, CA, USA, 2005. USENIX Association.

[26] Postfix. Postfix. http://www.postfix.org/, 2011.

[27] Dovecot. Dovecot. http://www.dovecot.org/, 2011.

[28] Alexa. Alexa The Web Information Company. Online. http://www.alexa.com/, 2011.

[29] IETF. RFC 5322: Internet Message Format. Online, October 2008.

[30] Listserv. Lists with 10,000 subscribers or more. Online, July 2011.

### Appendix

#### State Diagram for Alias

**Figure 8: State diagram for alias.**

**Example Email Sent by Bob to Request an Alias:**

- **From:** bob@sealserver
- **To:** getalias@sealserver
- **Subject:** bobhome

**Example Response to Bob’s Alias Request:**

- **From:** getalias@sealserver
- **To:** bob@sealserver
- **Reply-To:** bobhome.b3f9cehd@sealserver
- **Subject:** bobhome.b3f9cehd@sealserver
- **Body:**
  - Your new randomized email is: "bobhome.b3f9cehd@sealserver"
  - Append this to your recipient list. We do not recommend using this address for multiple recipients.

**Figure 9: (L) Example email sent by Bob to request an alias. (R) Example response to Bob’s alias request.**

**Example of Using Hint:**

- **From:** bob@sealserver
- **To:** "work" PI:EMAIL
- **Reply-To:** bob@sealserver
- **Subject:** Business Proposal
- **Body:**
  - Dear Alice, ...

**Figure 10: Example of using hint.**