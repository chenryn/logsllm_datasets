### Definition [6]
In the context of this definition, the server session is uncorrupted, or the adversary behaves as an A/A (Authenticated/Authenticated) adversary. In the latter case, the adversary can even corrupt the long-term key of the server session.

### Message Format Compatibility with Standard TLS
To maintain compatibility with standard TLS, the random fields in the message format can be replaced by independent values and ignored during the computation.

### Security of MTLS
**Theorem 3 (MTLS; \(\mathcal{A}\))**: For the described type of adversary, MTLS is secure under the condition that the Decisional Diffie-Hellman (DDH) assumption holds in the selected group and that the signature scheme used in TLS is existentially unforgeable. This statement holds in the random-oracle model.

**Proof**: The proof is essentially a combination of the proof for Theorem 2 and a standard analysis of the TLS 1.3 core protocol.

## Related Work
Many schemes have been proposed for trust establishment. For a comprehensive treatment, we refer the reader to the survey by Unger et al. [49, Section III]. Here, we focus on opportunistic approaches, popular protocols such as TLS, QUIC, and Signal, as well as previous proposals for using multiple channels to establish trust.

### Tcpcrypt
One of the best-known protocols for basic opportunistic encryption is Tcpcrypt [4]. It performs an efficient key exchange over a TCP connection to derive keys and then outputs an authentication tag over the session transcript. This tag can be verified using a trusted certificate or a different communication channel. Similar to SMKEX, the authentication tag can be sent over a secondary public channel (e.g., a secondary subflow in MPTCP) rather than relying on a certificate or a different form of communication channel. Thus, our design can also be seen as a model for enhancing the security of previous opportunistic encryption methods like Tcpcrypt.

### Trust-on-First-Use (TOFU)
An enhanced version of basic opportunistic encryption is achieved through Trust-on-First-Use (TOFU), as seen in SSH or with self-signed certificates, where the client remembers the first long-term key sent by the server. However, Wendlandt et al. [50] note that such approaches are completely vulnerable to active Man-in-the-Middle (MITM) attackers during the initial key setup or during key updates. SMKEX can protect against many active attackers at all times. By combining SMKEX with TOFU, we achieve the best possible protection for opportunistic encryption to date.

### Popular Protocols
The most popular protocols for securing client-server communications, TLS [13] and QUIC [22], as well as the most popular protocol for secure messaging, Signal [46], all rely on trusted third parties to issue correct certificates (TLS, QUIC) or long-term public keys (Signal). However, this trust is problematic, as third parties can become corrupted [17, 20, 33], verification is difficult [35], and keys may be shared among many untrusted parties [7]. Several schemes have been proposed to address these issues, including:
- Monitoring issued certificates [19, 50]
- Creating and managing public logs of all issued certificates [32]
- Proposing modifications to the existing architecture [26, 27]

Unfortunately, all of these schemes still require trust in one or more entities. Additionally, solutions in the first category add overhead to TLS connections, those in the second category cannot quickly cope with compromised private domain keys, and those in the third category remain largely impractical due to the many actors and work required.

### Multiple Communication Channels
There have also been proposals for using multiple communication channels. Some of these require a secure channel [52], while others propose using secret sharing for distributing the key [47], which we have shown to be insecure in our setting (see §4). In contrast, SMKEX provides a secure key exchange, proven against A-P (Active/Passive) and A/A adversaries, and works across public channels.

## Conclusion
SMKEX allows for the most secure opportunistic encryption method to date by leveraging several public communication channels. We have proven that it provides secure key exchanges with forward and backward secrecy across a wide range of adversaries. We have also shown that the current path diversity across the Internet allows SMKEX to protect against local and nation-wide active MITM attackers. Its simplicity means that SMKEX can be easily integrated with TOFU and TLS-like protocols, thereby increasing their security.

We have a fully-working implementation of SMKEX, based on a modified Linux MPTCP kernel implementation and a user-level library, allowing unmodified applications to use SMKEX. Therefore, SMKEX is ready to be used. Servers only need to support MPTCP across their edge servers, which can be easily done with the methods we have shown. With the ongoing deployment of MPTCP, we expect this to happen soon, but perhaps the advantages of SMKEX can motivate some large websites to deploy MPTCP even sooner.

## Source Code
The source code for SMKEX is available here:
- [SMKEX GitHub Repository](https://github.com/nets-cs-pub-ro/smkex)
- [Modified MPTCP Kernel GitHub Repository](https://github.com/nets-cs-pub-ro/mptcp-smkex)

## Acknowledgements
We thank all the people who have helped us in this work through ideas, experiments, comments on previous drafts, and other contributions. Among them, we thank Ross Anderson, Virgil Gligor, Markus Kuhn, Mike Bond, and Hugo Krawczyk.

This work was partially sponsored by the European Commission through the SSICLOPS H2020 project.

## References
[1] A. Ford and C. Raiciu and M. Handley and O. Bonaventure. RFC6824:TCP Extensions for Multipath Operation ... https://tools.ietf.org/html/rfc6824.
[2] D. Aggarwal, S. Agrawal, D. Gupta, H. K. Maji, O. Pandey, and M. Prabhakaran. Optimal computational split-state non-malleable codes. In Theory of Cryptography, volume 9563 of LNCS, pages 393–217, 2016.
[3] M. Bellare and P. Rogaway. Entity authentication and key distribution. In D. R. Stinson, editor, Advances in Cryptology — CRYPTO 1993, volume 773 of Lecture Notes in Computer Science, pages 232–249. Springer, 1993.
[4] A. Bittau, M. Hamburg, M. Handley, D. Mazieres, and D. Boneh. The case for ubiquitous transport-level encryption. In USENIX Security Symposium, pages 403–418, 2010.
[5] S. Blake-Wilson, D. Johnson, and A. Menezes. Key agreement protocols and their security analysis. Crytography and Coding, pages 30–45, 1997.
[6] R. Canetti and H. Krawczyk. Analysis of key-exchange protocols and their use for building secure channels. In International Conference on the Theory and Applications of Cryptographic Techniques, pages 453–474. Springer, 2001.
[7] F. Cangialosi, T. Chung, D. Chones, D. Levin, B. M. Maggs, A. Mislove, and C. Wilson. Measurement and analysis of private key sharing in the HTTPS ecosystem. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pages 628–640, New York, NY, USA, 2016. ACM.
[8] L. Carter and M. Wegman. Universal classes of hash functions. Journal of Computer and System Sciences, 18(2):143–154, 1979.
[9] K.-K. R. Choo, C. Boyd, and Y. Hitckcock. Examining indistinguishability-based proof models for key establishment protocols. In Advances in Cryptology — ASIACRYPT 2005, volume 3788 of LNCS, pages 585–604. IACR, Springer, 2005.
[10] Cisco. Global Mobile Data Traffic Forecast. http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/mobile-white-paper-c11-520862.html.
[11] K. Cohn-Gordon, C. Cremers, B. Dowling, L. Garratt, and D. Stebila. A formal security analysis of the Signal messaging protocol. In Security and Privacy (EuroS&P), 2017 IEEE European Symposium on, pages 451–466. IEEE, 2017.
[12] A. Croitoru, D. Niculescu, and C. Raiciu. Towards Wi-Fi mobility without fast handover. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15), pages 219–234, Oakland, CA, 2015. USENIX Association.
[13] T. Dierks and E. Rescorla. The transport layer security (TLS) protocol version 1.2. RFC 5246. 2008.
[14] W. Diffie and M. Hellman. New directions in cryptography. IEEE transactions on Information Theory, 22(6):644–654, 1976.
[15] V. Dukhovni. Opportunistic Security: Some Protection Most of the Time. 2014.
[16] S. Dziembowski, K. Pietrzak, and D. Wichs. Non-malleable codes. In ITCS, 2010.
[17] Eckersley, P. Iranian hackers obtain fraudulent HTTPS certificates: How close to a Web security meltdown did we get? https://www.eff.org/deeplinks/2011/03/iranian-hackers-obtain-fraudulent-https. Last accessed: November 2017.
[18] D. E. Eisenbud, C. Yi, C. Contavalli, C. Smith, R. Kononov, E. Mann-Hielscher, A. das Cilingiroglu, B. Cheyney, W. Shang, and J. D. Hosein. Maglev: A fast and reliable software network load balancer. In 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16), pages 523–535, Santa Clara, CA, Mar. 2016. USENIX Association.
[19] Electronic Frontier Foundation. SSL Observatory. https://www.eff.org/observatory.
[20] Fisher, D. Final report: DigiNotar hack shows total compromise of CA servers. https://threatpost.com/final-report-diginotar-hack-shows-total-compromise-ca-servers-103112/77170/. Last accessed: November 2017.
[21] A. Flavel, P. Mani, D. Maltz, N. Holt, J. Liu, Y. Chen, and O. Surmachev. FastRoute: A scalable load-aware anycast routing architecture for modern CDNs. In 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15), pages 381–394, Oakland, CA, 2015. USENIX Association.
[22] R. Hamilton, J. Iyengar, I. Swett, and A. Wilk. QUIC: A UDP-Based Secure and Reliable Transport for HTTP/2. 2016.
[23] B. Hesmans, O. Bonaventure, and F. Duchene. A socket API to control multipath TCP (draft-hesmans-mptcp-socket-03). 2008.
[24] R. Impagliazzo, L. Levin, and M. Luby. Pseudo-random generation from one-way functions. In STOC, 1989.
[25] R. Joyce. Disrupting nation state hackers. San Francisco, CA, 2016. USENIX Association.
[26] T. H.-J. Kim, L. Huang, A. Perrig, C. Jackson, and V. Gligor. Transparent Key Integrity (TKI): A proposal for a public-key validation infrastructure. Technical Report CMU-CyLab-12-016, Carnegie Mellon University, 2012.
[27] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor. Accountable Key Infrastructure (AKI): A proposal for a public-key validation infrastructure. In Proceedings of the 22nd international conference on World Wide Web, pages 679–690. ACM, 2013.
[28] H. Krawczyk, K. G. Paterson, and H. Wee. On the security of the TLS protocol: A systematic analysis. In Advances in Cryptology — CRYPTO 2013, Heidelberg, 2013. Springer.
[29] H. Krawczyk and P. Eronen. HMAC-based extract-and-expand key derivation function (HKDF). 2010.
[30] H. Krawczyk and H. Wee. The OPTLS protocol and TLS 1.3. In 2016 IEEE European Symposium on Security and Privacy (EuroS&P), pages 81–96. IEEE, 2016.
[31] C. Labovitz, S. Iekel-Johnson, D. McPherson, J. Oberheide, and F. Jahanian. Internet inter-domain traffic. In Proceedings of the ACM SIGCOMM 2010 Conference, SIGCOMM ’10, pages 75–86, New York, NY, USA, 2010. ACM.
[32] B. Laurie, A. Langley, and E. Kasper. Certificate Transparency. 2013.
[33] Lemos, R. Microsoft warns of hijacked certificates. https://www.cnet.com/news/microsoft-warns-of-hijacked-certificates/. Last accessed: November 2017.
[34] D. Levin, Y. Lee, L. Valenta, Z. Li, V. Lai, C. Lumezanu, N. Spring, and B. Bhattacharjee. Alibi Routing. In Proceedings of the 2015 ACM Conference on Special Interest Group on Data Communication, SIGCOMM ’15, pages 611–624, New York, NY, USA, 2015. ACM.
[35] Y. Liu, W. Tome, L. Zhang, D. Chones, D. Levin, B. Maggs, A. Mislove, A. Schulman, and C. Wilson. An end-to-end measurement of certificate revocation in the web’s PKI. In Proceedings of the 2015 Internet Measurement Conference, pages 183–196, New York, NY, USA, 2015. ACM.
[36] R. Miao, H. Zeng, C. Kim, J. Lee, and M. Yu. SilkRoad: Making stateful layer-4 load balancing fast and cheap using switching ASICs. In Proceedings of the Conference of the ACM Special Interest Group on Data Communication, SIGCOMM ’17, pages 15–28, New York, NY, USA, 2017. ACM.
[37] MPTCP Blog. Commercial usage of multipath TCP. http://blog.multipath-tcp.org/blog/html/2015/12/25/commercial_usage_of_multipath_tcp.html. Last accessed: November 2017.
[38] D. Nguyen, D. C. Phung, S. Secci, B. Felix, and M. Nogueira. Can MPTCP Secure Internet Communications from Man-in-the-Middle Attacks? In Proceedings of CNSM: International Conference on Network and Service Management, 2017.
[39] H.-D.-D. Nguyen, C.-D. Phung, S. Secci, B. Felix, and M. Nogueira. Can MPTCP Secure Internet Communications from Man-in-the-Middle Attacks? 2017.
[40] V. Olteanu, A. Agache, A. Voinescu, and C. Raiciu. Stateless datacenter load-balancing with Beamer. In 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18), pages 125–139, Renton, WA, 2018. USENIX Association.
[41] P. Patel, D. Bansal, L. Yuan, A. Murthy, A. Greenberg, D. A. Maltz, R. Kern, H. Kumar, M. Zikos, H. Wu, C. Kim, and N. Karri. Ananta: Cloud scale load balancing. In SIGCOMM, 2013.
[42] Perrin T. Axolotl ratchet. https://github.com/trevp/axolotl/wiki.
[43] C. Raiciu, D. Niculescu, M. Bagnulo, and M. J. Handley. Opportunistic mobility with multipath TCP. In Proceedings of the Sixth International Workshop on MobiArch, MobiArch ’11, pages 7–12, New York, NY, USA, 2011. ACM.
[44] E. Rescorla. The transport layer security (TLS) protocol version 1.3. Internet draft. 2018.
[45] A. Shamir. How to share a secret. Commun. ACM, 22(11):612–613, Nov. 1979.
[46] Signal. Signal documentation. https://signal.org/docs/.
[47] Y. Takano, N. Isozaki, and Y. Shinoda. Multipath key exchange on P2P networks. In First International Conference on Availability, Reliability and Security (ARES’06), April 2006.
[48] The Intercept. The NSA’s spy hub in New York, hidden in plain sight. https://theintercept.com/2016/11/16/the-nsas-spy-hub-in-new-york-hidden-in-plain-sight/. Last accessed: November 2017.
[49] N. Unger, S. Dechand, J. Bonneau, S. Fahl, H. Perl, I. Goldberg, and M. Smith. SoK: Secure Messaging. In Security and Privacy (SP), 2015 IEEE Symposium on, pages 232–249. IEEE, 2015.
[50] D. Wendlandt, D. G. Andersen, and A. Perrig. Perspectives: Improving SSH-style host authentication with multi-path probing. In USENIX Annual Technical Conference, volume 8, pages 321–334, 2008.
[51] Wired. What we know about the NSA and AT&T’s spying pact. https://www.wired.com/2015/08/know-nsa-atts-spying-pact/. Last accessed: November 2017.
[52] F. L. Wong and F. Stajano. Multichannel security protocols. Pervasive Computing, IEEE, 6(4):31–39, 2007.

### A Detailed Security Model
To analyze SMKEX, we extend the model of Canetti and Krawczyk [6] in several aspects and describe how the protocol is analyzed in that framework. We first briefly recall the Canetti-Krawczyk model in §A.1, and then describe the necessary modifications in §A.2.

#### A.1 Canetti-Krawczyk in a Nutshell
**Message-Driven Protocols**: The model of Canetti and Krawczyk [6] models the execution of a protocol, represented as a Turing machine, between a set of parties \(P_1, \ldots, P_n\). A message-driven protocol is either triggered at a party through an external "call" or through an arriving message. At each of these events, the protocol processes the incoming information and may produce local output and/or transmit a message over the network.