### CoSi Unforgeability in the KOSK Setting

CoSi, a collective signing scheme, supports a logarithmic number of concurrent signing queries. Specifically, CoSi is \((\tau, q_S, q_C, q_H, \epsilon)\)-unforgeable in the KOSK (Known One-More Secret Key) setting within the random-oracle model if \(q > \frac{8q_H}{\epsilon}\) and if the one-more discrete-logarithm problem is \(\left(k_{\max} \cdot \tau + k_{\max}(q_S + 1) \cdot \tau_{\exp}\right)\)-hard. Here, \(k_{\max} = \frac{8q_H}{\epsilon} \cdot \ln\left(\frac{8n}{\epsilon}\right)\) and \(\tau_{\exp}\) is the time required for a multi-exponentiation in group \(G\).

Due to space constraints, the detailed proof is provided in the full version of this work.

### Limitations in the Key Verification Model

The unforgeability proof for CoSi does not extend to the key verification model with proofs of possession. The reason is that the reduction would need to guess the open queries at each of the \(N\) forking points corresponding to the \(N\) proofs of possession for the public keys in the forgery. This results in a tightness loss of \((q_S q_H)^N q_C\), meaning the scheme is secure for only a small number of signers, making it less useful as a multi-signature scheme.

### Alternative Models and Schemes

The proof technique works for a polynomial number of signers in a restricted model where the adversary must commit to all potential signers' public keys before accessing the signing oracle. Alternatively, one can use a scheme in the plain public-key model without requiring certificates by using different hash values as exponents for each public key in the verification equation [BN06], or by using a product of hash values as exponents [MWLD10, MPSW18a].

### Evaluation of mBCJ

We present mBCJ as an alternative to CoSi, where provable security comes at the cost of increased signature size and slightly higher computational cost. In this section, we evaluate the performance of mBCJ and show that the increased size and computational cost do not significantly impact the system's efficiency.

#### Experiment Setup

**a) Prototype:**
- **Implementation:** We implemented mBCJ in the Go programming language as an extension to the Collective Authority project (Cothority).
- **Libraries:** We used the Cothority [Ded18b] and Onet [Ded18a] libraries to support tree-based collective signing.
- **Comparison:** This experiment compares the latest version of CoSi to our implementation of mBCJ. Note that CoSi has been further developed since its original publication [STV+16], which explains the minor differences in performance measurements.

**b) Physical Configuration:**
- **Testbed:** A DeterLab [Det18] testbed was used, consisting of 28 physical machines, each with an Intel Xeon E3-1260L processor and 16GB of RAM.
- **Simulation:** Each machine simulated up to 586 signers, totaling 16,384 signers.
- **Network Delay:** A round-trip delay of 200 milliseconds was enforced to simulate international connections, and signers were deployed on different physical machines to accurately simulate network delays.

**c) Tree Configuration:**
- **Tree Structure:** mBCJ requires a tree structure among signers. For a given number of signers, we can choose a tree with a lower depth but a higher branching factor, or a higher depth with a lower branching factor.
- **Optimal Depth:** A depth of 3 (excluding the root) yields low network delays while keeping computation and network usage manageable. This setting was used for our experiments, with the branching factor adjusted according to the number of signers.

**d) Experiment:**
- **Process:** We simulated the signing process of CoSi and mBCJ. In each experiment, the leader initiates the signing protocol for an arbitrary message, and the resulting signature is verified against the aggregate public key.
- **Repetition:** Each experiment was repeated 10 times, and the average of the individual runs was taken.

#### Results

**a) Signing Latency:**
- **Scalability:** We measured the end-to-end latency of the signing process from 128 to 16,384 signers. Figure 4a shows that mBCJ can scale to 16,384 signers, producing a signature in about 2 seconds.
- **Network Delay:** The network delay dominates the overall latency, with 1.2 seconds being exactly two rounds of three round trips over the tree depth. The results confirm that mBCJ scales as well as CoSi, with only a marginal increase in overall latency.

**b) Bandwidth:**
- **Data Sent and Received:** We measured the amount of data sent and received by each signer. Leaf signers (those without children in the tree) send and receive less data, but we focused on the root signer, who always has the maximum number of children.
- **Bandwidth Consumption:** Figure 4b shows that the bandwidth consumption of CoSi and mBCJ is independent of the number of signers. mBCJ uses two points \(t_{i,1}\) and \(t_{i,2}\) in the commitment and three values \(s\), \(\gamma_1\), and \(\gamma_2\) in the response, creating additional overhead. However, the overhead of the connection and tree structure communication reduced the gap between the schemes. A 20% increase in bandwidth is acceptable for gaining provable security and will not hinder scalability.

**c) Computation Cost:**
- **CPU Time:** We compared the computational cost by measuring the total CPU time used to run all signers. Figure 4c shows the results, indicating a 75% average increase from CoSi to mBCJ.
- **Major Factor:** The main factor in the time increase for CoSi is the two multi-exponentiations required in mBCJ to compute \(t_{i,1}\) and \(t_{i,2}\).
- **Efficiency:** Despite the increase, mBCJ remains highly efficient, with an average CPU time per signer under 0.29 milliseconds even with 16,384 signers.

### Conclusion

Our work provides evidence that all currently known two-round Schnorr-based multi-signature schemes (BCJ, MWLD, CoSi, and MuSig) are insecure. We show that they cannot be proven asymptotically secure under standard assumptions and provide sub-exponential attacks that can be mounted in practice for reasonable parameter choices. We propose mBCJ as a provably secure yet highly efficient alternative. Compared to CoSi, our experiments show a 73% increase in CPU time and no noticeable difference in signing latency, demonstrating that mBCJ is just as scalable and a viable alternative for large-scale decentralized systems.

Alternative secure multi-signature schemes include non-interactive schemes based on pairings [BLS01, Bol03, BDN18] or three-move schemes based on discrete logarithms without pairings [BN06, BDN18, MPSW18b]. Constructing quantum-safe multi-signatures or efficient multi-signatures in the plain public-key model without random oracles remains an open problem.

Our results highlight the importance and limitations of provable security. Schemes without security proofs have no place in modern cryptographic design, especially when efficient, provably secure alternatives exist. Apparent resistance to obvious attacks does not guarantee security, as subtle attacks may be lurking. Security proofs, while not providing absolute guarantees, are the best tool we have, and their careful review and development are essential.

### Acknowledgements

We thank Stephen Schwab and the DeterLab team for their support. We also thank the anonymous referee for pointing out a flaw in an earlier version of this paper, which helped us improve our results. Drijvers and Neven were supported by the EU under CHIST-ERA project USE-IT.

### References

[Bar04] Boaz Barak. Non-Black-Box Techniques in Cryptography. PhD thesis, 2004.

[BCJ08] Ali Bagherzandi, Jung Hee Cheon, and Stanislaw Jarecki. Multisignatures secure under the discrete logarithm assumption and a generalized forking lemma. ACM CCS 2008.

[BDN18] Dan Boneh, Manu Drijvers, and Gregory Neven. Compact multi-signatures for smaller blockchains. ASIACRYPT 2018.

[bit17] Technology roadmap – Schnorr aggregation. https://bitcoincore.org/en/2017/03/23/schnorr-signature-aggregation, 2017.

[BJ08] Ali Bagherzandi and Stanislaw Jarecki. Multisignatures using proofs of secret key possession, as secure as the Diffie-Hellman problem. SCN 2008.

[BL13] Foteini Baldimtsi and Anna Lysyanskaya. On the security of one-witness blind signature schemes. ASIACRYPT 2013.

[BLS01] Dan Boneh, Ben Lynn, and Hovav Shacham. Short signatures from the Weil pairing. ASIACRYPT 2001.

[BN06] Mihir Bellare and Gregory Neven. Multi-signatures in the plain public-key model and a general forking lemma. ACM CCS 2006.

[BP02] Mihir Bellare and Adriana Palacio. GQ and Schnorr identification schemes: Proofs of security against impersonation under active and concurrent attacks. CRYPTO 2002.

[Bol03] Alexandra Boldyreva. Threshold signatures, multisignatures and blind signatures based on the gap-Diffie-Hellman-group signature scheme. PKC 2003.

[BNPS03] Mihir Bellare, Chanathip Namprempre, David Pointcheval, and Michael Semanko. The one-more-RSA-inversion problems and the security of Chaum’s blind signature scheme. Journal of Cryptology, 16(3):185–215, June 2003.

[BV98] Dan Boneh and Ramarathnam Venkatesan. Breaking RSA may not be equivalent to factoring. EUROCRYPT 1998.

[Ded18b] Dedis. Cothority overlay network library. https://github.com/dedis/onet, 2018. [Online; accessed February-2018].

[Ded18a] Dedis. Scalable collective authority prototype. https://github.com/dedis/cothority, 2018. [Online; accessed February-2018].

[Det18] DeterLab: Cyber-Defense Technology Experimental Research Laboratory. https://www.isi.deterlab.net, 2018. [Online; accessed February-2018].

[IN83] K. Itakura and K. Nakamura. A public-key cryptosystem suitable for digital multisignatures. NEC Research & Development, 71:1–8, 1983.

[KJG+16] Eleftherios Kokoris-Kogias, Philipp Jovanovic, Nicolas Gailly, Ismail Khoffi, Linus Gasser, and Bryan Ford. Enhancing Bitcoin security and performance with strong consistency via collective signing. USENIX Security 2016.

[LOS+06] Steve Lu, Rafail Ostrovsky, Amit Sahai, Hovav Shacham, and Brent Waters. Sequential aggregate signatures and multisignatures without random oracles. EUROCRYPT 2006.

[KKJG+18] Eleftherios Kokoris-Kogias, Philipp Jovanovic, Linus Gasser, Nicolas Gailly, Ewa Syta, and Bryan Ford. OmniLedger: A secure, scale-out, decentralized ledger via sharding. 2018 IEEE Symposium on Security and Privacy.

[MH96] Markus Michels and Patrick Horster. On the risk of disruption in several multiparty signature schemes. ASIACRYPT 1996.

[MOR01] Silvio Micali, Kazuo Ohta, and Leonid Reyzin. Accountable-subgroup multisignatures: Extended abstract. ACM CCS 2001.

[MPSW18a] Gregory Maxwell, Andrew Poelstra, Yannick Seurin, and Pieter Wuille. Simple Schnorr multi-signatures with applications to Bitcoin. Cryptology ePrint Archive, Report 2018/068, Version 20180118:124757, 2018.

[MPSW18b] Gregory Maxwell, Andrew Poelstra, Yannick Seurin, and Pieter Wuille. Simple Schnorr multi-signatures with applications to Bitcoin. Cryptology ePrint Archive, Report 2018/068, Version 20180520:191909, 2018.

[MS09] Lorenz Minder and Alistair Sinclair. The extended k-tree algorithm. In Claire Mathieu, editor, 20th SODA. ACM-SIAM, 2009.

[NS15] Ivica Nikolic and Yu Sasaki. Refinements of the k-tree algorithm for the generalized birthday problem. ASIACRYPT 2015.

[NSW09] Gregory Neven, Nigel P. Smart, and Bogdan Warinschi. Hash function requirements for Schnorr signatures. J. Mathematical Cryptology, 3(1):69–87, 2009.

[Nak08] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. 2008.

[NKJ+17] Kirill Nikitin, Eleftherios Kokoris-Kogias, Philipp Jovanovic, Nicolas Gailly, Linus Gasser, Ismail Khoffi, Justin Cappos, and Bryan Ford. CHAINIAC: proactive software-update transparency via collectively signed skipchains and verified builds. USENIX Security 2017.

[MWLD10] Changshe Ma, Jian Weng, Yingjiu Li, and Robert H. Deng. Efficient discrete logarithm based multi-signature scheme in the plain public key model. Des. Codes Cryptography, 54(2):121–133, 2010.

[OO93] Kazuo Ohta and Tatsuaki Okamoto. A digital multisignature scheme based on the Fiat-Shamir scheme. ASIACRYPT 1991.

[PS00] David Pointcheval and Jacques Stern. Security arguments for digital signatures and blind signatures. Journal of Cryptology, 13(3):361–396, 2000.

[PV05] Pascal Paillier and Damien Vergnaud. Discrete-log-based signatures may not be equivalent to discrete log. ASIACRYPT 2005.

[RY07] Thomas Ristenpart and Scott Yilek. The power of proofs-of-possession: Securing multiparty signatures against rogue-key attacks. EUROCRYPT 2007.

[SJKK+17] Ewa Syta, Philipp Jovanovic, Eleftherios Kokoris-Kogias, Nicolas Gailly, Linus Gasser, Ismail Khoffi, Michael J. Fischer, and Bryan Ford. Scalable bias-resistant distributed randomness. 2017 IEEE Symposium on Security and Privacy.

[Sch91] Claus-Peter Schnorr. Efficient signature generation by smart cards. Journal of Cryptology, 4(3):161–174, 1991.

[Sch01] Claus-Peter Schnorr. Security of blind discrete log signatures against interactive attacks. ICICS 2001.

[Sho97] Victor Shoup. Lower bounds for discrete logarithms and related problems. EUROCRYPT 1997.

[STV+16] Brent R. Waters. Efficient identity-based encryption without random oracles. EUROCRYPT 2005.

[Wag02] David Wagner. A generalized birthday problem. In Moti Yung, editor, CRYPTO 2002, volume 2442 of LNCS, pages 288–303. Springer, Heidelberg, August 2002.

[Wat05] Brent R. Waters. Efficient identity-based encryption without random oracles. EUROCRYPT 2005.