### Disjunctive Zero-Knowledge Proofs (DZKP) Verification

To verify the validity of a DZKP as expressed in Equation (7), the verifier must first check whether \( g^{\text{resp}} = (g^x)^{\text{chall}} \cdot g^w \) and then whether \( y^{\text{resp}} = (y^x)^{\text{chall}} \cdot y^w \) for the two non-interactive Σ-protocols, ZK1 and ZK2 [59].

For the spending organization, the following conditions must hold:
- \( g_1^{\text{sk}} = y_1 \)
- \( g_2^{\text{sk}} = y_2 \)

For other organizations, the conditions are:
- \( g_1^{\text{sk}} = t / \text{Token} \)
- \( g_2^{\text{sk}} = r - r_{\text{RP}} = y_2 \)

This ensures that \( g_1^{\text{sk}} = y_1 \) and \( g_2^{\text{sk}} = y_2 \).

**Proof:**

For the spending organization:
\[
\text{Token}^{\text{sk}} = \left( \prod_{i=0}^{m} \text{Com}_i \right)^{\text{sk}} / (\text{Com}_{\text{RP}})^{\text{sk}}
\]
\[
= \left( \prod_{i=0}^{m} g^{u_i} h^{r_i} \right)^{\text{sk}} / \left( h^{r_{\text{RP}}} \right)^{\text{sk}}
\]
\[
= \left( g^{\sum_{i=0}^{m} u_i} h^{\sum_{i=0}^{m} r_i} \right)^{\text{sk}} / \left( h^{r_{\text{RP}}} \right)^{\text{sk}}
\]
\[
= \left( g^{\sum_{i=0}^{m} u_i} h^{\sum_{i=0}^{m} r_i} \right)^{\text{sk}} / \left( h^{r_{\text{RP}}} \right)^{\text{sk}} = t / \text{pkr}_{\text{RP}} = y_1
\]

\[
\text{Token}^{r - r_{\text{RP}}} = \left( \frac{s}{\text{Com}_{\text{RP}}} \right)^{\text{sk}} = \frac{\text{Token}}{\text{Token}} = y_2
\]

For other organizations:
\[
g_1^{\text{sk}} = \left( \frac{s}{\text{Com}_{\text{RP}}} \right)^{\text{sk}} = \frac{t}{\text{Token}}
\]

\[
g_2^{\text{sk}} = p^{r - r_{\text{RP}}} = \frac{\text{Token}}{\text{Token}} = y_2
\]

A DZKP allows the prover to create both real and fake proofs using real and fake values, respectively. The verifier can validate the DZKP without distinguishing between real and fake proofs. When the prover knows the secret key of the spending organization (\(\text{sk}_{\text{spend}}\)) but not others' keys (\(\text{sk}_{\text{other}}\)), \(\text{sk}\) in Equation (5) is an arbitrary random number. To conceal the transaction graph, \(\text{sk}\) in Equation (6) is an arbitrary random number other than \(\text{sk}_{\text{spend}}\).

**Proof:**

Suppose \(\text{sk}\) is the spending organization’s secret key \(\text{sk}_{\text{spend}}\). Substituting \(\text{sk}\) with \(\text{sk}_{\text{spend}}\) in Equation (6), we get:
\[
\text{Token}^{\text{sk}_{\text{spend}}} = \text{Token} \cdot \left( \frac{s}{\text{Com}_{\text{RP}}} \right)^{\text{sk}_{\text{spend}}} = \text{Token} \cdot g_1^{\text{sk}_{\text{spend}}} = \text{Token} \cdot y_1 = \text{Token} \cdot \frac{t}{\text{Token}}
\]

Equation (8) shows a linear relationship among \(\text{Token}\), \(\text{Token}\), and \(t\). This linear relationship can reveal the identity of the spending organization through trivial computation by an observer. Therefore, \(\text{sk} \neq \text{sk}_{\text{spend}}\) in Equation (6).

### References

[1] “British Airways data breach: Russian hackers sell 245,000 credit card details,” https://www.theweek.co.uk/96327/british-airways-data-breach-how-to-check-if-you-re-affected.

[2] “Equifax Data Breach Impacts 143 Million Americans,” https://www.forbes.com/sites/leemathews/2017/09/07/equifax-data-breach-impacts-143-million-americans/.

[3] “Facebook Security Breach Exposes 50 Million Accounts,” https://www.nytimes.com/2018/09/28/technology/facebook-hack-data-breach.html.

[4] S. Gressin, “The Marriott data breach,” https://www.consumer.ftc.gov/blog/2018/12/marriott-data-breach, 2018.

[5] “Uber Settles Data Breach Investigation for $148 Million,” https://www.nytimes.com/2018/09/26/technology/uber-data-breach.html.

[6] “Verizon partner data breach exposes millions of customer records,” https://www.theverge.com/2017/7/12/15962520/verizon-nice-systems-data-breach-exposes-millions-customer-records.

[7] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash system,” http://bitcoin.org/bitcoin.pdf.

[8] “Ripple,” https://ripple.com/.

[9] “Digital Asset,” https://www.digitalasset.com/.

[10] “Stella,” https://www.stellar.org/.

[11] “Zcash,” https://z.cash/.

[12] E. B. Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and M. Virza, “Zerocash: Decentralized anonymous payments from Bitcoin,” in IEEE Symposium on Security and Privacy, 2014, pp. 459–474.

[13] G. Wood, “Ethereum: A secure decentralised generalised transaction ledger,” 2017.

[14] G. Maxwell, Confidential Transactions, https://people.xiph.org/~greg/confidential_values.txt.

[15] A. Poelstra, A. Back, M. Friedenbach, G. Maxwell, and P. Wuille, “Confidential assets,” in 4th Workshop on Bitcoin and Blockchain Research, April 2017.

[16] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Christidis, A. De Caro, D. Enyeart, C. Ferris, G. Laventman, Y. Manevich, S. Muralidharan, C. Murthy, B. Nguyen, M. Sethi, G. Singh, K. Smith, A. Sorniotti, C. Stathakopoulou, M. Vukolić, S. W. Cocco, and J. Yellick, “Hyperledger Fabric: A distributed operating system for permissioned blockchains,” in EuroSys, 2018, pp. 30:1–30:15.

[17] “JPMC Quorum,” https://www.jpmorgan.com/global/Quorum.

[18] “Private and confidential transactions with Hyperledger Fabric,” https://developer.ibm.com/tutorials/cl-blockchain-private-confidential-transactions-hyperledger-fabric-zero-knowledge-proof/.

[19] E. Cecchetti, F. Zhang, Y. Ji, A. Kosba, A. Juels, and E. Shi, “Solidus: Confidential distributed ledger transactions via pvorm,” in ACM CCS, 2017, pp. 701–717.

[20] N. Narula, W. Vasquez, and M. Virza, “zkledger: Privacy-preserving auditing for distributed ledgers,” in Symposium on Networked Systems Design and Implementation, 2018, pp. 65–80.

[21] T. P. Pedersen, “Non-interactive and information-theoretic secure verifiable secret sharing,” in Advances in Cryptology — CRYPTO ’91. Berlin, Heidelberg: Springer Berlin Heidelberg, 1992, pp. 129–140.

[22] CPA Canada and American Institute of CPAs, “Blockchain technology and its potential impact on the audit and assurance profession,” 2017.

[23] “Tendermint,” https://tendermint.com.

[24] “Chain,” https://chain.com/.

[25] D. Ongaro and J. Ousterhout, “In search of an understandable consensus algorithm,” in USENIX Annual Technical Conference, 2014, pp. 305–320.

[26] F. P. Junqueira, B. C. Reed, and M. Serafini, “Zab: High-performance broadcast for primary-backup systems,” in IEEE/IFIP International Conference on Dependable Systems Networks (DSN), 2011, pp. 245–256.

[27] “Go SDK for Hyperledger Fabric,” https://github.com/hyperledger/fabric-sdk-go.

[28] “Java SDK for Hyperledger Fabric,” https://github.com/hyperledger/fabric-sdk-java.

[29] “Node.js SDK for Hyperledger Fabric,” https://github.com/hyperledger/fabric-sdk-node.

[30] M. Blum, A. De Santis, S. Micali, and G. Persiano, “Noninteractive zero-knowledge,” SIAM J. Comput., vol. 20, no. 6, pp. 1084–1118, Dec. 1991.

[31] B. Bünz, J. Bootle, D. Boneh, A. Poelstra, P. Wuille, and G. Maxwell, “Bulletproofs: Short proofs for confidential transactions and more,” in IEEE Symposium on Security and Privacy, May 2018, pp. 315–334.

[32] D. Chaum and T. P. Pedersen, “Wallet databases with observers,” in Proceedings of Advances in Cryptology, 1992, pp. 89–105.

[33] R. Cramer, I. Damgård, and B. Schoenmakers, “Proofs of partial knowledge and simplified design of witness hiding protocols,” in 14th Annual International Cryptology Conference on Advances in Cryptology, 1994, pp. 174–187.

[34] “Protobuf,” https://developers.google.com/protocol-buffers/.

[35] “What is Over-The-Counter (OTC)?” https://www.investopedia.com/terms/o/otc.asp.

[36] “libsnark: a C++ library for zkSNARK proofs,” https://github.com/scipr-lab/libsnark/.

[37] D. Lukianov, “Compact confidential transactions for Bitcoin,” http://voxelsoft.com/dev/cct.pdf, 2015.

[38] T. Ruffing and G. Malavolta, “Switch commitments: A safety switch for confidential transactions,” in Financial Cryptography Workshops, ser. Lecture Notes in Computer Science, vol. 10323. Springer, 2017, pp. 170–181.

[39] G. Maxwell and A. Poelstra, “Borromean ring signatures,” 2015.

[40] S. Noether and A. Mackenzie, “Ring confidential transactions,” Ledger, vol. 1, pp. 1–18, 2016.

[41] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza, “SNARKs for C: verifying program executions succinctly and in zero knowledge,” in CRYPTO (2), ser. Lecture Notes in Computer Science, vol. 8043. Springer, 2013, pp. 90–108.

[42] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza, “Succinct non-interactive zero knowledge for a von Neumann architecture,” in USENIX Security, San Diego, CA, 2014, pp. 781–796.

[43] N. Bitansky, A. Chiesa, Y. Ishai, O. Paneth, and R. Ostrovsky, “Succinct non-interactive arguments via linear interactive proofs,” in Theory of Cryptography. Berlin, Heidelberg: Springer Berlin Heidelberg, 2013, pp. 315–333.

[44] R. Gennaro, C. Gentry, B. Parno, and M. Raykova, “Quadratic span programs and succinct NIZKs without PCPs,” in Advances in Cryptology – EUROCRYPT, 2013, pp. 626–645.

[45] J. Groth, “Short pairing-based non-interactive zero-knowledge arguments,” in Advances in Cryptology - ASIACRYPT 2010, 2010, pp. 321–340.

[46] H. Lipmaa, “Progression-free sets and sublinear pairing-based non-interactive zero-knowledge arguments,” in Theory of Cryptography. Berlin, Heidelberg: Springer Berlin Heidelberg, 2012, pp. 169–189.

[53] T. Ruffing, P. Moreno-Sanchez, and A. Kate, “CoinShuffle: Practical decentralized coin mixing for Bitcoin,” in ESORICS (2), ser. Lecture Notes in Computer Science, vol. 8713. Springer, 2014, pp. 345–364.

[47] H. Lipmaa, “Succinct non-interactive zero knowledge arguments from span programs and linear error-correcting codes,” in ASIACRYPT (1), ser. Lecture Notes in Computer Science, vol. 8269. Springer, 2013, pp. 41–60.

[54] L. Valenta and B. Rowan, “Blindcoin: Blinded, accountable mixes for Bitcoin,” in Financial Cryptography Workshops, ser. Lecture Notes in Computer Science, vol. 8976. Springer, 2015, pp. 112–126.

[48] B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio: Nearly practical verifiable computation,” in IEEE Symposium on Security and Privacy, May 2013, pp. 238–252.

[55] E. Z. Yang, “Secure multiparty Bitcoin anonymization,” http://blog.ezyang.com/2012/07/secure-multiparty-bitcoin-anonymization/.

[49] J. Bonneau, A. Narayanan, A. Miller, J. Clark, J. A. Kroll, and E. W. Felten, “Mixcoin: Anonymity for Bitcoin with accountable mixes,” in Financial Cryptography and Data Security. Springer, 2014, pp. 486–504.

[50] E. Heilman, L. Alshenibr, F. Baldimtsi, A. Scafuro, and S. Goldberg, “TumbleBit: An untrusted Bitcoin-compatible anonymous payment hub,” in NDSS, 2017.

[51] G. Maxwell, “CoinJoin: Bitcoin privacy for the real world,” https://bitcointalk.org/index.php?topic=279249.

[52] M. Rosenfeld, “Using mixing transactions to improve anonymity,” https://bitcointalk.org/index.php?topic=54266.

[56] J. H. Ziegeldorf, F. Grossmann, M. Henze, N. Inden, and K. Wehrle, “CoinParty: Secure multi-party mixing of Bitcoins,” in ACM CODASPY, 2015, pp. 75–86.

[57] “Coinjoin Sudoku,” http://www.coinjoinsudoku.com/.

[58] “Blockchain’s SharedCoin Users Can Be Identified, Says Security Expert,” https://www.coindesk.com/blockchains-sharedcoin-users-can-identified-says-security-expert.

[59] J. Camenisch, A. Kiayias, and M. Yung, “On the portability of generalized Schnorr proofs,” in Conference on Advances in Cryptology - EUROCRYPT, vol. 5479, 2009, pp. 425–442.