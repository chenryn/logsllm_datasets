### Comparison of Sabre Variants, Riposte, and Express

**Figure 7:**
- **(a) Sabre-M vs. Express (1 KiB & 32 KiB messages)**
  - **Number of mailboxes (ùëõ):** 214, 216
  - **Throughput (queries/second):** 212, 28, 24, 20
- **(b) Sabre-BB vs. Riposte (256 byte messages)**
  - **Protocols compared:**
    - 2-party SNIP
    - 3-party SNIP
    - (2 + 1)-PC
  - **Number of buckets (ùëõ):** 214, 216, 218
  - **Throughput (queries/second):** 212, 28, 24, 20

**Figure 8:**
- **Varying the percentage of malformed queries for DPFs of size 216 and message size of 10 KiB.**
  - **DPF configurations:**
    - DPF : address ‚áî 2 : 2
    - DPF : address ‚áî 4 : 0
    - DPF : address ‚áî 3 : 1
    - DPF : address ‚áî 0 : 4
    - DPF : address ‚áî 1 : 3
  - **Throughput (queries/second):** 216, 214, 212, 210, 28, 26, 24, 22
  - **Percentage of bad requests:** 20%, 40%, 60%, 80%, 100%

**Observations:**
- The leftmost plot shows all bad requests with valid addresses but malformed DPFs.
- The next plot shows one in four requests with invalid addresses.
- The rightmost plot shows all bad requests with invalid addresses.
- The y-axis tracks the number of incoming queries (both "good" and "bad") processed per second.

**Findings:**
- Throughput increases with the proportion of malformed DPFs because servers can stop processing immediately if auditing fails.
- When the proportion of requests with invalid addresses increases, the throughput for Express plummets, while the throughput for Sabre-M significantly increases due to its low-cost PRF-based address check.
- These results confirm that Sabre-M performs better than Express in the presence of a DoS attack.

### Related Work

**Atom:**
- **Authors:** Kwon, Corrigan-Gibbs, Devadas, and Ford
- **Publication:** [21]
- **Description:** An anonymous microblogging service using sharding and public-key techniques to support anonymous broadcasting of short (Tweet-sized) messages in the presence of actively malicious servers.

**XRD:**
- **Authors:** Kwon, Lu, and Devadas
- **Publication:** [22]
- **Description:** A scalable end-to-end messaging system using parallel mixes and aggregate hybrid shuffles to achieve high throughput relative to Pung and Atom.

**Talek:**
- **Authors:** Cheng, Scott, Masserova, Zhang, Goyal, Anderson, Krishnamurthy, and Parno
- **Publication:** [8]
- **Description:** A group messaging system in the anonymous mailbox model using information-theoretic PIR techniques to achieve access sequence indistinguishability under weak non-collusion assumptions.

**Pung:**
- **Authors:** Angel and Setty
- **Publication:** [3]
- **Description:** A single-server messaging protocol built from computationally private information retrieval (CPIR). Notable for its low writing costs, though reading is expensive, and it does not rely on multiple servers, resulting in non-collusion assumptions.

### Conclusion

We presented Sabre, a family of SAM protocols with instances operating in both the sender-anonymous mailbox model (Sabre-M) and the sender-anonymous bulletin-board model (Sabre-BB). Sabre improves on state-of-the-art systems through several innovations, enhancing performance, scalability, and resilience to resource exhaustion-style DoS attacks in the sender-anonymous mailbox model. Our implementation and experimental analysis indicate that Sabre can feasibly scale to anonymity sets in the tens of millions and beyond.

### References

[1] Albrecht, M. R., Rechberger, C., Schneider, T., Tiessen, T., & Zohner, M. (2015). Ciphers for MPC and FHE. In *Advances in Cryptology: Proceedings of EUROCRYPT 2015 (Part I)*, volume 9056 of LNCS, pages 430‚Äì454, Sofia, Bulgaria.

[2] Alexopoulos, N., Kiayias, A., Talviste, R., & Zacharias, T. (2017). MCMix: Anonymous messaging via secure multiparty computation. In *Proceedings of USENIX Security 2017*, pages 1217‚Äì1234, Vancouver, BC, Canada.

[3] Angel, S., & Setty, S. T. V. (2016). Unobservable communication over fully untrusted infrastructure. In *Proceedings of OSDI 2016*, pages 551‚Äì569, Savannah, GA, USA.

[4] Beaver, D. (1991). Efficient multiparty protocols using circuit randomization. In *Advances in Cryptology: Proceedings of CRYPTO 1991*, volume 576 of LNCS, pages 420‚Äì432, Santa Barbara, CA, USA.

[5] Boyle, E., Gilboa, N., & Ishai, Y. (2015). Function secret sharing. In *Advances in Cryptology: Proceedings of EUROCRYPT 2015 (Part II)*, volume 9057 of LNCS, pages 337‚Äì367, Sofia, Bulgaria.

[6] Boyle, E., Gilboa, N., & Ishai, Y. (2016). Function secret sharing: Improvements and extensions. In *Proceedings of CCS 2016*, pages 1292‚Äì1303, Vienna, Austria.

[7] Chase, M., Derler, D., Goldfeder, S., Orlandi, C., Ramacher, S., Rechberger, C., Slamanig, D., & Zaverucha, G. (2017). Post-quantum zero-knowledge and signatures from symmetric-key primitives. In *Proceedings of CCS 2017*, pages 1825‚Äì1842, Dallas, TX, USA.

[8] Cheng, R., Scott, W., Masserova, E., Zhang, I., Goyal, V., Anderson, T. E., Krishnamurthy, A., & Parno, B. (2020). Talek: Private group messaging with hidden access patterns. In *Proceedings of ACSAC 2020*, pages 84‚Äì99, Austin, TX, USA.

[9] Chor, B., Kushilevitz, E., Goldreich, O., & Sudan, M. (1998). Private information retrieval. *Journal of the ACM (JACM)*, 45(6):965‚Äì981.

[10] Corrigan-Gibbs, H., & Boneh, D. (2017). Prio: Private, robust, and scalable computation of aggregate statistics. In *Proceedings of USENIX Security 2017*, pages 259‚Äì282, Boston, MA, USA.

[11] Corrigan-Gibbs, H., Boneh, D., & Mazi√®res, D. (2015). Riposte: An anonymous messaging system handling millions of users. In *Proceedings of IEEE S&P 2015*, pages 321‚Äì338, San Jose, CA, USA.

[12] Dingledine, R., Mathewson, N., & Syverson, P. F. (2004). Tor: The second-generation onion router. In *Proceedings of USENIX Security 2004*, San Diego, CA, USA.

[13] Du, W., & Atallah, M. J. (2001). Protocols for secure remote database access with approximate matching. In *E-Commerce Security and Privacy (Part II)*, volume 2 of Advances in Information Security, pages 87‚Äì111.

[14] Eskandarian, S., Corrigan-Gibbs, H., Zaharia, M., & Boneh, D. (2021). Express: Lowering the cost of metadata-hiding communication with cryptographic privacy. In *Proceedings of USENIX Security 2021*, Vancouver, BC, Canada.

[15] Fiat, A., & Shamir, A. (1986). How to prove yourself: Practical solutions to identification and signature problems. In *Advances in Cryptology: Proceedings of CRYPTO 1986*, volume 263 of LNCS, pages 186‚Äì194, Santa Barbara, CA, USA.

[16] Giacomelli, I., Madsen, J., & Orlandi, C. (2016). ZKBoo: Faster zero-knowledge for boolean circuits. In *Proceedings of USENIX Security 2016*, pages 1069‚Äì1083, Austin, TX, USA.

[17] Gilboa, N., & Ishai, Y. (2014). Distributed point functions and their applications. In *Advances in Cryptology: Proceedings of EUROCRYPT 2014*, volume 8441 of LNCS, pages 640‚Äì658, Copenhagen, Denmark.

[18] Henry, R., & Vadapalli, A. (2019). dpf++; version 0.0.1 [computer software]. Available from: https://www.github.com/rh3nry/dpfplusplus.

[19] Ishai, Y., Kushilevitz, E., Ostrovsky, R., & Sahai, A. (2007). Zero-knowledge from secure multiparty computation. In *Proceedings of STOC 2007*, pages 21‚Äì30, San Diego, CA, USA.

[20] Katz, J., Kolesnikov, V., & Wang, X. (2018). Improved non-interactive zero knowledge with applications to post-quantum signatures. In *Proceedings of CCS 2018*, pages 525‚Äì537, Toronto, ON, Canada.

[21] Kwon, A., Corrigan-Gibbs, H., Devadas, S., & Ford, B. (2017). Atom: Horizontally scaling strong anonymity. In *Proceedings of SOSP 2017*, pages 406‚Äì422, Shanghai, China.

[22] Kwon, A., Lu, D., & Devadas, S. (2020). XRD: Scalable messaging system with cryptographic privacy. In *Proceedings of NSDI 2020*, pages 759‚Äì776, Santa Clara, CA, USA.

[23] Lazar, D., Gilad, Y., & Zeldovich, N. (2018). Karaoke: Distributed private messaging immune to passive traffic analysis. In *Proceedings of OSDI 2018*, pages 711‚Äì725, Carlsbad, CA, USA.

[24] Matyas, S. M., Meyer, C. H., & Oseas, J. (1985). Generating strong one-way functions with cryptographic algorithm. *IBM Technical Disclosure Bulletin*, 27(10A):5658‚Äì565.

[25] Tyagi, N., Gilad, Y., Leung, D., Zaharia, M., & Zeldovich, N. (2017). Stadium: A distributed metadata-private messaging system. In *Proceedings of SOSP 2017*, pages 423‚Äì440, Shanghai, China.

[26] van den Hooff, J., Lazar, D., Zaharia, M., & Zeldovich, N. (2015). Vuvuzela: Scalable private messaging resistant to traffic analysis. In *Proceedings of SOSP 2015*, Monterey, CA, USA.

### Appendix

**A. Proof of Observation 1 (from Section II-A)**

**Observation 1 (Restatement):** If a tree is rooted at a 0-node, then all of its leaves are of type 0; if it is rooted at a 1-node, then exactly one of its leaves is of type 1 and all others are of type 0.

**Proof:**
- The proof that all leaves of a tree rooted at a 0-node are of type 0 is trivial.
- The proof that a tree rooted at a 1-node has exactly one type-1 leaf with all others being of type 0 is by induction on the height \( h \) of the tree.
  - **Base case (\( h = 0 \)):** Follows immediately from the definition of a 1-node.
  - **Inductive step:** Suppose that every height-\( h \) tree with a type-1 root has exactly one type-1 leaf with all other leaves being of type 0. Given a height-\( (h + 1) \) tree with a type-1 root, there are two subtrees, each of height \( h \). By the inductive hypothesis, one of these subtrees must have a type-1 root, and the other must have a type-0 root. Therefore, the height-\( (h + 1) \) tree will have exactly one type-1 leaf, and all other leaves will be of type 0. This completes the inductive step.