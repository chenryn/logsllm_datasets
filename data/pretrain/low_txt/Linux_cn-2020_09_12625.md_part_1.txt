---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 3253
date: '2020-09-18 10:29:25'
editorchoice: false
excerpt: 失败是探索时的心跳。在尝试新事物的过程中，我们难免会多次跌倒。关键在于放弃“快速失败”的理念，转而追求更高质量的失败。
fromurl: https://www.redhat.com/en/command-line-heroes/season-2/fail-better
id: 12625
islctt: true
largepic: /data/attachment/album/202009/18/102857mf5xictmwdo7s868.jpg
permalink: /article-12625-1.html
pic: /data/attachment/album/202009/18/102857mf5xictmwdo7s868.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12641
reviewer: wxy
selector: bestony
summary: 失败是探索时的心跳。在尝试新事物的过程中，我们难免会多次跌倒。关键在于放弃“快速失败”的理念，转而追求更高质量的失败。
tags:
- 失败
thumb: false
title: 《代码英雄》第二季（4）：更好的失败
titlepic: true
translator: bestony
updated: '2020-09-18 10:29:25'
---

> **什么是《代码英雄》**
>
> 《代码英雄》是由红帽公司精心制作的原创音频播客系列，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实故事。该播客邀请了来自谷歌、NASA 等重量级企业的众多技术专家，共同探讨开源、操作系统、容器、DevOps 和混合云等领域的动人故事。

![](/data/attachment/album/202009/18/102857mf5xictmwdo7s868.jpg)

本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[第二季（4）：更好的失败](https://www.redhat.com/en/command-line-heroes/season-2/fail-better)的[音频脚本](https://dts.podtrac.com/redirect.mp3/audio.simplecast.com/fce7f007.mp3)。

**导语：** 失败是探索时的心跳。在尝试新事物的过程中，我们难免会多次跌倒。关键在于放弃“快速失败”的理念，转而追求更高质量的失败。

本期节目关注科技领域如何拥抱失败。以好奇和开放的态度对待失败是过程的一部分。Jennifer Petoff 分享了 Google 如何建立一种从失败中学习和改进的文化；Jessica Rudder 展示了视角转变如何带来意想不到的成功；Jen Krieger 则介绍了敏捷框架如何帮助我们为失败做计划。

失败未必是终点。它可以是迈向更伟大事物的一步。

**00:00:00 - Saron Yitbarek:**
如果你没有听过这个笑话 —— 两个工程师在编译他们的代码。新手举手喊道：“哇，我的代码编译好了！”；老手则眯着眼睛喃喃道：“唔，我的代码居然编译好了”。

**00:00:18:**
如果你已经编程一段时间，你对失败的看法可能会有所不同。那些过去无法解决的问题，如今开始看起来像一个更大的解决方案中的正常组成部分。那些你曾经称之为“失败”的东西，现在看起来像是变相的成功。你开始希望你的代码无法通过编译，这样你可以一路调试、修订和重构这些代码。

**00:00:37:**
你正在收听的是红帽公司的原创播客节目《代码英雄》。我是主持人 Saron Yitbarek。

老实说，“快速失败”这个口号经常被用来作为通往成功的捷径。但如果我们不是告诉彼此加快速度并快速失败，而是鼓励彼此更好地失败呢？

**00:01:20:**
《代码英雄》的第二季将介绍开发工作中的真实体验：“当我们生活在代码中，到底感觉如何？又是如何变化的？”这也是为什么我们要用一整集的时间来讨论失败，因为正是这些失败时刻促使我们适应它。我们称之为“失败”的东西，是进化的心跳，而开源开发者正在拥抱这种进化。当然，这说起来容易做起来难。

**00:01:59:**
想象一下，如果一首全新的莎士比亚十四行诗被发现了。网络上会兴起一阵热潮，每个人都想去搜索它。但这时，有个小小的设计缺陷导致了所谓的“文件描述符耗尽”。这会造成一连串的失败。突然之间，Google 上的“莎士比亚”搜索崩溃了，并持续了一个多小时。

**00:02:33:**
现在，你丢掉了 12 亿次搜索查询。这是一场莎士比亚式的悲剧，所有的一切，在网站可靠性工程师（SRE）四处补救的同时上演。

**00:02:45 - 配音:**
还有你吗，布鲁特？那就倒下吧，凯撒！

**00:02:54 - Saron Yitbarek:**
不好意思，我打断一下。但上面说的这个莎士比亚事件其实并不存在。事实上，这是一本书《SRE：Google 运维解密》中一系列灾难性场景的一部分。从这本书中学到的重要一课就是你必须超越灾难本身。这就是我的意思。

**00:03:13:**
在这个莎士比亚的例子中，当流量被集中到一个被牺牲的单独集群时，这个死亡查询问题就解决了。这为团队赢得了扩充容量的足够时间。但你不能就此止步。尽管这个问题很糟糕，但解决它并不是真正的重点所在。因为失败不一定以痛苦告终，失败也可以引导你的学习。

**00:03:38 - Jennifer Petoff:**
嗨，我是 Jennifer Petoff。

**00:03:41 - Saron Yitbarek:**
Jennifer 在谷歌工作。她是 SRE 团队的高级项目经理，领导谷歌的全球 SRE 教育计划，她也是这本描述了莎士比亚场景的书的作者之一。对于 Jennifer 来说，钻研这样的灾难才能使事情变得更好，但前提是你需要有一个拥抱错误和意外的文化。

**00:04:08:**
所以，让我们再拿莎士比亚举例子。有一个直接的办法，减少负载可以让你免于这种连锁故障。但真正的工作将在一切恢复正常之后开始，重点在于事后分析报告。

**00:04:25 - Jennifer Petoff:**
事件解决后，我们会创建一个事后分析报告。谷歌的每一个事件都需要有一个事后分析和相应的行动项目，以防止将来再次出现问题，以及更有效地检测和缓解未来出现类似事件或整类问题的可能。

**00:04:42 - Saron Yitbarek:**
这是一个关键的区别。不仅仅是解决这个特定事件，而是看到这个事件告诉你的一系列问题。真正有效的事后分析，不只是告诉你昨天哪里出现了问题。而是让你对今天所做的工作以及对未来的计划有深刻的见解。这种更广泛的思想，灌输了对所有这些事故和失败的尊重，使它们成为日常工作生活中至关重要的一部分。

**00:05:12 - Jennifer Petoff:**
所以，一个真正好的事后分析不仅仅要解决手头的单个问题，它还解决了整个问题。事后分析的重点是什么地方作对了，什么地方做错了，在何处幸运地解决了问题，以及可以采取哪些优先行动来确保这种情况不会再次发生。如果你不采取行动，历史必将重演。

**00:05:32 - Saron Yitbarek:**
在谷歌，人们关注的是无责任的事后分析，这就造成了根本的不同。如果出了问题而没有人要责怪，那么每个人都可以诚实地挖掘错误，真正地从错误中吸取教训，而不必掩盖任何线索，也不必争吵。这些无责任的事后分析已经成为谷歌文化的一个重要组成部分，其结果是一个不必害怕失败的工作场所。这是一种正常情况。

---