# 优化后的文本

## 1. 攻击分析
设 \( z = 1 \) 且 \( z \neq j' \)，则可以使用公共模攻击来计算 \( x \mod N \)，并提供 \( (x, ej') \) 作为强QR-RSA问题的解。

### 挑战
一旦A决定查询阶段1结束，B选择他要针对的目标 \( (\hat{i}, \hat{j}) \)。如果 \( \hat{i} \neq i' \) 或 \( \hat{j} \neq j' \)，B终止。否则，B响应一个随机值 \( K \)。

### 查询阶段2
B对查询的响应与查询阶段1相同。

### 猜测
A输出一个猜测 \( b' \) 来猜测 \( b \)。B终止。A的猜测被忽略。然而，为了进行任何有用的操作，A应该向随机预言机发出 \( sf(\hat{i})F^{2E\hat{j}} \mod N \)（即“特殊”的 \( w \)），以获取正确的 \( k_{\hat{i},\hat{j}} \)，这有助于计算 \( x \) 和 \( e_{\hat{j}} \)。

如果A在破解我们的方案时具有不可忽略的优势 \( \varepsilon \)，那么B可以以 \( (n-t)l \) 的概率解决强QR-RSA问题，这也是不可忽略的。模拟成功当且仅当 \( (\hat{i}, \hat{j}) = (i', j') \)。

## 2. 可行性评估
我们的时间基密钥管理方案涉及三种实体：传感器节点（执行NodeKeyDer）、移动用户（执行UserKeyDer）和控制中心（执行Setup、NodeKeyGen和UserKeyGen）。控制中心可能是一台功能强大的服务器，而因数分解 \( N = pq \) 的知识可以通过中国剩余定理显著加速其操作，例如计算 \( k_{i,*} = sf(i)F^2 \mod N \)。移动用户通常配备有PDA或智能手机等设备。尽管它们比服务器弱，但用户密钥导出对他们来说并不昂贵。传感器节点是计算能力非常有限的一个。在本节中，我们将评估节点 \( i \) 在时间周期 \( j \) 中导出会话密钥 \( k_{i,j} = H(k_{i,*}^{E_j} \mod N) \) 的处理成本。注意，传感器节点的计算或存储成本主要受 \( l \) 影响，这表明我们的方案适用于大规模WSN。

### 2.1 案例研究设置
我们假设最多可破坏2000个传感器节点中的100个，并且控制中心为用户订阅分配了总共4096个时间段。即，我们将 \( n = 2000 \)，\( t = 100 \) 和 \( l = 4096 \) 作为案例研究。\( l = 4096 \) 对于大多数实际应用来说已经足够大。例如，如果每个时间段对应一个小时，则 \( l = 4096 \) 对应大约半年；如果每个时间段对应一天，则 \( l = 4096 \) 对应超过11年。我们采用长度为1024位的安全RSA模数，这是目前推荐的安全级别。

由于 \( H(·) \) 是一个单向哈希函数（通常是成本效益高的），计算 \( k_{i,j} = H(k_{i,*}^{E_j} \mod N) \) 的主要工作负载可能是计算乘积 \( E_j = \prod_{z=1; z \neq j} e_z \) 关于 \( 1 \leq j \leq l \) 并计算模指数 \( k_{i,*}^{E_j} \mod N \)。这可能在计算上非常昂贵。然而，我们将展示如何通过更有效的“分治”方法来进行计算。让我们从如何获得 \( E_j \) 中的每个 \( e_z \) 开始。

### 2.2 素数枚举
在我们的案例研究中，传感器节点需要在 \( n \) 之后的 \( l = 4096 \) 个素数（\( e_1, e_2, \ldots, e_{4096} \)）来导出会话密钥。在 \( n = 2000 \) 内有303个素数（即2, 3, 5, ..., 1997, 1999），因此传感器节点实际上需要知道前 \( l' = 4399 \) 个素数。为了获得所有这些 \( l' \) 个素数，传感器节点可以选择使用具有 \( O((d \log d)(\log \log d)) \) 时间复杂度和 \( O(d) \) 空间复杂度的埃拉托斯特尼筛法（其中 \( d \) 是要筛选的整数总数，根据素数定理 \( l' \approx d / \ln d \)）。即使存在一个分段版本的埃拉托斯特尼筛法，其时间复杂度为 \( O(d) \) 且空间复杂度为 \( O(\sqrt{d \log \log d / \log d}) \)，这对传感器节点来说仍然是非常昂贵的，特别是当 \( d \)（实际上是 \( l' \)）变得非常大时。因此，让传感器节点自行枚举素数是不利的（如果不是不切实际的话）。

因此，我们建议将 \( n \) 之后的 \( l \) 个素数（\( e_1 = 2003, e_2 = 2011, \ldots, e_{4096} = 42071 \)）预先加载到每个传感器节点的内存中，特别是只读内存（ROM）。换句话说，传感器节点只需要在一个静态表中查找即可立即获得任何 \( l = 4096 \) 个素数。存储所有 \( l = 4096 \) 个素数占用59738位 = 7468字节（忽略少量编码开销），这对于当前一代的传感器节点来说是完全可以接受的。

### 2.3 计算/存储权衡
例如，MICAz节点具有128K字节的ROM，但只有4K字节的RAM。产品详细数据表可在 http://www.openautomation.net/uploadsproductos/micaz_datasheet.pdf 下载（截至2010年12月28日）。

我们知道所有 \( l = 4096 \) 个素数的乘积长度为57581位，而第一个大于 \( n = 2000 \) 的素数 \( e_1 \) 为11位长。为了计算特定 \( j \) 的 \( k_{i,*}^{E_j} \mod N \)，传感器节点需要计算 \( k_{i,*} \) 的幂，该幂的长度可达57570位（当 \( |e_j| = 11 \) 时）。这提醒我们在低成本、资源受限的传感器节点上可能存在实现挑战。我们通过分别进行指数运算，并借助键树结构来优化性能，从而解决了这个问题，这种方法用存储换来了计算效率。

这种权衡如图2所示，其中 \( l = 8 \) 作为一个简单的示例。除了素数枚举外，每个传感器节点还预先加载了某些预计算的密钥形式 \( k_{i,a \sim b} = sf(i)F^{2 \prod_{z \in \{1, \ldots, l\} \setminus \{a, \ldots, b\}} e_z} \mod N \)，这样节点可以更有效地计算特定时间段的会话密钥。当节点额外预先加载了 \( 2^r \) 个预计算密钥时，它只需要将其中一个密钥提高到 \( (l - 2^r + 1) \) 个 \( e_i \) 的乘积的幂。假设传感器节点的处理器只能执行指数长度不超过 \( |e_l| \) 位的有效指数运算，那么计算可以实现为 \( (l - 2^r + 1) \) 个这样的有效指数运算。

在我们的案例研究中，\( l = 4096 \)，我们得到了如图3所示的权衡图。可以看到，当 \( r = 1 \) 时，节点必须存储总长度为 \( 2^1 \times 1024/8 = 256 \) 字节的密钥。当 \( r = 2 \) 时，节点需要存储长度为 \( 2^2 \times 1024/8 = 512 \) 字节的密钥，依此类推。对于计算成本，我们考虑最重的情况：将一个预加载的密钥提高到最长的 \( (l - 2^r + 1) \) 个素数的乘积的幂。例如，假设传感器节点预先加载了 \( 2^8 \) 个预计算密钥（即 \( 2^r \times |N|/8 = 256 \times 1024/8 = 32K \) 字节），则需要计算一个密钥的231位指数幂。根据最近对传感器节点的评估 [14]，这种指数运算即使在软件实现中也可以在一分钟内完成（硬件实现则不到一秒钟）。这对传感器节点来说似乎是一个合理的平衡。类似地，可以根据不同的应用条件适当权衡存储和计算。此外，注意图2所示的键树可以在节点 \( i \) 计算不同 \( j \) 的 \( k_{i,j} \) 时重复使用，因此某些中间结果可以缓存以提高计算效率。例如，在计算 \( k_{i,1} \) 时缓存 \( k_{i,1 \sim 2} \) 可以使下一个时间段内的 \( k_{i,2} \) 计算只需一次小指数幂运算。

最后，我们想强调的是，虽然存储大小看起来是对时间段总数的对数级，但它仍然独立于节点总数，正如我们在第2.2节中讨论的那样。

## 3. 结论
经济研究表明，基于订阅的支付模型比基于流量的支付模型对服务提供商更有利可图。我们设想了一种无线传感器网络中的数据提供服务商业模式，其中采用了基于时间的访问控制来保护数据机密性。作为访问控制机制的一个实例，我们提出了SMS-SED，这是一种安全的(t, n)-门限时间基密钥管理系统，用于安全的移动订阅传感器加密数据。该方案的主要特点在于，控制中心可以根据用户的订阅时间段将数据访问权限委托给移动用户。我们的密码构造即使在对手能够捕获多达t个传感器节点并泄露存储的节点密钥的情况下也能实现可证明的安全性。我们展示了我们的系统对当前一代无线传感器网络是实用的，并对传感器节点的处理开销和存储成本进行了权衡研究。系统的高效率来自于快速处理常见情况和支持适当安全级别的设计原则。

## 4. 致谢
这项工作得到了新加坡A*STAR项目SEDS-0721330047和中国国家自然科学基金资助项目60970138的支持。

## 5. 参考文献
[1] A. O. L. Atkin and D. J. Bernstein. Prime sieves using binary quadratic forms. Mathematics of Computation, 73(246):1023-1030, 2004.

[2] Y. Bakos and E. Brynjolfsson. Bundling information goods: Pricing, profits, and efficiency. Management Science, 45(12):1613-1630, 1999.

[3] N. Barić and B. Pfitzmann. Collision-free accumulators and fail-stop signature schemes without trees. In Advances in Cryptology - EUROCRYPT’97, volume 1233 of LNCS, pages 480-494, 1997.

[4] M. Bellare, P. Rogaway, and D. Wagner. The EAX mode of operation. In Fast Software Encryption (FSE’04), volume 3017 of LNCS, pages 389-407, 2004.

[5] J. Benaloh and M. de Mare. Efficient broadcast time-stamping. Technical Report TR-MCS-92-1, Clarkson University Department of Mathematics and Computer Science, April 1992.

[6] H. Chan, A. Perrig, and D. X. Song. Random key predistribution schemes for sensor networks. In IEEE Symposium on Security and Privacy (S&P’03), pages 197-213, 2003.

[7] H.-Y. Chien. Efficient time-bound hierarchical key assignment scheme. IEEE Transactions on Knowledge and Data Engineering (TKDE), 16(10):1301-1304, 2004.

[8] S. S. M. Chow, M. H. Au, and W. Susilo. Server-aided signatures verification secure against collusion attack. In 6th ACM Symposium on Information, Computer and Communications Security (AsiaCCS’11), 2011. To appear.

[9] S. S. M. Chow, J. K. Liu, and J. Zhou. Identity-based online/offline key encapsulation and encryption. In 6th ACM Symposium on Information, Computer and Communications Security (AsiaCCS’11), 2011. To appear.

[10] R. Cramer and V. Shoup. Signature schemes based on the strong RSA assumption. In 6th ACM Conference on Computer and Communications Security (CCS’99), pages 46-51, 1999.

[11] W. Du, J. Deng, Y. S. Han, S. Chen, and P. K. Varshney. A key management scheme for wireless sensor networks using deployment knowledge. In IEEE International Conference on Computer Communications (INFOCOM’04), pages 597-607, 2004.

[12] W. Du, J. Deng, Y. S. Han, P. K. Varshney, J. Katz, and A. Khalili. A pairwise key predistribution scheme for wireless sensor networks. ACM Transactions on Information and System Security (TISSEC), 8(2):228-258, May 2005.

[13] L. Eschenauer and V. D. Gligor. A key-management scheme for distributed sensor networks. In 9th ACM Conference on Computer and Communications Security (CCS’02), pages 41-47, 2002.

[14] W. Hu, P. I. Corke, W. C. Shih, and L. Overs. secFleck: A public key technology platform for wireless sensor networks. In 6th European Conference on Wireless Sensor Networks (EWSN’09), volume 5432 of LNCS, pages 296-311, 2009.

[15] D. Liu and P. Ning. Improving key predistribution with deployment knowledge in static sensor networks. ACM Transactions on Sensor Networks (TOSN), 1(2):204-239, Nov 2005.

[16] D. Liu, P. Ning, and R. Li. Establishing pairwise keys in distributed sensor networks. ACM Transactions on Information and System Security (TISSEC), 8(1):41-77, Feb 2005.

[17] D. Micciancio. The RSA group is pseudo-free. In Advances in Cryptology - EUROCRYPT’05, volume 3494 of LNCS, pages 387-403, 2005.

[18] A. Mohaisen, D. Nyang, and K. Lee. Hierarchical grid-based pairwise key pre-distribution in wireless sensor networks. Intl. Journal of Network Security (IJNSEC), 8(1):282-292, 2009.

[19] B. Parno, A. Perrig, and V. Gligor. Distributed detection of node replication attacks in sensor networks. In IEEE Symposium on Security and Privacy (S&P’05), pages 49-63, 2005.

[20] R. Poovendran, C. Wang, and S. Roy, editors. Secure Localization and Time Synchronization for Wireless Sensor and Ad Hoc Networks. Advances in Information Security. Springer, 2006.

[21] P. Pritchard. Linear prime-number sieves: A family tree. Science of Computer Programming, 9(1):17-35, 1987.

[22] V. Shoup. Practical threshold signatures. In Advances in Cryptology - EUROCRYPT’00, volume 1807 of LNCS, pages 207-220, 2000.

[23] W.-G. Tzeng. A time-bound cryptographic key assignment scheme for access control in a hierarchy. IEEE Transactions on Knowledge and Data Engineering (TKDE), 14(1):182-188, 2002.

[24] D. Yao, N. Fazio, Y. Dodis, and A. Lysyanskaya. ID-based encryption for complex hierarchies with applications to forward security and broadcast encryption. In 11th ACM Conference on Computer and Communications Security (CCS’04), pages 354-363, 2004.

[25] X. Yi. Security of Chien’s efficient time-bound hierarchical key assignment scheme. IEEE Transactions on Knowledge and Data Engineering (TKDE), 17(9):1298-1299, 2005.

[26] X. Yi and Y. Ye. Security of Tzeng’s time-bound key assignment scheme for access control in a hierarchy. IEEE Transactions on Knowledge and Data Engineering (TKDE), 15(4):1054-1055, 2003.

[27] W. T. Zhu, R. H. Deng, J. Zhou, and F. Bao. Time-bound hierarchical key assignment: An overview. IEICE Transactions on Information and Systems, E93-D(5):1044-1052, 2010.