### Experimental Setup and Results

We conducted experiments with a fraction \(\alpha\) of the dataset, choosing \(\alpha = 0.25, 0.5, 0.75, 1\), which translates to \(n = \alpha \times 2l\). For each value of \(n\) and for both the uniform and Enron datasets, we ran 25 experiments.

#### Performance Comparison

**Figure 7** illustrates the performance results of Popa et al.'s scheme and our proposed scheme for an expansion factor \(\lambda = 3\). In the Local Area Network (LAN) setting, our scheme achieved an average performance improvement of 63% and up to 77% in the best case for the Enron dataset. Under a uniform distribution, the performance improvement was even higher, with an average of 72% and up to 81% in the best case.

In the Wide Area Network (WAN) setting (\(\lambda = 3\)), the performance improvement was more pronounced. As shown in **Figure 8**, we observed an average improvement of 83% and up to 95% in the best case for the Enron dataset. For the uniform dataset, the average improvement was 83%, with up to 88% in the best case.

#### Impact of Updates

To evaluate the impact of updates on our algorithm, we compared the performance of database insert operations with expansion factors \(\lambda = 2\) and \(\lambda = 3\). **Figures 9 and 10** depict the database insert performance for input sizes of \(l\) and \(\alpha \times 2l\) elements in both LAN and WAN settings. Our scheme showed significantly faster performance, particularly in the WAN setting, where the impact of network latency is more pronounced.

### Discussion

Our experimental results confirm the following observations:
1. **Performance Superiority**: Our hypothesis that our proposed scheme outperforms Popa et al.'s scheme has not been falsified. The results clearly show that our scheme consistently outperforms Popa et al.'s scheme across both network settings and datasets.
2. **Efficiency and Integration**: Our scheme requires minimal interaction with the database, primarily for the database insert operation itself. In contrast, Popa et al.'s scheme involves multiple message exchanges to traverse the balanced tree of the encryption server, leading to increased communication overhead and network latency, especially in the WAN setting.
3. **Update Frequency**: Popa et al.'s scheme requires regular database updates, whereas our scheme performs updates rarely or not at all. This difference is evident in the measured times, with our scheme showing a significant performance gain.
4. **Data Distribution Impact**: The performance difference between the two datasets is more pronounced for Popa et al.'s scheme. The Enron dataset, with fewer distinct values, results in lower database insert times due to a shallower balanced tree, leading to fewer rounds and smaller update sizes compared to a uniformly distributed dataset.

### Conclusions

We present a novel order-preserving encryption scheme that achieves optimal average communication complexity of \(O(n)\) and is provably ideal-secure. Our database benchmark demonstrates that our scheme significantly outperforms previous work, with a performance gain of up to 95%. Experimental results also indicate that our scheme works well with real-world datasets and provides better diffusion between plaintexts and ciphertexts. Additionally, our scheme efficiently integrates with adjustable encryption, making it the best-suited scheme for outsourced, encrypted databases based on order-preserving encryption.

### References

[1] CipherCloud. <http://www.ciphercloud.com/>

[2] Vaultive. <http://www.vaultive.com/>

[3] Enron Email Dataset. <https://www.cs.cmu.edu/~enron/enron_mail_20110402.tgz>

[4] D. Abadi, S. Madden, and M. Ferreira. Integrating compression and execution in column-oriented database systems. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2006.

[5] D. Agrawal, A. El Abbadi, F. Emekçi, and A. Metwally. Database management as a service: challenges and opportunities. In Proceedings of the 25th International Conference on Data Engineering, ICDE, 2009.

[6] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu. Order preserving encryption for numeric data. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2004.

[7] C. Binnig, S. Hildenbrand, and F. Färber. Dictionary-based order-preserving string compression for main memory column stores. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2009.

[8] A. Boldyreva, N. Chenette, Y. Lee, and A. O’Neill. Order-preserving symmetric encryption. In Proceedings of the 28th International Conference on Advances in Cryptology, EUROCRYPT, 2009.

[9] A. Boldyreva, N. Chenette, and A. O’Neill. Order-preserving encryption revisited: improved security analysis and alternative solutions. In Proceedings of the 31st International Conference on Advances in Cryptology, CRYPTO, 2011.

[10] D. Boneh and B. Waters. Conjunctive, subset, and range queries on encrypted data. In Proceedings of the 4th Theory of Cryptography Conference, TCC, 2007.

[11] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M.-C. Rosu, and M. Steiner. Highly-scalable searchable symmetric encryption with support for boolean queries. In Proceedings of the 33rd International Conference on Advances in Cryptology, CRYPTO, 2013.

[12] F. Färber, N. May, W. Lehner, P. Große, I. Müller, H. Rauhe, and J. Dees. The SAP HANA database – an architecture overview. IEEE Data Engineering Bulletin, 35(1):28–33, 2012.

[13] C. Gentry. Fully homomorphic encryption using ideal lattices. In Proceedings of the Symposium on Theory of Computing, STOC, 2009.

[14] S. Goldwasser, Y. T. Kalai, R. A. Popa, V. Vaikuntanathan, and N. Zeldovich. Reusable garbled circuits and succinct functional encryption. In Proceedings of the Symposium on Theory of Computing, STOC, 2013.

[15] H. Hacigümüş, B. R. Iyer, C. Li, and S. Mehrotra. Executing SQL over encrypted data in the database-service-provider model. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2002.

[16] H. Hacigümüş, S. Mehrotra, and B. R. Iyer. Providing database as a service. In Proceedings of the 18th International Conference on Data Engineering, ICDE, 2002.

[17] S. Hildenbrand, D. Kossmann, T. Sanamrad, C. Binnig, F. Färber, and J. Wöhler. Query processing on encrypted data in the cloud. Technical Report 735, Department of Computer Science, ETH Zurich, 2011.

[18] M. Islam, M. Kuzu, and M. Kantarcioglu. Access pattern disclosure on searchable encryption: ramifications, attack, and mitigation. In Proceedings of the 19th Network and Distributed System Security Symposium, NDSS, 2012.

[19] H. Kadhem, T. Amagasa, and H. Kitagawa. MV-OPES: multivalued-order preserving encryption scheme: a novel scheme for encrypting integer values to many different values. IEICE Transactions on Information and Systems, E93.D:2520–2533, 2010.

[20] H. Kadhem, T. Amagasa, and H. Kitagawa. A secure and efficient order preserving encryption scheme for relational databases. In Proceedings of the International Conference on Knowledge Management and Information Sharing, KMIS, 2010.

[21] J. Katz, A. Sahai, and B. Waters. Predicate encryption supporting disjunctions, polynomial equations, and inner products. In Advances in Cryptology, EUROCRYPT, 2008.

[22] B. Klimt and Y. Yang. The Enron corpus: a new dataset for email classification research. In Proceedings of the 15th European Conference on Machine Learning, ECML, 2004.

[23] S. Lee, T.-J. Park, D. Lee, T. Nam, and S. Kim. Chaotic order preserving encryption for efficient and secure queries on databases. IEICE Transactions on Information and Systems, E92.D:2207–2217, 2009.

[24] C. Liu, L. Zhu, M. Wang, and Y.-a. Tan. Search pattern leakage in searchable encryption: attacks and new constructions. Technical Report 163, IACR Cryptology ePrint Archive, 2013.

[25] D. Liu and S. Wang. Programmable order-preserving secure index for encrypted database query. In Proceedings of the 5th International Conference on Cloud Computing, CLOUD, 2012.

[26] D. Liu and S. Wang. Nonlinear order preserving index for encrypted database query in service cloud environments. Concurrency and Computation: Practice and Experience, 25(13):1967–1984, 2013.

[27] Y. Lu. Privacy-preserving logarithmic-time search on encrypted data in cloud. In Proceedings of the 19th Network and Distributed System Security Symposium, NDSS, 2012.

[28] G. Özsoyoglu, D. A. Singer, and S. S. Chung. Anti-tamper databases: querying encrypted databases. In Proceedings of the 17th Conference on Data and Application Security, DBSEC, 2003.

[29] P. Paillier. Public-key cryptosystems based on composite degree residuosity classes. In Proceedings of the 18th International Conference on Advances in Cryptology, EUROCRYPT, 1999.

[30] H. Plattner. A common database approach for OLTP and OLAP using an in-memory column database. In Proceedings of the ACM International Conference on Management of Data, SIGMOD, 2009.

[31] S. C. Pohlig and M. E. Hellman. An improved algorithm for computing logarithms over GF(p) and its cryptographic significance. IEEE Transactions on Information Theory, 24(1):106–110, 1978.

[32] R. A. Popa, F. H. Li, and N. Zeldovich. An ideal-security protocol for order-preserving encoding. In 34th IEEE Symposium on Security and Privacy, S&P, 2013.

[33] R. A. Popa, C. M. S. Redfield, N. Zeldovich, and H. Balakrishnan. CryptDB: protecting confidentiality with encrypted query processing. In Proceedings of the 23rd ACM Symposium on Operating Systems Principles, SOSP, 2011.

[34] B. Reed. The height of a random binary search tree. Journal of the ACM, 50(3):306–332, 2003.

[35] E. Shi, J. Bethencourt, H. T.-H. Chan, D. X. Song, and A. Perrig. Multi-dimensional range query over encrypted data. In Proceedings of the 2007 Symposium on Security and Privacy, S&P, 2007.

[36] M. Stonebraker, D. J. Abadi, A. Batkin, X. Chen, M. Cherniack, M. Ferreira, E. Lau, A. Lin, S. Madden, E. O’Neil, P. O’Neil, A. Rasin, N. Tran, and S. Zdonik. C-Store: a column-oriented DBMS. In Proceedings of the 31st International Conference on Very Large Data Bases, VLDB, 2005.

[37] L. Xiao, O. Bastani, and I.-L. Yen. Security analysis for order preserving encryption schemes. Technical Report UTDCS-01-12, Department of Computer Science, University of Texas Dallas, 2012.

[38] L. Xiao and I.-L. Yen. A note for the ideal order-preserving encryption object and generalized order-preserving encryption. Technical Report 350, IACR Cryptology ePrint Archive, 2012.

[39] L. Xiao, I.-L. Yen, and D. T. Huynh. Extending order preserving encryption for multi-user systems. Technical Report 192, IACR Cryptology ePrint Archive, 2012.

[40] A. C.-C. Yao. Protocols for secure computations (extended abstract). In Proceedings of the 23rd Symposium on Foundations of Computer Science, FOCS, 1982.

[41] A. C.-C. Yao. How to generate and exchange secrets (extended abstract). In Proceedings of the 27th Symposium on Foundations of Computer Science, FOCS, 1986.

[42] D. H. Yum, D. S. Kim, J. S. Kim, P. J. Lee, and S. J. Hong. Order-preserving encryption for non-uniformly distributed plaintexts. In Proceedings of the 12th International Workshop on Information Security Applications, WISA, 2011.

[43] M. Zukowski, P. A. Boncz, N. Nes, and S. Héman. MonetDB/X100 - a DBMS in the CPU cache. IEEE Data Engineering Bulletin, 28(2):17–22, 2005.

[44] M. Zukowski, S. Heman, N. Nes, and P. Boncz. Super-scalar RAM-CPU cache compression. In Proceedings of the 22nd International Conference on Data Engineering, ICDE, 2006.