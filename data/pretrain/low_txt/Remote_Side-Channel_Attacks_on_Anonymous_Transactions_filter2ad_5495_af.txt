### Tracing in Zcash

In Zcash, the low volume of anonymous transactions has been shown to enable the tracing of many transactions through the use of pattern heuristics [4, 28]. These studies highlight protocol-level issues with these schemes, which are distinct from the side-channel information leakage examined in this paper.

### Side-Channel Attacks and De-Anonymization

Our side-channel attacks complement a substantial body of work on the de-anonymization of cryptocurrency transactions. Many researchers have demonstrated that analyzing Bitcoin’s public transaction graph can break users' pseudonymity [2, 24, 34, 42, 44]. In privacy-focused currencies like Zcash, common usage patterns can be exploited to link and trace certain transactions [4, 28].

### Acknowledgments

We extend our gratitude to the Zcash and Monero security teams for their professional handling of the vulnerability disclosure process, insightful discussions, and the prompt deployment of remediations. Dan Boneh's research was supported in part by the NSF, ONR, the Simons Foundation, and a Google faculty fellowship. Kenneth G. Paterson's research was partially supported by a gift from VMware.

### References

[1] Nadhem J Al Fardan and Kenneth G Paterson. Lucky Thirteen: Breaking the TLS and DTLS Record Protocols. In 2013 IEEE Symposium on Security and Privacy, pages 526–540. IEEE, 2013.

[2] Elli Androulaki, Ghassan Karame, Marc Roeschlin, Tobias Scherer, and Srdjan Capkun. Evaluating User Privacy in Bitcoin. In International Conference on Financial Cryptography and Data Security, pages 34–51. Springer, 2013.

[3] Daniel Arp, Fabian Yamaguchi, and Konrad Rieck. Torben: A Practical Side-Channel Attack for Deanonymizing Tor Communication. In Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security, pages 597–602. ACM, 2015.

[4] Alex Biryukov, Daniel Feher, and Giuseppe Vitto. Privacy Aspects and Subliminal Channels in Zcash. In ACM SIGSAC Conference on Computer and Communications Security, 2019.

[5] Nir Bitansky, Ran Canetti, Alessandro Chiesa, and Eran Tromer. From Extractable Collision Resistance to Succinct Non-Interactive Arguments of Knowledge, and Back Again. In Innovations in Theoretical Computer Science, pages 326–349, 2012.

[6] Daniel Bleichenbacher. Chosen Ciphertext Attacks Against Protocols Based on the RSA Encryption Standard PKCS#1. In Annual International Cryptology Conference, pages 1–12. Springer, 1998.

[7] Sean Bowe. Rust Crate bls12_381 v0.1.0. https://github.com/zkcrypto/bls12_381, 2019.

[8] Billy Bob Brumley and Nicola Tuveri. Remote Timing Attacks Are Still Practical. In European Symposium on Research in Computer Security, pages 355–371. Springer, 2011.

[9] David Brumley and Dan Boneh. Remote Timing Attacks Are Practical. Computer Networks, 48(5):701–716, 2005.

[10] Benedikt Bünz, Jonathan Bootle, Dan Boneh, Andrew Poelstra, Pieter Wuille, and Greg Maxwell. Bulletproofs: Short Proofs for Confidential Transactions and More. In 2018 IEEE Symposium on Security and Privacy (SP), pages 315–334. IEEE, 2018.

[11] Chainalysis. https://www.chainalysis.com/.

[12] Ciphertrace. https://www.ciphertrace.com/.

[13] Fergus Dall, Gabrielle De Micheli, Thomas Eisenbarth, Daniel Genkin, Nadia Heninger, Ahmad Moghimi, and Yuval Yarom. CacheQuote: Efficiently Recovering Long-Term Secrets of SGX EPID via Cache Attacks. IACR Transactions on Cryptographic Hardware and Embedded Systems, pages 171–191, 2018.

[14] Danny Dolev, Cynthia Dwork, and Moni Naor. Non-Malleable Cryptography. SIAM Review, 45(4):727–784, 2003.

[15] Electric Coin Company. Zcash Pull Request #2120: Experimental Feature: Remote Proving Service. https://github.com/zcash/zcash/pull/2120, 2017.

[16] Electric Coin Company. [ZIP 305] Best Practices for Hardware Wallets Supporting Sapling. https://github.com/zcash/zcash/issues/3038, 2018.

[17] Electric Coin Company. Security Announcement 2019-09-24. https://z.cash/support/security/announcements/security-announcement-2019-09-24/, 2019.

[18] Electric Coin Company. Zcash Documentation—Security Warnings—Side-Channel Attacks. https://zcash.readthedocs.io/en/latest/rtd_pages/security_warnings.html#side-channel-attacks, 2019. Revision fe830a5a.

[19] Electric Coin Company. Zcash Documentation—Tor Support in Zcash. https://zcash.readthedocs.io/en/latest/rtd_pages/tor.html, 2019. Revision fe830a5a.

[20] Electric Coin Company. Zcash Release v2.0.7-3. https://github.com/zcash/zcash/releases/tag/v2.0.7-3, 2019.

[21] Electric Coin Company. ECC Releases Resources for Building Mobile Shielded-Zcash Wallets. https://electriccoin.co/blog/ecc-releases-resources-for-building-mobile-shielded-zcash-wallets/, 2020.

[22] Electric Coin Company. Zcash Release v2.1.1. https://github.com/zcash/zcash/releases/tag/v2.1.1, 2020.

[23] Elliptic. Forensic Software. https://www.elliptic.co.

[24] Michael Fleder, Michael S Kester, and Sudeep Pillai. Bitcoin Transaction Graph Analysis. arXiv preprint arXiv:1502.01657, 2015.

[25] Jens Groth. On the Size of Pairing-Based Non-Interactive Arguments. In Annual International Conference on the Theory and Applications of Cryptographic Techniques, pages 305–326. Springer, 2016.

[26] Dominik Herrmann, Rolf Wendolsky, and Hannes Federrath. Website Fingerprinting: Attacking Popular Privacy Enhancing Technologies with the Multinomial Naïve-Bayes Classifier. In Proceedings of the 2009 ACM Workshop on Cloud Computing Security, pages 31–42. ACM, 2009.

[27] Daira Hopwood, Sean Bowe, Taylor Hornby, and Nathan Wilcox. Zcash Protocol Specification. Technical report, Electric Coin Company, 2019. Version 2019.0.1. https://github.com/zcash/zips/blob/d39ed0/protocol/protocol.pdf.

[28] George Kappos, Haaroon Yousaf, Mary Maller, and Sarah Meiklejohn. An Empirical Analysis of Anonymity in Zcash. In 27th USENIX Security Symposium, pages 463–477, 2018.

[29] Paul C Kocher. Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems. In Annual International Cryptology Conference, pages 104–113. Springer, 1996.

[30] Amrit Kumar, Clément Fischer, Shruti Tople, and Prateek Saxena. A Traceability Analysis of Monero’s Blockchain. In European Symposium on Research in Computer Security, pages 153–173. Springer, 2017.

[31] Sergio Lerner. About My New Bitcoin Vulnerability: Get Your Peer Public Addresses. https://bitslog.com/2013/01/23/new-bitcoin-vulnerability-get-your-peer-public-addresses/, 2013.

[32] Brian N Levine, Michael K Reiter, Chenxi Wang, and Matthew Wright. Timing Attacks in Low-Latency Mix Systems. In International Conference on Financial Cryptography, pages 251–265. Springer, 2004.

[33] Greg Maxwell. Confidential Transactions. https://people.xiph.org/~greg/confidential_values.txt, 2016.

[34] Sarah Meiklejohn, Marjori Pomarole, Grant Jordan, Kirill Levchenko, Damon McCoy, Geoffrey M Voelker, and Stefan Savage. A Fistful of Bitcoins: Characterizing Payments Among Men with No Names. In Proceedings of the 2013 Conference on Internet Measurement Conference, pages 127–140. ACM, 2013.

[35] Monero. Monero Pull Request #6074: Fix Info Leak When Using a Remote Daemon. https://github.com/monero-project/monero/pull/6074, 2019.

[36] Monero-Hax123. Corrupt RPC Responses from Remote Daemon Nodes Can Lead to Transaction Tracing. https://hackerone.com/reports/304770, 2018.

[37] Malte Möser, Kyle Soska, Ethan Heilman, Kevin Lee, Henry Heffan, Shashvat Srivastava, Kyle Hogan, Jason Hennessey, Andrew Miller, Arvind Narayanan, and Nicolas Christin. An Empirical Analysis of Traceability in the Monero Blockchain. Proceedings on Privacy Enhancing Technologies, 2018(3):143–163, 2018.

[38] Steven J Murdoch and George Danezis. Low-Cost Traffic Analysis of Tor. In 2005 IEEE Symposium on Security and Privacy (S&P’05), pages 183–195. IEEE, 2005.

[39] Andriy Panchenko, Lukas Niessen, Andreas Zinnen, and Thomas Engel. Website Fingerprinting in Onion Routing Based Anonymization Networks. In Proceedings of the 10th Annual ACM Workshop on Privacy in the Electronic Society, pages 103–114. ACM, 2011.

[40] Jeffrey Quesnelle. On the Linkability of Zcash Transactions. arXiv preprint arXiv:1712.01210, 2017.

[41] Charles Rackoff and Daniel R Simon. Non-Interactive Zero-Knowledge Proof of Knowledge and Chosen Ciphertext Attack. In Annual International Cryptology Conference, pages 433–444. Springer, 1991.

[42] Fergal Reid and Martin Harrigan. An Analysis of Anonymity in the Bitcoin System. In Security and Privacy in Social Networks, pages 197–223. Springer, 2013.

[43] Ronald L. Rivest, Adi Shamir, and Yael Tauman. How to Leak a Secret. In Advances in Cryptology - ASIACRYPT, pages 552–565, 2001.

[44] Dorit Ron and Adi Shamir. Quantitative Analysis of the Full Bitcoin Transaction Graph. In International Conference on Financial Cryptography and Data Security, pages 6–24. Springer, 2013.

[45] Eli Ben Sasson, Alessandro Chiesa, Christina Garman, Matthew Green, Ian Miers, Eran Tromer, and Madars Virza. Zerocash: Decentralized Anonymous Payments from Bitcoin. In 2014 IEEE Symposium on Security and Privacy, pages 459–474. IEEE, 2014.

[46] Vitaly Shmatikov and Ming-Hsiu Wang. Timing Analysis in Low-Latency Mix Networks: Attacks and Defenses. In European Symposium on Research in Computer Security, pages 18–33. Springer, 2006.

[47] Nicolas Van Saberhagen. Cryptonote v2.0, 2013.

[48] Serge Vaudenay. Security Flaws Induced by CBC Padding—Applications to SSL, IPSEC, WTLS... In International Conference on the Theory and Applications of Cryptographic Techniques, pages 534–545. Springer, 2002.

### Side-Channel Attacks on the Monero CLI Wallet

The command-line interface (CLI) for the Monero wallet behaves slightly differently compared to the RPC and GUI versions analyzed in Section 5. Consequently, the side-channel attacks applicable to the CLI wallet are also different.

The CLI wallet utilizes a Monero privacy feature known as a tracking key. In the description of blockchain scanning in Section 5.1, a user only needs "half" of her secret key (the scalar \(a\)) to check whether she is the recipient of a transaction. To compute the secret value \(x\) required to later spend the received funds involves the use of the second half of the key, the scalar \(b\). The CLI wallet keeps only the "tracking key" \(a\) in memory to determine when the user has received transactions. It then prompts the user for a password to decrypt the "spending key" \(b\). This behavior differs from the RPC and GUI wallets, which hold both keys in memory (or in a hardware wallet).

The attacks described in Section 5 do not directly apply to the CLI wallet. The CLI wallet only refreshes its copy of the memory pool of unconfirmed transactions on an explicit user prompt, so the attacks targeting unconfirmed transactions do not apply. Instead, the wallet is vulnerable to a more pernicious timing attack on block processing, especially when the wallet connects to a remote node.

Recall that the CLI wallet requires a user password to obtain the spending key. When processing new blocks, if the wallet detects that it is the payee of a transaction (using the tracking key), it displays a password prompt to the user and interrupts any further refreshes until the user responds. This interruption is trivially observable by a remote node or a network adversary, as it disrupts the flow of requests for new blocks, potentially for several seconds, minutes, or hours, depending on the user’s activity.

This attack vector has only been partially fixed. As of release v0.15.0, the CLI wallet refreshes at randomized intervals to obfuscate delays caused by an unanswered password prompt. However, as noted in Section 5.4, such a randomized defense approach is likely insufficient against a determined adversary aiming to identify the owner of a specific public key. Such an attacker can send multiple transactions to this key and obtain multiple timing measurements, averaging out the variability caused by the randomized delays between refreshes.