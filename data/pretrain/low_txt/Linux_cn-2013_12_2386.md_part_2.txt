当管理员需要连接两个IPv6网络，但仅能通过IPv4进行连接时，内核提供了IPv6-in-IPv4隧道（SIT驱动）功能。这使得IPv6数据包可以通过IPv4网络传输。

这种隧道特性同样适用于IPv6-in-IPv6和IPv4封装在IPv6中（IPv6: IP-in-IPv6隧道 (RFC2473)）。另一种隧道技术是IPv6 GRE隧道，它允许使用GRE（通用路由封装）创建隧道。

内核还支持多路由表（IPv6: Multiple Routing Tables），其中路由表包含了网络位置列表以及数据包到达目的地的路径。此外，如果启用了基于源地址或前缀的路由（IPv6: source address based routing），则可以实现更精细的流量控制。

"IPv6组播路由"(IPv6 Multicast routing)目前仍处于实验阶段，且IPv4与IPv6对组播的处理方式不同。通常情况下，组播路由会根据目标地址和源地址来转发数据包（IPv6: multicast policy routing）。启用此选项后，接口和数据包标记将被纳入决策过程。

对于IPv6 PIM-SM v2 组播路由协议的支持也已提供（IPv6: PIM-SM version 2 support）。尽管IPv4和IPv6有所不同，PIM可以在v4/v6上同时或分别激活。

启用NetLabel子系统支持后，网络包标签协议如CIPSO和RIPSO能够为数据包添加安全信息和权限。另外，开启安全标记(Security Marking)功能可以使网络通信更加安全。

时间戳功能（Time-stamping in PHY devices）增加了物理层(PHY)设备的功能，使其能够在收到或发送的消息上加上时间戳。PHY代表“物理层”。

Netfilter框架（Network packet filtering framework）可用于过滤并修改经过的网络包，充当防火墙的角色。如果数据包满足特定条件，则不会被放行。

DCCP协议（The DCCP Protocol, 数据报拥塞控制协议）允许双向单播连接，特别适合流媒体、网络电话及在线游戏等应用场景。

SCTP协议（Stream Control Transmission Protocol）位于IP之上，是一种稳定可靠的传输层协议。

RDS协议（Reliable Datagram Sockets, 可靠数据报套接字）支持Infiniband和iWARP作为RDMA（远程直接内存访问）的传输手段。此外，RDS也可通过TCP进行传输。

TIPC协议（Transparent Inter Process Communication）用于集群内部节点间的高效通讯，使一组计算机像单一系统一样工作。

ATM（Asynchronous Transfer Mode, 异步传输模式）采用固定大小的数据包，支持经典IP over ATM，以便于与连接至ATM网络的系统通信。

ICMP主机不可达错误消息禁用选项(Do NOT send ICMP if no neighbor)有助于避免因重新验证而导致的ATMARP表项丢失问题。

LANE（LAN Emulation, 局域网仿真）功能模拟了ATM网络上的局域网服务；而MPOA（Multi-Protocol Over ATM）则允许ATM设备跨子网边界建立连接。

L2TP（Layer Two Tunneling Protocol, 二层隧道协议）使得虚拟私有网络(VPNs)能够透明地传输应用层数据。

802.1d以太网桥接功能使得Linux系统可以作为网络中的桥梁，连接两个或多个网络段。IGMP/MLD探听机制允许以太网桥根据组播负载选择性地转发流量，从而减少不必要的带宽消耗。

802.1Q VLAN支持允许在以太网上创建VLAN接口。GVRP（GARP VLAN Registration Protocol）和MVRP（Multiple VLAN Registration Protocol）进一步增强了VLAN管理能力。

DECnet支持由Digital公司开发，是一种既安全又稳定的网络协议。启用DECnet路由器支持后，用户可构建基于Linux的DECnet路由解决方案。

最后，建议在网络关键环境中启用LLC type 2支持（ANSI/IEEE 802.2 LLC type 2 Support），因为它允许多个协议在同一网络设备上共存，并确保良好的互操作性。

在未来的文章中，我们将继续探讨更多可配置的网络设置选项。