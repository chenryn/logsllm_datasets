### Resolution Timing and Browser Security

Many techniques that rely on resolution timing have been disabled or restricted in major browsers to mitigate potential security risks.

### GPU-Based Attacks

#### Website Fingerprinting via Shared Memory
Lee et al. [25] proposed exploiting the shared memory within the GPU for website fingerprinting. Frigo et al. [10] executed several side-channel attacks from a mobile GPU, but these attacks require timing primitives that have been removed in recent browser updates.

#### Register Leakage and Memory Allocation
He et al. [19] uncovered a register leakage within Intel GPUs and exploited it to identify websites. Naghibijouybari et al. [37] utilized GPU memory allocation APIs within CUDA or OpenGL to track memory allocations and fingerprint websites. However, their approach did not explore ARM integrated GPUs or execution from a JavaScript environment; instead, they employed a spy program that ran as a native process with full access to CUDA/OpenGL.

#### Cache-Based Side-Channel Attacks
Karimi et al. [22] proposed a side-channel attack against an ARM SoC GPU, extracting AES keys by exploiting cache behaviors. However, this attack requires a long execution time and a stable system that does not run other tasks. Additionally, the study was not conducted from a JavaScript perspective.

### Conclusion

This paper investigates whether the new ARM DynamIQ system design, particularly the inclusion of a shared last-level cache between all CPU cores and accelerators, poses a security threat to individuals. We examine information leakage in the context of a website fingerprinting attack, demonstrating that a cache occupancy side channel can be constructed to reliably fingerprint user website activities. Our findings reveal this security threat on Android, iOS, and MacOS, exploring how the channel responds to different browser environments and proposing enhancements over previous works. Furthermore, we unveil an accelerator-based website fingerprinting channel, showing that the SoC GPU can be exploited in a contention-based side channel from JavaScript. Our evaluation results indicate that both channels can achieve high website fingerprinting accuracy on different browsers in Android, iOS, and MacOS systems in both open and closed world scenarios.

### Table 5: 1D Convolutional Neural Network Configuration

| Layer | Operation | Kernel Size | Input |
|-------|-----------|-------------|-------|
| 1     | Convolution | 10000x1    | -     |
| 2     | MaxPool   | 8           | -     |
| 3     | Convolution | 256x8      | -     |
| 4     | MaxPool   | 8           | -     |
| 5     | Convolution | 256x8      | -     |
| 6     | MaxPool   | 8           | -     |
| 7     | Flatten   | -           | -     |
| 8     | Dropout   | 0.2         | -     |
| 9     | Dense     | Number of Classes | - |

### Acknowledgments

We would like to thank the anonymous reviewers for their insightful and constructive comments, which helped us to improve the quality of this paper. This work was supported in part by the National Science Foundation (NSF) grants DGE-1821744 and CNS-2054657 and the Office of Navy Research (ONR) grant N00014-20-1-2153.

### References

[1] appium [n. d.]. Appium. https://github.com/appium/appium.
[2] M. Bazm, T. Sautereau, M. Lacoste, M. Sudholt, and J. Menaud. 2018. Cache-based side-channel attacks detection through Intel Cache Monitoring Technology and Hardware Performance Counters. In Third International Conference on Fog and Mobile Edge Computing.
[3] Erik Bosman, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida. 2016. Dedup Est Machina: Memory Deduplication as an Advanced Exploitation Vector. In IEEE Symposium on Security and Privacy (SP).
[4] Xiang Cai, Xin Cheng Zhang, Brijesh Joshi, and Rob Johnson. 2012. Touching from a distance: Website fingerprinting attacks and defenses. In Computer and Communications Security (CCS).
[5] Qi Alfred Chen, Zhiyun Qian, and Z. Morley Mao. 2014. Peeking into Your App without Actually Seeing It: UI State Inference and Novel Android Attacks. In 23rd USENIX Security Symposium (USENIX Security 14).
[6] David Cock, Qian Ge, Toby Murray, and Gernot Heiser. 2014. The last mile: An empirical study of timing channels on seL4. In Computer and Communications Security (CCS).
[7] Patrick Cronin and Chengmo Yang. 2019. A Fetching Tale: Covert Communication with the Hardware Prefetcher. In IEEE International Symposium on Hardware Oriented Security and Trust (HOST).
[8] Angus Dempster, Daniel F Schmidt, and Geoffrey I Webb. 2020. MINIROCKET: A Very Fast (Almost) Deterministic Transform for Time Series Classification. arXiv:2012.08791 (2020).
[9] Wenrui Diao, Xiangyu Liu, Zhou Li, and Kehuan Zhang. 2016. No Pardon for the Interruption: New Inference Attacks on Android Through Interrupt Timing Analysis. In 2016 IEEE Symposium on Security and Privacy (SP). 414–432. https://doi.org/10.1109/SP.2016.32
[10] Pietro Frigo, Cristiano Giuffrida, Herbert Bos, and Kaveh Razavi. 2018. Grand Pwning Unit: Accelerating Microarchitectural Attacks with the GPU. In IEEE Symposium on Security and Privacy (SP).
[11] Andrei Frumusanu. 2019. The Apple iPhone 11, 11 Pro & 11 Pro Max Review: Performance, Battery, & Camera Elevated. https://www.anandtech.com/show/14892/the-apple-iphone-11-pro-and-max-review/3.
[12] Andrei Frumusanu. 2020. The 2020 Mac Mini Unleashed: Putting Apple Silicon M1 To The Test. https://www.anandtech.com/show/16252/mac-mini-apple-m1-tested.
[13] Daniel Genkin, Lev Pachmanov, Eran Tromer, and Yuval Yarom. 2018. Drive-By Key-Extraction Cache Attacks from Portable Code. In Applied Cryptography and Network Security, Bart Preneel and Frederik Vercauteren (Eds.). Springer International Publishing.
[14] Xun Gong, Nikita Borisov, Negar Kiyavash, and Nabil Schear. 2012. Website Detection Using Remote Traffic Analysis. In Privacy Enhancing Technologies Symposium (PETS).
[15] gpudirect 2021. GPUDirect. https://developer.nvidia.com/gpudirect.
[16] gpujs [n. d.]. GPU.js. https://github.com/gpujs/gpu.js.
[17] Daniel Gruss, David Bidner, and Stefan Mangard. 2015. Practical Memory Deduplication Attacks in Sandboxed Javascript. In Computer Security – ESORICS 2015, Günther Pernul, Peter Y A Ryan, and Edgar Weippl (Eds.). Springer International Publishing.
[18] Berk Gulmezoglu, Andreas Zankl, M. Caner Tol, Saad Islam, Thomas Eisenbarth, and Berk Sunar. 2019. Undermining User Privacy on Mobile Devices Using AI. In Proceedings of the 2019 ACM Asia Conference on Computer and Communications Security (Asia CCS ’19). Association for Computing Machinery.
[19] Wenjian HE, Wei Zhang, Sharad Sinha, and Sanjeev Das. 2020. IGPU Leak: An Information Leakage Vulnerability on Intel Integrated GPU. In 2020 25th Asia and South Pacific Design Automation Conference (ASP-DAC).
[20] Andrew Hintz. 2002. Fingerprinting websites using traffic analysis. In Workshop on Privacy Enhancing Technologies.
[21] Suman Jana and Vitaly Shmatikov. 2012. Memento: Learning Secrets from Process Footprints. In IEEE Symposium on Security and Privacy (SP).
[22] Elmira Karimi, Zhen Hang Jiang, Yunsi Fei, and David Kaeli. 2018. A Timing Side-Channel Attack on a Mobile GPU. In IEEE 36th International Conference on Computer Design (ICCD).
[23] Paul Kocher, Jann Horn, Anders Fogh, Daniel Genkin, Daniel Gruss, Werner Haas, Mike Hamburg, Moritz Lipp, Stefan Mangard, Thomas Prescher, Michael Schwarz, and Yuval Yarom. 2019. Spectre Attacks: Exploiting Speculative Execution. In 40th IEEE Symposium on Security and Privacy (S&P).
[24] Andy Kong. 2020. Accessing the iPhone Accelerometer with Javascript in iOS 14 and 13. https://kongmunist.medium.com/accessing-the-iphone-accelerometer-with-javascript-in-ios-14-and-13-e146d18bb175.
[25] Sangho Lee, Youngsok Kim, Jangwoo Kim, and Jong Kim. 2014. Stealing Webpages Rendered on Your Browser by Exploiting GPU Vulnerabilities. In IEEE Symposium on Security and Privacy.
[26] Pavel Lifshits, Roni Forte, Yedid Hoshen, Matt Halpern, Manuel Philipose, Mohit Tiwari, and Mark Silberstein. 2018. Power to peep-all: Inference attacks by malicious batteries on mobile devices. Proceedings on Privacy Enhancing Technologies (2018).
[27] Chia-Chi Lin, Hongyang Li, Xiao-yong Zhou, and XiaoFeng Wang. 2014. Screenmilker: How to Milk Your Android Screen for Secrets. In 21st Annual Network and Distributed System Security Symposium, NDSS.
[28] Moritz Lipp, Daniel Gruss, Raphael Spreitzer, Clémentine Maurice, and Stefan Mangard. 2016. ARMageddon: Cache Attacks on Mobile Devices. In 25th USENIX Security Symposium (USENIX Security. USENIX Association.
[29] Moritz Lipp, Michael Schwarz, Daniel Gruss, Thomas Prescher, Werner Haas, Anders Fogh, Jann Horn, Stefan Mangard, Paul Kocher, Daniel Genkin, Yuval Yarom, and Mike Hamburg. 2018. Meltdown: Reading Kernel Memory from User Space. In 27th USENIX Security Symposium (USENIX Security 18). USENIX Association, Baltimore, MD, 973–990. https://www.usenix.org/conference/usenixsecurity18/presentation/lipp
[30] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, and Ruby B. Lee. 2015. Last-Level Cache Side-Channel Attacks are Practical. In 2015 IEEE Symposium on Security and Privacy.
[31] Arm Ltd. [n. d.]. big.LITTLE. https://www.arm.com/why-arm/technologies/big-little.
[32] ARM Ltd. [n. d.]. Cache Stashing. https://developer.arm.com/documentation/100453/0401/functional-description/l3-cache/cache-stashing.
[33] ARM Ltd. [n. d.]. Cortex A-55. https://developer.arm.com/ip-products/processors/cortex-a/cortex-a55.
[34] Arm Ltd. [n. d.]. DynamIQ. https://www.arm.com/why-arm/technologies/dynamiq.
[35] ARM Ltd. [n. d.]. L3 Cache Allocation Policy. https://developer.arm.com/documentation/100453/0002/functional-description/l3-cache/l3-cache-allocation-policy.
[36] Nikolay Matyunin, Yujue Wang, Tolga Arul, Kristian Kullmann, Jakub Szefer, and Stefan Katzenbeisser. 2019. MagneticSpy: Exploiting Magnetometer in Mobile Devices for Website and Application Fingerprinting. In Proceedings of the 18th ACM Workshop on Privacy in the Electronic Society. Association for Computing Machinery.
[37] Hoda Naghibijouybari, Ajaya Neupane, Zhiyun Qian, and Nael Abu-Ghazaleh. 2018. Rendered Insecure: GPU Side Channel Attacks Are Practical. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security. Association for Computing Machinery.
[38] Howard Oakley. 2021. How M1 Macs feel faster than Intel models: it’s about QoS. https://eclecticlight.co/2021/05/17/how-m1-macs-feel-faster-than-intel-models-its-about-qos/.
[39] Yossef Oren, Vasileios P. Kemerlis, Simha Sethumadhavan, and Angelos D. Keromytis. 2015. The Spy in the Sandbox: Practical Cache Attacks in JavaScript and Their Implications. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security. Association for Computing Machinery.
[40] Dag Arne Osvik, Adi Shamir, and Eran Tromer. 2006. Cache Attacks and Countermeasures: The Case of AES. In Topics in Cryptology – CT-RSA 2006, David Pointcheval (Ed.). Springer Berlin Heidelberg.
[41] Andriy Panchenko, Fabian Lanze, Andreas Zinnen, Martin Henze, Jan Pennekamp, Klaus Wehrle, and Thomas Engel. 2016. Website Fingerprinting at Internet Scale. In Network and Distributed Systems Symposium (NDSS).
[42] Filip Pizlo. 2018. What Spectre and Meltdown Mean For WebKit. https://webkit.org/blog/8048/what-spectre-and-meltdown-mean-for-webkit/.
[43] Vera Rimmer, Davy Preuveneers, Marc Juarez, Tom Van Goethem, and Wouter Joosen. 2018. Automated website fingerprinting through deep learning. In Network and Distributed Systems Symposium (NDSS).
[44] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. 2009. Hey, you, get off of my cloud: exploring information leakage in third-party compute clouds. In Computer and Communications Security (CCS).
[45] Michael Schwarz, Moritz Lipp, and Daniel Gruss. 2018. JavaScript Zero: Real JavaScript and Zero Side-Channel Attacks. In Network and Distributed System Security Symposium.
[46] Michael Schwarz, Clémentine Maurice, Daniel Gruss, and Stefan Mangard. 2017. Fantastic Timers and Where to Find Them: High-Resolution Microarchitectural Attacks in JavaScript. In Financial Cryptography and Data Security, Aggelos Kiayias (Ed.). Springer International Publishing.
[47] selenium [n. d.]. Selenium. https://github.com/SeleniumHQ/selenium.
[48] sensor [n. d.]. Sensor - Web APIs: MDN. https://developer.mozilla.org/en-US/docs/Web/API/Sensor.
[49] Anatoly Shusterman, Ayush Agarwal, Sioli O’Connell, Daniel Genkin, Yossi Oren, and Yuval Yarom. 2021. Prime+Probe 1, JavaScript 0: Overcoming Browser-based Side-Channel Defenses. In 30th USENIX Security Symposium (USENIX Security).
[50] Anatoly Shusterman, Lachlan Kang, Yarden Haskal, Yosef Meltser, Prateek Mittal, Yossi Oren, and Yuval Yarom. 2019. Robust Website Fingerprinting Through the Cache Occupancy Channel. In 28th USENIX Security Symposium (USENIX Security 19). https://www.usenix.org/conference/usenixsecurity19/presentation/shusterman
[51] Raphael Spreitzer, Simone Griesmayr, Thomas Korak, and Stefan Mangard. 2016. Exploiting Data-Usage Statistics for Website Fingerprinting Attacks on Android. In Proceedings of the 9th ACM Conference on Security & Privacy in Wireless and Mobile Networks (WiSec ’16).
[52] webgpu [n. d.]. Feature: WebGPU. https://www.chromestatus.com/feature/6213121689518080.
[53] Qing Yang, Paolo Gasti, Gang Zhou, Aydin Farajidavar, and Kiran S Balagani. 2016. On inferring browsing activity on smartphones via USB power analysis side-channel. IEEE Transactions on Information Forensics and Security (2016).
[54] Xiaokuan Zhang, Xueqiang Wang, Xiaolong Bai, Yinqian Zhang, and XiaoFeng Wang. 2018. OS-level Side Channels without Procfs: Exploring Cross-App Information Leakage on iOS. In 25th Annual Network and Distributed System Security Symposium, NDSS. The Internet Society.
[55] Xiaoyong Zhou, Soteris Demetriou, Dongjing He, Muhammad Naveed, Xiaorui Pan, XiaoFeng Wang, Carl A. Gunter, and Klara Nahrstedt. 2013. Identity, Location, Disease and More: Inferring Your Secrets from Android Public Resources. In Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security (CCS ’13).