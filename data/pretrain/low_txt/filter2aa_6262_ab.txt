# 杂项 Miscellaneous
- **perlbook** - Perl 书籍信息
- **perltodo** - Perl 的未来

## 查看文档
- **perldoc** - 查看 Pod 格式的 Perl 文档

## 历史记录与变更
- **perlhist** - Perl 历史记录
- **perldelta** - 自上一版本以来的变动
- **perl58delta** - Perl 5.8.0 版本的变化
- **perl573delta** - Perl 5.7.3 版本的变化
- **perl572delta** - Perl 5.7.2 版本的变化
- **perl571delta** - Perl 5.7.1 版本的变化
- **perl570delta** - Perl 5.7.0 版本的变化
- **perl561delta** - Perl 5.6.1 版本的变化
- **perl56delta** - Perl 5.6 版本的变化
- **perl5005delta** - Perl 5.005 版本的变化
- **perl5004delta** - Perl 5.004 版本的变化

## 许可证
- **perlartistic** - Perl Artistic License
- **perlgpl** - GNU General Public License

# 语言相关 Language-Specific
- **perlcn** - Perl 简体中文支持 (原文是 EUC-CN 编码)
- **perljp** - Perl 日语支持 (原文是 EUC-JP 编码)
- **perlko** - Perl 朝鲜语支持 (原文是 EUC-KR 编码)
- **perltw** - Perl 繁体中文支持 (原文是 Big5 编码)

# 平台相关 Platform-Specific
- **perlaix** - AIX 系统上的 Perl 笔记
- **perlamiga** - AmigaOS 系统上的 Perl 笔记
- **perlapollo** - Apollo DomainOS 系统上的 Perl 笔记
- **perlbeos** - BeOS 系统上的 Perl 笔记
- **perlbs2000** - POSIX-BC BS2000 系统上的 Perl 笔记
- **perlce** - WinCE 系统上的 Perl 笔记
- **perlcygwin** - Cygwin 系统上的 Perl 笔记
- **perldgux** - DG/UX 系统上的 Perl 笔记
- **perldos** - DOS 系统上的 Perl 笔记
- **perlepoc** - EPOC 系统上的 Perl 笔记
- **perlfreebsd** - FreeBSD 系统上的 Perl 笔记
- **perlhpux** - HP-UX 系统上的 Perl 笔记
- **perlhurd** - Hurd 系统上的 Perl 笔记
- **perlirix** - Irix 系统上的 Perl 笔记
- **perlmachten** - Power MachTen 系统上的 Perl 笔记
- **perlmacos** - Mac OS (Classic) 系统上的 Perl 笔记
- **perlmacosx** - Mac OS X 系统上的 Perl 笔记
- **perlmint** - MiNT 系统上的 Perl 笔记
- **perlmpeix** - MPE/iX 系统上的 Perl 笔记
- **perlnetware** - NetWare 系统上的 Perl 笔记
- **perlos2** - OS/2 系统上的 Perl 笔记
- **perlos390** - OS/390 系统上的 Perl 笔记
- **perlos400** - OS/400 系统上的 Perl 笔记
- **perlplan9** - Plan 9 系统上的 Perl 笔记
- **perlqnx** - QNX 系统上的 Perl 笔记
- **perlsolaris** - Solaris 系统上的 Perl 笔记
- **perltru64** - Tru64 系统上的 Perl 笔记
- **perluts** - UTS 系统上的 Perl 笔记
- **perlvmesa** - VM/ESA 系统上的 Perl 笔记
- **perlvms** - VMS 系统上的 Perl 笔记
- **perlvos** - Stratus VOS 系统上的 Perl 笔记
- **perlwin32** - Windows 系统上的 Perl 笔记

默认情况下，上述手册页安装在 `/usr/local/man` 目录中。此外，还有大量关于 Perl 模块的文档，默认配置会将它们安装到 `/usr/local/lib/perl5/man` 目录（或 Perl 库目录中的 `man` 子目录）。这些文档包括随 Perl 发布的标准文档和第三方文档。

你可以使用 `man(1)` 程序查看 Perl 文档，只需在配置文件中添加合适的路径，或者设置 `MANPATH` 环境变量。要查找所有 Perl 手册页的路径，可以运行以下命令：
```sh
perl -V:man.dir
```
如果路径有共同点（例如 `/usr/local/man/man1` 和 `/usr/local/man/man3`），只需将共同部分（如 `/usr/local/man`）添加到 `man(1)` 配置文件或 `MANPATH` 环境变量中。如果没有共同点，则需要全部添加。

如果以上方法无效，可以使用附带的 `perldoc` 脚本来查看模块信息，也可以寻找替代的 man 程序。

如果程序出现问题且不知道从哪里获取帮助，可以尝试使用 `-w` 选项。它会精确报告错误发生的位置。

# 描述 DESCRIPTION
Perl 是一种特别为扫描复杂文本文件优化的语言，能够从中提取有用的信息并生成结果。它也非常适用于系统管理任务。其目标是实用（易用、高效、完整），而不是精致（小、优雅、功能有限）。

Perl 结合了 C、sed、awk 和 sh 的优点，熟悉这些工具的人学习 Perl 每有任何困难。表达式语法与 C 表达式语法紧密对应。与大多数 Unix 工具不同，Perl 不限制数据的大小——只要有足够的内存，Perl 可以将整个文件视为单一字符串进行处理。递归深度是无限的，散列（有时称为关联数组）会按需增长以避免性能下降。Perl 使用高级模式匹配技术来确保快速扫描大量数据。尽管为文本扫描而优化，Perl 仍然可以处理二进制数据，并像使用散列一样使用 dbm 文件。设置了 UID 的 Perl 脚本比 C 程序更安全，因为数据流跟踪机制可以堵上许多愚蠢的安全漏洞。

如果你遇到适合 sed 或 awk 或 sh 处理的问题，但超出了这些工具的能力，或者需要更快的处理速度，而又不想用 C 编写大量代码，那么可以使用 Perl。此外，还有许多将 sed 和 awk 脚本转换为 Perl 脚本的翻译器。

自 1993 年起（参见 perlhist），Perl 5 进行了几乎完全的重写，提供了以下功能：
- 模块性和可复用性（详见 perlmod, perlmodlib, perlmodinstall）
- 可内置扩展（详见 perlembed, perlxstut, perlxs, perlcall, perlguts, xsubpp）
- 创建强大的数据类型（包括多种 DBM 实现）（详见 perltie, AnyDBM_File）
- 函数重载、自动加载和原型化（详见 perlsub）
- 复杂的数据结构嵌套和匿名函数（详见 perlreftut, perlref, perldsc, perllol）
- 面向对象编程（详见 perlobj, perlboot, perltoot, perltooc, perlbot）
- 支持轻量级进程（线程）（详见 perlthrtut, threads）
- 支持 Unicode、国际化和本地化（详见 perluniintro, perllocale, Locale::Maketext）
- 变量作用域（详见 perlsub）
- 正则表达式强化（详见 perlre, perlop）
- 强化的调试工具和交互的 Perl 环境，支持集成编辑器（详见 perldebtut, perldebug, perldebguts）
- POSIX 1003.1 兼容库（详见 POSIX）

好的，这些已经足够多了。

# 可用性 AVAILABILITY
Perl 在大多数操作系统上都可用，包括几乎所有类 Unix 平台。请参阅 perlport 中的 "Supported Platforms" 部分以查看平台列表。

# 环境 ENVIRONMENT
请参阅 perlrun。

# 作者 AUTHOR
Larry Wall，在众多人的帮助下开发了 Perl。

如果你有使用 Perl 成功的案例，并希望对那些想在项目中应用 Perl 的人有所帮助，或者只是想表达对 Larry 和 Perl 开发者的感激之情，请写信至 [地址]。

# 文件 FILES
- **@INC** - Perl 库的位置

# 参见 SEE ALSO
- **a2p** - awk 到 perl 的翻译器
- **s2p** - sed 到 perl 的翻译器

- **http://www.perl.com/** - Perl 官方主页
- **http://www.cpan.org/** - 综合 Perl 档案中心
- **http://www.perl.org/** - Perl 用户组

# 诊断 DIAGNOSTICS
`use warnings` 编译指示（以及 `-w` 选项）会产生一些有用的诊断信息。参见 perldiag 以了解所有 Perl 诊断信息的含义。`use diagnostics` 编译指示会自动将 Perl 简短的警告和错误消息转换为长格式。

编译错误将给出行号和要执行的下一个词或词的类型。（在用 `-e` 选项传递给 Perl 的脚本中，每个 `-e` 视为一行。）

设置了 UID 的脚本有额外的约束，会产生格式化的错误信息，如 "Insecure dependency"。参见 perlsec。

我们说过你一定要用 `-w` 选项了吗？

# BUGS
- `-w` 选项不是必需的。
- Perl 依赖于你的机器中操作的定义，例如类型转换、`atof()` 和使用 `sprintf()` 进行浮点输出等。
- 如果你的 stdio 在读写一个特殊流时需要 `seek` 或 `eof`，Perl 也会需要它们。（这不会发生在 `sysread()` 和 `syswrite()` 中。）
- 所有内置数据类型都没有大小限制（除了内存大小之外），但有一些限制：变量名不得超过 251 个字符。诊断信息显示的行号以短整型数保存，因此行号最大值为 65535（更大的行号通常会从头开始）。

可以将错误报告（必须包含完整的配置信息，使用 perl 源码树中的 myconfig 程序或 `perl -V` 命令获取）发送至 PI:EMAIL。如果你已成功编译 perl，`utils/` 目录中的 `perlbug` 脚本可用于邮寄错误报告。

Perl 的真正含义是 Pathologically Eclectic Rubbish Lister，但不要告诉任何人我说过它。

# 注意 NOTES
Perl 的座右铭是 "There's more than one way to do it." 至于探索有多少种方法，就留给读者自己去发现吧。

程序员应有的三种美德是懒惰（Laziness）、急躁（Impatience）和傲慢（Hubris）。原因请参见骆驼书。

# [中文版维护人]
bbbush

# [中文版最新更新]
2003.11.29

# 《中国 Linux 论坛 Man 手册翻译计划》
http://cmpp.linuxforum.net