My understanding is that the `org.neo4j.server.transaction.timeout` setting applies only to server mode. I would like to request a similar timeout feature for embedded mode, which would automatically abort any transaction that exceeds a specified duration. Ideally, this timeout could be overridden on a per-transaction basis.

Previously, we followed the recommendation from [this blog post](http://www.markhneedham.com/blog/2013/10/17/neo4j-setting-query-timeout/) to implement a query timeout. However, according to the author's update, this approach no longer works in Neo4j 2.2 and later versions. It appears that the execution guard function may have been removed. The workaround we implemented based on that blog post (which worked in earlier versions of Neo4j) no longer functions in Neo4j 2.3 and later. As a result, we currently lack a reliable method to catch and terminate long-running queries.

For comparison, PostgreSQL offers a `statement_timeout` setting, as documented [here](http://www.postgresql.org/docs/9.3/static/runtime-config-client.html), which allows for query timeouts. A similar feature in Neo4j's embedded mode would be highly beneficial.