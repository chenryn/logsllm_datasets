**A7类别并未给整张表带来任何新的内容**

如前所述，通过适当的控制验证用户输入，可以有效防止A1注入攻击、A2失效的身份验证、A3跨站脚本（XSS）、A4失效的授权、A6敏感信息泄漏以及A8跨站请求伪造（CSRF）。这些措施涵盖了检测用户输入、记录（有时）、响应乃至阻止恶意攻击。例如，登录页面可以通过限制访问尝试来缓解暴力破解攻击，这属于A2或A5的范畴；使用SQLMap进行攻击则归类于A1。如果应用程序需要补丁，则是A9涉及的问题。

**A7涵括的是应用程序，而设备通常超出了范围**

如果我们暂时接受“防护不足”这一分类，那么对于组织而言，最有效的解决方案似乎是部署入侵检测系统（IDS）、入侵防御系统（IPS）和Web应用防火墙（WAF）等设备。然而，所有这些措施都是外部设施，并非web应用本身的一部分。虽然应用程序并非孤立运行，但OWASP Top 10应更关注web应用安全，而非整个基础设施生态系统的安全性。否则，可能会在概念上产生混淆。

**不是要治标，而是要治本**

A7似乎鼓励了“用技术解决问题”的行为。行业越来越倾向于购买那些过度宣传却效果存疑的安全解决方案，如动态漏洞检测与缓解方案，这些成为了公司巨大的财务支出。这些设备本身并无好坏之分，但在使用时需谨慎评估其优缺点。我曾在一家大型企业工作，该公司选择部署WAF而不是修复web应用程序中的漏洞。当我与他们的应用程序负责人交流时，他们表示由于已有的IDS能够捕获SQL注入尝试，因此不愿修复漏洞。这是一种道德风险，因为这些设备的存在可能会抑制对潜在问题的根本解决。

除了我对OWASP Top 10涵盖范围的质疑外，这个问题还源于将传统网络安全部门的责任扩展到应用安全领域。这种做法导致了一种试图从网络/基础设施角度而不是从根源上解决问题的习惯。正因如此，我不建议将部署安全设备作为OWASP Top 10的一个独立类别。这可能会促使公司采用打包式的解决方案，而不是认真修复其他类别中提到的根本问题。在某些类别中，如A1-注入或A3-跨站脚本XSS，设备可以作为一种有用的补充手段，但不应单独列为一个类别。

我的建议是删除该类别，或将其改为关注日志记录、阻断、事件响应和审计的整体重要安全控制。这样可以填补2013版OWASP Top 10中的空白，使组织更容易聚焦执行，从而提高应用和整体安全性。

**A10-未受保护的APIs**

A10指出，“现代应用程序和API通常涉及丰富的客户端应用程序，如浏览器中的JavaScript和移动应用程序，连接到某种API（SOAP/XML、REST/JSON、RPC、GWT等）。这些API通常是不受到保护的，并且包含许多漏洞。”

安全性不足的API通常与安全性不足且GUI欠佳的web应用程序有关。越来越多的web应用程序实际上只是在浏览器中运行并访问API的客户端。试图区分API和web应用程序只会使问题更加复杂，并降低OWASP Top 10的通用性。例如，SQL注入漏洞应归类为A1还是A10？

在当前2017候选版框架中，它同时属于两者。将其划归A1是合理的，但归入A10也同样合理。其影响、缓解和优先级与A1类别紧密相关。A10类别本质上是一个API，这使得整个系统显得冗余和混乱。其他例子包括：

- 如果API不受保护，可能是A2-身份验证的问题，也可能是A4-授权的问题。
- 如果API包含已知易受攻击软件的漏洞，应归入A9。
- 如果API暴露了敏感数据，应归入A6。
- 如果API容易受到注入攻击，应归入A1。

因此，没有必要将其单独作为一个类别，相反，应在其他要求中添加API相关的讨论，以使应用程序所有者能够了解这些问题，并应用于API和富web应用程序。

如果一定要有一个替代A10的类别，可以考虑“备份和恢复的不安全或不足”。尽管这可能超出标题范畴，但强健的信息备份对于应用程序容错能力至关重要。备份问题可能导致威胁场景，甚至不需要传统的攻击者就能造成损失。一个不幸的管理员可能会擦除整个数据库或源代码，导致数百万美元的IP地址或数据丢失。这些问题通常不会成为新闻，因为它们被视为尴尬的错误，而不是黑客或敌对国家的行为。随着web应用程序处理和存储越来越多的个人数据，可靠的备份和恢复策略比以往任何时候都更加重要。

OWASP Top Ten影响开发团队中的每个角色，从需要选择安全设计组件以缓解各种漏洞的架构师，到需要编写安全代码的开发者，再到确保没有OWASP Top Ten漏洞残留的测试人员。为了您和您的团队，请参阅以下免费的OWASP资源：

- **白皮书：** 通过实践OWASP Top Ten改进您的应用安全程序
- **指南：** 通过OWASP Top Ten简化应用程序的安全与合规
- **免费在线课程：** DES 225: OWASP Top Ten的威胁及缓解方法