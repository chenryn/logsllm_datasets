# From Printer to Pwnd: Leveraging Multifunction Printers During Penetration Testing

## Introduction
- **Location**: Dayton, Ohio region
- **Experience**:
  - 18 years in IT
  - 10 years in security, including 3 years as a security penetration tester
- **Affiliation**: Member of the foofus.net team
- **Presentation History**: This is my third time presenting at Defcon. w00t!

## Agenda
1. Multifunction Printer Features
2. Multifunction Printer Security
3. Attacking Multifunction Printer Devices
4. Leveraging These Attacks During Penetration Testing
5. Development of an Automated Harvesting Tool
6. Conclusion & Questions

## Multifunction Printer Features
### Key Features
- **Scan to File**
  - Windows file server access
  - FTP server access
- **Scan to Email**
  - Email server (SMTP) access
  - Email notifications
- **LDAP Authentication Services**
  - User address books
- **System Logging**
- **Remote Functionality**
  - Backup and cloning

## Multifunction Printer Security
### Common Security Failures
1. **Initial Setup**
   - Roll it in and power it up
   - Integrate with business systems
2. **Password Management**
   - No password set
   - Factory default settings
3. **Patch Management**
   - No patch management in place

## Attacking Multifunction Printer Devices
### Motivation
- **Information Gathering**
- **Escalation of Privileges**
  - Gain access to other core systems

### Timing
- **Internet Exposure**
  - When MFPs are exposed to the internet
- **Internal Network Access**
  - Once a foothold is established in the internal network

### Methods
- **Leveraging Default Passwords**
- **Access Bypass Attacks**
- **Information Leakage Attacks**
- **Forceful Browsing Attacks**
- **Backup/Cloning Functions**
- **Passback Attacks**

## MFP Security Bypass Attacks
### Description
- The ability to bypass authentication by manipulating URL data.
- **Examples**:
  - **Toshiba**
    - `/TopAccess/Administrator/Setup/ScanToFile/List.htm` redirects to `/TopAccess/Administrator/Login/Login.htm`
    - **Bypass Attack**: `/TopAccess//Administrator/Setup/ScanToFile/List.htm`
  - **HP OfficeJet Bypass Attack**
    - [Demo]

## MFP Information Leakage Attacks
### Description
- MFP devices unintentionally exposing valuable data through web page source code.
- **Examples**:
  - **Toshiba**
  - **Canon**
  - **HP**
  - **Sharp**

### Example: Toshiba Information Leakage
- [Details and Demo]

### Example: HP Information Leakage
- [Details and Demo]

## MFP Forced Browsing Attacks
### Description
- Gaining access to web pages and files by knowing the correct URL path.
- Commonly, printers secure `.cgi`, `.htm`, and `.html` files but may allow access to other file types.

### Example: Canon Forced Browsing
- **Address Book Retrieval**
  - Valid cookie required, obtained by accessing the printer's home page.
  - Fails on devices with Product Names `ir3580` and `ir4080`.
  - **Forced Browsing URLs**:
    - `abook.ldif`
    - `abook.abk`
  - Up to 11 address books can be accessed by incrementing the index.

## MFP Passback Attacks
### Description
- Tricking the MFP device into communicating with the attacker instead of its configured services.
- **Example: LDAP Test Functions**
  - Many printers have test functions for LDAP configurations.
  - **Sharp MX Series**:
    - Supports test functions for LDAP and SMTP.
    - HTTP(s) post requests can be used to change settings.
    - If the password is left as `*******`, the stored password is used.
  - **Post Values of Interest**:
    - Server IP Address (`ggt_textbox(21)`)
    - Auth Type (`ggt_select(25)`)
    - Port Number (`ggt_hidden(30)`)

### Example: Ricoh Passback Attack
- Similar to Sharp printers, easily tricked into passing data back to the attacker.
- [Details and Demo]

## MFP Backup/Cloning
### Description
- Extracting information from backup data.
- Many MFP devices provide methods to backup and clone system configurations.
- **Example: Canon Backup Export**
  - `Usermode.umd` file export via `http://MFP/usermode.umd`
  - Contains ASCII data.
- **Xerox**
  - [Demo]

## Building an Automated Harvesting Tool: ‘PRAEDA’
### Overview
- **Name**: PRAEDA (Latin for "plunder, spoils of war, booty")
- **Purpose**: Gather information from web interfaces on printers.
- **Current Version**: Written in Perl.
- **Future Plans**:
  - Research encryption methods used by vendors (e.g., HP, Xerox).
  - Migrate code to Ruby (early stages).
  - Continue development in Perl.
  - Seeking contributors.
  - Develop modules for other network appliances.

### Current Capabilities
- **Modules**: 16
- **Supported Printers**: 39 different models (Canon, Xerox, Toshiba, Sharp, HP, Ricoh)
- **Data File (DATA_LIST)**:
  - 1st field: Sequence number
  - 2nd field: Title page
  - 3rd field: Server type
  - 4th field: Module to execute

### Dispatcher (PRAEDA.PL)
- **Syntax**: `praeda.pl TARGET_FILE TCP_PORT PROJECT_NAME OUTPUT_FILE (-ssl)`
- **Functionality**:
  - Queries printers in the target list.
  - Executes module jobs listed in the 4th column if a match is found in the data list.
  - Stores recovered data in log files or separate extract files under the project name.

## Conclusion & Questions
- **Contact Information**:
  - Deral Heiland
  - PI:EMAIL
  - PI:EMAIL
- **Praeda Beta Version 0.01.2b** available for download at [www.foofus.net](http://www.foofus.net)

Thank you for your attention!