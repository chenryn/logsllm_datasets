### Experiment and Traffic Disruption Measurement

To measure traffic disruptions due to the migration, we conducted 50 experiments. In each experiment, we injected data probes (i.e., ICMP echo requests) from each router to the five problematic destinations. Figure 13 reports the median, 5th, and 95th percentiles of the ICMP packets lost after each migration step.

### Case Study: Seamless IGP Migrations

The case study demonstrated the effectiveness of our provisioning system in performing seamless IGP migrations. By following the ordering computed by the Loop Enumeration Algorithm, we achieved zero packet loss during the migration (the few losses reported in Figure 13 can be attributed to the virtual environment). In contrast, using a naive approach of migrating routers in random order resulted in forwarding loops at step 6, which were only resolved at step 34. Consequently, the network experienced traffic losses for more than 80% of the migration process. Even when migrations are performed on a per-zone basis, an ordering algorithm is necessary because all ordering constraints are among routers within the same zone.

### Performance Evaluation

Our system also enables faster migrations compared to known methods [2, 4]. The IGP LSA Listener processes IGP messages in a few milliseconds. This performance was confirmed in a separate experiment where the Listener processed messages from a pcap file containing 204 LSAs (both OSPF and IS-IS). Over 50 runs, the monitor decoded and collected each IGP message in an average of 14 milliseconds, with a maximum of 24 milliseconds.

We evaluated the performance of the IGP State Asserter using the IS-IS and OSPF databases generated during the case study. These databases contained information about 106 directed links and 96 IP prefixes. The IGP State Asserter took approximately 40 milliseconds to assess the equivalence of the logical graph, routing stability, and the advertisement of the same set of prefixes in both IGPs. Although the code could be further optimized, the current performance is satisfactory, especially considering that the IGP Asserter does not need to be invoked more than once in the absence of network failures (see Section 4).

On average, the Configuration Manager took 8.84 seconds to push one intermediate configuration to a router. The average size of an intermediate configuration was around 38 lines. The entire migration process was completed in less than 20 minutes. In comparison, a similar real-world Geant migration took several days to complete [4].

All intermediate configurations generated in the case study are available online [33].

### Design Guidelines

In this section, we present design guidelines to facilitate the IGP migration process, ensuring that all router migration orderings are loop-free. We focus on the design of zones in hierarchical IGPs, as these migrations are often the most challenging.

#### Guideline A
For each zone \( Z \), the shortest path from each Zone Border Router (ZBR) to any destination in \( Z \) should be an intra-zone path. This guideline ensures that the next-hop function does not change for any router or destination within \( Z \), as intra-zone paths are preferred in both flat and hierarchical modes. Consequently, no loops will arise during the migration. This guideline applies only to ZBRs, as non-ZBR routers cannot use inter-zone paths if ZBRs use intra-zone paths. Establishing multiple adjacencies (e.g., L1L2 adjacencies in IS-IS) between ZBRs also helps maintain the next-hop function, although it may result in unnecessary traversal of backbone links.

#### Guideline B
For each zone \( Z \), an aggregation layer of routers should connect the ZBRs to the destinations in \( Z \) (e.g., BGP border routers or MPLS Provider Edges). Link weights should be set such that the weight of the path from any ZBR to any destination in \( Z \) is the same. This guideline ensures easy IGP migrations when route summarization is introduced or removed. By announcing aggregated prefixes with a cost equal to the highest weight among the destinations in the aggregate (as in OSPF, by default [13]), each backbone router will choose the closest ZBR in \( Z \) as the entry point for destinations in the aggregated prefix. This ensures that the next-hop function remains unchanged, eliminating the need for specific migration ordering.

### Related Work

Seamless IGP operation and maintenance have been the focus of many previous studies. For example, several protocol extensions have been proposed [34, 35, 36] to gracefully restart a routing process. However, few research efforts have specifically addressed network-wide IGP migrations.

Raza et al. [18] proposed the Graceful Network Operations (GNO) framework, which formalizes the problem of minimizing disruption (e.g., link congestion) when link weights change. They also described an algorithm to find a congestion-free ordering when several IGP weights need to be modified. While their work is conceptually similar to ours, the migration scenarios we analyzed cannot always be mapped to a reweighting problem. For instance, in hierarchical IGP configurations, both the weight of a link and the zone to which it belongs are considered in the computation of the next-hop, and a unique link weight assignment that generates the same next-hop for each router-to-destination pair may not exist.

Keralapura et al. [37] studied the problem of finding the optimal way to add nodes and links to a network to minimize disruptions. Although our techniques can be adapted to address topological changes, this problem is beyond the scope of this paper.

Chen et al. [38] described a tool for automating status acquisition and configuration changes on network devices according to rules specified by domain experts. The tool can automate the "ships-in-the-night" approach but not compute a loop-free ordering. They provided a rule of thumb to avoid problems during IGP migrations, i.e., updating edge routers before backbone ones. However, this rule does not hold in general. For example, migrating E1 before B1 in Figure 1 creates a forwarding loop in a hier2flat scenario.

Alimi et al. [39] extended the "ships-in-the-night" approach by allowing multiple configurations to run simultaneously on a router. They also described a commitment protocol to support the switch between configurations without creating forwarding loops. While promising, this technique cannot be used on current routers and may still require a commitment ordering.

Recent techniques [12, 40] have been proposed to enable the movement of virtual routers or parts of the configuration (e.g., BGP sessions) from one physical device to another. Our work differs as we aim to seamlessly change network-wide configurations.

Regarding the problem of avoiding forwarding loops in IGPs during transient states, some previous work has been done. Francois et al. [41] proposed protocol extensions that allow routers to update their FIB without creating a transient loop after a link addition or removal. Fu et al. [21] and Shi et al. [22] generalized these results by defining a loop-free FIB update ordering for any change in the forwarding plane and considering traffic congestion, respectively. However, these approaches cannot be used in practice for IGP migrations as they assume the FIB can be updated on a per-destination basis, which is not the case on current routers.

IGP migrations could also be performed using route redistribution. Although new primitives have been proposed [42], relying on a "ships-in-the-night" approach (when possible) makes the entire migration process easier and more manageable.

### Discussion

Our methodology is tailored for link-state IGP migrations and cannot be directly applied to other IGPs (e.g., distance-vector IGPs). Unlike link-state protocols, where routers have a global view of the topology and can make autonomous decisions, in distance-vector protocols, a change in the next-hop of one router can affect the visibility of other routers. This poses different challenges.

Moreover, our methodology does not consider the interactions between the changing IGP and the protocols relying on it, particularly BGP. BGP uses the IGP to discriminate among exit points and to learn how to reach the preferred exit point [43]. Migrating the underlying IGP can cause BGP routers to change their preferred exit point, leading to forwarding loops. Currently, our algorithms ensure that no loop occurs during the migration towards any internal destination of an AS. For networks using tunneling or encapsulation mechanisms like MPLS, this property is sufficient to guarantee loop-free forwarding towards inter-domain destinations. However, in the migration of a pure IP network, the exclusive presence of BGP can induce forwarding loops due to conflicting BGP decisions between updated and non-updated routers. Theoretically, our ordering algorithms can be adapted to deal with BGP-induced loops, but the problem is much more complex, requiring consideration of BGP prefix reachability, iBGP topology, and BGP dynamism. Therefore, a loop-free migration ordering for all BGP prefixes may not exist in most cases. Finding an effective technique to prevent BGP-induced loops during the migration of pure IP networks is an interesting open problem raised by this paper.

### Conclusions

Network-wide IGP migrations are a significant concern for network operators, as they can cause long-lasting forwarding loops and substantial packet losses. In this paper, we proposed a migration strategy that enables network operators to migrate an entire IGP configuration seamlessly, rapidly, and without compromising routing stability. Our strategy relies on effective techniques for computing a router migration ordering and a provisioning system to automate most of the process. These techniques include a complete, time-consuming algorithm and a heuristic. Evaluations on several ISP topologies confirmed the practical effectiveness of both the heuristic and the provisioning system.

Although we focused on link-state IGP migrations, our techniques are applicable to any migration issues involving changes in next-hops. We plan to extend our approach to support seamless migrations involving distance-vector IGPs and other routing protocols (e.g., MPLS or BGP). Our vision is that network-wide migrations could become a basic operation, enabling the seamless replacement or reconfiguration of any protocol.

### Acknowledgements

We thank Luca Cittadini, Randy Bush, Bruno Quoitin, Virginie van den Schriek, and our shepherd, Walter Willinger, for their help in improving the paper. This work was partially supported by Alcatel-Lucent. Laurent Vanbever is supported by a FRIA scholarship. Stefano Vissicchio is partially supported by ESF project 10-EuroGIGA-OP-003 GraDR and MIUR PRIN Project ALGODEEP. Pierre Francois is supported by the “Fonds National de la Recherche Scientifique,” Belgium.

### References

[1] G. G. Herrero and J. A. B. van der Ven, *Network Mergers and Migrations: Junos Design and Implementation*. Wiley Publishing, 2010.
[2] V. Gill and M. Jon, “AOL Backbone OSPF-ISIS Migration,” NANOG29 Presentation, 2003.
[3] NANOG thread, “IPv6: IS-IS or OSPFv3,” http://mailman.nanog.org/pipermail/nanog/2008-December/006194.html, 2008.
[4] “Results of the GEANT OSPF to ISIS Migration,” GEANT IPv6 Task Force Meeting, 2003.
[5] NANOG thread, “OSPF -vs- ISIS,” http://www.merit.edu/mail.archives/nanog/2005-06/msg00406.html, 2005.
[6] B. Decraene, J. L. Roux, and I. Minei, “LDP Extension for Inter-Area Label Switched Paths (LSPs),” RFC 5283 (Proposed Standard), Jul. 2008.
[7] T. M. Thomas, *OSPF Network Design Solutions, Second Edition*. Cisco Press, 2003.
[8] J.-L. L. Roux, J.-P. Vasseur, and J. Boyle, “Requirements for Inter-Area MPLS Traffic Engineering,” RFC 4105, Jun. 2005.
[9] N. Leymann, B. Decraene, C. Filsfils, M. Konstantynowicz, and D. Steinberg, “Seamless MPLS Architecture,” Internet draft, 2011.
[20] P. Francois, M. Shand, and O. Bonaventure, “Disruption-free topology reconfiguration in OSPF Networks,” in Proc. INFOCOM, 2007.
[21] J. Fu, P. Sjodin, and G. Karlsson, “Loop-free updates of forwarding tables,” Trans. on Netw. and Serv. Man., vol. 5, no. 1, pp. 22–35, 2008.
[22] L. Shi, J. Fu, and X. Fu, “Loop-free forwarding table updates with minimal link overflow,” in Proc. ICC, 2009.
[23] H. Ballani, P. Francis, T. Cao, and J. Wang, “Making routers last longer with ViAggre,” in Proc. NSDI, 2009.
[24] P. Francois, C. Filsfils, J. Evans, and O. Bonaventure, “Achieving sub-second IGP convergence in large IP networks,” Comput. Commun. Rev., vol. 35, no. 3, pp. 33–44, 2005.
[25] C. Filsfils, P. Mohapatra, J. Bettink, P. Dharwadkar, P. D. Vriendt, Y. Tsier, V. V. D. Schrieck, O. Bonaventure, and P. Francois, “BGP Prefix Independent Convergence (PIC) Technical Report,” Cisco, Tech. Rep., 2011.
[26] M. R. Garey and D. S. Johnson, *Computers and Intractability; A Guide to the Theory of NP-Completeness*. Freeman, 1990.
[27] C. Filsfils, P. Francois, M. Shand, B. Decraene, J. Uttaro, N. Leymann, and M. Horneffer, “LFA applicability in SP networks,” Internet Draft, May 2011.
[28] S. Vissicchio, L. Cittadini, M. Pizzonia, L. Vergantini, V. Mezzapesa, and M. L. Papagni, “Beyond the Best: Real-Time Non-Invasive Collection of BGP Messages,” in Proc. INM/WREN 2010, 2010.
[29] L. Vanbever, G. Pardoen, and O. Bonaventure, “Towards validated network configurations with NCGuard,” in Proc. of Internet Network Management Workshop 2008, Orlando, USA, October 2008, pp. 1–6.
[30] N. Spring, R. Mahajan, and D. Wetherall, “Measuring ISP topologies with rocketfuel,” in Proc. SIGCOMM, 2002.
[31] J. Yu, “Scalable Routing Design Principles,” RFC 2791, 2000.
[32] “GEANT Backbone Topology,” 2010, http://www.geant.net/network/networktopology/pages/home.aspx.
[33] “Seamless Network-Wide IGP Migrations,” 2011, http://inl.info.ucl.ac.be/softwares/seamless-network-migration.
[34] A. Shaikh, R. Dube, and A. Varma, “Avoiding instability during graceful shutdown of multiple OSPF routers,” Trans. on Netw., vol. 14, pp. 532–542, June 2006.
[35] J. Moy, P. Pillay-Esnault, and A. Lindem, “Graceful OSPF Restart,” RFC 3623, 2003.
[36] M. Shand and L. Ginsberg, “Restart Signaling for IS-IS,” RFC 5306, 2008.
[10] P. Templin, “Small Network Operator - Lessons Learned,” RFC 5306, 2008.
NANOG45 Presentation, 2009.
[11] “Virtual Network Operator (VNO) hosting opportunities with orbit research.” [Online]. Available: http://www.orbitresearch.co.uk/services/virtual-network-operator
[12] Y. Wang, E. Keller, B. Biskeborn, J. van der Merwe, and J. Rexford, “Virtual routers on the move: live router migration as a network-management primitive,” in Proc. SIGCOMM, 2008.
[13] Moy, J., “OSPF Version 2,” RFC 2328, 1998.
[14] Oran D., “OSI IS-IS Intra-domain Routing Protocol,” RFC 1142, 1990.
[15] L. Vanbever, S. Vissicchio, C. Pelsser, P. Francois, and O. Bonaventure, “Seamless Network-Wide IGP Migrations,” Université catholique de Louvain, Tech. Rep., June 2011, http://hdl.handle.net/2078.1/75312.
[37] R. Keralapura, C.-N. Chuah, and Y. Fan, “Optimal Strategy for Graceful Network Upgrade,” in Proc. INM, 2006.
[38] X. Chen, Z. M. Mao, and J. Van der Merwe, “PACMAN: a platform for automated and controlled network operations and configuration management,” in Proc. CONEXT, 2009.
[39] R. Alimi, Y. Wang, and Y. R. Yang, “Shadow configuration as a network management primitive,” in Proc. SIGCOMM, 2008.
[40] E. Keller, J. Rexford, and J. Van Der Merwe, “Seamless BGP migration with router grafting,” in Proc. NSDI, 2010.
[41] P. Francois and O. Bonaventure, “Avoiding transient loops during IGP Convergence in IP Networks,” in Proc. INFOCOM, 2005.
[42] F. Le, G. G. Xie, and H. Zhang, “Theory and new primitives for safely connecting routing protocol instances,” in Proc. SIGCOMM, 2010.
[16] S. Iasi, P. François, and S. Uhlig, “Forwarding deflection in multi-area OSPF,” in CoNEXT, 2005.
[17] J. Rexford, J. Wang, Z. Xiao, and Y. Zhang, “BGP Routing Stability of Popular Destinations,” in Proc. IMW, 2002.
[18] S. Raza, Y. Zhu, and C.-N. Chuah, “Graceful Network Operations,” in Proc. INFOCOM, 2009.
[19] P. Francois and O. Bonaventure, “Avoiding transient loops during the convergence of link-state routing protocols,” Trans. on Netw., vol. 15, pp. 1280–1292, December 2007.
[43] Y. Rekhter, T. Li, and S. Hares, “A Border Gateway Protocol 4 (BGP-4),” RFC 4271, 2006.
[44] T. Griffin and G. Wilfong, “On the Correctness of IBGP Configuration,” SIGCOMM Comput. Commun. Rev., vol. 32, no. 4, pp. 17–29, 2002.