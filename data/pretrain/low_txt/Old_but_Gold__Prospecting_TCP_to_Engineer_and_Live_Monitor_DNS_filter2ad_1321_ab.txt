### Overview of TCP Usage in DNS Queries

Table 1 illustrates that TCP is rarely used, accounting for less than 7% of queries for each anycast service. However, these queries represent more than a fifth of resolvers and 44% of ASes. Notably, all TCP queries originate from IP addresses that also send UDP queries.

#### AS Representation
We have TCP data for approximately 44% of all ASes (see Table 1). Although this coverage is lower than desired, the ASes we have data for account for the majority of traffic. Specifically, the top 10 DNS/TCP ASes are responsible for half of all queries, while the top 100 DNS/TCP ASes account for 78% of Service A and 75% of Service B (as shown in Fig. 2). Despite missing many ASes, we cover the prefixes in those ASes with recursive servers and account for a significant fraction of DNS traffic.

#### Traffic Coverage
Approximately 5% of all queries are TCP, originating from about 20% of all resolvers (Table 1). While this coverage is incomplete, it still provides latency information for at least 29% and up to 58% of DNS traffic, depending on the IP version and anycast service (Table 2). For full coverage, we can induce additional TCP queries when necessary, as described below.

#### Root DNS Analysis
To confirm that DNS/TCP provides coverage beyond .nl, we analyzed TCP queries at most Root DNS servers over the same period. Table 3 shows RSSAC-002 statistics from 11 of the 13 Root DNS services. The ratio of TCP traffic varies for each service (labeled "letters" from A to M) and IP version, ranging from 2.8% (A Root over IPv4) to 18.9% (J Root over IPv6). This data suggests that root servers see similar DNS/TCP rates as .nl.

#### Inducing TCP Coverage
While TCP coverage is not complete, we can achieve full coverage by actively managing traffic to induce occasional TCP queries, a common practice in web systems. The DNS specification includes the TC ("truncated") bit to indicate a truncated reply that must be retried over TCP. DNS Receiver Rate Limiting (RRL) uses this mechanism to force potential UDP-based address spoofers to resend their queries with TCP. We implemented this capability in the Knot DNS server, building on its RRL implementation. Our implementation tracks each block (/24 IPv4 prefix or /56 IPv6 prefix). When a UDP request from that block arrives, if there are insufficient TCP queries in the last hour, it returns an answer with the TC bit set with some probability. The probability and the required number of RTT observations per hour are configurable.

#### Temporal Coverage
Next, we investigate the temporal coverage provided by passive analysis of DNS/TCP. We require TCP connections to observe latency in each time period with confidence, so the traffic rate per AS determines our temporal precision. We aim for a temporal precision of 0.5 to 4 hours to support near-real-time monitoring. To evaluate the number of TCP queries per AS in a given time interval, we analyzed .nl traffic from Anycast A and B on October 15, 2019. On this day, Anycast A and B received UDP queries from approximately 37k ASes over IPv4 and 6.4k ASes over IPv6. Figure 3 shows TCP queries per hour for Anycast A. About 8.8k ASes (1.8k for IPv6) sent both UDP and TCP queries, allowing us to estimate RTTs for 33% of IPv4 ASes and 38% of IPv6 ASes. These ASes are responsible for the majority of all queries: more than 90% of IPv4 queries and more than 60% of IPv6 queries. If we only consider ASes that send at least 10k TCP queries/hour, we still account for most of the traffic.

#### Summary
TCP data provides good operational and temporal coverage. More importantly, TCP offers unique insights into IPv6 latency, which current active methods do not provide.

### DNS/UDP vs. DNS/TCP RTT

We expect round-trip times measured with DNS/TCP and DNS/UDP to be similar. To confirm this, we compared query response times using RIPE Atlas, which provides about 11k devices globally. We evaluated two large, globally distributed, production, and public DNS anycast networks: L-Root and K-Root. We measured DNS/UDP latency from probes to these root servers every 4 minutes and created DNS/TCP measurements every 8 minutes for 24 hours. We considered only probes present in both UDP and TCP measurements, resulting in 8.5k and 8.9k probes for K-Root and L-Root, respectively. Figure 4 shows a density plot of the number of RIPE Atlas observers with a given combination of mean DNS/UDP and DNS/TCP transaction times. The data shows a strong trend on the diagonal with a 1:2 UDP:TCP ratio, corresponding to TCP requiring two round trips. The correlation coefficient of median UDP and half the median TCP is 0.913 for K-Root and 0.930 for L-Root. A Studentâ€™s t-Test confirmed that the UDP mean and half the TCP mean are statistically identical with 95% confidence in 64% of the cases, suggesting that passively observed TCP RTTs often provide a good representation of DNS/UDP RTTs.

### Prioritizing Analysis

We have demonstrated that DNS/TCP can be used to determine RTTs. Operational DNS systems must serve the entire world, involving more than 42k active ASes sending DNS queries to authoritative servers. Detecting and resolving networking problems in anycast systems is labor-intensive, requiring both problem identification and resolution through new site deployments or routing changes. We use two strategies to prioritize the analysis of problems:

1. **Operational Impact**: Focus on ASes and regions with the highest traffic volumes.
2. **Temporal Variability**: Analyze ASes with significant temporal variations in RTTs to identify potential issues.

By prioritizing these areas, we can more effectively manage and resolve network issues in real-time.