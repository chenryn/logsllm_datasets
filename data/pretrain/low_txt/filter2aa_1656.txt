# Botnets Die Hard: Owned and Operated

**Authors:**
- **Aditya K. Sood**  
  - PhD Candidate at Michigan State University
  - Working with iSEC Partners
  - Founder, SecNiche Security Labs
  - Previously worked for Armorize, Coseinc, and KPMG
  - Active Speaker at Security Conferences
  - LinkedIn: [http://www.linkedin.com/in/adityaks](http://www.linkedin.com/in/adityaks)
  - Website: [http://www.secniche.org](http://www.secniche.org) | Blog: [http://secniche.blogspot.com](http://secniche.blogspot.com)
  - Twitter: [@AdityaKSood](https://twitter.com/AdityaKSood)

- **Dr. Richard J. Enbody**  
  - Associate Professor, Department of Computer Science and Engineering, Michigan State University
  - Teaching since 1987 in areas such as computer architecture, computer security, and mathematics
  - Co-Author, "The Practice of Computing using Python"
  - Patents Pending: Hardware Buffer Overflow Protection

**Disclaimer:**
This research reflects the authors' personal efforts and does not represent the views of any current or previous employers.

## Agenda
1. **Bot Spreading Mechanisms**
   - Browser Exploit Packs
   - Drive-by-Download Frameworks
   - Spreaders
   - Demonstration
2. **POST Exploitation**
   - Understanding Ruskill
   - DNS Changer in Action
   - Other System Manipulation Tactics
   - Demonstration
3. **Exploiting Browsers/HTTP**
   - Man in the Browser
   - Formgrabbing
   - Web Injects
   - Demonstration
4. **Conclusion**

## Rise of Third Generation Botnets (TGB)
- **Notable Examples:** Zeus, SpyEye, Andromeda, Smoke, NGR, Upas, etc.
- **Origins:** TGB infections began with Zeus.

## Bot Spreading Mechanisms

### Browser Exploit Packs (BEPs)
- **Overview:**
  - Automated frameworks containing browser exploits.
  - Implement the concept of Drive-by-Download attacks.
  - Exploits are bundled as unique modules.
  - Mostly written in PHP + MySQL, with PHP code obfuscated using Ion Cube encoder.
  - Captures statistics of infected machines.
  - Widely used BEPs include BlackHole, Nuclear, and Phoenix.

- **How is the exploit served?**
  - Fingerprinting the browser's environment:
    - User-Agent string parameters.
    - Plugin detection module (Java, PDF, Flash).
    - Custom JavaScripts to extract information from the infected machine.

- **Obfuscated JavaScripts in BlackHole Infections:**
  - Hides the infected domain.
  - Example: Obfuscated Script vs. Deobfuscated Script.

- **Plugin Detection Code:**
  - Real-world case studies include PDF ActiveX and PDF Plugin detection.

- **Demonstration:**
  - Live demonstration of BEP in action.

### Drive-by-Download Attacks
- **Process:**
  - Victim's browser is forced to visit an infected website.
  - IFrame redirects the browser to the BEP.
  - Exploit is served by fingerprinting the browser environment.
  - Browser is exploited using JavaScript Heap Spraying.
  - BEP silently downloads malware onto the victim's machine.

- **Drive-by-Download Frameworks:**
  - Java Drive-by Generator.

- **Demonstration:**
  - Live demonstration of a drive-by-download attack.

### Spreaders
- **USB Spreading (Upas Bot - Case Study):**
  - **Inside USB Spreader:**
    - Common technique in bot design for infecting USB devices.
    - Windows 32 Implementation:
      - Uses `RegisterDeviceNotificationW` function.
      - Can be implemented as a Windows service.
      - GUID for Raw USB Device.

  - **Plug and Play (PnP) Devices:**
    - Unique set of GUIDs.
    - Device interface GUID (required for `dbcc_classguid DEV_BROADCAST_DEVICEINTERFACE`).
    - Device class GUID (defines a wide range of devices).
    - Defines `WindowProc` to handle `WM_DEVICECHANGE` notification messages.
    - Waits for USB device and triggers device-change events (`DBT_DEVICEARRIVAL`, `DBT_DEVICEREMOVALCOMPLETE`).
    - Fetches drive letter of USB devices.

  - **On successful detection:**
    - Copies malicious executable to the USB drive.
    - Creates `autorun.inf` file in the USB root directory.
    - Applies required file attributes.

  - **Malicious .LNK File Infection:**
    - Additional method for infecting USB devices.

- **Upas Bot Network Behavior Detection:**
  - Writing signatures specific to USB infection.

- **Demonstration:**
  - Live demonstration of USB spreading.

## POST Exploitation: Subverting System Integrity

### What is Ruskill?
- **Term Origin:**
  - Coined in Russia, referring to skilled warriors in battle.
  - Used by Diablo game players to demonstrate strength and power.

- **Relation to Bots:**
  - Ruskill module demonstrates the capability of bots.
  - Removes traces of malware after a successful reboot.

### Inside Ruskill Module
- **Found in NGR (Dorkbot):**
  - Remote file downloading and execution.
  - Monitors changes performed by malicious executables.
  - Restores registry, files, and network settings to their pre-infection state.
  - Deletes the malicious executable after execution.

- **Ruskill Detecting File, DNS, and Registry Modifications:**
  - Detailed explanation and demonstration.

- **Demonstration:**
  - Live demonstration of Ruskill in action.

### Critical Problem: DNS Changer
- **Exploiting DNS Resolution:**
  - Blocks security provider websites (blacklists).
  - Redirects browsers to malicious domains.
  - Forces downloads from malicious domains.
  - Triggers chain infections for additional malware.

- **How it Works:**
  - Replaces DNS server entries with malicious IP addresses.
  - Adds rogue entries in the hosts configuration file.
  - Executes DNS amplification attacks on LAN devices.
  - Hooks DNS libraries (e.g., `DNSQuery(*)` in `dnsapi.dll`).

- **Implementation in NGR Bot:**
  - DNS Blocking and Redirection.

- **Demonstration:**
  - Live demonstration of DNS changer.

### Certificate Deletion
- **Removing Private Certificates:**
  - Example: ICE IX bot - certificate deletion module.

### Cryptovirology
- **Exploiting Built-in Windows Crypto APIs:**
  - Generates random filenames, registry keys, and DNS entries.
  - Enables encrypted communication between infected machines and C&C servers.
  - Verifies the integrity of downloaded malicious files.

- **Example:**
  - ICE IX bot - misuse of Windows Crypto API.

- **Demonstration:**
  - Live demonstration of cryptovirology in action.

## Exploiting Browsers: Data Exfiltration Over HTTP

### Downgrading Browser Security
- **Removing Protections:**
  - Internet Explorer: Tampering zone values in the registry.
  - Firefox: Manipulating entries in `user.js` file.

- **Man-in-the-Browser (MitB):**
  - Userland rootkit that exploits browser integrity.

- **Web Injects:**
  - Based on hooking browser DLL functions.
  - Injection flow: Bot injects malicious content into incoming HTTP responses.
  - Rules defined in `webinjects.txt`.
  - Information stealing through forceful injection.

- **GPH Flags:**
  - G: Injection for GET requests.
  - P: Injection for POST requests.
  - L: Grabbing content between tags.
  - H: Similar to L but excludes ripped content.

- **Real-Time Cases:**
  - Forceful cookie injection in Citibank's website.
  - HTML content injection in Bank of America and Wells Fargo webpages.

### Form Grabbing
- **Advanced Technique:**
  - Captures information from forms.
  - Based on hooking and DLL injection.
  - No real protection against malware.

- **Harvested Data:**
  - Example: Kasperskyâ€™s antivirus license key entered by the user.

- **Demonstration:**
  - Live demonstration of form grabbing.

## Conclusion
- **Botnets have become more robust and sophisticated.**
- **Significant increase in browser exploitation.**
- **HTTP used for data exfiltration.**
- **Botnets die hard.**

## Questions
- Open floor for questions.

## Thanks
- DEF CON Crew: [http://www.defcon.org](http://www.defcon.org)
- SecNiche Security Labs: [http://www.secniche.org](http://www.secniche.org) | [http://secniche.blogspot.com](http://secniche.blogspot.com)