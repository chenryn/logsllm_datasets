# Cybersecurity Threats and Exploits

## Overview of Attack Vectors

### Web-Based Attacks
- **Click Jacking**: Manipulating web pages to trick users into clicking on hidden or disguised elements.
- **Ad Injection**: Injecting advertisements into websites, often without the user's consent.
- **DDoS (Distributed Denial of Service)**: Overloading servers with traffic to make them unavailable.
- **Web Mail and Social Networks**: Exploiting vulnerabilities in popular web-based communication platforms.
- **WhatsApp Web**: Targeting the web version of WhatsApp for various attacks.
- **Crypto-Currency Mining**: Using the victim's CPU/GPU to mine cryptocurrencies.
- **Hash Cracking**: Using distributed computing to crack password hashes.
- **Distributed Scraping**: Collecting data from multiple sources using a network of compromised devices.

### Advanced Exploits
- **Attacking Non-Infected Sites**: Exploiting zero-day vulnerabilities to attack sites that are not yet infected.
- **Injecting Ads in Visited Websites**: Inserting malicious ads into websites visited by the victim.
- **Attacking Other Sites**: Expanding the attack to other websites to increase the attack surface.
- **JS CPU Cache & Spectre**: Exploiting speculative execution vulnerabilities via JavaScript.
- **Rowhammer**: Inducing bit flips in memory to gain unauthorized access.
- **0-Day on Demand**: Providing custom exploits for specific targets.
- **Insecure Routers and IoT Devices**: Attacking vulnerable routers and internal Internet of Things (IoT) devices.
- **Internal DDoS**: Overloading internal systems within the targeted network.
- **Timing Attacks on CPU Cache**: Using timing side channels to read data from the cache.
- **RAM Exploitation**: Exploiting vulnerabilities in the RAM to gain system access.
- **Client-Side Exploits**: Exploiting the client's system through various means.

### Data Harvesting and Phishing
- **Chat App Data Harvesting**: Extracting data from chat applications and using the Document Object Model (DOM) to send personalized phishing messages to the user's contacts.
- **Email Communication Extraction**: Reading previous email communications from the DOM.
- **Computation on CPU/GPU**: Utilizing the victim's CPU and GPU for complex computations.
- **DOM Access**: Gaining complete control over the DOM to execute click jacking attacks.
- **Targeting Popular Websites**: Focusing on websites with a large user base to inject ads.
- **Server Overload**: Using web-based requests (e.g., images, web sockets) to overload servers.
- **CDN Edge Server Exploitation**: Leveraging infected network caches, such as Content Delivery Network (CDN) edge servers, for DDoS attacks.
- **Timing Side Channels**: Using timing side channels to read data in the cache.
- **Memory Cell Exploits**: Exploiting memory cell charge leaks.
- **Privilege Escalation**: Using privilege escalation techniques to gain higher-level access.
- **0-Day Exploit Deployment**: Loading and launching 0-day exploits on the client's system.
- **WebRTC and JS Scanning**: Using WebRTC and JavaScript to scan and attack devices in the victim's internal network.
- **Overloading Internal Devices**: Using infected clients to overload devices in the targeted internal network.

## Requirements for Attacks

- **User Login Status**:
  - If the user is not logged in, wait until they log in.
  - If the user is logged in, show a fake login form in the DOM.
- **Authorization**: No additional requirements.
- **Transaction Confirmation**: No out-of-band transaction detail confirmation is used, or it is ignored by the user.
- **Application Open State**: The application must be open in a tab for sending phishing messages. It suffices for a browser to be open and used on different sites.
- **Hardware Protection**: Lack of hardware techniques to prevent Rowhammer attacks.
- **CSP Configuration**: Correct configuration of Content Security Policy (CSP) to ensure only trusted origins are used for remote resources like images or WebSockets.

## Evaluation of Attacks

### Confidentiality, Integrity, and Availability (CIA)
- **Confidentiality (C)**: Protecting sensitive information from unauthorized access.
- **Integrity (I)**: Ensuring the accuracy and completeness of data.
- **Availability (A)**: Ensuring that systems and data are accessible when needed.

### CSP Statistics
- **connect-src Usage**: Many websites use 'connect-src' in their CSP, but 17% use a wildcard, indicating improper configuration.
- **CSP Version**: Pie-chart showing the usage of different CSP versions, with some deprecated versions still in use.

### Recommendations
- **CSP Warnings**: Browsers should display warnings for improperly configured CSP headers.
- **Search Engine Ranking**: Major search engines could use CSP configuration as a ranking factor.
- **Subresource Integrity (SRI)**: Use SRI to check the integrity of included resources.

### Conclusion
- **Botnet Development**: Developing a botnet based on sandboxed scripts, called parasites, controlled by a remote attacker.
- **Injection Methodology**: Camouflaging malicious scripts to bypass Same-Origin Policy (SOP) restrictions.
- **Persistent Threats**: Demonstrating that sandboxed scripts can pose a persistent threat even after the victim leaves the malicious website.
- **Experimental Evaluation**: Evaluating the attack surface introduced by parasite scripts on popular websites and caches.

### Acknowledgements
- This research was funded by the German Federal Ministry of Education and Research and the Hessen State Ministry for Higher Education, Research, and Arts, with additional support from the DFG as part of project S3 within the CRC 1119 CROSSING.

### References
- [1] Alharbi, F., Chang, J., Zhou, Y., Qian, F., Qian, Z., Abu-Ghazaleh, N.: Collaborative client-side DNS cache poisoning attack. In: IEEE INFOCOM 2019-IEEE Conference on Computer Communications. pp. 1153–1161. IEEE (2019)
- [2] appliansys: CACHEBOX on Italian Cruise (2015), https://www.appliansys.com/italian-isp-caches-on-cruises-to-save-bandwidth-and-improve-connectivity/
- [3] Barth, A., Weinberger, J., Song, D.: Cross-origin JavaScript capability leaks: Detection, exploitation, and defense. In: USENIX security symposium. pp. 187–198 (2009)
- [4] Birge-Lee, H., Sun, Y., Edmundson, A., Rexford, J., Mittal, P.: Bamboozling certificate authorities with BGP. In: 27th USENIX Security Symposium (USENIX Security 18). pp. 833–849 (2018)
- [5] Brandt, M., Dai, T., Klein, A., Shulman, H., Waidner, M.: Domain Validation++ For MitM-Resilient PKI. In: Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security. pp. 2060–2076. ACM (2018)
- [6] BuiltWith: Google Analytics Usage Statistics (2019), https://trends.builtwith.com/analytics/Google-Analytics
- [7] Bursztein, E., Gourdin, B., Rydstedt, G., Boneh, D.: Bad memories (2010)
- [8] Chen, S., Ross, D., Wang, Y.M.: An analysis of browser domain-isolation bugs and a light-weight transparent defense mechanism. In: Proceedings of the 14th ACM conference on Computer and communications security. pp. 2–11 (2007)
- [9] Chen, W., Qian, Z.: Off-path TCP exploit: How wireless routers can jeopardize your secrets. In: 27th USENIX Security Symposium (USENIX Security 18). pp. 1581–1598 (2018)
- [10] Citrix: Citrix NetScaler Documentation (2019), https://docs.citrix.com/en-us/netscaler/12/getting-started-with-netscaler/secure-traffic-using-ssl.html
- [11] Dehling, F., Mengel, T., Iacono, L.L.: Rotten cellar: Security and privacy of the browser cache revisited. In: Nordic Conference on Secure IT Systems. pp. 20–36. Springer (2019)
- [12] Eskandari, S., Leoutsarakos, A., Mursch, T., Clark, J.: A first look at browser-based cryptojacking. In: 2018 IEEE European Symposium on Security and Privacy Workshops (EuroS&PW). pp. 58–66. IEEE (2018)
- [13] Gilad, Y., Herzberg, A., Shulman, H.: Off-path hacking: The illusion of challenge-response authentication. IEEE Security & Privacy 12(5), 68–77 (2013)
- [14] Gruss, D., Maurice, C., Mangard, S.: Rowhammer.js: A remote software-induced fault attack in JavaScript. In: International conference on detection of intrusions and malware, and vulnerability assessment. pp. 300–321. Springer (2016)
- [15] Herzberg, A., Shulman, H.: Security of patched DNS. In: European Symposium on Research in Computer Security. pp. 271–288. Springer (2012)
- [16] Herzberg, A., Shulman, H.: Fragmentation Considered Poisonous: or one-domain-to-rule-them-all.org. In: IEEE CNS 2013. The Conference on Communications and Network Security, Washington, D.C., U.S. IEEE (October 2013)
- [17] Herzberg, A., Shulman, H.: Socket overloading for fun and cache-poisoning. In: Proceedings of the 29th Annual Computer Security Applications Conference. pp. 189–198. ACM (2013)
- [18] Jia, Y., Chua, Z.L., Hu, H., Chen, S., Saxena, P., Liang, Z.: "The web/local" boundary is fuzzy: A security study of Chrome's process-based sandboxing. In: Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. pp. 791–804 (2016)
- [19] Klein, A., Shulman, H., Waidner, M.: Internet-wide study of DNS cache injections. In: IEEE INFOCOM 2017-IEEE Conference on Computer Communications. pp. 1–9. IEEE (2017)
- [20] Magazinius, J., Rios, B.K., Sabelfeld, A.: Polyglots: crossing origins by crossing formats. In: Proceedings of the 2013 ACM SIGSAC conference on Computer & communications security. pp. 753–764 (2013)
- [21] Man, K., Qian, Z., Wang, Z., Zheng, X., Huang, Y., Duan, H.: DNS cache poisoning attack reloaded: Revolutions with side channels. In: Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security. pp. 1337–1350 (2020)
- [22] Noack, L., Reichert, T.: Exploiting speculative execution (Spectre) via JavaScript. Advanced Microkernel Operating Systems p. 11 (2018)
- [23] Oren, Y., Kemerlis, V.P., Sethumadhavan, S., Keromytis, A.D.: The spy in the sandbox: Practical cache attacks in JavaScript and their implications. In: Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security. pp. 1406–1418 (2015)
- [24] Papadopoulos, P., Ilia, P., Polychronakis, M., Markatos, E.P., Ioannidis, S., Vasiliadis, G.: Master of web puppets: Abusing web browsers for persistent and stealthy computation. arXiv preprint arXiv:1810.00464 (2018)
- [25] Pellegrino, G., Rossow, C., Ryba, F.J., Schmidt, T.C., Wählisch, M.: Cashing out the great cannon? On browser-based DDoS attacks and economics. In: 9th USENIX Workshop on Offensive Technologies (WOOT 15) (2015)
- [26] Qian, F., Quah, K.S., Huang, J., Erman, J., Gerber, A., Mao, Z., Sen, S., Spatscheck, O.: Web caching on smartphones: ideal vs. reality. In: Proceedings of the 10th international conference on Mobile systems, applications, and services. pp. 127–140. ACM (2012)
- [27] Qian, Z., Mao, Z.M.: Off-path TCP sequence number inference attack—how firewall middleboxes reduce security. In: 2012 IEEE Symposium on Security and Privacy. pp. 347–361. IEEE (2012)
- [28] Ramanan, B.A., Drabeck, L.M., Haner, M., Nithi, N., Klein, T.E., Sawkar, C.: Cacheability analysis of HTTP traffic in an operational LTE network. In: 2013 Wireless Telecommunications Symposium (WTS). pp. 1–8. IEEE (2013)
- [29] Rogowski, R., Morton, M., Li, F., Monrose, F., Snow, K.Z., Polychronakis, M.: Revisiting browser security in the modern era: New data-only attacks and defenses. In: 2017 IEEE European Symposium on Security and Privacy (EuroS&P). pp. 366–381. IEEE (2017)
- [30] Ruderman, J.: Same origin policy for JavaScript. Mozilla Developer Network, https://developer.mozilla.org/ko/docs/Web/Security/Same-origin_policy (accessed April 13, 2017) (2009)
- [31] Rula, J.P., Newman, J., Bustamante, F.E., Kakhki, A.M., Choffnes, D.: Mile high WiFi: A first look at in-flight internet connectivity. In: Proceedings of the 2018 World Wide Web Conference. pp. 1449–1458. International World Wide Web Conferences Steering Committee (2018)
- [32] Services, A.C.: Flight Airworthiness Support Technology (2002), https://www.airbus.com/content/dam/corporate-topics/publications/fast/FAST30.pdf
- [33] Shulman, H., Waidner, M.: Fragmentation considered leaking: port inference for DNS poisoning. In: International Conference on Applied Cryptography and Network Security. pp. 531–548. Springer (2014)
- [34] Shulman, H., Waidner, M.: Towards security of internet naming infrastructure. In: European Symposium on Research in Computer Security. pp. 3–22. Springer (2015)
- [35] Shusterman, A., Kang, L., Haskal, Y., Meltser, Y., Mittal, P., Oren, Y., Yarom, Y.: Robust website fingerprinting through the cache occupancy channel. In: 28th USENIX Security Symposium (USENIX Security 19). pp. 639–656 (2019)
- [36] Stamm, S., Sterne, B., Markham, G.: Reining in the web with content security policy. In: Proceedings of the 19th international conference on World wide web. pp. 921–930 (2010)
- [37] Team, S.R., et al.: Emotet exposed: looking inside highly destructive malware. Network Security 2019(6), 6–11 (2019)
- [38] Thomas, K., Bursztein, E., Grier, C., Ho, G., Jagpal, N., Kapravelos, A., McCoy, D., Nappa, A., Paxson, V., Pearce, P., et al.: Ad injection at scale: Assessing deceptive advertisement modifications. In: 2015 IEEE Symposium on Security and Privacy. pp. 151–167. IEEE (2015)
- [39] Vallentin, M., Ben-David, Y.: Persistent browser cache poisoning (2010)
- [40] Van Kesteren, A., et al.: Cross-origin resource sharing. W3C Working Draft WD-cors-20100727, latest version available at http://www.w3.org/TR/cors (2010)
- [41] Peter Van de Venne, Director of IT, Spliethoff: Data-hungry network satellite applications (2014), https://thedigitalship.com/conferences/presentations/2014rotterdam/08 Peter Van de Venne-Director of IT-Spliethoff.pdf
- [42] Weichselbaum, L., Spagnuolo, M., Lekies, S., Janc, A.: CSP is dead, long live CSP! On the insecurity of whitelists and the future of content security policy. In: Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. pp. 1376–1387 (2016)
- [43] Zhang, K., Leng, S., He, Y., Maharjan, S., Zhang, Y.: Cooperative content caching in 5G networks with mobile edge computing. IEEE Wireless Communications 25(3), 80–87 (2018)
- [44] Zheng, X., Lu, C., Peng, J., Yang, Q., Zhou, D., Liu, B., Man, K., Hao, S., Duan, H., Qian, Z.: Poison over troubled forwarders: A cache poisoning attack targeting DNS forwarding devices. In: 29th USENIX Security Symposium (USENIX Security 20). pp. 577–593 (2020)