### Participation and Membership in the Network

To participate in the network, a user must obtain \( t + 1 \) partial signatures from different Certificate Authorities (CAs) and submit them to a combiner to generate a valid membership certificate. The system requires that at least \( n \) CAs be available at any time, where \( n \geq 3t + 1 \). This necessitates an efficient replacement scheme to substitute departing CA nodes. The framework presented in this paper does not aim to establish CAs but relies on a coordinator to manage membership.

### Related Work

#### Admission and Membership Control
In [29], the authors propose an admission and membership control mechanism for Peer-to-Peer (P2P) and Mobile Ad-hoc Networks (MANETs) using limited consensus among current peers. The approach leverages threshold cryptography, which, according to the authors, significantly increases the time required for the membership admission process.

#### Self-Organized Mobile Ad-hoc Networks
The Terminodes project [15] aims to build a self-organized mobile ad-hoc network platform. Authentication is primarily based on PGP [36]. A fundamental assumption is that all nodes have identical functionality and play equal roles, with no privileged nodes performing functions such as constraint verification or authentication on behalf of others. Nodes issue their own public-key certificates and store them locally, forming a PGP-like web-of-trust. In contrast, our framework assigns different roles to mobile nodes, and authentication is not fully decentralized.

#### Robust Membership Management
Mäki et al. [21] proposed a robust membership management framework where each ad-hoc network has a group leader that issues membership certificates to mobile nodes. This is similar to the coordinator in our framework. The leader can delegate its leadership to other mobile nodes to avoid a single point of failure. However, more delegated leaders increase the risk of compromise.

#### Resurrecting Duckling Protocol
The Resurrecting Duckling Protocol [33] is based on a master-slave relationship between mobile devices. It has been extended to cater to secure transient relationships [32]. This work complements our approach, and an integrated security framework is needed to express security policies, credential requirements, and trust relationships between autonomous devices consistently.

### Discussions and Future Work

Our approach does not seek to establish CAs in mobile ad-hoc networks. Establishing a CA does not resolve the issue of how the CA identifies and authenticates mobile users, as they do not have prior knowledge of each other. Current PKI models require users to show proof of identification before the CA can issue a public-key certificate. In a mobile environment, it is impractical for each user to physically prove their identity to the CA. Instead, we leverage existing security solutions where users already possess various certificates issued by their respective CAs and Attribute Authorities (AAs) in the wired environment. By using a well-defined doctrine, all participants have a common understanding of the admission policies and can thus have expectations about the attributes of other users in the community. We prefer broadcasting a membership list at regular intervals rather than issuing individual membership certificates, which need to be revoked. For small and dynamic communities, this appears more efficient than using certificate revocation lists.

Acting as a coordinator consumes substantial computational resources, and there is no direct benefit for a participant to take on this role. The coordinator role is introduced to provide security and coordination in communities where most devices lack the computational resources for complex cryptographic operations. Without a coordinator, the community would either not exist or exist without any form of security. The motivation for becoming a coordinator is linked to the need for the community to exist, possibly due to the coordinator's interest in obtaining information or specialized services from other devices, or because of a broader interest in collaboration, such as disaster-relief operations or business meetings. Adding micro-payments to the framework could provide financial incentives for the coordinator role, but this aspect has not been thoroughly investigated yet.

During emulations, we observed that an ad-hoc community could be partitioned, with a community instance splitting into two. This occurs when a group of participants moves out of the communication range of the coordinator and reconstructs the community with a new coordinator. While this may seem problematic, we argue that it is not, as a doctrine can instantiate multiple communities with different participants. Provided the community establishment constraints are met, a new community instance can be created even if an existing community uses the same doctrine.

Currently, the broadcast of the membership list requires extensive use of digital signatures. We are investigating ways to eliminate this need through the use of TESLA [25]. Ensuring that all entities behave according to specified policies in a distributed system remains an open problem. In our framework, the coordinator enforces User Role Assignment (URA) policies and community constraints, while each participant enforces obligation and authorization policies related to their role. Detecting non-compliant behavior through monitoring interactions is one approach we are exploring. For example, if the coordinator admits users without appropriate credentials, or if a service provider denies access to a user who has the right to use the service, these indicate policy violations. Continuous monitoring, however, requires significant cooperation among participants to detect anomalies.

### Conclusions

In this paper, we present the concept of a community as a representation of an ad-hoc network. We define a community as a set of users who meet well-defined characteristics and a set of policies governing their interactions. We advocate using a community doctrine that specifies policies in terms of roles and can be instantiated within the appropriate context. Users are assigned to roles subject to the constraints specified in the doctrine. This approach offers three advantages: First, it is well-suited for autonomous mobile devices, requiring minimal processing to instantiate a community and avoiding the need for negotiation. Second, it allows additional information, such as CA keys, to be conveyed as part of the doctrine, provided the doctrine issuer is trusted. Third, it builds trust between community participants as they have knowledge of all the policies applying to other participants and can thus have expectations regarding their behavior.

We describe a set of security protocols to manage the evolution of the community in terms of its membership. We rely on a coordinator node with high processing capabilities to avoid redundant computations. Although this implies a certain degree of trust in the coordinator, other community members can randomly verify its actions. Simulations in a mobile environment have allowed us to identify cases where this model is best applied by evaluating the stability of the community as a function of participant mobility.

Finally, the proposed framework can be generalized and applied to other areas, such as peer-to-peer networks and the establishment of virtual organizations between different companies in wired networks.

### Acknowledgements

We gratefully acknowledge financial support from the EPSRC for the AEDUS research grant GR/R95715/01 and from the EU FP6 TrustCOM Project No. 01945. We also thank our colleagues Naranker Dulay, Dan Chalmers, Leonidas Lymberopoulos, and Nilufer Tuptuk for their valuable comments and suggestions.

### References

[1] Oxford Advanced Learner’s Dictionary. Oxford University Press, December 1998.
[2] Y. Amir et al. Transis: A Communication System for High Availability. In 22nd IEEE Fault-Tolerant Computing Symposium (FTCS), July 1992.
[3] M. Bartel et al. XML-Signature Syntax and Processing, 2002.
[4] K. P. Birman. The Process Group Approach to Reliable Distributed Computing. Communications of the ACM, 36(12):37–53, 1993.
[5] K. P. Birman et al. Lightweight Causal and Atomic Group Multicast. ACM Trans. on Computer Systems, 9(3):272–314, 1991.
[6] K. P. Birman and T. A. Joseph. Exploiting Virtual Synchrony in Distributed Systems. ACM Operating Systems Review, 21(5):123–138, 1987.
[7] L. Breslau et al. Advances in Network Simulation. IEEE Computer, 33(5):59–67, May 2000.
[8] A. Cohen. The Symbolic Construction of Community. Tavistock, London, 1985.
[9] Collins. Collins English Dictionary. Collins, 2000.
[10] N. Damianou et al. The Ponder Policy Specification Language. In 2nd Int. Workshop on Policies for Distributed Systems and Networks (Policy’01), Bristol, U.K, 2001.
[11] D. Ferraiolo and R. Kuhn. Role-Based Access Controls. In 15th National Computer Security Conference. NIST, 1992.
[12] T. C. Group. Trusted Computing Platform Alliance (TCPA) Main Specification, 2003.
[13] Y. Hu et al. Ariadne: A Secure On-demand Routing Protocol for Ad Hoc Networks. In 8th ACM International Conference on Mobile Computing and Networking, September 2002.
[14] Y. Hu et al. SEAD: Secure Efficient Distance Vector Routing in Mobile Wireless Ad-hoc Networks. In 4th IEEE Workshop on Mobile Computing Systems and Applications (WMCSA ’02), pages 3–13, June 2002.
[15] J. P. Hubaux et al. The Quest for Security in Mobile Ad Hoc Networks. In ACM Symp. on Mobile Ad Hoc Networking and Computing (MobiHOC), October 2001.
[16] D. Johnson and D. Maltz. Dynamic Source Routing in Ad Hoc Wireless Networks. In Mobile Computing, volume 353. Kluwer Academic Publishers, 1996.
[17] D. R. Kuhn. Mutual Exclusion of Roles as a Means of Implementing Separation of Duty in Role-Based Access Control Systems. In Second ACM Workshop on Role-Based Access Control (RBAC 97), pages 23–30, 1997.
[18] M. Kumar and B. A. Shirazi. PICO: A Middleware Framework for Pervasive Computing. IEEE Pervasive Computing, 2(3):72–79, 2003.
[19] D. Lee and H. Newby. The Problem of Sociology: An Introduction to the Discipline. Unwin Hyman, London, 1983.
[20] C. Malloth et al. Phoenix: A Toolkit for Building Fault-Tolerant, Distributed Applications in Large Scale. In Workshop on Parallel and Distributed Platforms in Industrial Products, October 1995.
[21] S. Mäki et al. Robust Membership Management for Ad-hoc Groups. In The 5th Nordic Workshop on Secure IT Systems (NORSEC 2000), Reykjavik, Iceland, 2000.
[22] N. H. Minsky and V. Ungureanu. Law-Governed Interaction: A Coordination and Control Mechanism for Heterogeneous Distributed Systems. ACM Trans. on Software Engineering and Methodology, 9(3):273–305, 2000.
[23] C. Perkins. Ad-hoc On-demand Distance Vector Routing. In MILCOM ’97 panel on Ad Hoc Networks, November 1997.
[24] A. Perrig et al. SPINS: Security Protocols for Sensor Networks. Wireless Networks, 8(5), Sept. 2002.
[25] V. Renesse et al. Horus: A Flexible Group Communication System. Communications of ACM, 39(4):76–83, 1996.
[26] R. L. Rivest and B. Lampson. SDSI – A Simple Distributed Security Infrastructure. CRYPTO’96, 1996.
[27] R. Sandhu and E. Coyne. Role-Based Access Control Models. IEEE Computer, 29(8):38–47, 1996.
[28] N. Saxena et al. Admission Control in Peer-to-Peer: Design and Performance Evaluation. In 1st ACM Workshop on Security of Ad-hoc and Sensor Networks (SASN), Oct 2003.
[29] D. Shands et al. Secure Virtual Enclaves: Supporting Coalition Use of Distributed Application Technologies. ACM Trans. on Information and System Security, 4(2), May 2001.
[30] M. Smith. Community. Encyclopedia of Informal Education, 2001.
[31] F. Stajano. The Resurrecting Duckling – What Next? In The 8th Int. Workshop on Security Protocols, 2000.
[32] F. Stajano and R. Anderson. The Resurrecting Duckling: Security Issues for Ad-hoc Wireless Networks. In The 7th Int. Workshop on Security Protocols, 1999.
[33] Y. Zhang and W. Lee. An Integrated Environment for Testing Mobile Ad-Hoc Networks. In 3rd ACM Symp. on Mobile Ad Hoc Networking and Computing (MobiHoc), June 2002.
[34] L. Zhou and Z. J. Haas. Securing Ad-Hoc Networks. IEEE Network Magazine, 13(6), November/December 1999.
[35] P. Zimmermann. The Official PGP User’s Guide. MIT Press, 1995.