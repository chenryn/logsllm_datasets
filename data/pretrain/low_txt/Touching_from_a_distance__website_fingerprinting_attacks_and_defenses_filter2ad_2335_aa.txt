# Title: Touching from a Distance: Website Fingerprinting Attacks and Defenses

## Authors:
- Xiang Cai, Stony Brook University
- Xin Cheng Zhang, Stony Brook University
- Brijesh Joshi, Stony Brook University
- Rob Johnson, Stony Brook University

## Abstract
We present a novel web page fingerprinting attack that can defeat several recently proposed defenses against traffic analysis attacks, including the application-level defenses HTTPOS [15] and randomized pipelining over Tor [18]. Our attack was able to guess which of 100 web pages a victim was visiting with at least 50% accuracy, and in some cases, over 90% accuracy. This attack is based on a simple model of network behavior and outperforms previously proposed ad hoc attacks. We also developed a website fingerprinting attack that can identify whether a victim is visiting a particular website with over 90% accuracy in our experiments.

Our results strongly suggest that ad hoc defenses against traffic analysis are unlikely to succeed. Consequently, we describe a defense scheme that provides provable security properties, albeit with potentially higher overheads.

## Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—Security and protection

## Keywords
Anonymity, website fingerprinting attacks

## 1. Introduction
Web browsing privacy mechanisms, such as SSL, Tor, and encrypting tunnels, hide the content of data transferred but do not obscure the size, direction, and timing of packets transmitted between clients and remote servers. In a web page fingerprinting attack, an adversary attempts to use this information to identify the web page a victim is visiting.

Previous research has shown that web page fingerprinting attacks are possible against many privacy services, including IPSec tunnels, SSH tunnels, and Tor [21, 10, 17, 6, 13]. As a result, researchers have proposed several defenses, primarily aimed at hiding packet size information. For example, Tor packs all data into 512-byte cells, while other mechanisms pad packets in various ways (e.g., padding to 2k bytes or to the MTU). Wright et al. proposed traffic morphing, which pads and fragments packets so that the resulting distribution of packet sizes appears to be from a different web page [26]. Dyer et al. showed that these schemes are vulnerable [6].

Recently, researchers have proposed defenses based on manipulating the sequence and structure of HTTP requests generated by the browser. HTTPOS, published at NDSS 2011, manipulates TCP MSS and window size parameters to obscure packet sizes and includes several HTTP-specific mechanisms [15]. For example, HTTPOS can split individual HTTP requests into multiple partial requests, issue extra HTTP requests as cover traffic, and use pipelining to execute requests concurrently, obscuring the exact order of requests. Similarly, the Tor project has released a version of Firefox that implements "randomized pipelining," where the browser requests objects in a random order and with random levels of pipelining [18].

In this paper, we demonstrate effective attacks against HTTPOS, randomized pipelining, and several other defenses. Table 1 summarizes the results of our attack on each defense evaluated. Our attack can determine, with a success rate over 83%, which of 100 web pages a victim is visiting via Tor, even if the victim uses randomized pipelining. Against SSH tunnels, our attack could determine which web page the victim was visiting over 75% of the time, even if the victim used HTTPOS or sample-based traffic morphing. We also evaluated our attack against a simulated Tor implementation that used randomized pipelining, padded all packets to 1500 bytes, and added random cover traffic. Even with a 1-to-1 ratio between cover traffic and real traffic, our attack could identify the victim’s web page over 50% of the time.

Ours is the first demonstration that application-level defenses, such as HTTPOS and randomized pipelining, are not secure. All previous attacks have only shown that defenses based solely on packet padding and similar network-level manipulations were not effective. We also compare our attack to several previously published attacks, as shown in Table 2.

In 2009, Herrmann et al. proposed a fingerprinting attack based on a Multinomial Naive-Bayes classifier [10], which, in our experiments, could identify which web page a victim visited (out of a set of 100 possible pages) with a success rate of less than 5%. Our attack has over an 80% success rate under similar conditions. Shi et al. proposed a fingerprinting attack based on cosine similarity in 2009 [19], but this method had a success rate of only 50%, even when there were only 20 web pages to choose from. In 2011, Panchenko et al. published a classifier using ad hoc HTTP-specific features, but it only achieved a 65% success rate on our dataset [17]. Our attack also works well against simple SSH-tunneled traffic, achieving a 92% success rate, comparable to the rate achieved by Panchenko et al.’s classifier and the VNG++ classifier of Dyer et al. [6].

Our attack has two novel components. First, we propose a new method for computing the similarity of packet traces generated when a browser loads a web page. Our attack converts traces into strings and uses the Damerau-Levenshtein distance to compare them. Packet ordering is useful for identifying web pages because the order of incoming and outgoing packets reveals information about the size of objects referenced in a page and the order in which the browser requests them. The Damerau-Levenshtein distance is a good metric because it allows insertions, deletions, substitutions, and transpositions, operations that correspond well with network packet drops, retransmissions, and re-orderings, and with slight changes in a page’s content, as may occur with dynamically generated pages.

We then use Hidden Markov Models (HMMs) to extend our web page classifier to a website classifier. An attacker can use these models to determine if a sequence of a victim’s page loads are all from the same website. The HMM captures the link structure of the site and the probable paths that users will follow among the pages when visiting the site. The HMM uses our novel page fingerprinting technique to classify the packet traces observed each time the user transitions from one page to another. The attacker can then use the Forward algorithm to compute the probability that an observed trace of packets was generated by a browser loading pages from the target website. Our site classifier was able to identify when a user visited a target website via Tor with over 90% accuracy in our experiments.

Our results strongly suggest that the ad hoc approach to traffic analysis defenses taken so far, in which researchers design defenses in response to new attacks, will not lead to secure systems. We advocate that researchers adopt a provable security approach to traffic analysis defense design. As a first step in this direction, we present an extension of the BUFLO scheme proposed by Dyer et al. [6]. Our scheme addresses practical, performance, and security shortcomings of the original protocol. Our defense offers provable security properties, but may incur higher bandwidth or latency overhead than previously proposed defenses.

This paper makes the following contributions:
- We show that recently proposed application-level defenses, such as HTTPOS and randomized pipelining, are not secure.
- We present a new web page fingerprinting attack that significantly outperforms other proposed attacks on these and other defenses. Our attack can determine which web page, out of 100 possibilities, a victim is visiting with over 80% success rate.
- We present a novel website fingerprinting attack that can identify, with over 90% accuracy, when a victim is visiting a particular website.
- We propose a traffic analysis defense with provable security properties.

## 2. Related Work
Researchers have studied attacks on anonymity systems from various angles, including active attacks that require subverting nodes in the anonymity network, active attacks that require injecting traffic into the network, and attacks based on subverting web servers visited by anonymous users. Some of these attacks focus on discovering the identity of the anonymous network user, others on discovering the servers they interact with, and others on uncovering the victim’s route through the anonymizing network.

Web page fingerprinting attacks are an important class of attacks because they match the attacker scenario faced by many Tor users today: they use Tor to evade censorship and persecution by a government or ISP that wants to know their browsing habits and has the ability to monitor their traffic.