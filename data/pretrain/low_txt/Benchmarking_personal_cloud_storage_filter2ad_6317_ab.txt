### 4.3 Client-Side Deduplication
Server-side data deduplication eliminates redundant copies on the storage server. If the same content already exists on the server, replicas in the client folder can be identified to save upload capacity.

To determine if this feature is implemented, we designed the following test:
1. A random file is inserted into an arbitrary folder.
2. The same random payload is used to create a replica with a different name in a second folder.
3. The original file is copied to a third folder.
4. After all copies are deleted, the original file is placed back. This step checks whether deduplication fails after files are deleted from the local folder.

Our results indicate that only Dropbox and Wuala implement deduplication. All other services must upload the same data even if it is already available on the storage server. Interestingly, both Dropbox and Wuala can identify copies of users' files even after they have been deleted and later restored. In the case of Wuala, deduplication is compatible with local encryption, meaning two identical files generate two identical encrypted versions.

### 4.4 Delta Encoding
Delta encoding is a specialized compression technique that calculates differences between two file versions, allowing the transmission of only the modifications. To verify which services implement delta encoding, we generated a sequence of changes on a file, adding or changing a portion of content at each iteration. Three cases were considered: new data added/changed at the end, at the beginning, or at a random position within the file. This allowed us to check for the implementation of rolling hash mechanisms. In all cases, the modified file replaced its old copy.

Figure 4 shows that only Dropbox fully implements delta encoding, where the volume of uploaded data corresponds to the actual part that has been modified. The left and right plots in Figure 4 show results for bytes inserted at the end and at random positions, respectively. For the former case, file sizes up to 2 MB were used. Larger files were considered in the latter case to highlight the combined effects with chunking and deduplication. Focusing on Dropbox, observe that the amount of sent traffic increases when files are larger than Dropbox's 4 MB-long chunk. This happens because the original content may be shifted, changing two or more chunks at once, thus increasing the volume of data to be transmitted beyond the added data.

Wuala does not implement delta encoding. However, deduplication prevents the client from uploading unchanged chunks. This can be seen in Figure 4, where data is added at a random offset, forming a 10 MB file. In this case, only two out of three chunks are modified and thus uploaded.

### 4.5 Data Compression
We next verified whether data is compressed before transfer. Compression can reduce traffic and storage requirements but may increase processing time. We benchmarked the compression capability with two distinct file sets. The first set (Figure 5(a)) consists of highly compressible text files (sizes from 100 kB to 2 MB). The second set (Figure 5(b)) contains pure random bytes, making compression impossible.

Figure 5(a) reveals that Dropbox and Google Drive compress data before transmission, with Google Drive implementing a more efficient scheme. Figure 5(b) confirms that Dropbox has the highest overhead in this scenario. Compression is advantageous only for some file types. For already compressed files, compression will have a negligible or negative impact. A possible approach would be to verify the file format before attempting compression (e.g., using magic numbers).

We checked whether Google Drive and Dropbox implement smart policies by creating fake JPEGs—files with JPEG extensions and headers but filled with text. Figure 5(c) shows that Google Drive identifies JPEG content and avoids compression. Dropbox, on the other hand, compresses all files regardless of their content, potentially wasting resources for ordinary JPEG files.

### 4.6 Summary
Table 1 summarizes the capabilities of each service. It shows that Dropbox has the most sophisticated client in terms of features to enhance synchronization speed. Wuala, Google Drive, and SkyDrive follow, implementing some capabilities. Finally, Cloud Drive has the most simplistic client, as none of the checked capabilities have been implemented.

### 5. CLIENT PERFORMANCE
After documenting the architectures and capabilities, we evaluated their impact on performance. Passive measurements [3] show that up to 90% of Dropbox users' upload batches carry less than 1 MB, with a significant portion involving at least 2 chunks. Based on this information, we designed 8 benchmarks varying the number of files, file sizes, and file types. For brevity, we do not show results for files that are constantly changed or file replicas, as these results are identical for services that do not implement specific capabilities. Synchronization startup, upload time, and protocol overhead are discussed below.

### 5.1 Synchronization Startup
We first evaluated the time each service needs before synchronization starts. The metric was computed from the moment files start being modified until the first storage flow is observed. Figure 6(a) shows average delays over 24 repetitions. Only four scenarios using binary files are shown, as similar conclusions are obtained with other file types. Dropbox is the fastest service to start synchronizing single files. Its bundling strategy, however, slightly delays startup with multiple files. As we will show next, this strategy pays off in total upload time. SkyDrive is by far the slowest, waiting at least 9 seconds before starting to submit files. Moreover, it gets slower as batches increase, taking more than 20 seconds to start sending 100 files of 10 kB. Wuala also doubles the startup time in this latter case.

### 5.2 Completion Time
Next, we tested how long each service takes to complete upload tasks. This was measured as the difference between the first and last packets with payload seen in any storage flow. TCP teardown delays and control messages sent after the upload are ignored.

Figure 6(b) summarizes our results (note the log scale on the y-axis). When synchronizing single files of 100 kB or 1 MB, the distance between our testbed and the data centers dominates the metric. Google Drive (26.49 Mb/s) and Wuala (33.34 Mb/s) are the fastest, as each TCP connection is terminated to data centers nearby our testbed. Dropbox and SkyDrive, on the other hand, are the most impacted services. SkyDrive, with a round-trip time (RTT) of 160 ms, needs almost 4 seconds to upload a 1 MB file, whereas Google Drive requires only 300 ms (15 ms RTT).

When multiple files are stored, the client capabilities become central. The rightmost bars in Figure 6(b) show a striking difference in completion time when 100 files of 10 kB are used. Dropbox wins by a factor of 4 due to its bundling strategy, achieving an upload rate of 0.8 Mb/s. Interestingly, Google Drive’s advantage due to its distributed topology is completely canceled by the use of separate TCP/SSL connections per file. It takes 42 seconds on average, i.e., 189 kb/s. Other services are also penalized by their lack of bundling, with Cloud Drive taking about 60 seconds (132 kb/s) to complete some tests.

### 5.3 Protocol Overhead
Finally, we evaluated protocol overhead as the total storage and control traffic over the benchmarking size. Figure 6(c) shows that all services have moderate to high overhead when small files are synchronized. Cloud Drive presents a very high overhead due to the high number of control flows opened for every file transfer (see Figure 1). Dropbox exhibits the highest overhead among the remaining services (47% for 100 kB files and 22% for 1 MB files), possibly due to the signaling cost of implementing its advanced capabilities.

The lack of bundling dramatically increases overhead when multiple small files are sent. Google Drive, for instance, exchanges twice as much traffic as the actual data size when sending 100 files of 10 kB. Cloud Drive shows even more overhead, exchanging more than 5 MB of data to commit 1 MB of content.

### 6. CONCLUSIONS
In this paper, we presented a methodology to check both the capabilities and system design of personal cloud storage services. We then evaluated the implications of design choices on performance by analyzing five services. Our benchmarks show that Dropbox is the most advanced service in terms of capabilities. The maturity of its design is reflected in system performance, although some protocol tweaks could reduce network overhead. Cloud Drive exemplifies the relevance of protocol design: its bandwidth wastage is an order of magnitude higher than other offerings, and its performance is disappointing. SkyDrive shows simple design choices that limit performance, while Wuala offers a good alternative. Importantly, client-side encryption does not seem to affect Wuala’s performance. In all examples, we confirm the role played by data center placement in a centralized approach: from the perspective of European users, this is still an important limitation for U.S.-centric services like Dropbox. Services deploying data centers near our test location, such as Wuala, have an advantage. Google Drive follows a different approach, resulting in a mixed picture: it benefits from Google’s capillary infrastructure and private backbone but is limited by protocols and features, especially when multiple files are considered.

### 7. REFERENCES
[1] Amazon. Cloud Drive v. 2.0.2013.841. http://www.amazon.com/gp/feature.html?docId=1000828861.

[2] I. N. Bermudez, S. Traverso, M. Mellia, and M. M. Munafò. Exploring the Cloud from Passive Measurements: the Amazon AWS case. In The 32nd Annual IEEE International Conference on Computer Communications, INFOCOM’13, 2013.

[3] I. Drago, M. Mellia, M. M. Munafò, A. Sperotto, R. Sadre, and A. Pras. Inside Dropbox: Understanding Personal Cloud Storage Services. In Proceedings of the 12th ACM Internet Measurement Conference, IMC’12, pages 481–494, 2012.

[4] Dropbox. v. 2.0.8. https://www.dropbox.com/release_notes.

[5] B. Eriksson and M. Crovella. Understanding Geolocation Accuracy using Network Geometry. In The 32nd Annual IEEE International Conference on Computer Communications, INFOCOM’13, 2013.

[6] Google. Drive v. 1.9.4536.8202. https://tools.google.com/dlpage/drive.

[7] Google. Network Introduction. Online. https://peering.google.com/about/delivery_ecosystem.html.

[8] Google. Trends. http://www.google.com/trends/.

[9] W. Hu, T. Yang, and J. N. Matthews. The Good, the Bad and the Ugly of Consumer Cloud Storage. ACM SIGOPS Operating Systems Review, 44(3):110–115, 2010.

[10] LaCie. Wuala v. Strasbourg. http://www.wuala.com/.

[11] A. Li, X. Yang, S. Kandula, and M. Zhang. CloudCmp: Comparing Public Cloud Providers. In Proceedings of the 10th ACM SIGCOMM Conference on Internet Measurement, IMC’10, pages 1–14, 2010.

[12] T. Mager, E. Biersack, and P. Michiardi. A Measurement Study of the Wuala On-line Storage Service. In Proceedings of the IEEE 12th International Conference on Peer-to-Peer Computing, P2P’12, pages 237–248, 2012.

[13] Microsoft. SkyDrive v. 17.0.2006.0314. https://skydrive.live.com/.

[14] I. Poese, S. Uhlig, M. A. Kaafar, B. Donnet, and B. Gueye. IP Geolocation Databases: Unreliable? SIGCOMM Comput. Commun. Rev., 41(2):53–56, 2011.

[15] R. Torres, A. Finamore, J. R. Kim, M. Mellia, M. M. Munafò, and S. Rao. Dissecting Video Server Selection Strategies in the YouTube CDN. In Proceedings of the 31st International Conference on Distributed Computing Systems, ICDCS’11, pages 248–257, 2011.

[16] H. Wang, R. Shea, F. Wang, and J. Liu. On the Impact of Virtualization on Dropbox-like Cloud File Storage/Synchronization Services. In Proceedings of the IEEE 20th International Workshop on Quality of Service, IWQoS ’12, pages 11:1–11:9, 2012.