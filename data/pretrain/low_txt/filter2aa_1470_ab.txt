# CICS Application and Mainframe Security Analysis

## DFH320.SDFHLOAD (DFHSNP) - CUSTINQ1
- **PPT**: User & Password: OK
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 31

### CICS Flow via VTAM
- **Transaction ID**: CUST1
- **Program Name**: GMTRAN
- **Function**: CESN
- **Inquiry**: INQ1
- **File**: CUSTMAS
- **File Location**: AYOUB.KICKS.MURACH.CUSTMAS
- **Load Status**: 0

```cics
EXEC CICS
     READ FILE(CUSTMAS)
END-EXEC
```

- **Storage Type**: DISK
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 32

## CICS Expertise
- **Commentary**: Now that we are CICS experts, let's break this down.
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 33

### Jailbreak Techniques
- **Description**: Find the right combination of keys to interrupt the normal flow of an application and return to the CICS terminal. This is similar to finding the admin panel on a URL, but much easier.
- **Examples**:
  - Press PF3 on the logon panel
  - Use the RESET button
  - Press PF12 on some menus

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 34

### Escaping from the CICS Application
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 35-36

#### Brute-Forcing Transaction IDs
- **Description**: The transaction ID is 4 digits long and can be easily brute-forced.
- **Tools**:
  - **Mainframe_brute**: [GitHub](https://github.com/sensepost/mainframe_brute)
  - **Nmap Scripts**: [GitHub](https://github.com/zedsec390/NMAP/blob/master/cics-enum.nse)
  - **CICSShot**: [GitHub](https://github.com/ayoul3/cicsshot)

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 37

### Default Transactions
- **CESN**: Login transaction
- **CEMT**: Master terminal console
- **CECI**: Live interpreter debugger
- **CEDA**: Online Resource Definition program
- **CEDB**: Offline Resource Definition program

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 38-40

### CEMT Inquire
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 41-44

### HLQ and REST File Options
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 45-47

### CEMT Capabilities
- **Information Retrieval**:
  - List temporary storage queues
  - List DB2 connections
  - List web services
  - Scrape user IDs in menus
- **Uninstallation**:
  - Programs
  - Files
  - Web services
  - DB2 connections

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 48

### CECI Functionality
- **Description**: Executes CICS API commands.

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 49-55

### Mainframe Ownership
- **Question**: Can we own the mainframe?
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 56

### CICS Spool Functions
- **Description**: A spool is a dataset containing the output of a job. Using spool functions, we can generate a dataset and send it directly to JES (Job Entry Subsystem), which will execute it.
- **Tool**: CECI

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 57-60

### Theoretical Concepts
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 61-65

### Success!
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 66

### Automation for Advanced Tasks
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 67

### Reverse Shell Setup
- **Steps**:
  - Allocate a dataset
  - Create a reverse shell in REXX
  - Execute the dataset

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 68

### CICSPwn Shell Payloads
- **Payloads**:
  - **reverse_tso/direct_tso**: Shell in the TSO environment
  - **reverse_unix/direct_unix**: Shell in the UNIX environment
  - **ftp**: Connects to an FTP server and pushes/gets files
  - **reverse_rexx/direct_rexx**: Executes REXX script directly in memory
  - **Custom JCL**: Executes your own JCL

- **Note**: The job is executed with the user ID launching CICS (START2) regardless of the user submitting it.
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 69-70

### Execution on Another Mainframe
- **Description**: If the node is NODE(WASHDC) or NODE(REMOTESYS), execution can occur on another mainframe.
- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 71-72

### Challenges and Solutions
- **Problems**:
  - Spool option turned off (Spool=NO)
  - CECI not available

- **Solution**: Use Transient Data Queues (TDQ) instead.
  - **Description**: TDQs are handles towards files not defined in CICS. Some files are more special than others.

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 73-78

### Bypassing RACF Rules
- **RACF Rule Example**:
  ```racf
  RDEFINE TCICSTRN CECI UACC(NONE)
  ```

- **CEDA Utility**:
  - **Description**: An IBM utility to manage resources on CICS.
  - **Functions**:
    - Map files to their real locations
    - Set temporary storage files
    - Define/alter resources

- **Bypass Method**:
  - Copy CECI to a new transaction name always made available by RACF (e.g., logon, printing, paging transactions).

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Numbers**: 79-84

### Final Notes
- **Resources**:
  - [zospentest.tumblr.com](http://zospentest.tumblr.com)
  - [github.com/ayoul3](https://github.com/ayoul3)
  - @ayoul3__

- **Contact**: @ayoul3__
- **Copyright**: © WAVESTONE
- **Page Number**: 85-86