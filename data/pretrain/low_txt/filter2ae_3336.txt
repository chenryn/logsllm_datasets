# CVE-2019-8790：Check Point Endpoint Security 初始客户端提权漏洞分析

### 译文声明
本文为翻译文章，原作者为SafeBreach Labs，原文发布于safebreach.com。译文仅供参考，具体内容及含义请以原文为准。

## 1. 引言
SafeBreach Labs在Windows的`Check Point Endpoint Security`客户端软件中发现了一个新的安全漏洞。本文将详细介绍如何利用此漏洞加载任意未签名的DLL到以NT AUTHORITY\SYSTEM身份运行的服务中，从而实现系统提权和权限维持。

## 2. Check Point Endpoint Security 简介
Check Point Endpoint Security是一款综合性的端点安全解决方案，包括数据安全、网络安全、高级威胁防御、取证以及远程访问VPN等功能。该软件的部分组件作为Windows服务以“NT AUTHORITY\SYSTEM”的身份运行，赋予其极高的权限。本文将探讨我们在Windows版Check Point Endpoint Security初始客户端软件中发现的一个漏洞，并演示如何利用该漏洞提升权限至NT AUTHORITY\SYSTEM级别。

## 3. 漏洞发现
在初步研究中，我们主要针对以下两个Check Point服务进行了深入分析：
1. **Check Point Endpoint Agent (CPDA.exe)**
2. **Check Point Device Auxiliary Framework (IDAFServerHostService.exe)**

选择这些服务的原因如下：
1. 它们以NT AUTHORITY\SYSTEM身份运行，具有最高权限。这种服务可能存在从用户权限提升至系统权限的漏洞，对攻击者非常有用。
2. 这些服务的可执行文件由Check Point签名，如果黑客能够在此进程中执行代码，则可以绕过应用程序白名单的安全检测。
3. 计算机启动后，这些服务会自动运行，因此可能被攻击者用于权限维持。

通过进一步研究，我们发现一旦启动`Check Point Device Auxiliary Framework Service (IDAFServerHostService.exe)`，该签名进程将以NT AUTHORITY\SYSTEM身份运行。该服务尝试加载`atl110.dll`库（“ATL Module for Windows”），并从PATH环境变量的不同目录中搜索丢失的DLL文件。这一行为将在下一部分进行详细分析。

## 4. 演示与验证
为了验证此提权漏洞，我们在虚拟机中安装了Python 2.7，并设置C:\python27目录的ACL，允许所有经过身份验证的用户写入文件。这简化了提权操作，使普通用户能够编写缺失的DLL文件并以NT AUTHORITY\SYSTEM身份执行代码。

值得注意的是，管理用户或进程必须：
1. 设置目录ACL以允许非管理员用户帐户访问。
2. 修改系统的`PATH`变量，包含该目录。

为了测试此提权漏洞，我们采取了以下步骤：
1. 编译一个未签名的代理DLL（替代原始Microsoft `atl110.dll`）。
2. 添加自定义功能，在加载DLL后将以下信息写入文本文件：
   - 加载它的进程名称
   - 执行它的用户名
   - DLL文件的名称

**结果表明，我们能够以普通用户的身份加载任意DLL，并在由Check Point签名为NT AUTHORITY\SYSTEM的进程中执行任意代码。**

## 5. 原因分析
启动`Check Point Device Auxiliary Framework`服务（IDAFServerHostService.exe）后，将加载`iDAFServer.dll`库。该库使用`CoCreateInstance`初始化CLSID为`465DB11A-B20F-4C84-84B6-1EA5213D583A`的日志记录COM对象。根据OleViewDotNet的介绍，这个日志记录COM类是在`daf_logger.dll`库中实现的，这意味着一旦初始化COM对象，就会加载这个库并调用导出的`DllGetClassObject`函数。

`DllGetClassObject`函数又会调用从`atl110.dll`导入的`AtlComModuleGetClassObject`函数。由于`atl110.dll`库并未随Check Point软件一起安装，可能会导致该DLL缺失。此漏洞有两个根本原因：
1. **未控制的搜索路径**：未能加载安全的DLL。应使用`SetDefaultDllDirectories`函数将加载DLL的路径限制在可执行文件的范围内。
2. **缺乏数字证书验证**：程序没有验证正在加载的DLL是否已签名（例如使用`WinVerifyTrust`函数进行验证），从而允许加载任意未签名的DLL。

## 6. 潜在的恶意用途和影响
攻击者可以利用`Check Point Device Auxiliary Framework Service`漏洞进行以下几种恶意活动：
### 可执行文件签名和白名单绕过
该漏洞使攻击者能够利用签名服务加载和执行恶意负载，从而绕过应用程序白名单的安全检测。

### 权限维持
该漏洞使攻击者能够在每次加载服务时加载和执行恶意负载。即使攻击者删除了易受攻击路径中的恶意DLL，该服务也会在每次重新启动时重新加载恶意代码。

### 权限提升
攻击者在获得计算机访问权限后，可能仅拥有有限的权限。该服务使其能够利用NT AUTHORITY\SYSTEM的身份进行操作，几乎可以访问计算机上的所有文件和进程。

## 7. 受影响的版本
适用于Windows的Check Point Endpoint Security初始客户端——版本低于E81.30。

用于分析漏洞原因的文件：
- `iDAFServerHostService.exe` – 8.60.5.6825
- `iDAFServer.dll` – 8.60.5.6825
- `daf_logger.dll` – 8.60.5.6802

## 8. 时间线
- 2019年8月1日 – 漏洞报告
- 2019年8月4日 – 得到Check Point的初步回应
- 2019年8月6日 – Check Point询问漏洞说明
- 2019年8月6日 – Check Point确认漏洞
- 2019年8月19日 – Check Point提供了修复计划
- 2019年8月27日 – Check Point发布修补版本（E81.30），并发布了公告及CVE-2019-8790

## 9. 参考资料
- [Check Point Enterprise Endpoint Security E81.30](https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk160812)