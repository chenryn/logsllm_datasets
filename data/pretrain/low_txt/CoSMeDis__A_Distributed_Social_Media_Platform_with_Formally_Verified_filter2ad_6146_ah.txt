以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[8] M. Backes, M. Maffei, 和 K. Pecina, “分布式社交网络的安全API,” 在NDSS. The Internet Society, 2011.

[9] R. Baden, A. Bender, N. Spring, B. Bhattacharjee, 和 D. Starin, “Persona: 具有用户定义隐私的在线社交网络,” 在SIGCOMM. ACM, 2009, pp. 135–146.

[10] G. Barthe, C. Fournet, B. Grégoire, P. Strub, N. Swamy, 和 S. Z. Béguelin, “加密实现的概率关系验证,” 在POPL, 2014, pp. 193–206.

[11] T. Bauereiß, A. P. Gritti, A. Popescu, 和 F. Raimondi, “CoSMed: 一个经过保密验证的会议管理系统,” 在ITP, 2016.

[12] J. C. Blanchette, S. Böhme, A. Popescu, 和 N. Smallbone, “单态和多态类型的编码,” Logical Methods in Computer Science, vol. 12, no. 4, 2016.

[13] J. C. Blanchette 和 S. Merz (编), Interactive Theorem Proving - 第7届国际会议, ITP 2016, 法国南锡, 2016年8月22-25日, 论文集, vol. 9807, 2016.

[14] A. Bossi, D. Macedonio, C. Piazza, 和 S. Rossi, “安全上下文中的信息流,” Journal of Computer Security, vol. 13, no. 3, pp. 391–422, 2005.

[15] S. Buchegger, D. Schiöberg, L.-H. Vu, 和 A. Datta, “PeerSoN: P2P社交网络: 初步经验和见解,” 在第二届ACM EuroSys社交网络系统研讨会. ACM, 2009, pp. 46–52.

[16] S. Chong, J. Liu, A. C. Myers, X. Qi, K. Vikram, L. Zheng, 和 X. Zheng, “通过自动分区构建安全的Web应用程序,” Commun. ACM, vol. 52, no. 2, pp. 79–87, 2009.

[17] S. Chong 和 R. V. D. Meyden, “使用架构来推理信息安全,” ACM Trans. Inf. Syst. Secur., vol. 18, no. 2, pp. 8:1–8:30, 2015年12月.

[18] M. R. Clarkson, B. Finkbeiner, M. Koleini, K. K. Micinski, M. N. Rabe, 和 C. Sánchez, “超属性的时间逻辑,” 在POST, 2014, pp. 265–284.

[19] L. A. Cutillo, R. Molva, 和 T. Strufe, “Safebook: 基于现实生活信任的隐私保护在线社交网络,” IEEE Communications Magazine, p. 95, 2009.

[20] M. Dam, R. Guanciale, N. Khakpour, H. Nemati, 和 O. Schwarz, “基于ARM的分离内核的信息流安全的形式验证,” 在CCS, 2013, pp. 223–234.

[21] A. A. de Amorim, N. Collins, A. DeHon, D. Demange, C. Hritcu, D. Pichardie, B. C. Pierce, R. Pollack, 和 A. Tolmach, “一种经过验证的信息流架构,” 在POPL, 2014, pp. 165–178.

[22] H. de Nivelle (编), Automated Reasoning with Analytic Tableaux and Related Methods - 第24届国际会议, TABLEAUX 2015, 波兰弗罗茨瓦夫, 2015年9月21-24日, 论文集, vol. 9323, 2015.

[23] D. Devriese 和 F. Piessens, “通过安全多执行实现非干扰性,” 在IEEE Symposium on Security and Privacy, 2010, pp. 109–124.

[24] D. Dolev 和 A. C. Yao, “公钥协议的安全性,” IEEE Trans. Information Theory, vol. 29, no. 2, pp. 198–207, 1983.

[25] R. Focardi 和 R. Gorrieri, “安全属性分类（第一部分：信息流）,” 在FOSAD, 2000, pp. 331–396.

[26] P. W. L. Fong, M. M. Anwar, 和 Z. Zhao, “Facebook风格社交网络系统的隐私保护模型,” 在ESORICS, 2009, pp. 303–320.

[27] J. A. Goguen 和 J. Meseguer, “展开与推断控制,” 在IEEE Symposium on Security and Privacy, 1984, pp. 75–87.

[28] S. Greiner 和 D. Grahl, “组件系统中带有所谓解密的非干扰性,” 在CSF, 2016, pp. 253–267.

[29] S. Guha, K. Tang, 和 P. Francis, “NOYB: 在线社交网络中的隐私,” 在Workshop on Online Social Networks. ACM, 2008, pp. 49–54.

[30] J. D. Guttman 和 P. D. Rowe, “信息流的切割原则,” 在CSF, 2015, pp. 107–121.

[31] F. Haftmann 和 T. Nipkow, “通过高阶重写系统进行代码生成,” 在FLOPS 2010, 2010, pp. 103–117.

[32] C. Hammer 和 G. Snelting, “基于程序依赖图的流敏感、上下文敏感和对象敏感的信息流控制,” Int. J. Inf. Sec., vol. 8, no. 6, pp. 399–422, 2009.

[33] D. S. Hardin, E. W. Smith, 和 W. D. Young, “高度安全应用的健壮机器代码证明框架,” 在ACL2, 2006, pp. 11–20.

[34] S. Jahid, S. Nilizadeh, P. Mittal, N. Borisov, 和 A. Kapadia, “DECENT: 一种去中心化的架构，用于在线社交网络中的隐私保护,” 在PerCom. IEEE, 2012, pp. 326–332.

[35] D. Jang, Z. Tatlock, 和 S. Lerner, “通过正式插件验证建立浏览器安全性保证,” 在USENIX Security, 2012, pp. 113–128.

[36] F. Kammüller, M. Wenzel, 和 L. C. Paulson, “Isabelle中的区域概念,” 在TPHOLs, 1999, pp. 149–166.

[37] S. Kanav, P. Lammich, 和 A. Popescu, “具有文档保密验证的会议管理系统,” 在CAV, 2014, pp. 167–183.

[38] R. Küsters, T. Truderung, B. Beckert, D. Bruns, M. Kirsten, 和 M. Mohr, “Java程序非干扰性的混合证明方法,” 在CSF, 2015, pp. 305–319.

[39] J. Liu, M. D. George, K. Vikram, X. Qi, L. Waye, 和 A. C. Myers, “Fabric: 一个安全的分布式计算和存储平台,” 在SOSP, 2009, pp. 321–334.

[40] A. Lux, H. Mantel, 和 M. Perner, “调度器独立的解密,” 在MPC, 2012, pp. 25–47.

[41] H. Mantel, “可能性安全定义——一个组装工具包,” 在CSFW, 2000, pp. 185–199.

[42] ——, “信息流控制及其应用——弥合差距,” 在FME, 2001, pp. 153–172.

[43] ——, “安全系统的组合,” 在IEEE Symposium on Security and Privacy, 2002, pp. 88–101.

[44] ——, “选择性交错函数框架和模块化组装工具包,” 在FMSE, 2005, pp. 53–62.

[45] H. Mantel 和 A. Reinhard, “语言安全中解密的什么和在哪里的控制,” 在Programming Languages and Systems, ser. LNCS, 2007, vol. 4421, pp. 141–156.

[46] D. McCullough, “多级安全规范和连接属性,” 在IEEE Symposium on Security and Privacy, 1987.

[47] ——, “多级安全的连接定理,” IEEE Trans. Software Eng., vol. 16, no. 6, pp. 563–568, 1990.

[48] J. McLean, “闭包在选择性交错函数下的跟踪集的一般组合理论,” 在IEEE Symposium on Security and Privacy, 1994, pp. 79–93.

[49] C. Morgan, “影子知道：顺序程序中的细化和安全,” Sci. Comput. Program., vol. 74, no. 8, pp. 629–653, 2009.

[50] T. C. Murray, D. Matichuk, M. Brassil, P. Gammie, T. Bourke, S. Seefried, C. Lewis, X. Gao, 和 G. Klein, “seL4: 从通用目的到信息流强制证明,” 在IEEE Symposium on Security and Privacy, 2013, pp. 415–429.

[51] A. C. Myers, “Jflow: 实用的大部分静态信息流控制,” 在POPL, 1999, pp. 228–241.

[52] T. Nipkow, L. C. Paulson, 和 M. Wenzel, Isabelle/HOL: 高阶逻辑的证明助手. Springer, 2002.

[53] R. Pardo 和 G. Schneider, “社交网络的形式隐私策略框架,” 在SEFM, 2014, pp. 378–392.

[54] L. C. Paulson 和 J. C. Blanchette, “Sledgehammer的经验：自动和交互式定理证明器之间的链接,” 在IWIL, 2010.

[55] W. Rafnsson 和 A. Sabelfeld, “交互系统的组合信息流安全,” 在CSF, 2014, pp. 277–292.

[56] ——, “安全多执行：细粒度、解密感知和透明,” Journal of Computer Security, vol. 24, no. 1, pp. 39–90, 2016.

[57] A. Sabelfeld 和 A. C. Myers, “基于语言的信息流安全,” IEEE Journal on Selected Areas in Communications, vol. 21, no. 1, pp. 5–19, 2003.

[58] A. Sabelfeld 和 D. Sands, “解密：维度和原则,” Journal of Computer Security, vol. 17, no. 5, pp. 517–548, 2009.

[59] Y. Saito 和 M. Shapiro, “乐观复制,” ACM Comput. Surv., vol. 37, no. 1, pp. 42–81, 2005.

[60] “The Scalatra Web Framework,” 2016, http://scalatra.org/.

[61] D. Sutherland, “信息模型,” 在第9届国家安全会议, 1986, pp. 175–183.

[62] M. Wenzel, “Isar——一种通用的可读形式证明文档解释方法,” 在TPHOLs, 1999, pp. 167–184.

[63] J. Yang, K. Yessenov, 和 A. Solar-Lezama, “一种自动强制隐私策略的语言,” 在POPL, 2012, pp. 85–96.

[64] A. Zakinthinos 和 E. S. Lee, “安全属性的一般理论,” 在IEEE Symposium on Security and Privacy, 1997, pp. 94–102.

[65] S. Zdancewic, L. Zheng, N. Nystrom, 和 A. C. Myers, “安全程序分区,” ACM Trans. Comput. Syst., vol. 20, no. 3, pp. 283–328, 2002.

[66] N. Zeldovich, S. Boyd-Wickizer, 和 D. Mazières, “通过信息流控制保护分布式系统,” 在NSDI, 2008, pp. 293–308.

---

### 附录 A. 安全传输定理的更多细节

以下是定理2中使用的“更强的安全模型”概念的正式定义。

**定义3.** 设\( \text{Aut} \)是一个I/O自动机，\((P)\)和\((P')\)是两个在其上操作的安全属性。如果存在两个部分函数\( f : \text{Sec} \rightarrow \text{Sec}' \)和\( g : \text{Obs} \rightarrow \text{Obs}' \)，它们分别将\((P)\)的秘密和观察映射到\((P')\)的秘密和观察，并且保持秘密和观察基础设施、边界和触发条件，即满足以下条件，则称\((P)\)具有比\((P')\)更强的安全模型：

- \( \text{isSec}'(\text{trn}) \)成立当且仅当\( \text{isSec}(\text{trn}) \)且\( \text{getSec}(\text{trn}) \in \text{dom}(f) \)，并且在这种情况下\( f(\text{getSec}(\text{trn})) = \text{getSec}'(\text{trn}) \)。
- \( \text{isObs}'(\text{trn}) \)成立当且仅当\( \text{isObs}(\text{trn}) \)且\( \text{getObs}(\text{trn}) \in \text{dom}(g) \)，并且在这种情况下\( g(\text{getObs}(\text{trn})) = \text{getObs}'(\text{trn}) \)。
- \( T(\text{trn}) \)蕴含\( T'(\text{trn}) \)。
- \( B(sl, tl) \)蕴含\( B'(sl', tl') \)，其中\( sl' = f(sl) \)且\( tl' = f(tl) \)。

上述部分函数\( f \)和\( g \)允许我们通过使可观察和秘密转换的集合变小来削弱观察者的能力和秘密的概念。特别是，那些未被\( g \)翻译的可观察转换在新的安全模型中变得不可观察。

为了证明主论文中的运行示例中\((P1) || (P2) \Rightarrow (P')\)，我们使用了定理，其中\(\text{Obs}' = \text{Obs}\)，\( g \)是恒等函数，\(\text{Sec}' = \text{Sec1}\)，并且\( f \)从\((1, s1)\)或\((s1, s2)\)中提取秘密\( s1 \)。注意，\(\text{Aut2}\)不产生本地秘密，因此\((2, s2)\)永远不会出现。此外，\( f \)在有效秘密上是单射的，因为局部出现在\(\text{Aut1}\)中的秘密集与与\(\text{Aut2}\)通信时的秘密集是不相交的，并且在通信中，\(\text{Aut2}\)接收到的秘密由\(\text{Aut1}\)发送的秘密唯一确定。\( f \)的逆函数为：
\[ f^{-1}(s1) = \begin{cases} 
(1, (upd, pst)) & \text{如果 } s1 = (upd, pst) \\
((snd, pst), pst) & \text{如果 } s1 = (snd, pst)
\end{cases} \]

上述假设很容易检查。

我们还依赖定理2来证明第五节中描述的各种组件属性修正确实是之前版本的加强——这对于确保我们的组合性追求没有削弱任何组件属性是非常重要的。因此，为了证明经过修正1-3后的\((P1)\)版本确实意味着原始版本，我们将\( g \)定义为局部观察上的恒等函数，并将\( f \)定义为\( f((upd, pst)) = pst \)。

### 附录 B. 达成组合性的启发式方法

**背景.** 我们有一个整体系统，建模为一个I/O自动机\(\text{Aut}\)，并提供了一个保密保证\((P)\)，该保证建模为BD安全。我们将系统扩展为一个分布式系统，由多个能够通信的节点组成。每个节点都是\(\text{Aut}\)的一个扩展\(\text{Aut'}\)，带有新的节点间通信动作。问题是我们可以为分布式系统证明什么样的保密属性。

**步骤1.** 根据其性质，\((P)\)陈述了关于秘密的概念以及在与外部世界交互过程中如何保护该秘密的内容，这种交互通过原始自动机\(\text{Aut}\)的动作和输出发生。我们分析\(\text{Aut'}\)中的节点间通信期间秘密发生了什么，识别出节点作为秘密发布者和接收者的角色。这导致\((P)\)分裂为两个变体\((P1)\)和\((P2)\)。

**步骤2.** 如果需要，我们修改\((P1)\)和/或\((P2)\)的秘密基础设施，以便秘密相关项的通信被双方认可为秘密生成动作。这可能还需要修改边界，以考虑相关性。

**步骤3.** 我们通过允许观察者访问任何不会泄露秘密的通信信息来增强\((P1)\)和\((P2)\)的观察能力。

**步骤4.** 如果我们可以确定秘密的唯一来源，我们应用定理3来处理一个由一个满足\((P1)\)的组件和\( n-1 \)个满足\((P2)\)的组件组成的分布式系统。然后我们应用定理2来自定义复合边界，使其使用秘密发布者组件中的秘密概念。

### 附录 C. 经过验证的属性的更多细节

**帖子保密性.** 原始CoSMed的帖子保密性属性具有“动态”边界，结合了由于可见性更新和观察者的加友或删友而导致的帖子保密性的变化。我们在表I中总结了正式攻击者模型（AM）和安全属性（SP）。详细的解释见[12]。CoSMeDis的发布者节点对应的属性扩展了原始CoSMed的属性，包括帖子的发送：添加的部分已突出显示。在接收方，除了更新次数外，没有向本地观察者泄露任何信息（因为通信流量是可观察的）。只有当观察者被添加为帖子所有者的远程朋友，或者帖子被标记为公开时，触发器才会触发，并且帖子会被解密。整个分布式系统的属性具有从所有组件观察构建的观察（如主论文中的n元组合性定理所述）。然而，秘密和边界是秘密发布者组件中的那些——这是因为我们展示了应用组合性和转移定理后得到的最终产品属性。

**友谊保密性.** 对于CoSMed，我们已经证明了任意但固定的用户UID1和UID2的本地友谊状态的保密性属性，以及他们之间的友谊请求。观察者除了在其中一个观察者是UID1或UID2的朋友期间的状态（及其更新）之外，对他们的友谊状态一无所知。特别地，如果没有任何观察者曾经成为UID1或UID2的朋友，那么他们永远不会了解他们的友谊状态。此外，观察者对他们之间的友谊请求也一无所知。

---