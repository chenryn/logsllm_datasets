# Foundations of Dynamic BFT

**Authors:**
- Sisi Duan
- Haibin Zhang

**Affiliations:**
- Tsinghua University
- Beijing Institute of Technology

**Abstract:**
This paper investigates dynamic Byzantine fault-tolerant (BFT) systems, where replicas can join and leave the system dynamically. This feature is increasingly important in modern distributed systems. We provide a formal framework for dynamic BFT protocols, including a flexible syntax and various security definitions. We highlight the challenges of extending static BFT to dynamic BFT and present Dyno, a highly efficient dynamic BFT protocol under the partial synchrony model. Dyno seamlessly handles membership changes without degrading performance.

## 1. Introduction

Byzantine fault-tolerant state machine replication (BFT) has traditionally been used to build mission-critical systems. Recently, BFT has gained prominence as a core building block for blockchains. In permissioned blockchains, the membership is static, and replicas know each other's identities but may not trust one another. In permissionless blockchains, BFT is also used in various ways, often referred to as hybrid blockchains. This paper focuses on BFT with dynamic membership, or simply dynamic BFT, where replicas can join and leave the system dynamically. Dynamic BFT is essential for many blockchain and security applications.

### 1.1 Normal Recovery and Reconfiguration

In static BFT systems, if a replica crashes, needs maintenance, or is deemed faulty, the system's availability is compromised. Recovering a faulty node can be time-consuming and sometimes impossible due to permanent hardware failures. A better approach is to create a new replica to replace the faulty one.

### 1.2 Proactive Recovery

Dynamic BFT can be used to build robust BFT systems with proactive recovery. Traditional approaches use trusted hardware to periodically restart nodes, hoping to evict adversaries. However, adversaries may persist, making this approach ineffective. A fresh replica, however, does not have this problem, providing a better solution.

### 1.3 Consortium Blockchains

The static membership property of BFT limits the applicability of consortium blockchains. Blockchain entities may choose or be forced to leave the consortium, while new entities may join. For example, Libra (now Diem) manages dynamic membership through smart contracts.

### 1.4 Hybrid Blockchains

Hybrid blockchains using BFT need to select a fixed number of BFT replicas, called committees. These committees can become vulnerable. It is crucial to change committees while keeping the system operational.

## 2. Technical Challenges and Contributions

### 2.1 Formal Treatment of Dynamic BFT

Despite the need for dynamic BFT, there has been no rigorous formalization until now. Some related primitives have been defined in crash and Byzantine failure models, but a good abstraction for dynamic BFT with provable security is lacking. This paper fills this gap by providing a formal treatment of dynamic BFT, including a syntax that separates BFT from the membership service and various security definitions.

#### Key Features:
- **Consistent Delivery:** We define a new property, consistent delivery, which is crucial for the security of dynamic BFT.
- **Security Definitions:** Our treatment includes multiple security definitions for different notions of "being correct" in dynamic BFT, ranging from the weakest to the strongest.

### 2.2 New Issues in Dynamic BFT

We identify several new issues in dynamic BFT:
- **Dynamic Quorum:** Membership changes lead to quorum size changes, creating liveness issues.
- **View Changes:** In dynamic BFT with view changes (leader election), there are issues such as the next leader being unable to collect enough view change messages or multiple replicas claiming leadership.
- **Message Delivery:** Static systems assume eventual message delivery among correct replicas, but this assumption does not hold in dynamic settings.

### 2.3 Configuration Discovery Protocols

Our protocols rely on configuration discovery sub-protocols, where clients and new replicas obtain the system's membership. These protocols are crucial for both functionality and correctness. We provide one protocol using explicit membership discovery and two alternative protocols using implicit membership discovery.

### 2.4 Constructions, Assumptions, and Presentation

We consider two assumptions: the standard quorum assumption and the G-correct assumption. Based on these, we provide protocols satisfying different security definitions. The main protocol, Dyno, retains the full efficiency of the underlying BFT protocol and handles membership requests independently of view changes. Dyno makes significant modifications to the normal-case operation and view change mechanism without adding performance overhead.

## 3. Related Work

### 3.1 BFT

BFT can be categorized into synchronous, partially synchronous, and asynchronous BFT. This work focuses on partially synchronous BFT.

### 3.2 Primary Partition vs. Partitionable Membership Services

A membership service can be primary partition or partitionable. Primary partition services have totally ordered views, while partitionable services have partially ordered views. This paper studies the primary partition model.

### 3.3 Dynamic Group Communication

The group membership problem and view synchronous communication were first discussed by Birman and Joseph. Extended virtual synchrony ensures a consistent relationship between message delivery and configuration changes. Secure Spread enhances Spread with authentication, integrity, access control, and confidentiality.

### 3.4 Reconfiguration for Atomic Storage

Dynamic atomic read/write storage can be consensus-based or consensus-free. DynaStore demonstrates that dynamic atomic storage can be solved without consensus in asynchronous settings.

### 3.5 Reconfiguration for SMR

Paxos and SMART manage membership changes by updating the system state. Raft uses a two-phase approach for reconfiguration. BFT-SMaRt supports reconfiguration by treating membership requests as special client requests.

### 3.6 Reconfiguration Using Auxiliary Master

Reconfiguration can be managed by an auxiliary master, as shown in Vertical Paxos.

### 3.7 Membership Management

Dynamic BFT is fundamentally different from membership management services like Apache Zookeeper and Google Chubby. Dynamic BFT can be viewed as a self-configurable SMR.

### 3.8 Durability

Durability is the capacity to survive system crashes and bring recovering replicas up to date. This property has been considered in the context of static groups, and we extend it to dynamic groups.

## 4. System and Threat Model

### 4.1 Static BFT

Conventional BFT protocols have a constant set of replicas, a fraction of which may fail arbitrarily (Byzantine failures). In BFT, a replica delivers...

---

This revised version aims to improve clarity, coherence, and professionalism. Let me know if you need further adjustments!