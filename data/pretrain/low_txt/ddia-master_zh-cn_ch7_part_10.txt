## 事务异常与隔离级别

### 丢失更新
当两个客户端同时执行“读取-修改-写入”操作序列时，其中一个写操作可能会在没有合并另一个写入变更的情况下直接覆盖另一个写操作的结果，从而导致数据丢失。某些快照隔离的实现可以自动防止这种异常，而其他实现则需要手动锁定（例如使用`SELECT FOR UPDATE`）。

### 写入偏差
一个事务读取某些数据，并根据所看到的值做出决策，然后将该决策写入数据库。然而，在写入时，该决策的前提可能已经不再成立。只有可串行化隔离才能防止这种异常。

### 幻读
事务读取符合某些搜索条件的对象。如果另一个客户端在此期间进行了写入操作，这可能会影响搜索结果。虽然快照隔离可以防止直接的幻读，但在写入偏差上下文中的幻读仍需特殊处理，例如通过索引范围锁定。

弱隔离级别可以防止一些异常情况，但要求应用程序开发人员手动处理其余的问题（例如，使用显式锁定）。只有可串行化隔离才能完全防范这些问题。以下是实现可串行化事务的三种不同方法：

1. **字面意义上的串行执行**
   如果每个事务的执行速度非常快，并且事务吞吐量足够低，可以在单个CPU核心上处理，这是一种简单而有效的方法。

2. **两阶段锁定**
   数十年来，两阶段锁定一直是实现可串行化的标准方法。然而，许多应用出于性能考虑避免使用它。

3. **可串行化快照隔离（SSI）**
   这是一种较新的算法，避免了先前方法的大部分缺点。它采用乐观的方法，允许事务在不阻塞的情况下执行。当一个事务尝试提交时，会进行检查，如果发现执行不可串行化，则中止该事务。

本章中的示例主要基于关系数据模型。然而，正如在**[多对象事务的需求](#多对象事务的需求)**中讨论的那样，无论使用哪种数据模型，事务都是有价值的数据库功能。

本章主要讨论的是单机数据库中的各种想法和算法。分布式数据库中的事务引入了一系列新的挑战，我们将在接下来的两章中讨论这些内容。

## 参考文献
1. Donald D. Chamberlin, Morton M. Astrahan, Michael W. Blasgen, et al.: “[A History and Evaluation of System R](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.84.348&rep=rep1&type=pdf),” *Communications of the ACM*, volume 24, number 10, pages 632–646, October 1981. [doi:10.1145/358769.358784](http://dx.doi.org/10.1145/358769.358784)
2. Jim N. Gray, Raymond A. Lorie, Gianfranco R. Putzolu, and Irving L. Traiger: “[Granularity of Locks and Degrees of Consistency in a Shared Data Base](http://citeseer.ist.psu.edu/viewdoc/download?doi=10.1.1.92.8248&rep=rep1&type=pdf),” in *Modelling in Data Base Management Systems: Proceedings of the IFIP Working Conference on Modelling in Data Base Management Systems*, edited by G. M. Nijssen, pages 364–394, Elsevier/North Holland Publishing, 1976. Also in *Readings in Database Systems*, 4th edition, edited by Joseph M. Hellerstein and Michael Stonebraker, MIT Press, 2005. ISBN: 978-0-262-69314-1
3. Kapali P. Eswaran, Jim N. Gray, Raymond A. Lorie, and Irving L. Traiger: “[The Notions of Consistency and Predicate Locks in a Database System](http://research.microsoft.com/en-us/um/people/gray/papers/On%20the%20Notions%20of%20Consistency%20and%20Predicate%20Locks%20in%20a%20Database%20System%20CACM.pdf),” *Communications of the ACM*, volume 19, number 11, pages 624–633, November 1976.
...（省略部分参考文献以保持简洁）

------
| 上一章                 | 目录                            | 下一章                             |
| ---------------------- | ------------------------------- | ---------------------------------- |
| [第六章：分区](ch6.md) | [设计数据密集型应用](README.md) | [第八章：分布式系统的麻烦](ch8.md) |