以下是优化后的参考文献列表，使其更加清晰、连贯和专业：

---

**参考文献**

1. Yang Ji, Sangho Lee, Evan Downing, Weiren Wang, Mattia Fazzini, Taesoo Kim, Alessandro Orso, and Wenke Lee. 2017. RAIN: Refinable Attack Investigation with On-demand Inter-Process Information Flow Tracking. *Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security*. ACM, 377–390.

2. Yang Ji, Sangho Lee, Mattia Fazzini, Joey Allen, Evan Downing, Taesoo Kim, Alessandro Orso, and Wenke Lee. 2018. Enabling Refinable Cross-Host Attack Investigation with Efficient Data Flow Tagging and Tracking. *27th USENIX Security Symposium (USENIX Security 18)*. 1705–1722.

3. Angelos D. Keromytis. 2018. Transparent Computing Engagement 3 Data Release. https://github.com/darpa-i2o/Transparent-Computing. 访问日期：2019-04-23.

4. Arijit Khan, Yinghui Wu, Charu C Aggarwal, and Xifeng Yan. 2013. NEMA: Fast Graph Search with Label Similarity. *Proceedings of the VLDB Endowment*, Vol. 6. VLDB Endowment, 181–192.

5. Samuel T. King and Peter M. Chen. 2003. Backtracking Intrusions. *SOSP*. ACM.

6. Samuel T. King and Peter M. Chen. 2005. Backtracking Intrusions. *ACM Transactions on Computer Systems* (2005).

7. Samuel T. King, Zhuoqing Morley Mao, Dominic G. Lucchetti, and Peter M. Chen. 2005. Enriching Intrusion Alerts Through Multi-Host Causality. *NDSS*.

8. Clemens Kolbitsch, Paolo Milani Comparetti, Christopher Kruegel, Engin Kirda, Xiao-yong Zhou, and XiaoFeng Wang. 2009. Effective and Efficient Malware Detection at the End Host. *USENIX Security Symposium*, Vol. 4. 351–366.

9. Yonghwi Kwon, Dohyeong Kim, William Nick Sumner, Kyungtae Kim, Brendan Saltaformaggio, Xiangyu Zhang, and Dongyan Xu. 2016. LDX: Causality Inference by Lightweight Dual Execution. *ACM SIGOPS Operating Systems Review* 50, 2 (2016), 503–515.

10. Yonghwi Kwon, Fei Wang, Weihang Wang, Kyu Hyung Lee, Wen-Chuan Lee, Shiqing Ma, Xiangyu Zhang, Dongyan Xu, Somesh Jha, Gabriela Ciocarlie, et al. 2018. MCI: Modeling-based Causality Inference in Audit Logging for Attack Investigation. *Proc. of the 25th Network and Distributed System Security Symposium (NDSS’18)*.

11. Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. 2013. High Accuracy Attack Provenance via Binary-based Execution Partition. *NDSS*.

12. Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. 2013. LogGC: Garbage Collecting Audit Log. *Proceedings of the 2013 ACM SIGSAC Conference on Computer & Communications Security*. ACM, 1005–1016.

13. Xiaojing Liao, Kan Yuan, XiaoFeng Wang, Zhou Li, Luyi Xing, and Raheem Beyah. 2016. ACING the IOC Game: Toward Automatic Discovery and Analysis of Open-Source Cyber Threat Intelligence. *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security*. ACM, 755–766.

14. Yushan Liu, Mu Zhang, Ding Li, Kangkook Jee, Zhichun Li, Zhenyu Wu, Junghwan Rhee, and Prateek Mittal. 2018. Towards a Timely Causality Analysis for Enterprise Security. *Network and Distributed Systems Security Symposium*.

15. Sadegh M. Milajerdi, Birhanu Eshete, Rigel Gjomemo, and V.N. Venkatakrishnan. 2018. ProPatrol: Attack Investigation via Extracted High-Level Tasks. *International Conference on Information Systems Security*. Springer.

16. Shiqing Ma, Kyu Hyung Lee, Chung Hwan Kim, Junghwan Rhee, Xiangyu Zhang, and Dongyan Xu. 2015. Accurate, Low Cost, and Instrumentation-Free Security Audit Logging for Windows. *Proceedings of the 31st Annual Computer Security Applications Conference (ACSAC 2015)*. ACM, New York, NY, USA, 401–410. https://doi.org/10.1145/2818000.2818039

17. Shiqing Ma, Juan Zhai, Fei Wang, Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. 2017. MPI: Multiple Perspective Attack Investigation with Semantics Aware Execution Partitioning. *26th USENIX Security Symposium (USENIX Security 17)*. 1111–1128.

18. Shiqing Ma, Xiangyu Zhang, and Dongyan Xu. 2016. ProTracer: Towards Practical Provenance Tracing by Alternating Between Logging and Tainting. *NDSS*.

19. Sadegh M. Milajerdi, Rigel Gjomemo, Birhanu Eshete, R. Sekar, and VN. Venkatakrishnan. 2019. HOLMES: Real-time APT Detection through Correlation of Suspicious Information Flows. *Proceedings of the IEEE Symposium on Security and Privacy*. IEEE.

20. MISP. 2019. MISP - Open Source Threat Intelligence Platform & Open Standards for Threat Information Sharing. https://www.misp-project.org/. 访问日期：2019-04-23.

21. MITRE. 2018. Structured Threat Information eXpression (STIX). https://stixproject.github.io/.

22. FireEye: Ned Moran and Nart Villeneuve. 2013. Operation DeputyDog: Zero-Day (CVE-2013-3893) Attack Against Japanese Targets. https://www.fireeye.com/blog/threat-research/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html. 访问日期：2019-04-19.

23. Alina Oprea, Zhou Li, Ting-Fang Yen, Sang H. Chin, and Sumayah Alrwais. 2015. Detection of Early-Stage Enterprise Infection by Mining Large-Scale Log Data. *Dependable Systems and Networks (DSN), 2015 45th Annual IEEE/IFIP International Conference on*. IEEE, 45–56.

24. Chetan Parampalli, R. Sekar, and Rob Johnson. 2008. A Practical Mimicry Attack against Powerful System-Call Monitors. *Information, Computer and Communications Security*. ACM.

25. Thomas Pasquier, Xueyuan Han, Thomas Moyer, Adam Bates, Olivier Hermant, David Eyers, Jean Bacon, and Margo Seltzer. 2018. Runtime Analysis of Whole-System Provenance. *Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security (CCS ’18)*. ACM, New York, NY, USA, 1601–1616. https://doi.org/10.1145/3243734.3243776

26. Kexin Pei, Zhongshu Gu, Brendan Saltaformaggio, Shiqing Ma, Fei Wang, Zhiwei Zhang, Luo Si, Xiangyu Zhang, and Dongyan Xu. 2016. Hercule: Attack Story Reconstruction via Community Discovery on Correlated Log Graph. *Proceedings of the 32nd Annual Conference on Computer Security Applications*. ACM, 583–595.

27. Robert Pienta, Acar Tamersoy, Hanghang Tong, and Duen Horng Chau. 2014. MAGE: Matching Approximate Patterns in Richly-Attributed Graphs. *2014 IEEE International Conference on Big Data (Big Data)*. IEEE, 585–590.

28. Devin J. Pohly, Stephen McLaughlin, Patrick McDaniel, and Kevin Butler. 2012. Hi-Fi: Collecting High-Fidelity Whole-System Provenance. *ACSAC*. ACM.

29. Xiaokui Shu, Frederico Araujo, Douglas L. Schales, Marc Ph. Stoecklin, Jiyong Jang, Heqing Huang, and Josyula R. Rao. 2018. Threat Intelligence Computing. *Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security (CCS ’18)*. ACM, New York, NY, USA, 1883–1898. https://doi.org/10.1145/3243734.3243829

30. General Dynamics Fidelis Cybersecurity Solutions. 2013. njRAT Uncovered. https://app.box.com/s/vdg51zbfvap52w60zj0is3l1dmyya0n4. 访问日期：2019-04-19.

31. Splunk. 2019. SIEM, AIOps, Application Management, Log Management, Machine Learning, and Compliance. https://www.splunk.com/.

32. STIX. 2019. STIX Visualization. https://oasis-open.github.io/cti-documentation/stix/gettingstarted.html#stix-visualization. 访问日期：2019-05-15.

33. Xiaoyan Sun, Jun Dai, Peng Liu, Anoop Singhal, and John Yen. 2018. Using Bayesian Networks for Probabilistic Identification of Zero-Day Attack Paths. *IEEE Transactions on Information Forensics and Security* 13, 10 (2018), 2506–2521.

34. Zhao Sun, Hongzhi Wang, Haixun Wang, Bin Shao, and Jianzhong Li. 2012. Efficient Subgraph Matching on Billion Node Graphs. *Proceedings of the VLDB Endowment* 5, 9 (2012), 788–799.

35. Symantec. 2019. Buckeye: Espionage Outfit Used Equation Group Tools Prior to Shadow Brokers Leak. https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit.

36. Nextron Systems. 2017. LOKI, Free IOC Scanner - Nextron Systems. https://www.nextron-systems.com/loki/.

37. ClearSky Cyber Security Team. 2016. Operation DustySky. https://www.clearskysec.com/wp-content/uploads/2016/01/Operation%20DustySky_TLP_WHITE.pdf. 访问日期：2019-04-19.

38. MITRE: STIX Team. 2013. APT1 Report Conversion to STIX. https://stix.mitre.org/language/version1.0.1/samples/README.txt. 访问日期：2019-04-23.

39. MITRE: STIX Team. 2013. FireEye Poison Ivy Report Conversion to STIX. https://stix.mitre.org/language/version1.0.1/samples/README-fireeye.txt. 访问日期：2019-04-23.

40. New York Times. 2019. How Chinese Spies Got the N.S.A.’s Hacking Tools, and Used Them for Attacks. https://www.nytimes.com/2019/05/06/us/politics/china-hacking-cyber.html.

41. Hanghang Tong, Christos Faloutsos, Brian Gallagher, and Tina Eliassi-Rad. 2007. Fast Best-Effort Pattern Matching in Large Attributed Graphs. *13th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD 2007)*. ACM, 737–746.

42. David Wagner and Paolo Soto. 2002. Mimicry Attacks on Host-Based Intrusion Detection Systems. *Proceedings of the 9th ACM Conference on Computer and Communications Security*. ACM, 255–264.

43. Xiaoli Wang, Xiaofeng Ding, Anthony KH Tung, Shanshan Ying, and Hai Jin. 2012. An Efficient Graph Indexing Method. *2012 IEEE 28th International Conference on Data Engineering*. IEEE, 210–221.

44. David Westcott and Kiran Bandla. 2018. APT Notes. https://github.com/aptnotes/.

45. Workbench. 2019. JetStream2. https://browserbench.org/JetStream/index.html. 访问日期：2019-08-27.

46. Zhang Xu, Zhenyu Wu, Zhichun Li, Kangkook Jee, Junghwan Rhee, Xusheng Xiao, Fengyuan Xu, Haining Wang, and Guofei Jiang. 2016. High Fidelity Data Reduction for Big Data Security Dependency Analyses. *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security*. ACM, 504–516.

47. Ziyun Zhu and Tudor Dumitras. 2018. Chainsmith: Automatically Learning the Semantics of Malicious Campaigns by Mining Threat Intelligence Reports. *2018 IEEE European Symposium on Security and Privacy (EuroS&P)*. IEEE, 458–472.

48. Bo Zong, Ramya Raghavendra, Mudhakar Srivatsa, Xifeng Yan, Ambuj K. Singh, and Kang-Won Lee. 2014. Cloud Service Placement via Subgraph Matching. *2014 IEEE 30th International Conference on Data Engineering*. IEEE, 832–843.

49. Bo Zong, Xusheng Xiao, Zhichun Li, Zhenyu Wu, Zhiyun Qian, Xifeng Yan, Ambuj K. Singh, and Guofei Jiang. 2015. Behavior Query Discovery in System-Generated Temporal Graphs. *Proceedings of the VLDB Endowment* 9, 4 (2015), 240–251.

50. Lei Zou, Lei Chen, and M. Tamer Özsu. 2009. Distance-Join: Pattern Match Query in a Large Graph Database. *Proceedings of the VLDB Endowment* 2, 1 (2009), 886–897.

**附录**

在本节中，我们提供了每种恶意软件的简要历史及其相应报告中的摘要，这些信息用于构建查询图。

**njRAT**

njRAT 是一种公开可用的远程访问木马（RAT），它使攻击者能够完全控制受害系统。尽管 njRAT 的源代码是公开的，但利用 njRAT 的攻击主要针对中东地区的政府、电信和能源部门的组织。当恶意软件执行时，它会尝试从扩展名为 “.exe.config” 的文件中读取配置（边 1）。njRAT 恶意软件将记录的按键存储在一个 “.tmp” 文件中（边 2），并写入一个 “.pf” 文件（边 3）。为了获得持久性，njRAT 恶意软件创建了自身的多个副本（边 4 和 8）。执行后（边 5 和 6），其中一个副本写入一个 “.pf” 文件（边 7）。njRAT 恶意软件还启动了一个位于 netsh 进程（边 9），这会导致创建另一个 “.pf” 文件（边 10）。最后，恶意软件设置了一些注册表值（边 11-13）并向 C2 服务器 217.66.231.245 发送信标（边 14）。

**DeputyDog**

DeputyDog 是一种据称针对日本组织的恶意软件，基于 FireEye 的报告。我们从该恶意软件报告中提取的查询图如图 2 所示，并在第 3 节中进行了描述。

**Uroburos**

Uroburos、ComRAT、Snake、Turla 和 Agent.BTZ 都是指负责美国军事计算机最大规模入侵的一系列 rootkit。恶意软件首先丢弃两个 Microsoft Windows 动态链接库（边 1 和 2），然后调用 rundll32.exe（边 3）来安装这些库（边 4 和 5）。为了在启动过程中运行，恶意软件创建了一个注册表键（边 6）。恶意软件创建了三个日志文件（边 7-9）并删除了一组文件（边 10-14）。

**Carbanak**

Carbanak 是一种远程后门，提供对受感染机器的远程访问。攻击者的主要动机似乎是经济利益，导致累计损失高达十亿美元 [22]。最初的入侵通过一封看起来像是合法银行通信的鱼叉式钓鱼邮件开始（边 1）。利用漏洞后，Carbanak 将自身复制到 “%system32%” 目录下，并命名为 “svchost.exe”（边 2-4），并删除由漏洞载荷创建的原始文件（边 5）。为了获取自启动权限，恶意软件创建了一个新服务，其名称格式为 “Sys”，其中 ServiceName 是随机选择的现有服务名称（边 6）。Carbanak 创建一个具有随机名称和 .bin 扩展名的文件，在其中存储要执行的命令（边 7）。然后，恶意软件从注册表条目（边 8）和 Mozilla Firefox 配置文件（边 9）中获取代理配置。最后，Carbanak 与其 C2 服务器通信（边 10）。

**DustySky**

DustySky 是一种多阶段恶意软件，其主要目标是出于政治目的的情报收集。恶意软件样本伪装成 Microsoft Word 文件，一旦执行（边 1），将以阿拉伯语打开一个诱饵 Microsoft Word 文档（边 2 和 3），而恶意软件在后台进行情报收集。为了逃避虚拟机检测，投放器检查某些 DLL 文件的存在，特别是 vboxmrxnp.dll 和 vmbusres.dll，它们表示存在 VirtualBox（边 4 和 5）以及 vmGuestlib.dll，表示存在 VMware（边 6）。DustySky 核心被丢弃到 %TEMP% 目录下（边 7、8 和 9），键盘记录保存到 %TEMP%\temps（边 10）。

**OceanLotus**

OceanLotus，也称为 APT32，被认为是一个以东南亚国家为目标的越南 APT 组织。此恶意软件执行后（边 1），会丢弃一个诱饵文档和一个擦除应用程序（边 2 和 3），并在 Microsoft Word 中启动诱饵文档（边 4 和 5）。然后，可执行文件解密其资源并丢弃一个合法的 Symantec 网络访问控制应用程序副本（边 6）、一个加密的后门（边 7）和一个恶意 DLL 文件（边 8）。Symantec 应用程序是签名且合法的，默认情况下会加载同一文件夹中的所有库。在这种情况下，执行后（边 9 和 10），该应用程序会加载在同一目录中丢弃的恶意 DLL 文件（边 11）。然后，它读取后门文件（边 12），这会导致访问注册表（边 13）、加载 HTTPProv.dll 库（边 14）并创建一个注册表键（边 15）。最后，恶意软件连接到其母舰（边 16 和 17）。

**HawkEye**

HawkEye 是一种作为服务提供的凭据窃取恶意软件，在 APT 活动中非常流行。这种恶意软件的新变种使用进程空洞技术将其代码注入合法签名的 .NET 框架可执行文件中，并配备了多种高级功能以规避检测。这种新变种通常以压缩文件的形式传递，解压（边 1 和 2）并执行（边 3）后，它会生成一个子进程 RegAsm，这是 Microsoft .Net 框架中的一个组件注册工具（边 4）。HawkEye 将 PE 文件提取到内存中，然后将其注入 RegAsm 进程。休眠 10 秒后，RegAsm 进程生成两个名为 vbc 的子进程，这两个进程都来自 .Net 框架（边 5 和 6）。其中一个进程收集浏览器凭据，另一个则专注于电子邮件和即时通讯应用程序。我们在每个浏览器（边 7-18）或电子邮件/即时通讯应用程序（边 19-26）的报告中提到的名称处添加了一个类型为文件或注册表的节点。请注意，这些应用程序可能会将一些对攻击者感兴趣的信息存储在文件或注册表中，因此我们的搜索不限于文件或注册表。收集的凭据定期保存到 %temp% 目录下的 ∗.tmp 文件中（边 27 和 28），过一段时间后，RegAsm 进程将这些 tmp 文件的全部数据读入内存（边 29 和 30）并立即删除它们（边 31 和 32）。最后，RegAsm 从 “http[s]:\\whatismyipaddress.com\” 网络服务查找机器的公共 IP 地址（边 33 和 34），然后将收集到的信息外泄到攻击者的电子邮件地址（边 35）。

需要注意的是，在 HawkEye 的查询图中，有一些标签和类型完全相同的节点，例如 F 和 G 或 J 和 K。然而，这些节点根据与其他实体的依赖关系对齐到不同的节点。例如，节点 F 与浏览器应用程序交互，而节点 G 与电子邮件/即时通讯应用程序交互。此外，浏览器或邮件应用程序节点的对齐独立于它们在系统上的安装情况。许多这些应用程序并未安装在测试机器上，但是当恶意软件尝试检查这些应用程序是否安装在系统上时，它会发起一个 OPEN 事件，该事件会被 Poirot 检测到。

---