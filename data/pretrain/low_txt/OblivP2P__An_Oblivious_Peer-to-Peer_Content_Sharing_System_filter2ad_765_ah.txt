### Multiple Trackers in the System

In addition to the primary focus, it would be valuable to investigate the relationship between the number of trackers and the number of peers for achieving an ideal throughput in OBLIVP2P.

### 8. Related Work

#### Long-Term Traffic Analysis
Anonymous systems such as mix networks and onion routing are vulnerable to long-term traffic analysis, as discussed in Section 2. Statistical disclosure attacks, initially proposed by Danezis and later enhanced by other researchers, have improved the likelihood of de-anonymizing users on these systems [66–73]. Furthermore, existing traffic analysis attacks on onion routing-based approaches [27–30, 45] can reveal users' identities by observing multiple communication rounds. Other P2P systems like Crowds [19], Tarzan [18], MorphMix [20], AP3 [21], Salsa [22], ShadowWalker [23], and Freenet [3] offer anonymity for users. However, these systems are limited in their effectiveness against global adversaries with long-term traffic analysis capabilities.

#### Side-Channels
Previous research has shown that side channels, such as packet sizes, the number of packets, and timing, can be exploited to leak users' private information, including medical conditions, financial details, and investment secrets [74]. Attackers can use machine learning techniques, such as Support Vector Machines, to identify the websites a user is browsing based on network traffic [28–30, 45]. However, our focus in this paper is solely on preventing long-term pattern traffic analysis. The aforementioned side-channel attacks are outside the scope of this work.

### 9. Multi-Servers and Parallel ORAM

There have been several works on optimizing ORAM constructions by leveraging multiple servers [75–77], multiple CPUs [56, 78], computational servers [53, 54], or distributed under a weaker threat model [55]. However, none of these recent constructions are directly applicable to a P2P setting due to the inherent client/server architecture, which results in a single-entity bottleneck. The client must either perform non-trivial computations or transmit a significant amount of data. We briefly discuss these works below.

- **OblivStore [76]**, Lu and Ostrovsky [75], and Stefanov and Shi [77] demonstrate how to reduce communication overhead by leveraging multiple ORAM nodes and servers. However, all these constructions are centralized and route blocks through a tracker, leading to a single entity bottleneck.
- **Oblivious Parallel RAM (OPRAM) [56, 78]**: Motivated by current multi-CPU architectures, OPRAM allows parallel access to the same or multiple resources. However, OPRAM does not decrease communication overhead, making it a single-entity bottleneck.
- **Oblivious Network RAM (ONRAM) [55]**: ONRAM reduces the communication overhead between the client and multiple memory banks, making it constant in the number of blocks. However, it assumes a weak threat model and cannot achieve obliviousness in the presence of a global adversary.

### 9. Conclusion

We advocate for hiding data access patterns as a necessary step in defending against long-term traffic pattern analysis in P2P content sharing systems. To this end, we propose OBLIVP2P—an oblivious peer-to-peer protocol. Our evaluation demonstrates that OBLIVP2P is parallelizable and linearly scalable with an increase in the number of peers, without creating a bottleneck on a single entity.

### Acknowledgements

We thank the anonymous reviewers of this paper for their helpful feedback. We also thank Erik-Oliver Blass, Travis Mayberry, Shweta Shinde, and Hung Dang for useful discussions and feedback on an early version of the paper. This work is supported by the Ministry of Education, Singapore, under Grant No. R-252-000-560-112. All opinions expressed in this work are solely those of the authors. A note of thanks to the DeterLab team [64] for enabling access to the infrastructure.

### References

[1] “BitTorrent,” http://www.bittorrent.com/.
[2] “Storj.io,” http://storj.io/.
[3] “Freenet: The Free Network,” https://freenetproject.org.
[4] “Akamai,” http://www.akamai.com/.
[5] S. Iyer, A. Rowstron, and P. Druschel, “Squirrel: A Decentralized Peer-to-Peer Web Cache,” in PODC, 2002.
[6] “uTorrent & BitTorrent Surges to 150 Million Monthly Users,” https://torrentfreak.com/bittorrent-surges-to-150-million-monthly-users-120109/.
[7] “Palo Alto Networks Application Usage & Threat Report Visualization,” http://researchcenter.paloaltonetworks.com/app-usage-risk-report-visualization/.
[8] M. Piatek, T. Kohno, and A. Krishnamurthy, “Challenges and Directions for Monitoring P2P File Sharing Networks, or, Why My Printer Received a DMCA Takedown Notice,” in HotSec, 2008.
[9] G. Siganos, J. M. Pujol, and P. Rodriguez, “Monitoring the BitTorrent Monitors: A Bird’s Eye View,” in PAM, 2009.
[10] S. Le Blond, C. Zhang, A. Legout, K. Ross, and W. Dabbous, “I Know Where You Are and What You Are Sharing: Exploiting P2P Communications to Invade Users’ Privacy,” in IMC, 2011.
[11] D. L. Chaum, “Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,” Communications of the ACM, 1981.
[12] G. Danezis, R. Dingledine, and N. Mathewson, “Mixminion: Design of a Type III Anonymous Remailer Protocol,” in IEEE S&P, 2003.
[13] U. Möller, L. Cottrell, P. Palfrader, and L. Sassaman, “Mixmaster Protocol—Version 2,” 2003.
[14] M. G. Reed, P. F. Syverson, and D. M. Goldschlag, “Anonymous Connections and Onion Routing,” J-SAC, 1998.
[15] R. Dingledine, N. Mathewson, and P. F. Syverson, “Tor: The Second-Generation Onion Router,” in USENIX Security, 2004.
[16] T. Wang, K. Bauer, C. Forero, and I. Goldberg, “Congestion-Aware Path Selection for Tor,” in FC, 2012.
[17] M. Akhoondi, C. Yu, and H. V. Madhyastha, “Lastor: A Low-Latency AS-Aware Tor Client,” in IEEE S&P, 2012.
[18] M. J. Freedman and R. Morris, “Tarzan: A Peer-to-Peer Anonymizing Network Layer,” in CCS, 2002.
[19] M. K. Reiter and A. D. Rubin, “Crowds: Anonymity for Web Transactions,” TISSEC, 1998.
[20] M. Rennhard and B. Plattner, “Introducing MorphMix: Peer-to-Peer Based Anonymous Internet Usage with Collusion Detection,” in WPES, 2002.
[21] A. Mislove, G. Oberoi, A. Post, C. Reis, P. Druschel, and D. S. Wallach, “AP3: Cooperative, Decentralized Anonymous Communication,” in SIGOPS European Workshop, 2004.
[22] A. Nambiar and M. Wright, “Salsa: A Structured Approach to Large-Scale Anonymity,” in CCS, 2006.
[23] P. Mittal and N. Borisov, “ShadowWalker: Peer-to-Peer Anonymous Communication Using Redundant Structured Topologies,” in CCS, 2009.
[24] A. Pfitzmann and M. Hansen, “Anonymity, Unlinkability, Undetectability, Unobservability, Pseudonymity, and Identity Management—A Consolidated Proposal for Terminology,” Version v0, 2008.
[25] D. Agrawal and D. Kesdogan, “Measuring Anonymity: The Disclosure Attack,” IEEE S&P, 2003.
[26] D. Kesdogan and L. Pimenidis, “The Hitting Set Attack on Anonymity Protocols,” in IH, 2004.
[27] M. Edman and P. Syverson, “AS-Awareness in Tor Path Selection,” in CCS, 2009.
[28] K. P. Dyer, S. E. Coull, T. Ristenpart, and T. Shrimpton, “Peek-a-Boo, I Still See You: Why Efficient Traffic Analysis Countermeasures Fail,” in IEEE S&P, 2012.
[29] T. Wang and I. Goldberg, “Improved Website Fingerprinting on Tor,” in WPES, 2013.
[30] T. Wang, X. Cai, R. Nithyanand, R. Johnson, and I. Goldberg, “Effective Attacks and Provable Defenses for Website Fingerprinting,” in USENIX Security, 2014.
[31] “BitTorrent Over Tor Isn’t a Good Idea,” https://blog.torproject.org/blog/bittorrent-over-tor-isnt-good-idea.
[32] S. L. Blond, P. Manils, C. Abdelberi, M. A. D. Kaafar, C. Castelluccia, A. Legout, and W. Dabbous, “One Bad Apple Spoils the Bunch: Exploiting P2P Applications to Trace and Profile Tor Users,” arXiv, 2011.
[33] O. Goldreich and R. Ostrovsky, “Software Protection and Simulation on Oblivious RAMs,” J. ACM, 1996.
[34] “Oblivious Peer-to-Peer Protocol,” https://github.com/jiayaoqijia/OblivP2P-Code.
[35] “Gnutella,” https://en.wikipedia.org/wiki/Gnutella.
[36] Y. Jia, G. Bai, P. Saxena, and Z. Liang, “Anonymity in Peer-Assisted CDNs: Inference Attacks and Mitigation,” in PETS, 2016.
[37] “Scaneye’s Global BitTorrent Monitor,” http://www.cogipas.com/anonymous-torrenting/torrent-monitoring/.
[38] K. Bauer, D. McCoy, D. Grunwald, and D. Sicker, “BitStalker: Accurately and Efficiently Monitoring BitTorrent Traffic,” in WIFS, 2009.
[39] T. Chothia, M. Cova, C. Novakovic, and C. G. Toro, “The Unbearable Lightness of Monitoring: Direct Monitoring in BitTorrent,” in SECURECOMM, 2012.
[40] G. Danezis and C. Diaz, “A Survey of Anonymous Communication Channels,” Tech. Rep., 2008.
[41] H. Corrigan-Gibbs, D. Boneh, and D. Mazières, “Riposte: An Anonymous Messaging System Handling Millions of Users,” in IEEE S&P, 2015.
[42] M. Backes, A. Kate, S. Meiser, and E. Mohammadi, “(Nothing Else) MATOR(S): Monitoring the Anonymity of Tor’s Path Selection,” in CCS, 2014.
[43] “Tor Suffers Traffic Confirmation Attack,” http://www.techtimes.com/articles/11711/20140802/tor-suffers-traffic-confirmation-attacks-say-goodbye-to-anonymity-on-the-web.htm.
[44] “Traffic Confirmation Attack,” https://blog.torproject.org/blog/tor-security-advisory-relay-early-traffic-confirmation-attack.
[45] A. Panchenko, L. Niessen, A. Zinnen, and T. Engel, “Website Fingerprinting in Onion Routing Based Anonymization Networks,” in WPES, 2011.
[46] J. Kong, W. Cai, and L. Wang, “The Evaluation of Index Poisoning in BitTorrent,” in ICCSN, 2010.
[47] K. El Defrawy, M. Gjoka, and A. Markopoulou, “BotTorrent: Misusing BitTorrent to Launch DDoS Attacks,” SRUTI, 2007.
[48] “Software Guard Extensions Programming Reference,” software.intel.com/sites/default/files/329298-001.pdf, 2013.
[49] B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio: Nearly Practical Verifiable Computation,” in IEEE S&P, 2013.
[50] E. Shi, T.-H. Chan, E. Stefanov, and M. Li, “Oblivious RAM with O(log³(N)) Worst-Case Cost,” in ASIACRYPT, 2011.
[51] E. Stefanov, M. van Dijk, E. Shi, C. Fletcher, L. Ren, X. Yu, and S. Devadas, “Path ORAM: An Extremely Simple Oblivious RAM Protocol,” in CCS, 2013.
[52] L. Ren, C. Fletcher, A. Kwon, E. Stefanov, E. Shi, M. van Dijk, and S. Devadas, “Constants Count: Practical Improvements to Oblivious RAM,” in USENIX Security, 2014.
[53] S. Devadas, M. van Dijk, C. Fletcher, L. Ren, E. Shi, and D. Wichs, “Onion ORAM: A Constant Bandwidth Blowup Oblivious RAM,” IACR, 2015.
[54] T. Moataz, T. Mayberry, and E.-O. Blass, “Constant Communication ORAM with Small Blocksize,” in CCS, 2015.
[55] D. Dachman-Soled, C. Liu, C. Papamanthou, E. Shi, and U. Vishkin, “Oblivious Network RAM and Leveraging Parallelism to Achieve Obliviousness,” in ASIACRYPT, 2015.
[56] E. Boyle, K. Chung, and R. Pass, “Oblivious Parallel RAM and Applications,” in TCC, 2016.
[57] D. S. Roche, A. J. Aviv, and S. G. Choi, “A Practical Oblivious Map Data Structure with Secure Deletion and History Independence,” IACR, 2015.
[58] B. Chor, O. Goldreich, E. Kushilevitz, and M. Sudan, “Private Information Retrieval,” in FOCS, 1995.
[59] D. Boneh, K. Lewi, H. W. Montgomery, and A. Raghunathan, “Key Homomorphic PRFs and Their Applications,” in CRYPTO, 2013.
[60] M. Naor and O. Reingold, “Number-Theoretic Constructions of Efficient Pseudo-Random Functions,” in FOCS, 1997.
[61] “Cloc,” http://cloc.sourceforge.net/.
[62] “Python Cryptography Toolkit,” https://pypi.python.org/pypi/pycrypto.
[63] “Python ECC,” https://github.com/johndoe31415/joeecc.
[64] “DeterLab,” https://www.isi.deterlab.net/index.php3.
[65] A. R. Bharambe, C. Herley, and V. N. Padmanabhan, “Analyzing and Improving BitTorrent Performance,” Microsoft Research, 2005.
[66] G. Danezis, “Statistical Disclosure Attacks,” in Security and Privacy in the Age of Uncertainty, 2003.
[67] G. Danezis, C. Diaz, and C. Troncoso, “Two-Sided Statistical Disclosure Attack,” in PETS, 2007.
[68] G. Danezis and A. Serjantov, “Statistical Disclosure or Intersection Attacks on Anonymity Systems,” in IH, 2005.
[69] N. Mathewson and R. Dingledine, “Practical Traffic Analysis: Extending and Resisting Statistical Disclosure,” in PETS, 2005.
[70] N. Mallesh and M. Wright, “The Reverse Statistical Disclosure Attack,” in IH, 2010.
[71] C. Troncoso, B. Gierlichs, B. Preneel, and I. Verbauwhede, “Perfect Matching Disclosure Attacks,” LNCS, 2008.
[72] G. Danezis and C. Troncoso, “Vida: How to Use Bayesian Inference to De-Anonymize Persistent Communications,” in PETS, 2009.
[73] F. Pérez-González and C. Troncoso, “Understanding Statistical Disclosure: A Least Squares Approach,” in PETS, 2012.
[74] S. Chen, R. Wang, X. Wang, and K. Zhang, “Side-Channel Leaks in Web Applications: A Reality Today, a Challenge Tomorrow,” in IEEE S&P, 2010.
[75] S. Lu and R. Ostrovsky, “Distributed Oblivious RAM for Secure Two-Party Computation,” in TCC, 2013.
[76] E. Stefanov and E. Shi, “Oblivistore: High Performance Oblivious Distributed Cloud Data Store,” in NDSS, 2013.
[77] ——, “Multi-Cloud Oblivious Storage,” in CCS, 2013.
[78] B. Chen, H. Lin, and S. Tessaro, “Oblivious Parallel RAM: Improved Efficiency and Generic Constructions,” in TCC, 2016.

---

This optimized version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.