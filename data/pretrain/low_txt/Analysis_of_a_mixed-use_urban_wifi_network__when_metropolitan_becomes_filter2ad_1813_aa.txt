# Analysis of a Mixed-Use Urban WiFi Network: When Metropolitan Becomes Neapolitan

## Authors
Mikhail Afanasyev, Tsuwei Chen†, Geoffrey M. Voelker, and Alex C. Snoeren  
University of California, San Diego and †Google Inc.  
{mafanasyev, voelker, snoeren}@cs.ucsd.edu, tsuwei.chen@gmail.com

## Abstract
While WiFi was initially designed as a local-area access network, mesh networking technologies have led to increasingly expansive deployments of WiFi networks. In urban environments, the WiFi mesh frequently supplements a number of existing access technologies, including wired broadband networks, 3G cellular, and commercial WiFi hotspots. The role of city-wide WiFi deployments in the increasingly diverse access network spectrum remains an open question. We study the usage of the Google WiFi network deployed in Mountain View, California, and find that usage naturally falls into three classes based almost entirely on client device type. Moreover, each of these classes of use has significant geographic locality, following the distribution of residential, commercial, and transportation areas of the city. Finally, we find a diverse set of mobility patterns that map well to the archetypal use cases for traditional access technologies.

## Categories and Subject Descriptors
C.2.3 [Computer Communication Networks]: Network Operations

## General Terms
Measurement, Performance

## 1. Introduction
Municipal wireless networks have generated significant excitement and controversy in recent years. The promise of nearly ubiquitous Internet access for WiFi-capable devices has led many city governments and private entities to propose and deploy city-wide mesh networks. Simultaneously, the number and type of WiFi-capable devices have exploded due to the increasing popularity of laptops and smartphones like the Apple iPhone. However, mesh WiFi networks are far from the only networks on which such devices operate. In urban environments, the WiFi mesh frequently supplements a number of existing access technologies, including wired broadband networks, 3G cellular, and commercial WiFi hotspots.

Given the plethora of alternative access technologies, the long-term economic feasibility of metropolitan mesh networks appears uncertain. It is unclear what role city-wide WiFi deployments play from a user’s perspective, independent of any particular network agreement or charging policy. While a great deal of academic research has focused on developing and improving wireless mesh protocols, studies of deployed wireless networks have only recently begun appearing in the literature [1, 5, 7, 8]. These studies focus almost exclusively on the operation and effectiveness of the mesh backbone; to the best of our knowledge, none have yet reported on how clients actually use a metropolitan network.

We study the usage of the Google WiFi network, a freely available outdoor wireless Internet service deployed in Mountain View, California, consisting of over 500 Tropos MetroMesh pole-top access points. Due to its location in the heart of Silicon Valley and no-cost access policy, we expect usage in the Google network to represent an optimistic view of potential client demand in other urban networks. Using 28 days of overall network statistics from Spring 2008, we analyze the temporal activity of clients, their traffic demands on the network, the mobility of users as they roam through the city, and the diversity and coverage of users spread geographically in the network.

We find that network usage uniquely blends the characteristics of three distinctly different user populations into a single metropolitan wireless network; we call such a hybrid network "Neapolitan." Figure 1 shows one dramatic example of this usage variation: when plotting bytes transferred as a function of session length, three distinct clusters emerge: one cluster of short, light sessions at the left axis, another cluster of extremely long and heavy sessions at the far right, and a third that spans the full range of session lengths and sizes. If one classifies these sessions by device type, three distinct user populations emerge: local residents and businesses using it as a static WiFi mesh access network (a substitute for DSL or cable modem service), laptop users with mobility and workload patterns reminiscent of campus and other public hotspot WiFi networks, and smartphone users combining the ubiquitous coverage of cellular networks with the higher performance of wireless LANs.

Each of these classes has significant geographic locality in the Google WiFi network, following the distribution of residential, commercial, and transportation areas of the city. Additionally, we observe a diverse set of mobility patterns that map well to the archetypal use cases for traditional access technologies. Because the Google network is a production network—as opposed to a research prototype—user privacy is paramount. Hence, our study focuses exclusively on client aggregates; we make no attempt to isolate or analyze the traffic or mobility patterns of any particular clients. Moreover, we limit our traffic analysis to high-level application classification based upon protocol and port numbers. Finally, because we do not collect any client-side information, we report exclusively upon the behavior of clients that successfully connect to the Google network; potential clients that are either unable (due to, for example, a high rate of motion or poor signal strength at their location) or choose not to connect to the network are not represented in our data.

Due to the lack of comparable measurements for other networks, we are unable to comment on the generality of our conclusions. Instead, we hope that our study will encourage researchers and network operators to report upon the usage within other mesh deployments to inform the ongoing debate about the future of metropolitan WiFi. The remainder of this paper is organized as follows. We begin by surveying related work in Section 2 before describing the architecture of the Google WiFi network and our data collection methodology in Section 3. We analyze the disparate network usage patterns in Section 4 and then turn our attention to client mobility in Section 5. Finally, Section 6 considers the ramifications of observed usage on network coverage and deployment, and Section 7 summarizes our findings.

## 2. Related Work
The Google WiFi network represents one of the latest in various community, commercial, and rural efforts to use commodity 802.11 hardware to construct mesh backbone networks. Since 802.11 was not originally tailored for use in a mesh, work in mesh network deployments has encompassed nearly all aspects of network design, including network architecture [5], MAC protocol development [21], routing protocol design [6], and network planning and provisioning [26].

Measurement studies of urban WiFi mesh networks inform such work in network design, implementation, and deployment. Aguayo et al. captured link-level measurements of the Roofnet community network in Cambridge, MA, to evaluate the network performance and reliability [1]. Camp et al. used the Technology For All (TFA) urban mesh network in Houston, TX, to characterize how control and management traffic degrade network performance [8], to develop models to correlate link characteristics with application performance, and to evaluate AP placement topologies to increase throughput [9]. Robinson et al. introduced low-overhead techniques for assessing mesh network geographic coverage for planning, evaluating the techniques on both TFA and the Google WiFi network [23]. Finally, Brik et al. combine both passive and active measurements of the MadMesh commercial mesh network in downtown Madison, WI, to evaluate mesh planning, deployment, routing, and user experience and workload [7]. In large part, these studies are orthogonal to our measurements of the Google WiFi network, and they therefore complement each other. The MadMesh study characterized some aspects of user activity, and we make comparisons when possible in Section 4. Points of comparison, such as the daily variation in the number of users, are in reasonable agreement, suggesting that at least some aspects of the Google WiFi network generalize beyond the uniqueness of being deployed in the heart of Silicon Valley. Otherwise, lacking comparable user workload and behavior studies, we hesitate to generalize beyond the one network we evaluated.

The "modem" users in our study are similar to users of community and commercial backbone mesh networks exemplified by Roofnet [1]. Community and commercial mesh networks often serve as multi-hop transit between homes, businesses, and public locales and the Internet. Mobility is possible, but not necessarily the primary goal; as such, network use tends to be similar to use with DSL or cable modem service. Their application workloads and network utilization are most useful as a point of comparison with the other two user populations in our study; they only exhibit mobility to the extent to which their AP associations flap over time.

The "hotspot" user base in our study most closely resembles user populations of single-hop access wireless LANs, such as university campus networks, both in the dominant applications used and the relatively limited user mobility. Numerous studies of indoor 802.11 networks have covered a variety of environments, including university departments [10, 11, 27], corporate enterprises [4], and conference and professional meetings [3, 14, 15, 18, 20, 24]. These studies have focused on network performance and reliability as well as user behavior from the perspectives of low-level network characteristics to high-level application use. With their more extensive geographic coverage, larger-scale studies of outdoor 802.11 networks on university campuses have provided further insight into mobility and other user behavior [12, 13, 16, 19, 25, 29].

The dominant presence of iPhone users represents perhaps the most interesting aspect of the Google WiFi user population. WiFi smartphones represent an emerging market early in its exponential adoption phase, yet it is the WiFi user population that is the least well understood. Tang and Baker's detailed study of the Metricom metropolitan wireless network [28] is most closely related to the smartphone population of the Google WiFi network. Metricom operated a Ricochet packet radio mesh network covering three major metropolitan areas. The study covers nearly two months of activity in the San Francisco Bay Area, focusing on network utilization and user mobility within the network. Presumably, cellular providers measure cellular data characteristics extensively, but these results are typically considered confidential.

Finally, we note that rural mesh networks in developing regions typically support targeted services [22], such as audio and video conferencing to provide remote medical treatment, and consequently have application characteristics specific to their intended use.

## 3. The Network
The Google WiFi network is a free, outdoor wireless Internet service deployed in Mountain View, California. The network has been continuously operational since August 16, 2006, and provides public access to anyone who signs up for an account. The network is accessible using either traditional (SSID GoogleWiFi) and secure (WPA/802.1x, SSID GoogleWiFiSecure) 802.11 clients. Aside from the standard prohibitions of SPAM, hacking, and other inappropriate activities, Google does not limit the types of traffic that can be transmitted over the network. However, it does rate-limit individual clients to 1 Mb/sec.

### 3.1 Network Structure
The network consists of over 500 Tropos MetroMesh pole-top access points. Each Tropos node has a distinct identifier and a well-known geographic location; Figure 2 shows the approximate location of the Tropos nodes. Each Tropos node serves as an access point (AP) for client devices, as well as a relay node in a wide-area backhaul mesh that provides connectivity to the wired gateways. The topology of the Tropos mesh network is constructed dynamically through a proprietary Tropos routing algorithm. A pure mesh network of this scale exhibits significant traffic congestion at nodes close to the gateway router. To alleviate the congestion, the Google WiFi network is hierarchically clustered around approximately 70 point-to-point radio uplinks that serve as a fixed long-haul backbone for the mesh network.

Traffic is eventually routed to one of three distinct wired gateways spread across the city, which then forward the traffic to the main Google campus where it is routed to a centralized authorization and authentication gateway. Google provides single sign-on authentication and authorization service, but, at the link layer, 802.11 client devices continue to associate with each Tropos AP individually. All Tropos nodes support the RADIUS accounting standard [17] and provide periodic updates to the central server.

### 3.2 Data Collection
We analyze a trace of 28 days of accounting information collected by the central Google WiFi RADIUS server during the Spring of 2008. Periodic updates are generated by all Tropos nodes for each associated client every fifteen minutes. Tropos nodes issue additional updates when clients first associate or disassociate (either explicitly—which is rare—or through a 15-minute timeout). Table 1 shows the portion of the RADIUS log records that we use for our study. For the purposes of this paper, we focus almost exclusively on layer-three information: we do not consider the link layer behavior of the network. (Although we do make occasional use of layer-two accounting information as described below.)

Additionally, to facilitate our study of the types of application traffic in the network (Section 4.2.2), we obtained five days worth of packet-header traces collected at the central Internet gateway of the Google WiFi network. The header trace contains only (a prefix of) the first packet of each flow for the first fifteen minutes of each hour. Because the trace was collected at the gateway—as opposed to inside the wireless mesh itself—we do not observe layer-two protocol traffic such as ARP, nor many DHCP requests handled by the Tropos nodes themselves. Moreover, we only observe layer-three traffic entering or leaving the Google WiFi network; our traces do not contain traffic whose source and destination both reside inside the WiFi network. A comparison of the trace content to the statistics reported by the RADIUS logs (which do include traffic internal to the network) indicates the volume of such traffic is negligible, however.

#### 3.2.1 Data Correction
During the course of our analysis, we discovered several bugs in the Tropos accounting mechanism. In particular, a number of fields are susceptible to roll-over, but such events are readily detectable. More significantly, the Acct-Output-Octets (AOO) field is occasionally corrupt, leading to spurious traffic reports for roughly 30% of all client sessions. Tropos confirmed the bug and informed us that the latest version of the Tropos software fixes it. Unfortunately, our traces were collected before the software update was applied.

Luckily, the layer-two traffic information reported by the Tropos nodes appears accurate, so we are able to both detect and correct for corrupt layer-three traffic information. We detect invalid log records by comparing the number of layer-two output octets (TLOO) to the layer-three count (AOO); there should always be more layer-two octets than layer-three due to link-layer headers and retransmissions. If we discover instances where the layer-three value is larger than layer two, we deem the layer-three information corrupt and estimate it using layer-two information:

\[ \text{AOO} = 
\begin{cases} 
\frac{\text{TLOO} \times (\text{AOP}/\text{TLOF}) - (32 \times \text{AOP})}{\text{if AOO} \geq \text{TLOO}} \\
\text{otherwise, use AOO}
\end{cases} \]

In other words, we scale the layer-two octet field based upon the ratio of layer-two frames to layer-three packets to account for link-layer loss, and subtract 32 bytes per packet for link-layer headers.

#### 3.2.2 Client Identification
To preserve user privacy, we make no attempt to correlate individual users with their identity through the Google authentication service. Instead, we focus entirely on the client access device and use MAC addresses to identify users. This approximation is not without its pitfalls—we will incorrectly classify shared devices as being one user, and are unable to correlate an individual user’s activity across devices. While we speculate that a number of users may access the Google WiFi network with multiple distinct devices (a laptop and smartphone, for example), we consider this a small concession in the name of privacy.

We have aggregated clients into groups based upon the class of device they use to access the network. We classify devices based upon their manufacturer, which we determine based upon their MAC addresses. Specifically, we use the first three octets, commonly known as the Organizationally Unique Identifier (OUI). Because many companies manufacture devices using several OUIs, we have manually grouped OUIs from similar organizations (e.g., “Intel” and “Intel Corp.”) into larger aggregates. Table 2 shows some of the most popular OUI aggregates in our trace.

Apple bears particular note. While we have attempted to determine which OUIs are used for iPhones as opposed to other Apple devices (PowerBooks, MacBooks, iPod Touch, etc.), we have observed several OUIs that are in use by both laptops and iPhones. Hence, accurately de-aliasing these OUI blocks would require tedious manual verification. For the purposes of this paper, we have lumped all Apple devices together and consider them all to be iPhones. Somewhat surprisingly, this appears to be a reasonable approximation. We estimate that 88% of all Apple devices in our trace are iPhones.

To estimate the population of iPhone devices, we observed that Apple products periodically check for software updates by polling a central server, wu.apple.com.