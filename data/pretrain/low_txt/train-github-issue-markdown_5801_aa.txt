### Issue Report: CMake Configuration Error in OpenCV with CUDA

**Environment:**
- **Operating System:** Windows 10
- **CMake Version:** 3.18
- **CUDA Version:** 10.2
- **OpenCV Revision:** `0cbaaba`
- **OpenCV Contrib Revision:** `39ced2af67b5f76d5d2f3a9c1f9cebfc0ddd8c65`

**Error Description:**
During the CMake configuration process, the following errors were encountered:

1. **Error at `cmake/OpenCVDetectCUDA.cmake:111 (string)`**:
   - **Message:** `string sub-command STRIP requires two arguments.`
   - **Call Stack:**
     - `cmake/OpenCVDetectCUDA.cmake:164 (ocv_filter_available_architecture)`
     - `cmake/OpenCVFindLibsPerf.cmake:43 (include)`
     - `CMakeLists.txt:688 (include)`

2. **Error at `cmake/OpenCVDetectCUDA.cmake:125 (string)`**:
   - **Message:** `string sub-command REPLACE requires at least four arguments.`
   - **Call Stack:**
     - `cmake/OpenCVDetectCUDA.cmake:174 (ocv_wipeout_deprecated)`
     - `cmake/OpenCVFindLibsPerf.cmake:43 (include)`
     - `CMakeLists.txt:688 (include)`

**Investigation:**
- The errors appear to have been introduced after commit `476aa44`.
- The issue is likely related to changes in the `OpenCVDetectCUDA.cmake` file.

**Full Log:**
- **Detected Processor:** AMD64
- **Python Interp:** C:/Program Files/Python37/python.exe (version 3.7.7, minimum required is 2.7)
- **libjpeg-turbo:** VERSION = 2.0.4, BUILD = opencv-4.4.0-pre-libjpeg-turbo
- **OpenJPEG:** Not found (minimal suitable version: 2.0, recommended version >= 2.3.1)
- **IPPICV:** Downloaded: ippicv_2020_win_intel64_20191018_general.zip
  - **Intel IPP (ICV version):** 2020.0.0 [2020.0.0 Gold] at: E:/Lib_prebuild/opencv/prebuild_x64/3rdparty/ippicv/ippicv_win/icv
  - **Intel IPP Integration Wrappers sources:** 2020.0.0 at: E:/Lib_prebuild/opencv/prebuild_x64/3rdparty/ippicv/ippicv_win/iw
- **CUDNN:** Found at C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/lib/x64/cudnn.lib (version 7.6.5, minimum required is 7.5)
- **CUDA:** Detected version 10.2
- **CMake Errors:**
  - **STRIP Command Error:** `cmake/OpenCVDetectCUDA.cmake:111 (string)`
  - **REPLACE Command Error:** `cmake/OpenCVDetectCUDA.cmake:125 (string)`
- **CUDA NVCC Target Flags:** `-D_FORCE_INLINES`
- **Check Size of int:** Passed
- **MKL:** Found at E:/Lib_prebuild/MKL (version 2019.0.3)
  - **LAPACK(MKL):** Support enabled
- **JNI:** Found at C:/Program Files/Java/jdk-14.0.1/lib/jawt.lib
- **InferenceEngine:** Detected as cmake package (version 2.1.0)
  - **Warning:** InferenceEngine version not set, defaulting to 2020.3
- **VTK:** Found version 8.2.0 at C:/Lib/VTK/build_x64/lib/cmake/vtk-8.2/UseVTK.cmake
- **ADE:** Downloaded v0.1.1f.zip
- **OpenCV Python:** During development, append to PYTHONPATH: E:/Lib_prebuild/opencv/prebuild_x64/python_loader
- **FFMPEG:** Downloads: opencv_videoio_ffmpeg.dll, opencv_videoio_ffmpeg_64.dll, ffmpeg_version.cmake
- **mfapi.h and d3d11_4.h:** Found
- **Dependencies:**
  - **Caffe, Protobuf, Glog, freetype2, harfbuzz:** Not found
  - **gflags:** Found at C:/Lib/gflags/build_x64/lib/cmake/gflags (version 2.2.2)
  - **Eigen:** Found at E:/Lib_prebuild/eigen/build_x64/share/eigen3/cmake (version 3.3.7)
  - **glog:** Found at E:/Lib_prebuild/glog/prebuild_x64 (version 0.4.0)
  - **Ceres Solver:** Found at E:/Lib_prebuild/ceres-solver/build_x64 (version 1.14.0) with components: [EigenSparse, SparseLinearAlgebraLibrary, LAPACK, SuiteSparse, SchurSpecializations, C++11, OpenMP, Multithreading]
- **SFM Dependencies:** Checked and passed
- **Tesseract:** Not found
- **Allocator Metrics Storage Type:** `long long`
- **DNN:** Enabling Inference Engine NN Builder API support
- **xfeatures2d/boostdesc and xfeatures2d/vgg:** Various files downloaded
- **data:** Downloaded face_landmark_model.dat
- **NVIDIA_OPTICAL_FLOW:** Downloaded 79c6cee80a2df9a196f20afd6b598a9810964c32.zip
- **CMake Warning:** Configuration not supported, validate setupvars script in install directory

**Request for Assistance:**
@tomoaki0705, could you please look into this issue? The errors seem to be related to recent changes in the `OpenCVDetectCUDA.cmake` file.