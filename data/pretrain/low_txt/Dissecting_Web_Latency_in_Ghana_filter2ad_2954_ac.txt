### 5.4 SPDY vs TCP Optimizations

SPDY [8] is an application-layer protocol designed to enhance webpage loading times. Key features of the SPDY protocol include header compression and server push, which allows servers to send additional responses without explicit client requests. For example, a server might send a stylesheet along with the HTML, thereby reducing the number of round trips and speeding up page load times.

Given that blocking was identified as a significant issue in Section 4.3, we sought to evaluate the potential benefits of SPDY in reducing blocking overhead. We conducted experiments by requesting 42 pages from four different locations: Accra, Abu Dhabi, Bremen, and New York. Each experiment was repeated five times to ensure sufficient randomness for a robust Cumulative Distribution Function (CDF) population. Figure 9 illustrates the overall comparison between SPDY and HTTP across all locations.

For the 42 websites that supported SPDY in our experiments, we found that SPDY did not provide significant performance gains compared to regular HTTP in developed regions (e.g., New York, Bremen). However, in Accra, SPDY showed a notable performance improvement, particularly in the upper 40% of page load times. This improvement can be attributed to SPDY's ability to multiplex HTTP requests into a single TCP connection per domain, thereby reducing the number of TCP connections required. As noted in [32], SPDY is particularly effective in reducing page load times for links with lower bandwidth and higher Round-Trip Times (RTTs).

**Figure 9: Per location SPDY vs HTTP in 2013**

In Ghana, where connections are more latency-constrained than bandwidth-constrained (at least for web browsing purposes), SPDY is a more effective solution than multiple TCP connections. Most popular browsers are configured by default to use multiple persistent TCP connections to avoid Head-of-Line (HOL) blocking. However, increasing the number of persistent TCP connections does not always improve HTTP performance [27]. In developing countries with scarce bandwidth and high sharing, increasing the number of TCP sessions can actually degrade HTTP performance [16].

### 5.5 TLS/SSL Speedups

Although the TLS protocol includes a resume handshake that significantly reduces the traffic and latency associated with handshakes, it requires the server to store the TLS session in its cache. Many servers, however, only store the TLS session for a short period, leading to frequent full handshakes. Approximately 15% of our recent web requests involved a secure connection establishment handshake.

Improving the handshake procedure can reduce overall load times. Combining the handshake with SPDY can potentially further improve page load times without adding significant computational load on the servers [3].

Fast-Track [28] is a proposed mechanism that caches the server’s public and negotiated parameters on the client side, as these parameters are nearly static. This approach reduces the overall TLS handshake traffic and the number of RTTs required, providing substantial gains in high-latency environments, such as those found in developing countries. However, Fast-Track requires modifications to both the client and server through TLS extensions, and not all servers support this feature. We do not present measurements of the potential TLS/SSL speedups because they require control over the server.

### 6. OTHER RELATED WORK

There is a wide range of related work in the networking literature, and we include here only works that have not yet been referenced. The Stream Control Transmission Protocol (SCTP) is a transport-layer protocol designed to replace TCP, offering multiplexed streams and stream-aware congestion control [29]. Using HTTP 1.1 over SCTP can help avoid the HOL blocking problem, where the loss of one Transport Protocol Data Unit (TPDU) causes TCP to halt the delivery of subsequent TPDUs until the lost TPDU is recovered. Structured Stream Transport (SST) is another protocol that uses "structured streams" to carry lightweight, independent streams over a common transport, sharing the same congestion control context [22].

Recent research [32] investigates the conditions under which SPDY outperforms HTTP. The study shows that SPDY performs better in scenarios with few network losses, high RTTs, and low bandwidth. Our findings corroborate these results, particularly in high-RTT conditions in developing countries like Ghana.

In [21], the authors propose increasing TCP’s initial window size to at least ten segments, which may also benefit developing regions.

### 7. CONCLUSIONS

In this paper, we presented an analysis of the key factors contributing to high end-to-end latency in web page downloads in Ghana. From our measurements over the past two years, we observed that DNS is a critical bottleneck in page load times, and simple solutions such as DNS caching can improve end-to-end performance. Additionally, the lack of server infrastructure within the country means that every request must be routed to US or European servers, resulting in high network latency. Even simple operations like HTTP redirections and TLS/SSL handshakes contribute significantly to page load times. We experimented with various well-known optimizations and described the effectiveness of promising approaches, including DNS caching, DNS server placement, caching redirects, using SPDY, and TLS/SSL speedups.

### 8. ACKNOWLEDGEMENTS

We thank Kessir Adjaho and David Hutchful for their assistance in collecting measurement data from Ghana. We also extend our gratitude to our shepherd, Harsha V. Madhyastha, and the anonymous reviewers for their valuable feedback. Talal Ahmad was partially supported by the Center for Technology and Economic Development at NYUAD (CTED).

### 9. REFERENCES

[1] Akamai: State of the Internet. http://www.akamai.com/stateoftheinternet. Accessed: 2014-05-04.
[2] Alexa - The top 500 sites on the web. http://www.alexa.com/topsites. Accessed: 2014-04-05.
[3] Is TLS Fast Yet? https://istlsfastyet.com/. Accessed: 2014-08-15.
[4] Make the Web Faster - Web metrics: Size and number of resources. http://developers.google.com/speed/articles/web-metrics. Accessed: 2014-05-04.
[5] Ookla Download Index 2012. http://www.netindex.com/download/allcountries/. Accessed: 2013-02-05.
[6] Root Servers. http://www.root-servers.org/. Accessed: 2013-03-15.
[7] SeleniumHQ Browser Automation, Version 2.41.0. http://docs.seleniumhq.org/.
[8] SPDY: An experimental protocol for a faster web. http://www.chromium.org/spdy/spdy-whitepaper. Accessed: 2014-05-04.
[9] SSL Profiles: Part 1 by Jason Rahm. http://devcentral.f5.com/articles/ssl-profiles-part-1. Accessed: 2014-04-05.
[10] The World in 2010: ICT Facts and Figures - ITU. http://www.itu.int/ITU-D/ict/material/FactsFigures2010.pdf. Accessed: 2014-05-04.
[11] Web Site Optimization: Maximum Website Performance. http://www.websiteoptimization.com/. Accessed: 2013-05-04.
[12] World Bank Group - World Development Indicators. http://data.worldbank.org/country/ghana. Accessed: 2013-04-30.
[13] E. Brewer, M. Demmer, M. Ho, et al. The challenges of technology research for developing regions. Pervasive Computing, IEEE, 5(2):15–23, 2006.
[14] M. Butkiewicz, Z. Wu, S. Li, et al. Enabling the transition to the mobile web with websieve. In Proc. of the 14th Workshop on Mobile Computing Systems and Applications, HotMobile, pages 14:1–14:6, New York, NY, USA, 2013.
[15] J. Charzinski. Traffic properties, client side cachability and CDN usage of popular web sites. In B. Müller-Clostermann, K. Echtle, and E. P. Rathgeb, editors, MMB/DFT, Lecture Notes in Computer Science, pages 136–150. Springer.
[16] J. Chen, L. Subramanian, J. Iyengar, and B. Ford. TAQ: enhancing fairness and performance predictability in small packet regimes. In Proc. of the 9th European Conference on Computer Systems, page 7. ACM, 2014.
[17] J. Chen, L. Subramanian, and J. Li. Ruralcafe: Web search in the rural developing world. In Proc. of the 18th International World Wide Web Conference, 2009.
[18] M. Chetty, S. Sundaresan, S. Muckaden, et al. Measuring Broadband Performance in South Africa. In Proc. of the 4th Annual Symposium on Computing for Development, pages 1:1–1:10, New York, NY, USA, 2013. ACM.
[19] Sahuquillo J. Pont A. Domenech J., Gil J.A. Ddg: An efficient prefetching algorithm for current web generation. In Proc. of the 1st IEEE Workshop on Hot Topics in Web Systems and Technologies (HotWeb). IEEE, 2006.
[20] B. Du, M. Demmer, and E. Brewer. Analysis of WWW traffic in Cambodia and Ghana. In Proc. of the 15th International Conference on WWW, pages 771–780, 2006.
[21] N. Dukkipati, T. Refice, Y. Cheng, et al. An Argument for Increasing TCP’s Initial Congestion Window. SIGCOMM Comput. Commun. Rev., 40(3):26–33, June 2010.
[22] B. Ford. Structured streams: A new transport abstraction. In Proc. of the Conference on Applications, Technologies, Architectures, and Protocols for Computer Communications, SIGCOMM ’07, pages 361–372, New York, NY, USA, 2007. ACM.
[23] S. Guo, MH Falaki, EA Oliver, et al. Very low-cost internet access using KioskNet. SIGCOMM Comput. Commun. Rev., 2007.
[24] B. Hull, V. Bychkovsky, Y. Zhang, et al. CarTel: A distributed mobile sensor computing system. Sensys, pages 125–138, 2006.
[25] Z. Koradia, G. Mannava, A. Raman, et al. First impressions on the state of cellular data connectivity in India. In Proc. of the 4th Annual Symposium on Computing for Development, Cape Town, South Africa, 2013.
[26] O. Ngwenyama, F. K. Andoh-Baidoo, F. Bollou, and O. Morawczynski. Is There A Relationship Between ICT, Health, Education And Development? An Empirical Analysis of five West African Countries from 1997-2003. The Electronic Journal of Information Systems in Developing Countries, 23, 2006.
[27] F. Baker P. Natarajan and P. D. Amer. Multiple TCP Connections Improve HTTP Throughput Myth or Fact? In Proc. of the IEEE 28th Int’l Performance Computing and Communications Conference. IEEE, 2009.
[28] H. Shacham and D. Boneh. Fast-track session establishment for TLS. In Mahesh Tripunitara, editor, Proc. of NDSS 2002, pages 195–202. Internet Society (ISOC), 2002.
[29] R. Stewart. Stream Control Transmission Protocol, September 2007. RFC4960.
[30] S. Sundaresan, N. Feamster, R. Teixeira, and N. Magharei. Measuring and Mitigating Web Performance Bottlenecks in Broadband Access Networks. In Proc. of the ACM Internet Measurement Conference, Barcelona, Spain, 2013.
[31] X. S. Wang, A. Balasubramanian, et al. Demystify Page Load Performance with WProf. In Proc. of the USENIX conference on Networked Systems Design and Implementation (NSDI), 2013.
[32] X. S. Wang, A. Balasubramanian, A. Krishnamurthy, and D. Wetherall. How Speedy is SPDY? In Proc. of the 11th USENIX Symposium on Networked Systems Design and Implementation (NSDI), pages 387–399, Seattle, WA, 2014.