### Optimized Text

This scheme outperforms all other Active Queue Management (AQM) schemes in this regard. The addition of Explicit Congestion Notification (ECN) significantly reduces the number of timeouts, and Proportional Integral (PI) control enables the majority of responses to experience response times proportional to their Round-Trip Time (RTT) divided by their window size. This is evident in Figure 26, where a dense, triangular-shaped mass of points can be observed starting at the origin and extending outward to the points (100,000, 6,000) and (100,000, 500). Note that similar triangles are also present, offset vertically by multiples of 1 second, which corresponds to the canonical packet loss timeout.

The second most striking result is the substantial performance variation between PI and Random Early Marking (REM) with packet dropping. This performance gap was closed through the addition of ECN. A preliminary analysis of REM's behavior suggests that ECN does not so much improve REM's behavior as it mitigates a fundamental design problem. Without ECN, REM consistently causes flows to experience multiple drops within a source’s congestion window, forcing them to recover losses more frequently through TCP's timeout mechanism rather than its fast recovery mechanism. When ECN is used, REM simply marks packets, thus avoiding timeouts even if multiple packets from a flow are marked within a window. Therefore, ECN appears to improve REM’s performance by mitigating the effects of its otherwise poor (compared to PI) marking/dropping decisions.

**Figures 21-23: Comparison of All Schemes with ECN**

- **Figure 21**: Comparison of all schemes with ECN at 90% load.
- **Figure 22**: Comparison of all schemes with ECN at 98% load.
- **Figure 23**: Comparison of all schemes with ECN at 105% load.

**Figure 24: CCDF of All Schemes with ECN, 98% Load**

Another notable point is the difference in performance between Adaptive RED (ARED) and the other AQM schemes. Specifically, the response time performance is consistently worse with ARED than with drop-tail. The exact reasons for these differences remain the subject of ongoing study, but our experiments suggest three primary factors:

1. **Byte Mode vs. Packet Mode**: PI and REM operate in "byte mode" by default, monitoring the queue length in bytes rather than packets. While ARED also has a byte mode, "packet mode" is the recommended setting. Byte mode allows for finer-grained queue measurements and, more importantly, biases the marking/dropping probability for individual packets based on their size relative to the average or maximum packet size. This results in lower drop probabilities for SYN and ACK packets in PI and REM compared to ARED.

2. **Gentle Mode in ARED**: In ARED’s "gentle mode," when the average queue size is between `maxth` and `2 * maxth`, ARED drops ECN-marked packets, following ECN guidelines. This rule is intended to deal with non-responsive flows but is counterproductive and explains much of ARED’s inability to benefit from ECN.

3. **Queue Length Sampling**: PI and REM periodically sample the instantaneous queue length when deciding to mark packets, whereas ARED uses a weighted average. The reliance on the average queue length limits ARED’s ability to react effectively to highly bursty traffic, such as web traffic. Notably, changing ARED’s weighting factor for computing the average queue length by an order of magnitude had no effect on performance.

### Conclusions

From the results reported above, we draw the following conclusions, based on the premise that user-perceived response times are the primary measure of performance, with link utilization and packet loss rates being important but secondary measures.

- For offered loads up to 80% of bottleneck link capacity, no AQM scheme provides better response time performance than simple drop-tail FIFO queue management. Further, the response times achieved on a 100 Mbps link are not substantially different from those on a 1 Gbps link with the same number of active users. This result is not changed by combining any of the AQM schemes with ECN.

- For loads of 90% of link capacity or greater, PI results in a modest improvement over drop-tail and other AQM schemes when ECN is not used.

- With ECN, both PI and REM provide significant response time improvements at offered loads at or above 90% of link capacity. At a load of 90%, PI and REM with ECN provide performance on a 100 Mbps link competitive with that achieved on a 1 Gbps link with the same number of active users.

- ARED with recommended parameter settings consistently resulted in the poorest response time performance. This result was not changed with the addition of ECN.

We conclude that without ECN, there is little end-user performance gain to be realized by employing any of the AQM schemes studied here. However, with ECN, performance can be significantly improved at near-saturation loads with either PI or REM. Thus, it appears likely that provider links may be operated at 80% of capacity even when not deploying any AQM (with or without ECN). Further, providers may be able to operate their links at even higher load levels without significant degradation in user-perceived performance provided PI or REM combined with ECN is deployed in their routers and ECN is implemented in TCP/IP stacks on the end-systems.

### Acknowledgements

We are indebted to Sanjeewa Athuraliya, Sally Floyd, Steven Low, Vishal Misra, and Don Towsley for their assistance in performing the experiments described herein. We are also grateful for the constructive comments of the anonymous referees and for the help of our shepherd, Dina Katabi.

This work was supported in part by the National Science Foundation (grants ITR-0082870, CCR-0208924, and EIA-0303590), Cisco Systems Inc., and the IBM Corporation.

### References

[1] S. Athuraliya, A Note on Parameter Values of REM with Reno-like Algorithms, http://netlab.caltech.edu, March 2002.
[2] S. Athuraliya, V. H. Li, S.H. Low, Qinghe Yin, REM: Active Queue Management, IEEE Network, Vol. 15, No. 3, May 2001, pp. 48-53.
[3] B. Braden, et al, Recommendations on Queue Management and Congestion Avoidance in the Internet, RFC 2309, April, 1998.
[4] M. Christiansen, K. Jeffay, D. Ott, and F.D. Smith, Tuning RED for Web Traffic, Proc., ACM SIGCOMM 2000, Sept. 2000, pp. 139-150.
[5] W. Feng, D. Kandlur, D. Saha, K. Shin, A Self-Configuring RED Gateway, Proc., INFOCOM ‘99, March 1999, pp. 1320-1328.
[6] S. Floyd, R. Gummadi, S. Shenker, Adaptive RED: An Algorithm for Increasing the Robustness of RED’s Active Queue Management, http://www.icir.org/floyd/papers/adaptiveRed.pdf, August 1, 2001.
[7] S. Floyd, and V. Jacobson, Random Early Detection Gateways for Congestion Avoidance, IEEE/ACM Transactions on Networking, Vol. 1 No. 4, August 1993, p. 397-413.
[8] C.V. Hollot, V. Misra, W.-B. Gong, D. Towsley, On Designing Improved Controllers for AQM Routers Supporting TCP Flows, Proc., IEEE INFOCOM 2001, April 2001, pp. 1726-1734.
[9] L. Rizzo, Dummynet: A simple approach to the evaluation of network protocols, ACM CCR, Vol. 27, No. 1, January 1997, pp. 31-41.
[10] C. Kenjiro, A Framework for Alternate Queueing: Towards Traffic Management by PC-UNIX Based Routers, Proc., USENIX 1998 Annual Technical Conf., New Orleans LA, June 1998, pp. 247-258.
[11] V. Misra, W.-B. Gong, D. Towsley, Fluid-based Analysis of a Network of AQM Routers Supporting TCP Flows with an Application to RED, Proc., ACM SIGCOMM 2000, pp. 151-160.
[12] K. Ramakrishnan, S. Floyd, D. Black, The Addition of Explicit Congestion Notification (ECN) to IP, RFC 3168, September 2001.
[13] F.D. Smith, F. Hernandez Campos, K. Jeffay, D. Ott, What TCP/IP Protocol Headers Can Tell Us About the Web, Proc. ACM SIGMETRICS 2001, June 2001, pp. 245-256.
[14] W. Willinger, M.S. Taqqu, R. Sherman, D. Wilson, Self-similarity through high variability: statistical analysis of ethernet LAN traffic at the source level, IEEE/ACM Transactions on Networking, Vol. 5, No. 1, February 1997, pp. 71-86.