### References

- **Kao, B. and H. GarciaMolina (1993).** "Deadline assignment in a distributed soft real-time system." *Proceedings of the 13th International Conference on Distributed Computing Systems.* pp. 428-437.
- **Klingemann, J., J. WÃ¤sch, and K. Aberer (1999).** "Deriving Service Models in Cross-Organizational Workflows." *Proceedings of RIDE - Information Technology for Virtual Enterprises (RIDE-VE '99), Sydney, Australia.* pp. 100-107.
- **Kochut, K. J., A. P. Sheth, and J. A. Miller (1999).** "ORBWork: A CORBA-Based Fully Distributed, Scalable and Dynamic Workflow Enactment Service for METEOR." *Large Scale Distributed Information Systems Lab, Department of Computer Science, University of Georgia, Athens, GA.*
- **Leymann, F. (2001).** "Web Services Flow Language (WSFL 1.0)." IBM Corporation. <http://www-4.ibm.com/software/solutions/webservices/pdf/WSFL.pdf>.
- **Luo, Z. (2000).** "Knowledge Sharing, Coordinated Exception Handling, and Intelligent Problem Solving to Support Cross-Organizational Business Processes." Ph.D. Dissertation. *Department of Computer Science, University of Georgia, Athens, GA.*
- **Marjanovic, O. and M. Orlowska (1999).** "On modeling and verification of temporal constraints in production workflows." *Knowledge and Information Systems* 1(2): 157-192.
- **Miller, J. A., D. Palaniswami, A. P. Sheth, K. J. Kochut, and H. Singh (1998).** "WebWork: METEOR2's Web-based Workflow Management System." *Journal of Intelligence Information Management Systems: Integrating Artificial Intelligence and Database Technologies (JIIS)* 10(2): 185-215.
- **Sadiq, S., O. Marjanovic, and M. E. Orlowska (2000).** "Managing Change and Time in Dynamic Workflow Processes." *The International Journal of Cooperative Information Systems* 9(1, 2): 93-116.
- **Shegalov, G., M. Gillmann, and G. Weikum (2001).** "XML-enabled workflow management for e-services across heterogeneous platforms." *The VLDB Journal* 10(1): 91-103.
- **Sheth, A. P., W. v. d. Aalst, and I. B. Arpinar (1999).** "Processes Driving the Networked Economy." *IEEE Concurrency* 7(3): 18-31.
- **Son, J. H., J. H. Kim, and M. H. Kim (2001).** "Deadline Allocation in a Time-Constrained Workflow." *International Journal of Cooperative Information Systems (IJCIS)* 10(4): 509-530.
- **Suchman, L. and E. Wynn (1984).** "Procedures and Problems in the Office." *Office: Technology and People* 2(2): 133-154.
- **Tang, J. and J. Veijalainen (1999).** "Using Fragmentation To Increase Reliability For Workflow Systems." *Society for Design and Process Science* 3(2): 33-48.
- **Wheater, S. M. and S. K. Shrivastava (2000).** "Reliability Mechanisms in the OPENflow Distributed Workflow System," *Department of Computing Science, University of Newcastle upon Tyne Technical Report 31, Esprit LTR Project No. 24962 - C3DS First Year Report,* pp. 269-288.
- **Zinky, J., D. Bakken, and R. Schantz (1997).** "Architectural Support for Quality of Service for CORBA Objects." *Theory and Practice of Object Systems* 3(1): 1-20.
- **Zisman, M. (1977).** "Representation, Specification and Automation of Office Procedures." Ph.D. Dissertation. *Department of Business Administration, Wharton School, University of Pennsylvania, Philadelphia, PA.*

### Chapter 2: Modeling Quality of Service for Workflows and Web Service Processes

#### 2.1 Abstract
Workflow management systems (WfMSs) have been used to support various types of business processes for over a decade. In e-commerce and web services, suppliers and customers define binding agreements or contracts specifying Quality of Service (QoS) metrics such as product delivery, deadlines, product quality, and service costs. Effective QoS management is crucial for the success of organizations in e-commerce. Therefore, when services or products are created or managed using workflows, the underlying WfMS must be capable of accepting QoS specifications and estimating, monitoring, and controlling the QoS rendered to customers. This paper presents a predictive QoS model that automatically computes the QoS for workflows based on atomic task QoS attributes. We describe a model for specifying QoS and an algorithm and simulation system to compute, analyze, and monitor workflow QoS metrics.

#### 2.2 Introduction
Organizations are continuously seeking innovative information systems to better fulfill their missions and strategic goals. With the advent of global economies, organizations need to be more competitive, efficient, flexible, and integrated at all levels, including their information systems. Over the past decade, WfMSs have gained prominence due to their ability to streamline and automate business processes, increase efficiency, and reduce costs.

Researchers have identified workflows as a key computing model for building web services applications and processes to connect and exchange information over the web. The advancements in e-services and web services set new requirements and challenges for workflow systems.

Our previous research has involved the development of fully distributed enactment services for workflow management. Our infrastructure, the METEOR system, and its components OrbWork and WebWork, have been used in various domains, including bioinformatics, healthcare, telecommunications, military, and university administration.

Our experience with real-world applications has highlighted that while existing WfMSs provide essential functionalities, they lack the capability to manage QoS, which is critical for e-commerce and modern markets. Managing QoS allows organizations to design, select, and monitor workflows more effectively, ensuring customer satisfaction. Although QoS has been a significant concern in networking, real-time applications, and middleware, few research efforts have focused on enhancing WfMSs to support QoS management.

For organizations, characterizing workflows based on QoS offers several advantages:
1. **Efficient Translation of Vision:** Workflows can be designed according to QoS metrics, making it easier to translate organizational vision into business processes.
2. **Selection and Execution:** Workflows can be selected and executed based on their QoS, better fulfilling customer expectations.
3. **Monitoring and Adaptation:** Workflows can be monitored and adapted to ensure compliance with QoS requirements and objectives.
4. **Evaluation of Alternatives:** When adaptation is necessary, alternative strategies can be evaluated to ensure that the QoS continues to meet initial requirements.

Our goal is to develop a comprehensive QoS model and methods to analyze and monitor QoS. We investigate relevant QoS dimensions, develop algorithms, and use simulation techniques to predict QoS. The paper is structured as follows: Section 2.3 describes a real-world scenario, Section 2.4 introduces our QoS model, Section 2.5 explains how QoS for workflow tasks is calculated, Section 2.6 presents an algorithm for computing and estimating workflow QoS, Section 2.7 provides an example, Section 2.8 discusses related work, Section 2.9 outlines future work, and Section 2.10 concludes.

#### 2.3 Scenario
The Fungal Genome Resource laboratory (FGR) at the University of Georgia adopted a WfMS (METEOR) to support its laboratory processes. The adoption of a WfMS enabled the logic of laboratory processes to be captured in a workflow schema, allowing all services to be stored and executed under the supervision of the workflow system.

##### 2.3.1 Workflow Structure
A workflow in the METEOR model consists of tasks and transitions. Tasks are represented by circles, sub-workflows by rounded rectangles, and transitions by arrows. Transitions express dependencies between tasks and are associated with enabling probabilities. Tasks with one outgoing transition have a probability of 1, which can be omitted from the graph. Tasks with multiple outgoing transitions are classified as and-split or xor-split. And-split tasks enable all their outgoing transitions, while xor-split tasks enable only one. Similarly, tasks with multiple incoming transitions are classified as and-join or xor-join. And-join tasks start execution when all incoming transitions are enabled, while xor-join tasks start as soon as one incoming transition is enabled.

##### 2.3.2 Workflow Description
Genomic projects involve specialized personnel, sophisticated equipment, and large data computations. The DNA Sequencing workflow, depicted in Figure 2-1, is one of the services provided by the laboratory. The workflow consists of eight main tasks: Setup, Prepare Sample, Prepare Clone and Sequence, Assembly, Get Sequences, Sequence Processing, and Process Report. Each task performs a specific function, and the workflow can be distributed across multiple research centers.

- **Setup:** Initializes internal variables.
- **Prepare Sample:** Isolates DNA from a biological sample, following rigorous protocols to avoid degradation.
- **Prepare Clones and Sequence:** Clones specific regions of the genome and sequences them using automated sequencers.
- **Assembly:** Analyzes DNA segments and assembles larger contiguous blocks.
- **Test Quality:** Screens for E. coli contamination in DNA contigs.
- **Get Sequences:** Downloads assembled sequences using FTP.
- **Sequence Processing:** Analyzes the DNA segments generated in the assembly step.

This scenario illustrates the complexity and importance of managing QoS in workflows, especially in scientific and research environments.