### Impact of Query Space Composition

We considered two scenarios for the composition of the query space: the entire query space and a partial query space. In the first scenario, the query space includes all keywords present in the entire dataset. In the second scenario, the query space is limited to the keywords found in a known subset of the dataset. We believe that the partial case is more realistic for unstructured data, but we included both scenarios for completeness. For structured data, such as a medical database, the values of all attributes (e.g., possible ages, illness codes) are often public, making the distinction between full and partial knowledge less relevant.

### Impact of Indexing

Indexing is a parameter that was not extensively investigated in this work. Our evaluations used an "aggressive" indexing strategy, where Porter stemming was applied before indexing all keywords in the dataset. If the adversary is unaware of the stemming algorithm, they may end up with a significantly different query space than the user, which could affect the recovery rate.

### Impact of Dataset Composition

Among all the parameters, we believe that the composition of the dataset has the least impact on the recovery date. Our results show that any reasonable composition of the Enron datasets or the TREC 2007 Public Corpus dataset leads to similar outcomes.

### Results on Chosen-Data Attacks

Since our injection attacks always succeed, we did not empirically evaluate their success rate. However, we report that to achieve success, we set the size of the keyword universe \( W \) to 500. For the Decoding attack, the adversary needs to inject between 4 and 16 KBytes to recover one keyword, depending on the type of document collection and the keyword selectivity. For the Binary attack, the adversary must inject around 8 KBytes, regardless of the document collection and keyword selectivity. More details about our evaluation can be found in Appendix D.

### Figures and Captions

**Figure 1:**
- **(a)** High selectivity, partial dataset
- **(b)** Low selectivity, partial dataset
- **(c)** High selectivity, partial dataset
- **(d)** Low selectivity, partial dataset
- **(e)** High selectivity, partial dataset
- **(f)** Low selectivity, partial dataset

**Figure 2:**
- 150 keywords queried uniformly at random from 500 pseudo-low selectivity keywords in SU.

**Figure 3:**
- PBS brute-force attack.

**Figure 4:**
- Number of matches in PBS brute-force attack.

### Takeaways

In this work, we revisited leakage abuse and injection attacks against Encrypted Searchable Architectures (ESAs). Specifically, we argued that the often-cited IKK and Count attacks are primarily of theoretical interest due to the following limitations and assumptions:

- **High known-data rates:** Both the IKK and Count attacks require high known-data rates to achieve reasonable recovery rates, and it is unclear whether such rates are realistic.
- **Known queries:** These attacks also rely on known queries, which may not be available in practical scenarios.
- **Suppressable leakage:** The IKK and Count attacks depend on co-occurrence patterns, which can be easily hidden with additional storage using our OPQ construction.
- **Experimental evaluation:** The experimental evaluations of the IKK and Count attacks were not conducted in all settings of interest, such as querying low-selectivity keywords or keywords not in the adversary's known dataset.

To address these limitations, we introduced four new known-data attacks and two new injection attacks. Our known-data attacks are practical because they work with low known-data rates and do not rely on any known queries. Surprisingly, these attacks use only volumetric leakage, making them applicable to both structured and oblivious ESAs.

We implemented and evaluated our attacks in various settings and using different types of queries. Our study provides insights that may help the community better understand the real-world impact of leakage abuse attacks. Below are our main takeaways, sometimes referencing the constructions described in Section II and Appendix A:

- **High-selectivity keywords:** For high-selectivity keywords, our Subgraph attacks can exploit the rid and vol patterns with very low known-data rates (as low as 5%). High recovery rates are maintained across different settings. On larger data collections, we estimate that relatively high recovery rates could still be achieved with known-data rates as low as 1%.
- **Total volume pattern:** The total volume pattern (tvol) leaked by OPQ and FLL seems resistant to our attacks for \(\delta \leq 0.8\).
- **Injection attacks:** The total volume pattern can be successfully attacked with our injection attacks, though the Binary Search attack works only if the target query has a unique total volume.
- **Security equivalence:** Structured and oblivious ESAs provide the same level of security against both our known-data (leakage abuse) and chosen-data (injection) attacks.

### Countermeasures

Our study revealed two practical attack scenarios: using Subgraph attacks to exploit the rid and vol patterns on high-selectivity keywords and using volumetric injection attacks to exploit the total volume pattern. For other settings, no countermeasures are required, although they are available.

**High-selectivity keywords:**
- Use schemes that do not leak rid or vol, such as the PBS construction (see Appendix A for details) or the OPQ and FLL constructions. These schemes have the following leakage profiles:
  - \(\Lambda_{PBS} = (\mathcal{K}, (qeq, svol))\)
  - \(\Lambda_{OPQ} = (\mathcal{K}, (keq, tvol))\)
  - \(\Lambda_{FLL} = (\mathcal{K}, (rlen, tvol))\)

Our experiments suggest that for \(\delta \leq 0.8\), either OPQ or FLL can be used, but for \(\delta > 0.8\), PBS should be used. The sequence volume pattern (svol) appears to be a very low-leakage pattern, as even a brute-force attack does not work on our dataset.

**Brute force:**
- Assuming the adversary has full knowledge of the client’s data (\(\delta = 1\)), the attack finds all possible sequences of \(\lambda\) keywords that match the given sequence volume leakage. If there is only one such sequence, the attack returns it; otherwise, it fails.
- This is the best possible attack against the sequence volume pattern (ignoring efficiency). The attack's success rate is defined as the fraction of correct keywords in the output sequence.
- We ran the attack for high- and low-selectivity keywords with \(\lambda\) ranging from 1 to 6. For \(\lambda \geq 4\), the attack stopped working, with a success rate of 0 for low-selectivity keywords and 0.02 for high-selectivity keywords. Figure 3 details these results.

**Cost of OPQ, FLL, and PBS:**
- The cost of OPQ and FLL is described in Section II. PBS uses a response-hiding multi-map encryption scheme, making its query overhead comparable to BSL and OPQ. However, it introduces additional latency, which can be tuned but requires knowledge of the underlying dataset. For batch queries, PBS incurs minimal latency.

**Volumetric attacks:**
- Kamara and Moataz [44] proposed VLH and AVLH, which achieve different trade-offs between storage efficiency, query efficiency, and lossiness. VLH is lossy and can return false negatives, but these can be tuned for additional storage. AVLH has no false negatives but higher query complexity. Recent results by Patel, Persiano, Yeo, and Yung [61] offer better query complexity and storage overhead.
- Padding techniques, such as naive padding and more efficient methods by Bost and Fouque [12], can protect against volumetric attacks but may not completely mitigate them.

### Acknowledgment

We would like to thank the authors of [13] for answering our questions about the Count attack, for sharing the code, and for providing useful feedback on this work.

### References

[1] “Apache Lucene,” 1999, http://lucene.apache.org.

[2] R. Agrawal, J. Kiernan, R. Srikant, and Y. Xu, “Order preserving encryption for numeric data,” in ACM SIGMOD International Conference on Management of Data, 2004, pp. 563–574.

[3] G. Amjad, S. Kamara, and T. Moataz, “Breach-resistant structured encryption,” Proceedings on Privacy Enhancing Technologies, vol. 2019, no. 1, pp. 245–265, 2019.

[4] G. Asharov, M. Naor, G. Segev, and I. Shahaf, “Searchable symmetric encryption: Optimal locality in linear space via two-dimensional balanced allocations,” in ACM Symposium on Theory of Computing (STOC ’16), ser. STOC ’16. New York, NY, USA: ACM, 2016, pp. 1101–1114. [Online]. Available: http://doi.acm.org/10.1145/2897518.2897562

[5] G. Asharov, T. H. Chan, K. Nayak, R. Pass, L. Ren, and E. Shi, “Oblivious computation with data locality,” ePrint IACR, 2017.

[6] J.-P. Aumasson, “Cryptanalysis vs. reality,” in Black Hat (Abu Dhabi), 2011.

[7] M. Bellare, A. Boldyreva, and A. O’Neill, “Deterministic and efficiently searchable encryption,” in Advances in Cryptology – CRYPTO ’07, ser. Lecture Notes in Computer Science, A. Menezes, Ed. Springer, 2007, pp. 535–552.

[8] A. Boldyreva, N. Chenette, Y. Lee, and A. O’neill, “Order-preserving symmetric encryption,” in Advances in Cryptology - EUROCRYPT 2009, 2009, pp. 224–241.

[9] D. Boneh, A. Sahai, and B. Waters, “Functional encryption: Definitions and challenges,” in Theory of Cryptography Conference (TCC ’11), ser. Lecture Notes in Computer Science, vol. 6597. Springer, 2011, pp. 253–273.

[10] R. Bost, “Sophos - forward secure searchable encryption,” in ACM Conference on Computer and Communications Security (CCS ’16), 2016.

[11] R. Bost, B. Minaud, and O. Ohrimenko, “Forward and backward private searchable encryption from constrained cryptographic primitives,” in ACM Conference on Computer and Communications Security (CCS ’17), 2017.

[12] R. Bost and P.-A. Fouque, “Thwarting leakage abuse attacks against searchable encryption – a formal approach and applications to database padding,” IACR Cryptology ePrint Archive, Tech. Rep. 2017/1060, 2017.

[13] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart, “Leakage-abuse attacks against searchable encryption,” in ACM Conference on Communications and Computer Security (CCS ’15). ACM, 2015, pp. 668–679.

[14] D. Cash, S. Jarecki, C. Jutla, H. Krawczyk, M. Rosu, and M. Steiner, “Highly-scalable searchable symmetric encryption with support for boolean queries,” in Advances in Cryptology - CRYPTO ’13. Springer, 2013.

[15] D. Cash and S. Tessaro, “The locality of searchable symmetric encryption,” in Advances in Cryptology - CRYPTO ’14. Springer, 2014, pp. 351–368.