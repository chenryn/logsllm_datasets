# Real-time Risk Assessment Using Hidden Markov Models

## 1. Introduction
This paper presents a real-time network risk assessment approach that quantifies the risk level of hosts in a network using Hidden Markov Models (HMMs). The method is evaluated using both simulated and real-world data, demonstrating its effectiveness in providing a precise and fine-grained model for risk assessment.

## 2. Experimental Results
### 2.1 Real-Time Risk Assessment for a Class C Subnet
The following figures show the assessed risk over a 3.5-hour period for different types of hosts within a Class C subnet:

- **(a) Assessed risk for a class C subnet (3.5 hours)**
- **(b) Assessed risk for a host with no alert activity (3.5 hours)**
- **(c) Assessed risk for a host with outbound alerts (3.5 hours)**
- **(d) Assessed risk for a web server (3.5 hours)**

**Figure 7: Real-time risk assessment for a real Class C subnet (3.5 hours)**

In this experiment, we reused the HMM parameters from the Lincoln Laboratory example to compare the performance under similar circumstances. However, this is not an optimal approach for this data set, as the parameters should be specifically estimated for the monitored network.

## 3. Discussion
### 3.1 Advantages of the Proposed Method
The proposed method offers several advantages over a naive approach that simply counts alerts and assigns a value based on their assumed impact:
- **State Estimation**: HMMs provide a framework for state estimation, modeling both the probabilities of entering certain states and the probabilities of receiving different observations in each state.
- **False-Positive and False-Negative Effects**: HMMs effectively represent the false-positive and false-negative effects of Intrusion Detection Systems (IDSs).
- **Traditional Risk Assessment**: State modeling and transition probabilities can be related to traditional risk assessment methodologies.
- **Automatic Tuning**: Learning algorithms and parameter re-estimation can be used to automatically tune the system.

### 3.2 Limitations
One limitation is that an attacker with knowledge of the HMMs could attempt to camouflage a successful compromise by causing a number of less serious alerts, potentially leading to a misrepresentation of the risk level.

### 3.3 Model Types
The HMMs used in this paper are fully connected, allowing every state to be reached in a single step from any other state. Other types of HMMs, such as left-right models, can also be used. For example, left-right HMMs can model the compromised state as consuming, meaning the probability of being in state C never decreases.

**Figure 8: A left-right HMM**

If there is a steady input of alerts, the risk of a system modeled with a left-right HMM will tend to approach the maximum risk for the system.

### 3.4 Real-Time Processing
Although the experiments were run in an offline mode, the method is capable of handling alerts in real-time. The 3.5-hour Lincoln Laboratory data set was processed in 2 minutes 44 seconds, and the 3-day TU Vienna data set was processed in 20 minutes 54 seconds. Even with significantly smaller time intervals, the model can process alerts in real-time for multiple Class C networks.

## 4. Related Work
### 4.1 Traditional Risk Assessment
Research in risk assessment and management has traditionally focused on developing methods, tools, and standards. Commonly recommended references include [14] and [15]. Methodologies such as Coras [2] and Morda [5] support the risk assessment process. This paper complements these approaches by performing risk assessment in real-time based on an initial estimation of model parameters.

### 4.2 Alert Prioritization
Several approaches have been proposed for alert prioritization. Porras et al. [12] present a model that considers the impact of alerts on the overall mission of the network. Other systems, such as those by Desai [4], Gula [7], and Kruegel et al. [9], perform alert verification, assigning higher priority to verified true attacks and lower priority to false positives.

## 5. Conclusions and Future Work
### 5.1 Conclusions
We have presented an approach to real-time network risk assessment that determines the risk level of a network as the composition of the risks of individual hosts. The model is probabilistic and uses HMMs to represent the likelihood of transitions between security states. We have integrated the risk assessment approach with the STAT framework and used the results to prioritize IDS alerts.

### 5.2 Future Work
- **Model Parameter Estimation**: Investigate the use of training algorithms to estimate model parameters.
- **Inter-Host Dependencies**: Include inter-host dependencies to provide a more accurate overview of network risk.
- **Multiple Sensors**: Implement a general framework for handling multiple sensors, where each sensor monitoring a host is represented by an HMM.
- **Online Testing**: Test the system with live traffic to evaluate its performance in real-time.

## 6. Acknowledgments
This research was supported by the U.S.–Norway Fulbright Foundation for Educational Exchange, the U.S. Army Research Office, the National Science Foundation, and the Centre for Quantifiable Quality of Service in Communication Systems, Centre of Excellence.

## 7. References
1. Andr´e ˚Arnes, Karin Sallhammar, Kjetil Haslum, Tønnes Brekne, Marie Elisa-
beth Gaup Moe, and Svein Johan Knapskog. Real-time risk assessment with
network sensors and intrusion detection systems. In International Conference on
Computational Intelligence and Security (CIS 2005), 2005.
2. CORAS IST-2000-25031 Web Site, 2003. http://www.nr.no/coras.
3. Herv´e Debar, David A. Curry, and Benjamin S. Feinstein.
Intrusion detection
message exchange format (IDMEF) – internet-draft, 2005.
4. Neil Desai.
IDS correlation of VA data and IDS alerts.
securityfocus.com/infocus/1708, June 2003.
http://www.
5. Shelby Evans, David Heinbuch, Elizabeth Kyule, John Piorkowski, and James Wall-
ner. Risk-based systems security engineering: Stopping attacks with intention.
IEEE Security and Privacy, 02(6):59 – 62, 2004.
6. Ashish Gehani and Gershon Kedem. Rheostat: Real-time risk management. In
Recent Advances in Intrusion Detection: 7th International Symposium, (RAID
2004), Sophia Antipolis, France, September 15-17, 2004. Proceedings, pages 296–
314. Springer, 2004.
7. Ron Gula. Correlating ids alerts with vulnerability information. Technical report,
Tenable Network Security, December 2002.
8. Cristopher Kruegel, Engin Kirda, Darren Mutz, William Robertson, and Giovanni
Vigna. Polymorphic worm detection using structural information of executables. In
Proceedings of the International Symposium on Recent Advances in Intrusion De-
tection (RAID 2005), volume 3858 of LNCS, pages 207–226, Seattle, WA, Septem-
ber 2005. Springer-Verlag.
9. Cristopher Kruegel and William Robertson. Alert veriﬁcation: Determining the
In Proceedings of the 1st Workshop on the De-
success of intrusion attempts.
tection of Intrusions and Malware and Vulnerability Assessment (DIMVA 2004),
Dortmund, Germany, July 2004.
10. Cristopher Kruegel, William Robertson, and Giovanni Vigna. Using alert veriﬁca-
tion to identify successful intrusion attempts. Practice in Information Processing
and Communication (PIK 2004), 27(4):219 – 227, October – December 2004.
11. Lincoln Laboratory.
Lincoln laboratory
scenario
(DDoS)
1.0,
2000.
http://www.ll.mit.edu/SST/ideval/data/2000/LLS DDOS 1.0.html.
12. Phillip A. Porras, Martin W. Fong, and Alfonso Valdes. A mission-impact-based
approach to infosec alarm correlation. In Proceedings of the International Sympo-
sium on the Recent Advances in Intrusion Detection (RAID 2002), pages 95–114,
Zurich, Switzerland, October 2002.
13. Lawrence R. Rabiner. A tutorial on hidden markov models and selected applica-
tions in speech recognition. Readings in speech recognition, pages 267–296, 1990.
14. Standards Australia and Standards New Zealand. AS/NZS 4360: 2004 risk man-
agement, 2004.
15. Gary Stonebumer, Alice Goguen, and Alexis Feringa.
Risk management
guide for information technology systems, special publication 800-30, 2002.
http://csrc.nist.gov/publications/nistpubs/800-30/sp800-30.pdf.
16. Sun Microsystems, Inc. Installing, Administering, and Using the Basic Security
Module. 2550 Garcia Ave., Mountain View, CA 94043, December 1991.
17. Giovanni Vigna, Richard A. Kemmerer, and Per Blix. Designing a web of highly-
conﬁgurable intrusion detection sensors. In W. Lee, L. M`e, and A. Wespi, editors,
Proceedings of the 4th International Symposium on Recent Advances in Intrusion
Detection (RAID 2001), volume 2212 of LNCS, pages 69–84, Davis, CA, October
2001. Springer-Verlag.
18. Giovanni Vigna, Fredrik Valeur, and Richard Kemmerer. Designing and implement-
ing a family of intrusion detection systems. In Proceedings of European Software
Engineering Conference and ACM SIGSOFT Symposium on the Foundations of
Software Engineering (ESEC/FSE 2003), Helsinki, Finland, September 2003.