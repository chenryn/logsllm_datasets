### 6.2 Analysis of the Exponential Mechanism

We define \( G_B = P_{\text{det},B} - P_{\text{adv},B} \) to represent the gains from adopting Client-CASH, specifically the reduction in the probability that an adversary successfully cracks a password. Here, \( P_{\text{adv},B} \) (resp. \( P_{\text{det},B} \)) denotes the probability that the optimal offline adversary successfully cracks a password protected with Client-CASH (resp. deterministic key-stretching) given a budget \( B \). Figure 1a and 1b illustrate \( G_B \) as a function of \( B \) for various values of the security parameter \( \lambda \). Theorem 2 provides a method to compute \( P_{\text{adv},B} \) and \( G_B \) efficiently.

**Figure 1:**
- **(a)** Two-round exponential mechanism.
- **(b)** Three-round exponential mechanism.
- **(c)** Two-round optimal mechanism.
- **(d)** Three-round optimal mechanism.

The figure shows the percent reduction in passwords breached, \( G_B = P_{\text{det},B} - P_{\text{adv},B} \), as a function of the adversary's total budget \( B \), normalized by \( C_{\text{srv}} |P| \) for various values of \( \lambda \). Subplots (a) and (b) depict the two and three-round exponential mechanisms, respectively, while (c) and (d) show the optimal gains for the two and three-round mechanisms when the adversary's budget is known in advance.

### 6.2.1 Two-Round Exponential Mechanism

For \( n = 2 \), the set of outcomes \( O = \{P_{0,2}, P_{1,2}\} \) and thus \( (O_1, O_2) = (1, 1) \). For a fixed value of \( \lambda \), the exponential mechanism is defined as follows:
\[ W = 1 + e^{-\lambda} \]
\[ \tilde{p}_1 = \frac{1}{W} \]
\[ \tilde{p}_2 = \frac{e^{-\lambda}}{W} \]
\[ \Pr[E_1] + \Pr[E_2] = \tilde{p}_1 + \tilde{p}_2 = 1 \]
\[ \Pr[E_1] + 2 \Pr[E_2] = \tilde{p}_1 + 2 \tilde{p}_2 \leq \frac{C_{\text{srv}}}{k \cdot C_H} \]

Although the last equation is an inequality, we emphasize that \( k \) is determined to be the maximum integer such that the inequality holds, as described in §6.1. Given that \( k \) is large, and thus marginal changes in \( \frac{C_{\text{srv}}}{k \cdot C_H} \) are small, we assume for simplicity that \( \tilde{p}_1 + 2 \tilde{p}_2 = \frac{C_{\text{srv}}}{k \cdot C_H} \).

### 6.2.2 Three-Round Exponential Mechanism

For \( n = 3 \), the set of outcomes \( O = \{P_{0,3}, P_{1,3}, P_{2,3}\} \times \{P_{0,3}, P_{1,3}, P_{2,3}\} \) and thus \( (O_1, O_2, O_3) = (3, 2, 4) \). For a fixed \( \lambda \), the exponential mechanism is defined as follows:
\[ W = 3 + 2e^{-\lambda/2} + 4e^{-\lambda} \]
\[ (\tilde{p}_1, \tilde{p}_2, \tilde{p}_3) = \left( \frac{1}{W}, \frac{e^{-\lambda/2}}{W}, \frac{e^{-\lambda}}{W} \right) \]
\[ \Pr[E_1] + \Pr[E_2] + \Pr[E_3] = 3\tilde{p}_1 + 2\tilde{p}_2 + 4\tilde{p}_3 = 1 \]
\[ \Pr[E_1] + 2 \Pr[E_2] + 3 \Pr[E_3] = 3\tilde{p}_1 + 4\tilde{p}_2 + 12\tilde{p}_3 \leq \frac{C_{\text{srv}}}{k \cdot C_H} \]

### Discussion

Our analysis demonstrates that the exponential mechanism can reduce the percentage of passwords breached by an optimal offline adversary. When \( B = k' |P| \), we always have \( P_{\text{det},B} = 1 \). Consequently, we expect \( G_B \) to decrease monotonically after this point, which is consistent with our observations in the plots. In the two-round case, we consistently observed positive gains (i.e., \( G_B > 0 \) for all \( B \geq 0 \) and every value of \( \lambda \) tested). In the three-round case, \( G_B > 0 \) whenever \( \lambda > 3 \). Future work may extend our analysis of Client-CASH to explore this further.

### Acknowledgments

This work was partially completed while Jeremiah Blocki was visiting the Simons Institute for the Theory of Computing, supported by the Simons Foundation and the DIMACS/Simons Collaboration in Cryptography through NSF grant #CNS-1523467. Anirudh Sridhar was supported by a grant from the PNC Center for Financial Services Innovation. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of Microsoft, the PNC Center for Financial Services Innovation at Carnegie Mellon University, or the National Science Foundation.

### References

[1] R. Biddle, S. Chiasson, and P. van Oorschot. Graphical passwords: Learning from the first twelve years. ACM Computing Surveys (CSUR), 44(4):19, 2012.
[2] A. Biryukov, D. Dinu, and D. Khovratovich. Fast and tradeoﬀ-resilient memory-hard functions for cryptocurrencies and password hashing. Cryptology ePrint Archive, Report 2015/430, 2015. http://eprint.iacr.org/.
[3] J. Blocki, M. Blum, and A. Datta. Naturally rehearsing passwords. In K. Sako and P. Sarkar, editors, Advances in Cryptology - ASIACRYPT 2013, volume 8270 of Lecture Notes in Computer Science, pages 361–380. Springer Berlin Heidelberg, 2013.
[4] J. Blocki and A. Datta. Cash: A cost asymmetric secure hash algorithm for optimal password protection. CoRR, abs/1509.00239, 2015.
[5] J. Blocki, S. Komanduri, L. F. Cranor, and A. Datta. Spaced repetition and mnemonics enable recall of multiple strong passwords. In 22nd Annual Network and Distributed System Security Symposium, NDSS 2015, San Diego, California, USA, February 8-11, 2014, 2015.
[6] J. Blocki, S. Komanduri, A. Procaccia, and O. Sheﬀet. Optimizing password composition policies. In Proceedings of the fourteenth ACM conference on Electronic commerce, pages 105–122. ACM, 2013.
[7] J. Bonneau. The science of guessing: analyzing an anonymized corpus of 70 million passwords. In Security and Privacy (SP), 2012 IEEE Symposium on, pages 538–552. IEEE, 2012.
[8] J. Bonneau, C. Herley, P. C. van Oorschot, and F. Stajano. The quest to replace passwords: A framework for comparative evaluation of web authentication schemes. In IEEE Symposium on Security and Privacy, pages 553–567. IEEE, 2012.
[9] J. Bonneau and S. Preibusch. The password thicket: technical and market failures in human authentication on the web. In Proc. of WEIS, volume 2010, 2010.
[10] J. Bonneau and S. Schechter. "Toward reliable storage of 56-bit keys in human memory." In Proceedings of the 23rd USENIX Security Symposium, August 2014.
[11] X. Boyen. Halting password puzzles. In Proc. Usenix Security, 2007.
[12] S. Boztas. Entropies, guessing, and cryptography. Department of Mathematics, Royal Melbourne Institute of Technology, Tech. Rep, 6, 1999.
[13] J. G. Brainard, A. Juels, B. Kaliski, and M. Szydlo. A new two-server approach for authentication with short secrets. In USENIX Security, volume 3, pages 201–214, 2003.
[14] S. Brostoff and M. Sasse. Are Passfaces more usable than passwords: A field trial investigation. In People and Computers XIV-Usability or Else: Proceedings of HCI, pages 405–424, 2000.
[15] J. Camenisch, A. Lysyanskaya, and G. Neven. Practical yet universally composable two-server password-authenticated secret sharing. In Proceedings of the 2012 ACM conference on Computer and Communications Security, pages 525–536. ACM, 2012.
[16] M. Dürmuth and T. Kranz. On password guessing with GPUs and FPGAs.
[17] C. Dwork, A. Goldberg, and M. Naor. On memory-bound functions for fighting spam. In Advances in Cryptology - CRYPTO 2003, 23rd Annual International Cryptology Conference, Santa Barbara, California, USA, August 17-21, 2003, Proceedings, volume 2729 of Lecture Notes in Computer Science, pages 426–444. Springer, 2003.
[18] C. Dwork, F. McSherry, K. Nissim, and A. Smith. Calibrating noise to sensitivity in private data analysis. In Theory of cryptography, pages 265–284. Springer, 2006.
[19] C. Dwork and A. Roth. The algorithmic foundations of differential privacy. Theoretical Computer Science, 9(3-4):211–407, 2013.
[20] D. Florencio and C. Herley. A large-scale study of web password habits. In Proceedings of the 16th international conference on World Wide Web, pages 657–666. ACM, 2007.
[21] C. Forler, S. Lucks, and J. Wenzel. Catena: A memory-consuming password scrambler. IACR Cryptology ePrint Archive, 2013:525, 2013.
[22] I. Jermyn, A. Mayer, F. Monrose, M. K. Reiter, and A. D. Rubin. The design and analysis of graphical passwords. In Proceedings of the 8th conference on USENIX Security Symposium - Volume 8, pages 1–1, Berkeley, CA, USA, 1999. USENIX Association.
[23] B. Kaliski. PKCS# 5: Password-based cryptography specification version 2.0. 2000.
[24] K. Kim, S. Lee, D. Hong, and J.-C. Ryou. GPU-accelerated password cracking of PDF files. KSII Transactions on Internet and Information Systems (TIIS), 5(11):2235–2253, 2011.
[25] S. Komanduri, R. Shay, P. Kelley, M. Mazurek, L. Bauer, N. Christin, L. Cranor, and S. Egelman. Of passwords and people: measuring the effect of password-composition policies. In Proceedings of the 2011 annual conference on Human factors in computing systems, pages 2595–2604. ACM, 2011.
[26] U. Manber. A simple scheme to make passwords based on one-way functions much harder to crack.