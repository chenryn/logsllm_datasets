### Table 2: Average Time and Network Overhead

| Stage | Average Time (ms) | Network Overhead (B) |
|-------|-------------------|----------------------|
| 1     | 881.32            | 20093                |
| 2     | 276.98            | 1167                 |
| 3     | 18.28             | 22526                |
| 4     | 1.18              | 47286                |
| 5     | n/a               | 203                  |
| 6     | n/a               | 46934                |
| 7     | n/a               | 1280                 |
| 8     | n/a               | 204                  |

**Note:** The timings were averaged over twenty runs, and caching and compression optimizations were used. For the naïve timings, an older version of the library was used, which includes some multi-exponentiation optimization techniques but not the interpreter. A clear improvement is observed when using ZKPDL. The parameters were chosen to provide a security level of 80 bits (160-bit SHA-1 hashing, 128-bit AES encryption, 1024-bit RSA moduli, and 1024-bit DSA signatures).

---

### Discussion

ZKPDL is a very useful tool that employs generic circuit techniques. From an efficiency standpoint, it is often more desirable to develop a multi-party computation scheme specific to the intended application.

IBM’s Idemix project [20, 15] has independently developed a Java-based library for zero-knowledge proofs and anonymous credentials. Their library provides a system for obtaining, proving, and verifying anonymous credentials for use in privacy-preserving identity systems. While both Idemix and our work provide implementations of anonymous credentials and CL signatures, our focus on efficient, repeated executions of e-cash transactions led us to pursue a language-based strategy and develop a performance-optimized interpreter, unlike the Idemix implementation.

The CACE project, independent of our efforts, has also designed a high-level language for zero-knowledge protocols. Their work focuses on a compiler that can output implementation and LATEX code from these descriptions [6, 5], and automatically check the soundness of compiled protocols using theorem-proving techniques [1].

There are also compilers available [16, 7] for generating proofs of security and correctness for cryptographic protocols. While this is an interesting and important area of research, these tools largely focus on static analysis of protocols rather than performance. Perhaps more similar to our work, the languages Cryptol [54] and Stupid [53] provide a simple interface for developing low-level implementations of cryptographic primitives (such as hash functions), which can then be analyzed and translated into native code on different platforms.

### Conclusions and Future Work

In this paper, we introduced a language for generating and verifying widely-used zero-knowledge proofs of knowledge. Through sample programs, we demonstrated how our language is used to express advanced cryptographic primitives such as blind signatures, verifiable encryption, and endorsed e-cash. We presented optimizations provided by our language's interpreter and showed that they provide significant benefits.

On top of our language framework, we built a library that provides optimistic fair exchange protocols based on electronic cash. We further presented optimizations for the protocols provided by Cashlib and argued for their practicality in network-based applications.

Much future work is possible for the ZKPDL language and interpreter. There are many other cryptographic primitives that could be incorporated into the language (e.g., encryption, signatures, hash functions), and other zero-knowledge protocols that could be added as relations (e.g., alternate and “fuzzy” schemes for range proofs). Incorporating these primitives, perhaps by allowing for subroutines and the composability of ZKPDL programs, would allow our library to be more easily extended and potentially have applicability to a broader range of secure systems. The analysis of ZKPDL programs—e.g., to automatically verify protocols and identify security errors through type analysis or formal verification techniques—provides another interesting area of study.

For increased performance on multicore architectures, we are working on analyzing dependencies among the expressions evaluated by our interpreter. The simplicity of our language, e.g., in compute blocks, allows a coarse-grained approach, as the only dependencies that arise between lines of ZKPDL are from variables that have been declared and assigned in previous lines.

Finally, in terms of extending Cashlib, to improve a bank's efficiency, it might also be possible to speed up coin verification time by supporting batch verification techniques [23, 40] for CL signatures; we leave this as one of many interesting open problems.

### Acknowledgments

We gratefully acknowledge George Danezis, our shepherd, and our anonymous reviewers for their valuable feedback on earlier versions of this paper. We also thank Gabriel Bender and Alex Hutter for their work developing earlier versions of Cashlib, as well as Carleton Coffrin for his assistance with ANTLR. This work is supported in part by NSF CyberTrust grant 0627553.

### References

[1] ALMEIDA, J. B., BANGERTER, E., BARBOSA, M., KRENN, S., SADEGHI, A.-R., AND SCHNEIDER, T. A certifying compiler for zero-knowledge proofs of knowledge based on sigma-protocols. In ESORICS '10 (2010).

[2] ANDROULAKI, E., RAYKOVA, M., SRIVATSAN, S., STAVROU, A., AND BELLOVIN, S. PAR: payment for anonymous routing. In Privacy Enhancing Technologies Symposium (PETS) (2008), vol. 5134 of Lecture Notes in Computer Science, Springer-Verlag, pp. 219–236.

[3] ASOKAN, N., SHOUP, V., AND WAIDNER, M. Optimistic fair exchange of digital signatures. In Proc. Eurocrypt '98 (1998), vol. 1403 of Lecture Notes in Computer Science, Springer-Verlag, pp. 591–606.

[4] AVOINE, G., AND VAUDENAY, S. Optimistic fair exchange based on publicly verifiable secret sharing. In ACISP (2004), vol. 3108 of Lecture Notes in Computer Science, Springer-Verlag, pp. 74–85.

[5] BANGERTER, E., BARZAN, S., KRENN, S., SADEGHI, A.-R., SCHNEIDER, T., AND TSAY, J.-K. Bringing zero-knowledge proofs of knowledge to practice. In 17th International Workshop on Security Protocols (2009).

[6] BANGERTER, E., CAMENISCH, J., KRENN, S., SADEGHI, A.-R., AND SCHNEIDER, T. Automatic generation of sound zero-knowledge protocols. Cryptology ePrint Archive, Report 2008/471, 2008. http://eprint.iacr.org/2008/471.

[7] BARBOSA, M., NOAD, R., PAGE, D., AND SMART, N. First steps toward a cryptography-aware language and compiler. Cryptology ePrint Archive, Report 2005/160, 2005. http://eprint.iacr.org/2005/160.

[8] BELENKIY, M., CAMENISCH, J., CHASE, M., KOHLWEISS, M., LYSYANSKAYA, A., AND SHACHAM, H. Delegatable anonymous credentials. In Proc. Crypto '09 (2009), vol. 5677 of Lecture Notes in Computer Science, Springer-Verlag, pp. 108–125.

[9] BELENKIY, M., CHASE, M., ERWAY, C., JANNOTTI, J., KÜPÇÜ, A., AND LYSYANSKAYA, A. Incentivizing outsourced computation. In NetEcon (2008), pp. 85–90.

[10] BELENKIY, M., CHASE, M., ERWAY, C., JANNOTTI, J., KÜPÇÜ, A., LYSYANSKAYA, A., AND RACHLIN, E. Making P2P accountable without losing privacy. In WPES (2007), ACM, pp. 31–40.

[11] BELENKIY, M., CHASE, M., KOHLWEISS, M., AND LYSYANSKAYA, A. Non-interactive anonymous credentials. In Proc. 5th Theory of Cryptography Conference (TCC) (2008), pp. 356–374.

[12] BELLARE, M., AND GOLDREICH, O. On defining proofs of knowledge. In Proc. Crypto '92 (1992), vol. 740 of Lecture Notes in Computer Science, Springer-Verlag, pp. 390–420.

[13] BELLARE, M., AND ROGAWAY, P. Random oracles are practical: a paradigm for designing efficient protocols. In ACM Conference on Computer and Communications Security (CCS) '93 (1993), pp. 62–73.

[14] BEN-DAVID, A., NISAN, N., AND PINKAS, B. FairplayMP: a system for secure multi-party computation. In ACM Conference on Computer and Communications Security (CCS) '08 (2008), pp. 257–266.

[15] BICHSEL, P., BINDING, C., CAMENISCH, J., GROSS, T., HEYDT-BENJAMIN, T., SOMMER, D., AND ZAVERUCHA, G. Cryptographic protocols of the identity mixer library, v. 1.0. IBM Research Report RZ3730, 2009.

[16] BLANCHET, B., AND POINTCHEVAL, D. Automated security proofs with sequences of games. In Proc. Crypto '06 (2006), vol. 4117 of Lecture Notes in Computer Science, Springer-Verlag, pp. 537–554.

[17] BLUM, M., DE SANTIS, A., MICALI, S., AND PERSIANO, G. Non-interactive zero-knowledge. SIAM Journal of Computing 20, 6 (1991), 1084–1118.

[18] BOUDOT, F. Efficient proofs that a committed number lies in an interval. In Proc. Eurocrypt '00 (2000), vol. 1807 of Lecture Notes in Computer Science, Springer-Verlag, pp. 431–444.

[19] CAMENISCH, J., CHAABOUNI, R., AND ABHI SHELAT. Efficient protocols for set membership and range proofs. In Proc. Asiacrypt '08 (2008), pp. 234–252.

[20] CAMENISCH, J., AND HERREWEGHEN, E. V. Design and implementation of the idemix anonymous credential system. In ACM Conference on Computer and Communications Security (CCS) '02 (2002), ACM, pp. 21–30.

[21] CAMENISCH, J., HOHENBERGER, S., KOHLWEISS, M., LYSYANSKAYA, A., AND MEYEROVICH, M. How to win the clonewars: efficient periodic n-times anonymous authentication. In ACM Conference on Computer and Communications Security (CCS) '06 (2006), pp. 201–210.

[22] CAMENISCH, J., HOHENBERGER, S., AND LYSYANSKAYA, A. Compact e-cash. In Proc. Eurocrypt '05 (2005), vol. 3494 of Lecture Notes in Computer Science, Springer-Verlag, pp. 302–321.

[23] CAMENISCH, J., HOHENBERGER, S., AND PEDERSEN, M. Ø. Batch verification of short signatures. In Proc. Eurocrypt '07 (2007), vol. 4515 of Lecture Notes in Computer Science, Springer-Verlag, pp. 246–263.

[24] CAMENISCH, J., AND LYSYANSKAYA, A. An efficient system for non-transferable anonymous credentials with optional anonymity revocation. In Proc. Eurocrypt '01 (2001), vol. 2045 of Lecture Notes in Computer Science, Springer-Verlag, pp. 93–118.

[25] CAMENISCH, J., AND LYSYANSKAYA, A. A signature scheme with efficient protocols. In Proc. SCN '02 (2002), vol. 2576 of Lecture Notes in Computer Science, Springer-Verlag, pp. 268–289.

[26] CAMENISCH, J., AND LYSYANSKAYA, A. Signature schemes and anonymous credentials from bilinear maps. In Proc. Crypto '04 (2004), vol. 3152 of Lecture Notes in Computer Science, Springer-Verlag, pp. 56–72.

[27] CAMENISCH, J., LYSYANSKAYA, A., AND MEYEROVICH, M. Endorsed e-cash. In IEEE Symposium on Security and Privacy (2007), pp. 101–115.

[28] CAMENISCH, J., AND SHOUP, V. Practical verifiable encryption and decryption of discrete logarithms. In Proc. Crypto '03 (2003), vol. 2729 of Lecture Notes in Computer Science, Springer-Verlag, pp. 126–144.

[29] CHAUM, D. Blind signatures for untraceable payments. In Proc. Crypto '82 (1982), Lecture Notes in Computer Science, Springer-Verlag, pp. 199–203.

[30] CHAUM, D. Security without identification: transaction systems to make big brother obsolete. Communications of the ACM 28, 10 (1985), 1030–1044.

[49] GROTH, J. Non-interactive zero-knowledge arguments for voting. In ACNS (2005), vol. 3531 of Lecture Notes in Computer Science, Springer-Verlag, pp. 467–482.

[31] CHAUM, D., DEN BOER, B., VAN HEYST, E., MJØLSNES, S. F., AND STEENBEEK, A. Efficient offline electronic checks (extended abstract). In Proc. Eurocrypt '89 (1989), pp. 294–301.

[32] COX, B., TYGAR, J., AND SIRBU, M. Netbill security and transaction protocol. In Proc. 1st Usenix Workshop on Electronic Commerce (1995), pp. 77–88.

[33] DAEMEN, J., AND RIJMEN, V. Rijndael: AES – The Advanced Encryption Standard. Springer-Verlag, 2002.

[34] DAMGÅRD, I. On sigma protocols. http://www.daimi.au.dk/ivan/Sigma.pdf.

[35] DAMGÅRD, I. Payment systems and credential mechanism with provable security against abuse by individuals. In Proc. Crypto '88 (1988), vol. 403 of Lecture Notes in Computer Science, Springer-Verlag, pp. 328–335.

[36] DAMGÅRD, I., DUPONT, K., AND PEDERSEN, M. Ø. Unclonable group identification. In Proc. Eurocrypt '06 (2006), vol. 4004 of Lecture Notes in Computer Science, Springer-Verlag, pp. 555–572.

[37] DAMGÅRD, I., AND FUJISAKI, E. A statistically-hiding integer commitment scheme based on groups with hidden order. In Proc. Asiacrypt '02 (2002), vol. 2501 of Lecture Notes in Computer Science, Springer-Verlag, pp. 125–142.

[38] DAMGÅRD, I., GROTH, J., AND SALOMONSEN, G. The theory and implementation of an electronic voting system. In Proc. Secure Electronic Voting (SEC) (2003), pp. 77–100.

[39] FEIGE, U., LAPIDOT, D., AND SHAMIR, A. Multiple non-interactive zero-knowledge proofs based on a single random string. In Proc. 31st Symposium on Theory of Computing (STOC) (1990), pp. 308–317.

[40] FERRARA, A. L., GREEN, M., HOHENBERGER, S., AND PEDERSEN, M. Ø. Practical short signature batch verification. In Proc. CT-RSA (2009), pp. 309–324.

[41] FIAT, A., AND SHAMIR, A. How to prove yourself: practical solutions to identification and signature problems. In Proc. Crypto '86 (1986), vol. 263 of Lecture Notes in Computer Science, Springer-Verlag, pp. 186–194.

[42] FUJISAKI, E., AND OKAMOTO, T. Statistical zero knowledge protocols to prove modular polynomial relations. In Proc. Crypto '97 (1997), vol. 1294 of Lecture Notes in Computer Science, Springer-Verlag, pp. 16–30.

[43] GENNARO, R., GENTRY, C., AND PARNO, B. Non-interactive verifiable computing: outsourcing computation to untrusted workers. Cryptology ePrint Archive, Report 2009/547, 2009. http://eprint.iacr.org/2009/547.

[44] GMP. The GNU MP Bignum library. http://gmplib.org.

[45] GOLDREICH, O., GOLDWASSER, S., AND MICALI, S. How to construct random functions (extended abstract). In Proc. 25th Symposium on the Foundations of Computer Science (FOCS) (1984), pp. 464–479.

[46] GOLDREICH, O., MICALI, S., AND WIGDERSON, A. Proofs that yield nothing but their validity or all languages in NP have zero-knowledge proof systems. J. ACM 38, 3 (1991), 691–729.

[47] GOLDWASSER, S., MICALI, S., AND RACKOFF, C. The knowledge complexity of interactive proof systems. In Proc. 17th Symposium on the Theory of Computing (STOC) (1985), pp. 186–208.

[48] GOLDWASSER, S., MICALI, S., AND RIVEST, R. A digital signature scheme secure against adaptive chosen-message attacks. SIAM Journal of Computing 17, 2 (1988), 281–308.

[50] HEYDT-BENJAMIN, T., CHAE, H.-J., DEFEND, B., AND FU, K. Privacy for public transportation. In Privacy Enhancing Technologies Symposium (PETS) (2006), pp. 1–19.

[51] ISHIDA, N., MATSUO, S., AND OGATA, W. Divisible voting scheme. In Proc. ISC '03 (2003), vol. 2851 of Lecture Notes in Computer Science, Springer-Verlag, pp. 137–150.

[52] KÜPÇÜ, A., AND LYSYANSKAYA, A. Usable optimistic fair exchange. In Proc. CT-RSA '10 (2010), vol. 5985 of Lecture Notes in Computer Science, Springer-Verlag, pp. 252–267.

Stupid: a meta-language for cryptography, 2010. http://code.google.com/p/stupid-crypto.

[53] LAURIE, B., AND CLIFFORD, B.

[54] LEWIS, J., AND MARTIN, B. Cryptol: high assurance, targetable crypto development, and validation. In Proc. Military Communications Conference '03 (2003), pp. 820–825.

[55] LIPMAA, H. On Diophantine complexity and statistical zero-knowledge arguments. In Proc. Asiacrypt '03 (2003), vol. 2894 of Lecture Notes in Computer Science, Springer-Verlag, pp. 398–415.

[56] LIPMAA, H., ASOKAN, N., AND NIEMI, V. Secure Vickrey auctions without threshold trust. In Proc. Financial Cryptography '02 (2002), vol. 2357 of Lecture Notes in Computer Science, Springer-Verlag, pp. 87–101.

[57] LYNN, B. PBC (pairing-based cryptography) library. http://crypto.stanford.edu/pbc.

[58] MALKHI, D., NISAN, N., PINKAS, B., AND SELLA, Y. Fairplay - a secure two-party computation system. In USENIX Security Symposium (2004), pp. 287–302.

[59] MENEZES, A. J., VAN OORSCHOT, P., AND VANSTONE, S. Handbook of Applied Cryptography. CRC Press, 1997.

[60] MERKLE, R. A digital signature based on a conventional encryption function. In Proc. Crypto '88 (1987), vol. 293 of Lecture Notes in Computer Science, Springer-Verlag, pp. 369–378.

[61] NAOR, M., AND YUNG, M. Universal one-way hash functions and their cryptographic applications. In Proc. 21st Symposium on Theory of Computing (STOC) (1989), pp. 33–43.

[62] NGUYEN, L., AND SAFAVI-NAINI, R. Dynamic k-times anonymous authentication. In ACNS (2005), vol. 3531 of Lecture Notes in Computer Science, Springer-Verlag, pp. 318–333.

[63] PAGNIA, H., AND GÄRTNER, F. On the impossibility of fair exchange without a trusted third party. Darmstadt University Technical Report TUD-BS-1999-02, 1999.

[64] PARR, T. ANTLR parser generator. http://www.antlr.org.

[65] PEDERSEN, T. P. Non-interactive and information-theoretic secure verifiable secret sharing. In Proc. Crypto '91 (1992), vol. 576 of Lecture Notes in Computer Science, Springer-Verlag.

[66] RABIN, M., AND SHALLIT, J. Randomized algorithms in number theory. Communications on Pure and Applied Mathematics 39, 1 (1986), 239–256.

[67] SCHNORR, C.-P. Efficient signature generation by smart cards. Journal of Cryptology 4, 3 (1991), 161–174.

[68] SCHOENMAKERS, B. Interval proofs revisited. In International Workshop on Frontiers in Electronic Elections (2005).