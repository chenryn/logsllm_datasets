# Table of Contents

## Chapter 5: Post-Exploit – Action on the Objective
- **Escalating User Privileges on a Compromised Host** (Page 139)
- **Replaying Authentication Tokens Using Incognito** (Page 140)
- **Manipulating Access Credentials with Windows Credential Editor** (Page 142)
- **Escalating from Administrator to SYSTEM** (Page 143)
- **Accessing New Accounts with Horizontal Escalation** (Page 143)
- **Covering Your Tracks** (Page 144)
- **Summary** (Page 147)

## Chapter 6: Post-Exploit – Persistence
- **Compromising the Existing System and Application Files for Remote Access** (Page 150)
- **Remotely Enabling the Telnet Service** (Page 150)
- **Remotely Enabling Windows Terminal Services** (Page 152)
- **Remotely Enabling Virtual Network Computing** (Page 154)
- **Using Persistent Agents** (Page 155)
  - **Employing Netcat as a Persistent Agent** (Page 155)
  - **Maintaining Persistence with the Metasploit Framework** (Page 159)
    - **Using the metsvc Script** (Page 159)
    - **Using the Persistence Script** (Page 161)
    - **Creating a Standalone Persistent Agent with Metasploit** (Page 163)
- **Redirecting Ports to Bypass Network Controls** (Page 165)
  - **Example 1: Simple Port Redirection** (Page 166)
  - **Example 2: Bidirectional Port Redirection** (Page 167)
- **Summary** (Page 168)

## Part 2: The Delivery Phase

### Chapter 7: Physical Attacks and Social Engineering
- **Social Engineering Toolkit** (Page 172)
- **Spear Phishing Attack** (Page 176)
- **Using a Website Attack Vector**
  - **Java Applet Attack Method** (Page 181)
  - **Credential Harvester Attack Method** (Page 186)
  - **Tabnabbing Attack Method** (Page 188)
  - **Multi-Attack Web Method** (Page 190)
- **PowerShell Alphanumeric Shellcode Injection Attack** (Page 190)
- **Hiding Executables and Obfuscating the Attacker's URL** (Page 192)
- **Escalating an Attack Using DNS Redirection** (Page 194)
- **Physical Access and Hostile Devices** (Page 197)
- **Raspberry Pi Attack Vectors** (Page 200)
- **Summary** (Page 202)

### Chapter 8: Exploiting Wireless Communications
- **Configuring Kali for Wireless Attacks** (Page 204)
- **Wireless Reconnaissance** (Page 204)
  - **Kismet** (Page 207)
- **Bypassing a Hidden Service Set Identifier** (Page 209)
- **Bypassing MAC Address Authentication** (Page 211)
- **Compromising WEP Encryption** (Page 213)
- **Attacking WPA and WPA2** (Page 219)
  - **Brute-Force Attacks** (Page 219)
  - **Attacking Wireless Routers with Reaver** (Page 223)
- **Cloning an Access Point** (Page 224)
- **Denial-of-Service Attacks** (Page 225)
- **Summary** (Page 227)

### Chapter 9: Reconnaissance and Exploitation of Web-Based Applications
- **Conducting Reconnaissance of Websites** (Page 230)
- **Vulnerability Scanners** (Page 236)
  - **Extending the Functionality of Traditional Vulnerability Scanners** (Page 237)
  - **Extending the Functionality of Web Browsers** (Page 238)
  - **Web-Service-Specific Vulnerability Scanners** (Page 240)
- **Testing Security with Client-Side Proxies** (Page 243)
- **Server Exploits** (Page 250)
- **Application-Specific Attacks**
  - **Brute-Forcing Access Credentials** (Page 251)
  - **Injection Attacks Against Databases** (Page 252)
- **Maintaining Access with Web Backdoors** (Page 254)
- **Summary** (Page 256)

### Chapter 10: Exploiting Remote Access Communications
- **Exploiting Operating System Communication Protocols** (Page 258)
  - **Compromising Remote Desktop Protocol** (Page 258)
  - **Compromising Secure Shell** (Page 262)
  - **Exploiting Third-Party Remote Access Applications** (Page 264)
- **Attacking Secure Sockets Layer** (Page 266)
  - **Configuring Kali for SSLv2 Scanning** (Page 267)
  - **Reconnaissance of SSL Connections** (Page 269)
  - **Using sslstrip to Conduct a Man-in-the-Middle Attack** (Page 275)
  - **Denial-of-Service Attacks Against SSL** (Page 277)
- **Attacking an IPSec Virtual Private Network** (Page 278)
  - **Scanning for VPN Gateways** (Page 279)
  - **Fingerprinting the VPN Gateway** (Page 280)
  - **Capturing Pre-Shared Keys** (Page 282)
  - **Performing Offline PSK Cracking** (Page 282)
  - **Identifying Default User Accounts** (Page 283)
- **Summary** (Page 283)

### Chapter 11: Client-Side Exploitation
- **Attacking a System Using Hostile Scripts** (Page 286)
  - **Conducting Attacks Using VBScript** (Page 286)
  - **Attacking Systems Using Windows PowerShell** (Page 289)
- **The Cross-Site Scripting Framework** (Page 291)
- **The Browser Exploitation Framework (BeEF)** (Page 299)
  - **Installing and Configuring the Browser Exploitation Framework** (Page 300)
  - **A Walkthrough of the BeEF Browser** (Page 303)
  - **Integrating BeEF and Metasploit Attacks** (Page 308)
  - **Using BeEF as a Tunneling Proxy** (Page 309)
- **Summary** (Page 311)

## Appendix: Installing Kali Linux
- **Downloading Kali Linux** (Page 313)
- **Basic Installation of Kali Linux** (Page 314)
- **Installing Kali Linux to a Virtual Machine** (Page 315)
- **Full Disk Encryption and Nuking the Master Key** (Page 316)
- **Setting Up a Test Environment** (Page 321)
- **Vulnerable Operating Systems and Applications** (Page 322)
- **Index** (Page 327)

## Preface
This book is dedicated to the use of Kali Linux in performing penetration tests against networks. A penetration test simulates an attack by a malicious outsider or insider, including the exploitation phase to prove the presence of vulnerabilities and the associated risk of compromise.

### Penetration Testers, Attackers, and Hackers
Throughout this book, we will refer to "penetration testers," "attackers," and "hackers" interchangeably, as they use the same techniques and tools to assess network and data system security. The only difference lies in their end objectives: securing a data network or causing a data breach.

### Testing Methodologies
Most testers and attackers follow an informal, open-source, or proprietary-defined testing methodology. The advantages of following a methodology include:
- **Automation**: Identifying parts of the testing process that can be automated, allowing testers to focus on creative techniques.
- **Repeatability**: Allowing results to be compared over time or cross-validated between testers.
- **Predictability**: Controlling and minimizing costs by predicting time and personnel requirements.
- **Liability Protection**: Protecting testers against liability if pre-approved by the client.

#### Formal Methodologies
- **Kevin Orrey's Penetration Testing Framework**: Provides a step-by-step guide with hyperlinks to tools and commands.
- **Information Systems Security Assessment Framework (ISSAF)**: A comprehensive guide for testing networks.
- **NIST SP 800-115**: A technical guide to information security testing and assessment.
- **Open Source Security Testing Methodology Manual (OSSTMM)**: Attempts to quantify identified risks.
- **Open Web Application Security Project (OWASP)**: Focuses on the top 10 vulnerabilities in web-based applications.
- **Penetration Testing Execution Standard (PTES)**: Actively maintained and reflects the activities of a malicious person.
- **Offensive (Web) Testing Framework (OWTF)**: Combines OWASP and PTES methodologies.

#### Limitations of Methodologies
- **Lack of Focus**: Rarely consider the purpose of the test or critical business data.
- **Creativity Hinderance**: Many testers fear that a defined methodology will hinder their creativity.
- **Inaccurate Reflection**: Often fail to reflect the actual activities of a malicious attacker.

### The "Kill Chain" Approach to Penetration Testing
Introduced by Mike Cloppert of Lockheed Martin CERT in 2009, the "attacker kill chain" includes the steps taken by an adversary when attacking a network. This book modifies the kill chain to better reflect how attackers exploit networks and data services.

#### Phases of the Kill Chain
- **Reconnaissance Phase**: Conducting extensive reconnaissance to learn about the target.
  - **Passive Reconnaissance**: Reviewing publicly available information.
  - **Active Reconnaissance**: Directly interacting with the target.
- **Delivery Phase**: Selecting and developing the weapon for the exploit.
- **Exploit or Compromise Phase**: Applying a successful exploit to reach the objective.
- **Post-Exploit: Action on the Objective**: Focusing on the actions of the attacker, such as privilege escalation and account compromise.
- **Post-Exploit: Persistence**: Maintaining access to the compromised system.

### What This Book Covers
- **Part 1: The Attacker's Kill Chain**: Analyzing each phase of the kill chain in detail.
- **Part 2: The Delivery Phase**: Focusing on the delivery phase and available methodologies.

### Chapters Overview
- **Chapter 1: Starting with Kali Linux**: Introduction to Kali Linux and its optimal configuration.
- **Chapter 2: Identifying the Target – Passive Reconnaissance**: Gathering information using publicly available sources.
- **Chapter 3: Active Reconnaissance and Vulnerability Scanning**: Gaining information about the target and identifying vulnerabilities.
- **Chapter 4: Exploit**: Finding and executing exploits to compromise a system.
- **Chapter 5: Post-Exploit – Action on the Objective**: Escalating privileges and achieving the objective.
- **Chapter 6: Post-Exploit – Persistence**: Configuring a compromised system for return access.
- **Chapter 7: Physical Attacks and Social Engineering**: Exploiting physical access and human interaction.
- **Chapter 8: Exploiting Wireless Communications**: Taking advantage of wireless connections.
- **Chapter 9: Reconnaissance and Exploitation of Web-Based Applications**: Securing web-based applications.
- **Chapter 10: Exploiting Remote Access Communications**: Attacking remote access communications.
- **Chapter 11: Client-Side Exploitation**: Attacking end-user systems.
- **Appendix: Installing Kali Linux**: Overview of installation and configuration.

### What You Need for This Book
- **Virtualization Tools**: VMware or VirtualBox.
- **Kali Linux**: Download and configure the operating system.
- **Internet Connection**: To ensure the system is up-to-date.
- **Target Operating System**: Examples use Microsoft Windows XP, but the methodology is transferrable to other OSs.