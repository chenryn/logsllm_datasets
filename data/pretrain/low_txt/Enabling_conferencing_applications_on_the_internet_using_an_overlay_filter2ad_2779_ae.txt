# Network Congestion Adaptation in Controlled Experiments

## Introduction
This document discusses the adaptation of network overlays to congestion, focusing on recovery, detection, reaction, and repair times. The experiments were conducted using a set of hosts, with the source sending traffic at 1.2 Mbps. Congestion was simulated by randomly dropping 10% of packets, and the behavior of the victim host and its descendants is analyzed.

## Experimental Setup
- **Hosts**: All experiments were conducted using the Primary Set of hosts.
- **Source Traffic**: The source, located at UCSB, sends CBR (Constant Bit Rate) traffic at 1.2 Mbps.
- **Congestion Simulation**: Ten minutes into the experiment, a victim host is randomly chosen, and 10% of packets are dropped on the link between the victim and its parent.
- **Congestion Control**: Each link in the overlay tree is controlled using TFRC (TCP-Friendly Rate Control), which reduces bandwidth performance upon high loss rates.

## Victim Host Behavior
- **Initial State**: Before congestion, the victim (UDEL) receives data directly from the source (UCSB).
- **Congestion Introduction**: At time 600 seconds, congestion is introduced, causing a significant drop in bandwidth.
- **Recovery Process**:
  - **Detection Time**: 30 seconds (time to recognize congestion).
  - **Reaction Time**: 6 seconds (time to switch to a new parent, UMASS).
  - **Repair Time**: 7 seconds (additional time to fully recover after the first parent change, switching to UNC).

## Recovery Time Components
- **Detection Time**: Duration for the victim to recognize congestion.
- **Reaction Time**: Time taken to make the first parent change after detecting congestion.
- **Repair Time**: Additional time to fully recover after the first parent change.

### Summary Statistics
- **Experiments**: 60 controlled experiments.
- **Victim Descendants**: 24 experiments had no descendants, while others had an average of 3.1 descendants.
- **Recovery Time Distribution**:
  - Most recovery times are between 20 and 45 seconds.
  - Detection time is the largest contributor, typically between 20 and 35 seconds.
  - Reaction and repair times are relatively short.

## Descendant Hosts Analysis
- **Recovery Time Comparison**: Figure 14 shows the cumulative distribution of recovery times for victims and their descendants.
- **Difference in Recovery Times**: More than 80% of descendants recover at the same time as their respective victims.
- **Parent Change Frequency**: About 75% of descendants recover without changing parents.

## Design Considerations
- **Detection Time Trade-off**: Balancing quick adaptation to short-term congestion and maintaining overlay stability.
- **Convergence Time**: Current convergence time is about 4 minutes, which may be acceptable for conferencing applications but not for highly dynamic environments.
- **Future Work**: Further studies are needed to determine the optimal detection time and improve performance in highly dynamic settings.

## Discussion
- **End System Multicast**: Can meet stringent bandwidth and latency demands in heterogeneous and dynamic Internet environments.
- **Adaptation to Bandwidth and Latency**: Important for good performance.
- **Proxy-Based vs. Peer-to-Peer Architectures**:
  - **Proxy-Based**: Advantages include shared network information, persistent proxies, and better resource management.
  - **Peer-to-Peer**: Scalable and completely distributed, suitable for large groups.

## Related Work
- **Simulations and Protocols**: Several studies and protocols (Gossamer, Narada, Yoid, Bayeux, Overcast, ALMI) have been proposed, but none have addressed the dynamic nature of network metrics as comprehensively as this work.

## Conclusion
- **Viable Architecture**: End System Multicast is viable for audio and video conferencing in dynamic and heterogeneous Internet settings.
- **Performance Metrics**: Considering both bandwidth and latency is critical for good performance.
- **Future Directions**: Exploring mechanisms for shorter adaptation times and lower network costs for larger groups.

## Acknowledgements
- **Institutional Support**: Thanks to contacts at over twenty institutions.
- **Tool Development**: Tung Fai Chan and Annie Cheng developed a visualization tool.
- **Feedback**: Gratitude to Jason Flinn, Jun Gao, Jorjeta Jetcheva, and anonymous referees for their valuable feedback.

## References
- [1] Deepak Bansal and Hari Balakrishnan. Binomial Congestion Control Algorithms. In Proc. IEEE INFOCOM, April 2001.
- [2] Y. Chawathe. Scattercast: An Architecture for Internet Broadcast Distribution as an Infrastructure Service. Fall 2000. Ph.D. thesis.
- [3] Y. Chu, S. Rao, and H. Zhang. A Case for End System Multicast. In Proceedings of ACM Sigmetrics, June 2000.
- [4] S. Deering. Multicast Routing in Internetworks and Extended Lans. In Proceedings of ACM SIGCOMM, August 1988.
- [5] S. Floyd, M. Handley, J. Padhye, and J. Widmer. Equation-Based Congestion Control for Unicast Applications. In Proceedings of ACM SIGCOMM, August 2000.
- [6] P. Francis. Yoid: Your Own Internet Distribution, http://www.aciri.org/yoid/. April 2000.
- [7] V. Hardman, A. Sasse, M. Handley, and A. Watson. Reliable audio for use over the Internet. In Proceedings of INET, June 1995.
- [8] V. Jacobson and S. McCanne. Visual audio tool (vat). http://www-nrg.ee.lbl.gov/vat/
- [9] J. Jannotti, D. Giﬀord, K. L. Johnson, M. F. Kaashoek, and J. W. O’Toole Jr. Overcast: Reliable multicasting with an overlay network. In Proceedings of the Fourth Symposium on Operating System Design and Implementation (OSDI), October 2000.
- [10] S. McCanne and V. Jacobson. vic: A ﬂexible framework for packet video. In ACM Multimedia, November 1995.
- [11] D. Pendarakis, S. Shi, D. Verma, and M. Waldvogel. ALMI: An Application Level Multicast Infrastructure. In Proceedings of the 3rd Usenix Symposium on Internet Technologies & Systems (USITS), March 2001.
- [12] S. Savage, A. Collins, E. Hoﬀman, J.Snell, and T. Anderson. The end-to-end eﬀects of Internet path selection. In Proceedings of ACM Sigcomm, August 1999.
- [13] S.Q.Zhuang, B.Y.Zhao, A.D.Joseph, R.H.Katz, and J.D.Kubiatowicz. Bayeux: An architecture for scalable and fault-tolerant wide-area data dissemination. In Proceedings of NOSSDAV, 2001.
- [14] W. Tan and A. Zakhor. Real-time Internet video using error resilient scalable compression and tcp-friendly transport protocol. In IEEE Trans. Multimedia, Vol. 1, No. 2, June 1999.
- [15] Z. Wang and J. Crowcroft. Bandwidth-delay based routing algorithms. In IEEE GlobeCom, November 1995.