### Acknowledgments

We would like to extend our gratitude to the reviewers and, in particular, to our shepherd, Vasileios Kemerlis, for their valuable suggestions that significantly improved the quality of this paper. This work was supported by the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation program (grant agreement No 681402). Additional support was provided by the Austrian Research Promotion Agency (FFG) through the K-project DeSSnet, which is funded as part of the COMET - Competence Centers for Excellent Technologies initiative by BMVIT, BMWFW, Styria, and Carinthia. Moghimi and Sunar were also supported by the National Science Foundation under grants no. CNS-1814406. We are grateful for a generous gift from Intel, which provided additional funding. It should be noted that any opinions, findings, conclusions, or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the funding parties.

### References

1. **Advanced Micro Devices.** *Software Optimization Guide for AMD Family 17h Processors*, 2017.
2. **Alejandro Cabrera Aldaya, Billy Bob Brumley, Sohaib ul Hassan, Cesar Pereida García, and Nicola Tuveri.** "Port Contention for Fun and Profit." In *IEEE Symposium on Security and Privacy (S&P)*, 2018.
3. **AMD.** *Speculation Behavior in AMD Micro-Architectures*, May 2019.
4. **Sofia Bekrar, Chaouki Bekrar, Roland Groz, and Laurent Mounier.** "A Taint Based Approach for Smart Fuzzing." In *IEEE International Conference on Software Testing, Verification and Validation*, 2012.
5. **Naomi Benger, Joop van de Pol, Nigel P. Smart, and Yuval Yarom.** "Ooh Aah... Just a Little Bit": A Small Amount of Side Channel Can Go a Long Way. In *International Conference on Cryptographic Hardware and Embedded Systems*, 2014.
6. **Johannes Blömer and Alexander May.** "New Partial Key Exposure Attacks on RSA." In *International Cryptology Conference (CRYPTO)*, 2003.
7. **Dan Boneh and Glenn Durfee.** "Cryptanalysis of RSA with Private Key d Less than N/sup 0.292." *IEEE Transactions on Information Theory*, 2000.
8. **Dan Boneh, Glenn Durfee, and Yair Frankel.** "An Attack on RSA Given a Small Fraction of the Private Key Bits." In *International Conference on the Theory and Application of Cryptology and Information Security (ASIACRYPT)*, 1998.
9. **Cristian Cadar, Vijay Ganesh, Peter M. Pawlowski, David L. Dill, and Dawson R. Engler.** "EXE: Automatically Generating Inputs of Death." *ACM Transactions on Information and System Security*, 2008.
10. **Claudio Canella, Daniel Genkin, Lukas Giner, Daniel Gruss, Moritz Lipp, Marina Minkin, Daniel Moghimi, Frank Piessens, Michael Schwarz, Berk Sunar, Jo Van Bulck, and Yuval Yarom.** "Fallout: Leaking Data on Meltdown-resistant CPUs." In *ACM SIGSAC Conference on Computer and Communications Security*, 2019.
11. **Claudio Canella, Jo Van Bulck, Michael Schwarz, Moritz Lipp, Benjamin von Berg, Philipp Ortner, Frank Piessens, Dmitry Evtyushkin, and Daniel Gruss.** "A Systematic Evaluation of Transient Execution Attacks and Defenses." In *USENIX Security Symposium*, 2019.
12. **George J. Carrette.** "CRASHME: Random Input Testing," 1996.
13. **Don Coppersmith.** "Small Solutions to Polynomial Equations, and Low Exponent RSA Vulnerabilities." *Journal of Cryptology*, 1997.
14. **Finn de Ridder.** "4DQAcCfg3b8," 2020. [https://www.youtube.com/watch?v=4DQAcCfg3b8](https://www.youtube.com/watch?v=4DQAcCfg3b8)
15. **Matthias Ernst, Ellen Jochemsz, Alexander May, and Benne De Weger.** "Partial Key Exposure Attacks on RSA Up to Full Size Exponents." In *International Conference on the Theory and Applications of Cryptographic Techniques (EUROCRYPT)*, 2005.
16. **Amaury Gauthier, Clément Mazin, Julien Iguchi-Cartigny, and Jean-Louis Lanet.** "Enhancing fuzzing technique for OKL4 syscalls testing." In *Sixth International Conference on Availability, Reliability and Security (ARES)*, 2011.
17. **Ben Gras, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida.** "Translation Leak-aside Buffer: Defeating Cache Side-channel Protections with TLB Attacks." In *USENIX Security Symposium*, 2018.
18. **Daniel Gruss, Felix Schuster, Olya Ohrimenko, Istvan Haller, Julian Lettner, and Manuel Costa.** "Strong and Efficient Cache Side-Channel Protection using Hardware Transactional Memory." In *USENIX Security Symposium*, 2017.
19. **Daniel Gruss, Raphael Spreitzer, and Stefan Mangard.** "Cache Template Attacks: Automating Attacks on Inclusive Last-Level Caches." In *USENIX Security Symposium*, 2015.
20. **David Gullasch, Endre Bangerter, and Stephan Krenn.** "Cache Games – Bringing Access-Based Cache Attacks on AES to Practice." In *IEEE Symposium on Security and Privacy (S&P)*, 2011.
21. **Jann Horn.** "speculative execution, variant 4: speculative store bypass." [https://bugs.chromium.org/p/project-zero/issues/detail?id=1528](https://bugs.chromium.org/p/project-zero/issues/detail?id=1528), 2018.
22. **Intel.** *Write Combining Memory Implementation Guidelines*, 1998.
23. **Intel.** *Copying Accelerated Video Decode Frame Buffers*, 2015.
24. **Intel.** *Deep Dive: Intel Analysis of Microarchitectural Data Sampling*, May 2019.
25. **Intel.** *Deep Dive: Intel Transactional Synchronization Extensions (Intel TSX) Asynchronous Abort*, November 2019.
26. **Intel.** *Intel 64 and IA-32 Architectures Optimization Reference Manual*, 2019.
27. **Intel.** *Intel 64 and IA-32 Architectures Software Developer’s Manual, Volume 3 (3A, 3B & 3C): System Programming Guide*, 2019.
28. **Gorka Irazoqui, Thomas Eisenbarth, and Berk Sunar.** "Cross Processor Cache Attacks." In *ACM Asia Conference on Computer and Communications Security*, 2016.
29. **Gorka Irazoqui, Mehmet Sinan Inci, Thomas Eisenbarth, and Berk Sunar.** "Wait a Minute! A Fast, Cross-VM Attack on AES." In *International Workshop on Recent Advances in Intrusion Detection*, 2014.
30. **Saad Islam, Ahmad Moghimi, Ida Bruhns, Moritz Krebbel, Berk Gulmezoglu, Thomas Eisenbarth, and Berk Sunar.** "SPOILER: Speculative Load Hazards Boost Rowhammer and Cache Attacks." In *USENIX Security Symposium*, 2019.
31. **Yeongjin Jang, Sangho Lee, and Taesoo Kim.** "Breaking Kernel Address Space Layout Randomization with Intel TSX." In *ACM SIGSAC Conference on Computer and Communications Security*, 2016.
32. **Moritz Jodeit and Martin Johns.** "USB Device Drivers: A Stepping Stone into Your Kernel." In *IEEE European Conference on Computer Network Defense*, 2010.
33. **Dave Jones.** "Trinity: A System Call Fuzzer." In *13th Ottawa Linux Symposium*, 2011.
34. **Vladimir Kiriansky and Carl Waldspurger.** "Speculative Buffer Overflows: Attacks and Defenses." *arXiv:1807.03757*, 2018.
35. **Paul Kocher, Jann Horn, Anders Fogh, Daniel Genkin, Daniel Gruss, Werner Haas, Mike Hamburg, Moritz Lipp, Stefan Mangard, Thomas Prescher, Michael Schwarz, and Yuval Yarom.** "Spectre Attacks: Exploiting Speculative Execution." In *IEEE Symposium on Security and Privacy (S&P)*, 2019.
36. **Philip Koopman, John Sung, Christopher Dingman, Daniel Siewiorek, and Ted Marz.** "Comparing Operating Systems Using Robustness Benchmarks." In *IEEE Symposium on Reliable Distributed Systems*, 1997.
37. **Esmaeil Mohammadian Koruyeh, Khaled Khasawneh, Chengyu Song, and Nael Abu-Ghazaleh.** "Spectre Returns! Speculation Attacks Using the Return Stack Buffer." In *USENIX Workshop on Offensive Technologies*, 2018.
38. **Moritz Lipp, Daniel Gruss, Raphael Spreitzer, Clémentine Maurice, and Stefan Mangard.** "ARMageddon: Cache Attacks on Mobile Devices." In *USENIX Security Symposium*, 2016.
39. **Moritz Lipp, Michael Schwarz, Daniel Gruss, Thomas Prescher, Werner Haas, Anders Fogh, Jann Horn, Stefan Mangard, Paul Kocher, Daniel Genkin, Yuval Yarom, and Mike Hamburg.** "Meltdown: Reading Kernel Memory from User Space." In *USENIX Security Symposium*, 2018.
40. **G. Maisuradze and C. Rossow.** "ret2spec: Speculative Execution Using Return Stack Buffers." In *ACM SIGSAC Conference on Computer and Communications Security*, 2018.
41. **Lorenzo Martignoni, Roberto Paleari, Giampaolo Fresi Roglia, and Danilo Bruschi.** "Testing System Virtual Machines." In *International Symposium on Software Testing and Analysis*, 2010.
42. **Lorenzo Martignoni, Roberto Paleari, Giampaolo Fresi Roglia, and Danilo Bruschi.** "Testing CPU Emulators." In *International Symposium on Software Testing and Analysis*, 2009.
43. **Clémentine Maurice, Manuel Weber, Michael Schwarz, Lukas Giner, Daniel Gruss, Carlo Alberto Boano, Stefan Mangard, and Kay Römer.** "Hello from the Other Side: SSH over Robust Cache Covert Channels in the Cloud." In *Network & Distributed System Security Symposium*, 2017.
44. **Alexander May.** "New RSA Vulnerabilities Using Lattice Reduction Methods." PhD thesis, University of Paderborn, 2003.
45. **Manuel Mendonça and Nuno Neves.** "Fuzzing Wi-Fi Drivers to Locate Security Vulnerabilities." In *IEEE European Dependable Computing Conference*.
46. **Ahmad Moghimi, Jan Wichelmann, Thomas Eisenbarth, and Berk Sunar.** "MemJam: A False Dependency Attack against Constant-time Crypto Implementations." In *International Journal of Parallel Programming*, 2019.
47. **Oleksii Oleksenko, Bohdan Trach, Mark Silberstein, and Christof Fetzer.** "SpecFuzz: Bringing Spectre-type Vulnerabilities to the Surface." *arXiv:1905.10311*, 2019.
48. **Dag Arne Osvik, Adi Shamir, and Eran Tromer.** "Cache Attacks and Countermeasures: The Case of AES." In *Cryptographers’ Track at the RSA Conference*, 2006.
49. **Michael Schwarz.** [https://twitter.com/misc0110/status/1129305720770498561](https://twitter.com/misc0110/status/1129305720770498561), May 2019.
50. **Michael Schwarz, Claudio Canella, Lukas Giner, and Daniel Gruss.** "Store-to-Leak Forwarding: Leaking Data on Meltdown-resistant CPUs." *arXiv:1905.05725*, 2019.
51. **Michael Schwarz, Daniel Gruss, Moritz Lipp, Clémentine Maurice, Thomas Schuster, Anders Fogh, and Stefan Mangard.** "Automated Detection, Exploitation, and Elimination of Double-Fetch Bugs Using Modern CPU Features." In *ACM Asia Conference on Computer and Communications Security*, 2018.
52. **Michael Schwarz, Moritz Lipp, Daniel Moghimi, Jo Van Bulck, Julian Stecklina, Thomas Prescher, and Daniel Gruss.** "ZombieLoad: Cross-Privilege-Boundary Data Sampling." In *ACM SIGSAC Conference on Computer and Communications Security*, 2019.
53. **Julian Stecklina and Thomas Prescher.** "LazyFP: Leaking FPU Register State Using Microarchitectural Side-Channels." *arXiv:1806.07480*, 2018.
54. **Atsushi Takayasu and Noboru Kunihiro.** "Partial Key Exposure Attacks on RSA: Achieving the Boneh-Durfee Bound." In *International Conference on Selected Areas in Cryptography*, 2014.
55. **Bret L. Toll, John Alan Miller, and Michael A. Fetterman.** "Method and Apparatus for Representation of an Address in Canonical Form." US Patent 7,103,751, September 5, 2006.
56. **Caroline Trippel, Daniel Lustig, and Margaret Martonosi.** "Meltdown-Prime and Spectre-Prime: Automatically-Synthesized Attacks Exploiting Invalidation-Based Coherence Protocols." *arXiv:1802.03802*, 2018.
57. **Jo Van Bulck, Marina Minkin, Ofer Weisse, Daniel Genkin, Baris Kasikci, Frank Piessens, Mark Silberstein, Thomas F. Wenisch, Yuval Yarom, and Raoul Strackx.** "Foreshadow: Extracting the Keys to the Intel SGX Kingdom with Transient Out-of-Order Execution." In *USENIX Security Symposium*, 2018.
58. **Stephan van Schaik, Alyssa Milburn, Sebastian Österlund, Pietro Frigo, Giorgi Maisuradze, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida.** "RIDL: Rogue In-Flight Data Load." In *IEEE Symposium on Security and Privacy (S&P)*, 2019.
59. **Dmitry Vyukov.** "syzkaller - Linux syscall fuzzer," 2016.
60. **Vincent M. Weaver and Dave Jones.** "perf fuzzer: Targeted Fuzzing of the perf event open() System Call." Technical report, University of Maine, 2015.
61. **Ofer Weisse, Jo Van Bulck, Marina Minkin, Daniel Genkin, Baris Kasikci, Frank Piessens, Mark Silberstein, Raoul Strackx, Thomas F. Wenisch, and Yuval Yarom.** "Foreshadow-NG: Breaking the Virtual Memory Abstraction with Transient Out-of-Order Execution," 2018.
62. **Yuan Xiao, Yinqian Zhang, and Radu Teodorescu.** "SPEECHMINER: A Framework for Investigating and Measuring Speculative Execution Vulnerabilities." In *Network & Distributed System Security Symposium*, 2020.
63. **Yuval Yarom and Katrina Falkner.** "Flush+Reload: A High Resolution, Low Noise, L3 Cache Side-Channel Attack." In *23rd USENIX Security Symposium (USENIX Security '14)*, 2014.
64. **Yinqian Zhang, Ari Juels, Michael K. Reiter, and Thomas Ristenpart.** "Cross-VM Side Channels and Their Use to Extract Private Keys." In *ACM Conference on Computer and Communications Security*, 2012.

### A. WC Buffer Size

In this experiment, we aim to determine the size of an entry in the Write-Combining (WC) buffer. The approach involves detecting when there are no available WC-buffer entries left by monitoring the `L1D_PEND_MISS.FB_FULL` performance counter. We execute an increasing number of non-temporal linear store instructions with a defined stride size. Non-temporal stores ensure that the CPU uses the WC buffer for these operations. When the stride size exceeds the size of a WC-buffer entry, a new WC-buffer entry must be allocated for each store. If the WC buffer becomes a bottleneck and the number of executed stores matches the number of fill-buffer entries, it indicates that the stride size equals the WC-buffer-entry size.

Figure 7 presents the results of this experiment. Only at a stride size of 64 bytes and for more than 12 stores, the performance counter reports the unavailability of WC buffers. For smaller stride sizes, the stores can be combined in the buffers, so not every store requires a separate buffer entry.

![Figure 7: Cycles where no fill-buffer entry is available. As Skylake has 12 fill-buffer entries [52] usable as WC-buffer entries [23], one entry is 64 bytes.](path_to_figure_7)

### B. Performance Counters

Figure 8 shows the heatmap for the correlation between the number of leaked bytes and different performance counter events, related to various variants of Meltdown attacks.

![Figure 8: Heatmap for the correlation between the number of leaked bytes and different performance counter events.](path_to_figure_8)

---

This version of the text is now more coherent, professional, and easier to read. The references and acknowledgments have been formatted consistently, and the experimental section has been clarified.