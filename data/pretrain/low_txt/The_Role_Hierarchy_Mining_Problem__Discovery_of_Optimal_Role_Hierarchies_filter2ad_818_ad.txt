### 4.1 RH-Builder Algorithm

In each iteration, the algorithm may traverse all the edges in the current graph at most once. Given that the number of edges can be upper-bounded by \( |V|^2 \), and there are \( |V| \) iterations (one for each node insertion), the overall complexity of the RH-Builder algorithm is \( O(|V|^3) \). The worst-case scenario is realized only for a complete graph.

### 4.2 RH-Miner Algorithm

In this section, we introduce another algorithm called RH-Miner, which is designed for scenarios where no initial roles are provided. Essentially, RH-Miner breaks down the problem into two steps:

1. **Role Generation**: A minimal set of roles is generated using one of the known heuristic approaches. The generation of a minimal set of roles from a given User-Permission Assignment (UPA) has been formally defined by Vaidya et al. [13] as the Role Mining Problem (RMP), which is also mapped to the Tiling Databases problem [7]. We can directly leverage existing solutions [7, 14] for RMP.
   
2. **Hierarchy Construction**: Once the minimal set of roles is generated, RH-Builder is applied to construct the hierarchy with the minimal number of edges.

Our algorithm essentially decomposes one optimization problem into two subtasks. One weakness of this approach is that it not only serializes the generation of the role set and the hierarchy but also specifies the order: roles are generated first, followed by the hierarchy. This means that the hierarchy construction is conditioned on the generation of roles, which introduces additional constraints and overlooks the possibility of creating the hierarchy simultaneously with the discovery of roles. As a result, the solution reached by our algorithm may not be truly optimal.

#### Example 4

Figure 4 provides two solutions to the Role Hierarchy Mining Problem (RHMP) given a set of users \( U \), a set of permissions \( P \), and the user-permission assignment (UPA). 

- Figure 4(a) shows the UPA.
- Figures 4(b) and 4(d) show one solution, while Figures 4(c) and 4(e) show another solution.

Both solutions adopt the idea of generating a minimal set of roles first, followed by building a hierarchy with the minimal number of edges. Each solution generates a different set of roles, both with a cardinality of 3, making them both optimal. The hierarchies based on the previously generated roles are also optimal in the sense that, given the same set of roles, no better solution can achieve fewer edges. However, the solution represented by Figures 4(b) and 4(d) is superior to the one shown in Figures 4(c) and 4(e). This clearly indicates that sequential optimization of each subtask might not achieve the optimality of RHMP. Part of our future work is to find solutions better than RH-Miner to address RHMP.

### 5. Related Work

Deploying Role-Based Access Control (RBAC) requires identifying a complete and correct set of roles and assigning users and permissions to these roles. This process, known as role engineering [3], is one of the costliest components in implementing RBAC [6].

There are two basic approaches to role engineering: top-down and bottom-up.

- **Top-Down Approach**: Roles are defined by carefully analyzing and decomposing business processes into smaller, functionally independent units. This is a cooperative process requiring various authorities from different disciplines to understand the semantics of business processes, making it often quite expensive.
  
- **Bottom-Up Approach**: This approach utilizes existing permission assignments to formulate roles. It has the advantage of automating the role engineering process, although it may not consider the business functions of an organization [8].

A combination of both approaches can be beneficial. While the top-down approach may ignore existing permissions, the bottom-up model may not consider business functions. Several attempts have been made to propose good bottom-up techniques for finding roles [9, 12, 17, 4, 2]. However, a common issue with these approaches is the lack of a formal notion of the goodness or interestingness of a role. Recently, Vaidya et al. [13] formally defined the role mining problem and analyzed its theoretical bounds. They showed that the decision version of this problem is NP-complete by reducing it to the known NP-complete set basis problem.

Ene et al. [4], Zhang et al. [2], and Vaidya et al. [16] studied a variant of the problem that minimizes the number of user-to-role and role-to-permission assignments. These optimizations are desirable as they reduce the administrative burden by minimizing the number of roles. An alternative role mining problem, denoted as the minimal perturbation RMP [15], aims to discover the optimal set of roles that are as close to the currently deployed roles. This helps organizations migrate to a new set of optimal roles without disrupting their processes and provides a formal means of optimally merging roles when two or more organizations merge.

While the above proposals attempt to discover a set of roles with a certain optimality, they do not discover hierarchies. Molloy et al. [10] proposed an approach using formal concept analysis for role hierarchy construction. Their greedy algorithm, called Hierarchical Miner, starts from an initial role hierarchy where each user is assigned exactly one role and one permission is assigned to exactly one role. It uses a heuristic solution for optimality based on weighted structural complexity. Local pruning or restructuring is performed iteratively over each role if the cost of the RBAC state can be reduced. The weighted structural complexity sums up the number of relationships, each with a different weight. These relationships include roles generated, user-role assignments (UA), role-permission assignments (PA), the transitive reduction of the role hierarchy, and direct user-permission assignments (UPA). Optimality is defined as the smallest weighted structural complexity.

One major difference between their approach and ours is that they do not provide a formal means to optimize the role hierarchy but eliminate nodes with no users and/or no permissions and remove redundant edges due to transitivity. Another difference is that our optimality is solely determined by the combination of the number of roles and the transitive reduction of the role hierarchy. We exclude UA and PA from the optimality definition because the role hierarchy already fully incorporates the information represented by UA and PA combined. Including both would be redundant and unnecessary. We also do not include direct UPA since, under role-based access control, users and permissions are completely decoupled. Direct assignment of permissions to users would obscure the boundary on when to use roles and when to use direct assignment, defeating the purpose of RBAC.

### 6. Conclusions and Future Research

Role hierarchies are essential to the role-based access control model as they further ease the burden of security administration. While many solutions exist for creating role hierarchies, there is no formal notion of an optimal role hierarchy, which would help maximize the benefits of having one. In this paper, we formally define the Role Hierarchy Mining Problem (RHMP). Our approach views the role hierarchy as a graph and finds the optimal role hierarchy by computing the transitive closure with the minimum number of edges. Our heuristic solution is built on the recently proposed RoleMiner solution [17].

In the future, we plan to enhance the optimal role and hierarchy computation by considering the semantics of the objects and their attributes, which will help discover more meaningful roles. Additionally, we plan to evaluate the proposed approach in this paper and the approach proposed in [10] against our formal metric using both simulated and real datasets. We will also develop solutions for the MinPert RHMP, which is likely to be the most useful for organizations.

### References

[1] A. Aho, M. Garey, and J. Ullman. The transitive reduction of a directed graph. SIAM Journal on Computing.

[2] B. Zhang, E. Al-Shaer, R. Jagadeesan, J. Riely, and C. Pitcher. Specifications of a high-level conflict-free firewall policy language for multi-domain networks. In The Twelfth ACM Symposium on Access Control Models and Technologies, pages 185–194, 2007.

[3] E.J. Coyne. Role-engineering. In 1st ACM Workshop on Role-Based Access Control, 1995.

[4] A. Ene, W. Horne, N. Milosavljevic, P. Rao, R. Schreiber, and R. Tarjan. Fast exact and heuristic methods for role minimization problems. In The ACM Symposium on Access Control Models and Technologies, June 2008.

[5] D. Ferraiolo, R. Sandhu, S. Gavrila, D. Kuhn, and R. Chandramouli. Proposed NIST Standard for Role-Based Access Control. TISSEC, 2001.

[6] M. P. Gallagher, A. O’Connor, and B. Kropp. The economic impact of role-based access control. Planning report 02-1, National Institute of Standards and Technology, March 2002.

[7] F. Geerts, B. Goethals, and T. Mielikainen. Tiling databases. In Discovery Science, Lecture Notes in Computer Science, pages 278 – 289. Springer-Verlag, 2004.

[8] A. Kern, M. Kuhlmann, A. Schaad, and J. Moffett. Observations on the role life-cycle in the context of enterprise security management. In 7th ACM Symposium on Access Control Models and Technologies, June 2002.

[9] M. Kuhlmann, D. Shohat, and G. Schimpf. Role mining - revealing business roles for security administration using data mining technology. In Symposium on Access Control Models and Technologies (SACMAT). ACM, June 2003.

[10] I. Molloy, H. Chen, T. Li, Q. Wang, N. Li, E. Bertino, S. Calo, and J. Lobo. Mining roles with semantic meanings. In SACMAT ’08: Proceedings of the 13th ACM symposium on Access control models and technologies, pages 21–30, New York, NY, USA, 2008. ACM.

[11] R. S. Sandhu et al. Role-based Access Control Models. IEEE Computer, pages 38–47, February 1996.

[12] J. Schlegelmilch and U. Steffens. Role mining with ORCA. In The Tenth ACM Symposium on Access Control Models and Technologies, pages 168–176, June 2005.

[13] J. Vaidya, V. Atluri, and Q. Guo. The role mining problem: Finding a minimal descriptive set of roles. In The Twelfth ACM Symposium on Access Control Models and Technologies, pages 175–184, Sophia Antipolis, France, June 20-22, 2007.

[14] J. Vaidya, V. Atluri, and Q. Guo. The role mining problem: A formal perspective. ACM Transactions on Information Systems Security, to appear.

[15] J. Vaidya, V. Atluri, Q. Guo, and N. Adam. Migrating to optimal RBAC with minimal perturbation. In The ACM Symposium on Access Control Models and Technologies, June 2008.

[16] J. Vaidya, V. Atluri, Q. Guo, and H. Lu. Edge-RMP: Minimizing administrative assignments for role-based access control. Journal of Computer Security, to appear.

[17] J. Vaidya, V. Atluri, and J. Warner. RoleMiner: Mining roles using subset enumeration. In CCS ’06: Proceedings of the 13th ACM conference on Computer and communications security, pages 144–153, 2006.