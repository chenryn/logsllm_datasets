# Title: Vivisecting WhatsApp through Large-Scale Measurements in Mobile Networks

# Authors: Pierdomenico Fiadino, Mirko Schiavone, Pedro Casas  
# Affiliation: FTW Vienna
# Contact: [PI:EMAIL]

## Abstract
WhatsApp, the leading instant multimedia messaging service in mobile networks, is rapidly gaining popularity, surpassing traditional SMS/MMS. This paper presents the first large-scale characterization of WhatsApp, which is valuable for Internet Service Providers (ISPs) to understand the impact of such applications on their networks. By combining passive measurements at the core of a national mobile network, worldwide geo-distributed active measurements, and traffic analysis at end devices, we reveal that: (i) WhatsApp's hosting architecture is highly centralized and exclusively located in the US; (ii) video sharing accounts for nearly 40% of the total WhatsApp traffic volume; (iii) flow characteristics vary based on the operating system (OS) of the end device; (iv) despite significant latencies to US servers, download throughputs can reach up to 1.5 Mbps; and (v) users react immediately and negatively to service outages via social media.

## Categories and Subject Descriptors
C.2 [Computer-Communication Networks]: Miscellaneous; C.4 [Performance of Systems]: Measurement Techniques

## Keywords
WhatsApp, Large-Scale Measurements, Mobile Networks

## 1. Motivation & Methodology
WhatsApp is undoubtedly the leading instant multimedia messaging service in mobile networks, handling over 64 billion messages per day, including 700 million photos and 100 million videos. With half a billion active users, it has become the fastest-growing company in history in terms of user base. The goal of this work is to provide the first large-scale characterization of the complete service, which is highly useful for mobile operators and service providers to assess its impact on the network and to understand how to track its usage.

Given that WhatsApp traffic is encrypted, our study required a complex methodology to discover the traffic flows and corresponding hosting servers. We first analyzed WhatsApp traffic captures at end devices, focusing on DNS requests to identify the naming scheme used by the servers. Using this naming scheme with the HTTPTag traffic classification tool [1], and following a similar procedure to [2], we collected a week of WhatsApp flows at the core of a European national-wide mobile network (from February 18 to February 25). These flows were then analyzed using the DBStream large-scale analysis system [3]. Essentially, every time a user issues a DNS request for the fully qualified domain name *.whatsapp.net, HTTPTag creates an entry mapping this user to the server IPs provided in the DNS reply. Each entry is timestamped and expires after a timeout based on the TTL of the DNS reply. Using these mappings, all subsequent flows between the user and identified servers are assumed to be WhatsApp flows. To increase the robustness of the approach, the list of IPs is augmented by adding those servers signing the TLS/SSL certificates with the string *.whatsapp.net, as observed in the end device captures. Finally, using the MaxMind GeoIP databases and geo-distributed DNS active measurements with the RIPE Atlas monitoring network, we identified and characterized the WhatsApp hosting infrastructure.

## 2. Analysis & Findings
The complete dataset consists of more than 140 million chat flows, 9 million photo/audio content flows, and 5 million video flows. Our main findings are as follows:

### (i) Naming Scheme and Hosting Architecture
WhatsApp uses a highly structured naming scheme to handle different message types. Servers are associated with different third-level domain names, depending on the nature of the message (control, chat, media). Chat and control messages are handled by chat servers on ports 5222 (XMPP) or 443, identified by the domain names e|c|dX.whatsapp.net (where X is a variable for load balancing). To ensure fast delivery of messages, chat connections are kept open while the application is active or in the background. Transfers of photos, videos, and audio are managed by HTTPS multimedia servers identified by mms|mmi|mmvXYZ.whatsapp.net, where mms|mmi is for audio and photos, and mmv is for videos. Each HTTPS connection is dedicated to a single content and closed upon transfer completion.

### (ii) Centralized Hosting
Despite its global popularity, WhatsApp is a centralized service hosted by a single provider, SoftLayer (AS36351), with servers located in the US. We observed 386 server IPs in the complete dataset, all belonging to SoftLayer. To avoid biased conclusions from a single vantage point, we performed active measurements using RIPE Atlas, resolving the same domain names from 600 boxes around the globe over multiple days. These measurements confirmed that the same set of IPs is always replied, regardless of the location of the requester. Using MaxMind, we found that these IPs are mainly located in Dallas and Houston. This was confirmed through traceroutes and active RTT measurements. Figure 1(a) shows the distribution of the minimum RTT from the vantage point to the server IPs, weighted by the number of flows and traffic volume. The cumulative distribution function (CDF) indicates that the service is evenly handled between two different yet potentially close locations, with RTTs of about 106ms and 114ms from the vantage point. Figure 1(b) shows the number of daily active IPs, split by message type. More than 350 IPs serve flows during peak hours, and 200 IPs are active even during the lowest load hours. Chat servers are constantly active to maintain the state of active devices, and mmi and mms IPs also have a share of always-active IPs.

### (iii) Flow Characteristics and Performance
Table 1 reports the downlink/uplink volume and flow shares. While the majority of the flows correspond to chat messages, media messages account for more than 76% of the total up/down traffic, with video covering almost 40%. In terms of flow size and duration, Figures 2(a-b) show that chat flows are small-sized (6.7KB average) and long-lasting (17 minutes average), whereas media flows are larger (225KB average) and shorter (2 minutes average). The flow duration CDF reveals steps at exactly 10, 15, and 24 minutes, suggesting the use of timeouts to terminate idle connections. As shown in Figure 2(c), these values are influenced by the OS of the device. Different timeouts are visible for Android at 10, 15, and 24 minutes; iOS uses a timeout of 3 minutes, BlackBerry has 15-minute timeouts, and Windows phones favor 10-minute timeouts. When it comes to performance, Figure 2(d) indicates that, despite significant latencies to US servers, throughputs for multimedia flows larger than 1MB are relatively high, achieving an average down/up flow throughput of 1.5 Mbps/800 kbps.

### (iv) User Reactions to Outages
User reactions to WhatsApp outages are rapidly observed through social media feeds. Figure 3 depicts the volume and flow counts time series during two days around a major outage on February 22, 2014. The event is clearly visible from the traffic measurements and can be correlated with user reactions on social networks. Using the downdetector.com application, we collected counts of Twitter feeds containing the keyword "whatsapp" coupled with keywords reflecting service impairments such as "outage" and "is down" (error tweets). The main reported outage (event B) occurred around 19:00 CEST, but similar outages are observed in the error tweet counts, which have the same network traffic signature (events A, C, and D). The figure also shows a 12-hour zoom of the TCP flags counters, revealing a steep increase in SYN and RST packets, indicating that devices were repeatedly trying to reconnect after the servers reset the connections, suggesting that the failure occurred at the application layer.

## 3. References
[1] P. Fiadino, et al., “HTTPTag: A Flexible On-line HTTP Classification System for Operational 3G Networks,” in IEEE INFOCOM, 2013.
[2] I. Bermudez, et al., “DNS to the rescue: Discerning Content and Services in a Tangled Web,” in ACM IMC, 2012.
[3] A. Bär, et al., “DBStream: An Online Aggregation, Filtering and Processing System for Network Traffic Monitoring,” in TRAC, 2014.