# Hijacking Arbitrary .NET Application Control Flow

## Speaker
**Topher Timzen**
- Security Researcher, Intel
- Security Trainer
- [TopherTimzen.com](https://www.tophertimzen.com)
- [@TTimzen](https://twitter.com/TTimzen)

## Overview
- **.NET?**
- **Runtime Attacks**
  - Modify Control Flow
  - Machine Code Editing
  - Managed Heap
- **Tools Released**
  - Use .NET to attack
  - Using Objects on the Heap
- **Why are we Here?**
  - CLR Attacks
    - Controlling the Common Language Runtime
    - Accessing raw objects on Managed Heap
    - Manipulate AppDomains
      - Controlling all Loaded Code
      - Controlling Just-In-Time Compilation
  - Attack With ASM
    - Manipulate Resources
    - Attack methods at ASM level
    - Alter application control flow

## .NET Process
- **CLR (2.0/4.0) & AppDomains**
- **Assemblies (.EXE and .DLL(s))**
- **Objects**
  - Properties
  - Fields
  - Instance Methods
  - Classes
  - Methods
  - Logic

## Gray Frost & Gray Storm
### The Tools
#### Gray Frost
- **Payload Delivery System**
  - C++ .NET CLR Bootstrapper
  - Creates or injects 4.0 runtime
  - Capability to pivot into 2.0 runtime
  - Contains raw payload
- **Two Rounds**
  - **Round 1: .NET Process**
    - Mscoree
    - GrayFrostCpp
    - GrayFrostCSharp
  - **Round 2: .NET Process**
    - Payload `void main()`
    - GrayFrostCSharp
    - Pivoting Between runtimes

#### Gray Storm
- **Reconnaissance and In-memory Attack Payload**
- **Features**
  - Attacking the .NET JIT
  - Attacking .NET at the ASM level
  - ASM and Metasploit payloads
  - Utilize objects on the Managed Heap

### Usage
- **Controlling the JIT**
  - Method Tables contain the address of the JIT stub for a class’s methods.
  - During JIT, the Method Table is referenced.
  - We can control the address, which lives after Garbage Collection.

### Control Flow Attacks
- **.NET uses far and relative calls**
  - `0xE8; Call [imm]`
  - `0xFF 0x15; Call dword segmentRegister[imm]`
  - `relCall = dstAddress - (currentLocation + lenOfCall)`

### ASM Payloads
- **Overwrite method logic with new ASM**
  - Steal stack parameters
  - Change events
  - Overwrite logic
  - Update Mechanisms
  - Metasploit
  - Hand Rolled
  - Portable Environment Block (PEB) changes

### Object Hunting in Memory
- **Managed Heap**
  - Storage point for .NET Objects
  - New reference objects added to heap
  - Garbage Collector removes dead objects

### Finding Objects at Runtime
1. Construct an object and find location of Managed Heap
2. Signature instantiated type
3. Scan Managed Heap for object pointers
4. Convert object pointers to raw objects
5. ???? (Further steps)
6. PROFIT

### Scan Managed Heap
- **Scan down incrementing by size of object**
- **Compare object’s Method Table to the reference**
- **If they match, get IntPtr address of object**

### Convert object ptr -> raw obj
- **Refer (System.IntPtr)**
- **pointer(024ea00c )**
- **L H**

### Superpowers and Things?
- **Change Keys**
- **Change Fields / Properties**
- **Call Methods with arguments!**

### Automation
- **GrayFrost can be used with automated payloads**
- **Constructing Attack Chains**
  - **Gray Wolf / IL Decompiler**
    - Find Methods, Fields & Properties of interest
    - Locate meaningful objects
    - Discover high-level control flow
  - **Gray Storm “Debugging” functionality**
    - Breakpoint at constructors or methods from Method Pointers
    - Use with WinDbg
  - **Utilize DLL Hijacking!**
  - **Hybrid .NET/ASM Attacks**
    - Hybrid C#/ASM code in .NET
    - Encrypting .NET payloads and unwinding
    - Encrypting ASM Payloads

### .NET Hacking Space
- **Small**
- **Few tools**
- **Mostly hacking WoW**
- **Lots of PowerShell**
- **Previous DEF CON talks**
  - DEF CON 18 & 19 - Jon McCoy

## Conclusion
- **Arbitrary .NET applications can be injected and changed**
- **New .NET attack possibilities**
- **New tools that support automation**
- **Get Gray Frost and Storm**
  - [github.com/graykernel](https://github.com/graykernel)

## Questions?
- **Contact Me**
  - [@TTimzen](https://twitter.com/TTimzen)
  - [TopherTimzen.com](https://www.tophertimzen.com)

## White Papers
- **Hijacking Arbitrary .NET Application Control Flow**
- **Acquiring .NET Objects from the Managed Heap**