以下是经过优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

[22] Jean-Charles Faugère, Christopher Goyet, and Guénaël Renault. 攻击仅提供隐式提示的（EC）DSA。在《Selected Areas in Cryptography – SAC’12》中，LNCS 7707卷，第252-274页。Springer出版社，2012年。

[23] Cesar Pereida García 和 Billy Bob Brumley. 常量时间被调用者与变量时间调用者。在USENIX Security'17会议中，第83-98页。USENIX协会，2017年。

[24] Cesar Pereida García, Billy Bob Brumley, 和 Yuval Yarom. 确保DSA签名指数确实为常量时间。在计算机与通信安全会议（CCS’16）中，第1639-1650页。ACM出版社，2016年。

[25] Iaroslav Gridin, Cesar Pereida García, Nicola Tuveri, 和 Billy Bob Brumley. Triggerﬂow：通过高级执行路径检查进行回归测试。在入侵检测与恶意软件及漏洞评估会议（DIMVA’19）中，LNCS 11543卷，第330-350页。Springer出版社，2019年。

[26] Martin Hlavác 和 Tomás Rosa. 扩展隐藏数问题及其密码分析应用。在《Selected Areas in Cryptography – SAC’06》中，LNCS 4356卷，第114-133页。Springer出版社，2006年。

[27] Nick Howgrave-Graham 和 Nigel P. Smart. 对数字签名方案的格攻击。设计、编码与密码学杂志，23卷，第283-290页，2001年。

[28] Simon Josefsson 和 Ilari Liusvaara. Edwards曲线数字签名算法（EdDSA），2017年。请求评论：8032。

[29] Cameron F Kerry 和 Patrick D Gallagher. 数字签名标准（DSS）；FIPS出版物186-4。信息技术实验室，国家标准与技术研究所：马里兰州盖瑟斯堡，美国，2013年。

[30] Paul C. Kocher. 对Diffie-Hellman、RSA、DSS及其他系统的实现进行时序攻击。在《Advances in Cryptology – CRYPTO’96》中，LNCS 1109卷，第104-113页。Springer出版社，1996年。

[31] Boris Köpf, Laurent Mauborgne, 和 Martín Ochoa. 自动量化缓存侧信道。在计算机辅助验证会议（CAV’12）中，LNCS 7358卷，第564-580页。Springer出版社，2012年。

[32] Adam Langley. ctgrind: 使用Valgrind检查函数是否为常量时间。https://github.com/agl/ctgrind。

[33] Arjen Klaas Lenstra, Hendrik Willem Lenstra, 和 László Lovász. 具有有理系数的多项式因式分解。数学年鉴，261(4)卷，第515-534页，1982年。

[34] Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, 和 Ruby B. Lee. 最后一级缓存侧信道攻击是可行的。在安全与隐私会议（S&P’15）中，第605-622页。IEEE计算机学会，2015年。

[46] Keegan Ryan. 隐藏数问题的回归。对ECDSA和DSA的一种广泛且新颖的密钥提取攻击。IACR Trans. Cryptogr. Hardw. Embed. Syst., 2019:146–168, 2019.

[35] Elke De Mulder, Michael Hutter, Mark E. Marson, 和 Peter Pearson. 使用Bleichenbacher的隐藏数问题解决方案攻击384位ECDSA中的nonce泄漏。在《Cryptographic Hardware and Embedded Systems – CHES’13》中，LNCS 8086卷，第435-452页。Springer出版社，2013年。

[36] Elke De Mulder, Michael Hutter, Mark E. Marson, 和 Peter Pearson. 使用Bleichenbacher的隐藏数问题解决方案攻击384位ECDSA中的nonce泄漏：扩展版本。加密工程杂志，4卷，第33-45页，2014年。

[37] David Naccache, Phong Q. Nguyen, Michael Tunstall, 和 Claire Whelan. 实验故障、格子和DSA。在公钥密码学会议（PKC’05）中，LNCS 3386卷，第16-28页。Springer出版社，2005年。

[38] Phong Q. Nguyen 和 Igor E. Shparlinski. 部分已知nonce下的数字签名算法的安全性。密码学杂志，15卷，第151-176页，2002年。

[39] Phong Q. Nguyen 和 Igor E. Shparlinski. 部分已知nonce下的椭圆曲线数字签名算法的安全性。设计、编码与密码学杂志，30卷，第201-217页，2003年。

[40] Phong Q. Nguyen 和 Jacques Stern. 密码学中的格约简：更新。在国际算法数论研讨会（ANTS’00）中，LNCS 1838卷，第85-112页。Springer出版社，2000年。

[41] OpenSSL. 安全政策，2019年。https://www.openssl.org/policies/secpolicy.html (访问日期：2019年7月26日)。

[42] Colin Percival. 缓存缺失的乐趣与收益，2005年。在线可获取：http://daemonology.net/hyperthreading-considered-harmful/。

[43] Andy Polyakov. 提高ECDSA签名性能30%-40%。OpenSSL拉取请求#5001，2018年。https://github.com/openssl/openssl/pull/5001#discussion_r159935593。

[44] Thomas Pornin. 数字签名算法（DSA）和椭圆曲线数字签名算法（ECDSA）的确定性使用，2013年。请求评论：6979。

[45] Oscar Reparaz, Josep Balasch, 和 Ingrid Verbauwhede. 老兄，我的代码是常量时间吗？在欧洲设计、自动化与测试会议（DATE’17）中，第1697-1702页。IEEE出版社，2017年。

[47] Claus-Peter Schnorr. 智能卡的有效识别和签名。在《Advances in Cryptology – CRYPTO’89》中，LNCS 435卷，第239-252页。Springer出版社，1989年。

[48] Michael Schwarz, Samuel Weiser, Daniel Gruss, Clémentine Maurice, 和 Stefan Mangard. Malware Guard Extension: 使用SGX隐蔽缓存攻击。在入侵检测与恶意软件及漏洞评估会议（DIMVA’17）中，LNCS 10327卷，第3-24页。Springer出版社，2017年。

[49] Laurent Simon, David Chisnall, 和 Ross J. Anderson. What You Get is What You C: 控制主流C编译器中的副作用。在IEEE欧洲安全与隐私研讨会（EURO S&P’18）中，第1-15页。IEEE出版社，2018年。

[50] Eran Tromer, Dag Arne Osvik, 和 Adi Shamir. 对AES的有效缓存攻击及对策。密码学杂志，23卷，第37-71页，2010年。

[51] Joop van de Pol, Nigel P. Smart, 和 Yuval Yarom. 再多一点。在《Topics in Cryptology – CT-RSA’15》中，LNCS 9048卷，第3-21页。Springer出版社，2015年。

[52] Shuai Wang, Yuyan Bao, Xiao Liu, Pei Wang, Danfeng Zhang, 和 Dinghao Wu. 通过增强秘密的抽象解释识别基于缓存的侧信道。CoRR, abs/1905.13332, 2019.

[53] Shuai Wang, Pei Wang, Xiao Liu, Danfeng Zhang, 和 Dinghao Wu. CacheD: 识别生产软件中的基于缓存的时间通道。在USENIX Security'17会议中，第235-252页。USENIX协会，2017年。

[54] Samuel Weiser, Raphael Spreitzer, 和 Lukas Bodner. 针对Intel SGX SSL中的RSA密钥生成的单踪迹攻击。在亚洲计算机与通信安全会议（AsiaCCS）中，第575-586页。ACM出版社，2018年。

[55] Samuel Weiser, Andreas Zankl, Raphael Spreitzer, Katja Miller, Stefan Mangard, 和 Georg Sigl. DATA - 差分地址跟踪分析：在二进制文件中查找基于地址的侧信道。在USENIX Security'18会议中，第603-620页。USENIX协会，2018年。

[56] Jan Wichelmann, Ahmad Moghimi, Thomas Eisenbarth, 和 Berk Sunar. MicroWalk: 在二进制文件中查找侧信道的框架。在年度计算机安全应用会议（ACSAC’18）中，第161-173页。ACM出版社，2018年。

[57] David Wong. 对远程ECDSA OpenSSL服务器进行时序和格攻击：它们实际上有多实用？IACR密码学电子档案，2015:839, 2015.

[58] Yuan Xiao, Mengyuan Li, Sanchuan Chen, 和 Yinqian Zhang. STACCO: 差分分析侧信道跟踪以检测安全飞地中的SSL/TLS漏洞。在计算机与通信安全会议（CCS’17）中，第859-874页。ACM出版社，2017年。

[59] Yuanzhong Xu, Weidong Cui, 和 Marcus Peinado. 受控信道攻击：用于不受信任操作系统的确定性侧信道。在安全与隐私会议（S&P’15）中，第640-656页。IEEE计算机学会，2015年。

[60] Yuval Yarom 和 Naomi Benger. 使用FLUSH+RELOAD缓存侧信道攻击恢复OpenSSL ECDSA nonce。IACR密码学电子档案，2014:140, 2014.

[61] Yuval Yarom 和 Katrina Falkner. FLUSH+RELOAD: 一种高分辨率、低噪声的L3缓存侧信道攻击。在USENIX Security'14会议中，第719-732页。USENIX协会，2014年。

[62] Yuval Yarom, Daniel Genkin, 和 Nadia Heninger. CacheBleed: 对OpenSSL常量时间RSA的时序攻击。在《Cryptographic Hardware and Embedded Systems – CHES’16》中，LNCS 9813卷，第346-367页。Springer出版社，2016年。

[63] Andreas Zankl, Johann Heyszl, 和 Georg Sigl. 模块化指数运算软件中指令缓存泄漏的自动检测。在智能卡研究与高级应用会议（CARDIS’16）中，LNCS 10146卷，第228-244页。Springer出版社，2016年。

[64] Yinqian Zhang, Ari Juels, Michael K. Reiter, 和 Thomas Ristenpart. 跨VM侧信道及其用于提取私钥的应用。在计算机与通信安全会议（CCS’12）中，第305-316页。ACM出版社，2012年。

### A. DATA GUI
图5展示了DATA GUI。它包括几个视图：
左侧根据调用堆栈（顶部）和库（中部）对所有泄漏进行排序。此外，它显示了每个函数的数据（D）和控制流（CF）泄漏数量以及与泄漏模型的最大相关性百分比。可以看到一些其他潜在（误报）泄漏，这些泄漏与任何预定义的泄漏模型都不相关。
中间框列出了选定函数的数据和控制流泄漏。
右侧高亮显示了反汇编和源代码中的泄漏，如果可用的话，这对于分析至关重要。
左下角的摘要标签提供了关于特定泄漏的详细信息，包括各种泄漏模型的相关性。此外，它还允许分析师对泄漏进行评论和评级，以便记录和沟通。
可点击的元素和不同视图的同步有助于快速浏览复杂的报告。

### B. SGX受控信道攻击（V5）
修复我们报告的一些漏洞需要对代码库进行重大更改。例如，k-padding（V2）已在OpenSSL中修复，但最小大整数的问题仍然存在，直到OpenSSL重新设计大整数实现为止。以下是如何利用k-padding top漏洞（V5）进行剩余泄漏的示例。
在k-padding过程中，BN_is_bit_set会在中间nonce缓冲区l上调用，如清单2第18行所示。如果l->top小于q_bits，则会导致在清单4第4行提前终止。为了利用此泄漏，攻击者需要检测第5行是否被执行。
虽然Flush+Reload可能由于泄漏代码量小而不适用，但我们演示了一种针对运行SGX SSL库中易受攻击的DSA签名操作的SGX enclave的受控信道攻击[59]。受控信道攻击可以检测页面粒度上的单个内存访问，无论是代码还是数据。由于易受攻击的函数很可能位于单个代码页上，探测该页并不足够。尽管存在更复杂的技术来单步执行enclave[17]，但我们可以通过区分第5行是否访问覆盖缓冲区a->d的数据页来区分。
对于攻击，我们需要追踪执行到易受攻击的k-padding。我们使用SGX-Step框架[17]而无需使用其单步功能来完成此操作。我们取消映射所有相关的enclave代码页，其中包含以下函数：dsa_do_sign, BN_generate_dsa_nonce, BN_MONT_CTX_set_locked, BN_add, 和 BN_is_bit_set。一旦enclave获取其中一个页面，就会触发页面错误，我们通过自定义信号处理器在用户空间捕获该错误。然后，我们仅选择性地启用故障页面，直到命中易受攻击的BN_is_bit_set函数。现在我们也取消映射持有nonce缓冲区a->d的数据页。如果下一步在a->d上抛出页面错误，我们知道第5行已执行。否则，我们知道第4行的提前终止已被触发。在这种情况下，nonce在k-padding的第一个加法操作（清单2第13行）中没有调整大小，因此小于平均值。我们只收集这样的签名并发起格攻击。
我们根据方程（13）构建格，并逐渐填充泄露的签名，直到格约简揭示私钥。对于实际约简，我们使用BKZ算法，块大小为30。对于泄漏L = 8位的DSA-256模数，36个签名在3.3秒内成功恢复。对于L = 6位泄漏，恢复需要47个签名并在7.8秒内完成。L = 4位需要79个签名，并且在增加BKZ块大小为50的情况下耗时111小时，因为它接近第2.2节中估计的边界，至少需要L = 3。
为了使攻击有效，第4行中的a->top需要与a->d位于不同的页面上。这可以通过enclave将可变大小的攻击者控制参数（如要签名的消息）复制到enclave堆上来轻松实现。通过改变参数的大小，可以适当地移动大整数a。

### C. 小Nonce泄漏细节
OpenSSL在多个地方泄露了小Nonce的字长。BN_generate_dsa_nonce中的Nonce生成依赖于非常量时间的BN_div来进行Nonce减少，从而泄露了小Nonce的长度，例如通过BN_rshift。此外，Nonce通过跳过前导零肢来剥离，这通过bn_correct_top泄露了Nonce的长度（以肢为单位）。OpenSSL的默认标量乘法使用双倍和添加的盲版本，在ec_GF2m_simple_points_mul中，在应用盲之前，Nonce长度在从scalar复制到k时通过BN_copy泄露，在通过BN_num_bits检查其位长度时泄露，在与基数进行第一次加法时通过BN_add泄露。此外，NIST优化曲线在ec_GFp_nistp521_points_mul等函数中也调用了BN_num_bits，这也泄露了Nonce长度（参见[43]）。
在通过BN_mod_exp_mont进行Nonce逆向时，该函数由ec_group_do_inverse_ord和ec_field_inverse_mod_ord调用，当比较大整数k和q时通过BN_ucmp会有一个早期退出。尽管由于条件访问的代码或数据量较小，其利用可能很棘手，但我们还发现了一个容易利用的泄漏，将在第6.1节中描述。
对于LibreSSL，情况类似。Nonce生成通过在拒绝采样期间通过BN_ucmp检查适当的Nonce时的早期退出条件泄露Nonce长度。LibreSSL还在Nonce和组顺序之间的第一次加法（k-padding）中泄露Nonce长度。然而，LibreSSL意外地进行了两次k-padding；1) 在ecdsa_sign_setup中和2) 在ec_GFp_simple_mul_ct中。与OpenSSL不同，Nonce逆向仍使用扩展欧几里得方法，并受到漏洞(V8)的影响。此外，LibreSSL使用了旧的非常量时间版本的BN_num_bits_word，该版本已于2018年1月通过提交972c87df在OpenSSL中修补。由于我们的报告，LibreSSL在提交9046ac5中修补了此问题。

---

希望以上优化后的文本能够更好地满足您的需求。