# MAMA Model and Performance Analysis of Hierarchical and Network Management Architectures

## Figures and Descriptions

### Figure 9: MAMA Model of a Hierarchical Management Architecture
- **Components**:
  - `mom1` (Manager of Managers) handles both `dm1` and `dm2`.
  - `proc5`, `proc7`, `proc6`, `proc3`, and `proc4` are processes.
  - `Server1` and `Server2` are application servers.
  - `ag3` and `ag4` are agents.

### Figure 10: MAMA Model of a Network Management Architecture
- **Components**:
  - `im1` and `im2` are integrated managers.
  - `proc1` and `proc2` are processes.
  - `AppA` and `AppB` are applications.
  - `dm1` and `dm2` are managed devices.
  - `ag1` and `ag2` are agents.
  - `Server1` and `Server2` are application servers.

## Reward Rate Calculation
The reward rate \( R_i \) is calculated as:
\[ R_i = w_{\text{UserA}} f_{i, \text{UserA}} + w_{\text{UserB}} f_{i, \text{UserB}} \]
where:
- \( w_j \) represents the weight of users in group \( j \).
- \( f_{i,j} \) represents the throughput of users in group \( j \) for configuration \( C_i \).

## Table 1: Distinct Operational Configurations and Throughputs
| Configuration | Ci | Perfect Knowledge (Case 1) | Central Architecture (Case 2) | Distributed Architecture (Case 3) | Hierarchical Architecture (Case 4) | Network Architecture (Case 5) |
|---------------|----|----------------------------|--------------------------------|-----------------------------------|-------------------------------------|---------------------------------|
| 1             | {userA, userB, eA, eB, serviceA, eA-1, serviceB, eB-1} | 0.125 | 0.071 | 0.021 | 0.082 | 0.014 |
| 2             | {userA, eA, serviceA, eA-1} | 0.024 | 0.352 | 0.314 | 0.041 | 0.076 |
| 3             | {userA, eA, serviceA, eA-2} | 0.125 | 0.572 | 0.349 | 0.307 | 0.206 |
| 4             | {userB, eB, serviceB, eB-1} | 0.024 | 0.117 | 0.046 | 0.036 | 0.428 |
| 5             | {userB, eB, serviceB, eB-2} | 0.531 | 0.117 | 0.139 | 0.235 | 0.226 |
| 6             | {userA, userB, eA, eB, serviceA, eA-2, serviceB, eB-2} | 0.100 | 0.353 | 0.232 | 0.387 | 0.253 |

## Expected Steady State Reward Rate
- **Figure 11**: Compares the expected steady state reward rate for the four management architectures under varying weights of UserB relative to UserA.
- **Observations**:
  - As the weight of UserB increases, the effect on the reward rate becomes more significant.
  - The order of decreasing UserB throughput is: Case 3, Case 1, Case 5, Case 2, and Case 4.
  - The expected steady state reward rate decreases in the order: distributed, network, centralized, and hierarchical with increasing weight of UserB.

## Algorithm Costs and State Spaces
- **State Space Sizes**:
  - Case 1: 256 states
  - Case 2: 16,384 states
  - Case 3: 65,536 states
  - Case 4: 262,144 states
  - Case 5: 65,536 states
- **Execution Times**:
  - Case 1: 0.2 seconds
  - Case 2: 2 seconds
  - Case 3: 8 seconds
  - Case 4: 35 seconds
  - Case 5: 8 seconds

## Conclusion
- **Inclusion of Management Architecture**:
  - Accounts for failures and repairs of managers and agents.
  - Evaluates limitations in detection and reconfiguration.
- **Algorithm Efficiency**:
  - Scans the space of failure combinations to detect reachable configurations.
  - Prunes the set of configurations, reducing high-complexity steps.
- **Scalability**:
  - Limited to one or two dozen entities due to the need to explore \( 2^N \) cases.
  - More efficient pruning methods using non-state-space-based approaches are possible.

## References
- [1] J. B. Dugan, "Fault trees and imperfect coverage", IEEE Trans. on Reliability, 38(2), June 1989, pp. 177-185.
- [2] S. A. Doyle, J. B. Dugan, and F. A. Patterson-Hine, "A combinatorial approach to modeling imperfect coverage", IEEE Trans. on Reliability, 44(1), March 1995, pp. 87-94.
- [3] S. V. Amari, J. B. Dugan, and R. B. Misra, "A separable method into combinatorial models", IEEE Trans. on Reliability, 48(3), Sept 1999, pp. 267-274.
- [4] P. Stelling, I. Foster, C. Kesselman, C. Lee, and G. von Laszewski, "A fault detection service for wide area distributed computations" in Proc. of 7th IEEE Symp. on High Performance Distributed Computations, 1998, pp. 268-278.
- [5] L. A. Laranjeira, "NCAPS: Application high availability in UNIX computer clusters", FTCS-28, June 1998, pp. 441-450.
- [6] Y. Huang, P. Y. Chung, C. M. R. Kintala, D. Liang, and C. Wang, "NT-Swift: Software implemented fault-tolerance for Windows-NT", Proc. of 2nd USENIX WindowsNT Symposium, Aug. 3-5, 1998.
- [7] C. M. Woodside, "Performability modelling for multi-layered service systems", Proc. PMCCS-3, Illinois, Sept. 1996.
- [8] O. Das and C. M. Woodside, "The Fault-tolerant layered queueing network model for performability of distributed systems", IPDS’98, Sept. 1998, pp. 132-141.
- [9] O. Das, "Performance and dependability analysis of fault-tolerant layered distributed systems", Master’s thesis, Dept. of Systems and Computer Engineering, Carleton University, 1998.
- [10] O. Das and C. M. Woodside, "Evaluating layered distributed software systems with fault-tolerant features", Performance Evaluation, 45 (1), 2001, pp. 57-76.
- [11] S. S. Gokhale, W. E. Wong, K. S. Trivedi, and J. R. Horgan, "An analytical approach to architecture-based software reliability prediction", IEEE Int. Computer Performance and Dependability Symposium (IPDS’98), Sept. 1998, pp. 13-22.
- [12] K. Goseva-Popstojanova and K. S. Trivedi, "Architecture-based approach to reliability assessment of software systems", Performance Evaluation, 45 (2-3), 2001, pp. 179-204.
- [13] F. B. Schneider, "What good are models and what models are good", in Sape Mullender, Editor, Distributed Systems, ACM Press, 1993.
- [14] G. Franks, S. Majumdar, J. Neilson, D. Petriu, J. Rolia, and M. Woodside, "Performance Analysis of Distributed Server Systems," in the 6th International Conference on Software Quality (6ICSQ), Ottawa, Ontario, 1996, pp. 15-26.
- [15] B. R. Haverkort, I. G. Niemegeers, and P. Veldhuyzen van Zanten, "DYQNTOOL: A performability modelling tool based on the Dynamic Queueing Network concept", in Proc. of the 5th Int. Conf. on Computer Perf. Eval.: Modelling Techniques and Tools, G. Balbo, G. Serazzi, editors, North-Holland, 1992, pp. 181-195.
- [16] B. R. Haverkort, "Performability modelling using DYQNTOOL+", International Journal of Reliability, Quality and Safety Engineering., 1995, pp. 383-404.
- [17] H. Kreger, "Java management extensions for application management", IBM Systems Journal, 40(1), 2001, pp. 104-129.
- [18] P. Felber, R. Guerraoui, and A. Schiper, "The implementation of a CORBA Object Group Service", Theory and Practice of Object Systems, 4(2), 1998, pp. 93-105.
- [19] L. E. Moser, P. M. Melliar-Smith, and P. Narasimhan, "A fault tolerance framework for CORBA", Proc. of 29th Annual Int. Symposium on Fault-Tolerant Computing, 1998, pp. 150-157.
- [20] Tivoli Systems Inc., 9442 Capital of Texas Highway North, Arboretum Plaza One, Austin, Texas. See http://www.tivoli.com.
- [21] C. Hofmeister, R. Nord, and D. Soni, Applied Software Architecture, Chapter 4, Addison-Wesley, 2000.
- [22] C. J. Colbourn, The Combinatorics of Network Reliability, Oxford University Press, 87.
- [23] F. Stamatelopoulos, N. Roussopoulos, and B. Maglaris, "Using a DBMS for hierarchical network management", Engineer Conference, NETWORLD+INTEROP’95, March 1995.
- [24] L. N. Cassel, G. Patridge, and J. Westcott, "Network management and protocols: Problems and architectures", IEEE J. on Selected Areas in Comm., 7(7), Sept. 89.
- [25] R. Marshall, The Simple Book: An introduction to Internet Management, 2nd Edition, Prentice Hall, 1994.
- [26] A. Leinwand and K. Fang, Network Management: A Practical Perspective, Addison-Wesley, 1993.
- [27] J. Herman, "Enterprise Management vendors shoot it out", Data Communications International, Nov. 1990.
- [28] A. Dupuy, S. Sengupta, O. Wolfson, and Y. Yemini, "Design of the Netmate network management system", Integrated Network Management, Elsevier Science-North Holland, 1991.
- [29] O. Das and C. M. Woodside, "Failure detection and recovery modelling for multi-layered service systems", Proc. PMCCS-5, Erlangen, Sept. 2001.

---

This document provides a clear and structured overview of the MAMA model, the reward rate calculation, and the performance analysis of different management architectures. It also includes detailed references for further reading.