### Certificate Replacement on Vulnerable Alexa Sites

**Figure 5: Certificate Replacement on Vulnerable Alexa Sites**

We monitored certificate replacement on vulnerable Alexa Top 1 Million sites and observed that only 10% of the certificates were replaced in the month following public disclosure.

**Figure 6: ICSI Notary Certificate Changes**

Over both March and April, we tracked the number of servers that had the same certificate as on the 6th of each month. We only included servers that served the same certificate for the previous month.

- **March**
- **April**

### Revocations after Heartbleed

**Figure 7: Revocations after Heartbleed**

Certificate revocations dramatically increased after the Heartbleed disclosure. The spikes reflect actions by GlobalSign (first) and GoDaddy (subsequent). However, only 4% of HTTPS sites in the Alexa Top 1 Million revoked their certificates between April 9 and April 30, 2014.

### 5.2 Certificate Revocation

When a certificate or key can no longer be trusted, sites can request the issuing CA to revoke the certificate. CAs accomplish this by publishing certificate revocation lists (CRLs) and supporting the Online Certificate Status Protocol (OCSP) for live queries. Despite most vulnerable hosts failing to revoke old certificates, we observed about as many revocations in the three months following public disclosure as in the three previous years.

Prior to the vulnerability disclosure, we saw an average of 491 (s=101) revocations per day for certificates found in our scans. As seen in Figure 7, the number of revocations dramatically increased in the days following the disclosure. The sudden increases were due to individual CAs invalidating large portions of their certificates. Most notably, GlobalSign revoked 56,353 certificates over two days (50.2% of their visible certificates), and GoDaddy, the largest CA, revoked 243,823 certificates in week-long bursts over the following three months. GlobalSign’s large number of revocations was precipitated by a major customer, CloudFlare, revoking all of their customers' certificates [60].

Revoking such a large number of certificates burdens both clients and servers. Clients must download large CRLs, which CAs must host. GlobalSign’s CRL expanded from 2 KB to 4.7 MB due to CloudFlare’s revocations. CloudFlare hesitated to revoke their certificates, citing significant costs, which they estimated would require an additional 40 Gbps of sustained traffic, corresponding to approximately $400,000 per month [60]. StartCom, a CA that offers free SSL certificates, came under fire for continuing their policy of charging for revocation after the Heartbleed disclosure [44]. However, revocation places a sizable financial strain on CAs due to bandwidth costs [9, 60].

### 5.3 Forward Secrecy

Heartbleed highlights the importance of using forward secret cipher suites in TLS. Without forward secrecy, the compromise of a server’s private key, such as due to Heartbleed, allows an attacker who recorded previous communications encrypted with TLS to recover the session key used to protect that communication, subverting its confidentiality. Thus, we might expect operators to respond to Heartbleed by ensuring that at least in the future their servers will support forward secrecy.

Unfortunately, we find that only 44% of the connections observed by the ICSI Notary in May 2014 used forward secrecy. There has been a slow increase in adoption between December 2013 and April 2014, with a gain of 1.0–4.3% each month. We observe a 4.2% increase between March and April 2014, but no larger than that between January and February. Surprisingly, this trend stagnated from April to August; the percentage of connections using forward secrecy remained virtually the same. Currently, we are not sure why the increase in forward secrecy cipher use ceased. However, it appears clear that Heartbleed did not spur the adoption of forward secrecy.

### 6. Attack Scene

In addition to tracking vulnerable servers, we analyzed who was scanning for the Heartbleed vulnerability by examining network traffic collected from passive taps at Lawrence Berkeley National Laboratory (LBNL), the International Computer Science Institute (ICSI), and the National Energy Research Scientific Computing Center (NERSC), as well as a honeypot operated by a colleague on Amazon EC2.

To detect Heartbleed scanning, we extended Bro’s SSL/TLS analyzer to recognize Heartbeat messages [25, 57]. This approach parses the full TLS protocol data stream, including the TLS record layer, which remains unencrypted throughout the session, achieving significantly better accuracy than simple byte pattern matching. We have released our Bro modifications along with our detection script via the Bro git repository.

#### 6.1 Pre-Disclosure Activity

LBNL’s network spans two /16s, one /20, and one /21. The institute frequently retains extensive packet traces for forensic purposes, and for our purposes, had full traces available from February–March 2012, February–March 2013, and January 23–April 30, 2014. ICSI uses a /23 network, for which we had access to 30 days of full traces from April 2014. NERSC has a /16 network, for which we analyzed traces from February to April 2014. The EC2 honeypot provided full packet traces starting in November 2013.

For all four networks, over these time periods, our detector found no evidence of any exploit attempt up through April 7, 2014. This provides strong evidence that, at least for those time periods, no attacker with prior knowledge of Heartbleed conducted widespread scanning looking for vulnerable servers. Such scanning, however, could have occurred during other time periods.

#### 6.2 Post-disclosure Activity

To detect post-disclosure scanning, we similarly examined packet traces from LBNL, ICSI, and the EC2 honeypot. The first activity we observed originated from a host at the University of Latvia on April 8, starting at 15:18 UTC (21 hours 29 minutes after public disclosure), targeting 13 hosts at LBNL. This first attack was unusual in that it sent both unencrypted (pre-handshake) and encrypted (post-handshake) Heartbleed exploit packets to each host, likely trying to gauge the effectiveness of both approaches. We observed scanning of the other two networks within a few more hours.

In total, we observed 5,948 attempts to exploit the vulnerability from 692 distinct hosts (Table 7). These connections targeted a total of 217 hosts. Seven attackers successfully completed 103 exploit attempts against 12 distinct hosts (excluding the intentionally vulnerable honeypot). Figure 8 presents the temporal behavior of scanning as seen at each location.

We detected several different types of exploit attempts, which we list in Table 6. In types (1) and (2), attackers sent exploit attempts prior to completely establishing the TLS session, which allowed us to directly inspect the attack payload. After establishment of the TLS session, the only pieces of information we can retrieve are the message type and size, which are both transferred in the clear. To detect scanning conducted in a fashion similar to our own, we checked the length of the encrypted message (3). We also consider all Heartbeat messages that we see prior to the first transmission of application data (4) to reflect exploit attempts. We identify attacks as successful when the destination server responds with more data than included in the original request (5), though as noted above, we do not consider attacks on the EC2 honeypot as "successful."

The sixteen most aggressive probe sources (by number of scans) reside in Amazon address space. The scans originating from these hosts share many characteristics, including the use of encryption, the same packet length, and identical cipher suites. Closer examination revealed that Heartbeat messages should never precede application data. We verified this does not happen in real-world traffic by manually reviewing traces prior to the Heartbleed disclosure. We observed no such instances.

**Figure 8: Temporal Behavior of Scanning**

- **LBNL**
- **ICSI**
- **EC2**