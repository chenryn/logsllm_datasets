### 9. Conclusion

We introduced DELF, a system designed to ensure the correctness of data deletion in large-scale online social networks (OSNs), even in the presence of developer mistakes and complex data models. The primary innovation of DELF lies in its requirement for developers to annotate all data types for deletion before they are used, followed by the detection of errors that could result in inadvertent data retention or deletion. While DELF introduces some overhead during the deletion process, it enables developers to safely delete data despite the inevitable occurrence of mistakes. We demonstrated how DELF has prevented or minimized disruptions at Facebook due to multiple deletion-related bugs.

### 10. Acknowledgements

Many engineers contributed to the development of DELF. We would like to acknowledge Ben Mathews and Scott Renfro for initiating the project. Significant contributions were also made by Adarsh Koyya, Akin Ilerle, Amitsing Chandele, Andrei Bajenov, Anurag Sharma, Boris Grubic, Gerard Goossen, Cristina Grigoruta, Gustavo Pacianotto Gouveia, Gustavo Pereira De Castro, Huseyin Olgac, Jordan Webster, Mahdy Nasr, Maria Mateescu, Masha Kereb, Merna Rezk, Nikita Efanov, Ohad Almagor, Oleksandr Manzyuk, Prakash Verma, Shradha Budhiraja, Shubhanshu Agrawal, Sneha Padgalwar, Tudor Tiplea, and Vasil Vasilev. Our work builds upon the efforts of Facebook developers who annotated their data models and investigated discrepancies reported by DELF. We are grateful to our shepherd, Sarah Meiklejohn, the anonymous reviewers, and members of Facebook’s legal team, including Bathilde Waquet, Sumit Shah, and Scott Mellon, for their invaluable feedback on earlier drafts of this paper.

### References

1. M. Mondal, J. Messias, S. Ghosh, K. P. Gummadi, and A. Kate, “Forgetting in Social Media: Understanding and Controlling Longitudinal Exposure of Socially Shared Data,” in Symposium On Usable Privacy and Security (SOUPS). Denver, CO: USENIX, 2016.
2. Y. Wang, G. Norcie, S. Komanduri, A. Acquisti, P. G. Leon, and L. F. Cranor, “'I regretted the minute I pressed share': A Qualitative Study of Regrets on Facebook,” in Symposium On Usable Privacy and Security (SOUPS). Pittsburgh, PA: USENIX, 2011.
3. J. Reardon, D. Basin, and S. Capkun, “SoK: Secure Data Deletion,” in Symposium on Security and Privacy. Oakland, CA: IEEE, 2013.
4. K. M. Ramokapane, A. Rashid, and J. M. Such, “'I feel stupid I can’t delete...': A Study of Users’ Cloud Deletion Practices and Coping Strategies,” in Symposium On Usable Privacy and Security (SOUPS). Santa Clara, CA: USENIX, 2017.
5. M. Sleeper, J. Cranshaw, P. G. Kelley, B. Ur, A. Acquisti, L. F. Cranor, and N. Sadeh, “'I read my Twitter the next morning and was astonished': A Conversational Perspective on Twitter Regrets,” in Human Factors in Computing Systems. Paris, France: ACM, 2013.
6. L. Bauer, L. F. Cranor, S. Komanduri, M. L. Mazurek, M. K. Reiter, M. Sleeper, and B. Ur, “The Post Anachronism: The Temporal Dimension of Facebook Privacy,” in Workshop on Privacy in the Electronic Society (WPES). Berlin, Germany: ACM, 2013.
7. “Regulation 2016/679 of the European Parliament and of the Council of 27 April 2016 on the protection of natural persons with regard to the processing of personal data and on the free movement of such data, and repealing Directive 95/46/EC (GDPR).” [Online]. Available: https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32016R0679
8. “California Consumer Privacy Act of 2018.” [Online]. Available: https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=201720180AB375
9. “Facebook deleted some mistakenly Live videos.” [Online]. Available: https://techcrunch.com/2018/10/11/facebook-deleted-live-videos/
10. “Even years later, Twitter doesn’t delete your direct messages.” [Online]. Available: https://techcrunch.com/2019/02/15/twitter-direct-messages/
11. “Myspace loses all content uploaded before 2016.” [Online]. Available: https://www.theguardian.com/technology/2019/mar/18/myspace-loses-all-content-uploaded-before-2016
12. “TikTok deletes accounts after putting the wrong birthdays.” [Online]. Available: https://www.theverge.com/2019/2/28/18245011/tiktok-age-coppa-child-privacy-accounts-deleted-ftc-requirement
13. “Amazon Alexa transcripts live on, even after you delete voice records.” [Online]. Available: https://cnet.co/2HdQkxk
14. “Instead of deleting account, New York Times appends ‘1000’ to username and email address.” [Online]. Available: https://news.ycombinator.com/item?id=23005060
15. “Dropbox bug sends years-old deleted files back to user accounts.” [Online]. Available: https://www.techrepublic.com/article/dropbox-bug-sends-years-old-deleted-files-back-to-user-accounts/
16. “Facebook blames a bug for not deleting your deleted videos.” [Online]. Available: https://newyork.cbslocal.com/2018/04/03/facebook-deleted-videos-bug/
17. P. Stahlberg, G. Miklau, and B. N. Levine, “Threats to Privacy in the Forensic Analysis of Database Systems,” in SIGMOD. Beijing, China: ACM, 2007.
18. “Should we ever delete data in a database?” [Online]. Available: https://softwareengineering.stackexchange.com/questions/159232/should-we-ever-delete-data-in-a-database
19. Daniel Terdiman, “Why Deleting Personal Information On The Internet Is A Fool’s Errand.” [Online]. Available: https://bit.ly/2JQDlEm
20. “You just deleted Facebook. Can you trust Facebook to delete your data?” [Online]. Available: https://bit.ly/2YoL4Ss
21. N. Bronson, Z. Amsden, G. Cabrera, P. Chakka, P. Dimov, H. Ding, J. Ferris, A. Giardullo, S. Kulkarni, H. Li, M. Marchukov, D. Petrov, L. Puzar, Y. J. Song, and V. Venkataramani, “TAO: Facebook’s Distributed Data Store for the Social Graph,” in Annual Technical Conference (ATC). San Jose, CA: USENIX, 2013.
22. D. Beaver, S. Kumar, H. Li, J. Sobel, and P. Vajgel, “Finding a needle in Haystack: Facebook’s photo storage,” in Operating Systems Design and Implementation (OSDI). Vancouver, Canada: USENIX, 2010.
23. J. Baker, C. Bond, J. C. Corbett, J. J. Furman, A. Khorlin, J. Larson, L. Jean-Michel, Y. Li, A. Lloyd, and V. Yushprakh, “Megastore - Providing Scalable, Highly Available Storage for Interactive Services,” in Conference on Innovative Data Systems Research (CIDR), Asilomar, California, 2011.
24. J. C. Corbett, J. Dean, M. Epstein, A. Fikes, C. Frost, J. J. Furman, S. Ghemawat, A. Gubarev, C. Heiser, P. Hochschild, W. Hsieh, S. Kanthak, E. Kogan, A. Lloyd, S. Melnik, D. Mwaura, D. Nagle, S. Quinlan, R. Rao, L. Rolig, Y. Saito, M. Szymaniak, C. Taylor, R. Wang, and D. Woodford, “Spanner: Google’s Globally Distributed Database,” Transactions on Computer Systems, vol. 31, no. 8, 2013.
25. F. Chang, J. Dean, S. Ghemawat, W. C. Hsieh, D. A. Wallach, M. Burrows, T. D. Chandra, A. Fikes, and R. E. Gruber, “Bigtable: A Distributed Storage System for Structured Data,” in Operating Systems Design and Implementation (OSDI). Seattle, WA: USENIX, 2006.
26. M. Annamalai, K. Ravichandran, H. Srinivas, I. Zinkovsky, L. Pan, T. Savor, D. Nagle, M. Stumm, and I. Osdi, “Sharding the Shards: Managing Datastore Locality at Scale with Akkio,” in Symposium on Operating Systems Principles (SOSP). USENIX, 2018.
27. A. Lakshman and M. Prashant, “Cassandra-A Decentralized Structured Storage System,” in Large Scale Distributed Systems and Middleware (2009). Big Sky, MT: ACM, 2009.
28. A. Khurana and J. Le Dem, “The Modern Data Architecture The Deconstructed Database,” USENIX ;login:, 2018.
29. G. Decandia, D. Hastorun, M. Jampani, G. Kakulapati, A. Lakshman, A. Pilchin, S. Sivasubramanian, P. Vosshall, and W. Vogels, “Dynamo: Amazon’s Highly Available Key-value Store,” in Symposium on Operating Systems Principles (SOSP). Stevenson, WA: ACM, 2007.
30. J. L. Carlson, Redis in action. Manning, 2013.
31. “Neo4j Decreases Development Time-to-Market for LinkedIn’s Chitu App.” [Online]. Available: https://neo4j.com/case-studies/linkedin-china/?ref=solutions
32. B. H. Bloom and B. H., “Space/time trade-offs in hash coding with allowable errors,” Communications of the ACM, vol. 13, no. 7, pp. 422–426, 1970.
33. P. Flajolet, É. Fusy, O. Gandouet, and F. Meunier, “HyperLogLog: the analysis of a near-optimal cardinality estimation algorithm,” in Discrete Mathematics and Theoretical Computer Science (DMTCS), Nancy, France, 2001.
34. S. Heule, M. Nunkesser, and A. Hall, “HyperLogLog in Practice: Algorithmic Engineering of a State of The Art Cardinality Estimation Algorithm,” in International Conference on Extending Database Technology / Database Theory (EDBT/ICDT). Genoa, Italy: ACM, 2013.
35. J. Larisch, D. Choffnes, D. Levin, B. M. Maggs, A. Mislove, and C. Wilson, “CRLite: A Scalable System for Pushing All TLS Revocations to All Browsers,” in Symposium on Security and Privacy. San Jose, CA: IEEE, 2017.
36. M. Honarkhah and A. Talebzadeh, “HyperLogLog in Presto: Faster cardinality estimation,” 2018. [Online]. Available: https://code.fb.com/data-infrastructure/hyperloglog/
37. J. Dean and S. Ghemawat, “MapReduce: Simplified Data Processing on Large Clusters,” in Operating Systems Design and Implementation (OSDI). USENIX, 2004.
38. K. Shvachko, H. Kuang, S. Radia, and R. Chansler, “The Hadoop Distributed File System,” in Mass Storage Systems and Technologies (MSST). Incline Village, NV: IEEE, 2010.
39. A. Thusoo, J. S. Sarma, N. Jain, Z. Shao, P. Chakka, N. Zhang, S. Antony, H. Liu, and R. Murthy, “Hive - A Petabyte Scale Data Warehouse Using Hadoop,” in International Conference on Data Engineering (ICDE). Long Beach, CA: IEEE, 2010.
40. Information Commissioner's Office, “Anonymisation: managing data protection risk code of practice,” 2012. [Online]. Available: https://ico.org.uk/media/1061/anonymisation-code.pdf
41. Lea Kissner, “Deidentification versus anonymization,” 2019. [Online]. Available: https://iapp.org/news/a/de-identification-vs-anonymization/
42. ISO/IEC, “9075-2,” ISO, Tech. Rep., 2016. [Online]. Available: www.iso.org
43. MySQL Reference Manual, “Using FOREIGN KEY Constraints.” [Online]. Available: https://dev.mysql.com/doc/refman/5.6/en/create-table-foreign-keys.html
44. MongoDB Manual, “Database References.” [Online]. Available: https://docs.mongodb.com/manual/reference/database-references/
45. T. Schraml, “The Referential Integrity Workaround,” in Database Trends And Applications (DBTA), 2017. [Online]. Available: http://www.dbta.com/Columns/Database-Elaborations/The-Referential-Integrity-Workaround-117422.aspx
46. MySQL 8.0 Reference Manual, “Backup Strategy Summary.” [Online]. Available: https://dev.mysql.com/doc/refman/8.0/en/backup-strategy-summary.html
47. MySQL Reference Manual, “The Binary Log.” [Online]. Available: https://dev.mysql.com/doc/internals/en/binary-log.html
48. R. Chandra, T. Kim, M. Shah, N. Narula, and N. Zeldovich, “Intrusion recovery for database-backed web applications,” in Symposium on Operating Systems Principles (SOSP). ACM, 2011, pp. 101–114.
49. “Facebook Reports First Quarter Results,” 2020. [Online]. Available: https://investor.fb.com/investor-news/press-release-details/2020/Facebook-Reports-First-Quarter-2020-Results/default.aspx
50. “MySQL.” [Online]. Available: https://www.mysql.com/
51. A. Torres, R. Galante, M. S. Pimenta, and A. J. B. Martins, “Twenty years of object-relational mapping: A survey on patterns, solutions, and their implications on application design,” Information and Software Technology, vol. 82, feb 2017.
52. P. Marinescu, C. Parry, M. Pomarole, Y. Tian, P. Tague, and I. Papagiannis, “IVD: Automatic Learning and Enforcement of Authorization Rules in Online Social Networks,” in Symposium on Security and Privacy. San Jose, CA: IEEE, 2017.
53. L. Szekeres, M. Payer, L. T. Wei, and R. Sekar, “Eternal war in memory,” in Symposium on Security and Privacy, IEEE, Ed., Oakland, CA, 2014.
54. D. Song, J. Lettner, P. Rajasekaran, Y. Na, S. Volckaert, P. Larsen, and M. Franz, “SoK: Sanitizing for security,” in Symposium on Security and Privacy, San Francisco, CA, 2019.
55. P. Wilson, “Uniprocessor garbage collection techniques,” in International Workshop on Memory Management (IWMM), St.Malo, France, 1992.
56. “C++ Dynamic memory management.” [Online]. Available: https://en.cppreference.com/w/cpp/memory
57. R. Pang, R. Cáceres, M. Burrows, Z. Chen, P. Dave, N. Germer, A. Golynski, K. Graney, N. Kang, L. Kissner, J. L. Korn, A. Parmar, C. D. Richards, M. Wang, and L. . Google, “Zanzibar: Google’s Consistent, Global Authorization System,” in Annual Technical Conference (ATC). Renton, WA: IEEE, 2019.
58. F. Logozzo, M. Fahndrich, I. Mosaad, and P. Hooimeijer, “Zoncolan: Using static analysis to prevent security issues - Facebook Engineering,” 2019. [Online]. Available: https://engineering.fb.com/security/zoncolan/
59. G. J. Chen, J. L. Wiener, S. Iyer, A. Jaiswal, R. Lei, N. Simha, W. Wang, K. Wilfong, T. Williamson, and S. Yilmaz, “Realtime Data Processing at Facebook,” in SIGMOD. San Francisco, CA: ACM, 2016.
60. M. Marchukov, “LogDevice: a distributed data store for logs,” 2017. [Online]. Available: https://code.fb.com/core-data/logdevice-a-distributed-data-store-for-logs/
61. S. Garg, S. Goldwasser, and P. N. Vasudevan, “Formalizing Data Deletion in the Context of the Right to Be Forgotten,” in EUROCRYPT. International Association for Cryptologic Research, 2020. [Online]. Available: http://link.springer.com/10.1007/978-3-030-45724-2_13
62. Y. Doshi and H. Shah, “Now You See It, Now You Don’t: Uber’s Data Deletion Service,” in Privacy Engineering Practice and Respect (PEPR). Santa Clara, CA: USENIX, 2019.
63. Lea Kissner, “Now You See It, Now You Don’t: Uber’s Data Deletion Service talk presentation notes.” [Online]. Available: https://twitter.com/LeaKissner/status/1161020063182249984
64. H. Ritzdorf and N. Karapanos, “Assisted Deletion of Related Content,” in Annual Computer Security Applications Conference (ACSAC), New Orleans, LA, 2014.
65. M. Hart, P. Manadhata, and R. Johnson, “Text classification for data loss prevention,” in Privacy Enhancing Technologies (PETS), Waterloo, Canada, 2011.
66. Y. Ji, S. Lee, E. Downing, W. Wang, M. Fazzini, T. Kim, A. Orso, and W. Lee, “Rain: Refinable attack investigation with on-demand inter-process information flow tracking,” in Computer and Communications Security (CCS). ACM, 2017, pp. 377–390. [Online]. Available: https://doi.org/10.1145/3133956.3134045
67. T. Kim, X. Wang, N. Zeldovich, and M. Kaashoek, “Intrusion Recovery Using Selective Reexecution,” in Symposium on Operating Systems Design and Implementation (OSDI). Vancouver, Canada: USENIX, 2010.
68. R. Chandra, T. Kim, and N. Zeldovich, “Asynchronous intrusion recovery for interconnected web services,” in Symposium on Operating Systems Principles (SOSP). ACM, 2013, pp. 213–227. [Online]. Available: http://dx.doi.org/10.1145/2517349.2522725
69. A. Murillo, A. Kramm, S. Schnorf, and A. De Luca, “'If I press delete, it’s gone' - User Understanding of Online Data Deletion and Expiration,” in Symposium On Usable Privacy and Security (SOUPS). Baltimore, MD: USENIX, 2018.
70. C. Cachin, K. Haralambiev, H.-C. Hsiao, and A. Sorniotti, “Policy-based Secure Deletion,” in Computer and Communications Security (CCS). Berlin, Germany: ACM, 2013.
71. A. Gutmann and M. Warner, “Fight to be Forgotten: Exploring the Efficacy of Data Erasure in Popular Operating Systems,” in Annual Privacy Conference, Rome, Italy, 2019. [Online]. Available: https://en.oxforddictionaries.com/thesaurus/delete
72. J. Reardon, H. Ritzdorf, D. Basin, and S. Capkun, “Secure Data Deletion from Persistent Media,” in Computer and Communications Security (CCS). Berlin, Germany: ACM, 2013.
73. S. Sarkar, T. I. Papon, D. Staratzis, and M. Athanassoulis, “Lethe: A Tunable Delete-Aware LSM Engine,” in SIGMOD. Portland, OR: ACM, 2020.
74. M. Minaei, M. Mondal, P. Loiseau, K. Gummadi, and A. Kate, “Lethe: Conceal Content Deletion from Persistent Observers,” in Proceedings on Privacy Enhancing Technologies (PETS), Stockholm, Sweden, 2019.
75. D. Wright and P. De Hert, Privacy Impact Assessment. Springer, Netherlands, 2012.

---

This revised version aims to provide a clearer, more coherent, and professional presentation of the text.