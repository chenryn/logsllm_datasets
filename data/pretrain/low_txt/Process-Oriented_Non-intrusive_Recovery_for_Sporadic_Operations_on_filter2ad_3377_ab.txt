### Chapter 8: Case Studies

#### 8.1 Case Study 1: Recovery for Rolling Upgrade Operation on Cloud
- **8.1.1 Recovery Points Determination** ............................................................ 91
- **8.1.2 Workload of Resource Space Determination** ............................................ 92
- **8.1.3 Workload of Expected Resource State Templates Generation** ................. 93
- **8.1.4 Recovery Satisfying Requirements** ......................................................... 93

#### 8.2 Case Study 2: Recovery for Installation Operation on Cloud
- **8.2.1 Recovery Points Determination** .............................................................. 104
- **8.2.2 Workload of Resource Space Determination** .......................................... 104
- **8.2.3 Workload of Expected Resource State Templates Generation** ............... 105
- **8.2.4 Recovery Satisfying Requirements** ......................................................... 105

#### 8.3 Case Study 3: Recovery for Scale-up Operation on Cloud
- **8.3.1 Recovery Points Determination** .............................................................. 113
- **8.3.2 Workload of Resource Space Determination** .......................................... 114
- **8.3.3 Workload of Expected Resource State Templates Generation** ............... 115
- **8.3.4 Recovery Satisfying Requirements** ......................................................... 115

#### 8.4 Case Study 4: Recovery for Scale-down Operation on Cloud
- **8.4.1 Recovery Points Determination** .............................................................. 123
- **8.4.2 Workload of Resource Space Determination** .......................................... 124
- **8.4.3 Workload of Expected Resource State Templates Generation** ............... 125
- **8.4.4 Recovery Satisfying Requirements** ......................................................... 125

#### 8.5 Case Study 5: Recovery for Migration Operation on Cloud
- **8.5.1 Recovery Points Determination** .............................................................. 134
- **8.5.2 Workload of Resource Space Determination** .......................................... 134
- **8.5.3 Workload of Expected Resource State Templates Generation** ............... 135
- **8.5.4 Recovery Satisfying Requirements** ......................................................... 135

#### 8.6 Comparison between POD-Recovery and Other Cloud Recovery Methods
..................................................................................................................... 148

#### 8.7 Summary and Discussion
..................................................................................................................... 150

#### 8.8 Threats to Validity
..................................................................................................................... 151

### Chapter 9: Conclusion
- **9.1 Contributions of Thesis** .................................................................................. 152
- **9.2 Implications of Proposed Recovery Method** .................................................. 154
- **9.3 Limitations of Recovery Framework** ............................................................. 154
- **9.4 Directions for Future Research** ....................................................................... 155

### References
..................................................................................................................... 157

### List of Figures
- **Fig. 1. Rolling Upgrade Operation.** ................................................................................ 10
- **Fig. 2. Rollback Recovery Categories.** ............................................................................ 22
- **Fig. 3. Disaster Recovery with Cloud Computing.** ........................................................ 24
- **Fig. 4. Asynchronous Replication in Remus.** ................................................................. 26
- **Fig. 5. Remus High-level Architecture.** ......................................................................... 26
- **Fig. 6. System Architecture of FTCloud.** ....................................................................... 28
- **Fig. 7. Coordinate Chart for Dimensions in Taxonomy.** ............................................... 40
- **Fig. 8. Cloud Activities and Life Cycle Phases.** ............................................................ 41
- **Fig. 9. Level 1 Classification for Cloud Recovery Methods.** .......................................... 43
- **Fig. 10. Level 2 Classification for Cloud Recovery Methods.** ...................................... 43
- **Fig. 11. Asgard Rolling Upgrade Operation.** ................................................................. 44
- **Fig. 12. Overview of POD-Recovery.** ............................................................................ 54
- **Fig. 13. Generalized Recovery Workflow.** .................................................................... 56
- **Fig. 14. CloudTrail Log.** ................................................................................................ 61
- **Fig. 15. Operation Resource Space Determination.** ....................................................... 62
- **Fig. 16. Cloud Resource Determined for Rolling Upgrade.** .......................................... 62
- **Fig. 17. Resource State Capturing Algorithm.** ............................................................... 63
- **Fig. 18. Expected Resource State Templates Generation.** ............................................. 65
- **Fig. 19. Sample Expected Resource State Templates.** ................................................... 66
- **Fig. 20. Eight Recovery Patterns.** .................................................................................... 70
- **Fig. 21. AI-Planning based Recovery Plan Generation.** ................................................ 76
- **Fig. 22. Recovery Action Impact Analysis.** ................................................................... 80
- **Fig. 23. Workload-Response Time Model.** .................................................................... 83
- **Fig. 24. Pareto Set Search Based Selection Algorithm.** ................................................. 86
- **Fig. 25. User Constraints Based Selection Algorithm.** .................................................. 87
- **Fig. 26. Experimental Environment.** .............................................................................. 91
- **Fig. 27. Determining Recovery Points for Rolling Upgrade Operation.** ....................... 92
- **Fig. 28. Workload of Resource Space Generation for Rolling Upgrade Operation.** ..... 93
- **Fig. 29. Workload of Expected Resource State Templates Generation for Rolling Upgrade Operation.** ......................................................................................................... 93
- **Fig. 30. Determining Recovery Points for Installation Operation.** .............................. 104
- **Fig. 31. Workload of Resource Space Determination for Installation Operation.** ....... 105
- **Fig. 32. Workload of Expected Resource State Templates Generation for Installation Operation.** ...................................................................................................................... 105
- **Fig. 33. Determining Recovery Points for Scale-up Operation.** .................................. 114
- **Fig. 34. Workload of Resource Space Determination for Scale-up Operation.** ........... 114
- **Fig. 35. Workload of Expected Resource State Templates Generation for Scale-up Operation.** ...................................................................................................................... 115
- **Fig. 36. Determining Recovery Points for Scale-down Operation.** ............................. 124
- **Fig. 37. Workload of Resource Space Determination for Scale-down Operation.** ...... 124
- **Fig. 38. Workload of Expected Resource State Templates Generation for Scale-down Operation.** ...................................................................................................................... 125
- **Fig. 39. Determining Recovery Points for Migration Operation.** ................................ 134
- **Fig. 40. Workload of Resource Space Determination for Migration Operation.** ......... 135
- **Fig. 41. Workload of Expected Resource State Templates Generation for Migration Operation.** ...................................................................................................................... 135

### List of Tables
- **Table 1. Cloud APIs Failure Rates** ................................................................................. 12
- **Table 2. Existing Cloud Recovery Strategies** ............................................................... 40
- **Table 3. Mapping between Asgard Operational Steps and Cloud APIs** ........................ 45
- **Table 4. Asgard’s Built-in Error Handling Mechanism** ................................................. 47
- **Table 5. Regular Expressions Matching** ........................................................................ 67
- **Table 6. AI-Planning for Eight Recovery Patterns** ........................................................ 75
- **Table 7. Recovery Action Generated for Rewind & Replay** ......................................... 77
- **Table 8. Recovery Evaluation Metrics** ........................................................................... 78
- **Table 9. Faults injected for Rolling Upgrade Operation** ................................................ 94
- **Table 10. Recovery Time for Rolling Upgrade** ............................................................. 95
- **Table 11. Faults injected for Rolling Upgrade Operation** .............................................. 97
- **Table 12. Recovery Impact for Rolling Upgrade** ........................................................... 98
- **Table 13. Faults injected for Rolling Upgrade Operation** .............................................. 99
- **Table 14. Recovery Monetary Cost for Rolling Upgrade** ............................................ 100
- **Table 15. Recovery without Known Causes** ................................................................ 101
- **Table 16. Handling False Positives of Error Detection** ............................................... 102
- **Table 17. Recovery Time of “Recovery for Recovery”** ............................................... 103
- **Table 18. Faults injected for Installation** ..................................................................... 106
- **Table 19. Recovery Time for Installation** .................................................................... 107
- **Table 20. Faults injected for Installation** ..................................................................... 108
- **Table 21. Recovery Impact for Installation** .................................................................. 109
- **Table 22. Faults injected for Installation** ..................................................................... 110
- **Table 23. Recovery Monetary Cost for Installation** ..................................................... 110
- **Table 24. Recovery without Known Causes** ................................................................ 111
- **Table 25. Handling False Positives of Error Detection** ............................................... 112
- **Table 26. Recovery Time of “Recovery for Recovery”** ............................................... 113
- **Table 27. Faults injected for Scale-up Operation** ......................................................... 116
- **Table 28. Recovery Time for Scale-up** ........................................................................ 117
- **Table 29. Faults injected for Scale-up Operation** ......................................................... 118
- **Table 30. Recovery Impact for Scale-up** ...................................................................... 119
- **Table 31. Faults injected for Scale-up Operation** ......................................................... 120
- **Table 32. Recovery Monetary Cost for Scale-up** ......................................................... 120
- **Table 33. Recovery without Known Causes** ................................................................ 121
- **Table 34. Handling False Positives of Error Detection** ............................................... 122
- **Table 35. Recovery Time of “Recovery for Recovery”** ............................................... 123
- **Table 36. Faults injected for Scale-down Operation** .................................................... 126
- **Table 37. Recovery Time for Scale-down** ................................................................... 127
- **Table 38. Faults injected for Scale-down Operation** .................................................... 128
- **Table 39. Recovery Impact for Scale-down** ................................................................. 129
- **Table 40. Faults injected for Scale-down Operation** .................................................... 130
- **Table 41. Recovery Monetary Cost for Scale-down** .................................................... 130
- **Table 42. Recovery without Known Causes** ................................................................ 131
- **Table 43. Handling False Positives of Error Detection** ............................................... 132
- **Table 44. Recovery Time of “Recovery for Recovery”** ............................................... 133
- **Table 45. Faults injected for Migration Operation** ....................................................... 136
- **Table 46. Recovery Time for Migration** ...................................................................... 137
- **Table 47. Faults injected for Migration Operation** ....................................................... 139
- **Table 48. Recovery Impact for Migration** .................................................................... 140
- **Table 49. Faults injected for Migration Operation** ....................................................... 142
- **Table 50. Recovery Monetary Cost for Migration** ....................................................... 142
- **Table 51. Recovery without Known Causes** ................................................................ 144
- **Table 52. Handling False Positives of Error Detection** ............................................... 146
- **Table 53. Recovery Time of “Recovery for Recovery”** ............................................... 147
- **Table 54. Comparison between POD-Recovery and Other Existing Cloud Recovery Methods** ......................................................................................................................... 150

### Glossary of Terms
- **SLA (Service Level Agreement):** An official commitment between a service provider and the customer, defining aspects such as quality, availability, and responsibilities.
- **DevOps (Development and Operations):** A culture, movement, or practice that emphasizes collaboration and communication between software developers and IT professionals, while automating the process of software delivery and infrastructure changes.
- **API (Application Programming Interface):** A set of subroutine definitions, protocols, and tools for building software and applications.
- **AWS (Amazon Web Services):** A suite of cloud-computing services that make up an on-demand computing platform.
- **EC2 (Elastic Compute Cloud):** A central part of Amazon's cloud-computing platform, allowing users to rent virtual computers to run their own applications.
- **IaaS (Infrastructure as a Service):** Online services that abstract the user from the details of infrastructure, such as physical computing resources, location, data partitioning, scaling, security, backup, etc.
- **PaaS (Platform as a Service):** A category of cloud computing services that provide a platform for customers to develop, run, and manage applications without the complexity of building and maintaining the infrastructure.
- **SaaS (Software as a Service):** A software licensing and delivery model where software is licensed on a subscription basis and centrally hosted, typically accessed via a web browser.
- **VM (Virtual Machine):** An emulation of a computer system, providing the functionality of a physical computer.
- **KVM (Kernel-based Virtual Machine):** A virtualization infrastructure for the Linux kernel that turns it into a hypervisor.
- **LC (Launch Configuration):** A template used by an Auto Scaling group to launch EC2 instances.
- **ASG (Auto Scaling Group):** A collection of EC2 instances that share similar characteristics and are managed as a logical grouping for instance scaling and management.
- **ELB (Elastic Load Balancer):** A cloud component that distributes incoming application traffic across multiple EC2 instances in multiple Availability Zones.
- **AMI (Amazon Machine Image):** A special type of virtual appliance used to create a virtual machine within the Amazon Elastic Compute Cloud (EC2).
- **BPEL (Business Process Execution Language):** A standard executable language for specifying actions within business processes with web services.
- **RTO (Recovery Time Objective):** A time boundary on how long it can take for an application to come back online after a failure occurs.
- **RPO (Recovery Point Objective):** The maximum targeted period in which data might be lost from an IT service due to a major incident.
- **DR (Disaster Recovery):** The process of recovering from disasters in data centers, whether natural or man-made.

### Chapter 1: Introduction & Background
#### 1.1 Research Overview
In this section, we present the problem statement, research aim and outcome, and the structure of the thesis.

##### 1.1.1 Problem Statement
Sporadic operations on cloud, such as installation, upgrade, and reconfiguration, are less frequent and more error-prone compared to normal activities like transactions in e-commerce applications. These operations are prone to errors due to the uncertainty and instability of cloud APIs and resources. Gartner research highlights that the majority of cloud errors and failures occur during these operations. Automated recovery from these failures is crucial to manage the uncertainty on cloud and meet the highly variable SLA (Service Level Agreement) of cloud-based systems. As DevOps practices become more prevalent, frequent system builds and deployments require continuous uptime, making manual recovery impractical due to its time-consuming and inefficient nature.

Existing automated recovery mechanisms, such as exception handling and recovery for long-running transactions, have several drawbacks. Exception handling often involves gracefully exiting the operation or waiting, and it faces the challenge of catering to various exceptions from different systems and platforms. Recovery for long-running transactions is inefficient in capturing the states of cloud resources and generating state transition plans. These gaps in existing methods necessitate a new, fine-grained recovery methodology for cloud operations.

The problem addressed in this PhD research is the need for a fine-grained recovery methodology to handle failures in sporadic operations on cloud, given the limitations of existing methods.

##### 1.1.2 Research Aim and Outcome
To contextualize our research, we conducted a literature review on existing cloud recovery methods and developed a taxonomy. The taxonomy categorizes existing methods into four categories:
1. Recovery for Normal Activities in Design Phase
2. Recovery for Normal Activities in Runtime Phase
3. Recovery for Sporadic Activities in Design Phase
4. Recovery for Sporadic Activities in Runtime Phase

This taxonomy helps clarify the focus of our research, specifically on recovery for sporadic activities in the runtime phase.