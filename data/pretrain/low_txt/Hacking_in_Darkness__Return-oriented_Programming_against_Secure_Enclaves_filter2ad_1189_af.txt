### Dark-ROP: Exploiting SGX Enclaves

We demonstrate that an attacker can successfully exfiltrate secrets from an enclave, bypass Intel SGX attestation, and break data-sealing properties. Our work aims to encourage the community to explore SGX characteristic-aware defense mechanisms and to develop efficient methods for reducing the Trusted Computing Base (TCB) within enclaves.

### Acknowledgments

We are grateful to the anonymous reviewers for their valuable feedback. This research was supported by the Basic Science Research Program through the National Research Foundation of Korea (NRF), funded by the Ministry of Science, ICT & Future Planning (NRF-2017R1A2B3006360). Additional support was provided by ICT R&D programs MSIP/IITP [R-20150223-000167] and [R0190-15-2010]. Jaehyuk Lee received partial support during his internship at Microsoft Research. This research was also partially supported by the NSF awards DGE-1500084, CNS-1563848, CRI-1629851, ONR grant N000141512162, DARPA TC program under contract No. DARPA FA8650-15-C-7556, and DARPA XD3 program under contract No. DARPA HR0011-16-C-0059, as well as ETRI MSIP/IITP [B0101-15-0644].

### References

1. ANATI, I., GUERON, S., JOHNSON, S., AND SCARLATA, V. "Innovative Technology for CPU-Based Attestation and Sealing." In Proceedings of the 2nd International Workshop on Hardware and Architectural Support for Security and Privacy (2013), vol. 13.
2. ARM. "Building a Secure System Using TrustZone Technology." Dec. 2008. PRD29-GENC-009492C.
3. ARNAUTOV, S., TRACH, B., GREGOR, F., KNAUTH, T., MARTIN, A., PRIEBE, C., LIND, J., MUTHUKUMARAN, D., O’KEEFFE, D., STILLWELL, M. L., ET AL. "Scone: Secure Linux Containers with Intel SGX." In 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 16) (2016), USENIX Association.
4. BARNETT, R. "Ghost gethostbyname() Heap Overflow in glibc (CVE-2015-0235)." January 2015.
5. BAUMAN, E., AND LIN, Z. "A Case for Protecting Computer Games with SGX." In Proceedings of the 1st Workshop on System Software for Trusted Execution (2016), ACM, p. 4.
6. BAUMANN, A., PEINADO, M., AND HUNT, G. "Shielding Applications from an Untrusted Cloud with Haven." In Proceedings of the 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI) (Broomfield, Colorado, Oct. 2014), pp. 267–283.
7. BITTAU, A., BELAY, A., MASHTIZADEH, A., MAZIÈRES, D., AND BONEH, D. "Hacking Blind." In 2014 IEEE Symposium on Security and Privacy (2014), IEEE, pp. 227–242.
8. BLETSCH, T., JIANG, X., FREEH, V. W., AND LIANG, Z. "Jump-Oriented Programming: A New Class of Code-Reuse Attack." In Proceedings of the 6th ACM Symposium on Information, Computer and Communications Security (2011), ACM, pp. 30–40.
9. BUCHANAN, E., ROEMER, R., SHACHAM, H., AND SAVAGE, S. "When Good Instructions Go Bad: Generalizing Return-Oriented Programming to RISC." In Proceedings of the 15th ACM Conference on Computer and Communications Security (2008), ACM, pp. 27–38.
10. CHECKOWAY, S., AND SHACHAM, H. "Iago Attacks: Why the System Call API is a Bad Untrusted RPC Interface." In Proceedings of the 18th ACM International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS) (Houston, TX, Mar. 2013), pp. 253–264.
11. CHHABRA, S., SAVAGAONKAR, U., LONG, M., BORRAYO, E., TRIVEDI, A., AND ORNELAS, C. "Memory Encryption Engine Integration." June 23 2016. US Patent App. 14/581,928.
12. DURUMERIC, Z., KASTEN, J., ADRIAN, D., HALDERMAN, J. A., BAILEY, M., LI, F., WEAVER, N., AMANN, J., BEEKMAN, J., PAYER, M., ET AL. "The Matter of Heartbleed." In Proceedings of the 2014 Conference on Internet Measurement Conference (2014), ACM, pp. 475–488.
13. GOOGLE. "glibc getaddrinfo() Stack-Based Buffer Overflow (CVE-2015-7547)." February 2016.
14. GREENE, J. "Intel Trusted Execution Technology." Intel Technology White Paper (2012).
15. GUERON, S. "A Memory Encryption Engine Suitable for General Purpose Processors." Cryptology ePrint Archive, Report 2016/204, 2016. http://eprint.iacr.org/.
16. HOEKSTRA, M., LAL, R., PAPPACHAN, P., PHEGADE, V., AND DEL CUVILLO, J. "Using Innovative Instructions to Create Trustworthy Software Solutions." In Proceedings of the 2nd International Workshop on Hardware and Architectural Support for Security and Privacy (HASP) (Tel-Aviv, Israel, 2013), pp. 1–8.
17. HUNT, T., ZHU, Z., XU, Y., PETER, S., AND WITCHEL, E. "Ryoan: A Distributed Sandbox for Untrusted Computation on Secret Data." In 12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 16), USENIX Association.
18. INTEL. "SGX Tutorial, ISCA 2015." http://sgxisca.weebly.com/, June 2015.
19. INTEL CORPORATION. "Intel Software Guard Extensions Programming Reference (rev1)," Sept. 2013. 329298-001US.
20. INTEL CORPORATION. "Intel Software Guard Extensions Programming Reference (rev2)," Oct. 2014. 329298-002US.
21. INTEL CORPORATION. "Intel SGX Enclave Writers Guide (rev1.02)," 2015. https://software.intel.com/sites/default/files/managed/ae/48/Software-Guard-Extensions-Enclave-Writers-Guide.pdf.
22. INTEL CORPORATION. "Intel SGX SDK for Windows* User Guide (rev1.1.1)," 2016. https://software.intel.com/sites/default/files/managed/d5/e7/Intel-SGX-SDK-Users-Guide-for-Windows-OS.pdf.
23. JOHNSON, S., SAVAGAONKAR, U., SCARLATA, V., MCKEEN, F., AND ROZAS, C. "Technique for Supporting Multiple Secure Enclaves," June 21 2012. US Patent App. 12/972,406.
24. JP AUMASSON, L. M. "SGX Secure Enclaves in Practice: Security and Crypto Review," 2016. [Online; accessed 16-August-2016].
25. KIM, S., SHIN, Y., HA, J., KIM, T., AND HAN, D. "A First Step Towards Leveraging Commodity Trusted Execution Environments for Network Applications." In Proceedings of the 14th ACM Workshop on Hot Topics in Networks (HotNets) (Philadelphia, PA, Nov. 2015).
26. LEE, S., SHIH, M.-W., GERA, P., KIM, T., KIM, H., AND PEINADO, M. "Inferring Fine-grained Control Flow Inside SGX Enclaves with Branch Shadowing (to appear)." In Proceedings of the 26th USENIX Security Symposium (Security) (Vancouver, Canada, Aug. 2017).
27. OHRIMENKO, O., SCHUSTER, F., FOURNET, C., MEHTA, A., NOWOZIN, S., VASWANI, K., AND COSTA, M. "Oblivious Multi-party Machine Learning on Trusted Processors." In USENIX Security Symposium (2016), pp. 619–636.
28. PAPPAS, V., POLYCHRONAKIS, M., AND KEROMYTIS, A. D. "Smashing the Gadgets: Hindering Return-Oriented Programming Using In-Place Code Randomization." In 2012 IEEE Symposium on Security and Privacy (2012), IEEE, pp. 601–615.
29. RUTKOWSKA, J. "Thoughts on Intel’s Upcoming Software Guard Extensions (Part 2)," Sept. 2013. http://theinvisiblethings.blogspot.com/2013/09/thoughts-on-intels-upcoming-software.html.
30. SCHUSTER, F., COSTA, M., FOURNET, C., GKANTSIDIS, C., PEINADO, M., MAINAR-RUIZ, G., AND RUSSINOVICH, M. "VC3: Trustworthy Data Analytics in the Cloud using SGX." In Proceedings of the 36th IEEE Symposium on Security and Privacy (Oakland) (San Jose, CA, May 2015).
31. SEO, J., LEE, B., KIM, S., SHIH, M.-W., SHIN, I., HAN, D., AND KIM, T. "SGX-Shield: Enabling Address Space Layout Randomization for SGX Programs (to appear)." In Proceedings of the 2017 Annual Network and Distributed System Security Symposium (NDSS) (San Diego, CA, Feb. 2017).
32. SHACHAM, H. "The Geometry of Innocent Flesh on the Bone: Return-into-libc without Function Calls (on the x86)." In Proceedings of the 14th ACM Conference on Computer and Communications Security (2007), ACM, pp. 552–561.
33. SHINDE, S., CHUA, Z. L., NARAYANAN, V., AND SAXENA, P. "Preventing Page Faults from Telling Your Secrets." In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security (2016), ACM, pp. 317–328.
34. SINHA, R., COSTA, M., LAL, A., LOPES, N., SESHIA, S., RAJAMANI, S., AND VASWANI, K. "A Design and Verification Methodology for Secure Isolated Regions." In Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation (2016), ACM.
35. SINHA, R., RAJAMANI, S., SESHIA, S., AND VASWANI, K. "Moat: Verifying Confidentiality of Enclave Programs." In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (2015), ACM, pp. 1169–1184.
36. TSAI, C.-C., ARORA, K. S., BANDI, N., JAIN, B., JANNEN, W., JOHN, J., KALODNER, H. A., KULKARNI, V., OLIVEIRA, D., AND PORTER, D. E. "Cooperation and Security Isolation of Library OSes for Multi-Process Applications." In Proceedings of the Ninth European Conference on Computer Systems (2014), ACM, p. 9.
37. WEICHBRODT, N., KURMUS, A., PIETZUCH, P., AND KAPITZA, R. "AsyncShock: Exploiting Synchronization Bugs in Intel SGX Enclaves." In European Symposium on Research in Computer Security (2016), Springer, pp. 440–457.
38. XU, Y., CUI, W., AND PEINADO, M. "Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems." In Security and Privacy (SP), 2015 IEEE Symposium on (2015), IEEE, pp. 640–656.
39. ZHANG, F., CECCHETTI, E., CROMAN, K., JUELS, A., AND SHI, E. "Town Crier: An Authenticated Data Feed for Smart Contracts." In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (2016), ACM, pp. 270–282.

### Appendix: Dark-ROP Gadgets

#### Table 2: Gadgets Used for Launching the Dark-ROP Attack Against the RemoteAttestation Example Code in the Intel SGX SDK

| Gadget | Description | From |
| --- | --- | --- |
| ENCLU Gadget: `do_ereport` | Invokes leaf functions. Followed by three pop gadgets to set `rdx`, `rcx`, and `rbx` registers. | libsgx_trts.a |
| `sgx_register_exception_handler` | Manipulates the `rax` register. The attacker can control `rbx` to set `rax` to an arbitrary value. | libsgx_trts.a |
| `relocate_enclave` | Manipulates `rsi` and `rdi` registers to set arguments for invoking `memcpy` and other library functions. | libsgx_trts.a |
| `pop rdi; ret` | Sets the `rdi` register. | libsgx_trts.a |
| `memcpy` | Copies enclave code and data to untrusted memory and vice versa. | libsgx_tstdc.a |

#### Table 3: Gadgets Used to Launch Dark-ROP in Windows 64-bit

| Gadget | Description | From |
| --- | --- | --- |
| GPR Modification Gadget: `__intel_cpu_indicator_init` | Manipulates GPRs. All pop-gadgets required for launching Dark-ROP are located in this function. | sgx_tstdc.lib |
| ENCLU Gadget: `do_ereport` | Invokes leaf functions. Followed by a pop gadget to set the `rax` register. | sgx_trts.lib |

---

This version of the text is more structured, clear, and professional, with consistent formatting and improved readability.