### Source and Destination Mapping

We will now discuss other related efforts in this area.

#### Automotive Attacks
Numerous studies have demonstrated the vulnerabilities of automotive networks. These include work on message injection [20], attacks on keyless entry systems [8, 16, 28], and specific components such as Tire Pressure Monitoring Systems (TPMS) [17, 18]. Our research can enhance both attack and defense strategies by proactively identifying potential attack channels.

#### Intrusion Detection for Automotive Networks
With growing security concerns, related work has developed intrusion detection and firewall capabilities similar to those in traditional networks (e.g., [11, 19, 22, 29, 31]). Some of these solutions may interfere with mapping efforts. More generally, they may have blind spots that a network mapper can highlight.

#### Alternative Source Identification
We acknowledge previous efforts aimed at identifying message sources [12, 27]. While these methods may be valid, they often require extensive data collection or physical access to the bus for source mapping. CANvas, however, allows for source mapping using a passively-recorded, timestamped traffic log.

#### Authentication in CAN
We recognize that authentication for CAN devices could inherently solve the source mapping problem. However, proposed authentication methods are rarely implemented in real vehicles due to the need for permanent device additions or changes to the existing CAN protocol. For example, the TCAN system [5] requires the addition of a new device, access to two locations on the bus, and a static authentication table. CANvas, on the other hand, accounts for timing characteristics that can change due to clock drift. By comparing clock offsets, CANvas does not rely on static timing characteristics and does not require physical access to the bus for source mapping, as it only needs a hardware-timestamped traffic log and operates solely from the OBD-II port without an additional permanent device.

#### ECU Fingerprinting
Following initial efforts on fingerprinting [14, 27], subsequent work has improved on the basic approach by identifying potential pitfalls [11, 12, 29]. As our work demonstrates, all these methods still suffer from the same limitations in our context, as they either assume active access to the bus or very long traffic dumps.

### Conclusions
In this work, we have developed CANvas, a fast and inexpensive automotive network mapper. We have released our code and data under open-source licenses to facilitate further research in this area. Future work should aim to add richer functionality, such as identifying the function of an ECU (e.g., transmission ECU, engine ECU), identifying gateway ECUs that bridge multiple CAN buses, and identifying vendor-specific message acceptance filters. Additionally, future research should investigate network mapping on other automotive protocols, such as automotive Ethernet.

### Acknowledgements
This work was partially funded by the PITAXVIII PITA award and the CNS-1564009 NSF IoT award. We gratefully acknowledge support from Technologies for Safe and Efficient Transportation (T-SET) University Transportation Center. This work was also supported in part by the CONIX Research Center, one of six centers in JUMP, a Semiconductor Research Corporation (SRC) program sponsored by DARPA. We thank the anonymous reviewers and our shepherd Konrad Rieck for their valuable suggestions.

### Availability
Our work is available [1] to encourage the community to add richer functionality and use CANvas to further the creation of automotive security tools.

### References
[1] Canvas. https://github.com/sekarkulandaivel/canvas.
[2] Introduction to CAN. http://www.ti.com/lit/an/sloa101b/sloa101b.pdf.
[3] Motorcraft Service. https://www.motorcraftservice.com/.
[4] OBD-II Background Information. http://www.obdii.com/background.html.
[5] TCAN: Authentication without cryptography on a CAN bus based on nodes' location on the bus. https://autosec.se/wp-content/uploads/2019/03/3.-ESCAR-EU-2018.pdf.
[6] Toyota TechInfo Service. https://techinfo.toyota.com.
[7] What Limp Mode Is, and Why Cars Use It. https://repairpal.com/symptoms/what-is-limp-mode-why-cars-use-it.
[8] Ansaf Ibrahem Alrabady and Syed Masud Mahmud. Analysis of attacks against the security of keyless-entry systems for vehicles and suggestions for improved designs. IEEE Transactions on Vehicular Technology, 54(1):41–50, 2005. https://ieeexplore.ieee.org/iel5/25/30186/01386610.pdf.
[9] Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, Stefan Savage, Karl Koscher, Alexei Czeskis, Franziska Roesner, Tadayoshi Kohno, et al. Comprehensive experimental analyses of automotive attack surfaces. In USENIX Security Symposium, pages 77–92. San Francisco, 2011. http://www.autosec.org/pubs/cars-usenixsec2011.pdf.
[10] Kyong-Tak Cho and Kang G Shin. Error handling of in-vehicle networks makes them vulnerable. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, pages 1044–1055. ACM, 2016. https://dl.acm.org/citation.cfm?id=2978302.
[11] Kyong-Tak Cho and Kang G Shin. Fingerprinting for vehicle intrusion detection. In USENIX Security Symposium, pages 911–927, 2016. https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_cho.pdf.
[12] Wonsuk Choi, Hyo Jin Jo, Samuel Woo, Ji Young Chun, Jooyoung Park, and Dong Hoon Lee. Identifying ECUs using inimitable characteristics of signals in controller area networks. IEEE Transactions on Vehicular Technology, 67(6):4757–4770, 2018. https://ieeexplore.ieee.org/iel7/25/4356907/08303766.pdf.
[13] Robert I Davis, Alan Burns, Reinder J Bril, and Johan J Lukkien. Controller Area Network (CAN) schedulability analysis: Refuted, revisited and revised. Real-Time Systems, 35(3):239–272, 2007. https://link.springer.com/article/10.1007/s11241-007-9012-7.
[14] Marco Di Natale, Haibo Zeng, Paolo Giusto, and Arkadeb Ghosal. Understanding and Using the Controller Area Network Communication Protocol: Theory and Practice. Springer Science & Business Media, 2012. https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.512.5543&rep=rep1&type=pdf.
[15] Mohammad Farsi, Karl Ratcliff, and Manuel Barbosa. An overview of controller area network. Computing & Control Engineering Journal, 10(3):113–120, 1999. https://ieeexplore.ieee.org/iel5/2218/17068/00788104.pdf.
[16] Aurélien Francillon, Boris Danev, and Srdjan Capkun. Relay attacks on passive keyless entry and start systems in modern cars. In Proceedings of the Network and Distributed System Security Symposium (NDSS). Eidgenössische Technische Hochschule Zürich, Department of Computer Science, 2011. https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/42365/eth-4572-01.pdf.
[17] Abdulmalik Humayed and Bo Luo. Cyber-physical security for smart cars: taxonomy of vulnerabilities, threats, and attacks. In Proceedings of the ACM/IEEE Sixth International Conference on Cyber-Physical Systems, pages 252–253. ACM, 2015. https://dl.acm.org/citation.cfm?id=2735992.
[18] Rob Miller, Ishtiaq Rouf, Hossen Mustafa, Sangho Oh, Travis Taylor, Wenyuan Xu, Marco Gruteser, Wade Trappe, and Ivan Seskar. Security and privacy vulnerabilities of in-car wireless networks: A tire pressure monitoring system case study. In 19th USENIX Security Symposium, Washington DC, pages 11–13, 2010. https://www.usenix.org/legacy/event/sec10/tech/full_papers/Rouf.pdf.
[19] Min-Joo Kang and Je-Won Kang. Intrusion detection system using deep neural network for in-vehicle network security. PloS One, 11(6):e0155781, 2016. https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0155781.
[20] Karl Koscher, Alexei Czeskis, Franziska Roesner, Shwetak Patel, Tadayoshi Kohno, Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, et al. Experimental security analysis of a modern automobile. In Security and Privacy (SP), 2010 IEEE Symposium on, pages 447–462. IEEE, 2010. http://www.autosec.org/pubs/cars-oakland2010.pdf.
[21] Gordon Fyodor Lyon. Nmap Network Scanning: The Official Nmap Project Guide to Network Discovery and Security Scanning. Insecure, 2009. https://dl.acm.org/citation.cfm?id=1538595.
[22] Tsutomu Matsumoto, Masato Hata, Masato Tanabe, Katsunari Yoshioka, and Kazuomi Oishi. A method of preventing unauthorized data transmission in controller area network. In 2012 IEEE 75th Vehicular Technology Conference (VTC Spring), pages 1–5. IEEE, 2012. https://ieeexplore.ieee.org/iel5/6238551/6239848/06240294.pdf.
[23] Jérôme Maye and Mario Krucker. Communication with a Toyota Prius. https://attachments.priuschat.com/attachment-files/2017/04/122809_Communication_with_a_Toyota_Prius.pdf.
[24] Charlie Miller and Chris Valasek. Adventures in automotive networks and control units. Def Con, 21:260–264, 2013. http://illmatics.com/car_hacking.pdf.
[25] Charlie Miller and Chris Valasek. A survey of remote automotive attack surfaces. Black Hat USA, 2014:94, 2014. http://illmatics.com/remote%20attack%20surfaces.pdf.
[26] Charlie Miller and Chris Valasek. Remote exploitation of an unaltered passenger vehicle. Black Hat USA, 2015:91, 2015. http://illmatics.com/Remote%20Car%20Hacking.pdf.
[27] Pal-Stefan Murvay and Bogdan Groza. Source identification using signal characteristics in controller area networks. IEEE Signal Processing Letters, 21(4):395–399, 2014. https://ieeexplore.ieee.org/iel7/97/4358004/06730667.pdf.
[28] Irving S Reed, Xiaowei Yin, and Xuemin Chen. Keyless entry system using a rolling code, February 4 1997. https://patentimages.storage.googleapis.com/c3/02/da/89f0cef9c2a9ea/US5600324.pdf.
[29] Sang Uk Sagong, Xuhang Ying, Andrew Clark, Linda Bushnell, and Radha Poovendran. Cloaking the clock: emulating clock skew in controller area networks. In Proceedings of the 9th ACM/IEEE International Conference on Cyber-Physical Systems, pages 32–42. IEEE Press, 2018. https://dl.acm.org/citation.cfm?id=3207896.3207901.
[30] Craig Smith. The Car Hacker’s Handbook: A Guide for the Penetration Tester. No Starch Press, 2016. http://opengarages.org/handbook/.
[31] Hyun Min Song, Ha Rang Kim, and Huy Kang Kim. Intrusion detection system based on the analysis of time intervals of CAN messages for in-vehicle network. In 2016 International Conference on Information Networking (ICOIN), pages 63–68. IEEE, 2016. https://ieeexplore.ieee.org/abstract/document/7427089/.
[32] CAN Specification. Bosch. 1991. http://esd.cs.ucr.edu/webres/can20.pdf.
[33] Ken Tindell, H Hanssmon, and Andy J Wellings. Analysing real-time communications: Controller area network (CAN). In RTSS, pages 259–263. Citeseer, 1994. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.57.5047&rep=rep1&type=pdf.