### Security Vulnerabilities in EPUB Reading Systems

#### Desktop Platforms

Several EPUB reading systems on desktop platforms, such as Windows, macOS, and Linux, exhibit security vulnerabilities. For instance, some readers that support JavaScript can communicate with a remote server without the user's knowledge. Additionally, out of the ten tested readers, half can leak the presence of certain resources on the local file system by rendering them. Three of these even allow an attacker to leak arbitrary files to a remote server.

Furthermore, four reading systems on macOS allow EPUBs to open installed applications using specific URI schemes without requiring user consent. While it is generally good practice for these applications to require user interaction before performing irreversible actions, this is not always the case. For example, if Skype for Business is configured as the default app to handle `tel:` scheme URIs, activating such a URI will immediately initiate a call to the included phone number. Although the user receives both visual and auditory cues when the call is initiated, no user interaction is required. This could potentially be exploited by an attacker to make the user call a premium-rate telephone number, especially if there has been no user activity for a certain period.

**Linux Ubuntu:**
For the evaluation on the Linux platform, we found only three functioning reading systems, as shown in Table III. Calibre (versions 3 and 4) is the only reading system that provides scripting support. Similar to installations on other desktop platforms, Calibre 3 uses an outdated browser engine, which has a known vulnerability that can be exploited to leak arbitrary file contents.

#### Mobile Platforms

In this section, we discuss the results for EPUB reading systems on iOS 12 and Android 9. To improve legibility, we have omitted the browser identification column in the mobile platform tables, as all rely on the engine framework provided by the operating system. Consequently, these browser engines are implicitly updated with every system update and are considered up-to-date.

**iOS and Android Applications:**
- 4shared Reader
- AlReader (version 1.911805270)
- Aldiko Book Reader (version 3.1)
- Aldiko Classic (version 3.1.3)
- Bookari Free (version 4.2.5)
- Book Reader (version 1.12.12)
- Cool Reader (version 3.2.32)
- Ebook Reader (version 1.0)
- Ebook Reader (version 5.0.8.2)
- EBook Reader (version 3.5.0)
- eBoox (version 2.22)
- ePub Reader (version 2.1.2)
- Epub reader (version 4.0)
- Epub Reader (librera) (version 8.0.39)
- EPUBReader (version 1.0.32)
- eReader Prestigio (version 6.0.0.9)
- FBReader (version 3.0.15)
- Freda (version 4.31)
- FullReader (version 4.1.4)
- Gitden Reader (version 4.5.3)
- Google Play Books (version 5.2.7)
- Infinity Reader (version 1.7.57)
- iReader (version 1.1.4)
- Kindle (version 3.2.0.35)
- Librera (version 8.1.242)
- Lit Pub (version 3.5.3)
- Lithium (version 0.21.1)
- Moon+ Reader (version 5.1)
- PocketBook (version 3.21)
- Reader FB2 (version 1.20)
- ReadEra (version 19.07.28)
- Reasily (version 1907d)
- Solati Reader (version 2.5.1)
- Supreader (version 3.2.30)
- Tolino (version 4.10.2)

These applications were tested for their ability to handle various file types and URI schemes. The results indicate that several readers can open or access specific file types and URI schemes, potentially leading to security risks if not properly managed.

**File Types and URI Schemes:**
- `.log` file
- `.bogus` file
- `.mp3` file
- `tel:` URI scheme

The testing revealed that some readers can open or access these file types and URI schemes, which could be exploited by attackers to perform unauthorized actions or leak sensitive information.

**Conclusion:**
The findings highlight the importance of regular updates and proper security measures in EPUB reading systems. Users should be cautious and ensure that their reading systems are up-to-date and configured to require user interaction for critical actions.

---

**Note:**
- **Authorized licensed use limited to: Tsinghua University. Downloaded on February 25, 2022, at 12:14:25 UTC from IEEE Xplore. Restrictions apply.**
- **Table III:** [Insert Table III here for reference]