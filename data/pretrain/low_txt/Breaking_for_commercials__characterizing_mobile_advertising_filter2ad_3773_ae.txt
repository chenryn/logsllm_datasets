### Update Interval and Reporting Support

The update interval is dynamically reduced to a predefined value by the network to deliver more relevant advertisements to the user in a timely manner, if necessary. 

#### Reporting Support
Statistics for ad views are securely stored locally in an encrypted database. Reports are batched and uploaded to the server during cache updates, rather than being reported immediately. To prevent fraudulent activities, when a message is received from a new publisher (identified by their app package and publisher ID), the mobile agent validates the publisher's authenticity by contacting the ad network.

The database is secured using tokens obtained from the ad network at the start of each cache, which are refreshed with every cache update. A dynamic token is used instead of a static one to mitigate reverse engineering attacks. However, if the client service is terminated, the token, which is stored in memory, is lost, and the database must be discarded. Although this loss is not ideal, it is considered an acceptable trade-off compared to allowing an attacker, once they have discovered the password, to delete or generate fake reports.

User clicks are reported immediately to the server, as the network interface will already be in a connected power mode while downloading the advertised content. This reduces the likelihood of losing a click report if the service is stopped, unless there is no network connectivity at that time, in which case the report will be cached. AdCache also synchronizes the reports and updates the cache. This decision is based on the fact that click actions for AdMob (as per the rule reported in Table 3) are not common among many mobile users. Only 4.06%, 4.34%, and 5.19% of Android, iPhone, and iPad users, respectively, had performed at least one click on an AdMob ad. This metric should not be confused with the click-through rate, which is generally used to measure the success of an online advertising campaign for a particular website. Further investigation into this metric is planned for future work. The current consumption for performing such actions on the device under study is approximately 350 mA on 3G and 200 mA on Wi-Fi.

### Smart Network Usage

AdCache monitors the network conditions of the mobile interface (i.e., signal strength and type of network) to temporarily defer updates if the network conditions are not ideal. The benefits of using AdCache on Wi-Fi are minor compared to the 3G case. When the mobile device is connected via Wi-Fi, AdCache operates like a standard ad network, fetching one ad at a time due to the minimal power and network overhead. This ensures that the most relevant ads are delivered to the user without significant power costs. Under these network conditions, the cache attempts to prefetch fresher ads or update the metadata of existing ads, which will be served once Wi-Fi connectivity is lost.

### Privacy

Privacy and security issues highlighted in studies such as [1], [13], and [6] were considered. AdRisk [3] found that some SDKs accessed sensitive information, including call logs, user phone numbers, and lists of all installed apps. A key benefit of AdCache's design is that the permissions required for advertising are decoupled from those needed for the app's intended purpose. Local user profiling helps preserve user privacy, as proposed by AdRisk [3].

### Evaluation of AdCache

To evaluate the power cost of using AdCache, we used the same refresh intervals from Section 4.2.1 for three different types of ads: static banner, animated banner, and text ads. A fourth case, where AdCache serves a randomly chosen type, was also evaluated to emulate the behavior of existing ad networks. The animated ad type was specifically designed to be particularly CPU-intensive to establish an upper bound on the cost of supporting such a feature.

We collected two sets of results: one where the mobile client has an empty cache (worst-case scenario) and the second with the cache already running and containing valid pre-fetched ads (best-case scenario). On a fresh start, 15 ads (10 image-based and 5 text-based ads) were downloaded to the device from a mock server hosted in the US. The time required to download all the ads on a fresh start varies from 10 to 12 seconds on 3G, including the channel allocation time.

As shown in Figure 16(a), AdCache has a significantly lower average current consumption compared to existing ad networks (Figure 13). The power overhead compared to the baseline values for minimum brightness (Table 6) is small due to batching and pre-fetching. In Table 7, we compare the current drain of AdCache with existing ad networks for the minimum and maximum refresh intervals on 3G. For a 20-second refresh interval, the power consumption is halved compared to existing ad networks over a 3-minute period. Interestingly, the effect of the refresh interval is less pronounced in AdCache compared to existing ad networks (Figure 13), where it reduces the number of network transactions.

For a 1,500 mAh battery, this implies that if the app was running continuously, the battery life could be extended from 6 hours to more than 12 hours. If the mobile agent has already prefetched ads, the ad is displayed almost instantly with minimal power cost, as I/O and CPU costs are negligible compared to wireless interfaces. Similarly, the cost over Wi-Fi (Figure 16(b)) is also slightly improved over existing ad networks. The small variability below 10 mA in the current cost for Wi-Fi measurements is caused by background traffic. In a real deployment scenario, the current consumption can vary between the upper and lower bounds depending on the advertising campaigns, user mobility, and the expiration time of the ads.

Data plans often have low data allowances, making AdCache important for end-users in monetary terms. AdCache does not repeatedly download the same objects, as observed with current ad networks, and batches activity reports. As seen in Section 3.5.2, 1% of the user’s total daily traffic is wasted due to repeated downloads of objects. Furthermore, mobile operators can also benefit from AdCache, as the client communicates with the ad network less frequently, reducing the amount of signaling traffic and the impact on the scarce radio spectrum in the mobile network.

### Related Work

The ad ecosystem has been the subject of several research studies, primarily focusing on privacy issues. MobiAd [5] and PrivAd [6] suggest local profiling and ad serving to protect user privacy using a third party as an anonymization stage. These solutions involve a profiling agent receiving a large selection of ads via a third-party proxy, displaying those that match the user’s interests. Clicks are also sent using third parties to maintain user anonymity. However, these solutions perform CPU-intensive cryptographic operations and may increase communication overhead.

In [1], the authors conducted a large-scale crawl of the Android app market based on metadata about required permissions, describing the mobile ecosystem and the imbalance of privacy, as many free apps depend on targeted ads for revenue [14]. AdRisk [3] found that more than half of the apps on the Android platform include aggressive ad libraries that download and run code from remote servers while accessing personal information such as call logs and installed app lists.

While much effort has been focused on privacy, only a few studies address performance and energy issues. In [4], the authors analyzed the mobile traffic patterns of 43 users across two different mobile platforms using packet sniffers, highlighting inefficiencies caused by small transfer sizes. Both [1] and [13] suggest decoupling the flow of information between publishers, users, and ad networks to optimize energy consumption. Eprof [2] is the first energy profiler for smartphone apps, finding that up to 75% of the energy consumed by free apps is spent on mobile advertising.

The characteristics of current mobile stacks and their relationship with energy management have been extensively studied. Topics range from the lowest level of the 3G network stack with radio resource allocation management [10] to the highest level with the impact of JavaScript and HTML code on mobile devices [15]. Other works analyze the impact of middleboxes [16] and other contributions [17, 18].

Caching has been a popular solution for constrained systems and networks, especially those with poor connectivity. Caching has been proposed as an efficient way to save energy on mobile networks [12]. In [19], the authors aim to reduce the bandwidth cost of mobile apps by proposing an HTTP proxy-based caching mechanism, highlighting potential inefficiencies in terms of energy. Our work proves the efficiency of an independent caching system using various energy measurements on 3G and Wi-Fi. AdCache also provides the ability to separate permissions between advertising and app functionality, enabling it to be a privacy-preserving profiler and advertising system.

The works described above are usually based on active experiments performed on a set of smartphones. To the best of our knowledge, this paper presents the first in-depth analysis of the ad network and mediation services ecosystem conducted on traffic from a real network. We did not limit our analysis to a single device type or ad agency but consistently compared Android, iPhone, and iPad devices. We found several inefficiencies in terms of energy and bandwidth wastage and designed AdCache to address them.

### Conclusion

In this paper, we undertook the first in-depth analysis of a large mobile ad traffic dataset. Our findings confirm on a large scale that: i) ad networks impact a significant proportion of users, especially on Android, but also on iPhone and iPad; ii) the mobile ad ecosystem is mainly dominated by Google services (e.g., AdMob, AdWhirl, and Google Analytics); iii) ad traffic can be a significant fraction of the total traffic of users; iv) mobile ad traffic is responsible for important energy and network overhead by forcing offline apps to become online apps; and v) many of these requests are redundant due to the lack of caching capabilities in the SDKs.

By closely examining the popular AdMob service, we identified that the typical session of such traffic is quite short and similar to the demotion timeouts used by 3GPP network technology. We found a clear incompatibility of the current ad distribution mechanisms with the quasi-static nature of ad content. During the analysis, we were surprised by the impact of user profiling traffic, noting a significant number of transmissions to analytic services with similar energy and bandwidth usage issues as seen in ad networks.

We demonstrate the advantages of a caching approach through the implementation and evaluation of AdCache, a first step in reducing the impact of ad traffic on battery life and controlling the traffic generated by ad networks. We demonstrate AdCache’s viability in terms of energy savings to tackle the identified issues related to ad traffic. Our future objectives include characterizing the mobile ad ecosystem in greater detail, especially from an economic perspective, and continuing to research an energy and spectrum-efficient ad delivery mechanism by introducing more embedded logic, enabling more offline capabilities such as user profiling, analytics support, and fine-grained targeted advertising.

### Acknowledgements

Narseo Vallina-Rodriguez is partially funded by a Qualcomm Innovation Fellowship, and Alessandro Finamore by the EU-IP project mPlane, funded by the European Commission under grant n-318627. The authors would also like to thank the anonymous reviewers and our shepherd Chen-Nee Chuah (UC Davis) for constructive feedback on the preparation of the final version of this paper. We also wish to thank Steve Uhlig (Queen Mary, University of London), Vijay Erramilli (Telefonica Research), Charalampos Rotsos, Steve Hand, Ilias Leontiadis, Christos Efstratiou, and Daniele Quercia (University of Cambridge) for insightful comments and feedback.

### References

[1] Ilias Leontiadis, Christos Efstratiou, Marco Picone, and Cecilia Mascolo. Don’t kill my ads!: balancing privacy in an ad-supported mobile application market. In Proceedings of the Twelfth Workshop on Mobile Computing Systems & Applications, HotMobile ’12, pages 2:1–2:6, New York, NY, USA, 2012. ACM.

[2] Abhinav Pathak, Y. Charlie Hu, Ming Zhang, Paramvir Bahl, and Yi-Min Wang. Fine-grained power modeling for smartphones using system call tracing. In Proceedings of the sixth conference on Computer systems, EuroSys ’11, pages 153–168, New York, NY, USA, 2011. ACM.

[3] Michael C. Grace, Wu Zhou, Xuxian Jiang, and Ahmad-Reza Sadeghi. Unsafe exposure analysis of mobile in-app advertisements. In Proceedings of the fifth ACM conference on Security and Privacy in Wireless and Mobile Networks, WISEC ’12, pages 101–112, New York, NY, USA, 2012. ACM.

[4] Hossein Falaki, Dimitrios Lymberopoulos, Ratul Mahajan, Srikanth Kandula, and Deborah Estrin. A first look at traffic on smartphones. In Proceedings of the 10th annual conference on Internet measurement, IMC ’10, pages 281–287, New York, NY, USA, 2010. ACM.

[5] Hamed Haddadi, Pan Hui, and Ian Brown. Mobiad: private and scalable mobile advertising. In Proceedings of the fifth ACM international workshop on Mobility in the evolving internet architecture, MobiArch ’10, pages 33–38, New York, NY, USA, 2010. ACM.

[6] Saikat Guha, Alexey Reznichenko, Kevin Tang, Hamed Haddadi, and Paul Francis. Serving ads from localhost for performance, privacy, and profit. In In Proceedings of the 8th Workshop on Hot Topics in Networks, 2009.

[7] Ad Regex Dictionary. http://www.retitlc.polito.it/finamore/mobileAdRegexDictionary.xlsx, 2012.

[8] Qiang Xu, Jeffrey Erman, Alexandre Gerber, Zhuoqing Mao, Jeffrey Pang, and Shobha Venkataraman. Identifying diverse usage behaviors of smartphone apps. In Proceedings of the 2011 ACM SIGCOMM conference on Internet measurement conference, IMC ’11, pages 329–344, New York, NY, USA, 2011. ACM.

[9] Feng Qian, Kee Shen Quah, Junxian Huang, Jeffrey Erman, Alexandre Gerber, Zhuoqing Mao, Subhabrata Sen, and Oliver Spatscheck. Web caching on smartphones: ideal vs. reality. In Proceedings of the 10th international conference on Mobile systems, applications, and services, MobiSys ’12, pages 127–140, New York, NY, USA, 2012. ACM.

[10] Feng Qian, Zhaoguang Wang, Alexandre Gerber, Zhuoqing Morley Mao, Subhabrata Sen, and Oliver Spatscheck. Characterizing radio resource allocation for 3G networks. In Proceedings of the 10th annual conference on Internet measurement, IMC ’10, pages 137–150, New York, NY, USA, 2010. ACM.

[11] Aaron Carroll and Gernot Heiser. An analysis of power consumption in a smartphone. In Proceedings of the 2010 USENIX conference on USENIX annual technical conference, USENIXATC’10, pages 21–21, Berkeley, CA, USA, 2010. USENIX Association.

[12] Niranjan Balasubramanian, Aruna Balasubramanian, and Arun Venkataramani. Energy consumption in mobile phones: a measurement study and implications for network applications. In Proceedings of the 9th ACM SIGCOMM conference on Internet measurement conference, IMC ’09, pages 280–293, New York, NY, USA, 2009. ACM.

[13] Paul Pearce, Adrienne Porter Felt, Gabriel Nunez, and David Wagner. Addroid: Privilege separation for applications and advertisers in android. In Proceedings of ACM Symposium on Information, Computer and Communications Security, AsiaCCS’12. ACM, 2012.

[14] William Enck, Peter Gilbert, Byung-Gon Chun, Landon P. Cox, Jaeyeon Jung, Patrick McDaniel, and Anmol N. Sheth. Taintdroid: an information-flow tracking system for real-time privacy monitoring on smartphones. In Proceedings of the 9th USENIX conference on Operating systems design and implementation, OSDI’10, pages 1–6, Berkeley, CA, USA, 2010. USENIX Association.

[15] Narendran Thiagarajan, Gaurav Aggarwal, Angela Nicoara, Dan Boneh, and Jatinder P. Singh. Who killed my battery?: analyzing mobile browser energy consumption. In Proceedings of the 21st international conference on World Wide Web, WWW ’12, pages 41–50, New York, NY, USA, April 2012. ACM.

[16] Zhaoguang Wang, Zhiyun Qian, Qiang Xu, Zhuoqing Mao, and Ming Zhang. An untold story of middleboxes in cellular networks. SIGCOMM Comput. Commun. Rev., 41(4):374–385, August 2011.

[17] Narseo Vallina-Rodriguez and Jon Crowcroft. Energy management techniques in modern smartphones. Communications Surveys Tutorials, IEEE, PP, 2012.

[18] H. Haverinen, J. Siren, and P. Eronen. Energy consumption of always-on applications in WCDMA networks. In Vehicular Technology Conference, 2007. VTC2007-Spring. IEEE 65th, pages 964–968, April 2007.

[19] Azeem J. Khan, V. Subbaraju, Archan Misra, and Srinivasan Seshan. Mitigating the true cost of advertisement-supported "free" mobile applications. In HotMobile’12, 2012.