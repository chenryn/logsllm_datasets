### HTTP Headers and URLs

- **HTTP Headers (Pages 48-49)**
  - Discusses the role of HTTP headers in web communication.
  
- **Sun Microsystems (Page 129)**
  - Provides an overview of Sun Microsystems' contributions to web technologies.

- **URLs (Page 29)**
  - Explains the structure and components of URLs, including the server address and port.

- **SVG (Scalable Vector Graphics) (Pages 83, 121-122)**
  - Describes the use of SVG for creating scalable graphics on the web.

- **Server Address in URLs (Pages 26-27)**
  - Details how the server address is specified in URLs.

- **Server Port in URLs (Page 27)**
  - Explains the role of the server port in URLs.

- **HTML5 `<canvas>` Tag (Page 122)**
  - Introduces the HTML5 `<canvas>` tag for rendering graphics.

- **Synchronous XMLHttpRequest (Page 146)**
  - Discusses the use of synchronous XMLHttpRequest for making server requests.

- **Server Response Codes (Pages 54-56)**
  - Lists and explains common HTTP response codes.

- **Server-Side Code (Pages 265-266)**
  - Outlines common problems unique to server-side code.

- **Server-Side Errors (500-599) (Page 56)**
  - Describes server-side errors and their causes.

- **Service Unavailable Error (503) (Page 56)**
  - Explains the 503 Service Unavailable error.

- **sessionStorage Object (JavaScript) (Page 148)**
  - Introduces the `sessionStorage` object for storing session-specific data.

### Syntax and Characters in URLs

- **Syntax-Delimiting Characters in URLs (Page 31)**
  - Discusses the characters used to delimit syntax in URLs.

- **"Syntax Error" Message (Page 181)**
  - Explains the "syntax error" message that may appear in retrieved file snippets.

### Server-Side and Client-Side Technologies

- **Set-Cookie Headers (Page 61)**
  - Describes the `Set-Cookie` header used for setting cookies.

- **Setters in JavaScript (Page 103)**
  - Explains the use of setters in JavaScript.

- **SGML (Standard Generalized Markup Language) (Page 9)**
  - Provides an overview of SGML and its role in web development.

- **Shared Workers (Page 258)**
  - Discusses shared workers for background processes.

- **Shockwave Flash (Page 132)**
  - Explains the use of Shockwave Flash in web applications.

- **SHODAN (Page 203)**
  - Introduces SHODAN, a search engine for internet-connected devices.

- **showModalDialog() Method (Page 217)**
  - Describes the `showModalDialog()` method for displaying modal dialogs.

- **shttp: Scheme (Page 36)**
  - Explains the `shttp:` scheme for secure HTTP.

- **Simple Mail Transfer Protocol (SMTP) (Pages 27, 44, 190)**
  - Discusses the Simple Mail Transfer Protocol for email transmission.

- **sip: Scheme (Page 36)**
  - Describes the `sip:` scheme for Session Initiation Protocol.

- **<img> Tag (HTML) (Page 72)**
  - Explains the use of the `<img>` tag for embedding images.

- **Testing for Internet Explorer (Page 112)**
  - Provides guidance on testing web applications for Internet Explorer.

- **Uniform Messaging Policy (Page 240)**
  - Discusses the Uniform Messaging Policy for web communications.

### Document Types and MIME Types

- **text/css Document Type (Page 118)**
  - Describes the `text/css` document type for CSS files.

- **text/csv Document Type (Page 198)**
  - Explains the `text/csv` document type for CSV files.

- **text/html Document Type (Page 124)**
  - Describes the `text/html` document type for HTML documents.

- **text/plain Document Type (Pages 118, 156, 200-201, 204, 212)**
  - Explains the `text/plain` document type for plain text files.

- **TEXT Token (Page 50)**
  - Discusses the TEXT token in HTTP headers.

- **<textarea> Tag (HTML) (Pages 72, 111)**
  - Explains the use of the `<textarea>` tag for multi-line text input.

### Threats and Security

- **Third-Party Applications and Protocols (Pages 36-37)**
  - Discusses protocols claimed by third-party applications.

- **Third-Party Cookies (Pages 192-194)**
  - Explains the limitations and issues with third-party cookies.

- **Threat Evolution (Pages 14-18)**
  - Describes the evolution of threats in the context of cloud computing and user security.

- **Threats Against and Protection of Internal Network (Microsoft) (Page 5n)**
  - References Microsoft's document on internal network protection.

- **Three-Step TCP Handshake (Page 56)**
  - Explains the three-step TCP handshake process.

- **TIFF File Format (Page 83)**
  - Describes the TIFF file format for images.

- **Timer in JavaScript (Page 101)**
  - Explains the use of timers in JavaScript.

- **Timing Attacks on User Interfaces (Pages 222-223)**
  - Discusses timing attacks and their impact on user interfaces.

- **TLS (Transport Layer Security) (Page 64)**
  - Explains the Transport Layer Security protocol for secure communication.

- **_top as Link Target (Page 80)**
  - Describes the use of `_top` as a link target in HTML.

- **toSource() Method (JavaScript) (Page 101)**
  - Explains the `toSource()` method in JavaScript.

- **toStaticHTML() API (Pages 250-251, 253)**
  - Describes the `toStaticHTML()` API for sanitizing HTML content.

- **toString() Method (JavaScript) (Page 101)**
  - Explains the `toString()` method in JavaScript.

- **TRACE Method (HTTP) (Page 53)**
  - Describes the TRACE method in HTTP.

- **Tracking and Unscrupulous Online Behavior (Page 193)**
  - Discusses unscrupulous online tracking practices.

- **Tragedy of the Commons Dilemma (Page 3)**
  - Explains the tragedy of the commons dilemma in the context of web security.

- **Transfer-Encoding: chunked Scheme (Page 58)**
  - Describes the `chunked` transfer encoding scheme in HTTP.

- **Transmission Control Protocol (TCP) (Page 42n)**
  - Explains the Transmission Control Protocol for reliable data transmission.

- **XMLSocket Connections (Page 156)**
  - Discusses TCP connections via the XMLSocket API.

- **Temporary Redirect Status Code (307) (Page 55)**
  - Explains the 307 Temporary Redirect status code.

### URL Handling and APIs

- **URL Handling APIs (Page 133)**
  - Describes APIs for handling URLs in web applications.

- **URL-Level Proposals (Pages 256-257)**
  - Discusses proposals for improving URL handling.

- **url(...) Pseudo-Functions (CSS) (Page 89)**
  - Explains the `url(...)` pseudo-functions in CSS.

- **User-Agent Request Header (Page 43)**
  - Describes the User-Agent request header in HTTP.

- **User Data in HTTP Cookies (Page 67)**
  - Discusses the storage of user data in HTTP cookies.

- **User Interfaces and Browser Extensions (Page 161)**
  - Explains the impact of browser extensions on user interfaces.

- **UI Spoofing Attacks and Flash (Page 132)**
  - Discusses UI spoofing attacks and their relation to Flash.

- **Unauthenticated Requests (Page 62)**
  - Explains unauthenticated requests made by browsers.

- **Unauthorized Status Error (401) (Pages 55, 62)**
  - Describes the 401 Unauthorized status error.

- **Unhandled Exception in JavaScript (Page 100)**
  - Explains the handling of unhandled exceptions in JavaScript.

- **Unicode (Page 33)**
  - Provides an overview of Unicode and its use in web technologies.

- **UTF-7 Charset (Page 78)**
  - Describes the UTF-7 character set and its use in web documents.

- **UTF-8 Charset (Pages 33, 206)**
  - Explains the UTF-8 character set and its use in HTTP headers.

- **UTF-16 Charset (Pages 78, 206)**
  - Describes the UTF-16 character set and its use in web documents.

- **UTF-32 Charset (Page 78)**
  - Explains the UTF-32 character set and its use in web documents.

### Miscellaneous

- **VBScript (Page 96)**
  - Provides an overview of VBScript and its use in web development.

- **vbscript: Scheme (Pages 37, 169-170)**
  - Describes the `vbscript:` scheme for executing VBScript.

- **view-cache: Scheme (Page 37)**
  - Explains the `view-cache:` scheme for viewing cached content.

- **View > Encoding Menu (Page 209)**
  - Describes the View > Encoding menu for changing character encoding.

- **view-source: Scheme (Page 37)**
  - Explains the `view-source:` scheme for viewing source code.

- **Visual Basic (Pages 10, 114, 130)**
  - Provides an overview of Visual Basic and its use in web development.

- **VoiceXML (Page 236)**
  - Describes VoiceXML for voice-based web applications.

- **W3C (World Wide Web Consortium) (Pages 12, 70)**
  - Introduces the World Wide Web Consortium and its role in web standards.

- **w3m (Page 10)**
  - Describes the w3m text-based web browser.

- **WAP (Wireless Application Protocol Suite) (Page 123)**
  - Explains the Wireless Application Protocol suite for mobile web applications.

- **WBXML (Page 123n)**
  - Describes the WAP Binary XML (WBXML) format.

- **WDP File Format (Page 83)**
  - Explains the WDP file format for images.

- **Web, the (See World Wide Web)**
  - Refers to the World Wide Web and its history and evolution.

- **Web 2.0 (Pages 12-13)**
  - Discusses the concept of Web 2.0 and its impact on web applications.

- **Web Applications (Pages 262-265)**
  - Describes design issues and vulnerabilities specific to web applications.

- **WebDAV (Page 54)**
  - Explains the Web Distributed Authoring and Versioning (WebDAV) protocol.

- **WebGL (Pages 131, 131n)**
  - Describes WebGL for rendering 3D graphics in web applications.

- **Web Hypertext Application Technology Working Group (WHATWG) (Page 13)**
  - Introduces the WHATWG and its role in web standards.

- **WebKit Parsing Engine (Pages 70n, 242)**
  - Explains the WebKit parsing engine used in web browsers.

- **Character Set Inheritance (Page 209)**
  - Discusses character set inheritance in web documents.

- **CORS (Cross-Origin Resource Sharing) (Pages 237, 239)**
  - Explains the CORS mechanism for cross-origin resource sharing.

- **data: URLs (Page 168)**
  - Describes the use of `data:` URLs for embedding small data items.

- **history.pushState() API (Page 256)**
  - Explains the `history.pushState()` API for manipulating the browser history.

- **Refresh Redirection to javascript: (Page 170)**
  - Discusses the use of refresh redirection to `javascript:` URLs.

- **Strict Transport Security (Page 248)**
  - Explains the Strict Transport Security (STS) policy for enforcing HTTPS.

- **Worker API (Page 258)**
  - Describes the Worker API for running background tasks.

- **XSS-Detection Logic (Page 251)**
  - Explains the logic for detecting cross-site scripting (XSS) attacks.

- **WWW-Authenticate Header (Pages 62, 63)**
  - Describes the WWW-Authenticate header for HTTP authentication.

- **wyciwyg: Scheme (Page 37)**
  - Explains the `wyciwyg:` scheme for viewing web content.

- **Web Page Prerendering (Pages 258-259)**
  - Discusses the prerendering of web pages for improved performance.

- **Web Storage (Page 148)**
  - Explains the same-origin policy mechanism for web storage.

- **WebRTC (Page 257)**
  - Describes WebRTC for real-time communication in web applications.

- **WebSocket API (Page 257)**
  - Explains the WebSocket API for bidirectional communication.

- **WebSQL API (Page 258)**
  - Describes the WebSQL API for client-side database storage.

- **Western European Code Page (ISO-8859-1) (Page 50)**
  - Explains the Western European code page and its use in web documents.

- **Xanadu (Page 9)**
  - Introduces the Xanadu project and its influence on hypertext systems.

- **XAML (Extensible Application Markup Language) (Page 134)**
  - Describes XAML for defining user interfaces in .NET applications.

- **XBAP (XML Browser Applications) (Pages 135-136)**
  - Explains XBAP for running .NET applications in the browser.

- **XBL Bindings (Pages 89-90)**
  - Describes XBL (XML Binding Language) for extending HTML elements.

- **X-Content-Type-Options Header (Page 208)**
  - Explains the `X-Content-Type-Options` header for preventing MIME type sniffing.

- **X-Content-Type-Options: nosniff Header (Page 203)**
  - Describes the `nosniff` directive for the `X-Content-Type-Options` header.

- **XDomainRequest API (Pages 239-240, 253)**
  - Explains the `XDomainRequest` API for cross-domain requests.

- **X-Frame-Options Header (Pages 179-180, 243)**
  - Describes the `X-Frame-Options` header for controlling frame navigation.

- **XHTML (Page 12)**
  - Provides an overview of XHTML and its use in web development.

- **HTML Entities (Page 78)**
  - Explains the use of HTML entities for special characters.

- **Minimal Fault-Tolerance of Parser (Page 73)**
  - Discusses the minimal fault-tolerance of HTML parsers.

- **Named Entities (Page 76)**
  - Describes named entities in HTML.

- **XML (Extensible Markup Language) (Pages 119-124)**
  - Explains the use of XML in web applications.

- **Binary-Only Serialization (Page 123n)**
  - Describes binary-only serialization for XML.

- **XML Blocks (Pages 72, 78, 250)**
  - Explains the use of XML blocks in web documents.

- **XMLHttpRequest API (Pages 12, 54, 210, 236-238)**
  - Describes the `XMLHttpRequest` API for making server requests.

- **httponly Cookies (Page 150)**
  - Explains the `httponly` flag for cookies.

- **Same-Origin Policy Mechanism (Pages 146-148)**
  - Discusses the same-origin policy mechanism for `XMLHttpRequest`.

- **xmlns Namespace (Pages 72, 119)**
  - Explains the `xmlns` namespace in XML and HTML.

- **<xml> Directive (Page 88)**
  - Describes the `<xml>` directive for embedding XML in HTML.

- **XML User Interface Language (XUL) (Pages 122-123)**
  - Explains XUL for creating user interfaces in Mozilla applications.

- **XMLSocket (Page 156)**
  - Describes the `XMLSocket` API for TCP connections.

- **<xml> Tag (Page 72)**
  - Explains the use of the `<xml>` tag in HTML.

- **XSRF (Cross-Site Request Forgery) (Pages 84, 190, 262)**
  - Discusses XSRF and its exploitation in web applications.

- **Login Forms and XSRF (Pages 145-146)**
  - Explains the relationship between login forms and XSRF.

- **XSS (Cross-Site Scripting) (Pages 71, 262)**
  - Describes XSS and its exploitation in web applications.

- **Password Managers and XSS Bugs (Page 228)**
  - Discusses the impact of XSS bugs on password managers.

- **Filtering XSS (Pages 251-253)**
  - Explains techniques for filtering XSS attacks.

- **XXE (External XML Entity) Attack (Page 76)**
  - Describes the XXE attack and its prevention.

- **ZIP Files (Page 37)**
  - Explains the extraction of content from ZIP files.

- **Zone.Identifier Metadata (Page 231)**
  - Describes the `Zone.Identifier` metadata in Internet Explorer.

- **Zone Model for Internet Explorer (Pages 229-231)**
  - Explains the zone model for security in Internet Explorer.

### Updates and Additional Information

- **Visit http://nostarch.com/tangledweb.htm for updates, errata, and other information.**

### More No-Nonsense Books from No Starch Press

- **A Bug Hunter’s Diary** by Tobias Klein
- **Hacking: The Art of Exploitation, 2nd Edition** by Jon Erickson
- **The IDA Pro Book, 2nd Edition** by Chris Eagle
- **Metasploit: The Penetration Tester’s Guide** by David Kennedy, Jim O’Gorman, Devon Kearns, and Mati Aharoni
- **Practical Packet Analysis, 2nd Edition** by Chris Sanders
- **Practical Malware Analysis** by Michael Sikorski and Andrew Honig

### About the Author

- **Michal Zalewski** is an internationally recognized information security expert with a long track record of cutting-edge research. He is credited with discovering hundreds of notable security vulnerabilities and frequently appears on lists of the most influential security experts. He is the author of *Silence on the Wire* (No Starch Press), Google’s “Browser Security Handbook,” and numerous important research papers.

- **ISBN 978-1-59327-288-3**
- **$49.95 ($52.95 CDN)**
- **Shelve In: COMPUTERS/SECURITY**

- **THE FINEST IN GEEK ENTERTAINMENT™**
- **“I LIE FLAT.” This book uses RepKover—a durable binding that won’t snap shut.**
- **www.nostarch.com**

- **Michal Zalewski**