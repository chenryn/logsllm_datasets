# Zero-Knowledge Proofs and Signatures from Symmetric-Key Primitives

**References:**

1. **Zero-Knowledge and Signatures from Symmetric-Key Primitives.**
   - *In ACM CCS, October 2017.*

2. **A. Chiesa, M. A. Forbes, and N. Spooner.**
   - *A Zero Knowledge Sumcheck and Its Applications. CoRR, abs/1704.02086, 2017.*

3. **A. Chiesa, E. Tromer, and M. Virza.**
   - *Cluster Computing in Zero Knowledge. In EUROCRYPT, April 2015.*

4. **G. Cormode, M. Mitzenmacher, and J. Thaler.**
   - *Practical Verified Computation with Streaming Interactive Proofs. In ITCS, January 2012.*

5. **C. Costello, C. Fournet, J. Howell, M. Kohlweiss, B. Kreuter, M. Naehrig, B. Parno, and S. Zahur.**
   - *Geppetto: Versatile Verifiable Computation. In IEEE S&P, May 2015.*

6. **R. Cramer and I. Damgård.**
   - *Zero-Knowledge Proofs for Finite Field Arithmetic, or: Can Zero-Knowledge Be for Free? In CRYPTO, August 1998.*

7. **Debian, the Universal Operating System.**
   - *https://www.debian.org.*

8. **A. Delignat-Lavaud, C. Fournet, M. Kohlweiss, and B. Parno.**
   - *Cinderella: Turning Shabby X.509 Certificates into Elegant Anonymous Credentials with the Magic of Verifiable Computation. In IEEE S&P, May 2016.*

9. **D. Dolev, C. Dwork, and M. Naor.**
   - *Non-Malleable Cryptography. In STOC, 1991.*

10. **A. Fiat and A. Shamir.**
    - *How to Prove Yourself: Practical Solutions to Identification and Signature Problems. In CRYPTO, August 1986.*

11. **D. Fiore, C. Fournet, E. Ghosh, M. Kohlweiss, O. Ohrimenko, and B. Parno.**
    - *Hash First, Argue Later: Adaptive Verifiable Computations on Outsourced Data. In ACM CCS, October 2016.*

12. **D. Fiore, R. Gennaro, and V. Pastro.**
    - *Efficiently Verifiable Computation on Encrypted Data. In ACM CCS, November 2014.*

13. **M. Fredrikson and B. Livshits.**
    - *ZØ: An Optimizing Distributing Zero-Knowledge Compiler. In USENIX Security, August 2014.*

14. **E. Fujisaki and T. Okamoto.**
    - *Statistical Zero-Knowledge Protocols to Prove Modular Polynomial Relations. In CRYPTO, August 1997.*

15. **R. Gennaro, C. Gentry, B. Parno, and M. Raykova.**
    - *Quadratic Span Programs and Succinct NIZKs without PCPs. In EUROCRYPT, 2013.*

16. **I. Giacomelli, J. Madsen, and C. Orlandi.**
    - *ZKBoo: Faster Zero-Knowledge for Boolean Circuits. In USENIX Security, August 2016.*

17. **O. Goldreich, S. Micali, and A. Wigderson.**
    - *Proofs that Yield Nothing but Their Validity or All Languages in NP Have Zero-Knowledge Proof Systems. J. ACM, 38(3):690–728, 1991.*

18. **S. Goldwasser, Y. T. Kalai, and G. N. Rothblum.**
    - *Delegating Computation: Interactive Proofs for Muggles. J. ACM, 62(4):27:1–27:64, August 2015. Preliminary version STOC 2008.*

19. **S. Goldwasser, S. Micali, and C. Rackoff.**
    - *The Knowledge Complexity of Interactive Proof Systems. SIAM J. Computing, 18(1):186–208, 1989.*

20. **J. Groth.**
    - *Simulation-Sound NIZK Proofs for a Practical Language and Constant Size Group Signatures. In ASIACRYPT, December 2006.*

21. **J. Groth.**
    - *Linear Algebra with Sub-Linear Zero-Knowledge Arguments. In EUROCRYPT, April 2008.*

22. **We have released Hyrax’s source code and our BCCGP-sqrt and Bulletproofs implementations as open-source software [58].**

**Acknowledgments:**

This work was funded by DARPA grant HR0011-15-2-0047 and NSF grants CNS-1423249, TWC-1646671, and TWC-1664445; and by Nest Labs and a Google Research Fellowship. Justin Thaler was supported by a Research Seed Grant from Georgetown University’s Massive Data Institute. The authors thank Muthu Venkitasubramaniam for help with Ligero, and Eli Ben-Sasson, Iddo Bentov, and Michael Riabzev for help with libSTARK.

**References (Continued):**

[1] **S. Ames, C. Hazay, Y. Ishai, and M. Venkitasubramaniam.**
   - *Ligero: Lightweight Sublinear Arguments Without a Trusted Setup. In ACM CCS, October 2017.*

[2] **D. F. Aranha, P. S. L. M. Barreto, G. C. C. F. Pereira, and J. E. Ricardini.**
   - *A Note on High-Security General-Purpose Elliptic Curves. Cryptology ePrint Archive, Report 2013/647, 2013.*

[3] **AWS EC2.**
   - *https://aws.amazon.com/ec2/instance-types/.*

[4] **M. Backes, M. Barbosa, D. Fiore, and R. M. Reischuk.**
   - *ADSNARK: Nearly Practical and Privacy-Preserving Proofs on Authenticated Data. In IEEE S&P, May 2015.*

[5] **M. Backes, D. Fiore, and R. M. Reischuk.**
   - *Verifiable Delegation of Computation on Outsourced Data. In ACM CCS, November 2013.*

[6] **S. Bayer and J. Groth.**
   - *Efficient Zero-Knowledge Argument for Correctness of a Shuffle. In EUROCRYPT, April 2012.*

[7] **M. Bellare and P. Rogaway.**
   - *Random Oracles Are Practical: A Paradigm for Designing Efficient Protocols. In ACM CCS, November 1993.*

[8] **M. Ben-Or, O. Goldreich, S. Goldwasser, J. Håstad, J. Kilian, S. Micali, and P. Rogaway.**
   - *Everything Provable is Provable in Zero-Knowledge. In CRYPTO, August 1990.*

[9] **E. Ben-Sasson, I. Ben-Tov, A. Chiesa, A. Gabizon, D. Genkin, M. Hamilis, E. Pergament, M. Riabzev, M. Silberstein, E. Tromer, and M. Virza.**
   - *Computational Integrity with a Public Random String from Quasi-Linear PCPs. In EUROCRYPT, April 2017.*

[10] **E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev.**
    - *Fast Reed-Solomon Interactive Oracle Proofs of Proximity. Electronic Colloquium on Computational Complexity (ECCC), 24:134, 2017.*

[11] **E. Ben-Sasson, I. Bentov, Y. Horesh, and M. Riabzev.**
    - *Scalable, Transparent, and Post-Quantum Secure Computational Integrity. Cryptology ePrint Archive, Report 2018/046, 2018.*

[12] **E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and M. Virza.**
    - *Decentralized Anonymous Payments from Bitcoin. In IEEE S&P, May 2014.*

[13] **E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and M. Virza.**
    - *SNARKs for C: Verifying Program Executions Succinctly and in Zero Knowledge. In CRYPTO, August 2013.*

[14] **E. Ben-Sasson, A. Chiesa, and N. Spooner.**
    - *Interactive Oracle Proofs. In IACR TCC, October 2016.*

[15] **E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza.**
    - *Scalable Zero Knowledge via Cycles of Elliptic Curves. In CRYPTO, August 2014.*

[16] **E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza.**
    - *Succinct Non-Interactive Zero Knowledge for a von Neumann Architecture. In USENIX Security, August 2014.*

[17] **E. Ben-Sasson and M. Sudan.**
    - *Short PCPs with Polylog Query Complexity. SIAM J. Computing, 38(2):551–607, May 2008.*

[18] **D. J. Bernstein.**
    - *Curve25519: New Diffie-Hellman Speed Records. In PKC, April 2006.*

[19] **D. J. Bernstein, J. Doumen, T. Lange, and J.-J. Oosterwijk.**
    - *Faster Batch Forgery Identification. December 2012.*

[20] **N. Bitansky, R. Canetti, A. Chiesa, and E. Tromer.**
    - *From Extractable Collision Resistance to Succinct Non-Interactive Arguments of Knowledge, and Back Again. In ITCS, January 2012.*

[53] **J. Groth.**
    - *Short Pairing-Based Non-Interactive Zero-Knowledge Arguments. In CRYPTO, August 2009.*

[54] **J. Groth and Y. Ishai.**
    - *Sub-Linear Zero-Knowledge Argument for Correctness of a Shuffle. In EUROCRYPT, April 2008.*

[55] **J. Groth and A. Sahai.**
    - *Efficient Non-Interactive Proof Systems for Bilinear Groups. In EUROCRYPT, April 2008.*

[56] **J. Håstad, R. Impagliazzo, L. A. Levin, and M. Luby.**
    - *A Pseudorandom Generator from Any One-Way Function. SIAM J. Computing, 28(4):1364–1396, 1999.*

[57] **S. Hohenberger, S. Myers, R. Pass, and abhi shelat.**
    - *ANONIZE: A Large-Scale Anonymous Survey System. In IEEE S&P, May 2014.*

[58] **Hyrax Reference Implementation.**
    - *https://github.com/hyraxZK.*

[59] **Y. Ishai, E. Kushilevitz, and R. Ostrovsky.**
    - *Efficient Arguments Without Short PCPs. In IEEE CCC, June 2007.*

[60] **Y. Ishai, E. Kushilevitz, R. Ostrovsky, and A. Sahai.**
    - *Zero-Knowledge from Secure Multiparty Computation. In STOC, 2007.*

[61] **A. Kate, G. M. Zaverucha, and I. Goldberg.**
    - *Constant-Size Commitments to Polynomials and Their Applications. In ASIACRYPT, December 2010.*

[62] **J. Kilian.**
    - *A Note on Efficient Zero-Knowledge Proofs and Arguments (Extended Abstract). In STOC, May 1992.*

[63] **J. Kilian.**
    - *Improved Efficient Arguments (Preliminary Version). In CRYPTO, pages 311–324, August 1995.*

[64] **A. E. Kosba, D. Papadopoulos, C. Papamanthou, M. F. Sayed, E. Shi, and N. Triandopoulos.**
    - *TrueSet: Faster Verifiable Set Computations. In USENIX Security, August 2014.*

[65] **B. Libert, S. Ramanna, and M. Yung.**
    - *Functional Commitment Schemes: From Polynomial Commitments to Pairing-Based Accumulators from Simple Assumptions. In ICALP, July 2016.*

[66] **libsnark.**
    - *https://github.com/scipr-lab/libsnark.*

[67] **libSTARK.**
    - *https://github.com/elibensasson/libSTARK.*

[68] **Y. Lindell.**
    - *Parallel Coin-Tossing and Constant-Round Secure Two-Party Computation. J. Cryptology, 16(3):143–184, 2003.*

[69] **H. Lipmaa.**
    - *Progression-Free Sets and Sublinear Pairing-Based Non-Interactive Zero-Knowledge Arguments. In IACR TCC, 2011.*

[70] **C. Lund, L. Fortnow, H. J. Karloff, and N. Nisan.**
    - *Algebraic Methods for Interactive Proof Systems. J. ACM, 39(4):859–868, October 1992.*

[71] **U. Maurer.**
    - *Unifying Zero-Knowledge Proofs of Knowledge. In AFRICACRYPT, June 2009.*

[72] **R. C. Merkle.**
    - *A Digital Signature Based on a Conventional Encryption Function. In CRYPTO, August 1987.*

[73] **S. Micali.**
    - *Computationally Sound Proofs. SIAM J. Computing, 30(4):1253–1298, 2000.*

[74] **MIRACL Crypto SDK.**
    - *https://libraries.docs.miracl.com.*

[75] **M. Naor.**
    - *Bit Commitment Using Pseudorandomness. J. Cryptology, 4(2):151–158, 1991.*

[76] **A. Naveh and E. Tromer.**
    - *PhotoProof: Cryptographic Image Authentication for Any Set of Permissible Transformations. In IEEE S&P, May 2016.*

[77] **A. V. Oppenheim and A. S. Willsky.**
    - *Signals and Systems. Pearson, 1996.*

[78] **C. Papamanthou, E. Shi, and R. Tamassia.**
    - *Signatures of Correct Computation. In IACR TCC, March 2013.*

[79] **B. Parno, C. Gentry, J. Howell, and M. Raykova.**
    - *Pinocchio: Nearly Practical Verifiable Computation. In IEEE S&P, May 2013.*

[80] **T. P. Pedersen.**
    - *Non-Interactive and Information-Theoretic Secure Verifiable Secret Sharing. In CRYPTO, August 1991.*

[81] **Pepper Project.**
    - *https://github.com/pepper-project.*

[82] **Reference Implementation of the Picnic Post-Quantum Signature Scheme.**
    - *https://github.com/Microsoft/Picnic.*

[83] **N. Pippenger.**
    - *On the Evaluation of Powers and Monomials. SIAM J. Computing, 9(2):230–250, 1980.*

[84] **A. Poelstra.**
    - *Updates on Confidential Transactions Efficiency. Sent to the bitcoin-dev email list. https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015346.html.*

[85] **D. Pointcheval and J. Stern.**
    - *Security Proofs for Signature Schemes. In EUROCRYPT, May 1996.*

[86] **PyPy.**
    - *https://pypy.org.*

[87] **O. Reingold, G. N. Rothblum, and R. D. Rothblum.**
    - *Constant-Round Interactive Proofs for Delegating Computation. In STOC, June 2016.*

[88] **SageMath.**
    - *http://www.sagemath.org.*

[89] **A. Sahai.**
    - *Non-Malleable Non-Interactive Zero Knowledge and Adaptive Chosen-Ciphertext Security. In FOCS, October 1999.*

[90] **C. P. Schnorr.**
    - *Efficient Signature Generation by Smart Cards. J. Cryptology, 4(3):161–174, 1991.*

[91] **S. Setty, B. Braun, V. Vu, A. J. Blumberg, B. Parno, and M. Walfish.**
    - *Resolving the Conflict Between Generality and Plausibility in Verified Computation. In EuroSys, April 2013.*

[92] **S. Setty, R. McPherson, A. J. Blumberg, and M. Walfish.**
    - *Making Argument Systems for Outsourced Computation Practical (Sometimes). In NDSS, February 2012.*

[93] **S. Setty, V. Vu, N. Panpalia, B. Braun, A. J. Blumberg, and M. Walfish.**
    - *Taking Proof-Based Verified Computation a Few Steps Closer to Practicality. In USENIX Security, August 2012.*

[94] **V. Shoup.**
    - *NTL: A Library for Doing Number Theory. http://www.shoup.net/ntl.*

[95] **E. G. Straus.**
    - *Addition Chains of Vectors (Problem 5125). Amer. Math. Monthly, 70:806–808, 1964.*

[96] **O. Tange.**
    - *GNU Parallel: The Command-Line Power Tool. ;login: The USENIX Magazine, 36(1):42–47, 2011.*

[97] **J. Thaler.**
    - *Time-Optimal Interactive Proofs for Circuit Evaluation. In CRYPTO, August 2013. Full version: https://arxiv.org/abs/1304.3812.*

[98] **J. Thaler.**
    - *A Note on the GKR Protocol. http://people.seas.harvard.edu/~jthaler/GKRNote.pdf, 2015.*

[99] **J. Thaler, M. Roberts, M. Mitzenmacher, and H. Pfister.**
    - *Verifiable Computation with Massively Parallel Interactive Proofs. In USENIX HotCloud Workshop, June 2012.*

[100] **K. Turkowski.**
     - *Filters for Common Resampling Tasks. In Graphics Gems, pages 147–165. Academic Press, 1990.*

[101] **M. Venkitasubramaniam.**
     - *Personal Communication, 2018.*

[102] **V. Vu, S. Setty, A. J. Blumberg, and M. Walfish.**
     - *A Hybrid Architecture for Interactive Verifiable Computation. In IEEE S&P, May 2013.*

[103] **R. S. Wahby, M. Howald, S. Garg, abhi shelat, and M. Walfish.**
     - *Verifiable ASICs. In IEEE S&P, May 2016.*

[104] **R. S. Wahby, Y. Ji, A. J. Blumberg, abhi shelat, J. Thaler, M. Walfish, and T. Wies.**
     - *Full Accounting for Verifiable Outsourcing. In ACM CCS, October 2017. Full version: https://eprint.iacr.org/2017/242.*

[105] **R. S. Wahby, S. Setty, Z. Ren, A. J. Blumberg, and M. Walfish.**
     - *Efficient RAM and Control Flow in Verifiable Outsourced Computation. In NDSS, February 2015.*

[106] **R. S. Wahby, I. Tzialla, abhi shelat, J. Thaler, and M. Walfish.**
     - *Doubly Efficient zkSNARKs Without Trusted Setup. Cryptology ePrint Archive, Report 2017/1132, 2017.*

[107] **ZCash.**
     - *https://z.cash.*

[108] **Y. Zhang, D. Genkin, J. Katz, D. Papadopoulos, and C. Papamanthou.**
     - *vSQL: Verifying Arbitrary SQL Queries Over Dynamic Outsourced Databases. In IEEE S&P, May 2017.*

[109] **Y. Zhang, D. Genkin, J. Katz, D. Papadopoulos, and C. Papamanthou.**
     - *A Zero-Knowledge Version of vSQL. Cryptology ePrint Archive, Report 2017/1146, 2017.*

[110] **Y. Zhang, D. Genkin, J. Katz, D. Papadopoulos, and C. Papamanthou.**
     - *vRAM: Faster Verifiable RAM with Program-Independent Preprocessing. In IEEE S&P, May 2018.*

[111] **ZKBoo.**
     - *https://github.com/Sobuno/ZKBoo.*

### Instantiations of Commitment Schemes

In this section, we review the Pedersen commitment scheme [80] (Figure 4) and related protocols.

**Theorem 7 ([80]):** The Pedersen commitment scheme is a non-interactive commitment scheme assuming the hardness of the discrete logarithm problem in \( G \).

**Knowledge of Opening:** Schnorr [90] shows how \( P \) can give a zero-knowledge proof that it knows an \( x, r \) such that \( C_0 = \text{Com}(x; r) \).

**Theorem 8 ([90]):** The proof-of-opening is complete, honest-verifier perfect zero-knowledge, and special sound under the discrete log assumption.

**Commitment to the Same Value:** Using similar ideas, \( P \) can show in zero-knowledge that \( C_1 = \text{Com}(v_1; s_1) \) and \( C_2 = \text{Com}(v_2; s_2) \) are commitments to the same value, i.e., \( v_1 = v_2 \). Given \( C_u = \text{Com}(u; s_u) \) and a value \( v \), \( P \) can also convince \( V \) that \( u = v \).

**Theorem 9 (Folklore):** The proof-of-equality is complete, honest-verifier perfect zero-knowledge, and special sound under the discrete log assumption.

### A.1 Proving a Product Relationship

Figure 5 gives a protocol in which \( P \) convinces \( V \) that it has openings to three Pedersen commitments having a product relationship. This is folklore; for example, Maurer [71] describes a very similar protocol.

**Theorem 10:** Given commitments \( X, Y, \) and \( Z \), the proof-of-product proves that \( Z \) is a commitment to the product of the values committed in \( X \) and \( Y \). This protocol is complete, honest-verifier perfect zero-knowledge, and special sound under the discrete log assumption.

The proof of Theorem 10 is standard; we leave it to the full version [106] because of space constraints.

**Proof-of-Dot-Product (\(\xi, \tau, \vec{a}\))**

**Inputs:**
- Commitments \(\xi = \text{Com}(\vec{x}; r_\xi)\), \(\tau = \text{Com}(y; r_\tau)\), and a vector \(\vec{a}\), where \(\vec{x}, \vec{a} \in \mathbb{Z}^n\).
- \( P \) knows \(\vec{x}, r_\xi, y, \) and \( r_\tau \).

1. \( P \) samples the vector \(\vec{d} \leftarrow \{1, \ldots, q_G\}^n\) and the values \( q_G \) and \( y = \langle \vec{x}, \vec{a} \rangle \in \mathbb{Z}_{q_G} \).

---

This optimized version of the text is more structured, clear, and professional, making it easier to read and understand.