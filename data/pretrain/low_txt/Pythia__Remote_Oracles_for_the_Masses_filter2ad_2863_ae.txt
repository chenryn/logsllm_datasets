### 7.3 Attack Limitations
Although our side-channel attacks are fast, accurate, and can be launched entirely from the network, they do have several limitations. First, the granularity of Pythia attacks (and therefore the information leakage) is at the memory page level. Pythia currently cannot differentiate between two victim accesses that target the same memory page. Second, Pythia can only determine if a data entity on the server has been accessed, but it cannot identify which client machine(s) performed the access. Third, our MR-based attacks require access to a large number of Memory Regions (MRs), and PTE-based attacks necessitate access to substantial memory spaces. Finally, these attacks consume network bandwidth and can potentially be detected through network monitoring.

### 7.4 Other RDMA-Based Attacks
Pythia serves as a starting point for designing other types of RDMA-based attacks. For example, similar to Pythia's EVICT+RELOAD attacks, it is possible to launch PRIME+PROBE attacks from the network by exploiting the MR or PTE side channels. The MR and PTE side channels we established can also be used as covert channels. We implemented a basic covert-channel attack using one EVICT+RELOAD cycle to transmit one bit, achieving a sending rate of 20 Kbps with PythiaPTEFull.

### 8 Related Work

#### Single-Node Side-Channel Attacks
In recent years, numerous attacks that exploit various hardware features to establish side channels have been proposed. CPU-cache-based side-channel attacks, such as PRIME+PROBE [1–4, 42, 59, 75, 78, 90], EVICT+RELOAD [30], FLUSH+RELOAD [86], and FLUSH+FLUSH [30, 78], can leak a victim’s memory access patterns at a fine granularity. These CPU-cache-based side channels are also key enabling factors in attacks like Meltdown [41], Spectre [39], and Foreshadow [17]. In addition to CPU caches, Translation Lookaside Buffers (TLBs) [28] and port contention [13] also expose hardware-based side channels. These side-channel attacks raise significant concerns in cloud environments where one tenant can steal information from another when they share the same physical resources [79, 89–91] or the same service [33]. However, all these single-node side-channel attacks require the attacker to run on the same machine as the victim. Pythia, in contrast, is a remote side-channel attack that can be launched entirely from a separate machine.

#### Remote Side-Channel Attacks
Several remote side-channel attacks exploit TCP sequence numbers to hijack connections [18, 61, 62]. Another line of work relies on traffic analysis to extract sensitive information [27, 37]. Brumley et al. performed a timing-based attack on OpenSSL’s ladder implementation to obtain the private key of a TLS server [16]. Cock et al. presented an empirical study of remote timing channels on microkernels [20]. NetSpectre [66] introduced an access-driven remote EVICT+RELOAD cache attack. Weinberg et al. combined CSS and JavaScript to remotely sniff victims’ browsing patterns [84]. Unlike previous remote side-channel attacks, Pythia targets the RDMA network. Moreover, Pythia exploits RNIC hardware features to establish timing-based side channels, while previous remote side channels exploit network protocols or software features. To our knowledge, Throwhammer [71] is the only other attack related to RDMA, but it simply uses RDMA network requests to launch a Rowhammer attack and does not explore or exploit vulnerabilities in the RDMA technology itself.

#### Mitigations to Side-Channel Attacks
Various defense mechanisms have been proposed to combat CPU cache side-channel attacks, both in hardware [23, 36, 58, 81, 82] and software [38, 43, 69, 92, 94]. Unfortunately, none of the existing defense mechanisms can be directly applied to RDMA-based side-channel attacks. We propose a set of new mitigations specifically targeting RDMA-based side-channel attacks.

### 9 Conclusion
This paper presents Pythia, the first set of side-channel attacks on RDMA-based systems. We reverse-engineered the internal data structures of current RDMA systems and leveraged this information to enhance our attack. Pythia can be launched completely from a normal client machine to steal access patterns of victims on other machines. We evaluated Pythia in laboratory settings, real software such as Crail, and real data centers to demonstrate its capabilities and real-world impact. Pythia is fast, accurate, and can hide its traces from victims and the server.

### Acknowledgments
We would like to thank the anonymous reviewers for their valuable feedback and comments, which have significantly improved the content and presentation of this paper. We are also grateful to Ahmad Atamlh, Noam Bloch, Brandon Hathaway, Yuval Itkin, Ariel Levanon, Alex Polak, Randy Splinter, and Patrick Stuedi for their feedback during our responsible disclosure to Mellanox and the Crail team.

This material is based upon work supported by the National Science Foundation under Grant NSF 1719215. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF or other institutions.

### References
[1] Onur Aciiçmez. Yet another microarchitectural attack: Exploiting i-cache. In Proceedings of the 2007 ACM Workshop on Computer Security Architecture (CSAW '07), Fairfax, VA, USA, November 2007.
[2] Onur Aciiçmez, Billy Bob Brumley, and Philipp Grabher. New results on instruction cache attacks. In Proceedings of the 12th International Conference on Cryptographic Hardware and Embedded Systems (CHES '10), Santa Barbara, CA, USA, August 2010.
[3] Onur Aciiçmez, Çetin Kaya Koç, and Jean-Pierre Seifert. On the power of simple branch prediction analysis. In Proceedings of the 2Nd ACM Symposium on Information, Computer and Communications Security (ASIACCS '07), Singapore, March 2007.
[4] Onur Aciiçmez and Werner Schindler. A vulnerability in RSA implementations due to instruction cache analysis and its demonstration on OpenSSL. In Proceedings of the 2008 The Cryptographers’ Track at the RSA Conference on Topics in Cryptology (CT-RSA '08), San Francisco, CA, USA, April 2008.
[5] Marcos K. Aguilera, Nadav Amit, Irina Calciu, Xavier Deguillard, Jayneel Gandhi, Stanko Novakovic, Arun Ramanathan, Pratap Subrahmanyam, Lalith Suresh, Kiran Tati, Rajesh Venkatasubramanian, and Michael Wei. Remote regions: A simple abstraction for remote memory. In Proceedings of the 2018 USENIX Conference on Usenix Annual Technical Conference (ATC '18), Boston, MA, USA, July 2018.
[6] Alibaba Cloud. Super computing cluster. https://www.alibabacloud.com/product/scc, 2018.
[7] Apache. Crail: High-performance distributed data store. https://crail.incubator.apache.org/, 2018.
[8] InfiniBand Trade Association. InfiniBand Architecture Annex A 16: RoCE. https://cw.infinibandta.org/document/dl/7148, April 2010.
[9] InfiniBand Trade Association. InfiniBand Architecture Annex A 16: RoCEv2. https://cw.infinibandta.org/document/dl/7148, September 2014.
[10] InfiniBand Trade Association. InfiniBand Architecture Volume 1 – Architecture Specification, Release 1.3. https://cw.infinibandta.org/document/dl/7859, March 2015.
[11] InfiniBand Trade Association. InfiniBand Architecture Volume 2 – Architecture Specification, Release 1.3.1. https://cw.infinibandta.org/document/dl/8125, November 2016.
[12] Berk Atikoglu, Yuehai Xu, Eitan Frachtenberg, Song Jiang, and Mike Paleczny. Workload Analysis of a Large-scale Key-value Store. In Proceedings of the 12th ACM SIGMETRICS/PERFORMANCE Joint International Conference on Measurement and Modeling of Computer Systems (SIGMETRICS '12), London, United Kingdom, June 2012.
[13] Atri Bhattacharyya, Alexandra Sandulescu, Matthias Neugschwandtner, Alessandro Sorniotti, Babak Falsafi, Mathias Payer, and Anil Kurmus. Smotherspectre: Exploiting speculative execution through port contention. https://arxiv.org/abs/1903.01843, 2018.
[14] Carsten Binnig, Andrew Crotty, Alex Galakatos, Tim Kraska, and Erfan Zamanian. The End of Slow Networks: It’s Time for a Redesign. Proceedings of the VLDB Endowment, 9(7):528–539, 2016.
[15] Rajarshi Biswas, Xiaoyi Lu, and Dhabaleswar Panda. Accelerating TensorFlow with adaptive RDMA-based gRPC. In 25th IEEE International Conference on High Performance Computing, Data, and Analytics (HiPC '18), Bengaluru, India, December 2018.
[16] Billy Bob Brumley and Nicola Tuveri. Remote timing attacks are still practical. In Proceedings of the 16th European Conference on Research in Computer Security (ESORICS '11), Leuven, Belgium, September 2011.
[17] Jo Van Bulck, Marina Minkin, Ofer Weisse, Daniel Genkin, Baris Kasikci, Frank Piessens, Mark Silberstein, Thomas F. Wenisch, Yuval Yarom, and Raoul Strackx. Foreshadow: Extracting the keys to the Intel SGX kingdom with transient out-of-order execution. In Proceedings of the 27th USENIX Conference on Security Symposium (SEC '18), Baltimore, MD, USA, August 2018.
[18] Yue Cao, Zhiyun Qian, Zhongjie Wang, Tuan Dao, Srikanth V. Krishnamurthy, and Lisa M. Marvel. Off-path TCP exploits: Global rate limit considered dangerous. In Proceedings of the 25th USENIX Conference on Security Symposium (SEC '16), Austin, TX, USA, August 2016.
[19] Yanzhe Chen, Xingda Wei, Jiaxin Shi, Rong Chen, and Haibo Chen. Fast and general distributed transactions using RDMA and HTM. In Proceedings of the Eleventh European Conference on Computer Systems (EUROSYS '16), London, UK, April 2016.
[20] David Cock, Qian Ge, Toby Murray, and Gernot Heiser. The last mile: An empirical study of timing channels on sel4. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14), Scottsdale, Arizona, USA, November 2014.
[21] Brian F. Cooper, Adam Silberstein, Erwin Tam, Raghu Ramakrishnan, and Russell Sears. Benchmarking Cloud Serving Systems with YCSB. In Proceedings of the 1st ACM Symposium on Cloud Computing (SoCC '10), New York, New York, June 2010.
[22] Thomas Cover and P. Hart. Nearest neighbor pattern classification. IEEE Transactions on Information Theory, 13(1):21–27, September 1967.
[23] Leonid Domnitser, Aamer Jaleel, Jason Loew, Nael Abu-Ghazaleh, and Dmitry Ponomarev. Non-monopolizable caches: Low-complexity mitigation of cache side channel attacks. ACM Transactions on Architecture and Code Optimization, 8(4):35:1–35:21, January 2012.
[24] Aleksandar Dragojević, Dushyanth Narayanan, Orion Hodson, and Miguel Castro. FaRM: Fast Remote Memory. In Proceedings of the 11th USENIX Conference on Networked Systems Design and Implementation (NSDI '14), Seattle, WA, USA, April 2014.
[25] Aleksandar Dragojević, Dushyanth Narayanan, Edmund B. Nightingale, Matthew Renzelmann, Alex Shamis, Anirudh Badam, and Miguel Castro. No compromises: Distributed transactions with consistency, availability, and performance. In Proceedings of the 25th Symposium on Operating Systems Principles (SOSP '15), Monterey, CA, USA, October 2015.
[26] Daniel Genkin, Lev Pachmanov, Eran Tromer, and Yuval Yarom. Drive-by key-extraction cache attacks from portable code. In Applied Cryptography and Network Security - 16th International Conference (ACNS '18), Leuven, Belgium, July 2018.
[27] Xun Gong, Nikita Borisov, Negar Kiyavash, and Nabil Schear. Website detection using remote traffic analysis. In Privacy Enhancing Technologies - 12th International Symposium (PETS '12), Vigo, Spain, July 2012.
[28] Ben Gras, Kaveh Razavi, Herbert Bos, and Cristiano Giuffrida. Translation leak-aside buffer: Defeating cache side-channel protections with TLB attacks. In Proceedings of the 27th USENIX Conference on Security Symposium (SEC '18), Baltimore, MD, USA, August 2018.
[29] Daniel Gruss, Clémentine Maurice, Klaus Wagner, and Stefan Mangard. Flush+Flush: A fast and stealthy cache attack. In Proceedings of the 13th International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment (DIMVA '16), San Sebastián, Spain, July 2016.
[30] Daniel Gruss, Raphael Spreitzer, and Stefan Mangard. Cache template attacks: Automating attacks on inclusive last-level caches. In Proceedings of the 24th USENIX Conference on Security Symposium (SEC '15), Washington, D.C., USA, August 2015.
[31] Juncheng Gu, Youngmoon Lee, Yiwen Zhang, Mosharaf Chowdhury, and Kang G. Shin. Efficient memory disaggregation with Infiniswap. In Proceedings of the 14th USENIX Conference on Networked Systems Design and Implementation (NSDI '17), Boston, MA, USA, March 2017.
[32] Chuanxiong Guo, Haitao Wu, Zhong Deng, Gaurav Soni, Jianxi Ye, Jitu Padhye, and Marina Lipshteyn. RDMA over commodity Ethernet at scale. In Proceedings of the 2016 ACM SIGCOMM Conference (SIGCOMM '16), Florianopolis, Brazil, August 2016.
[33] Danny Harnik, Benny Pinkas, and Alexandra Shulman-Peleg. Side channels in cloud services: Deduplication in cloud storage. IEEE Security and Privacy, 8(6):40–47, November 2010.
[34] Wei Huang, Gopalakrishnan Santhanaraman, Hyun-Wook Jin, Qi Gao, and Dhabaleswar K. Panda. Design of High Performance MVAPICH2: MPI2 over InfiniBand. In Sixth IEEE International Symposium on Cluster Computing and the Grid (CCGRID '06), Rio de Janeiro, Brazil, May 2006.
[35] Intel. Intel Performance Counter Monitor, 2012. http://www.intel.com/software/pcm.
[36] Intel. Improving Real-Time Performance by Utilizing Cache Allocation Technology. https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/cache-allocation-technology-white-paper.pdf, 2015.
[37] Rob Jansen, Marc Juarez, Rafa Galvez, Tariq Elahi, and Claudia Diaz. Inside job: Applying traffic analysis to measure Tor from within. In 25th Annual Network and Distributed System Security Symposium (NDSS '18), San Diego, CA, USA, February 2018.