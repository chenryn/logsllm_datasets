以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

1. **2019.** 对内部人员和IT的洞察：内部威胁分类、分析、建模及对策综述。*ACM Computing Surveys (CSUR)* 52, 2 (2019), 1–40.

2. **Nicholas J Hopper, John Langford, and Luis Von Ahn.** 2002. 可证明安全的隐写术。*Annual International Cryptology Conference.* Springer, 77–92.

3. **Jong-Uk Hou, Do-Gon Kim, Sunghee Choi, and Heung-Kyu Lee.** 2015. 使用基于直方图的循环移位编码结构的3D打印-扫描弹性水印。*Proceedings of the 3rd ACM Workshop on Information Hiding and Multimedia Security.* ACM, New York, NY, USA, 115–121.

4. **Jong-Uk Hou, Do-Gon Kim, and Heung-Kyu Lee.** 2017. 通过分析分层伪影进行盲3D网格水印。*IEEE Transactions on Information Forensics and Security* (2017).

5. **Amir Houmansadr, Thomas J Riedl, Nikita Borisov, and Andrew C Singer.** 2013. 我希望我的声音被听到：通过VoIP实现不可观察的审查规避。*NDSS.*

6. **ASTM International.** 2013. F2792-12a-增材制造技术标准术语。*Rapid Manufacturing Association* 12 (2013), 10–12.

7. **Satoshi Kanai, Hiroaki Date, and Takeshi Kishinami.** 1998. 使用多分辨率小波分解的3D多边形数字水印。*Proc. Sixth IFIP WG*, Vol. 5. 296–307.

8. **Stefan Katzenbeisser and Fabien Petitcolas.** 2015. 信息隐藏。Artech House.

9. **Amin Kharraz, William Robertson, Davide Balzarotti, Leyla Bilge, and Engin Kirda.** 2015. 割断戈尔迪之结：勒索软件攻击的幕后。*International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment.* Springer, 3–24.

10. **Eugene Kolodenker, William Koch, Gianluca Stringhini, and Manuel Egele.** 2017. PayBreak: 针对加密勒索软件的防御。*Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security.* 599–611.

11. **Alexandr Kuznetsov, Oleh Stefanovych, Yuriy Gorbenko, Oleksii Smirnov, Victor Krasnobaev, and Kateryna Kuznetsova.** 2019. 使用3D打印技术的信息隐藏。*2019 10th IEEE International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS)*, Vol. 2. IEEE, 701–706.

12. **Gerhard C Langelaar, Iwan Setyawan, and Reginald L Lagendijk.** 2000. 数字图像和视频数据的水印技术。*IEEE Signal Processing Magazine* 17, 5 (2000), 20–46.

13. **Heung-Kyu Lee, Han-Ul Jang, Hak-Yeol Choi, Jeongho Son, Seung-Min Mun, Dongkyu Kim, Jong-Uk Hou, and Wookhyung Kim.** 2017. 使用分割的三维网格模型水印方法及其装置。*Patent No. US 2017/0213310 A1, Filed December 21, 2016.*

14. **Benoît Macq, Patrice Rondao Alface, and Mireia Montanola.** 2015. 在3D打印场景中使用水印保护知识产权的适用性。*Proceedings of the 20th International Conference on 3D Web Technology.* ACM, New York, NY, USA, 89–95.

15. **Priyanka Mahesh, Akash Tiwari, Chenglu Jin, Panganamala R Kumar, AL Narasimha Reddy, Satish TS Bukkapatanam, Nikhil Gupta, and Ramesh Karri.** 2020. 数字制造网络安全综述。*Proceedings of the IEEE* (2020).

16. **Toshio Motoki.** 2013. 从3D打印机输出对象的方法和系统。*Patent No. JP6331324B2, Filed October 21, 2013.*

17. **Ryutarou Ohbuchi, Hiroshi Masuda, and Masaki Aono.** 1997. 三维多边形模型的水印技术。*ACM multimedia*, Vol. 97. Citeseer, 261–272.

18. **Ryutarou Ohbuchi, Hiroshi Masuda, and Masaki Aono.** 1998. 通过几何和拓扑修改的三维多边形模型水印技术。*IEEE Journal on Selected Areas in Communications* 16, 4 (1998), 551–560.

19. **Ryutarou Ohbuchi, Shigeo Takahashi, Takahiko Miyazawa, and Akio Mukaiyama.** 2001. 在网格频域中的三维多边形网格水印技术。*Graphics interface*, Vol. 2001. Citeseer, 9–17.

20. **Fabien AP Petitcolas, Ross J Anderson, and Markus G Kuhn.** 1999. 信息隐藏综述。*Proceedings of the IEEE* 87, 7 (1999), 1062–1078.

21. **Emil Praun, Hugues Hoppe, and Adam Finkelstein.** 1999. 强健的网格水印技术。*Siggraph*, Vol. 99. Citeseer, 49–56.

22. **Jaco Prinsloo, Saurabh Sinha, and Basie von Solms.** 2019. 工业4.0制造过程安全风险综述。*Applied Sciences* 9, 23 (2019), 5105.

23. **Niels Provos and Peter Honeyman.** 2003. 隐藏与寻找：隐写术简介。*IEEE Security & Privacy* 1, 3 (2003), 32–44.

24. **Patrick Roberts.** 2018. 在哪里找到3D打印枪文件。*Recoilweb.com* (Aug 2018). <https://www.recoilweb.com/where-to-find-3d-printed-gun-files-140438.html>

25. **Clare Scott.** 2019. Treatstock推出用于3D可打印文件知识产权保护的Watermark 3D软件解决方案。*3Dprint.com* (2019). <https://3dprint.com/196192/treatstock-watermark-3d-software-solution-for-ip-protection-of-3d-printable-files/>

26. **Yan Shoshitaishvili, Luca Invernizzi, Adam Doupe, and Giovanni Vigna.** 2014. 你觉得自己幸运吗？网络安全中的风险-回报权衡大规模分析。*Proceedings of the 29th Annual ACM Symposium on Applied Computing.* 1649–1656.

27. **Piyarat Silapasuphakornwong, Hideyuki Torii, Masahiro Suzuki, and Kazutake Uehira.** 2019. 可以在物体内部记录可重写信息的3D打印技术。*NIP & Digital Fabrication Conference*, Vol. 2019. Society for Imaging Science and Technology, 158–161.

28. **L Sturm, CB Williams, JA Camelio, J White, and R Parker.** 2014. 增材制造系统中的网络物理漏洞。*Context* 7 (2014), 8.

29. **Olivier Thonnard, Leyla Bilge, Gavin O’Gorman, Seán Kiernan, and Martin Lee.** 2012. 工业间谍活动和有针对性的攻击：理解日益严重的威胁特征。*International workshop on recent advances in intrusion detection.* Springer, 64–85.

30. **Francesca Uccheddu.** 2018. 用于3D打印数控机床程序指令掩码的方法。*Patent No. WO2018122597A1, Filed December 30, 2016.*

31. **Verizon.** 2020. 2020年数据泄露调查报告。*Technical Report.* <https://enterprise.verizon.com/resources/reports/2020-data-breach-investigations-report.pdf>

32. **Luis Von Ahn and Nicholas J Hopper.** 2004. 公钥隐写术。*International Conference on the Theory and Applications of Cryptographic Techniques.* Springer, 323–341.

33. **Kai Wang, Guillaume Lavoué, Florence Denis, and Atilla Baskurt.** 2008. 三维网格水印技术综合综述。*IEEE Transactions on Multimedia* 10, 8 (2008), 1513–1527.

34. **Zachary Weinberg, Jeffrey Wang, Vinod Yegneswaran, Linda Briesemeister, Steven Cheung, Frank Wang, and Dan Boneh.** 2012. StegoTorus：Tor匿名系统的伪装代理。*Proceedings of the 2012 ACM conference on Computer and communications security.* 109–120.

35. **Philipp Winter, Tobias Pulls, and Juergen Fuss.** 2013. ScrambleSuit：一种多态网络协议以规避审查。*Proceedings of the 12th ACM workshop on Workshop on privacy in the electronic society.* 213–224.

36. **Terry Wohlers.** 2018. Wohlers报告2017：3D打印和增材制造行业年度全球进展报告。*Wohlers Associates, Inc., Fort Collins, Colorado, USA.* <www.wohlersassociates.com>.

37. **Mark Yampolskiy, Wayne King, Gregory Pope, Sofia Belikovetsky, and Yuval Elovici.** 2017. 从安全角度评估增材和减材制造。*International Conference on Critical Infrastructure Protection.* Springer, 23–44.

38. **Mark Yampolskiy, Wayne E King, Jacob Gatlin, Sofia Belikovetsky, Adam Brown, Anthony Skjellum, and Yuval Elovici.** 2018. 增材制造的安全性：攻击分类和综述。*Additive Manufacturing* (2018).

39. **Mark Yampolskiy, Anthony Skjellum, Michael Kretzschmar, Ruel A Overfelt, Kenneth R Sloan, and Alec Yasinsac.** 2016. 使用3D打印机作为武器。*International Journal of Critical Infrastructure Protection* 14 (2016), 58–71.

40. **Adam Young and Moti Yung.** 1996. 密码病毒学：基于勒索的安全威胁及对策。*Proceedings 1996 IEEE Symposium on Security and Privacy.* IEEE, 129–140.

41. **Adam L. Young and Moti Yung.** 1996. “黑盒”密码学的阴暗面，或：我们应信任Capstone吗？*Crypto.* Springer, 89–103.

42. **Adam L. Young and Moti Yung.** 1997. Kleptography：用密码学对抗密码学。*Eurocrypt.* Springer, 62–74.

43. **Adam L. Young and Moti Yung.** 1997. 基于离散对数的密码系统中Kleptographic攻击的普遍性。*Crypto.* Springer, 264–276.

44. **Adam L. Young and Moti Yung.** 2004. 恶意密码学：揭露密码病毒学。*Wiley, USA.*

45. **Steven Eric Zeltmann, Nikhil Gupta, Nektarios Georgios Tsoutsos, Michail Maniatakos, Jeyavijayan Rajendran, and Ramesh Karri.** 2016. 3D打印中的制造和安全挑战。*JOM* (2016), 1–10.

46. **Li Zhuorong.** 2019. 一种用于立体光刻三维模型文件的数字水印系统。*Patent No. CN109903213A, Filed March 1, 2019.*

### 附录

#### A.1 替代比特编码原语

除了通过面片中的顶点顺序进行比特编码外，STL文件格式还允许几种替代方案，这些方案我们在本研究中进行了识别并排除。下面我们将概述这些替代方案，并提供我们认为它们不适用于数据外泄的原因。请注意，对于其他应用场景（如水印），这些方案可能更有价值。

首先，特别是对于ASCII STL文件，可以使用分隔符（空格和制表符）以及注释字符来编码信息。例如，在每行末尾添加一个空格可以表示编码比特值0，两个空格可以表示编码比特值1，而其他数量的空格则表示该行不包含有效编码比特并可以跳过。这是一种非常简单的编码方案，每个面片最多可以编码7个比特（对应于面片法线和外环的开始标签、三个顶点条目以及结束标签endloop和endfacet）。如果使用特定行内的分隔符，这种编码容量还可以进一步扩展。这种编码方案的最大缺点是可以通过简单的统计分析立即检测到。其清理也非常简单，只需将任意数量的空格替换为单个空格即可。

所有描述中的坐标值都是浮点数，并且可以使用指数表示。这可以提供一种同时编码一个或多个比特的方式。例如，如果0是小数点前的第一个或唯一指定的字符，则表示编码比特值0；如果小数点前的第一个数字是非零的，则表示编码比特值1。这种比特编码技术对3D打印对象的影响尚不清楚，因为这取决于3D打印软件如何导入和处理这些值。这可能会导致由于数值误差引起的轻微但最终有影响的偏差。这种编码技术的最大缺点是编码比特流的存在很容易被发现。清理也很简单，但其对3D打印部件的潜在影响需要进一步研究。

另一种比特编码原语是“翻转”面片的法线方向。例如，遵循右手规则的法线方向可以表示编码比特值0，如果违反了这个规则，则表示比特值1。根据描述，这会违反右手规则并最终影响3D打印对象（尽管一些AM软件会忽略指定的法线值并从定义面片的顶点重新计算它）。对于数据外泄来说，这也是一种容易被检测到的编码方法。清理需要重新计算并更新每个法线值。

类似的效果可以通过反转顶点列表的方向来实现。这种方法的唯一优势是它可以增加编码容量，因为在选择性违反右手规则的基础上，比特编码可以类似于本文选择的方法进行结构化。缺点与翻转法线向量方向相似——可能会影响3D打印对象并且方法容易被检测到。清理也可以通过重新计算法线值来完成，但这可能也会影响3D打印对象。

我们确定的最后一个编码替代方案是通过各个面片的排列顺序来表示信息比特。假设STL文件中没有两个面片具有完全相同的三个顶点坐标，那么面片可以彼此区分，因此它们在STL文件中的位置可以表示编码值。基于这一观察，一个简单的编码方案是保持两个连续面片在其原始顺序下表示比特值0，交换它们表示比特值1。这种方法是否会因数值误差导致3D几何形状的微小偏差需要进一步研究，这超出了本文的范围。这种编码技术的潜在优势在于，如果分析师无法获得原始STL文件，那么在STL文件中编码的比特流可能更难以检测。然而，这也是该技术的最大缺点——为了解码比特流，接收者需要访问“原始”STL文件。清理可以通过随机交换连续面片来实现；与编码本身一样，这种方法对3D打印对象的影响尚不清楚。

#### A.2 3D打印可行性验证

我们通过在两种不同的切片软件（Cura和CatalystEx）中加载模型，并在两台不同的3D打印机（Lulzbot Taz 6和Stratasys Dimension Elite）上分别打印原始设计和带有嵌入秘密的载体文件，验证了所提出方法避免检测的能力。

图11显示了在Cura中加载的STL文件以及在Lulzbot Taz 6上3D打印的对比情况。图12显示了在CatalystEx中加载的STL文件以及在Stratasys Dimension Elite上3D打印的对比情况。

无论是数字模型的切片对比还是3D打印对象的对比，都没有显示出嵌入负载导致的任何操纵迹象。因此，如果检测这种攻击仅依赖于能否正确打印3D模型，那么它将失败。

---

希望这些改进使您的文本更加清晰、连贯和专业。