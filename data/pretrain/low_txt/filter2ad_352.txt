**Title: Detection, Alert, and Response to Malicious Behavior in Mobile Devices: A Knowledge-Based Approach**

**Authors: Asaf Shabtai, Uri Kanonov, and Yuval Elovici**

**Affiliations:**
- Deutsche Telekom Laboratories at Ben-Gurion University
- Department of Information Systems Engineering, Ben-Gurion University, Israel

**Contact:**
- {shabtaia, kanonov, elovici}@bgu.ac.il

**Abstract:**
This research evaluates a knowledge-based approach for detecting instances of known classes of mobile device malware based on their temporal behavior. The framework employs a lightweight agent that continuously monitors time-stamped security data within the mobile device and processes this data using a light version of the Knowledge-Based Temporal Abstraction (KBTA) methodology. This approach was applied to detect malware on Google Android-powered devices. Evaluation results demonstrated the effectiveness of the proposed method.

**Keywords:** KBTA, Host-Based Intrusion Detection Systems, Mobile Devices

---

**Introduction:**
Smartphones have evolved from simple mobile phones into sophisticated, yet compact, minicomputers. These devices are now vulnerable to various new threats, such as viruses, Trojans, and worms, which were previously common only in desktop computers. In this research, we examine the applicability of detecting malware instances using a light version of the KBTA method, which can be activated on resource-limited devices.

**Methodology:**
Using KBTA, continuously measured data (e.g., number of running processes) and events (e.g., software installation) are integrated with a temporal-abstraction knowledge base. This knowledge base, also known as a security ontology, abstracts higher-level, meaningful concepts and patterns from raw, time-oriented security data, referred to as temporal abstractions (Fig. 1). Automatically generated temporal abstractions can be monitored to detect suspicious temporal patterns and invoke appropriate responses. These patterns are defined by a security expert using a set of time and value constraints, and they are context-aware, meaning the same data may be interpreted differently in different contexts.

**Example: SD Card Information Leakage Pattern**
The "SD-card Information Leakage" pattern is derived when an "Access to SD-card" event is detected, generating a "Post Access to SD-card" context. Within this context, an increasing number of "Sent Packets" (Trend) indicates potential malicious activity, such as sending the content stored on the SD-card to a remote server (Fig. 2). The pattern definition in CAPSUL language is as follows:

- **Linear Pattern:** SD-card Information Leakage
- **Context:** Post Access to SD-Card
- **Linear Components:**
  - **Output Value of Pattern:** SD-Card Information Leakage
  - **Parameter Component:** Sent Packets Trend
  - **Abstracted From:** Sent Packets
  - **Local Constraints:**
    - value = INCREASING
    - duration > 3sec
  - **Value Function:** value = SD-Card Information Leakage

**Evaluation:**
For our evaluation, we used a host-based intrusion detection system (HIDS) developed for Google Android-powered devices. The HIDS monitors more than 100 raw parameters and events, including those used to define basic abstractions and complex patterns. The HIDS employs a lightweight Incremental KBTA detector. A smartphone security ontology for detecting malware was defined, including five different temporal patterns of potentially malicious behavior:
- Denial of Service (overloading the system CPU and memory)
- Abuse of SMS messages
- Abuse of the device camera
- Injecting malware via USB connection
- Theft of confidential information stored on the SD-Card

We developed five different smartphone malware and deliberately infected a G1 Android device. Evaluation results showed the ability to detect the malware while reducing false alarms using context-based interpretations. When an alert is detected, the Android HIDS can display a notification and employ effective countermeasures, such as disconnecting all network transports or terminating the malicious application.

**Adaptability and Flexibility:**
The HIDS can quickly adapt to new malware classes by modifying the knowledge base. KBTA defines patterns in a fuzzy fashion as a set of constraints rather than hard-coded signatures for each known malware. This facilitates the detection of new, unseen malware instances. The system can also integrate alerts from other sensors, reducing false alarms and isolating reliable alerts that persist over a substantial time interval.

**References:**
1. Shabtai, A., Fledel, Y., Elovici, Y., Shahar, Y.: Using the KBTA Method for Inferring Computer and Network Security Alerts from Time-stamped, Raw System Metrics. Journal in Computer Virology (2009), doi:10.1007/s11416-009-0125-5
2. Chakravarty, S., Shahar, Y.: CAPSUL - A constraint-based specification of repeating patterns in time-oriented data. Annals of Mathematics and AI 30(1-4), 3–22 (2000)

**Figures:**
- **Figure 1:** The KBTA process
- **Figure 2:** SD-Card information leakage pattern

**Editors:**
- E. Kirda, S. Jha, and D. Balzarotti (Eds.): RAID 2009, LNCS 5758, pp. 357–358, 2009.
- © Springer-Verlag Berlin Heidelberg 2009