# Table of Contents

## Chapter 7: Remote Exploitation
- **Understanding Network Protocols**
  - Transmission Control Protocol (TCP)
  - User Datagram Protocol (UDP)
  - Internet Control Messaging Protocol (ICMP)
  - Server Protocols
    - Text-Based Protocols
    - Binary Protocols
      - FTP
      - SMTP
      - HTTP
- **Further Reading and Resources**
- **Attacking Network Remote Services**
  - Overview of Brute Force Attacks
    - Traditional Brute Force
    - Dictionary Attacks
    - Hybrid Attacks
  - Common Target Protocols
  - Tools of the Trade
    - THC Hydra
      - Basic Syntax for Hydra
      - Cracking Services with Hydra
      - Hydra GUI
    - Medusa
      - Basic Syntax
      - OpenSSH Username Discovery Bug
      - Cracking SSH with Medusa
    - Ncrack
      - Basic Syntax
      - Cracking an RDP with Ncrack
      - Case Study of a Morto Worm
      - Combining Nmap and Ncrack for Optimal Results
  - Attacking SMTP
    - Important Commands
    - Real-Life Example
  - Attacking SQL Servers
    - MySQL Servers
      - Fingerprinting MySQL Version
      - Testing for Weak Authentication
    - MS SQL Servers
      - Fingerprinting the Version
      - Brute Forcing SA Account
      - Using Null Passwords
- **Introduction to Metasploit**
  - History of Metasploit
  - Metasploit Interfaces
    - MSFConsole
    - MSFcli
    - MSFGUI
    - Armitage
  - Metasploit Utilities
    - MSFPayload
    - MSFEncode
    - MSFVenom
  - Metasploit Basic Commands
    - Search Feature in Metasploit
    - Use Command
    - Info Command
    - Show Options
    - Set/Unset Command
  - Reconnaissance with Metasploit
    - Port Scanning with Metasploit
    - Metasploit Databases
    - Storing Information from Nmap into Metasploit Database
    - Useful Scans with Metasploit
      - Port Scanners
      - Specific Scanners
  - Compromising a Windows Host with Metasploit
    - Metasploit Autopwn
    - db_autopwn in Action
    - Nessus and Autopwn
  - Armitage
    - Interface
    - Launching Armitage
    - Compromising Your First Target from Armitage
    - Enumerating and Fingerprinting the Target
    - MSF Scans
    - Importing Hosts
    - Vulnerability Assessment
    - Exploitation
    - Check Feature
    - Hail Mary
- **Conclusion and References**

## Chapter 8: Client-Side Exploitation
- **Client-Side Exploitation Methods**
  - Attack Scenario 1: E-Mails Leading to Malicious Attachments
  - Attack Scenario 2: E-Mails Leading to Malicious Links
  - Attack Scenario 3: Compromising Client-Side Update
  - Attack Scenario 4: Malware Loaded on USB Sticks
- **E-Mails with Malicious Attachments**
  - Creating a Custom Executable
  - Creating a Backdoor with SET
  - PDF Hacking
    - Introduction
    - Header
    - Body
    - Cross Reference Table
    - Trailer
    - PDF Launch Action
    - Creating a PDF Document with a Launch Action
    - Controlling the Dialog Boxes
    - PDF Reconnaissance
- **Tools of the Trade**
  - PDFINFO
  - PDFTK
  - Origami Framework
    - Installing Origami Framework on BackTrack
    - Attacking with PDF
    - Fileformat Exploits
    - Browser Exploits
    - Scenario from Real World
    - Adobe PDF Embedded EXE
    - Social Engineering Toolkit
- **Credential Harvester Attack**
- **Tabnabbing Attack**
- **Other Attack Vectors**
- **Browser Exploitation**
  - Attacking over the Internet with SET
  - Attack Scenario over the Internet
  - Using Windows Box as Router (Port Forwarding)
  - Browser AutoPWN
    - Why Use Browser AutoPWN?
    - Problem with Browser AutoPWN
    - VPS/Dedicated Server
- **Compromising Client-Side Update**
  - How Evilgrade Works
  - Prerequisites
  - Attack Vectors
    - Internal Network Attack Vectors
    - External Network Attack Vectors
  - Evilgrade Console
  - Attack Scenario
- **Malware Loaded on USB Sticks**
  - Teensy USB
- **Conclusion and Further Reading**

## Chapter 9: Post-Exploitation
- **Acquiring Situation Awareness**
  - Enumerating a Windows Machine
  - Enumerating Local Groups and Users
  - Enumerating a Linux Machine
  - Enumerating with Meterpreter
    - Identifying Processes
    - Interacting with the System
    - User Interface Command
- **Privilege Escalation**
  - Maintaining Stability
  - Escalating Privileges
    - Bypassing User Access Control
    - Impersonating the Token
    - Escalating Privileges on a Linux Machine
- **Maintaining Access**
  - Installing a Backdoor
  - Cracking the Hashes to Gain Access to Other Services
  - Backdoors
    - Disabling the Firewall
    - Killing the Antivirus
    - Netcat
    - MSFPayload/MSFEncode
      - Generating a Backdoor with MSFPayload
      - MSFEncode
    - MSFVenom
    - Persistence
- **Hashing**
  - What Is a Hash?
  - Hashing Algorithms
  - Windows Hashing Methods
    - LAN Manager (LM)
    - NTLM/NTLM2
    - Kerberos
    - Where Are LM/NTLM Hashes Located?
  - Dumping the Hashes
    - Scenario 1—Remote Access
    - Scenario 2—Local Access
    - Ophcrack
    - Scenario 3—Offline System
    - Ophcrack LiveCD
    - Bypassing the Log-In
- **Cracking the Hashes**
  - Bruteforce
  - Dictionary Attacks
  - Password Salts
  - Rainbow Tables
  - John the Ripper
    - Cracking LM/NTLM Passwords with JTR
    - Cracking Linux Passwords with JTR
  - Rainbow Crack
    - Sorting the Tables
    - Cracking the Hashes with rcrack
    - Speeding Up the Cracking Process
    - Gaining Access to Remote Services
    - Enabling the Remote Desktop
    - Adding Users to the Remote Desktop
- **Data Mining**
  - Gathering OS Information
  - Harvesting Stored Credentials
- **Identifying and Exploiting Further Targets**
  - Mapping the Internal Network
  - Finding Network Information
  - Identifying Further Targets
  - Pivoting
  - Scanning Ports and Services and Detecting OS
  - Compromising Other Hosts on the Network Having the Same Password
  - psexec
    - Exploiting Targets
- **Conclusion and References**

## Chapter 10: Windows Exploit Development Basics
- **Prerequisites**
- **What Is a Buffer Overflow?**
- **Vulnerable Application**
- **How to Find Buffer Overflows**
  - Methodology
  - Getting the Software Up and Running
  - Causing the Application to Crash
- **Skeleton Exploit**
  - Determining the Offset
  - Identifying Bad Characters
  - Figuring Out Bad Characters with Mona
  - Overwriting the Return Address
  - NOP Sledges
  - Generating the ShellCode
- **Generating the Metasploit Module**
  - Porting to Metasploit
- **Conclusion and Further Resources**

## Chapter 11: Wireless Hacking
- **Introduction**
- **Requirements**
- **Introducing Aircrack-ng**
  - Uncovering Hidden SSIDs
  - Turning on the Monitor Mode
  - Monitoring Beacon Frames on Wireshark
  - Monitoring with Airodump-ng
  - Speeding Up the Process
  - Bypassing MAC Filters on Wireless Networks
  - Cracking a WEP Wireless Network with Aircrack-ng
    - Placing Your Wireless Adapter in Monitor Mode
    - Determining the Target with Airodump-ng
    - Attacking the Target
    - Speeding Up the Cracking Process
    - Injecting ARP Packets
    - Cracking the WEP
  - Cracking a WPA/WPA2 Wireless Network Using Aircrack-ng
    - Capturing Packets
    - Capturing the Four-Way Handshake
    - Cracking WPA/WAP2
  - Using Reaver to Crack WPS-Enabled Wireless Networks
    - Reducing the Delay
  - Further Reading
  - Setting Up a Fake Access Point with SET to PWN Users
    - Attack Scenario
    - Evil Twin Attack
    - Scanning the Neighbors
    - Spoofing the MAC
    - Setting Up a Fake Access Point
    - Causing Denial of Service on the Original AP
- **Conclusion**

## Chapter 12: Web Hacking
- **Attacking the Authentication**
  - Username Enumeration
  - Invalid Username with Invalid Password
  - Valid Username with Invalid Password
  - Enabling Browser Cache to Store Passwords
  - Brute Force and Dictionary Attacks
- **Types of Authentication**
  - HTTP Basic Authentication
  - HTTP-Digest Authentication
  - Form-Based Authentication
  - Exploiting Password Reset Feature
    - Etsy.com Password Reset Vulnerability
  - Attacking Form-Based Authentication
    - Brute Force Attack
    - Attacking HTTP Basic Auth
  - Further Reading
  - Log-In Protection Mechanisms
    - CAPTCHA Validation Flaw
    - CAPTCHA Reset Flaw
    - Manipulating User-Agents to Bypass CAPTCHA and Other Protections
    - Real-World Example
  - Authentication Bypass Attacks
    - Authentication Bypass Using SQL Injection
    - Testing for SQL Injection Auth Bypass
    - Authentication Bypass Using XPATH Injection
    - Testing for XPATH Injection
    - Authentication Bypass Using Response Tampering
- **Crawling Restricted Links**
  - Testing for the Vulnerability
  - Automating It with Burp Suite
- **Authentication Bypass with Insecure Cookie Handling**
- **Session Attacks**
  - Guessing Weak Session ID
  - Session Fixation Attacks
  - Requirements for This Attack
  - How the Attack Works
- **SQL Injection Attacks**
  - What Is an SQL Injection?
  - Types of SQL Injection
    - Union-Based SQL Injection
    - Error-Based SQL Injection
    - Blind SQL Injection
  - Detecting SQL Injection
  - Determining the Injection Type
  - Union-Based SQL Injection (MySQL)
  - Testing for SQL Injection
    - Determining the Number of Columns
    - Determining the Vulnerable Columns
    - Fingerprinting the Database
    - Enumeration Information
    - Information_schema
    - Information_schema Tables
    - Enumerating All Available Databases
    - Enumerating All Available Tables in the Database
    - Extracting Columns from Tables
    - Extracting Data from Columns
    - Using `group_concat`
- **Conclusion and References**