### Table 9: Trusted Leaf Certificate Public Key Distribution

| Type | Number of Certificates | Percentage |
| --- | --- | --- |
| SHA-1 with RSA Encryption | 5,972,001 | 98.7% |
| MD5 with RSA Encryption | (0.54%) | - |
| SHA-256 with RSA Encryption | 32,905 | 0.25% |
| SHA-512 with RSA Encryption | 15,297 | 0.00% |
| MD2 with RSA Encryption | 7 | 0.00% |
| Other | 21 | 0.00% |
| Total | 29,705 | 0.49% |

### Table 10: Trusted Leaf Certificate Signature Algorithms

In line with the results presented by Holz et al. [17], we find that 98.7% of browser-trusted certificates are signed using SHA-1 and RSA encryption. We identified 22 trusted certificates with MD2-based signatures and 31,325 with MD5 signatures. Due to known weaknesses in these hash functions, no organizations should currently be using them to sign certificates. The last certificate signed with MD5 was issued on April 17, 2013, by Finmeccanica S.p.A., an Italian defense contractor, more than four years after Sotirov et al. published “MD5 considered harmful today” [32]. A detailed breakdown of leaf certificate signature types is provided in Table 10.

### Certificate Depth

Similar to findings by the EFF and Holz et al., we observe that the vast majority (98%) of leaf certificates are signed by intermediate authorities, one step away from a root authority. However, we found that 61 root authorities directly signed 41,000 leaf certificates, and some leaf certificates were as many as five intermediates away from a root authority. Most of the authorities four or more intermediates away from a browser-trusted root belonged to agencies within the U.S. Federal Government.

While long certificate chains do not inherently create vulnerabilities, it is concerning to see leaf certificates directly signed by root authorities. This practice indicates that the root signing key is being actively used and may be stored in a network-attached system, increasing the risk of compromise. If the signing key were compromised, the root certificate could not be replaced without updating all deployed browser installations. Using an intermediate authority to sign these leaf certificates would allow for easier replacement without requiring browser updates, and the root could be kept offline during day-to-day operations.

### Incorrectly Hosted Trusted Certificates

We found that 1.32 million hosts (12.7%) serving once-valid browser-trusted leaf certificates are misconfigured, making them inaccessible to some clients or hosted beyond their validity period. A breakdown of the reasons for invalid certificates is shown in Table 11. Mozilla Network Security Services (NSS) [27], the certificate validation library used by many browsers, caches previously seen intermediates. Therefore, many certificates with invalid trust chains will appear valid in users’ browsers if the intermediate authorities have been encountered before.

Approximately 5.8% of hosts are serving now-expired certificates, which will be considered invalid by all browsers. We found that 22% of certificates are removed retroactively after their expiration, and 19.5% of revoked certificates are removed after they appear in a certificate revocation list (CRL). The distribution of when certificates are removed from servers is shown in Figure 6. Another 42.2% of hosts are providing unnecessary certificates in the presented trust chain. Although this practice has no security implications, these additional certificates provide no benefit to the client and can result in a slight performance degradation.

Holz et al. report that 18% of all certificates are expired. However, this statistic includes self-signed certificates, which already raise a browser error. We consider only certificates signed by browser-trusted authorities, which would otherwise be considered valid.

### Table 11: Common Server Certificate Problems

| Status | Number of Hosts | Percentage |
| --- | --- | --- |
| Expired | 595,168 | 5.80% |
| Not Yet Valid | 1,966 | 0.02% |
| Revoked | 28,033 | 0.27% |
| No Trust Chain | 654,667 | 6.30% |
| Misordered Chain | 25,667 | 0.24% |
| Incorrect Chain | 11,761 | 0.14% |
| Unnecessary Root | 4,365,321 | 42.2% |
| Optimally Configured | 4,657,133 | 45.0% |

The number of misconfigured hosts indicates that procuring and correctly configuring certificates remains a challenge for many users.

### Invalid Authority Types

We found that 47 (2.6%) of the 1,832 browser-trusted signing certificates are not designated for signing TLS certificates for use on the web. Of these 47 signing certificates, 28 (60%) are designated for signing Microsoft or Netscape Server Gated Crypto certificates, an obsolete cryptographic standard from the 1990s. The remaining 19 signing certificates are designated for combinations of Code Signing, E-mail Protection, TLS Web Client Authentication, Time Stamping, and Microsoft Encrypted File System. These intermediate certificates were not found in any browser or operating system root stores but were served on public web servers. It does not appear that any of these authorities were signing certificates inappropriately; instead, individuals and organizations mistakenly used valid code signing and e-mail certificates as TLS leaf certificates on their websites.

### Certificate Revocation

Certificate authorities can denote that previously issued certificates should no longer be trusted by publishing their revocation in a public certificate revocation list (CRL). The location of authority CRLs is listed in each signed certificate. To understand why certificates are being revoked, we fetched and parsed the CRLs listed in all browser-trusted certificates. We found that 2.5% of browser-trusted certificates are eventually revoked by their authority. A breakdown of revocation reasons is provided in Table 9. While RFC 5280 [11] strongly encourages issuers to provide "meaningful" reason codes for CRL entries, we found that 71.7% of issuers who revoked certificates did not provide reasons for any of their revocations.

While 2.5% of certificates are eventually revoked, we found that only 0.3% of hosts presenting certificates in our scan were revoked. We expect this is because site operators request a certificate be revoked and simultaneously remove the certificate from the web server. As shown in Figure 6, more than 80% of certificates are removed proactively and were not seen again after the time of their revocation.

WebTrust for Certificate Authorities [3], an audit mandated by the three major root stores, requires that authorities maintain an online repository that allows clients to check for certificate revocation information. However, we found that 14 trusted signing certificates from 9 organizations fail to include revocation data in at least some of their certificates, and in 5 cases do not supply revocation data in any of their signed certificates.

### Unexpected Observations

#### CA Certs with Multiple Parents

Of the 1,832 browser-trusted signing certificates, 380 shared their subject, public key, and subject key identifier with another browser-trusted certificate, forming 136 groups of "sibling" CA certificates. Because of this, leaf certificates can have more than one parent from the browsers' point of view. We found that only 37.4% of browser-trusted leaf certificates have a single parent; 38.7% have two parents; 12.3% have three; 11.3% have four; and a small number have 5–9 valid parents. Depending on which parent is presented in a trust chain, the perceived validity of the leaf certificate can change. For example, if the presented intermediate certificate has expired, then the leaf certificate will be considered invalid. We note that subject key identifiers sometimes also specify additional constraints such as a constraint on issuer serial number. However, we found that only a handful of certificates contain additional constraints.

In 86 of the 136 groups of sibling certificates, the signing certificates had differing validity periods. In four sets, one of the certificates was revoked, in a separate four sets, each authority was in a different browser or OS root store, and in 49 cases, the authorities were signed by different parent authorities. While previous studies found evidence of this phenomenon, we were not aware of its prevalence. We are not aware of any security vulnerabilities introduced by this practice, but we do find that 43,674 (1.35%) of the browser-trusted certificates are presented with the incorrect parent, which limits their perceived validity (e.g., the presented CA certificate expires earlier than the leaf certificate, but another parent exists with a later expiration date).

#### CA Certs with Negative Path Lengths

We found that 1,395 browser-trusted CA certificates have a negative path length constraint, rendering them unable to sign any certificates due to a path length restriction earlier in the trust chain. These malformed intermediate certificates were signed by the Government of Korea and provided to educational institutions ranging from elementary schools to universities, libraries, and museums. However, because they are still technically CA certificates, web browsers including Mozilla Firefox and Google Chrome will not recognize them as valid leaf certificates.

We do not include these certificates when referring to the set of browser-trusted authorities because they are unable to sign any certificates and therefore do not have the same influence as other valid authorities. However, we note that some less common client implementations may fail to properly check the path length constraint and incorrectly treat these as valid. One of these CA certificates, issued to a Korean elementary school, was compromised by Heninger [15], who factored the 512-bit key a few hours after the certificate expired.

#### Mis-issued CA Certificates

We found one mis-issued signing certificate during the course of our study, which was issued for *.EGO.GOV.TR by Turktrust, a small Turkish certificate authority. The certificate was served as a leaf certificate on what appeared to be an unconfigured IIS server on a Turkish IP address. We saw 487 certificates that were signed by Turktrust over the course of our study. All were for Turkish organizations or the Turkish Government; we saw no evidence of other mis-issued certificates.

The certificate was later found by Google after being used to sign a Google wildcard certificate [21] and was revoked by Turktrust on December 26, 2012. It was last seen in our scans on December 27, 2012.

#### Site Certificates with Invalid Domains

We found that 4.6% (149,902) of browser-trusted certificates contain a common name (CN) or subject alternate name for a locally scoped domain or private IP address. Because these names are not fully qualified, the intended resource is ambiguous, and there is no identifiable owner. As such, these local domain names frequently appear on more than one certificate. In one example, there are 1,218 browser-trusted certificates for the domain "mail" owned by organizations ranging from the U.S. Department of Defense to the Lagunitas Brewing Company.

The vast majority of certificates appear to be related to mail services. Of the 157,861 certificates with locally scoped names, 25,964 contain the name "exchange" (Microsoft Exchange Mail Server), and 99,773 contain a variation on the name "mail." More than 100,000 of the certificates contain a domain ending in ".local."

We suspect that certificates include these locally scoped names to facilitate users who are part of an Active Directory domain in connecting to their local Exchange mail server. In this scenario, the integrated DNS service in Active Directory will automatically resolve locally scoped names to the correct server on the domain. However, these clients will receive a name mismatch error if the TLS certificate presented by the Exchange Server does not match the locally scoped name that was originally resolved. Instead of resolving the issue, the certificates often remain misconfigured.