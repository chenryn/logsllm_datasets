# 优化后的文本

## 摘要
本文介绍了我们针对程序异常检测的方法，并对其检测能力、准确性和性能进行了评估。我们的方法能够成功检测出对sshd、libpcre和sendmail的异常路径攻击尝试，且误报率极低（小于0.0001）。此外，我们的方法在检测不同类型合成异常时具有高检出率（> 0.9）和低误报率（< 0.01），并且分析速度快，每行为实例（1k到50k函数/系统调用）仅产生0.1~1.3毫秒的分析开销（不包括跟踪）。

## 图8：我们的方法的检测（分析）开销
与分析过程相比，动态函数调用跟踪会带来显著的开销。当加载我们的Pintool时，sshd平均会经历167%的开销。Jalan和Kejariwal在其动态调用图Pintool Trin-Trin [24]中报告了类似的141%开销。高级跟踪技术，如探针模式Pintool、分支目标存储 [48] 等，可以将跟踪开销降低到不到10%，从而实现接近实时的检测系统。

另一种部署我们的检测解决方案的选择是通过系统调用来分析程序行为，正如我们在sendmail中所展示的那样。SystemTap可以以近乎零的开销来跟踪系统调用 [43]，但牺牲了揭示用户空间程序活动的能力，降低了建模/检测的准确性。

我们的方法还支持离线检测或程序攻击的取证，在这种情况下，准确性是主要关注点而非性能 [42]。我们的Pintool使分析师能够定位执行窗口内的异常，并提供每个函数调用的调用者信息。这些信息有助于分析师快速减少误报并定位易受攻击的代码段。

## 相关工作
传统的程序异常检测系统（也称为基于主机的入侵检测系统）遵循Denning的入侵检测愿景 [7]。它们旨在基于两个基本范式检测非法控制流或异常系统调用：
1. 由Forrest等人 [11] 引入的n-gram短调用序列验证；
2. 由Kosoresow和Hofmeyr [26] 首次描述的自动机转换验证（DFA），后来由Sekar等人 [39] 和Wagner和Dean [45] 正式化为FSA和NDPDA。

n-gram模型的基本形式在 [10, 21] 中得到了进一步研究，并开发了几种高级形式，例如机器学习模型 [22, 29] 和隐马尔可夫模型 [14, 47]。n-gram的本质是使用小n值来建模和分析程序跟踪的局部特征。增加n会导致指数级收敛和存储问题，但小n（局部特征分析）使得攻击者可以通过构造恶意跟踪来逃避检测，其中任何小片段都是正常的。Wagner和Soto首次展示了这种模仿攻击，他们通过稀释恶意系统调用序列使其看起来正常 [46]。

尽管Wagner和Soto的攻击可以逃避n-gram方法的检测，但它是一种系统调用级别的战术，可能会引入非法控制流，这可以通过下推自动机（PDA）方法 [8, 9, 15, 16] 捕获。这种模仿攻击也可能涉及异常调用参数，可以通过参数分析 [15, 31] 来检测。

自动机检测的研究始于大规模跟踪分析的目标。然而，所有现有的自动机模型都相当于FSA/PDA，只能单独验证状态转换，即它们是一阶模型。程序计数器和调用栈信息被用于帮助精确定义自动机中的每个状态（一个系统调用） [8, 9, 39]。Dyck模型 [16] 将函数调用/返回作为自动机状态。结合静态和动态分析的模型已被开发 [23, 30]，并且个别转换频率已被用于检测DoS攻击 [13]。

所有现有的自动机检测方法都无法直接用于检测异常路径异常，如前文所述。现有检测方法缺乏在大规模执行窗口中关联不同控制流段中事件的能力。能够做到这一点的自动机会在训练开销和存储方面具有指数级复杂性。

文献中尚未系统地研究远距离发生的事件之间的关系。本文正式化了大规模执行窗口内事件关联分析的问题，并提出了第一个在大规模执行窗口中关联事件以进行异常检测的解决方案。

聚类和分类技术已广泛应用于恶意软件分类 [2, 12, 25, 36]。恶意软件分类旨在提取抽象的恶意软件行为签名，并使用一个或多个签名识别恶意软件。然而，程序异常检测模型则建模正常行为并检查整个配置文件以决定其是否正常。仅凭某一特征正常并不足以得出整个行为正常。

关联分析技术已被开发用于检测网络入侵。Valeur等人描述了一个全面的框架，用于关联来自各种IDS系统的警报 [44]。Perdisci等人提出了2v-gram方案，以发现流量负载中相隔v个位置的相关字节 [35]。Gu等人开发了一个系统，用于在特定僵尸网络行为假设下关联时间网络事件以检测僵尸网络 [17]。相比之下，我们通过开发新算法来解决程序异常检测问题，克服了独特的行为多样性和可扩展性挑战。

除了异常检测之外，还研究了针对特定已知程序攻击的防御措施。例如，Moore等人引入了回散分析来发现DoS攻击 [33]，Brumley等人发明了RICH来防止整数溢出 [4]。这些防御措施针对特定的攻击签名，无法检测未知攻击，因此与一般的异常检测方法不同。

## 结论与未来工作
本文研究了异常路径攻击，并设计了一种两阶段异常检测方法来从极长的程序跟踪中发现这些攻击。我们的工作的意义在于能够高效地发现发生在很远的微妙程序不一致性和异常。我们的工作通过展示大规模程序行为建模和强制执行的有效性，推进了最先进的程序异常检测技术，以应对埋藏在极长执行路径中的运行时异常。在未来的工作中，我们计划采用先进的动态跟踪技术，并在我们的检测解决方案之上构建实时安全事件响应系统。

## 致谢
本工作得到了ONR拨款N00014-13-1-0016和ARO YIP W911NF-14-1-0535的支持。作者感谢Barbara Ryder对工作的反馈。作者还要感谢Changhee Jung和Dongyoon Lee对性能分析的评论。

## 参考文献
[1] M. Abadi, M. Budiu, U. Erlingsson, and J. Ligatti. Control-Flow Integrity. In Proceedings of the ACM Conference on Computer and Communications Security, pages 340–353, 2005.
[2] U. Bayer, P. M. Comparetti, C. Hlauschek, C. Kruegel, and E. Kirda. Scalable, Behavior-Based Malware Clustering. In Proceedings of the Network and Distributed System Security Symposium, 2009.
...
[48] Y. Xia, Y. Liu, H. Chen, and B. Zang. CFIMon: Detecting Violation of Control Flow Integrity Using Performance Counters. In Proceedings of the Annual IEEE/IFIP International Conference on Dependable Systems and Networks, pages 1–12, June 2012.