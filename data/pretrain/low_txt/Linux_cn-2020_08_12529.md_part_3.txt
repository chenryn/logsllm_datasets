**Saron Yitbarek**: 自动化工具确实已经解决了速度问题，但我认为我们不能只赞美这些工具而忽视了实际的方法论和文化转变。Scott Hanselman 和我就这个微妙的界限进行了讨论。

**00:16:30 - Saron Yitbarek**: 在我们的对话开始时，你提到 DevOps 不仅是一套惯例，更是一种心态和思维方式。这听起来像是我们创造的工具是这种思维方式的具体实现。

**Scott Hanselman**: 你说得非常对，真是天才！的确如此，过去我们让产品开发人员在 Word 文档中记录代码的工作方式，实际上就是编写规范。但这些文档往往很快就会过时。

**00:17:00 - Saron Yitbarek**: 是的。（答非所问）

**Scott Hanselman**: 哈？

**Saron Yitbarek**: 我只是很高兴 Scott 刚才说我是天才。不过我也确实认为，这些工具几乎是我们文化转变的象征。它们鼓励我们拓宽角色定义。作为开发者，我们已经被迫至少偶尔关注代码的运行情况，从而部分地统一了开发和运维的主要职责。事实上，DevOps 的兴起告诉我们，在一个速度不断提升的世界里，没有人能够孤立存在。

**00:17:30 - Saron Yitbarek**: Jonah Horowitz 曾在湾区多家公司工作，包括 Quantcast 和 Netflix。他说即使是世界上一些最大的公司，也从这个角度重新塑造了他们的文化。

**Jonah Horowitz**: 我们在文化上得到了整个公司的认同，决定以小批量的方式部署软件，并使用这些程序来帮助部署。如果 DevOps 只是由运营团队驱动，我认为它不会成功。这必须成为公司管理层和领导层共同认可的事情才能发挥作用，而这实际上意味着一种文化转变。

**00:18:00 - Saron Yitbarek**: 当 MacKenzie 对 800 名 CIO 和 IT 高管进行调查时，发现 80% 的人表示他们正在规划让部分下属组织实施 DevOps，超过一半的人计划到 2020 年在整个公司范围内实施。高管们意识到自动化工具可以提升交付速度。

**00:18:30 - Saron Yitbarek**: 过去，人们习惯于让一个货板先到达数据中心，然后在那里放上整整一个月。但现在，如果你等待的时间超过 10 分钟，就说明你做错了什么。随着竞争对手的速度增加，没有人能够承受得起落后。

**00:19:00 - Saron Yitbarek**: 我可以想象，运维团队一定很紧张，因为他们把所有的工具都交给了开发人员。运维团队习惯了扮演成年人的角色，而现在却要将车钥匙交给一贯被视为“孩子”的开发人员。我想我们开发人员正在学习如何在不破坏东西的前提下快速移动。但随着 DevOps 革命的尘埃落定，变化最大的可能是运维团队。

**00:19:30 - Saron Yitbarek**: DevOps 是否真的威胁到了运维的存在？开发是否在用它闪亮的新工具来吃掉运维？Cindy Sridharan 是一位开发者，她写了一篇长篇调查文章来讨论这些问题。在你的文章和博客中，你提到运维人员对这种情况并不满意。到底发生了什么？你会怎么说？

**Cindy Sridharan**: 理想中的 DevOps 是责任共享。开发者和运维应该有更多五五分成的责任，以确保软件的整体交付。然而，很多运维工程师的不满源于这样一个事实：这些改变并没有实际功效。他们仍然是主要负责运行应用的人，而开发者不一定做得足够好。

**00:20:00 - Saron Yitbarek**: 这个问题在未来几年将至关重要。DevOps 的作用到底有多大？随着自动化进程的发展，运维的作用是会被削弱，还是会发生转变？

**00:20:30 - Saron Yitbarek**: 但是我们要记住，DevOps 不仅仅是工具和新技术的应用。这种方法论实际上是在塑造技术，反过来技术也在塑造方法论，形成了一个神奇的反馈循环。文化造就了工具，而工具又强化了文化。

**00:22:00 - Saron Yitbarek**: 最后，我们在节目开头描述的那堵墙——即把开发和运维划分开来的那堵墙——我甚至不知道五年后“把你的代码扔过墙”的比喻对一个开发者来说是否有意义。如果五年后大家都听不懂这个比喻，那真是一件大好事。不过目前为止的访谈很有价值，我听到了很多新的故事。

现在说话的是云架构师 Richard Henshall。

**Richard Henshall**: 我觉得 DevOps 开始让人们意识到对方关心的是什么，我看到了更多对彼此的理解。

**00:23:00 - Saron Yitbarek**: 接下来是系统管理员 Jonah Horowitz。

**Jonah Horowitz**: 我认为你需要很棒的技巧来写出真正好的软件。我在与我合作过的最棒的开发者身上看到的一件事是，他们贡献了新的软件工程技术，推动了软件开发行业的发展。

**Saron Yitbarek**: 最后一个是系统管理员 Sandra Henry-Stocker。

**Sandra Henry-Stocker**: 我认为开发者会变得更加精明、更加谨慎。他们始终需要提升自己的技能，我知道这需要很多辛苦的学习。

**00:23:30 - Saron Yitbarek**: DevOps 是一个爱的结晶。原来，在那堵墙的另一边还有一些朋友，很高兴认识你们。坦白说，我以前总觉得 DevOps 很无聊，就是一堆硬核的自动化脚本和扩展问题。我的抵触情绪有一部分是出于它的实践难度。作为开发者，我每周都要面对一些新工具和新框架。DevOps 一直是那些可怕且快速变化的一部分。但现在，尤其是听了这些故事之后，我明白了。

**00:24:00 - Saron Yitbarek**: DevOps 不仅仅是其工具。它是教导我们如何合作，更快地构建更好的产品的方法。好消息是，随着为像我们这样的开发者准备的新平台出现，我们的工作变得更好、更快、更能适应不同的环境，我的业务圈也可以不断扩大。你会看到人们将 DevOps 扩展到安全领域，于是有了 Sec DevOps。或者他们开始包含商务，就有了 Business DevOps。我们现在要辩论的话题是：对于一个开发者来说，不仅要了解如何使用这些工具，还需要了解所有 DevOps 的工作原理吗？以及我们需要所有开发者都去了解这个新世界吗？

**00:24:30 - Saron Yitbarek**: 这场辩论的结果将决定未来一期《代码英雄》的内容。

你可能已经注意到，在所有关于工具和自动化的谈话中，我漏掉了一些工具。好吧，我把这些留到下一期，当所有这些 DevOps 自动化达到光速时，我们将追踪容器的崛起。

**00:25:00 - Saron Yitbarek**: 是的，这些都会留到第五期。

《代码英雄》是红帽公司推出的原创播客栏目。想要了解更多关于本期节目和以往节目的信息，请访问 [redhat.com/commandlineheroes]。在那里，你还可以注册我们的新闻资讯。想免费获得新剧集的自动推送，请务必订阅该节目。

**00:25:30 - Saron Yitbarek**: 只要在苹果播客、Spotify、Google Play、CastBox 中搜索《代码英雄》，或者通过其他方式收听，并点击订阅，这样你就能在第一时间知道最新剧集。我是 Saron Yitbarek。感谢您的收听，编程不止。

> **什么是 LCTT SIG 和 LCTT LCRH SIG**
>
> LCTT SIG 是 LCTT 特别兴趣小组 (Special Interest Group)。LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
>
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
>
> 本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出

via: 
作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[LikChung](https://github.com/LikChung) 校对：[acyanbird](https://github.com/acyanbird)