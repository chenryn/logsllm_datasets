### 5.4 SSH Logs

We deployed a fast dimensional analysis framework on a dataset containing SSH connection logs to identify the root causes of failed connections. The dataset included various attributes, such as the source and destination server types, and the SSH method. By analyzing these attributes, we aimed to uncover the underlying reasons for connection failures. The findings are continuously monitored via a dashboard, enabling engineers to quickly identify and address anomalous behaviors.

**Publication Information:**
- **Title:** Fast Dimensional Analysis for Root Cause Investigation
- **Journal:** Proc. ACM Meas. Anal. Comput. Syst.
- **Volume:** 4, No. 2
- **Article Number:** 31
- **Publication Date:** June 2020

### Figure 8: Association Rules at Different Min-Lift Thresholds

Figure 8 illustrates the number of association rules generated for different min-lift values. An actionable rule {service, geographical location, SSH method} → session failure is identified when the min-lift value is below approximately 88,000. Despite the low support (0.1) of this rule, it remains highly actionable due to the complexity of the dataset, which includes multiple types of failures simultaneously. This example demonstrates that even low-support rules can be valuable for continuous system improvement, provided the lift is high, especially when the goal is not limited to investigating urgent, major issues.

### 6. Conclusions and Future Work

In this paper, we have explored the problem of root cause analysis (RCA) on structured logs and presented a scalable approach based on frequent item-set mining. We discussed key changes to support and lift metrics, which are crucial for our use case. Additionally, we introduced several optimizations to the core Apriori and FP-Growth algorithms, including parallelism and pre- and post-processing methods. To our knowledge, this is the first work to apply the frequent item-set paradigm at the scale of a large internet company for RCA on structured logs.

#### Future Work

1. **Temporal Analysis:**
   - We aim to understand the trend of association rules over time to detect seasonality and longer-term trends, thereby identifying service or hardware degradation more quickly.

2. **Continuous Feedback:**
   - To overcome the lack of labeled data, we will leverage our production system to gather continuous feedback from engineers. This will help us determine which findings are most relevant and which should be promoted or hidden.

3. **RCA on Free-Form Text Reports:**
   - We are exploring the application of the RCA framework to free-form text reports. To do this, the text reports need to be labeled with topics. Both supervised and unsupervised methods can be used for topic labeling. Supervised models provide interpretable topics and measurable quality, but require labeled data. Unsupervised methods do not need labeled data but often produce less interpretable topics. Once labeled, RCA can detect significant features relevant to the topics, providing starting points for further investigation.

### Author Response for One-Shot Revision

To address the reviewer's comments, we have made the following enhancements:

- **State-of-the-Art Comparison:**
  - A rigorous discussion of state-of-the-art RCA work has been added in Section 2.3, highlighting the fundamental differences between our proposed work and existing papers. A comparison with the STUCCO algorithm is also included in Section 3.7.

- **Data Pre-Aggregation:**
  - Section 4.1.1 has been added to demonstrate the necessity of our unique data pre-aggregation step for enabling an RCA framework at our scale.

- **Experimental Results:**
  - Clearer references in Section 4 show how our experimental results compare our framework with other related works.

- **Filtering Criteria:**
  - Hsupp and Hlif t have been included in the filtering criteria in Section 3.6 to illustrate the practical deployment of the framework.

- **Formatting Fixes:**
  - Several formatting issues in the references have been corrected, and URLs have been provided for online resources.

### References

[1] Lior Abraham, John Allen, Oleksandr Barykin, Vinayak Borkar, Bhuwan Chopra, Ciprian Gerea, Dan Merl, Josh Metzler, David Reiss, Subbu Subramanian, Janet Wiener, and Okay Zed. 2013. Scuba: Diving into Data at Facebook. In International Conference on Very Large Data Bases (VLDB).

[2] R. Agrawal, T. Imielinski, and A. Swami. 1993. Mining association rules between sets of items in large databases. In ACM SIGMOD International Conference on Management of Data.

[3] Dea Delvia Arifin, Shaufiah, and Moch. Arif Bijaksana. 2016. Enhancing spam detection on mobile phone Short Message Service (SMS) performance using FP-growth and Naive Bayes Classifier. In IEEE Asia Pacific Conference on Wireless and Mobile (APWiMob).

[4] S.D. Bay and M.J. Pazzani. 1999. Detecting change in categorical data: mining contrast sets. In ACM SIGKDD International Conference on Knowledge Discovery and Data Mining.

[5] S.D. Bay and M.J. Pazzani. 2001. Detecting group differences: mining contrast sets. Data Mining and Knowledge Discovery 5, 3 (2001).

[6] Ran M. Bittmann, Philippe Nemery, Xingtian Shi, Michael Kemelmakher, and Mengjiao Wang. 2018. Frequent Item-set Mining without Ubiquitous Items. In arXiv:1803.11105 [cs.DS].

[7] David M Blei, Andrew Y Ng, and Michael I Jordan. 2003. Latent dirichlet allocation. Journal of Machine Learning Research 3 (Jan 2003), 993–1022.

[8] Dhruba Borthakur. 2019. HDFS Architecture Guide.

[9] Eric Boutin, Jaliya Ekanayake, Wei Lin, Bing Shi, Jinu. 2014. Apollo: Scalable and Coordinated Scheduling for Cloud-Scale Computing. In USENIX Symposium on Operating Systems Design and Implementation.

[10] Sergey Brin, Rajeev Motwani, Jeffrey D. Ullman, and Shalom Tsur. 1997. Dynamic itemset counting and implication rules for market basket data. In ACM SIGMOD International Conference on Management of Data.

[11] Marco Castelluccio, Carlo Sansone, Luisa Verdoliva, and Giovanni Poggi. 2017. Automatically analyzing groups of crashes for finding correlations. In ESEC/FSE Joint Meeting on Foundations of Software Engineering.

[12] Albert Greenberg, James Hamilton, David A. Maltz, and Parveen Patel. 2009. The Cost of a Cloud: Research Problems in Data Center Networks. In ACM SIGCOMM Computer Communication Review.

[13] Jiawei Han, Jian Pei, and Yiwen Yin. 2000. Mining Frequent Patterns Without Candidate Generation. In ACM SIGMOD International Conference on Management of Data.

[14] David Harris and Sarah Harris. 2012. Digital Design and Computer Architecture (second ed.). Morgan Kaufmann.

[15] Benjamin Hindman, Andy Konwinski, Matei Zaharia, Ali Ghodsi, Anthony D. Joseph, Randy Katz, Scott Shenker, and Ion Stoica. 2011. Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center. In USENIX conference on Networked Systems Design and Implementation.

[16] M. Isard. 2007. Autopilot: Automatic Data Center Management. In ACM SIGOPS Operating System Review.

[17] Fan (Fred) Lin, Matt Beadon, Harish Dattatraya Dixit, Gautham Vunnam, Amol Desai, and Sriram Sankar. 2018. Hardware Remediation At Scale. In IEEE/IFIP International Conference on Dependable Systems and Networks Workshops.

[18] Ruilin Liu, Kai Yang, Yanjia Sun, Tao Quan, and Jin Yang. 2016. Spark-based rare association rule mining for big datasets. In IEEE International Conference on Big Data (Big Data).

[19] MySQL. 2019. MySQL Customer: Facebook.

[20] Suriadi Suriadi, Chun Ouyang, Wil M. P. van der Aalst. 2019. Root Cause Analysis with Enriched Process Logs. In International Conference on Business Process Management, Vol. 132. Springer.

[21] Ashish Thusoo, Joydeep Sen Sarma, Namit Jain, Zheng Shao, Prasad Chakka, Ning Zhang, Suresh Antony, and Hao Liu, Raghotham Murthy. 2010. Hive - A Petabyte Scale Data Warehouse Using Hadoop. In IEEE International Conference on Data Engineering (ICDE).

[22] Martin Traverso. 2013. Presto: Interacting with petabytes of data at Facebook.

[23] Todd Evans, Thomas Graves, Jason Lowe, Hitesh Shah, Siddharth Seth, Bikas Saha, Carlo Curino, Owen O’Malley, Sanjay Radia, Benjamin Reed, and Eric Baldeschwieler. 2013. Apache Hadoop YARN: Yet Another Resource Negotiator. In ACM Symposium on Cloud Computing.

[24] A. Verma, L. Pedrosa, M. Korupolu, D. Oppenheimer, E. Tune, and J. Wilkes. 2015. Large-scale Cluster Management At Google with Borg. In European Conference on Computer Systems (EuroSys).

[25] Bowei Wang, Dan Chen, Benyun Shi, Jindong Zhang, Yifu Duan, Jingying Chen, and Ruimin Hu. 2017. Comprehensive Association Rules Mining of Health Examination Data with an Extended FP-Growth Method. In Mobile Networks and Applications.

[26] Xuerui Wang, Andrew McCallum, and Xing Wei. 2007. Topical n-grams: Phrase and topic discovery, with an application to information retrieval. In IEEE International Conference on Data Mining (ICDM 2007). 697–702.

[27] Ian H. Witten, Eibe Frank, Mark A. Hall, and Christopher J. Pal. 2017. Data Mining: Practical Machine Learning Tools and Techniques (fourth ed.). Morgan Kaufmann.

[28] Tzu-Tsung Wong and Kuo-Lung Tseng. 2005. Mining negative contrast sets from data with discrete attributes. In Expert Systems with Applications.

[29] Kenny Yu and Chunqiang (CQ) Tang. 2019. Efficient, reliable cluster management at scale with Tupperware.

[30] Yi Liu, Wenhao Jiang, Junfang Zeng, and Rui Wang. 2018. Network Alarm Flood Pattern Mining Algorithm Based on Multi-dimensional Association. In ACM International Conference on Modeling, Analysis and Simulation of Wireless and Mobile Systems (MSWIM).

[31] Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015. Character-level convolutional networks for text classification. In Advances in Neural Information Processing Systems. 649–657.

[32] Zhuo Zhang, Chao Li, Yangyu Tao, Renyu Yang, Hong Tang, and Jie Xu. 2014. Fuxi: A Fault-Tolerant Resource Management and Job Scheduling System at Internet Scale. In International Conference on Very Large Data Bases (VLDB).

**Received:** January 2020  
**Revised:** February 2020  
**Accepted:** March 2020  
**Publication Date:** June 2020