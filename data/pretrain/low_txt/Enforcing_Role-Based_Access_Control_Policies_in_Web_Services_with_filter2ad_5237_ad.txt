### 服务与动态约束

服务如借记账户，以及其他动态约束（例如上下文）可以生效。图5展示了在银行应用程序客户端中实施职责分离（SOD）。

### 性能测量

在这个案例研究的框架内，我们进行了早期性能测量。特别是，我们测量了从应用程序客户端到应用程序Web服务执行访问请求的时间。为此，我们配置了一个带有50个用户和10个角色的基于角色的访问控制（RBAC）系统。拦截器运行在Pentium IV 2 GHz上，授权引擎运行在Pentium M 1.6 GHz上。执行1000次随机访问请求（如借记/贷记账户），我们得到了每个访问请求的平均延迟时间约为86毫秒（相比之下，不使用我们的框架时每个访问请求的延迟时间为14毫秒）。因此，使用我们的授权框架后，一个访问请求比普通的Web服务请求慢大约六倍。

然而，我们的授权框架可以配置为仅对安全关键的访问请求进行引导（参见第3.1节）。其他请求不需要被拦截，即非安全关键的功能可以直接由应用程序Web服务导出，而不是通过拦截器。需要注意的是，应用程序Web服务接口是由了解哪些功能是安全关键的领域专家设计的。

### 基于格的访问控制策略

我们的授权框架还可以用于实现基于格的访问控制（LBAC）策略[24]。LBAC特别用于军事领域，但也曾在大型企业中实施[25]。尽管LBAC是一个古老的访问控制模型，但我们在这里用它来展示我们授权框架中授权引擎组件的灵活性。

正如Sandhu[26]所展示的，RBAC可以通过形成两个双重角色层次结构（一个用于读取角色，另一个用于写入角色）并通过定义RBAC关系上的授权约束来模拟LBAC策略。具体来说，安全标签x由两个角色xR和xW表示，其中xR是适当的读取角色，xW是适当的写入角色。为了简洁起见，这里省略了这一构造的细节。

我们现在讨论一个具有n个安全标签l1, …, ln的LBAC策略。为了使用USE系统实现LBAC，我们首先将LBAC表达为OCL。为了给出OCL版本LBAC的印象，这里给出了Sandhu使用的一个授权约束；Sandhu构造中的其他约束可以类似地表达。该约束规定每个会话恰好有两个角色xR和xW，并意味着用户以安全级别x登录。为此，我们定义了两个角色集RR = {L1R, …, LnR}和WR = {L1W, …, LnW}，分别用于读取和写入角色。我们还为每个角色添加了一个称为label的属性。然后，我们得到以下OCL约束：

```ocl
context Session inv SessionConstraint:
let 
  RR : Set(Role) = Set{L1R, …, LnR},
  WR : Set(Role) = Set{L1W, …, LnW}
in 
  self.role_->size()=2 and  
  self.role_->forAll(rr, wr| 
    RR->includes(rr) and WR->includes(wr) 
    and rr.label=wr.label)
```

请注意，这个特定的授权约束是在运行时强制执行的，而不是在管理时强制执行的，因为涉及会话。每当应用程序客户端创建一个新的用户会话并尝试访问分类数据时，都会检查此约束。在这种情况下，应用程序客户端调用CreateSession RBAC系统函数。此请求随后通过访问决策处理程序传递给授权引擎。如果违反了约束，则结果返回给应用程序客户端。否则，授权引擎中的安全状态相应更改，即生成一个新的UML类Session的对象。此外，成功激活角色的事实也必须存储在授权引擎中。

### 相关工作

在UML安全建模的背景下有许多相关工作，例如[18, 19, 29]。如上所述，USE系统是一个通用验证工具，因此可以用于其他UML/OCL编码的RBAC策略，而不仅仅是第4节中给出的策略。特别是，Lodderstedt等人[18]提出了SecureUML语言，用于将访问控制规范集成到应用程序模型中，并自动生成应用程序的访问控制基础设施。他们也处理授权约束，但不专注于SOD约束。另一个区别是我们的目标是为Web服务应用程序提供一个组织范围内的授权引擎，可以强制执行各种RBAC策略。然后，应用程序可以在需要时使用我们的引擎。我们并没有主要打算提供一种将访问控制与应用程序模型集成的方法。

XACML是一个OASIS标准，支持以标准化、机器可读的方式指定授权策略及相关查询[15]。XACML的RBAC配置文件扩展了标准，以表达使用RBAC的授权策略，但其范围仅限于核心和层次RBAC[20]。然而，该配置文件缺乏对SOD约束和其他授权约束变体的全面支持。显然，可以认为RBAC策略可以直接在XACML中指定。但是，手动直接在XACML中指定此类策略可能会比较复杂、耗时且容易出错。由于OCL具有形式语义[16]，我们可以使用诸如USE[22]之类的工具验证RBAC策略是否存在冲突或缺失约束。据我们所知，目前还没有能够以这种方式验证XACML策略的工具。

此外，还有其他一些授权引擎原型可以与我们的引擎进行比较。其中之一是由Zurko等人[30]开发的Adage。Adage是出于类似目的开发的。具体来说，Adage可以在中间件层（例如，CORBA）上强制执行不同类型的基于角色的SOD约束。此外，Adage提供了一种称为AL的策略规范语言。然而，Adage不支持某些类型的约束，如上下文约束。此外，没有可用的访问控制策略验证工具。Bhatti等人提出了一种用于Web服务的授权框架，可以强制执行Joshi等人引入的GTRBAC模型意义上的时间约束[31]。此外，还支持简单的SOD约束。

### 结论与未来工作

在本文中，我们介绍了一个基于Web服务的授权框架，用于在各种（Web服务）应用程序中强制执行组织范围内的RBAC策略。由于Web服务旨在集成组织的各种应用程序，从而可能暴露安全关键功能，因此在Web服务层面强制执行组织规则是可取的。特别地，我们展示了如何通过拦截器将授权引擎与组织范围内的应用程序集成起来。这样，授权逻辑与应用程序逻辑解耦。授权引擎可以轻松扩展以支持新的授权约束类型，这些类型可以用OCL表达。这样，授权引擎可以独立于所涉及的领域实现各种类型的授权约束。

作为未来的工作，我们可以扩展我们的授权引擎以包含委托和撤销的约束。最后，将授权引擎集成到工作流管理系统中也会很有趣。

### 参考文献

1. J. Rumbaugh, I. Jacobson, G. Booch. The Unified Modeling Language Reference Manual, Second Edition. Reading, Mass., Addison Wesley Longman, 2004.
2. J. Warmer, A. Kleppe. The Object Constraint Language: Getting Your Models Ready for MDA, Addison-Wesley, 2003.
3. R. Sandhu, E. Coyne, H. Feinstein, C. Youman. Role-based access control models, IEEE Computer, vol. 29, no. 2, pp. 38–47, Feb. 1996.
4. American National Standards Institute Inc. Role Based Access Control, ANSI-INCITS 359-2004, 2004.
5. D.F. Ferraiolo, D.R. Kuhn, R. Chandramouli, Role-based access control, Artec House, Boston, 2003.
6. M. Nyanchama, S. Osborn. The graph model and conflicts of interest. ACM Trans. Inf.Syst. Sec. 2, 1, 1999.
7. G.-J. Ahn. The RCL 2000 language for specifying role-based authorization constraints, Ph.D. dissertation, George Mason University, Fairfax, Virginia, 1999.
8. V. D. Gligor, S. I. Gavrila, D. Ferraiolo. On the formal definition of separation-of-duty policies and their composition. In Proc. IEEE Symposium on Security and Privacy, May 1998, pp. 172–185.
9. R. Simon, M. Zurko. Separation of duty in role-based environments, IEEE Computer Security Foundations Workshop (CSFW ’97), 1997, pp. 183–194.
10. K. Sohr, M. Drouineaud, G.-J. Ahn. Formal Specification of Role-based Security Policies for Clinical Information Systems, in Proc. of the 20th ACM Symposium on Applied Computing, 2005.
11. J. Joshi, E. Bertino, U. Latif, A. Ghafoor. A generalized temporal role-based access control model. IEEE Trans. Knowl. Data Eng., vol. 17, no. 1, pp. 4–23, 2005.
12. E. Bertino, E. Ferrari, V. Atluri. The specification and enforcement of authorization constraints in workflow management systems. ACM Trans. Inf. Syst. Secur., vol. 2, no. 1, pp. 65–104, 1999.
13. L. Zhang, G.-J. Ahn, B.-T. Chu. A role-based delegation framework for healthcare information systems, Proceedings of the 7th ACM Symposium on Access Control Models and Technologies, June 03-04, 2002, Monterey, California, USA.
14. American National Standards Institute Inc., Role Based Access Control, 2004, ANSI-INCITS 359-2004.
15. OASIS. eXtensible Access Control Markup Language (XACML), Vers. 2.0, February 2005.
16. M. Richters. A Precise Approach to Validating UML Models and OCL Constraints. PhD thesis. Universität Bremen, 2002.
17. E. Gamma, R. Helm, R. Johnson, J. Vlissides. Design Patterns: Elements of Reusable Object-Oriented Software, Addison-Wesley, 1995.
18. T. Lodderstedt, D. Basin, J. Doser. SecureUML: A UML-Based Modeling Language for Model-Driven Security, UML, 5th International Conference. Vol. 2460. Dresden, Germany, pp.426-441, 2002.
19. I. Ray, N. Li, R. France, D.-K. Kim. Using UML to visualize role-based access control constraints. In Proc. of the 9th ACM Symp. on Access Control Models and Technologies, pp. 115–124, USA, 2004.
20. A. Anderson. Core and hierarchical role based access control (RBAC) profile of XACML v2.0, OASIS Standard, 2005.
21. D. Ferraiolo, D. Gilbert, N. Lynch. An examination of federal and commercial access control policy needs, in Proc. of the NIST-NCSC Nat. (U.S.) Comp. Security Conference, 1993, pp. 107–116.
22. K. Sohr, M. Drouineaud, G.-J. Ahn, M. Gogolla. Analyzing and Managing Role-Based Access Control Policies, IEEE Trans. Knowl. Data Eng., vol. 20, no. 7, 2008.
23. C. K. Georgiadis, I. Mavridis, G. Pangalos, R. K. Thomas. Flexible team-based access control using contexts. In Proc. of the 6th ACM Symp. on Access Control Models and Technologies, p.21-27, 2001, USA.
24. D.E. Denning. A lattice model of secure information flow, Comm. of the ACM, vol. 19, no. 5, pp. 236-243, 1976.
25. G. Stampe. Personal Communication, 2007.
26. R.S. Sandhu. Role hierarchies and constraints for lattice-based access controls. In Proc. 4th European Symposium on Research in Computer Security, 1996.
27. W3C: XML-Signature Syntax and Processing, 2002. Available at http://www.w3.org/TR/2002/REC-xmldsig-core-20020212/
28. M. Brandner, M. Craes, F. Oellermann, O. Zimmermann. Web services-oriented architecture in production in the finance industry. Informatik Spektrum, vol. 27, no 2, pp. 136-145, 2004.
29. T. Priebe, W. Dobmeier, B. Muschall, G. Pernul. ABAC attributbasierte - Zugriffskontrolle, Sicherheit 2005, pp. 285-296. Referenzmodell Ein für
30. M. Zurko, R. Simon, T. Sanfilippo. A user-centered, modular authorization service built on an RBAC foundation. In Proc. of the IEEE Symp. On Sec. and Priv., pp. 57–71, Oakland, 1999.
31. R. Bhatti, A. Ghafoor, E. Bertino, J. Joshi. X-GTRBAC: an XML-based policy specification framework and architecture for enterprise-wide access control. ACM TISSEC, 8(2):187–227, 2005.