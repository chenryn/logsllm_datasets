### 6.3 Vulnerable Profiles with Permissive Hostname Constraints

In the profiles containing CA certificates in `/etc/ssl/certs`, we identified 7 as being vulnerable (refer to Table E3 in the Appendix). These profiles have permissive hostname matching constraints, which allow an attacker to obtain a certificate chain from the corresponding anchoring CA by strategically purchasing a domain. The attacker can then launch a targeted Evil Twin (ET) attack using this certificate. This vulnerability is further exacerbated by the substring hostname matching logic used by Chrome OS (Section 4.2.2). Even if Chrome OS addresses this issue in the future, the hostname constraints in these profiles must be tightened to secure the supplicant configurations.

For the other 13 Chrome OS profiles with permissive hostname constraints, the feasibility of the attack depends on the issuing policies of their anchoring CAs, which are not part of `/etc/ssl/certs` and are mostly internal CAs. Similarly, macOS, Windows 10, and Android 10 profiles with permissive hostname constraints also face this risk, as they do not use commonly trusted root CA certificates as trust anchors.

### 6.4 Large Number of Certificates in Profiles

Another notable observation is that some profiles contain a large number of certificates. Approximately two-thirds of the profiles embed only one anchoring certificate, while about 30% embed 2-5 certificates. However, there are a few instances where the total number of embedded certificates exceeds a hundred.

The impact of importing these certificates varies by operating system. For Chrome OS, the imported certificates will appear in a drop-down menu as possible trust anchors when configuring another WPA2-Enterprise network. Although this may cause UI clutter, it does not compromise security, as these certificates are not included in the system CA store. On macOS, however, this is a significant concern because the imported CA certificates are added to the system CA store, affecting the certificate validation of other WPA2-Enterprise networks. More critically, self-signed root CA certificates imported into macOS are given full trust for various purposes, potentially enabling other attacks as discussed in Section 4.4.2.

### 6.5 Quality of Certificates in CAT Profiles

Finally, we analyzed the quality of the certificates embedded in the CAT profiles (Table 4). We found that short RSA modulus (e.g., â‰¤ 1024 bits) is still present in about 5% of the certificates. Despite known weaknesses in collision resistance, MD5-based signatures are still found in a few certificates. SHA1-based signatures, which are also collision-prone, are used in nearly half of the certificates. SHA256-based signatures are more common, but SHA512-based signatures are rare. RSA remains the predominant choice for digital signatures, with only a small fraction of certificates signed using ECDSA. Additionally, a few Version 1 certificates were found, which, given that certificate extensions were introduced in X.509 version 3, require out-of-band verification. About 3% of the certificates are non-CA, and surprisingly, about 10% are expired. Embedding non-CA or expired certificates in the profiles is counterproductive, as they do not contribute to a valid chain of trust.

### 7. Analyzing TLS Parameters Used by Authentication Servers

#### 7.1 Data Collection

Leveraging the roaming nature of eduroam, we used local eduroam access at our universities to conduct this measurement study. We compiled a list of domains likely providing authentication services for eduroam from multiple sources, including the public list of Identity Providers (IdPs), national/regional eduroam lists, and results from Section 5. We then tested a variety of generic usernames and subdomain prefixes to establish TLS tunnels via PEAP or TTLS for 3637 domains. To focus on TLS parameters, we modified wpa_supplicant v2.9 to terminate the TLS handshake after receiving and archiving the ServerHello and Certificate messages. No actual user log-ins (phase-2 authentication) were performed. This modification also allowed us to extract and archive encrypted certificate chains in TLSv1.3. To test for deprecated SSL versions, we used older versions of wpa_supplicant and OpenSSL as needed.

#### 7.2 Traffic Evaluation

We captured TLS traffic from the authentication servers of 3637 eduroam domains worldwide (see Table F4 in the Appendix for the top 20 contributing TLDs). Table 5 provides an overview of our results.

##### 7.2.1 Analysis of Session Parameters

We found that PEAP has better support than EAP-TTLS (see Table 5). 94.3% of the 3637 domains support PEAP, while only 67.4% support EAP-TTLS. We also investigated the supported TLS versions by enforcing different versions in the Client Hello message. Legacy TLS versions are susceptible to various attacks and have been proposed for deprecation by standardization bodies. Surprisingly, many domains still support older and/or deprecated TLS versions (e.g., SSLv3 to TLSv1.1). When offering all TLS versions in the Client Hello packet, 71.1% selected TLSv1.2 and 26.9% (979 domains) selected TLSv1. Further investigation revealed that 26.6% (968) of the domains support only TLSv1. These statistics indicate that many authentication servers in the eduroam ecosystem rely on old and weak TLS versions.

##### 7.2.2 Analysis of Certificate Parameters

We evaluated the quality of X.509 certificate chains used in the eduroam ecosystem. If a remote authentication server sends a chain with weak/insecure parameters, an attacker could compromise the TLS tunnel and steal user credentials. We collected 3637 X.509 certificate chains, including 3637 leaf and 5300 (intermediate and root) CA certificates. While many certificates are reused across different domains, we identified 2701 unique leaf and 652 unique CA certificates. A significant number of these certificates use weak parameters (see Table 5). For example, 5.9% of the unique leaf certificates use short RSA moduli (e.g., 1024 bits), and 12% are signed with SHA1-RSA, both of which are vulnerable to collision attacks. We also found that some domains use expired or version 1 certificates, which cannot provide adequate trust.

**Chain Verification Status:**
We verified each X.509 certificate chain using OpenSSL and found that 39.5% were rejected for various reasons. Out of the rejected chains, 5.3% had expired certificates, and 1% had invalid CA certificates due to incorrect X.509 extension values. 35.2% of the rejected chains were missing issuer certificates, 50.8% had correctly built chains but self-signed roots, and 7.7% were single-certificate, self-signed chains. The high number of unverifiable chains may explain why many TEIs instruct users to disable certificate validation entirely.

**Certificate Lifespan:**
We examined the lifespan of the 2701 unique leaf and 652 unique CA certificates. Most lifespans are typical, with 53.2% of leaf certificates valid for 2-5 years and 69.2% of CA certificates valid for 5-20 years. However, we found a few domains (1.5%) using leaf certificates with more than 20 years of validity, and one domain with a negative lifespan. 2.1% of CA certificates have unusually long validity (more than 50 years), primarily from self-signed CAs used by IAM products.

**Suspected Cases of Key Reuse:**
By examining certificates and public keys used by multiple TEIs, we identified several cases of suspected key reuse, similar to practices seen in TLS-intercepting anti-virus software. We found clusters of TEIs in three countries (KR, CN, FR) using certificates or public keys generated by IAM product vendors. If the private keys are shared across different instances of the same product, an attacker could purchase such products and abuse the shared keys for targeted ET attacks. To protect the organizations involved, we redact the names of TEIs and vendors in the following discussion.

**Cluster Analysis:**
- **Korea:** The largest cluster includes 219 universities, all using the same certificate chain issued to *.ac.kr. It is possible that *.ac.kr provides authentication services for these universities.
- **China:** A cluster of 18 universities uses the same server certificate issued to C=FR;ST=Radius;O=Example Inc.;CN=Example Server Certificate, with both the CA and server certificates expired in 2017. It is unclear whether these schools share the same authentication server or reuse the same private key.
- **China:** Another cluster of 17 universities uses a leaf certificate issued to *.com.cn, owned by a Chinese networking equipment vendor. This certificate appears to come from one of the vendor's IAM software packages.
- **Korea:** A cluster of 12 universities uses a leaf certificate issued to C=KR;ST=Seoul;L=*;OU=network;CN=*, which seems to come from an IAM server product developed by a Korean vendor. We suspect these are cases of key reuse, but cannot confirm definitively. If true, the staff and students of these 29 schools could be vulnerable to ET attacks, regardless of their supplicant configurations.

**Public Key Clusters:**
We also computed clusters of domains with the same public key on the leaf certificate and compared them with clusters having identical certificate chains. Different certificate chains with the same leaf public key strongly suggest key reuse. The largest cluster among the three includes 10 Korean universities, with the same CA certificate (valid until 2111) and leaf certificates issued to the same entity (C=KR;ST=Seoul;L=Seoul;O=*).