### Semantic Web Processes: Semantics-Enabled Annotation, Discovery, Composition, and Orchestration of Web-Scale Processes

**Authors:**
- Jorge Cardoso (University of Madeira)
- Amit Sheth (LSDIS Lab, Computer Science, University of Georgia; Semagix, Inc)

**Conference:**
4th International Conference on Web Information Systems Engineering (WISE 2003), December 10-12, 2003, Rome, Italy.

---

### Our Focus (1)

- **Web Services and Web Processes:** Web services and their composition into Web processes hold the potential to power e-commerce and e-services.
- **Challenges in Supporting Web Processes:** Multi-enterprise and web-scale processes require addressing issues such as heterogeneity, integration, scalability, dynamic change, and performance.
- **Role of Semantics:** Semantics is seen as a key enabler to address these challenges. Semantic Web processes build upon Web services and Semantic Web technologies.
- **Tutorial Scope:** This tutorial focuses on adding semantics to Web services and leveraging them throughout the Web process lifecycle, including specification, discovery, composition, and execution.
  - **Functional Perspective:** Involves process composition through Web service discovery and handling semantic heterogeneity.
  - **Operational Perspective:** Involves research on QoS (Quality of Service) specifications for Web services and processes.

### Our Focus (2)

- **Semantics in Web Processes:**
  - **Web Process Composition**
  - **Web Process QoS**
  - **Web Services:**
    - **Web Service Annotation**
    - **Web Service Discovery**
    - **Web Service QoS**

### The Basics

- **What are Web Services, Web Processes, and Semantics?**

### Web Services: Definition

- **Definition:** Web services are self-contained, self-describing, modular applications that can be published, located, and invoked across the Web. They perform functions ranging from simple requests to complex business processes.
- **Deployment:** Once deployed, other applications and Web services can discover and invoke the deployed service.
- **Source:** IBM Web service tutorial

### Why Web Services?

- **Comparison with Other Technologies:**
  - **Web Services vs. CORBA, Jini, EJB, WSDL, RMI, DCOM, etc.**
  - **Key Features:**
    - **Data Model:** SOAP message exchange model
    - **Coupling:** Loose coupling
    - **Parameter Passing:** Pass by value
    - **Type Checking:** Runtime type checking
    - **State Management:** Stateless (Web services); Stateful (Web processes)
    - **Firewall Traversal:** Uses HTTP port 80
    - **Service Discovery:** UDDI
    - **Communication Mode:** 2-way synchronous (Web services); 2-way asynchronous (Web processes)

### What are Web Processes (1)?

- **Next-Generation Workflow Technology:** Web processes facilitate interactions between organizations, markets, competitors, suppliers, and customers, supporting enterprise-level and core business activities.
- **Intra and Inter-Organizational Workflow:** Web processes encompass both intra and inter-organizational workflows.
- **Composition:** Created from the composition of Web services.
- **Semantic Web Processes:** When all tasks in a Web process are semantically described, they are referred to as Semantic Web processes.

### What are Web Processes (2)?

- **Description:** Web processes describe how Web services are connected to create reliable and dependable business solutions.
- **Business Solutions:** Allow businesses to describe sophisticated processes that can both consume and provide Web services.
- **Enterprise Role:** Simplify the integration of business and application processes across technological and corporate domains.

### Web Process Example

- **Graphical Representation:** An example of a Web process, such as the BarnesBookPurchase process, illustrating the connection of Web services.

### Web Process Composition

- **Architectural Evolution:** Stages include Process Portal, Process Vortex, and Dynamically Trading Processes.
  - **Process Portal:** One-stop for e-services, peer-to-peer interactions between buyers and sellers.
  - **Process Vortex:** Interactions through a third-party market maker, predefined processes, shared ontology.
  - **Dynamically Trading Processes:**

### Globalization of Processes

- **B2B E-Services:** Distributed workflows and Web processes at the enterprise, inter-enterprise, and global levels.

### Big Challenges

- **Heterogeneity and Autonomy:**
  - **Syntactic, Semantic, and Pragmatic Heterogeneity**
  - **Complex Rules/Regulations:** Related to B2B and e-commerce interactions
  - **Solution:** Machine-processable descriptions
- **Dynamic Nature of Business Interactions:**
  - **Demands:** Efficient discovery, composition, etc.
  - **Scalability:** From enterprises to the Web
  - **Needs:** Automated service discovery/selection and composition
- **Proposition:** Semantics is the most important enabler to address these challenges.

### What are Semantics and Ontologies?

- **Ontology:** A vocabulary of terms and a specification of their meaning, aimed at creating an agreed-upon vocabulary and semantic structure for exchanging information about a domain.

### Roadmap

- **Annotation of Web Services**
- **Web Process Semantic Composition**
- **Web Service Discovery**
- **Web Processes Quality of Service**

### Semantics for Web Processes

- **Data/Information Semantics:**
  - **What:** Formal definition of data in input and output messages of a Web service.
  - **Why:** For discovery and interoperability.
  - **How:** By annotating input/output data using ontologies.
- **Functional/Operational Semantics:**
  - **Formally Representing Capabilities:** For discovery and composition of Web services.
  - **Annotating Operations:** Including preconditions and effects.
- **Execution Semantics:**
  - **Formally Representing Execution Flow:** For analysis, validation, and execution.
  - **Using Models:** State machines, Petri nets, activity diagrams, etc.
- **QoS Semantics:**
  - **Formally Describing Operational Metrics:** To select the most suitable service.
  - **Using QoS Model:** [Cardoso and Sheth, 2002] for Web services.

### Semantics for Web Process Lifecycle

- **Development and Execution:**
  - **Description and Annotation:** Using WSDL, WSEL, BPWS4J, DAML-S, BPEL, etc.
  - **Execution Engines:** Meteor-S, Intalio, HP, eFlow, etc.
  - **Publication and Discovery:** Using UDDI, WSCI, WSCL, WSIL, DAML-S, etc.
- **Functional/Operational Semantics:**
  - **BPEL, BPML, UDDI, WSCI, WSCL, WSIL, DAML-S, etc.**
- **QoS Semantics:**
  - **BPEL, BPML, UDDI, WSCI, WSCL, WSIL, DAML-S, etc.**
- **Execution Semantics:**
  - **Meteor-S, BPML, UDDI, WSCI, WSCL, WSIL, DAML-S, etc.**

### Web Process Architecture

- **Exploring Semantics:**
  - **Composition, Brokering, Discovery:** Using UDDI, WSDL, SOAP, XML, Web servers, HTTP/HTTPS, TCP/IP-SSL.
- **Semantic Web Servers and Browsers:**
  - **Associating Ontological Concepts:** To Web service descriptions.
  - **Supporting Interpretation:** Of Web pages and content.

### Web Service Standards

- **WSDL (Web Services Description Language):**
  - **Definition:** Describes services as collections of network endpoints or ports.
  - **XML-Based Document:** Used to describe and locate Web services.
- **SOAP (Simple Object Access Protocol):**
  - **Message Layout Specification:** Defines a uniform way of passing XML-encoded data.
  - **RPC over the Web:** Allows for remote procedure calls over the web.
- **XML (eXtensible Markup Language):**
  - **Data Description:** Designed to describe data and focus on what the data is.

### Semantic Annotation of Web Services

- **Enhancing Discovery, Composition, and Orchestration:**
  - **Solution:** Annotate WSDL interfaces with semantic metadata based on relevant ontologies.
  - **Current Scenario:** WSDL descriptions are mainly syntactic, lacking functional information, making semantic matchmaking difficult.

### How to Annotate

- **Mapping Input and Output Data:**
  - **Annotate Data Types and Functionality:** Using ontologies to unambiguously understand the functionality of the services and the semantics of the operational data.