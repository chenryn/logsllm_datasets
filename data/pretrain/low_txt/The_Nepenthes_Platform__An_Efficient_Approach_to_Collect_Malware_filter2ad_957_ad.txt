### Introduction

The following numbers represent a list of malware samples, each identified by its type and variant. The initial set of numbers (639, 540, 501, 497, 442, 386, 357) likely correspond to the frequency or count of each malware sample.

- Worm.Padobot.M
- Trojan.Gobot-3
- Worm.Padobot.N
- Trojan.Gobot-4
- Trojan.Poebot-3
- Trojan.IRCBot-16
- Worm.Padobot.P
- Trojan.Downloader.Delf-35
- Trojan.Mybot-1411
- Trojan.Ghostbot.A

These samples are primarily PE (Portable Executable) or MZ (DOS MZ executable) files, targeting systems running Windows. This is expected since the current focus of the Nepenthes platform is on emulating Windows vulnerabilities.

### Analysis of Collected Binaries

Of the collected binaries, approximately 7% are broken, with corrupted header or body structures. This corruption is often due to faulty propagation attempts, such as using TFTP (Trivial File Transfer Protocol), which relies on the unreliable UDP protocol. Additionally, downloads can be interrupted, leading to corrupted binaries if the attacking station is disconnected from the Internet.

The remaining 14,414 binaries were analyzed using various antivirus (AV) engines. Since all these binaries attempted to propagate, they are assumed to be malicious. A perfect AV engine should detect 100% of these samples. However, our analysis shows that current signature-based AV engines are far from perfect. Table 2 provides an overview of the detection rates for four different AV engines. When scanning the entire set of over 14,000 binaries, the detection rates range between 80% and 90%, indicating a significant number of undetected malware. The detection rates for the latest files, captured within the last 24 hours, are even lower, suggesting that "fresh" malware often goes undetected due to the lack of updated signatures.

### Top Ten Malware Types

Table 3 summarizes the top ten malware types collected, identified using the ClamAV engine. In total, 642 different types of malware were detected. Bots dominate the samples, reflecting the prevalence of botnets and their aggressive spreading. For example, 1,136 unique samples were detected as Worm.Padobot.M, based on their MD5 checksums.

### Future Work

#### Extension of Nepenthes Platform

Future work includes extending the Nepenthes platform to support UDP-based exploits. Most UDP-based exploits are "single-shot" attempts, requiring only the capture and analysis of the payload. For more complex exploits, we can emulate the necessary parts to trick the exploit, similar to TCP-based exploits.

#### Automated System for Stopping Remote Control Networks

The Nepenthes platform is a step towards an automated system for stopping remote control networks, such as botnets. The process involves:

1. **Automated Malware Collection**: Nepenthes can collect malware propagating within a network without supervision.
2. **Extracting Sensitive Information**: We are developing an automated mechanism to extract sensitive information from a binary, using honeypots and sandbox-like techniques.
3. **Infiltration and Monitoring**: Impersonate a legal victim to infiltrate the network, study the attacker, and gather more information.
4. **Disruption and Shutdown**: Automate the disruption of communication channels and shutdown of the main server, though this requires further research.

#### Network Intrusion Detection System (NIDS)

We are deploying a NIDS based on Nepenthes in cooperation with SurfNET. The goals include understanding and stopping malicious traffic within a LAN, scaling to thousands of honeypots, and maintaining low false positives. Our experience shows that Nepenthes scales well, with no false positives and minimal false negatives.

#### Empirical Analysis

An empirical analysis of a distributed Nepenthes setup is also planned. This will help verify the effectiveness of distributed worm monitoring and provide insights into the local spread of malware.

### Conclusion

The Nepenthes platform is a scalable and flexible honeypot-based system for large-scale malware collection. It emulates vulnerable parts of services, offering high efficiency and expressiveness. Compared to traditional honeypots, Nepenthes can handle a wide array of exploits and is capable of listening to over 16,000 IP addresses simultaneously. Our analysis of collected malware highlights the limitations of current AV engines and suggests potential applications of Nepenthes in automated defense systems and next-generation NIDS.

### References

1. K. Anagnostakis, S. Sidiroglou, P. Akritidis, K. Xinidis, E. Markatos, and A. Keromytis. Detecting Targeted Attacks Using Shadow Honeypots. In Proceedings of the 14th USENIX Security Symposium, 2005.
2. Michael Bailey, Evan Cooke, Farnam Jahanian, Jose Nazario, and David Watson. The Internet Motion Sensor: A Distributed Blackhole Monitoring System. In Proceedings of the 12th Annual Network and Distributed System Security Symposium (NDSS 05), 2005.
3. Edward Balas and Camilo Viecco. Towards a Third Generation Data Capture Architecture for Honeynets. In Proceedings of the 6th IEEE Information Assurance Workshop, West Point, 2005. IEEE.
4. Team Cymru: The Darknet Project. Internet: http://www.cymru.com/Darknet/, Accessed: 2006.
5. David Dagon, Cliff Zou, and Wenke Lee. Modeling Botnet Propagation Using Time Zones. In Proceedings of the 13th Annual Network and Distributed System Security Symposium (NDSS 06), 2006.
6. Felix Freiling, Thorsten Holz, and Georg Wicherski. Botnet Tracking: Exploring a Root-Cause Methodology to Prevent Distributed Denial-of-Service Attacks. In 10th European Symposium On Research In Computer Security, ESORICS05, Milano, Italy, September 12-14, 2005, Proceedings, Lecture Notes in Computer Science. Springer, 2005.
7. Thorsten Holz. A Short Visit to the Bot Zoo. IEEE Security & Privacy, 3(3):76–79, 2005.
8. Thorsten Holz. Spying With Bots. USENIX ;login:, 30(6):18–23, 2005.
9. Xuxian Jiang and Dongyan Xu. Collapsar: A VM-Based Architecture for Network Attack Detention Center. In Proceedings of 13th USENIX Security Symposium, 2004.
10. Bill McCarty. Automated Identity Theft. IEEE Security & Privacy, 1(5):89–92, 2003.
11. David Moore, Colleen Shannon, Geoffrey M. Voelker, and Stefan Savage. Network Telescopes. Technical Report TR-2004-04, CAIDA, 2004.
12. David Moore, Geoffrey M. Voelker, and Stefan Savage. Inferring Internet Denial-of-Service Activity. In Proceedings of the 10th USENIX Security Symposium, August 2001.
13. Georgios Portokalidis. Argos: An Emulator for Capturing Zero-Day Attacks. Internet: http://www.few.vu.nl/∼porto/argos/, Accessed: 2006.
14. Niels Provos. A Virtual Honeypot Framework. In Proceedings of 13th USENIX Security Symposium, pages 1–14, 2004.
15. Moheeb Abu Rajab and Andreas Terzis. On the Effectiveness of Distributed Worm Monitoring. In Proceedings of the 14th USENIX Security Symposium, 2005.
16. Yoichi Shinoda, Ko Ikai, and Motomu Itoh. Vulnerabilities of Passive Internet Threat Monitors. In Proceedings of the 14th USENIX Security Symposium, 2005.
17. Stuart Staniford, David Moore, Vern Paxson, and Nicholas Weaver. The Top Speed of Flash Worms. In ACM Workshop on Rapid Malcode (WORM), 2004.
18. Symantec. Mantrap. Internet: http://www.symantec.com/, Accessed: 2006.
19. Nicolas Vanderavero, Xavier Brouckaert, Olivier Bonaventure, and Baudouin Le Charlier. The HoneyTank: A Scalable Approach to Collect Malicious Internet Traffic. In Proceedings of the International Infrastructure Survivability Workshop, 2004.
20. Michael Vrable, Justin Ma, Jay Chen, David Moore, Erik Vandekieft, Alex C. Snoeren, Geoffrey M. Voelker, and Stefan Savage. Scalability, Fidelity, and Containment in the Potemkin Virtual Honeyfarm. In Proceedings of the ACM Symposium on Operating System Principles (SOSP), 2005.
21. Kathy Wang. Honeyclient. Internet: http://honeyclient.org, Accessed: 2006.
22. Yi-Min Wang, Doug Beck, Chad Verbowski, Shuo Chen, Sam King, Xuxian Jiang, and Roussi Roussev. Automated Web Patrol with Strider Honeymonkeys: Finding Websites That Exploit Browser Vulnerabilities. In Proceedings of the 13th Network and Distributed System Security Symposium (NDSS 06), 2006.
23. Vinod Yegneswaran, Paul Barford, and Dave Plonka. On the Design and Use of Internet Sinks for Network Abuse Monitoring. In Proceedings of the 7th International Symposium on Recent Advances in Intrusion Detection (RAID), 2004.