### NGINX Cookbook: Advanced Recipes for High-Performance Load Balancing (2019 Update)
#### Derek DeJonghe

---

**Compliments to NGINX**

**Try NGINX Plus and NGINX WAF Free for 30 Days**

Experience high-performance application delivery for microservices with NGINX Plus, a software load balancer, web server, and content cache. The NGINX Web Application Firewall (WAF) protects applications against sophisticated Layer 7 attacks.

**Key Benefits:**
- **Cost Savings:** Over 80% cost savings compared to hardware-based load balancers and WAFs.
- **Reduced Complexity:** The only all-in-one solution combining load balancing, content caching, and web server capabilities.
- **Exclusive Features:** JWT authentication, high availability, the NGINX Plus API, and other advanced functionalities are exclusive to NGINX Plus.
- **NGINX WAF Trial:** A trial of the NGINX WAF, based on ModSecurity, is included when you download a trial of NGINX Plus.

**Download at [nginx.com/freetrial](http://nginx.com/freetrial)**

---

### 2019 Update
**NGINX Cookbook: Advanced Recipes for High-Performance Load Balancing**
By Derek DeJonghe

**Published by O’Reilly Media, Inc.**
- Copyright © 2019 O’Reilly Media Inc. All rights reserved.
- Printed in the United States of America.
- Published by O’Reilly Media, Inc., 1005 Gravenstein Highway North, Sebastopol, CA 95472.

**O’Reilly Books:**
- Available for educational, business, or sales promotional use.
- Online editions available for most titles at [oreilly.com/safari](http://oreilly.com/safari).
- For more information, contact our corporate/institutional sales department: 800-998-9938 or [corporate@oreilly.com](mailto:corporate@oreilly.com).

**Development Team:**
- Development Editor: Virginia Wilson
- Proofreader: Chris Edwards
- Acquisitions Editor: Brian Anderson
- Interior Designer: David Futato
- Production Editor: Justin Billing
- Cover Designer: Karen Montgomery
- Copyeditor: Octal Publishing, LLC
- Illustrator: Rebecca Demarest

**First Edition: March 2017**
- Revision History:
  - First Release: 2017-05-26
  - Second Release: 2018-11-21

**Trademark Information:**
- The O’Reilly logo, NGINX Cookbook, the cover image, and related trade dress are trademarks of O’Reilly Media, Inc.
- While the publisher and the author have used good faith efforts to ensure the accuracy of the information and instructions, they disclaim all responsibility for errors or omissions, including damages resulting from the use of or reliance on this work.
- Use of the information and instructions is at your own risk. Ensure compliance with open source licenses and intellectual property rights if applicable.

**Collaboration:**
- This work is part of a collaboration between O’Reilly and NGINX. See our statement of editorial independence.

**ISBN: 978-1-491-96893-2**

---

### Table of Contents
1. **Basics**
   - 1.0 Introduction
   - 1.1 Installing on Debian/Ubuntu
   - 1.2 Installing on RedHat/CentOS
   - 1.3 Installing NGINX Plus
   - 1.4 Verifying Your Installation
   - 1.5 Key Files, Commands, and Directories
   - 1.6 Serving Static Content
   - 1.7 Graceful Reload

2. **High-Performance Load Balancing**
   - 2.0 Introduction
   - 2.1 HTTP Load Balancing
   - 2.2 TCP Load Balancing
   - 2.3 UDP Load Balancing
   - 2.4 Load-Balancing Methods
   - 2.5 Sticky Cookie
   - 2.6 Sticky Learn
   - 2.7 Sticky Routing
   - 2.8 Connection Draining
   - 2.9 Passive Health Checks
   - 2.10 Active Health Checks
   - 2.11 Slow Start
   - 2.12 TCP Health Checks

3. **Traffic Management**
   - 3.0 Introduction
   - 3.1 A/B Testing
   - 3.2 Using the GeoIP Module and Database
   - 3.3 Restricting Access Based on Country
   - 3.4 Finding the Original Client
   - 3.5 Limiting Connections
   - 3.6 Limiting Rate
   - 3.7 Limiting Bandwidth

4. **Massively Scalable Content Caching**
   - 4.0 Introduction
   - 4.1 Caching Zones
   - 4.2 Caching Hash Keys
   - 4.3 Cache Bypass
   - 4.4 Cache Performance
   - 4.5 Purging
   - 4.6 Cache Slicing

5. **Programmability and Automation**
   - 5.0 Introduction
   - 5.1 NGINX Plus API
   - 5.2 Key-Value Store
   - 5.3 Installing with Puppet
   - 5.4 Installing with Chef
   - 5.5 Installing with Ansible
   - 5.6 Installing with SaltStack
   - 5.7 Automating Configurations with Consul Templating

6. **Authentication**
   - 6.0 Introduction
   - 6.1 HTTP Basic Authentication
   - 6.2 Authentication Subrequests
   - 6.3 Validating JWTs
   - 6.4 Creating JSON Web Keys
   - 6.5 Authenticate Users via Existing OpenID Connect SSO
   - 6.6 Obtaining the JSON Web Key from Google

7. **Security Controls**
   - 7.0 Introduction
   - 7.1 Access Based on IP Address
   - 7.2 Allowing Cross-Origin Resource Sharing
   - 7.3 Client-Side Encryption
   - 7.4 Upstream Encryption
   - 7.5 Securing a Location
   - 7.6 Generating a Secure Link with a Secret
   - 7.7 Securing a Location with an Expire Date
   - 7.8 Generating an Expiring Link
   - 7.9 HTTPS Redirects
   - 7.10 Redirecting to HTTPS where SSL/TLS Is Terminated Before NGINX
   - 7.11 HTTP Strict Transport Security
   - 7.12 Satisfying Any Number of Security Methods
   - 7.13 Dynamic DDoS Mitigation

8. **HTTP/2**
   - 8.0 Introduction
   - 8.1 Basic Configuration
   - 8.2 gRPC
   - 8.3 HTTP/2 Server Push

9. **Sophisticated Media Streaming**
   - 9.0 Introduction
   - 9.1 Serving MP4 and FLV
   - 9.2 Streaming with HLS
   - 9.3 Streaming with HDS
   - 9.4 Bandwidth Limits

10. **Cloud Deployments**
    - 10.0 Introduction
    - 10.1 Auto-Provisioning on AWS
    - 10.2 Routing to NGINX Nodes Without an AWS ELB
    - 10.3 The NLB Sandwich
    - 10.4 Deploying from the AWS Marketplace
    - 10.5 Creating an NGINX Virtual Machine Image on Azure
    - 10.6 Load Balancing Over NGINX Scale Sets on Azure
    - 10.7 Deploying Through the Azure Marketplace
    - 10.8 Deploying to Google Compute Engine
    - 10.9 Creating a Google Compute Image
    - 10.10 Creating a Google App Engine Proxy

11. **Containers/Microservices**
    - 11.0 Introduction
    - 11.1 DNS SRV Records
    - 11.2 Using the Official NGINX Image
    - 11.3 Creating an NGINX Dockerfile
    - 11.4 Building an NGINX Plus Image
    - 11.5 Using Environment Variables in NGINX
    - 11.6 Kubernetes Ingress Controller
    - 11.7 OpenShift Router

12. **High-Availability Deployment Modes**
    - 12.0 Introduction
    - 12.1 NGINX HA Mode
    - 12.2 Load-Balancing Load Balancers with DNS
    - 12.3 Load Balancing on EC2
    - 12.4 Configuration Synchronization
    - 12.5 State Sharing with Zone Sync

13. **Advanced Activity Monitoring**
    - 13.0 Introduction
    - 13.1 Enable NGINX Open Source Stub Status
    - 13.2 Enabling the NGINX Plus Monitoring Dashboard Provided by NGINX Plus
    - 13.3 Collecting Metrics Using the NGINX Plus API

14. **Debugging and Troubleshooting with Access Logs, Error Logs, and Request Tracing**
    - 14.0 Introduction
    - 14.1 Configuring Access Logs
    - 14.2 Configuring Error Logs
    - 14.3 Forwarding to Syslog
    - 14.4 Request Tracing

15. **Performance Tuning**
    - 15.0 Introduction
    - 15.1 Automating Tests with Load Drivers
    - 15.2 Keeping Connections Open to Clients
    - 15.3 Keeping Connections Open Upstream
    - 15.4 Buffering Responses
    - 15.5 Buffering Access Logs
    - 15.6 OS Tuning

16. **Practical Ops Tips and Conclusion**
    - 16.0 Introduction
    - 16.1 Using Includes for Clean Configs
    - 16.2 Debugging Configs
    - 16.3 Conclusion

---

### Foreword
Welcome to the updated edition of the NGINX Cookbook. It has been nearly two years since O’Reilly published the original NGINX Cookbook. A lot has changed since then, but one thing hasn’t: every day, more and more of the world’s websites choose to run on NGINX. Today, there are 300 million, nearly double the number when the first cookbook was released.

There are many reasons why NGINX usage continues to grow 14 years after its initial release. It’s a versatile tool: NGINX can be a web server, load balancer, content cache, and API gateway. But perhaps more importantly, it’s reliable.

The NGINX Cookbook shows you how to get the most out of NGINX Open Source and NGINX Plus. You will find over 150 pages of easy-to-follow recipes covering everything from how to properly install NGINX, to how to configure all the major features, to debugging and troubleshooting.

This updated version also covers new open-source features like gRPC support, HTTP/2 server push, and the Random with Two Choices load-balancing algorithm for clustered environments, as well as new NGINX Plus features like support for state sharing, a new NGINX Plus API, and a key-value store. Almost everything you need to know about NGINX is covered in these pages.

We hope you enjoy the NGINX Cookbook and that it contributes to your success in creating and deploying the applications we all rely on.

— Faisal Memon
Product Marketing Manager, NGINX, Inc.

---

### Preface
The NGINX Cookbook aims to provide easy-to-follow examples to real-world problems in application delivery. Throughout this book, you will explore the many features of NGINX and how to use them. This guide is fairly comprehensive and touches on most of the main capabilities of NGINX.

Throughout this book, there will be references to both the free and open-source NGINX software, as well as the commercial product from NGINX, Inc., NGINX Plus. Features and directives that are only available as part of the paid subscription to NGINX Plus will be denoted as such. Because NGINX Plus is an application delivery controller and provides many advanced features, it’s important to highlight these features to gain a full view of the possibilities of the platform.

The book will begin by explaining the installation process of NGINX and NGINX Plus, as well as some basic getting started steps for readers new to NGINX. From there, the sections will progress to load balancing in all forms, accompanied by chapters about traffic management, caching, and automation. The authentication and security controls chapters cover a lot of ground but are important as NGINX is often the first point of entry for web traffic to your application and the first line of application layer defense. There are a number of chapters that cover cutting-edge topics such as HTTP/2, media streaming, cloud and container environments, wrapping up with more traditional operational topics such as monitoring, debugging, performance, and operational tips.

I personally use NGINX as a multitool, and believe this book will enable you to do the same. It’s software that I believe in and enjoy working with. I’m happy to share this knowledge with you, and hope that as you read through this book, you relate the recipes to your real-world scenarios and employ these solutions.

---

### Chapter 1: Basics
#### 1.0 Introduction
To get started with NGINX Open Source or NGINX Plus, you first need to install it on a system and learn some basics. In this chapter, you will learn how to install NGINX, where the main configuration files are, and commands for administration. You will also learn how to verify your installation and make requests to the default server.

#### 1.1 Installing on Debian/Ubuntu
**Problem:**
You need to install NGINX Open Source on a Debian or Ubuntu machine.

**Solution:**
Create a file named `/etc/apt/sources.list.d/nginx.list` that contains the following contents:

```plaintext
deb http://nginx.org/packages/mainline/OS/ CODENAME nginx
deb-src http://nginx.org/packages/mainline/OS/ CODENAME nginx
```

Alter the file, replacing `OS` at the end of the URL with `ubuntu` or `debian`, depending on your distribution. Replace `CODENAME` with the code name for your distribution; `jessie` or `stretch` for Debian, or `trusty`, `xenial`, `artful`, or `bionic` for Ubuntu. Then, run the following commands:

```bash
wget http://nginx.org/keys/nginx_signing.key
apt-key add nginx_signing.key
apt-get update
apt-get install -y nginx
/etc/init.d/nginx start
```

**Discussion:**
The file you just created instructs the `apt` package management system to utilize the official NGINX package repository. The commands that follow download the NGINX GPG package signing key and import it into `apt`. Providing `apt` with the signing key enables the `apt` system to validate packages from the repository. The `apt-get update` command instructs the `apt` system to refresh its package listings from its known repositories. After the package list is refreshed, you can install NGINX Open Source from the official NGINX repository. After you install it, the final command starts NGINX.

#### 1.2 Installing on RedHat/CentOS
**Problem:**
You need to install NGINX Open Source on RedHat or CentOS.

**Solution:**
Create a file named `/etc/yum.repos.d/nginx.repo` that contains the following contents:

```plaintext
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/mainline/OS/OSRELEASE/$basearch/
gpgcheck=0
enabled=1
```

Alter the file, replacing `OS` at the end of the URL with `rhel` or `centos`, depending on your distribution. Replace `OSRELEASE` with `6` or `7` for version 6.x or 7.x, respectively. Then, run the following commands:

```bash
yum -y install nginx
systemctl enable nginx
systemctl start nginx
firewall-cmd --permanent --zone=public --add-port=80/tcp
firewall-cmd --reload
```

**Discussion:**
The file you just created for this solution instructs the `yum` package management system to utilize the official NGINX Open Source package repository. The commands that follow install NGINX Open Source from the official repository, instruct `systemd` to enable NGINX at boot time, and tell it to start it now. The firewall commands open port 80 for the TCP protocol, which is the default port for HTTP. The last command reloads the firewall to commit the changes.

#### 1.3 Installing NGINX Plus
**Problem:**
You need to install NGINX Plus.

**Solution:**
Visit [http://cs.nginx.com/repo_setup](http://cs.nginx.com/repo_setup). From the drop-down menu, select the OS you’re installing and then follow the instructions. The instructions are similar to the installation of the open-source solutions; however, you need to install a certificate to authenticate to the NGINX Plus repository.

**Discussion:**
NGINX keeps this repository installation guide up to date with instructions on installing NGINX Plus. Depending on your OS and version, these instructions vary slightly, but there is one commonality. You must log in to the NGINX portal to download a certificate and key to provide to your system, which are used to authenticate to the NGINX Plus repository.

#### 1.4 Verifying Your Installation
**Problem:**
You want to validate the NGINX installation and check the version.

**Solution:**
You can verify that NGINX is installed and check its version by using the following command:

```bash
nginx -v
```

**Discussion:**
The `nginx -v` command displays the version of NGINX installed on your system, confirming that the installation was successful.