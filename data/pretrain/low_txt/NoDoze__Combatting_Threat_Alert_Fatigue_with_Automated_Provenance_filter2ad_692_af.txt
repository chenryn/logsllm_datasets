# NODOZE: An Advanced Threat Alert Triage System

## Introduction
NODOZE is a threat alert triage system that operates independently of the underlying Threat Detection System (TDS). For our evaluation, we used a specific TDS [8] because it was licensed by our enterprise. Licensing additional TDS for our evaluation, which was conducted on hundreds of hosts, would have been prohibitively costly. However, the chosen TDS is state-of-the-art and based on a reputable, peer-reviewed detection algorithm [31], with false positive rates (FPR) comparable to other commercial and academic TDS [3], [5], [43], [29], [21].

## Related Work
### Threat Detection
Existing threat detection approaches can be classified into online and offline methods. Online detection methods typically monitor for specific sequences of system calls to detect malicious programs in real-time [37], [48]. Offline methods, on the other hand, perform forensic analysis on audit logs to find the root cause of intrusions. Due to performance and space constraints, online methods do not keep audit logs, while offline methods are labor-intensive and impractical for large-scale enterprises.

To improve syscall-based methods, Tandon et al. [61] considered syscall arguments in addition to syscall sequences. Sekar et al. [57] further incorporated more complex structures like loops and branches. However, these methods still suffer from high false alarm rates due to the lack of contextual information. NODOZE leverages historical and contextual information, including process names and command-line arguments, to achieve better accuracy. Machine learning approaches [38], [64] have also been proposed but suffer from significant detection errors and generate too many false alerts [58], [34].

### Threat Alert Triage
Ben-Asher et al. [27] studied the impact of contextual knowledge on detecting true attacks, finding that such knowledge is more helpful than analysts' experience and prior knowledge. Zhong et al. [68] generated a state machine for automated alert triage by mining past analysts' operation traces. Chyssler et al. [32] used a static filter with aggregation and end-user involvement to reduce false alarms in IP networks. Other approaches, such as careful configuration and improved classification methods [22], [45], aim to reduce the number of alerts, but the volume remains overwhelming for analysts. To our knowledge, NODOZE is the first system to leverage data provenance for automated alert triage without analyst involvement.

### Provenance Analysis
Data provenance has been extensively used for forensic analysis [26], [46], [56], [63], network debugging [23], [65], and access control [55]. Jiang et al. [39] used a process coloring approach to identify intrusion entry points and taint propagation to reduce log entries. Xie et al. [66] used high-level dependency information to detect malicious behavior, but this system only considered single events without considering the propagation of malicious behavior. NODOZE, in contrast, considers the entire path, using an anomaly score propagation algorithm to categorize events.

PrioTracker [49] accelerates forward tracing by prioritizing abnormal events, but it does not distinguish between similar events with different contexts in the dependency graph, such as E1 and E2 in our motivating example in Figure 2a. NODOZE focuses on triaging alerts and generating a more precise provenance graph. Additionally, NODOZE can use dependency graph compression techniques [47], [36], [30] to reduce the overhead of backward and forward tracing by removing redundant events. Provenance visualization techniques [28] can also facilitate data provenance analysis.

## Conclusion
NODOZE is a threat alert triage system that uses historical and contextual information to automatically triage alerts. It employs a novel network diffusion algorithm to propagate anomaly scores in the dependency graphs of alerts, generating aggregate anomaly scores for each alert. These scores are then used to triage alerts. Our evaluation results show that NODOZE significantly reduces the burden of investigating false alarms and accelerates incident investigation with concise contextual alerting. The runtime overhead of NODOZE is low enough to be practical and can be deployed with any threat detection software.

## Acknowledgments
We thank the anonymous reviewers for their valuable feedback. This work was supported in part by the National Science Foundation under contracts CNS-16-57534 and CNS-17-50024. Wajih Ul Hassan and Shengjian Guo were interns under the supervision of Ding Li at NEC Labs America. Ding Li is the corresponding author of this paper. Any opinions, findings, conclusions, or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of their employers or sponsors.

## References
[1] "Event Tracing," https://docs.microsoft.com/en-us/windows/desktop/ETW/event-tracing-portal.
[2] "Automated Incident Response: Respond to Every Alert," https://swimlane.com/blog/automated-incident-response-respond-every-alert/.
[3] "Endpoint Monitoring & Security," https://logrhythm.com/solutions/security/endpoint-threat-detection/.
[4] "How Many Alerts is Too Many to Handle?" https://www2.fireeye.com/StopTheNoise-IDC-Numbers-Game-Special-Report.html.
[5] "Insider Threat Detection," https://www.netwrix.com/insider-threat-detection.html.
[6] "New Research from Advanced Threat Analytics," https://prn.to/2uTiaK6.
[7] "Pass-the-hash attacks: Tools and Mitigation," https://www.sans.org/reading-room/whitepapers/testing/pass-the-hash-attacks-tools-mitigation-33283, 2010.
[8] "Automated Security Intelligence (ASI)," https://www.nec.com/en/global/techrep/journal/g16/n01/160110.html, 2018.
[9] "Dangerous and malicious file extensions," https://www.file-extensions.org/filetype/extension/name/dangerous-malicious-files, 2018.
[10] "Google Safe Browsing," https://developers.google.com/safe-browsing/v4/, 2018.
[11] "System administration utilities," man7.org/linux/man-pages/man8/auditd.8.html/.
[12] "200,000+ Systems Affected by WannaCry Ransom Attack," https://www.statista.com/chart/9399/wannacry-cyber-attack-in-numbers/.
[13] "CVE-2014-6271," https://nvd.nist.gov/vuln/detail/CVE-2014-6271.
[14] "MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption," https://www.rapid7.com/db/modules/exploit/windows/smb/ms17-010-eternalblue.
[15] "Target Missed Warnings in Epic Hack of Credit Card Data," https://bloom.bg/2KjElxM.
[16] "CVE-2008-0081," https://nvd.nist.gov/vuln/detail/CVE-2008-0081, 2018.
[17] "Persistent netcat backdoor," https://www.offensive-security.com/metasploit-unleashed/persistent-netcat-backdoor/, 2018.
[18] "Ransom.Wannacry," https://symc.ly/2NSK5Rg, 2018.
[19] "VirusTotal," https://www.virustotal.com/, 2018.
[20] "VPNFilter: New Router Malware with Destructive Capabilities," https://symc.ly/2IPGGVE, 2018.
[21] S. Axelsson, "The base-rate fallacy and the difficulty of intrusion detection," ACM Trans. Inf. Syst. Secur., 2000.
[22] D. Barbara and S. Jajodia, Applications of data mining in computer security. Springer Science & Business Media, 2002.
[23] A. Bates, K. Butler, A. Haeberlen, M. Sherr, and W. Zhou, "Let SDN Be Your Eyes: Secure Forensics in Data Center Networks," in SENT, 2014.
[24] A. Bates, W. U. Hassan, K. Butler, A. Dobra, B. Reaves, P. Cable, T. Moyer, and N. Schear, "Transparent web service auditing via network provenance functions," in WWW, 2017.
[25] A. Bates, B. Mood, M. Valafar, and K. Butler, "Towards secure provenance-based access control in cloud environments," in CODASPY, 2013.
[26] A. Bates, D. Tian, K. R. B. Butler, and T. Moyer, "Trustworthy whole-system provenance for the Linux kernel," in USENIX Security, 2015.
[27] N. Ben-Asher and C. Gonzalez, "Effects of cyber security knowledge on attack detection," Computers in Human Behavior, vol. 48, 2015.
[28] S. P. Callahan, J. Freire, E. Santos, C. E. Scheidegger, C. T. Silva, and H. T. Vo, "Vistrails: Visualization meets data management," in SIGMOD. ACM, 2006.
[29] V. Chandola, A. Banerjee, and V. Kumar, "Anomaly detection: A survey," ACM Comput. Surv., 2009.
[30] C. Chen, H. T. Lehri, L. Kuan Loh, A. Alur, L. Jia, B. T. Loo, and W. Zhou, "Distributed provenance compression," in SIGMOD, 2017.
[31] T. Chen, L.-A. Tang, Y. Sun, Z. Chen, and K. Zhang, "Entity embedding-based anomaly detection for heterogeneous categorical events," in IJCAI, 2016.
[32] T. Chyssler, S. Burschka, M. Semling, T. Lingvall, and K. Burbeck, "Alarm reduction and correlation in intrusion detection systems." in DIMVA, 2004.
[33] J. Ellson, E. Gansner, L. Koutsofios, S. C. North, and G. Woodhull, "Graphviz open source graph drawing tools," in International Symposium on Graph Drawing. Springer.
[34] R. Harang and A. Kott, "Burstiness of intrusion detection process: Empirical evidence and a modeling approach," IEEE Transactions on Information Forensics and Security, 2017.
[35] R. Hasan, R. Sion, and M. Winslett, "Preventing History Forgery with Secure Provenance," Trans. Storage.
[36] W. U. Hassan, M. Lemay, N. Aguse, A. Bates, and T. Moyer, "Towards Scalable Cluster Auditing through Grammatical Inference over Provenance Graphs," in NDSS, 2018.
[37] S. A. Hofmeyr, S. Forrest, and A. Somayaji, "Intrusion detection using sequences of system calls," J. Comput. Secur., 1998.
[38] W. Hu, Y. Liao, and V. R. Vemuri, "Robust anomaly detection using support vector machines," in ICML, 2003.
[39] X. Jiang, A. Walters, D. Xu, E. H. Spafford, F. Buchholz, and Y.-M. Wang, "Provenance-aware tracing of worm break-in and contaminations: A process coloring approach," in ICDCS, 2006.
[40] A. Kharraz, S. Arshad, C. Mulliner, W. K. Robertson, and E. Kirda, "Unveil: A large-scale, automated approach to detecting ransomware." in USENIX Security Symposium, 2016.
[41] S. T. King and P. M. Chen, "Backtracking intrusions," in SOSP, 2003.
[42] M. Kloft and P. Laskov, "A poisoning attack against online anomaly detection," in NIPS Workshop on Machine Learning in Adversarial Environments for Computer Security, 2007.
[43] C. Kruegel, Intrusion Detection and Correlation: Challenges and Solutions. Springer-Verlag TELOS, 2004.
[44] Y. Kwon, F. Wang, W. Wang, K. H. Lee, W.-C. Lee, S. Ma, X. Zhang, D. Xu, S. Jha, G. Ciocarlie et al., "MCI: Modeling-based causality inference in audit logging for attack investigation," in NDSS, 2018.
[45] A. Laszka, J. Lou, and Y. Vorobeychik, "Multi-defender strategic filtering against spear-phishing attacks." in AAAI, 2016.
[46] K. H. Lee, X. Zhang, and D. Xu, "High Accuracy Attack Provenance via Binary-based Execution Partition," in NDSS, 2013.
[47] ——, "LogGC: garbage collecting audit log," in CCS, 2013.
[48] W. Lee and S. J. Stolfo, "Data mining approaches for intrusion detection," in USENIX Security Symposium, 1998.
[49] Y. Liu, M. Zhang, D. Li, K. Jee, Z. Li, Z. Wu, J. Rhee, and P. Mittal, "Towards a timely causality analysis for enterprise security," in NDSS, 2018.
[50] S. Ma, J. Zhai, F. Wang, K. H. Lee, X. Zhang, and D. Xu, "MPI: Multiple perspective attack investigation with semantic aware execution partitioning," in USENIX Security Symposium, 2017.
[51] S. Ma, X. Zhang, and D. Xu, "ProTracer: Towards Practical Provenance Tracing by Alternating Between Logging and Tainting," in NDSS, 2016.
[52] P. Macko and M. Seltzer, "Provenance map orbiter: Interactive exploration of large provenance graphs." in TaPP, 2011.
[53] G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and G. Czajkowski, "Pregel: a system for large-scale graph processing," in ACM SIGMOD, 2010.
[54] K.-K. Muniswamy-Reddy, D. A. Holland, U. Braun, and M. Seltzer, "Provenance-aware storage systems," in ATC, 2006.
[55] J. Park, D. Nguyen, and R. Sandhu, "A provenance-based access control model," in IEEE PST, 2012.
[56] D. Pohly, S. McLaughlin, P. McDaniel, and K. Butler, "Hi-Fi: Collecting High-Fidelity Whole-System Provenance," in ACSAC, 2012.
[57] R. Sekar, M. Bendre, D. Dhurjati, and P. Bollineni, "A fast automaton-based method for detecting anomalous program behaviors," in IEEE S&P, 2001.
[58] R. Sommer and V. Paxson, "Outside the closed world: On using machine learning for network intrusion detection," in IEEE Symposium on Security and Privacy, 2010.
[59] G. P. Spathoulas and S. K. Katsikas, "Using a fuzzy inference system to reduce false positives in intrusion detection," in International Conference on Systems, Signals and Image Processing, 2009.
[60] S. J. Stolfo, S. Hershkop, L. H. Bui, R. Ferster, and K. Wang, "Anomaly detection in computer security and an application to file system accesses," in International Symposium on Methodologies for Intelligent Systems. Springer, 2005.
[61] G. Tandon and P. K. Chan, "On the learning of system call attributes for host-based anomaly detection," International Journal on Artificial Intelligence Tools, 2006.
[62] D. Wagner and P. Soto, "Mimicry attacks on host-based intrusion detection systems," in CCS, 2002.
[63] Q. Wang, W. U. Hassan, A. Bates, and C. Gunter, "Fear and logging in the internet of things," in NDSS, 2018.
[64] J. Wu, D. Peng, Z. Li, L. Zhao, and H. Ling, "Network intrusion detection based on a general regression neural network optimized by an improved artificial immune algorithm," PloS one, 2015.
[65] Y. Wu, A. Chen, A. Haeberlen, W. Zhou, and B. T. Loo, "Automated network repair with meta provenance," in NSDI, 2017.
[66] Y. Xie, D. Feng, Z. Tan, and J. Zhou, "Unifying intrusion detection and forensic analysis via provenance awareness," Future Gener. Comput. Syst., 2016.
[67] Z. Xu, Z. Wu, Z. Li, K. Jee, J. Rhee, X. Xiao, F. Xu, H. Wang, and G. Jiang, "High fidelity data reduction for big data security dependency analyses," in CCS, 2016.
[68] C. Zhong, J. Yen, P. Liu, and R. F. Erbacher, "Automate cybersecurity data triage by leveraging human analysts’ cognitive process," in IEEE BigDataSecurity, 2016.