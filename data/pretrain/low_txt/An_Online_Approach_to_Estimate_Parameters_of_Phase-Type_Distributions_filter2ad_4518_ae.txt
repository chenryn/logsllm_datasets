In the preceding sections, we applied the online Expectation-Maximization (EM) algorithm to various data traces and compared the quality of the estimations with those from offline algorithms using likelihood values. The ultimate goal of this approach is to utilize the estimated distributions in larger performance or reliability models.

To demonstrate the applicability of our approach, we present results from a single-server queue with limited buffer capacity and exponentially distributed service times. Arrivals are generated based on the distributions obtained from both offline and online EM fitting, as well as from the actual trace for reference. We use the same trace from our previous experiments. Since the real trace contains the lengths of availability intervals, the server can be interpreted as a maintenance or repair process triggered at the end of these intervals to fix failed components.

Figure 10 shows the fraction of rejected requests at the server over time \( t \) for a buffer capacity of 100 and a utilization rate \( \rho = 0.83 \), based on 50 replications of the simulation. For the distribution from the offline EM algorithm, the probability of a rejected request due to a full buffer is close to zero. In contrast, the distributions from the online EM algorithms provide results that more closely match the behavior of the trace. Additionally, change point detection significantly improves the results, and more complex Phase-Type Distributions (PHDs) yield better results than simpler subclasses.

Similar experiments were conducted for synthetic traces. Figure 11 presents the results for the second trace with a buffer capacity of 10. The results from the online EM fitting provide a very close approximation to the trace results, confirming our observations that the online EM approach with change point detection reacts quickly to changes in the input stream.

The experiments show that for inhomogeneous data, which changes its characteristics over time, classic offline approaches for parameter estimation are insufficient. In contrast, online approaches can react to changes in the input stream and modify their estimates accordingly. Explicit detection of change points allows for a much faster reaction to changes, further improving the performance results. From the plots of the forward likelihoods (e.g., Figures 5 and 7), it is evident that after a change point, the online algorithm requires some observations before the estimates and likelihood values stabilize. The number of required observations varies depending on the distribution and ranges from 102 to 103 in our experiments. If change points occur more frequently, the fitting results may deteriorate because the algorithm does not see enough data to obtain good estimates before the next change point detection resets them.

### Conclusions

This paper introduces an online EM algorithm for estimating parameters of Phase-Type distributions from a continuous data stream. Several variants of the algorithm tailored to specific subclasses of Phase-Type distributions are proposed. By integrating methods to detect change points, the estimated distributions can adapt to changing behaviors in observed sequences. The algorithms can be applied in online situations where data is continuously gathered from a running system and can also be used for very large traces where standard offline EM algorithms are inefficient.

The experiments suggest that the quality of change point detection is sensitive to the algorithm's parameters, and a poor choice of values could lead to many false positives. This issue could be addressed with an adaptive scheme to set these parameters during runtime using techniques from machine learning or heuristics that adjust the parameters if change points are detected too frequently.

Offline EM approaches for PHDs have been generalized to estimate the parameters of Markovian Arrival Processes to account for autocorrelations in the input data. Future work will aim to extend our algorithm for cases with correlated data. Clearly, the online estimation of distribution parameters is only one step in an environment where stochastic models are used to predict and analyze the future behavior of a running system. Further research is needed to explore how to effectively use the resulting distributions in stochastic models, as changes in distribution parameters necessitate restarting simulations.

### References

[References listed here as per the original document]