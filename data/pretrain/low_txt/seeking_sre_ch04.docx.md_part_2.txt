# 修复债务

在指标评审过程中，我们从事件后审核流程中获得了许多有价值的见解。尽管已有大量优秀的故障报告材料（请参阅[#further_readings](#further_readings)获取示例），但本文将重点关注对我们指标评审最为关键的内容：每次发现Bug或改进机会时，我们会将其记录并追踪为修复项目。这些修复项目可以是技术或流程上的调整，旨在防止故障再次发生或缩短其持续时间。通常情况下，我们将这些项目分为短期和长期两类。短期项目应在一周内完成，可能涉及过程、脚本或补丁的更新；而长期项目则涉及更深层次的问题解决策略，如全面的代码重构（针对问题类别而非单个实例）、跨多条产品线实施广泛的流程变更（例如，开发并提供跨组织的事件管理培训）或者构建自动化工具（如聊天机器人或自动升级/缓解系统）。这类项目一般通过与跟踪产品工作项相同的工作管理系统来监控，但必须确保它们被独立记录和汇报，以便于区分标准的产品任务列表。

通过这种方式跟踪修复项目，我们可以像对待功能开发一样处理运营债务，并将其纳入常规工程流程。图[#example_repair_debt_graph](#example_repair_debt_graph)展示了开始追踪此类项目初期可能出现的情况——随着团队逐渐适应新做法并将修复活动融入日常工作中，最初暴露出来的未解决问题数量会先经历一次激增，随后逐渐减少。这种透明度对于提高服务可靠性至关重要，因为它允许团队根据实际存在的问题优先安排资源分配，而不是仅仅依赖于假设或预估。

![修复债务图示例](media/rId29.png){width="4.816053149606299in" height="2.060200131233596in"}

## 虚拟修复债务：驱除系统中的幽灵

然而，并非所有情况都会有一个完美的结局。有时即使修复债务保持稳定，相关服务的稳定性也没有显著提升。面对这种情况，我们感到困惑不已。经过深入研究后发现，部分原因是由于某些服务未能彻底执行根本原因分析(RCA)，导致要么RCA完成率较低，要么根本没有进行足够的维修措施。这意味着潜在的修复项目从未被列入工作计划中，因此无法实现预期的服务改善。

为了应对这一挑战，我们需要找到一种方法来衡量故障报告的质量，不仅要关注是否已经解决了已知问题，还要检查是否有新的问题被正确识别并记录下来。虽然可以通过机器学习技术对文本内容进行分析以评估意图，但这需要较大的前期投入且结果并不总是可靠的。相比之下，一个更为直接有效的方法是在每个事件和故障报告中明确标注“某某时间为期限”的字样。任何错过检测、响应或恢复目标时间点的情况都应产生相应的修复项目。这样一来，我们就能通过编程方式轻松地发现那些尚未解决的问题，并据此计算出所谓的“虚拟修复债务”。

可视化虚拟修复债务成为推动改进的强大工具。如图[#repair_virtual_debt_graph](#repair_virtual_debt_graph)所示，灰色线条代表了传统意义上的修复债务，看起来似乎一切都在控制之中；但当加入表示遗漏修复项目的虚线红线之后，隐藏在背后的“暗物质”——即从未被记录下来的修复需求便清晰可见。值得注意的是，虚拟债务的存在意味着特定类型的故障检测时间和平均修复时间(TTD & TTM)将持续恶化，直到这些问题得到妥善处理为止。

![修复虚拟债务图](media/rId31.png){width="4.5551837270341204in" height="3.6722397200349954in"}

## 实时仪表板：SRE 的核心

在指标评审中最重要的一环可能是将所有数据和洞见整合到实时仪表板上。仅依靠每月甚至每周的数据审查不足以快速驱动变革。每个服务、每个组件都需要能够即时查看其表现状况及改进空间。这要求我们创建出既可按服务分类又能细化至个人工程师层面的仪表板。

## 学习：终身追求

如果要用一句话概括本章内容，那就是：测量一切，永远保持好奇心，勇于探索数据背后的故事。很多时候，获得这些洞察力需要手动整理大量的信息；但一旦明确了哪些指标最为关键，就可以对其进行监测并自动化处理，从而帮助提升整个系统的可见性和服务质量。

# 延伸阅读
- **无可指责的故障报告**:
  - [《无责备的事故调查与公正文化》](https://codeascraft.com/2012/05/22/blameless-postmortems/): John Allspaw, Etsy
  - [《事故后续行动计划：规划工作并执行计划》](https://www.usenix.org/conference/srecon17americas/program/presentation/lueder): Sue Lueder and Betsy Beyer, Google
  - [*超越责备—从失败与成功中学习*](http://shop.oreilly.com/product/0636920033981.do): Dave Zwieback
- **使用数据分析提升运维效率**:
  - [《利用数据分析改善运维》](https://www.oreilly.com/ideas/improving-operations-using-data-analytics): Parviz Deyhim and Arti Garg, Datapipe
  - [《事故分析》](https://www.usenix.org/conference/srecon15/program/presentation/lueder): Sue Lueder, Google
  - [《Atlassian公司如何衡量事故管理的成功》](https://www.usenix.org/conference/srecon17asia/program/presentation/millar): Gerry Millar, Atlassian
  - [《PDA：自动化问题确定工具》](https://www.usenix.org/legacy/event/lisa07/tech/full_papers/huang/huang_html/index.html): Hai Huang, Raymond Jennings III, Yaoping Ruan, Ramendra Sahoo, Sambit Sahu, and Anees Shaikh, IBM T.J. Watson Research Center

# 编者介绍
Martin Check 是 Microsoft Azure 团队的站点可靠性工程经理，在Microsoft拥有超过14年的大型服务工作经验，曾担任过包括服务设计与实施、危机响应、问题管理和DevOps/SRE转型在内的多种角色。目前，作为全球SRE团队的一员，他正致力于运用数据洞察力推动SRE实践不断进步。