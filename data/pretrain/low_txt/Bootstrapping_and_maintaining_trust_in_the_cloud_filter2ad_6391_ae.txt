### 优化后的文本

#### 表3中的数据
282, 208, 141, 3085, 2017, 1310, 928.3, 684.7, 464.2。这些数据是使用Comcast17工具插入的。结果表明，在租户现场运行CV是可行的，但会降低报价检查率（因此增加检测延迟）并占用几Mbit/s的带宽。因此，我们建议在云端与需要验证的节点一起运行CV，这是性能最高且成本最低的选项。

#### 相关工作
传统企业网络中存在的许多挑战在云计算环境中同样存在。然而，云计算环境还面临新的挑战和威胁，包括共享租户和对云提供商提供安全基础的额外依赖 [4, 16]。为了解决这些挑战，许多人提出了可信计算。现有的可信计算规范依赖于可信硬件，并假设系统有一个单一的所有者。随着云计算的出现，这一假设不再成立。尽管标准社区 [41] 和先前的工作 [2] 开始支持虚拟化，但目前还没有端到端的解决方案。例如，cTPM系统 [5] 假设云提供商是可信的，并要求修改可信计算标准。另一个针对服务的高级验证提案提供了由虚拟机管理程序提供的加密签名审计跟踪 [12]。该审计跟踪记录了虚拟机内应用程序的执行情况。此提案没有为审计跟踪提供可信的基础，并假设虚拟机管理程序是良性的。Bleikertz等人提出使用可信计算为云租户提供加密服务 [3]。他们的Cryptography-as-a-Service (CaaS) 系统依赖于可信计算，但不解决引导问题，并且需要对虚拟机管理程序进行修改，而这些修改不太可能得到云提供商的支持。

为了应对可扩展性问题，已有多个提案用于监控云基础设施，并允许租户验证其控制的虚拟机的完整性 [34, 32, 33, 35]。Schiﬀman等人提出的云验证器模式允许单个验证器验证云基础设施的信任，并进而“担保”云节点的完整性。这消除了租户在实例化云节点之前验证虚拟机管理程序主机完整性的需求，并避免了节点在通信前互相认证的需求。租户只需向验证器提供其完整性验证标准，验证器会在调度资源时确保满足租户的完整性标准。我们在工作中利用了云验证器模式，但有一些重要差异。首先，我们将它扩展以支持裸金属和虚拟化IaaS环境的安全系统引导。其次，我们不在提供商的控制下托管任何租户拥有的完整性测量基础设施部分。这意味着我们的解决方案对云提供商的基础设施侵入性较小（例如，他们需要在OpenStack中添加近5,000行代码），并且不易受到攻击。例如，keylime依赖于租户节点内的vTPM完整性测量，而不是使云提供商具备明确的虚拟机内省能力（即窃取秘密的能力）。

Excalibur通过利用密文策略属性加密（CPABE）来解决可信计算的可扩展性问题 [31]。这种加密方案允许使用代表IaaS环境中虚拟机管理程序主机属性的密钥对数据进行加密（例如，软件版本、国家、区域）。使用Excalibur，客户端可以加密敏感数据，并确信只有满足策略（指定的一组属性）的虚拟机管理程序才能访问数据。Excalibur仅解决了底层云平台的可信引导问题。因此，无法检测或防止被破坏的租户节点。Excalibur监视器是一个由提供商拥有（但经过验证）的组件，持有允许节点在特定虚拟机管理程序上启动的加密密钥。keylime使用秘密共享来避免将引导密钥存储在任何云系统中，除非它们是为特定云节点准备的。

CloudProxy Tao系统提供了在分层云环境中建立可信服务的构建块 [25]。Tao环境依赖于TPM来建立节点和系统中软件的身份和加载时的完整性。他们的系统不支持系统完整性监控，因为他们假设所有交互都只与Tao环境中运行的其他可信程序进行。Tao依赖于相互认证来进行所有通信节点的验证，但由于TPM密钥不够快，无法支持相互认证。通过使用带外CV，我们避免了相互认证，同时保持了快速检测完整性违规的能力。Tao中的Key Server持有系统的全部秘密密钥，必须与主机交互以加载新应用程序，并且必须完全可信。Key Server不提供与IaaS环境兼容的部署选项，尤其是对于无法负担安全设施或硬件安全模块的小型租户。此外，CloudProxy Tao未详细说明Key Server或Privacy CA组件的TPM初始化安全引导过程。keylime明确描述了所有相关组件的引导过程，并为CV和注册机构提供了多种实际的安全部署选项。

#### 结论
本文展示了keylime提供了一种完全集成的解决方案，用于在弹性供应的IaaS云中引导和维护基于硬件的信任。我们已经证明可以在物理和虚拟云节点中引导基于硬件的加密身份，并在更高层次的安全服务中利用这些身份，而无需每个服务都成为可信计算感知的。keylime使用了一种新颖的密钥派生协议，将租户的意图与完整性测量结合在一起。最后，我们演示并评估了我们系统的关键组件——云验证器的几种部署场景。keylime可以在不到两秒的时间内在供应和引导过程中安全地派生密钥，并且在响应完整性违规时只需要110毫秒。此外，我们已经证明keylime可以扩展到支持数千个IaaS节点，同时保持对完整性违规的快速响应。

#### 参考文献
[1] S. Balfe and A. Mohammed. Final fantasy – securing on-line gaming with trusted computing. In B. Xiao, L. Yang, J. Ma, C. Muller-Schloer, and Y. Hua, editors, Autonomic and Trusted Computing, volume 4610 of Lecture Notes in Computer Science, pages 123–134. Springer Berlin Heidelberg, 2007.

[2] S. Berger, R. C´aceres, K. A. Goldman, R. Perez, R. Sailer, and L. van Doorn. vtpm: Virtualizing the trusted platform module. In Proceedings of the 15th Conference on USENIX Security Symposium - Volume 15, USENIX-SS’06, Berkeley, CA, USA, 2006. USENIX Association.

[3] S. Bleikertz, S. Bugiel, H. Ideler, S. N¨urnberger, and A.-R. Sadeghi. Client-controlled cryptography-as-a-service in the cloud. In M. Jacobson, M. Locasto, P. Mohassel, and R. Safavi-Naini, editors, Applied Cryptography and Network Security, volume 7954 of Lecture Notes in Computer Science, pages 19–36. Springer Berlin Heidelberg, 2013.

[4] S. Bouchenak, G. Chockler, H. Chockler, G. Gheorghe, N. Santos, and A. Shraer. Verifying cloud services: Present and future. SIGOPS Oper. Syst. Rev., 47(2):6–19, July 2013.

[5] C. Chen, H. Raj, S. Saroiu, and A. Wolman. ctpm: A cloud tpm for cross-device trusted applications. In 11th USENIX Symposium on Networked Systems Design and Implementation (NSDI 14), Seattle, WA, Apr. 2014. USENIX Association.

[6] X. Chen, T. Garﬁnkel, E. C. Lewis, P. Subrahmanyam, C. A. Waldspurger, D. Boneh, J. Dwoskin, and D. R. Ports. Overshadow: A virtualization-based approach to retroﬁtting protection in commodity operating systems. SIGPLAN Not., 43(3):2–13, Mar. 2008.

[7] J. Criswell, N. Dautenhahn, and V. Adve. Virtual ghost: Protecting applications from hostile operating systems. SIGARCH Comput. Archit. News, 42(1):81–96, Feb. 2014.

[8] L. Davi, A.-R. Sadeghi, and M. Winandy. Dynamic integrity measurement and attestation: towards defense against return-oriented programming attacks. In Proceedings of the 2009 ACM workshop on Scalable trusted computing, pages 49–54. ACM, 2009.

[9] A. Dinaburg, P. Royal, M. Sharif, and W. Lee. Ether: Malware analysis via hardware virtualization extensions. In Proceedings of the 15th ACM Conference on Computer and Communications Security, CCS ’08, pages 51–62, New York, NY, USA, 2008. ACM.

[10] M. Fioravante and D. D. Graaf. vTPM. http://xenbits.xen.org/docs/unstable/misc/vtpm.txt, November 2012.

[11] D. D. Graaf and Q. Xu. vTPM manager. http://xenbits.xen.org/docs/unstable/misc/vtpmmgr.txt.

[12] A. Haeberlen, P. Aditya, R. Rodrigues, and P. Druschel. Accountable virtual machines. In Proceedings of the 9th USENIX Conference on Operating Systems Design and Implementation, OSDI’10, pages 1–16, Berkeley, CA, USA, 2010. USENIX Association.

[13] J. Hennessey, C. Hill, I. Denhardt, V. Venugopal, G. Silvis, O. Krieger, and P. Desnoyers. Hardware as a service - enabling dynamic, user-level bare metal provisioning of pools of data center resources. In 2014 IEEE High Performance Extreme Computing Conference, Waltham, MA, USA, Sept. 2014.

[14] P. Hintjens. Curvezmq authentication and encryption protocol. http://rfc.zeromq.org/spec:26, 2013.

[15] O. S. Hofmann, S. Kim, A. M. Dunn, M. Z. Lee, and E. Witchel. Inktag: Secure applications on an untrusted operating system. SIGPLAN Not., 48(4):265–278, Mar. 2013.

[16] W. Huang, A. Ganjali, B. H. Kim, S. Oh, and D. Lie. The state of public infrastructure-as-a-service cloud security. ACM Comput. Surv., 47(4):68:1–68:31, June 2015.

[17] IBM. Ibm and intel bring new security features to the cloud. http://www.softlayer.com/press/ibm-and-intel-bring-new-security-features-cloud, September 2004.

[18] IBM. Software trusted platform module. http://sourceforge.net/projects/ibmswtpm/, April 2014.

[19] Intel. Intel Trusted Boot (tboot). https://software.intel.com/en-us/articles/intel-trusted-execution-technology.

[20] Intel. Cloud integrity technology. http://www.intel.com/p/en US/support/highlights/sftwr-prod/cit, 2015.

[21] T. Jaeger, R. Sailer, and U. Shankar. Prima: Policy-reduced integrity measurement architecture. In Proceedings of the Eleventh ACM Symposium on Access Control Models and Technologies, SACMAT ’06, pages 19–28, New York, NY, USA, 2006. ACM.

[22] B. Kauer. Oslo: Improving the security of trusted computing. In Proceedings of 16th USENIX Security Symposium, SSYM’07, pages 16:1–16:9, Berkeley, CA, USA, 2007. USENIX Association.

[23] R. Kotla, T. Rodeheffer, I. Roy, P. Stuedi, and B. Wester. Pasture: Secure offline data access using commodity trusted hardware. In Presented as part of the 10th USENIX Symposium on Operating Systems Design and Implementation (OSDI 12), pages 321–334, Hollywood, CA, 2012. USENIX.

[24] P. A. Loscocco, P. W. Wilson, J. A. Pendergrass, and C. D. McDonell. Linux kernel integrity measurement using contextual inspection. In Proceedings of the 2007 ACM Workshop on Scalable Trusted Computing, STC ’07, pages 21–29, New York, NY, USA, 2007. ACM.

[25] J. Manferdelli, T. Roeder, and F. Schneider. The cloudproxy tao for trusted computing. Technical Report UCB/EECS-2013-135, EECS Department, University of California, Berkeley, Jul 2013.

[26] P. Maniatis, D. Akhawe, K. Fall, E. Shi, S. McCamant, and D. Song. Do you know where your data are?: Secure data capsules for deployable data protection. In Proceedings of the 13th USENIX Conference on Hot Topics in Operating Systems, HotOS’13, pages 22–22, Berkeley, CA, USA, 2011. USENIX Association.

[27] D. A. McGrew and J. Viega. The galois/counter mode of operation (gcm). NIST, 2005.

[28] T. Moyer, K. Butler, J. Schiffman, P. McDaniel, and T. Jaeger. Scalable web content attestation. IEEE Transactions on Computers, Mar 2011.

[29] S. Munetoh. GRUB TCG Patch to Support Trusted Boot. http://trousers.sourceforge.net/grub.html.

[30] R. Sailer, X. Zhang, T. Jaeger, and L. van Doorn. Design and implementation of a tcg-based integrity measurement architecture. In Proceedings of the 13th Conference on USENIX Security Symposium - Volume 13, SSYM’04, pages 16–16, Berkeley, CA, USA, 2004. USENIX Association.

[31] N. Santos, R. Rodrigues, K. P. Gummadi, and S. Saroiu. Policy-sealed data: A new abstraction for building trusted cloud services. In Presented as part of the 21st USENIX Security Symposium (USENIX Security 12), pages 175–188, Bellevue, WA, 2012. USENIX.

[32] J. Schiffman, T. Moyer, C. Shal, T. Jaeger, and P. McDaniel. Justifying integrity using a virtual machine verifier. In Computer Security Applications Conference, 2009. ACSAC ’09. Annual, pages 83–92, Dec 2009.

[33] J. Schiffman, T. Moyer, H. Vijayakumar, T. Jaeger, and P. McDaniel. Seeding clouds with trust anchors. In Proceedings of the 2010 ACM Workshop on Cloud Computing Security Workshop, CCSW ’10, pages 43–46, New York, NY, USA, 2010. ACM.

[34] J. Schiffman, Y. Sun, H. Vijayakumar, and T. Jaeger. Cloud verifier: Verifiable auditing service for iaas clouds. In Services (SERVICES), 2013 IEEE Ninth World Congress on, pages 239–246, June 2013.

[35] J. Schiffman, H. Vijayakumar, and T. Jaeger. Verifying system integrity by proxy. In Proceedings of the 5th International Conference on Trust and Trustworthy Computing, TRUST’12, pages 179–200, Berlin, Heidelberg, 2012. Springer-Verlag.

[36] A. Segall. Using the tpm: Machine authentication and attestation. http://opensecuritytraining.info/IntroToTrustedComputing files/Day2-1-auth-and-att.pdf, Oct 2012.

[37] E. G. Sirer, W. de Bruijn, P. Reynolds, A. Shieh, K. Walsh, D. Williams, and F. B. Schneider. Logical attestation: An authorization architecture for trustworthy computing. In Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles, SOSP ’11, pages 249–264, New York, NY, USA, 2011. ACM.

[38] Trusted Computing Group. TCG Infrastructure Working Group A CMC Profile for AIK Certificate Enrollment. http://www.trustedcomputinggroup.org/files/resourcefiles/738DF0BB-1A4B-B294-D0AF6AF9CC023163/IWG CMC Profile Cert Enrollment v1 r7.pdf.

[39] Trusted Computing Group. Trusted Network Communications. http://www.trustedcomputinggroup.org/developers/trusted network communications.

[40] Trusted Computing Group. Trusted Platform Module. http://www.trustedcomputinggroup.org/developers/trusted platform module.

[41] Trusted Computing Group. Virtualized Platform. http://www.trustedcomputinggroup.org/developers/virtualized platform.