### Vulnerabilities in Modern Vehicle Software Code Bases

Given the complexity of the software code base in modern vehicles, it is reasonable to expect that exploitable vulnerabilities exist within connected Electronic Control Units (ECUs). CANnon-based techniques enable a single compromised ECU to influence all ECUs on the bus in a covert manner. This makes the presence of CANnon-relevant interfaces highly dangerous.

### Research and Findings

In this work, we demonstrated the attack capabilities on two lines of automotive-grade Microcontroller Units (MCUs) and hypothesize that several other MCU lines from independent manufacturers may also be susceptible to such attacks. We strongly encourage the research community to identify similar vulnerabilities in other processors. Since this attack exploits a fundamental architectural feature, mitigating such a class of attacks poses an interesting challenge. We have outlined some potential directions for such changes, but designing specific modifications to future security systems will require further investigation.

### Applications and Future Directions

CANnon not only introduces new attack methodologies but can also be integrated into existing software systems for testing. Making this tool widely available is one of our key motivations. Below, we highlight a few future directions:

#### Expanding Existing Tools
Recent work [21] demonstrates a network mapper for the CAN bus, which currently requires customized hardware. By using CANnon to target and shut down ECUs for destination mapping, network mapping could run on existing ECUs without modification. Additionally, CANnon methods could be utilized by genuine nodes, such as an Intrusion Prevention System (IPS), to remove malicious messages from the bus. Prior to CANnon, such IPS capabilities typically required hardware changes.

#### Clock Control for Other Peripherals
Future work could investigate the impact of CANnon-like vulnerabilities on other peripherals. It is possible that other bus protocols, including transport layer protocols that use CAN for the data link layer (e.g., GMLAN, MilCAN, UAVCAN), are vulnerable to a network participant that maliciously holds the state of the bus. For example, the Local Interconnect Network (LIN) bus implements the same logical bus states as the CAN bus and is likely vulnerable to basic remote disruption attacks.

#### Non-Standard CAN
Automakers are starting to implement extended CAN and CAN-FD protocols. These protocols rely on the same principles as standard CAN and thus are vulnerable to CANnon. Future work could explore unique implications related to these other CAN implementations, such as the higher bit rate for the data payload in CAN-FD, which could enable unique derivations of the CANnon attack.

### Acknowledgments
This work was funded in part by the PITAXVIII PITA award and the CNS-1564009 NSF IoT award. We thank the anonymous reviewers for their helpful suggestions.

### References
[1] S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham, S. Savage, K. Koscher, A. Czeskis, F. Roesner, T. Kohno et al., “Comprehensive experimental analyses of automotive attack surfaces.” in USENIX Security Symposium, vol. 4. San Francisco, 2011, pp. 447–462, http://static.usenix.org/events/sec11/tech/full papers/Checkoway.pdf.
[2] K. Koscher, A. Czeskis, F. Roesner, S. Patel, T. Kohno, S. Checkoway, D. McCoy, B. Kantor, D. Anderson, H. Shacham et al., “Experimental security analysis of a modern automobile,” in 2010 IEEE Symposium on Security and Privacy. IEEE, 2010, pp. 447–462, https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5504804.
[3] S. Nie, L. Liu, and Y. Du, “Free-fall: hacking tesla from wireless to CAN bus,” Brieﬁng, Black Hat USA, pp. 1–16, 2017, https://paper.seebug.org/papers/Security%20Conf/Blackhat/2017 us/us-17-Nie-Free-Fall-Hacking-Tesla-From-Wireless-To-CAN-Bus-wp.pdf.
[4] C. Miller and C. Valasek, “Remote exploitation of an unaltered passenger vehicle,” Black Hat USA, vol. 2015, p. 91, 2015, http://illmatics.com/Remote%20Car%20Hacking.pdf.
[5] P.-S. Murvay and B. Groza, “Dos attacks on controller area networks by fault injections from the software layer,” in Proceedings of the 12th International Conference on Availability, Reliability and Security. ACM, 2017, p. 71, http://www.aut.upt.ro/∼pal-stefan.murvay/papers/dos-attacks-controller-area-networks-fault-injections-from-software-layer.pdf.
[6] A. Palanca, E. Evenchick, F. Maggi, and S. Zanero, “A stealth, selective, link-layer denial-of-service attack against automotive networks,” in International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, 2017, pp. 185–206, https://www.politesi.polimi.it/bitstream/10589/126393/1/tesi palanca.pdf.
[7] A. Van Herrewege, D. Singelee, and I. Verbauwhede, “CANAuth - A Simple, Backward Compatible Broadcast Authentication Protocol for CAN bus,” in ECRYPT Workshop on Lightweight Cryptography 2011, 2011.
[8] B. Groza, P. Murvay, A. V. Herrewege, and I. Verbauwhede, “Libra-can: A lightweight broadcast authentication protocol for controller area networks,” in Cryptology and Network Security, 11th International Conference, CANS 2012, J. Pieprzyk, A. Sadeghi, and M. Manulis, Eds., vol. 7712. Springer, December 12-14, 2012, pp. 185–200.
[9] H. M. Song, H. R. Kim, and H. K. Kim, “Intrusion detection system based on the analysis of time intervals of CAN messages for in-vehicle network,” in 2016 international conference on information networking (ICOIN). IEEE, 2016, pp. 63–68, https://ieeexplore.ieee.org/iel7/7422341/7427058/07427089.pdf.
[10] K.-T. Cho and K. G. Shin, “Viden: Attacker identification on in-vehicle networks,” in Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2017, pp. 1109–1123, https://arxiv.org/pdf/1708.08414.
[11] W. Choi, K. Joo, H. J. Jo, M. C. Park, and D. H. Lee, “VoltageIDS: Low-level communication characteristics for automotive intrusion detection system,” IEEE Transactions on Information Forensics and Security, vol. 13, no. 8, pp. 2114–2129, 2018, https://ieeexplore.ieee.org/iel7/10206/4358835/08306904.pdf.
[12] An assessment method for automotive intrusion detection system performance. https://rosap.ntl.bts.gov/view/dot/41006.
[13] B. Elend and T. Adamson, “Cyber security enhancing CAN transceivers,” in Proceedings of the 16th International CAN Conference, 2017.
[14] J. Wilson and T. Lieu, “Security and privacy in your car study act of 2017 — H. R. 701,” 2017, available at https://www.congress.gov/115/bills/hr701/BILLS-115hr701ih.pdf.
[15] K.-T. Cho and K. G. Shin, “Error handling of in-vehicle networks makes them vulnerable,” in Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016, pp. 1044–1055, https://rtcl.eecs.umich.edu/wordpress/wp-content/uploads/ktcho busoff CCS 16.pdf.
[16] ——, “Fingerprinting electronic control units for vehicle intrusion detection,” in 25th {USENIX} Security Symposium ({USENIX} Security 16), 2016, pp. 911–927, https://www.usenix.org/system/files/conference/usenixsecurity16/sec16 paper cho.pdf.
[17] S. U. Sagong, X. Ying, A. Clark, L. Bushnell, and R. Poovendran, “Cloaking the clock: emulating clock skew in controller area networks,” in Proceedings of the 9th ACM/IEEE International Conference on Cyber-Physical Systems. IEEE Press, 2018, pp. 32–42, https://ieeexplore.ieee.org/iel7/8429083/8443707/08443719.pdf.
[18] C.-W. Lin and A. Sangiovanni-Vincentelli, “Cyber-security for the controller area network (CAN) communication protocol,” in 2012 International Conference on Cyber Security. IEEE, 2012, pp. 1–7.
[19] C. Smith, The Car Hacker’s Handbook: A Guide for the Penetration Tester. No Starch Press, 2016, http://opengarages.org/handbook/.
[20] Cannon. https://github.com/sksecurity/cannon.
[21] S. Kulandaivel, T. Goyal, A. K. Agrawal, and V. Sekar, “Canvas: Fast and inexpensive automotive network mapping,” in 28th {USENIX} Security Symposium ({USENIX} Security 19), 2019, pp. 389–405, https://www.usenix.org/system/files/sec19-kulandaivel.pdf.
[22] T. Ring, “Connected cars–the next target for hackers,” Network Security, vol. 2015, no. 11, pp. 11–16, 2015.
[23] Gartner says by 2020, a quarter billion connected vehicles will enable new in-vehicle services and automated driving capabilities. https://www.gartner.com/en/newsroom/press-releases/2015-01-26-gartner-says-by-2020-a-quarter-billion-connected-vehicles-will-enable-new-in-vehicle-services-and-automated-driving-capabilities.
[24] The car in the age of connectivity: Enabling car to cloud connectivity. https://spectrum.ieee.org/telecom/wireless/the-car-in-the-age-of-connectivity-enabling-car-to-cloud-connectivity.
[25] C. Miller and C. Valasek, “A survey of remote automotive attack surfaces,” black hat USA, vol. 2014, p. 94, 2014, http://illmatics.com/remote%20attack%20surfaces.pdf.
[26] Experimental security research of Tesla Autopilot. https://keenlab.tencent.com/en/whitepapers/Experimental Security Research of Tesla Autopilot.pdf.
[27] Car hacking research: Remote attack Tesla Motors. https://keenlab.tencent.com/en/2016/09/19/Keen-Security-Lab-of-Tencent-Car-Hacking-Research-Remote-Attack-to-Tesla-Cars/.
[28] New car hacking research: 2017, remote attack Tesla Motors again. https://keenlab.tencent.com/en/2017/07/27/New-Car-Hacking-Research-2017-Remote-Attack-Tesla-Motors-Again/.
[29] D. Wise, “Vehicle cybersecurity DOT and industry have efforts under way, but DOT needs to define its role in responding to a real-world attack,” GAO Reports. US Government Accountability Office, 2016.
[30] Microchip SAM 3X family of MCUs. http://ww1.microchip.com/downloads/en/devicedoc/atmel-11057-32-bit-cortex-m3-microcontroller-sam3x-sam3a datasheet.pdf.
[31] Microchip SAM V family of automotive MCUs. http://ww1.microchip.com/downloads/en/DeviceDoc/SAM-E70-S70-V70-V71-Family-Data-Sheet-DS60001527D.pdf.
[32] S. Longari, M. Penco, M. Carminati, and S. Zanero, “CopyCAN: An error-handling protocol based intrusion detection system for controller area network,” in ACM Workshop on Cyber-Physical Systems Security & Privacy (CPS-SPC’19), 2019, pp. 1–12, https://re.public.polimi.it/retrieve/handle/11311/1104918/427927/CopyCAN.pdf.
[33] M. Kneib, O. Schell, and C. Huth, “EASI: Edge-based sender identification on resource-constrained platforms for automotive networks,” https://dl.acm.org/doi/pdf/10.1145/3338499.3357362.
[34] Automotive semiconductor market - growth, trends, and forecast (2020 - 2025). https://www.mordorintelligence.com/industry-reports/automotive-semiconductor-market.
[35] NXP MCUs. https://www.nxp.com/docs/en/application-note/AN4240.pdf.
[36] Renesas MCUs. https://www.renesas.com/us/en/products/synergy/hardware/microcontrollers/glossary.html.
[37] Fujitsu MCUs. https://www.fujitsu.com/downloads/EDG/binary/pdf/find/25-5e/5.pdf.
[38] Cypress MCUs. https://www.cypress.com/products/fm4-32-bit-arm-cortex-m4-microcontroller-mcu-families.
[39] Infineon MCUs. https://www.infineon.com/dgdl/Infineon-TC1767-DS-v01_04-en.pdf?fileId=db3a30431be39b97011bff8570697bdb.
[40] SAM V71 Xplained Ultra Evaluation Kit. https://www.microchip.com/DevelopmentTools/ProductDetails/PartNO/ATSAMV71-XULT.
[41] SPC58EC-DISP Discovery Board. https://www.st.com/en/evaluation-tools/spc58ec-disp.html?ecmp=tt12221 gl social jul2019.
[42] ST SPC5 family of automotive MCUs. https://www.st.com/en/automotive-microcontrollers/spc5-32-bit-automotive-mcus.html.
[43] K. Zhu, Z. Chen, Y. Peng, and L. Zhang, “Mobile edge assisted literal multi-dimensional anomaly detection of in-vehicle network using LSTM,” IEEE Transactions on Vehicular Technology, vol. 68, no. 5, pp. 4275–4284, 2019.
[44] M. Russo, M. Labonne, A. Olivereau, and M. Rmayti, “Anomaly detection in vehicle-to-infrastructure communications,” in 2018 IEEE 87th Vehicular Technology Conference (VTC Spring). IEEE, 2018, pp. 1–6.
[45] M. Foruhandeh, Y. Man, R. Gerdes, M. Li, and T. Chantem, “SIMPLE: Single-frame based physical layer identification for intrusion detection and prevention on in-vehicle networks,” 2019, http://u.arizona.edu/~yman/papers/simple acsac19.pdf.
[46] C. Young, H. Olufowobi, G. Bloom, and J. Zambreno, “Automotive intrusion detection based on constant CAN message frequencies across vehicle driving modes,” in Proceedings of the ACM Workshop on Automotive Cybersecurity. ACM, 2019, pp. 9–14, https://lib.dr.iastate.edu/cgi/viewcontent.cgi?article=1066&context=ece conf.
[47] D. Boneh, R. A. DeMillo, and R. J. Lipton, “On the importance of checking cryptographic protocols for faults (extended abstract),” in Advances in Cryptology - EUROCRYPT ’97, ser. LNCS, W. Fumy, Ed., vol. 1233. Springer, May 11-15, 1997, pp. 37–51.
[48] E. Biham and A. Shamir, “Differential fault analysis of secret key cryptosystems,” in Advances in Cryptology - CRYPTO ’97, ser. LNCS, B. S. K. Jr., Ed., vol. 1294. Springer, August 17-21, 1997, pp. 513–525.
[49] S. P. Skorobogatov and R. J. Anderson, “Optical fault induction attacks,” in Cryptographic Hardware and Embedded Systems - CHES 2002, ser. LNCS, B. S. K. Jr., Ç. K. Koç, and C. Paar, Eds., vol. 2523. Springer, August 13-15, 2002, pp. 2–12.
[50] Y. Kim, R. Daly, J. Kim, C. Fallin, J. Lee, D. Lee, C. Wilkerson, K. Lai, and O. Mutlu, “Flipping bits in memory without accessing them: An experimental study of DRAM disturbance errors,” in ACM/IEEE 41st International Symposium on Computer Architecture, ISCA 2014. IEEE Computer Society, June 14-18, 2014, pp. 361–372.
[51] M. Bond and R. J. Anderson, “API-level attacks on embedded systems,” IEEE Computer, vol. 34, no. 10, pp. 67–75, 2001.
[52] R. J. Anderson, Security engineering - a guide to building dependable distributed systems (2. ed.). Wiley, 2008.