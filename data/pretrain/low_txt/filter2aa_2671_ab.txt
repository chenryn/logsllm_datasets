# Insecure Internal Storage in Android

## Introduction
This document discusses the vulnerabilities associated with storing passwords and other sensitive information in plaintext within Android applications. The focus is on the most critical issue: **Plaintext Storage of a Password**.

## How to Store Passwords: Balancing User Experience and Security

### User-Friendly but Not Secure
1. **Storing Passwords in Plaintext**
2. **Storing Passwords in Other Reversible Ways or Obscuring Them**

### Secure but Not User-Friendly
1. **Not Storing Passwords at All**
2. **Storing Passwords with Symmetric-Key Algorithms, Requiring Passphrase Input Every Time**

## Using Tokens as a Replacement for Passwords

### Advantages
- **Precise Access Control and Privilege Management**
  - For example, users cannot change their password or security questions when logging in via a token.
- **Expiration and Renewal Mechanisms**

### Disadvantages
- **A Non-Restricted, Full-Privileged, Non-Expired Token is Equivalent to a Password**
  - Example: Amazon’s Android app
- **Tokens Can Also Be Stolen by Attacks**
- **Developers Must Control and Deploy Servers to Cooperate with Client Applications**

### Limitations of Tokens
- **For Standard Network Services (e.g., IMAP, SMTP, POP3, SSH, Telnet, FTP, IRC, HTTP)**
  - Client applications must follow standard network protocols and authentication methods.
  - These methods are often password-based, such as IMAP-PLAIN and CRAM-MD5.

## Common Choice: Prioritizing User Experience
- **Store or Not Store?**
  - The debate dates back to 1995 or earlier.
  - Most popular IM clients, mail clients, and browsers have chosen to store passwords.
  - **Reason**: Relying on the system's access control mechanisms for security.
  - **Google's Opinion**: 
    - Old, insecure protocols.
    - Trust in the system's security.

## Reported Vulnerabilities
- **Android Applications Storing Passwords in Plaintext**
  - Examples include K9 Mail, Blue Mail, MailDroid, myMail, SSH Tunnel, Unix Admin: FTP, SFTP, SSH, FTPS, SSH Autotunnel, BotSync SSH, SFTP, AndFTP, FtpCafe FTP Client, and pre-installed apps like Email and Browser.

### Pre-Installed Apps
- **Email (com.android.email and com.google.android.email)**
  - Passwords for POP3, SMTP, and IMAP accounts are stored in `EmailProvider.db` and `EmailProviderBackup.db`.
  - Pre-installed on almost every Android device.
  - As of June 2014, there were 1 billion active Android users.
- **Browser (com.android.browser)**
  - Remembered website passwords are stored in `webview.db`.
  - Used by 22.7% of all mobile phone users as of June 2014 (StatCounter).

### Taiwanese Users
- **PTT (批踢踢)**
  - The most popular BBS in Taiwan, based on TELNET.
  - Vulnerable PTT clients include Mo PTT, Miu PTT, touchPTT, and JPTT.

## Conclusions
- **94.2% of Popular Android Apps Are Affected by This Attack**
- **Network Service Clients and Some Pre-Installed Apps Store Passwords in Plaintext**
- **Affects Almost All Android Users, Potentially Leading to Personal and Enterprise Account Leaks**

## Mitigations

### From the Operating System's Perspective
- **Set the Default Value of `R.attr.allowBackup` to `false`**
  - Documentation alone is not sufficient; most developers ignore it.

### From the Developer's Perspective
- **In `AndroidManifest.xml`, Set `android:allowBackup` to `false`**
  - Or implement a `BackupAgent` to specify what data should be backed up.

### From the User's Perspective
- **Disable ADB Debugging When Not Needed**
  - Still not secure enough.
- **Avoid Losing the Device**
  - Update to the latest system version (Android L may suffice).
  - Reset unused phones to factory settings (still vulnerable).
  - Encrypt the entire disk.

## Third-Party Hot Patching
- **Requires Root Privilege**
  - An ongoing dilemma.
  - Discussed by Collin Mulliner et al. at ACSAC '13.
  - Tools like Xposed, adbi/ddi, and Cydia Substrate for Android can be used.
  - Many security enhancement apps are based on these frameworks.

### Simple Patching Ideas
- **Disable ADB Debugging When the Screen Is Locked**
  - Similar to FirefoxOS.
- **Fix CVE-2013-6271 for Android <= 4.3**
- **Fix CVE-2014-3153 for Android <= 4.4.4**
- **Disable "adb shell sendkey" During Backup**
- **Transparently Encrypt All Internal Data with a Master Passphrase**

## Summary
- **High Success Rate in Reading or Modifying Internal Data**
- **94.2% of Popular Applications Are Affected**
- **Network Service Clients and Pre-Installed Apps Store Passwords in Plaintext Internally**
- **Easy to Mitigate from Different Perspectives**

## Thank You!
- **Claud Xiao, Senior Security Researcher at Palo Alto Networks**
- **@claud_xiao, PI:EMAIL**
- **DEMO Code: http://github.com/secmobi/BackupDroid**

### Special Thanks To:
- Elad Wexler, Zhi Xu, Ryan Olson, Bo Qu, visualwu, irene, tombkeeper

### Greets:
- Nikolay Elenkov, Collin Mulliner, Kyle Osborn, Michael Ossman, MWR Labs, rovo89, jduck, Jay Freeman (saurik)