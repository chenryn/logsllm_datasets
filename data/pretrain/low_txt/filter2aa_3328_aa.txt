# Hacking Internet Kiosks
## Paul Craig
### Defcon 16 – Las Vegas

### About the Speaker
- **Name:** Paul Craig
- **Title:** Principal Security Consultant
- **Company:** Security-Assessment.com, Auckland, New Zealand
- **Role:** Application Penetration Tester
- **Interests:** Devoted Hacker, Shameless Alcoholic
- **Contact:**
  - Email: [PI:EMAIL]
  - Website: [http://www.security-assessment.com](http://www.security-assessment.com)

### Overview
- **Kiosks 101:**
  - Definition of an Internet Kiosk
  - Kiosk Software Security Model
- **Hacking Internet Kiosks:**
  - Vulnerabilities in the Kiosk Security Model
  - Kiosk Hacking Techniques
- **Tool Release: iKAT (interactive Kiosk Attack Tool)**
  - Officially Released at Defcon 16
  - Capable of hacking any internet kiosk in seconds
- **Live Demos:**
  - Hacking Internet Kiosks with iKAT

### What Is An Internet Kiosk?
- **Context:**
  - 16 months ago, I was sitting in an airport during an 8-hour layover in Hong Kong.
  - Noticed a queue of 3-4 people waiting to use an Internet Kiosk.
  - This sparked the idea: "I wonder if I could hack it. Lemon party the airport?"

- **Research Motivation:**
  - Kiosks are popular but rarely appear in security publications.
  - Popularity + Poor Security Visibility = Good Attack Target.
  - Goal: Find every possible method of hacking an Internet Kiosk and become the expert in this field.

- **Prevalence:**
  - Internet kiosks are found in various public places such as airports, train stations, libraries, DVD rental stores, corporate building lobbies, convenience stores, post offices, and cafés.

### Initial Observations
- **Hardware:**
  - Kiosks are installed in custom hard-shell cases.
  - Physical access to the computer case is restricted.
  - Input devices like floppy drives, DVD, USB, and FireWire are inaccessible.
  - The kiosk is securely bolted to the ground and padlocked.
  - Machine/cash box access is controlled by an Abloy lock.

- **Software:**
  - Most kiosks run commercial kiosk software on Windows, although Linux-based kiosks exist.
  - There are 44 different commercial kiosk products on the market.
  - These products are marketed as a way to turn old PCs into revenue-generating kiosks.
  - Typical setup: Buy $59.99 shareware, install on XP, and you have an instant kiosk.
  - Kiosk software essentially skins Windows, making it look like a kiosk terminal while implementing standard Windows/Internet Explorer libraries.

### Hacking Kiosk Software
- **Approach:**
  - Hardware hacking is too obvious and obtrusive in public places.
  - The goal is to obtain a command shell on any kiosk terminal within 2 minutes.
  - Tested eight popular Windows kiosk products in a virtualized environment.
  - Compared the security model of each product and developed a 'Kiosk Attack' methodology.
  - All tested kiosk products were found to be vulnerable.

### Kiosk Security Model
- **Principle of Least Privilege:**
  - A kiosk user should only have access to browse the internet.
  - Kiosk software must prohibit all other activity.

- **Security Implementation:**
  - **Functionality Reduction:**
    - Prohibits access to native OS functionality not required for browsing.
  - **User Interface Sandboxing:**
    - Graphically jails the user into a kiosk interface/GUI.
    - Runs in full screen mode, removing the Start Bar/Tray Menu.
    - No ability to click out of or escape the kiosk browser.

- **Example: SiteKiosk**
  - Custom Start/Menu bar.
  - Real Windows 'Start' bar is hidden.
  - Trapped inside a kiosk browser running in full screen mode, with no ability to close.

- **Proactive Monitoring:**
  - Contains blacklists of prohibited activities.
  - Monitors dialog titles of all in-focus windows.
  - Sends WM_CLOSE messages to any blacklisted window title.

- **API Hooking:**
  - Hooks native OS API calls that can be used maliciously.
  - Blocks commands like KillProcess(), GetCommandLineW(), AllocConsole().
  - Prevents running cmd.exe with a message: "Unauthorized Functionality Detected."

- **Browser Security:**
  - Runs in a 'High Security Zone.'
  - Cannot download certain files (e.g., ActiveX, Java).
  - Disables less secure browser features.
  - Uses a watchdog timer to monitor usage and close blacklisted applications.

- **Custom Keyboard and Mouse:**
  - Disables special shortcut key combinations (e.g., CTRL-SHIFT-ESC, CTRL-ALT-DELETE).
  - Unmaps modifier keys (CTRL, Tab, ALT, 'Start', Function, F1-F12).
  - Custom keyboard with missing keys.
  - No right-click button on the mouse.

### Exploiting Kiosk Software
- **Exploitation Strategy:**
  - Kiosk security is based on reducing functionality.
  - Exploiting a kiosk requires invoking functionality to launch and pop up applications.
  - Blacklists are never 100% effective; only one method of escaping the software jail is needed.
  - Blacklist quality varies between kiosk products.

- **Input Vectors:**
  - **Physical Input:**
    - Interacting with the kiosk GUI using the keyboard and mouse.
    - Clicking buttons, graphics, menus, and typing values into the URL entry bar.
  - **Remote Input:**
    - Remote browser content rendered from a kiosk terminal.
    - Input from a website.

- **Exploitation Steps:**
  - **Escape the Kiosk Graphical Jail:**
    - Minimize or close the kiosk browser application.
    - Pop a command shell: `taskkill /IM KioskBrowser.exe`.
    - Enable the hidden (real) Windows Start bar.
    - 'Get Back To Windows.'
  - **Download Additional Binaries:**
    - Port scanner, Metasploit, rootkit, trojan, keylogger.

- **Example Scenario:**
  - You find a kiosk in your local mall offering 2 hours of internet usage for $1.
  - Insert a dollar and find yourself trapped inside a kiosk browser.
  - Right mouse button is disabled, and the keyboard has limited keys.
  - The 'Start' bar is labeled 'SuperKiosk' with only one visible button to 'Start Browsing.'

- **Exploitation Techniques:**
  - **URL Entry Bar:**
    - Use the URL entry bar to browse the file system.
    - HTTP libraries can browse the file system, but kiosk software must block local browsing attempts.
    - Try various URL formats to bypass blacklists:
      - `file:/C:/windows`
      - `file:/C:\windows\`
      - `file:/C:\windows/`
      - `file:/C:/windows/`
      - `file://C:/windows`
      - `file://C:\windows/`
      - `file://C:\windows`
      - `C:/windows`
      - `C:\windows\`
      - `C:\windows`
      - `C:/windows/`
      - `C:/windows\`
      - `%WINDIR%`
      - `%TMP%`
      - `%TEMP%`
      - `%SYSTEMDRIVE%`
      - `%SYSTEMROOT%`
      - `%APPDATA%`
      - `%HOMEDRIVE%`
      - `%HOMESHARE%`

  - **Common Dialogs:**
    - Windows contains 'Common Dialog' libraries (COMDLG32.dll).
    - File/Open, File/Save dialogs implement the 'File View' control, providing full Explorer functionality.
    - Invoke a File - View Dialog (e.g., 'Attach File' dialog) to browse the file system and launch other applications.
    - If the mouse is limited, select another file and drag it onto cmd.exe to spawn a command shell.

  - **Internet Explorer 'Image Toolbar':**
    - IE toolbar hovers in the top-left when a large image is clicked.
    - Each icon of the toolbar can invoke a Common Dialog (File/Save, File/Print, File/Mailto, Open "My Pictures" in Explorer).
    - Present if the kiosk is developed using Internet Explorer libraries.

  - **Keyboard Shortcuts:**
    - Use keyboard shortcuts to access the host OS.
    - Check for custom keyboard drivers and enabled modifier keys.
    - Common shortcuts: CTRL-B, CTRL-I (Favourites), CTRL-H (History), CTRL-L, CTL-0 (File/Open Dialog), CTRL-P (Print Dialog), CTRL-S (Save As).
    - Kiosk-specific shortcuts: CTRL-ALT-F8, CTRL-ESC-F9.

  - **Browser Security Zones:**
    - Browser security model incorporates different security zones (Restricted Sites, Internet Zone, Intranet Zone, Trusted Sites).
    - Each zone adheres to a different security policy.
    - Internet Zone cannot follow links to the local file system, while Trusted Sites and Intranet Zone can.
    - Check if the kiosk protects against access from all zones.
    - Use pluggable-protocol handlers (e.g., `about:`) to create a trusted security zone 'File Browser.'

  - **Shell Protocol Handler:**
    - Provides access to Windows web folders (e.g., `shell:Profile`, `shell:ProgramFiles`, `shell:System`, `shell:ControlPanelFolder`, `shell:Windows`).
    - Example: `shell:::{21EC2020-3AEA-1069-A2DD-08002B30309D}` (Windows Control Panel).

- **Downside to Physical Kiosk Inputs:**
  - Kiosk software is designed to not trust the user on the keyboard, making physical input methods more challenging.