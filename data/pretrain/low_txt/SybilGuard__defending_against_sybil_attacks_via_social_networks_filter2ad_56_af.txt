### Performing a Short Random Walk and Route Intersection

To conduct the sampling, we perform a short (3-hop in our experiments) random walk, ending at a specific node. Both nodes then execute random routes to determine the point of intersection. This intersection is used as a sample. A sample is considered "bad" (i.e., potentially influenced by an adversary) if any of the two routes or the short random walk enters the sybil region. Our simulations show that the probability of obtaining bad samples increases roughly linearly with the number of attack edges. When the number of attack edges reaches 2500, the fraction of bad samples remains below 20%. Since our estimation uses the median of the samples, these 20% bad samples have only a limited influence on the overall estimate. For both the ten-thousand-node graph and the hundred-node graph, the fraction of bad samples is always below 20% when the number of attack edges is 2500 or less.

### Related Work

#### Sybil Attacks in Decentralized Systems
The sybil attack [1] is a significant threat to decentralized distributed systems, such as peer-to-peer (P2P) systems, which lack a central, trusted authority to ensure a one-to-one correspondence between users and identities. The initial investigation into sybil attacks [1] already demonstrated several negative results.

Bazzi and Konjevod [4] proposed using network coordinates [5] to counter sybil attacks, an idea also explored for sensor networks [20]. Their scheme assumes that a malicious user can only occupy one network position, defined by its minimum latency to a set of beacons. However, in a -dimensional space, an adversary controlling more than one malicious node at different network positions can fabricate an arbitrary number of network coordinates, thus breaking the defense. This is problematic because in practice, the number of dimensions is usually small (e.g., 3). Additionally, a solution based on network coordinates can only bound the number of sybil groups, not their size.

Danezis et al. [21] introduced a scheme to make DHT lookups more resilient to sybil attacks. The scheme leverages the bootstrap tree of the DHT, where two nodes share an edge if one node introduced the other into the DHT. The insight is that sybil nodes will attach to the rest of the tree at a limited number of nodes (or attack edges in our terminology). One can define equivalence groups, corresponding to subtrees, to properly bound the number of sybil groups. In comparison, SybilGuard exploits the graph properties of social networks instead of the bootstrap tree, allowing it to further bound the size of sybil groups. Even with a single attack edge, the effectiveness of the DHT-based scheme deteriorates as the adversary creates more sybil nodes. Furthermore, compromising a single node in the bootstrap tree can disconnect the tree, breaking the scheme's assumptions.

#### Sybil Attacks in Sensor Networks
Sybil attacks have also been studied in the context of sensor networks [22]. Solutions such as radio resource testing and random key predistribution do not apply to wide-area distributed systems. A related attack in sensor networks is the node replication attack [23], where a single compromised sensor is replicated indefinitely by loading the node’s cryptographic information into multiple generic sensor nodes. All replicated nodes share the same ID (e.g., the same secret key issued to the compromised sensor). The solution [23], based on simple random walk intersection, does not extend to sybil attacks because sybil nodes do not necessarily share a single, verifiable ID.

#### Sybil Attacks in Reputation Systems
In reputation systems, each user has a rating based on their behavior. For example, eBay ratings are based on previous transactions. Sybil attacks can create a large number of sybil nodes to artificially boost a user’s rating. Defenses [24]–[26] aim to prevent sybil nodes from boosting a malicious user’s rating. Unlike SybilGuard, these defenses do not control the number of sybil nodes.

In some reputation systems like Credence [27], users cast votes on the validity of shared files. Votes are combined using a weighted average based on user ratings. Sybil nodes can significantly influence the average, even when applying techniques from [24]. Therefore, Credence relies on a central authority to limit sybil nodes.

#### Trust Networks
The social network in SybilGuard is a type of trust network. Many previous works [24], [25], [27] use trust networks based on past successful transactions or shared interests. The trust associated with our social network is much stronger, essential for SybilGuard's effectiveness. Such strong-trust social networks are also used by LOCKSS [28], where the verifier accepts all direct social friends and a proportional number of other nodes. The total number of accepted nodes is orders of magnitude smaller than the system size. Because a node can only accept and use a limited number of other nodes, LOCKSS is suited for specific applications like digital library maintenance. Ostra [29] leverages strong-trust social networks to prevent excessive unwanted communication. In contrast, SybilGuard bounds the number of sybil nodes and can provide functionality equivalent to Ostra by allocating each node a communication quota. SybilGuard has strong, provable end guarantees and a complete, decentralized design.

Trust propagation or transitive trust is common in trust networks [24]–[27]. SybilGuard, however, focuses on exploiting graph properties rather than trust propagation.

### Conclusion
This paper presents SybilGuard, a novel decentralized protocol for limiting the corruptive influences of sybil attacks by bounding both the number and size of sybil groups. SybilGuard relies on the fast mixing property of the users' underlying social network and the fact that malicious users may create many nodes but relatively few attack edges. In our simulation experiments with one million nodes, SybilGuard ensured that 99.8% of honest users had properly bounded sybil groups, and an honest node could accept and be accepted by 99.8% of all other honest nodes.

The current SybilGuard design depends on the fast mixing property of social networks. If the social network is not fast mixing, SybilGuard will still bound the number of accepted sybil nodes, but more honest nodes may be mistakenly rejected. Our follow-on work [7] provides further assurance through an experimental study based on real, large-scale social networks and presents a revised protocol that reduces the number of sybil nodes accepted per attack edge.

Future work includes deploying SybilGuard in real applications, addressing issues such as bootstrapping the social network and identifying the best applications for SybilGuard's fully decentralized approach.

### Acknowledgment
The authors thank D. Andersen, T. Anderson, M. Freedman, P. Maniatis, A. Perrig, S. Seshan, and the anonymous SIGCOMM’06 and ToN reviewers for their valuable comments.

### References
[1] J. R. Douceur, “The sybil attack,” in Proc. 1st Int. Workshop on Peer-to-Peer Systems (IPTPS), Cambridge, MA, Mar. 2002, 6 pp.
[2] A. Ramachandran and N. Feamster, “Understanding the network-level behavior of spammers,” in Proc. ACM SIGCOMM 2006, Pisa, Italy, Sep. 2006, pp. 291–302.
[3] L. von Ahn, M. Blum, N. J. Hopper, and J. Langford, “CAPTCHA: Using hard AI problems for security,” in Proc. Eurocrypt 2003, Warsaw, Poland, May 2003, pp. 294–311.
[4] R. Bazzi and G. Konjevod, “On the establishment of distinct identities in overlay networks,” in Proc. 24th ACM Symp. Principles of Distributed Computing (PODC 2005), Las Vegas, NV, Jul. 2005, pp. 312–320.
[5] T. S. E. Ng and H. Zhang, “Predicting Internet network distance with coordinates-based approaches,” in Proc. IEEE INFOCOM 2002, New York, NY, Jun. 2002, pp. 170–179.
[6] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, “SybilGuard: Defending against sybil attacks via social networks,” in Proc. ACM SIGCOMM 2006, Pisa, Italy, Sep. 2006, pp. 267–278.
[7] H. Yu, P. B. Gibbons, M. Kaminsky, and F. Xiao, “SybilLimit: A near-optimal social network defense against sybil attacks,” in Proc. 2008 IEEE Symp. Security and Privacy, Oakland, CA, May 2008, pp. 3–17.
[8] I. Stoica, R. Morris, D. Karger, F. Kaashoek, and H. Balakrishnan, “Chord: A scalable peer-to-peer lookup service for Internet applications,” in Proc. ACM SIGCOMM 2001, San Diego, CA, Aug. 2001, pp. 149–160.
[9] M. Mitzenmacher and E. Upfal, Probability and Computing. Cambridge, U.K.: Cambridge Univ. Press, 2005.
[10] S. Boyd, A. Ghosh, B. Prabhakar, and D. Shah, “Gossip algorithms: Design, analysis and applications,” in Proc. IEEE INFOCOM 2005, Miami, FL, Mar. 2005, pp. 1653–1664.
[11] A. Flaxman, “Expansion and lack thereof in randomly perturbed graphs,” Microsoft Research, Redmond, WA, Tech. Rep. MSR-TR-2006-118, Aug. 2006 [Online]. Available: ftp://ftp.research.microsoft.com/pub/tr/TR-2006-118.pdf
[12] I. Abraham and D. Malkhi, “Probabilistic quorums for dynamic systems,” in Proc. DISC 2003, Sorrento, Italy, Oct. 2003, pp. 60–74.
[13] R. Morselli, B. Bhattacharjee, A. Srinivasan, and M. Marsh, “Efficient lookup on unstructured topologies,” in Proc. 24th ACM Symp. Principles of Distributed Computing (PODC 2005), Las Vegas, NV, Jul. 2005, pp. 77–86.
[14] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, “SybilGuard: Defending against sybil attacks via social networks,” Intel Research Pittsburgh, Pittsburgh, PA, Tech. Rep. IRP-TR-06-01, Jun. 2006 [Online]. Available: http://www.comp.nus.edu.sg/~yuhf/sybilguard-tr.pdf
[15] W. J. Bolosky, J. R. Douceur, D. Ely, and M. Theimer, “Feasibility of a serverless distributed file system deployed on an existing set of desktop PCs,” in Proc. ACM SIGMETRICS 2000, Santa Clara, CA, Jun. 2000, pp. 34–43.
[16] International Network for Social Network Analysis. 2006 [Online]. Available: http://www.insna.org/INSNA/data_inf.htm
[17] Center for Computational Analysis of Social and Organizational Systems (CASOS). 2006 [Online]. Available: http://www.casos.cs.cmu.edu/computational_tools/data.php
[18] J. Kleinberg, “The small-world phenomenon: An algorithm perspective,” in Proc. ACM Symp. Theory of Computing (STOC 2000), Portland, OR, May 2000, pp. 163–170.
[19] D. J. Watts and S. H. Strogatz, “Collective dynamics of ‘small-world’ networks,” Nature, vol. 393, no. 6684, 1998.
[20] N. Sastry, U. Shankar, and D. Wagner, “Secure verification of location claims,” in Proc. ACM Workshop on Wireless Security (WiSE’03), San Diego, CA, Sep. 2003, 10 pp.
[21] G. Danezis, C. Lesniewski-Laas, M. F. Kaashoek, and R. Anderson, “Sybil-resistant DHT routing,” in Proc. European Symp. Research in Computer Security (ESORICS 2005), Milan, Italy, Sep. 2005, pp. 305–318.
[22] J. Newsome, E. Shi, D. Song, and A. Perrig, “The Sybil attack in sensor networks: Analysis & defenses,” in Proc. 3rd Int. Symp. Information Processing in Sensor Networks (IPSN 2004), Berkeley, CA, Apr. 2004, pp. 259–268.
[23] B. Parno, A. Perrig, and V. Gligor, “Distributed detection of node replication attacks in sensor networks,” in Proc. IEEE Symp. Security and Privacy, Oakland, CA, May 2005, pp. 49–63.
[24] A. Cheng and E. Friedman, “Sybilproof reputation mechanisms,” in Proc. 3rd ACM SIGCOMM Workshop on Economics of Peer-to-Peer Systems (P2PECON-05), Philadelphia, PA, Aug. 2005, pp. 128–132.
[25] M. Feldman, K. Lai, I. Stoica, and J. Chuang, “Robust incentive techniques for peer-to-peer networks,” in Proc. ACM Electronic Commerce (EC’04), New York, NY, May 2004, 10 pp.
[26] M. Richardson, R. Agrawal, and P. Domingos, “Trust management for the semantic web,” in Proc. 2nd Int. Semantic Web Conf. (ISWC2003), Sanibel Island, FL, Oct. 2003, pp. 351–368.
[27] K. Walsh and E. G. Sirer, “Experience with an object reputation system for peer-to-peer filesharing,” in Proc. 3rd USENIX Symp. Networked Systems Design and Implementation (NSDI 2006), San Jose, CA, May 2006, pp. 1–14.
[28] P. Maniatis, M. Roussopoulos, T. Giuli, D. S. H. Rosenthal, and M. Baker, “The LOCKSS peer-to-peer digital preservation system,” ACM Trans. Comput. Syst. (TOCS),, vol. 23, no. 1, pp. 2–50, 2005.
[29] A. Mislove, A. Post, K. Gummadi, and P. Druschel, “Ostra: Leveraging trust to thwart unwanted communication,” in Proc. 5th USENIX Symp. Networked Systems Design and Implementation (NSDI 2008), San Francisco, CA, Apr. 2008, pp. 15–30.