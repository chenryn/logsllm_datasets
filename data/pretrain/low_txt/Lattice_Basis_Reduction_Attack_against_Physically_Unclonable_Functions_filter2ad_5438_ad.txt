# Platform and PUF Implementation

## FPGA Platforms
- **Spartan 6**: Used in multiple configurations (80, 127, 45 slices)
- **Zynq-7000**: 9,825 slices

## PUF Logic and Error Correction
- **Figure 8**: The POK (Physical Obfuscated Key) uses an FE (Fuzzy Extractor) to ensure the stability of the secret seed.
- **SRAM Cells**: Raw (uninitialized) SRAM cells were synthesized, configured, and tested on a Xilinx Spartan-6 FPGA (XC6SLX45), which is a low-end FPGA with 45nm technology.

### Fuzzy Extractor (FE) Design
- **Homogeneous Error Assumption**: All cells have the same Bit Error Rate (BER).
- **Intrinsic BERs**: Range from 0.1% [23] to 15% [33].
- **BER Levels Studied**: 1%, 5%, 10%, and 15% to explore design costs.
- **Chosen BER**: 5% as the raw SRAM BER for benchmarking.
- **Goal**: Ensure key reconstruction of 1280 bits with a targeted failure rate of \(10^{-6}\).

### Error-Correcting Codes
- **Concatenated Codes**: Use a repetition code as the inner code and a shortened BCH code as the outer code.
- **Efficiency**: Concatenated codes are more efficient in terms of code length and hardware cost [8].

### Hardware Utilization
- **Table V**: Lists the configuration and hardware costs of error-correcting codes at different BER levels.
- **Raw BER of 5%**: Requires 6.5K cells to construct the secret \( s \) of 1280 bits at the target failure rate of \(10^{-6}\).
- **FE Design Cost**: 233 slices, which is cheaper than the linear solver block used in CFE-based strong PUFs [19], [21] (65,700 LUTs and 16,425 slices).

### PUF Logic
- **Lattice PUF Size**: 45 slices without FE, mostly taken up by the LFSR and controller.
- **Core Block**: Implements the LWE decryption function (LWEDec) with an 8-bit MAC and a quantization block.
- **LFSR Implementation**: 256-bit LFSR using RAM-based shift registers.
- **Latency**: 47µs to generate a 1-bit PUF response, and approximately 4.4ms to generate a 100-bit PUF response at 33.3MHz clock.

### Comparison with Other PUF Designs
- **Table IV**: Compares the implementation cost of the lattice PUF logic against established strong PUF designs [7], [17], [21].
- **AES PUF**: Implemented as an ASIC [7], and an FPGA alternative [13] is used for estimation.
- **SHA-3 PUF**: FPGA implementation [22] is used for estimating the cost of a hash function for the controlled PUF [17].
- **CFE-based PUF**: Presented via the number of LUTs in [21], with slice count estimated using [48].
- **Area Savings**: Significant savings compared to [19], [21], another PUF based on LWE.

## Conclusion
- **New Strong PUF**: Proven secure against machine learning (ML) attacks with both classical and quantum computers.
- **Security**: Derived from the cryptographic hardness of learning decryption functions of semantically secure public-key cryptosystems within the probably approximately correct (PAC) framework.
- **Implementation**: Realized on a Spartan 6 FPGA, with a challenge-response pair space of size \(2^{136}\), requiring 1280 physically obfuscated key bits, and guaranteeing 128-bit ML resistance.
- **Performance**: Excellent uniformity, uniqueness, and reliability.

## Acknowledgments
- **Dr. Aydin Aysu**: Provided insightful advice on idea presentation, assistance with FPGA implementation of repetition code, and comments that greatly improved the manuscript.

## References
- [1] M. Abadi, P. Barham, J. Chen, Z. Chen, A. Davis, J. Dean, M. Devin, S. Ghemawat, G. Irving, M. Isard, et al. Tensorﬂow: A system for large-scale machine learning. In 12th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 16), pages 265–283, 2016.
- [2] A. Akavia, S. Goldwasser, and V. Vaikuntanathan. Simultaneous hardcore bits and cryptography against memory attacks. In Theory of Cryptography Conference, pages 474–495. Springer, 2009.
- [3] M. R. Albrecht, R. Player, and S. Scott. On the concrete hardness of learning with errors. Journal of Mathematical Cryptology, 9(3):169–203, 2015.
- [4] D. Apon, C. Cho, K. Eldefrawy, and J. Katz. Efficient, reusable fuzzy extractors from lwe. In International Conference on Cyber Security Cryptography and Machine Learning, pages 1–18. Springer, 2017.
- [5] G. T. Becker. The gap between promise and reality: On the insecurity of xor arbiter pufs. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 535–555. Springer, 2015.
- [6] D. J. Bernstein. Introduction to post-quantum cryptography. In Post-quantum cryptography, pages 1–14. Springer, 2009.
- [7] M. Bhargava and K. Mai. An efficient reliable puf-based cryptographic key generator in 65nm cmos. In Proceedings of the conference on Design, Automation & Test in Europe, page 70. European Design and Automation Association, 2014.
- [8] C. Bösch, J. Guajardo, A.-R. Sadeghi, J. Shokrollahi, and P. Tuyls. Efficient helper data key extractor on fpgas. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 181–197. Springer, 2008.
- [9] Z. Brakerski, A. Langlois, C. Peikert, O. Regev, and D. Stehlé. Classical hardness of learning with errors. In Proceedings of the forty-fifth annual ACM symposium on Theory of computing, pages 575–584. ACM, 2013.
- [10] Q. Chen, G. Csaba, P. Lugli, U. Schlichtmann, and U. Rührmair. The bistable ring puf: A new architecture for strong physical unclonable functions. In 2011 IEEE International Symposium on Hardware-Oriented Security and Trust, pages 134–141. IEEE, 2011.
- [11] Y. Chen and P. Q. Nguyen. BKZ 2.0: Better lattice security estimates. In International Conference on the Theory and Application of Cryptology and Information Security, pages 1–20. Springer, 2011.
- [12] F. Chollet et al. Keras, 2015.
- [13] J. Chu and M. Benaissa. Low area memory-free fpga implementation of the aes algorithm. In Field Programmable Logic and Applications (FPL), 2012 22nd International Conference on, pages 623–626. IEEE, 2012.
- [14] B. Fuller, X. Meng, and L. Reyzin. Computational fuzzy extractors. In International Conference on the Theory and Application of Cryptology and Information Security, pages 174–193. Springer, 2013.
- [15] S. D. Galbraith. Space-efficient variants of cryptosystems based on learning with errors. URL: https://www.math.auckland.ac.nz/~sgal018/compact-LWE.pdf, 2013.
- [16] F. Ganji, S. Tajik, F. Fässler, and J.-P. Seifert. Strong machine learning attack against pufs with no mathematical model. In International Conference on Cryptographic Hardware and Embedded Systems, pages 391–411. Springer, 2016.
- [17] B. Gassend, M. V. Dijk, D. Clarke, E. Torlak, S. Devadas, and P. Tuyls. Controlled physical random functions and applications. ACM Transactions on Information and System Security (TISSEC), 10(4):3, 2008.
- [18] I. Goodfellow, Y. Bengio, A. Courville, and Y. Bengio. Deep learning, volume 1. MIT press Cambridge, 2016.
- [19] C. Herder, L. Ren, M. van Dijk, M.-D. Yu, and S. Devadas. Trapdoor computational fuzzy extractors and stateless cryptographically-secure physical unclonable functions. IEEE Transactions on Dependable and Secure Computing, 14(1):65–82, 2017.
- [20] N. Howgrave-Graham. A hybrid lattice-reduction and meet-in-the-middle attack against ntru. In Annual International Cryptology Conference, pages 150–169. Springer, 2007.
- [21] C. Jin, C. Herder, L. Ren, P. H. Nguyen, B. Fuller, S. Devadas, and M. van Dijk. FPGA implementation of a cryptographically-secure puf based on learning parity with noise. Cryptography, 1(3):23, 2017.
- [22] J.-P. Kaps, P. Yalla, K. K. Surapathi, B. Habib, S. Vadlamudi, S. Gurung, and J. Pham. Lightweight implementations of sha-3 candidates on fpgas. In International Conference on Cryptology in India, pages 270–289. Springer, 2011.
- [23] B. Karpinskyy, Y. Lee, Y. Choi, Y. Kim, M. Noh, and S. Lee. 8.7 physically unclonable function for secure key generation with a key error rate of 2e-38 in 45nm smart-card chips. In Solid-State Circuits Conference (ISSCC), 2016 IEEE International, pages 158–160. IEEE, 2016.
- [24] J. Katz and Y. Lindell. Introduction to modern cryptography. CRC press, 2014.
- [25] M. Kearns and L. Valiant. Cryptographic limitations on learning boolean formulae and finite automata. Journal of the ACM (JACM), 41(1):67–95, 1994.
- [26] M. Kharitonov. Cryptographic hardness of distribution-specific learning. In Proceedings of the twenty-fifth annual ACM symposium on Theory of computing, pages 372–381. ACM, 1993.
- [27] D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.
- [28] A. R. Klivans and A. A. Sherstov. Cryptographic hardness for learning intersections of halfspaces. In Foundations of Computer Science, 2006. FOCS'06. 47th Annual IEEE Symposium on, pages 553–562. IEEE, 2006.
- [29] R. Kumar and W. Burleson. On design of a highly secure puf based on non-linear current mirrors. In Hardware-Oriented Security and Trust (HOST), 2014 IEEE International Symposium on, pages 38–43. IEEE, 2014.
- [30] D. Lim, J. W. Lee, B. Gassend, G. E. Suh, M. Van Dijk, and S. Devadas. Extracting secret keys from integrated circuits. IEEE Transactions on Very Large Scale Integration (VLSI) Systems, 13(10):1200–1205, 2005.
- [31] R. Lindner and C. Peikert. Better key sizes (and attacks) for lwe-based encryption. In Cryptographers’ Track at the RSA Conference, pages 319–339. Springer, 2011.
- [32] R. Maes. An accurate probabilistic reliability model for silicon pufs. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 73–89. Springer, 2013.
- [33] R. Maes, P. Tuyls, and I. Verbauwhede. A soft decision helper data algorithm for sram pufs. In 2009 IEEE international symposium on information theory, pages 2101–2105. IEEE, 2009.
- [34] R. Maes, A. Van Herrewege, and I. Verbauwhede. Pufky: A fully functional puf-based cryptographic key generator. In International Workshop on Cryptographic Hardware and Embedded Systems, pages 302–319. Springer, 2012.
- [35] A. Maiti, V. Gunreddy, and P. Schaumont. A systematic method to evaluate and compare the performance of physical unclonable functions. In Embedded systems design with FPGAs, pages 245–267. Springer, 2013.
- [36] M. Majzoobi, F. Koushanfar, and M. Potkonjak. Lightweight secure pufs. In Proceedings of the 2008 IEEE/ACM International Conference on Computer-Aided Design, pages 670–673. IEEE Press, 2008.
- [37] D. Micciancio and O. Regev. Lattice-based cryptography. In Post-quantum cryptography, pages 147–191. Springer, 2009.
- [38] M. Mohri, A. Rostamizadeh, and A. Talwalkar. Foundations of machine learning. MIT press, 2012.
- [39] P. H. Nguyen, D. P. Sahoo, C. Jin, K. Mahmood, U. Rührmair, and M. van Dijk. The interpose puf: Secure puf design against state-of-the-art machine learning attacks. IACR Transactions on Cryptographic Hardware and Embedded Systems, pages 243–290, 2019.
- [40] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot, and E. Duchesnay. Scikit-learn: Machine learning in Python. Journal of Machine Learning Research, 12:2825–2830, 2011.
- [41] O. Regev. On lattices, learning with errors, random linear codes, and cryptography. Journal of the ACM (JACM), 56(6):34, 2009.
- [42] U. Rührmair, F. Sehnke, J. Sölter, G. Dror, S. Devadas, and J. Schmidhuber. Modeling attacks on physical unclonable functions. In Proceedings of the 17th ACM conference on Computer and communications security, pages 237–249. ACM, 2010.
- [43] P. Santikellur, A. Bhattacharyay, and R. S. Chakraborty. Deep learning based model building attacks on arbiter PUF compositions. IACR Cryptology ePrint Archive, 2019:566, 2019.
- [44] D. Schuster and R. Hesselbarth. Evaluation of bistable ring pufs using single layer neural networks. In International Conference on Trust and Trustworthy Computing, pages 101–109. Springer, 2014.
- [45] G. E. Suh and S. Devadas. Physical unclonable functions for device authentication and secret key generation. In Proceedings of the 44th annual Design Automation Conference, pages 9–14. ACM, 2007.
- [46] A. Vijayakumar, V. C. Patil, C. B. Prado, and S. Kundu. Machine learning resistant strong puf: Possible or a pipe dream? In Hardware Oriented Security and Trust (HOST), 2016 IEEE International Symposium on, pages 19–24. IEEE, 2016.
- [47] X. Xi, H. Zhuang, N. Sun, and M. Orshansky. Strong subthreshold current array puf with 2^65 challenge-response pairs resilient to machine learning attacks in 130nm cmos. In VLSI Circuits, 2017 Symposium on, pages C268–C269. IEEE, 2017.
- [48] Xilinx. Zynq-7000 SoC Data Sheet: Overview, 7 2018. v1.11.1.
- [49] M.-D. Yu, M. Hiller, J. Delvaux, R. Sowell, S. Devadas, and I. Verbauwhede. A lockdown technique to prevent machine learning on pufs for lightweight authentication. IEEE Transactions on Multi-Scale Computing Systems, 2(3):146–159, 2016.