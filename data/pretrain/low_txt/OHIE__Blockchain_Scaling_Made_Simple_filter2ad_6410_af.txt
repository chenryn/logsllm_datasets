### 20 Mbps Bandwidth Configuration
In a 20 Mbps bandwidth configuration, it is observed that a block takes approximately 1-5 minutes to achieve partial confirmation and an additional 2-4 minutes to become fully confirmed. For comparison, the current confirmation latencies in Bitcoin and Ethereum are 60 minutes and 3 minutes, respectively.

For a conservative value of T = 30, further experiments (not shown in Figure 5c) confirm that both partial and full confirmation latencies remain stable under various bandwidth configurations ranging from 8 Mbps to 20 Mbps. In other words, the latency does not deteriorate as the throughput of OHIE increases.

### Related Work
OHIE employs Proof-of-Work (PoW) under the same permissionless model as Nakamoto consensus. Alternative models include Proof-of-Stake (PoS) [7], [8], [20], [25] and permissioned settings [11], [16], [38]. PoW-based permissionless blockchain protocols generally follow two paradigms: extensions to Nakamoto consensus and classical Byzantine Agreement (BA). We will discuss these two categories in detail.

#### Nakamoto Consensus
Existing deployments of Nakamoto consensus, such as Bitcoin, and its variant, the GHOST protocol [44] (e.g., Ethereum), achieve a throughput of about 5 KB/s. Bitcoin-NG, a variant of Nakamoto consensus, improves throughput by allowing a single proposer to generate multiple micro-blocks after being chosen by a key block [13]. This significantly enhances throughput without compromising security but limits decentralization, as a single block proposer generates all (micro) blocks for an extended period (e.g., 10 minutes), making it susceptible to censorship and DoS attacks. In contrast, OHIE achieves superior decentralization, with up to 60 different proposers concurrently proposing blocks each second in our experiments.

#### Scaling Nakamoto Consensus
Phantom [45] and Conflux [32] have attempted to scale Nakamoto consensus by having blocks reference more than one previous block. These approaches are discussed in Section I.

Chainweb [35], [42] is another attempt to scale Nakamoto consensus by maintaining k parallel chains. Unlike OHIE, Chainweb lacks mechanisms to prevent adversaries from focusing on a single chain. The original analysis of Chainweb [35], [42] only considers specific attack strategies [40], rather than all possible adversaries. Fitzi et al. [15] have shown that an adversary focusing on a specific chain can cause the confirmation latency in Chainweb to increase quadratically with k. In contrast, OHIE does not suffer from this issue. Additionally, while OHIE balances all chains using rank values, Chainweb requires synchronous growth of all chains, necessitating periodic stalling of fast-growing chains. Kiffer et al. [26] further analyzed Chainweb and found that it does not support high-throughput claims. Their analysis indicates that a natural form of Chainweb is "bounded by the same throughput as Nakamoto protocol for the same consistency guarantee" [26].

Two concurrent and independent online non-refereed technical reports [5], [15] propose similar approaches to composing multiple parallel chains. While their high-level designs share similarities with OHIE, they designate one of the k parallel chains as a special chain, with blocks on other chains related to blocks on that special chain [5], [15]. In OHIE, all k chains are equal and symmetric. Moreover, these works [5], [15] lack implementation details and experimental evaluation, whereas we have a prototype implementation and large-scale evaluation on Amazon EC2. Our experiments confirm that propagating many parallel blocks does not negatively impact block propagation delay, providing empirical support for parallel chain designs.

Finally, Spectre [43] confirms blocks without guaranteeing a total order, while the inclusive protocol [31] includes as many non-conflicting transactions as possible. These works provide weaker consistency notions compared to OHIE, which guarantees a total order. Total ordering is crucial for resolving state conflicts in smart contracts [29], [30] and building higher abstractions of consistency [3], [12], [28].

#### Blockchain Protocols Relying on Byzantine Agreement
Some PoW-based permissionless blockchain protocols [2], [12], [27], [28], [33], [41], [47] build upon classical Byzantine Agreement (BA) protocols. BA protocols require a committee of pre-agreed identities to run. Such a committee can be established using Nakamoto consensus or previous rounds of BA.

Unlike OHIE and other Nakamoto-style protocols, BA-based blockchain protocols [2], [20], [27], [33], [41], [47] can tolerate any constant f < 1/3. A key bottleneck in BA-based designs is establishing (or replenishing) committees with 200-2000 identities, necessary to ensure the required resilience f. The latency for replenishing committees can range from tens of seconds [2], [20] to hours [28]. After committees are established and in the absence of attacks, BA protocols typically have smaller confirmation latencies [20], [27], [47] than Nakamoto-style protocols. However, classical BA protocols, such as PBFT [9], are more complex to implement and verify compared to Nakamoto consensus.

#### Sharding Designs
A subset of BA-based blockchain protocols employ sharding [28], [33], [47], where many parallel shards process blocks in parallel. This improves decentralization and throughput at the cost of additional complexity. Due to overheads associated with each shard, these protocols [28], [33], [47] typically use a small number of shards (no more than 25). The best decentralization achieved in [28] is about 25 blocks proposed every 8 seconds. In contrast, OHIE does not pre-assign nodes to its k chains and can easily use a large k as needed. The decentralization factor in our experiments (i.e., about 600 blocks every 10 seconds) is about 20 times higher than in sharding designs.

### Conclusion
We present OHIE, a protocol that securely composes instances of Nakamoto consensus. OHIE has a simple implementation and a modular safety and liveness proof. It achieves linear scaling with available bandwidth and at least 20 times better decentralization than prior works.

### Acknowledgments
We thank Hung Dang, Seth Gilbert, Aquinas Hobor, Ilya Sergey, Shruti Tople, and Muoi Tran for their helpful feedback on this work. We also thank Sourav Das for help with formatting the figures in this paper. This work is partly supported by the sponsors of the Crystal Center at the National University of Singapore. All opinions and findings presented in this work are those of the authors only.

### References
[1] OHIE - Blockchain scaling. https://github.com/ivicanikolicsg/OHIE, 2019.
[2] ABRAHAM, I., MALKHI, D., NAYAK, K., REN, L., AND SPIEGELMAN, A. Solida: A blockchain protocol based on reconﬁgurable byzantine consensus. In International Conference on Principles of Distributed Systems (OPODIS) (2017).
[3] AL-BASSAM, M., SONNINO, A., BANO, S., HRYCYSZYN, D., AND DANEZIS, G. Chainspace: A sharded smart contracts platform. In Network and Distributed System Security Symposium (NDSS) (2018).
[4] APOSTOLAKI, M., ZOHAR, A., AND VANBEVER, L. Hijacking bitcoin: Routing attacks on cryptocurrencies. In IEEE Symposium on Security and Privacy (2017).
[5] BAGARIA, V., KANNAN, S., TSE, D., FANTI, G., AND VISWANATH, P. Deconstructing the blockchain to approach physical limits. arXiv preprint arXiv:1810.08092v2 (2018).
[6] BAILIS, P., AND GHODSI, A. Eventual consistency today: limitations, extensions, and beyond. Commun. ACM (2013).
[7] BENTOV, I., PASS, R., AND SHI, E. Snow white: Provably secure proofs of stake. IACR Cryptology ePrint Archive (2016).
[8] BONNEAU, J., MILLER, A., CLARK, J., NARAYANAN, A., KROLL, J. A., AND FELTEN, E. W. Sok: Research perspectives and challenges for bitcoin and cryptocurrencies. In IEEE Symposium on Security and Privacy (2015).
[9] CASTRO, M., AND LISKOV, B. Practical byzantine fault tolerance. In Symposium on Operating Systems Design and Implementation (OSDI) (1999).
[10] CROMAN, K., DECKER, C., EYAL, I., GENCER, A. E., JUELS, A., KOSBA, A. E., MILLER, A., SAXENA, P., SHI, E., SIRER, E. G., SONG, D., AND WATTENHOFER, R. On scaling decentralized blockchains - (A position paper). In Financial Cryptography and Data Security - FC International Workshops (BITCOIN) (2016).
[11] DANEZIS, G., AND MEIKLEJOHN, S. Centrally banked cryptocurrencies. In Network and Distributed System Security Symposium (NDSS) (2016).
[12] DECKER, C., SEIDEL, J., AND WATTENHOFER, R. Bitcoin meets strong consistency. In International Conference on Distributed Computing and Networking (ICDCN) (2016).
[13] EYAL, I., GENCER, A. E., SIRER, E. G., AND VAN RENESSE, R. Bitcoin-NG: A Scalable Blockchain Protocol. In NSDI (2016).
[14] EYAL, I., AND SIRER, E. G. Majority is not enough: Bitcoin mining is vulnerable. Communications of the ACM 61, 7 (2018), 95–102.
[15] FITZI, M., GAZI, P., KIAYIAS, A., AND RUSSELL, A. Parallel chains: Improving throughput and latency of blockchain protocols via parallel composition. Cryptology ePrint Archive, report 2018/1119, version 20181130:165620, Nov. 2018. https://eprint.iacr.org/2018/1119.
[16] GARAY, J., AND KIAYIAS, A. Sok: A consensus taxonomy in the blockchain era, 2018. https://eprint.iacr.org/2018/754.pdf.
[17] GARAY, J., KIAYIAS, A., AND LEONARDOS, N. The bitcoin backbone protocol: Analysis and applications. In EUROCRYPT (2015).
[18] GARAY, J. A., KIAYIAS, A., AND LEONARDOS, N. The bitcoin backbone protocol with chains of variable difficulty. In CRYPTO (2017).
[19] GENCER, A. E., BASU, S., EYAL, I., VAN RENESSE, R., AND SIRER, E. G. Decentralization in bitcoin and ethereum networks. In Financial Cryptography and Data Security (FC) (2018).
[20] GILAD, Y., HEMO, R., MICALI, S., VLACHOS, G., AND ZELDOVICH, N. Algorand: Scaling byzantine agreements for cryptocurrencies. In Symposium on Operating Systems Principles (2017).
[21] GILBERT, S., AND LYNCH, N. Brewer’s conjecture and the feasibility of consistent, available, partition-tolerant web services. SIGACT News 33, 2 (2002), 51–59.
[22] GILBERT, S., AND LYNCH, N. A. Perspectives on the CAP theorem. IEEE Computer 45, 2 (2012), 30–36.
[23] HEILMAN, E., KENDLER, A., ZOHAR, A., AND GOLDBERG, S. Eclipse attacks on bitcoin’s peer-to-peer network. In USENIX Security Symposium (2015).
[24] KIAYIAS, A., AND PANAGIOTAKOS, G. Speed-security tradeoffs in blockchain protocols. IACR Cryptology ePrint Archive 2015 (2015), 1019.
[25] KIAYIAS, A., RUSSELL, A., DAVID, B., AND OLIYNYKOV, R. Ouroboros: A provably secure proof-of-stake blockchain protocol. In CRYPTO (2017).
[26] KIFFER, L., RAJARAMAN, R., AND ABHI SHELAT. A Better Method to Analyze Blockchain Consistency. In CCS (2018).
[27] KOKORIS-KOGIAS, E., JOVANOVIC, P., GAILLY, N., KHOFFI, I., GASSER, L., AND FORD, B. Enhancing bitcoin security and performance with strong consistency via collective signing. In USENIX Security Symposium (2016).
[28] KOKORIS-KOGIAS, E., JOVANOVIC, P., GASSER, L., GAILLY, N., AND FORD, B. OmniLedger: A Secure, Scale-Out, Decentralized Ledger via Sharding. In IEEE Symposium on Security and Privacy (2018).
[29] KUNG, H. T., AND PAPADIMITRIOU, C. H. An optimality theory of concurrency control for databases. In SIGMOD (1979).
[30] LAMPORT, L. How to make a multiprocessor computer that correctly executes multiprocess programs. IEEE Trans. Computers 28, 9 (1979), 690–691.
[31] LEWENBERG, Y., SOMPOLINSKY, Y., AND ZOHAR, A. Inclusive blockchain protocols. In International Conference on Financial Cryptography and Data Security (2015).
[32] LI, C., LI, P., ZHOU, D., XU, W., LONG, F., AND YAO, A. Scaling nakamoto consensus to thousands of transactions per second, 2018. Arxiv preprint, arXiv:1805.03870v4.
[33] LUU, L., NARAYANAN, V., ZHENG, C., BAWEJA, K., GILBERT, S., AND SAXENA, P. A secure sharding protocol for open blockchains. In CCS (2016).
[34] LUU, L., VELNER, Y., TEUTSCH, J., AND SAXENA, P. Smartpool: Practical decentralized pooled mining. In USENIX Security Symposium (2017).
[35] MARTINO, W., QUAINTANCE, M., AND POPEJOY, S. Chainweb: A Proof-of-Work Parallel-Chain Architecture for Massive Throughput (DRAFT v15), 2018. https://kadena.io/download/178/.
[36] MCCORRY, P., HICKS, A., AND MEIKLEJOHN, S. Smart contracts for bribing miners. IACR Cryptology ePrint Archive (2018).
[37] MERKLE, R. C. A digital signature based on a conventional encryption function. In CRYPTO (1987).
[38] MILLER, A., XIA, Y., CROMAN, K., SHI, E., AND SONG, D. The honey badger of BFT protocols. In CCS (2016).
[39] NAKAMOTO, S. Bitcoin: A peer-to-peer electronic cash system, 2008. https://bitcoin.org/bitcoin.pdf.
[40] PASS, R., SEEMAN, L., AND SHELAT, A. Analysis of the blockchain protocol in asynchronous networks. In EUROCRYPT (2017).
[41] PASS, R., AND SHI, E. Hybrid consensus: Efficient consensus in the permissionless model. In International Symposium on Distributed Computing (2017).
[42] QUAINTANCE, M., AND MARTINO, W. Chainweb Protocol Security Calculations (WORK IN PROGRESS - DRAFT v7), 2018. https://kadena.io/download/187/.
[43] SOMPOLINSKY, Y., LEWENBERG, Y., AND ZOHAR, A. Spectre: A fast and scalable cryptocurrency protocol. IACR Cryptology ePrint Archive (2016).
[44] SOMPOLINSKY, Y., AND ZOHAR, A. Secure high-rate transaction processing in bitcoin. In International Conference on Financial Cryptography and Data Security (2015).
[45] SOMPOLINSKY, Y., AND ZOHAR, A. Phantom: A scalable blockdag protocol, 2018. https://eprint.iacr.org/2018/104/20180330:121321.
[46] YU, H., NIKOLIC, I., HOU, R., AND SAXENA, P. OHIE: Blockchain Scaling Made Simple, 2019. Arxiv preprint, arXiv:1811.12628.
[47] ZAMANI, M., MOVAHEDI, M., AND RAYKOVA, M.