# Building Apps that Secure Identity through Permissions and Consent

This article builds on the [Zero Trust Identity and Access Management Development Best Practices](identity-iam-development-best-practices.md) to help you integrate a Zero Trust approach to identity management in your software development lifecycle (SDLC). Below, we provide an overview of the **Permissions and Access** articles in this [Developer Guide](overview.md), which cover key aspects of authentication, authorization, and identity management.

## Key Articles on Permissions and Access

1. **[Integrating Applications with Microsoft Entra ID and the Microsoft Identity Platform](integrate-apps-microsoft-identity-platform.md)**: This guide assists developers in building and integrating applications that can be securely managed by IT professionals using Microsoft Entra ID and the Microsoft Identity Platform.

2. **[Registering Applications](app-registration.md)**: Learn about the application registration process and its requirements, ensuring that your apps adhere to Zero Trust principles such as least privileged access and assuming breach.

3. **[Supported Identity and Account Types for Single- and Multi-Tenant Apps](identity-supported-account-types.md)**: Discover how to configure your app to allow users from your Microsoft Entra tenant, any Microsoft Entra tenant, or personal Microsoft accounts.

4. **[Authenticating Users for Zero Trust](user-authentication.md)**: Explore best practices for authenticating users in Zero Trust application development, including enhancing security with least privilege and explicit verification.

5. **[Acquiring Authorization to Access Resources](acquire-application-authorization-to-access-resources.md)**: Understand how to ensure Zero Trust when acquiring resource access permissions for your application.

6. **[Developing Delegated Permissions Strategy](developer-strategy-delegated-permission.md)**: Implement the best approach for managing delegated permissions in your application, adhering to Zero Trust principles.

7. **[Developing Application Permissions Strategy](developer-strategy-application-permissions.md)**: Decide on the best approach for managing application permissions, focusing on credential management.

8. **[Requesting Permissions that Require Administrative Consent](permissions-require-admin-consent.md)**: Learn about the permission and consent experience when application permissions require administrative approval.

9. **[Reducing Overprivileged Permissions and Apps](overprivileged-permissions.md)**: Understand why applications should not request more permissions than necessary and learn how to limit privileges to improve security.

10. **[Providing Application Identity Credentials When There's No User](identity-non-user-applications.md)**: Discover the best Zero Trust client credentials practice for services (non-user applications) on Azure, which is Managed Identities for Azure resources.

11. **[Managing Tokens for Zero Trust](token-management.md)**: Build security into your applications with ID tokens, access tokens, and security tokens received from the Microsoft Identity Platform.

12. **[Customizing Tokens](zero-trust-token-customization.md)**: Learn about the information you can receive in Microsoft Entra tokens and how to customize them.

13. **[Securing Applications with Continuous Access Evaluation](secure-with-cae.md)**: Improve application security with Continuous Access Evaluation and ensure Zero Trust support in your apps.

14. **[Configuring Group Claims and App Roles in Tokens](configure-tokens-group-claims-app-roles.md)**: Configure your apps with app role definitions and assign security groups.

15. **[API Protection](protect-api.md)**: Follow best practices for protecting your API through registration, defining permissions and consent, and enforcing access to achieve Zero Trust goals.

16. **[Example of API Protected by Microsoft Identity Consent Framework](protected-api-example.md)**: Design least privilege application permissions strategies for the best user experience.

17. **[Calling an API from Another API](api-calls-api.md)**: Ensure Zero Trust when one API calls another, and learn how to securely develop your application when it acts on behalf of a user.

18. **[Authorization Best Practices](developer-strategy-authorization-best-practices.md)**: Implement the best authorization, permission, and consent models for your applications.

## Next Steps

- [Subscribe](/api/search/rss?search=%22Develop+using+Zero+Trust+principles%22&locale=en-us) to our *Develop Using Zero Trust Principles* RSS feed for notifications of new articles.
- [Develop Using Zero Trust Principles](overview.md): Understand the guiding principles of Zero Trust to enhance your application security.
- [What Do We Mean by Zero Trust Compliance?](identity-zero-trust-compliance.md): Get an overview of application security from a developer's perspective, addressing the guiding principles of Zero Trust.
- [Zero Trust Identity and Access Management Development Best Practices](identity-iam-development-best-practices.md): Apply these best practices in your SDLC to create secure applications.
- [Using Standards-Based Development Methodologies](identity-standards-based-development-methodologies.md): Learn about supported standards (OAuth 2.0, OpenID Connect, SAML, WS-Federation, and SCIM) and their benefits when used with MSAL and the Microsoft Identity Platform.
- [Developer and Administrator Responsibilities for Application Registration, Authorization, and Access](identity-developer-administrator-responsibilities.md): Collaborate effectively with your IT professionals.
- [Build Zero Trust-Ready Apps Using Microsoft Identity Platform Features and Tools](/azure/active-directory/develop/zero-trust-for-developers): Map features of the Microsoft Identity Platform to Zero Trust principles.
- [Identity Integrations](../integrate/identity.md): Integrate security solutions with Microsoft products to create Zero Trust solutions.