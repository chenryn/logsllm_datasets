# MoneyGuard: A System for Detecting Stealthy Money-Stealing Malware

## Overview
MoneyGuard is a system designed to detect stealthy money-stealing malware in Android applications. It achieves this by checking for hard-coded exfiltration parameters and notification suppression behavior.

### Key Components

1. **Billing Behavioral Identifier**
   - **Decompilation and Analysis**: The APK file of the application is decompiled into Dalvik bytecode, and all function call flows (FCFs) are statically extracted.
   - **System Call Extraction**: For each method, the system records the Android system calls used.
   - **Billing Permission Examination**: Each FCF is examined to identify sequences of Android system calls that could launch billing behaviors.
   - **Hard-Coded Phone Numbers**: The system checks if the application attempts to contact fixed third-party identities using hard-coded phone numbers. If so, the application is flagged as a potential money-stealing candidate.
   - **Example System Calls**:
     - **READ SMS**: `provider.Telephony$Sms.addMessage`
     - **SEND SMS**: `provider.Telephony$Sms$Sent.addMessage`, `telephony.gsm.SmsManager.getDefault`, `telephony.gsm.SmsManager.sendDataMessage`, `telephony.gsm.SmsManager.sendTextMessage`
     - **PHONE CALL**: `internal.telephony.ITelephony$Stub$Proxy.call`, `internal.telephony.ITelephony$Stub$Proxy.endCall`
     - **INTERNET**: `java.net.HttpURLConnection.connect`, `org.apache.http.impl.client.HttpClient.execute`, `webkit.WebView`, `java.net.ServerSocket.bind`

2. **Notification Suppression Detector**
   - **Detection of Notification Suppression**: After identifying suspicious billing behavior, the component detects notification suppression patterns.
   - **Heuristics-Based Models**: Heuristic models are used to detect notification suppression patterns for each billing behavior.
   - **SMS Notification Suppression**: The system checks if the application monitors and aborts SMS messages or deletes them from the content provider.
   - **Phone Call Suppression**: The system examines if the application makes phone calls to fixed numbers and hides this activity, such as launching calls in the background or while the screen is locked.

## Preliminary Evaluation

### Data Collection
- **Crawled Applications**: 56,268 Android applications were collected from three marketplaces: SlideMe (15,129 apps), AppDH (2,349 apps), and Anzhi (38,790 apps).
- **Focus on SMS-Related Malware**: The evaluation focused on detecting SMS-related money-stealing applications.
- **Ground Truth**: All 56,000 applications were submitted to VirusTotal, which identified 1,278 malicious applications. Of these, 47 instances had SMS-related behaviors.

### Results
- **Identification of Money-Stealing Apps**: The methodology successfully identified 41 out of 47 stealthy malware instances with both SMS permissions and behaviors.
- **False Positives and Negatives**:
  - **SmsSend Family**: 1 instance was not detected due to the absence of system calls to send SMS.
  - **TrojanSMS Family**: 3 instances were missed because they did not have SMS permissions despite having system calls to send SMS.
  - **jSMSHider Family**: Both instances were missed, possibly due to the current pre-defined models not matching this family.

### Conclusion
The preliminary evaluation demonstrates that MoneyGuard is a promising approach for detecting stealthy money-stealing malware. Further enhancements to the notification suppression models can improve detection accuracy.

### Acknowledgements
This work was supported by the U.S. Army Research Office (ARO) under Grant No. W911NF-06-1-0316 and the National Science Foundation under Grant IIS-0905518.

### References
1. Anzhi Android Market. <http://www.anzhi.com/>
2. App DH Android Market. <http://www.appdh.com/>
3. Circumventing Google Bouncer. <http://www.extremetech.com/computing/130424-circumventing-googles-bouncer-androids-anti-malware-system>
4. Fake Android Apps Scam Costs. <http://www.telegraph.co.uk/technology/news/9286538/Fake-Android-apps-scam-costs-28000.html>
5. Money-Stealing Apps Are Hosting in the Mobile Devices. <http://finance.sina.com.cn/money/lczx/20120410/070311783396.shtml>
6. Slideme Android Market. <http://slideme.org/>
7. Bose, A., Hu, X., Shin, K. G., and Park, T. Behavioral Detection of Malware on Mobile Handsets. In Proceedings of the 6th International Conference on Mobile Systems, Applications, and Services (MobiSys’08).
8. Enck, W., Gilbert, P., Chun, B.-G., Cox, L. P., Jung, J., McDaniel, P., and Sheth, A. N. Taintdroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones. In Proceedings of the 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI’10).
9. Jacoby, G., and Davis, N. Battery-Based Intrusion Detection. In Global Telecommunications Conference (GLOBECOM’04).
10. Kim, H., Smith, J., and Shin, K. G. Detecting Energy-Greedy Anomalies and Mobile Malware Variants. In Proceedings of the 6th International Conference on Mobile Systems, Applications, and Services (MobiSys’08).
11. Schmidt, A., Bye, R., Schmidt, H., Clausen, J., Kiraz, O., Yksel, K., Camtepe, S., and Sahin, A. Static Analysis of Executables for Collaborative Malware Detection on Android. In ICC Communication and Information Systems Security Symposium (2009).
12. Zhou, Y., Wang, Z., Zhou, W., and Jiang, X. Hey, You, Get Off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets. In Proceedings of the 19th Annual Symposium on Network and Distributed System Security (NDSS’12).