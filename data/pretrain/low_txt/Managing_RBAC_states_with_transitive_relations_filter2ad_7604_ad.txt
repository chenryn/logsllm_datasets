### 6. MAINTENANCE OPERATIONS

In [17], first-order maintenance algorithms for updating the reachability of roles (i.e., \( \text{TCGR} \)) under various update operations have been proposed. These algorithms can be implemented in SQL in any database system.

In this section, we briefly discuss how these algorithms can be adapted to maintain the reachability of a secured Role-Based Access Control (RBAC) state. Specifically, we aim to maintain \( \text{TCGU} \), \( \text{TCGR} \), \( \text{TCGP} \), or \( \text{TCGM} \) when the underlying graph specifications or requirements are changed. To achieve this, it is necessary to store \( \text{TCGU} \), \( \text{TCGR} \), and \( \text{TCGP} \) (or a single \( \text{TCGM} \), equivalently) in the database system, in addition to the secured RBAC state \( \text{GM} \) and the set of conflict constraints \( \text{CM} \).

The maintenance of a secured RBAC state using the algorithms from [17] is based on the following observations:

1. **Insertion or Deletion of LRP Tuples**: The insertion or deletion of a tuple in \( \text{LRP} \) is functionally equivalent to adding or removing a privilege from a role. Therefore, the algorithms can be easily adapted to support updates to \( \text{LRP} \).

2. **Redundant Arcs in GM or CM**: When the specifications or requirements on \( \text{GM} \) or \( \text{CM} \) change, it is necessary to identify and remove redundant arcs. In \( \text{GM} \), arcs in \( \text{GU} \) or \( \text{GR} \) are not updated directly because they imply subsumption on nodes. A node update can cause the insertion or deletion of arcs, potentially altering the hierarchical structure of the graph. For more details, refer to [17].

3. **Secure/Conflict Check**: After any update to \( \text{GM} \), a secure/conflict check should be performed. This includes:
   - Adding a user to an existing group.
   - Adding a privilege to an existing role or inserting an arc into \( \text{LRP} \).
   - Creating a new group or role.
   - Inserting an arc into \( \text{LU R} \).
   - Adding a new conflict constraint.

   If \( \text{TCGM} \cap \text{CM} = \emptyset \), the operation is legal; otherwise, it is illegal. A conflict check must be executed after performing any update operations.

4. **Efficiency Evaluation**: The efficiency of first-order maintenance algorithms has been reported in [16]. Tests show that these algorithms are significantly faster than recomputation algorithms in most situations. While the computation time for recomputation grows rapidly with the number of arcs in the graph, the incremental algorithms maintain almost constant time performance.

### 7. CONCLUSIONS

In this paper, we have demonstrated how to maintain reachability relations in an RBAC state using transitive closure relations of \( \text{GU} \), \( \text{GR} \), and \( \text{GP} \). Our maintenance strategy efficiently supports dynamic changes in the RBAC state [16, 17] and simplifies other operations, such as removing redundancy. We have extensively discussed the operations for finding and removing redundancy in an RBAC state, including redundancy in conflict constraints.

Future work will focus on improving and extending this work by investigating maintenance strategies in more general models and supporting more general conflict constraints.

### 8. REFERENCES

[1] A. V. Aho, M. R. Garey, and J. D. Ullman. The transitive reduction of a directed graph. SIAM J. Comput., 1(2):131–137, 1972.

[2] ANSI. American national standard for information technology - role-based access control. In ANSI INCITS 359-2004, 2004.

[3] J. Crampton. On permissions, inheritance and role hierarchies. In Proc. of ACM conference on Computer and communications security, pages 85–92, New York, NY, USA, 2003. ACM Press.

[4] C. Demetrescu and G. F. Italiano. Fully dynamic transitive closure: Breaking through the O(n^2) barrier. In IEEE Symposium on Foundations of Computer Science, pages 381–389, 2000.

[5] G. Dong and C. Pang. Maintaining transitive closure in first-order after node-set and edge-set deletions. Information Processing Letters, 62(3):193–199, 1997.

[6] G. Dong and R. Topor. Incremental evaluation of datalog queries. In Proc. Int’l Conference on Database Theory, pages 282–296, Berlin, Germany, Oct. 1992.

[7] K. Etessami. Dynamic tree isomorphism via first-order updates. In PODS, pages 235–243, 1998.

[8] D. F. Ferraiolo, R. Sandhu, S. Gavrila, D. R. Kuhn, and R. Chandramouli. Proposed NIST standard for role-based access control. ACM Trans. Inf. Syst. Secur., 4(3):224–274, 2001.

[9] P. Gibbons, R. Karp, V. Ramachandran, D. Soroker, and R. Tarjan. Transitive compaction in parallel via branchings. J. Algorithms, 12(1):110–125, 1991.

[10] S. Grumbach and J. Su. First-order definability over constraint databases. In Proceedings of Conference on Constraint Programming, 1995.

[11] X. Han, P. Kelsen, V. Ramachandran, and R. Tarjan. Computing minimal spanning subgraphs in linear time. SIAM J. Comput., 24(6):1332–1358, 1995.

[12] T. Jaeger and J. E. Tidswell. Practical safety in flexible access control models. ACM Trans. Inf. Syst. Secur., 4(2):158–190, 2001.

[13] S. Jajodia, P. Samarati, M. L. Sapino, and V. S. Subrahmanian. Flexible support for multiple access control policies. ACM Trans. Database Syst., 26(2):214–260, 2001.

[14] M. Nyanchama and S. Osborn. The role graph model and conflict of interest. ACM Trans. Inf. Syst. Secur., 2(1):3–33, 1999.

[15] S. Osborn and Y. Guo. Modeling users in role-based access control. In RBAC ’00: Proceedings of the fifth ACM workshop on Role-based access control, pages 31–37, New York, NY, USA, 2000. ACM Press.

[16] C. Pang, G. Dong, and K. Ramamohanarao. Incremental maintenance of shortest distance and transitive closure in first-order logic and SQL. ACM Trans. Database Syst., 30(3):698–721, 2005.

[17] C. Pang, X. Zhang, Y. Zhang, and K. Ramamohanarao. Maintenance of access roles in SQL. In Technical Report, 2005.

[18] J. S. Park, K. P. Costello, T. M. Neven, and J. A. Diosomito. A composite RBAC approach for large, complex organizations. In SACMAT ’04: Proceedings of the ninth ACM symposium on Access control models and technologies, pages 163–172, New York, NY, USA, 2004. ACM Press.

[19] S. Patnaik and N. Immerman. Dyn-FO: A parallel dynamic complexity class. In Proc. ACM Symp. on Principles of Database Systems, pages 210–221, 1994.

[20] R. S. Sandhu, E. J. Coyne, H. L. Feinstein, and C. E. Youman. Role-based access control models. IEEE Computer, 29(2):38–47, Feb. 1996.

[21] B. Shafiq, J. Joshi, E. Bertino, and A. Ghafoor. Secure interoperation in a multidomain environment employing RBAC policies. IEEE Trans. Knowl. Data Eng., 17(11):1557–1577, 2005.

[22] M. Shehab, E. Bertino, and A. Ghafoor. SERAT: Secure role mapping technique for decentralized secure interoperability. In Proceedings of the tenth ACM symposium on Access control models and technologies, pages 159–167, 2005.

[23] R. Simon and M. E. Zurko. Separation of duty in role-based environments. In CSFW, pages 183–194, 1997.

[24] H. Wang and S. L. Osborn. Delegation in the role graph model. In SACMAT ’06: Proceedings of the eleventh ACM symposium on Access control models and technologies, pages 91–100, New York, NY, USA, 2006. ACM Press.

[25] D. Wijesekera, S. Jajodia, F. Parisi-Presicce, and A. Hagström. Removing permissions in the flexible authorization framework. ACM Trans. Database Syst., 28(3):209–229, 2003.