### Error Handling
Upon failure, the function returns \-1 and sets `errno` to indicate the specific error. The following are possible errors:

- **ENODATA**: The named attribute does not exist.
- **ENOTSUP**: Extended attributes are not supported by the filesystem or are disabled.

Additionally, the errors documented in `stat(2)` can also occur.

### Versions
These system calls have been available on Linux since kernel 2.4, with glibc support provided since version 2.3.

### Conformance
These system calls are specific to Linux.

### See Also
- `getfattr(1)`
- `setfattr(1)`
- `getxattr(2)`
- `listxattr(2)`
- `open(2)`
- `setxattr(2)`
- `stat(2)`
- `symlink(7)`
- `xattr(7)`

### Colophon
This page is part of release 5.13 of the Linux `man-pages` project. For a description of the project, information about reporting bugs, and the latest version of this page, visit:
\%https://www.kernel.org/doc/man\-pages/

### Standards
The "Conforming to" section in many manual pages identifies various standards to which the documented interface conforms. The following list briefly describes these standards:

- **V7**: Version 7 (also known as Seventh Edition) Unix, released by AT&T/Bell Labs in 1979. After this point, Unix systems diverged into two main dialects: BSD and System V.
- **4.2BSD**: Released by the University of California at Berkeley in 1983, this was the first Berkeley release that contained a TCP/IP stack and the sockets API.
- **4.3BSD**: Successor to 4.2BSD, released in 1986.
- **4.4BSD**: Successor to 4.3BSD, released in 1993. This was the last major Berkeley release.
- **System V**: Defined by AT&T's milestone 1983 release of its commercial System V (Five) release.
- **System V Release 2 (SVR2)**: Released in 1985, formally described in the "System V Interface Definition Version 1" (SVID 1) published in 1985.
- **System V Release 3 (SVR3)**: Released in 1986, formally described in the "System V Interface Definition Version 2" (SVID 2).
- **System V Release 4 (SVR4)**: Released in 1989, described in the "Programmer's Reference Manual: Operating System API (Intel Processors)" (Prentice-Hall 1992, ISBN 0-13-951294-2). Formally described in the "System V Interface Definition Version 3" (SVID 3), and is considered the definitive System V release.
- **SVID 4**: System V Interface Definition Version 4, issued in 1995. Available online at:
  \ur http://www.sco.com\:/developers\:/devspecs/ .ue
- **C89**: The first C language standard, ratified by ANSI in 1989 (X3.159-1989) and ISO in 1990 (ISO/IEC 9899:1990).
- **C99**: Revision of the C language standard, ratified by ISO in 1999 (ISO/IEC 9899:1999). Available online at:
  \ur http://www.open\-std.org\:/jtc1\:/sc22\:/wg14\:/www\:/standards .ue
- **C11**: Revision of the C language standard, ratified by ISO in 2011 (ISO/IEC 9899:2011).
- **LFS**: Large File Summit specification, completed in 1996, defining mechanisms for 32-bit systems to support large files (i.e., 64-bit file offsets). See:
  \ur https://www.opengroup.org\:/platform\:/lfs.html .ue
- **POSIX.1-1988**: The first POSIX standard, ratified by IEEE as IEEE Std 1003.1-1988, and subsequently adopted (with minor revisions) as an ISO standard in 1990.
- **POSIX.1-1990**: "Portable Operating System Interface for Computing Environments". IEEE 1003.1-1990 Part 1, ratified by ISO in 1990 (ISO/IEC 9945-1:1990).
- **POSIX.2**: IEEE Std 1003.2-1992, describing commands and utilities, ratified by ISO in 1993 (ISO/IEC 9945-2:1993).
- **POSIX.1b (formerly known as POSIX.4)**: IEEE Std 1003.1b-1993, describing real-time facilities for portable operating systems, ratified by ISO in 1996 (ISO/IEC 9945-1:1996).
- **POSIX.1c (formerly known as POSIX.4a)**: IEEE Std 1003.1c-1995, describing the POSIX threads interfaces.
- **POSIX.1d**: IEEE Std 1003.1c-1999, describing additional real-time extensions.
- **POSIX.1g**: IEEE Std 1003.1g-2000, describing networking APIs (including sockets).
- **POSIX.1j**: IEEE Std 1003.1j-2000, describing advanced real-time extensions.
- **POSIX.1-1996**: A 1996 revision of POSIX.1, incorporating POSIX.1b and POSIX.1c.
- **XPG3**: Released in 1989, the first release of the X/Open Portability Guide based on a POSIX standard (POSIX.1-1988).
- **XPG4**: A revision of the X/Open Portability Guide, released in 1992, incorporating POSIX.2.
- **XPG4v2**: A 1994 revision of XPG4, also referred to as "Spec 1170", where 1170 refers to the number of interfaces defined by this standard.
- **SUS (SUSv1)**: Single UNIX Specification, a repackaging of XPG4v2 and other X/Open standards (X/Open Curses Issue 4 Version 2, X/Open Networking Service (XNS) Issue 4). Systems conforming to this standard can be branded "UNIX 95".
- **SUSv2**: Single UNIX Specification Version 2, sometimes incorrectly referred to as XPG5. This standard appeared in 1997. Systems conforming to this standard can be branded "UNIX 98". See:
  \ur http://www.unix.org\:/version2/ .ue
- **POSIX.1-2001, SUSv3**: A 2001 revision and consolidation of the POSIX.1, POSIX.2, and SUS standards into a single document, conducted under the auspices of the Austin Group. The standard is available online at:
  \ur http://www.unix.org\:/version3/ .ue
  - **POSIX Conformance**: A baseline set of interfaces required of a conforming system.
  - **XSI Conformance**: Additionally mandates a set of interfaces (the "XSI extension") which are only optional for POSIX conformance. XSI-conformant systems can be branded "UNIX 03".
  - **Parts of POSIX.1-2001**:
    - **XBD**: Definitions, terms, and concepts, header file specifications.
    - **XSH**: Specifications of functions (i.e., system calls and library functions in actual implementations).
    - **XCU**: Specifications of commands and utilities (i.e., the area formerly described by POSIX.2).
    - **XRAT**: Informative text on the other parts of the standard.
  - **Single UNIX Specification Version 3 (SUSv3)**: Comprises the base specifications containing XBD, XSH, XCU, and XRAT, plus X/Open Curses Issue 4 Version 2 as an extra volume that is not in POSIX.1-2001.
  - **Technical Corrigenda**:
    - **TC1**: In 2003.
    - **TC2**: In 2004.
- **POSIX.1-2008, SUSv4**: Work on the next revision of POSIX.1/SUS was completed and ratified in 2008. The standard is available online at:
  \ur http://www.unix.org\:/version4/ .ue
  - **Changes in POSIX.1-2008**:
    - New interfaces added.
    - Various details of existing specifications modified.
    - Many interfaces that were optional in POSIX.1-2001 become mandatory in the 2008 revision.
    - Some interfaces present in POSIX.1-2001 are marked as obsolete or removed from the standard.
  - **Single UNIX Specification Version 4 (SUSv4)**: Comprises the base specifications containing XBD, XSH, XCU, and XRAT, plus X/Open Curses Issue 7 as an extra volume that is not in POSIX.1-2008.
  - **Conformance Levels**:
    - **POSIX Conformance**: Baseline set of interfaces.
    - **XSI Conformance**: Additional set of interfaces beyond the base specification.
  - **Technical Corrigenda**:
    - **TC1**: In 2013.
    - **TC2**: In 2016.
  - **Further Information**: Available on the Austin Group web site:
    \ur http://www.opengroup.org\:/austin/ .ue
- **SUSv4 2016 Edition**: Equivalent to POSIX.1-2008, with the addition of Technical Corrigenda 1 and 2 and the XCurses specification.
- **POSIX.1-2017**: Technically identical to POSIX.1-2008 with Technical Corrigenda 1 and 2 applied.
- **SUSv4 2018 Edition**: Equivalent to POSIX.1-2017, with the addition of the XCurses specification.

### See Also
- `getconf(1)`
- `confstr(3)`
- `pathconf(3)`
- `sysconf(3)`
- `attributes(7)`
- `feature_test_macros(7)`
- `libc(7)`
- `posixoptions(7)`
- `system_data_types(7)`

### Colophon
This page is part of release 5.13 of the Linux `man-pages` project. For a description of the project, information about reporting bugs, and the latest version of this page, visit:
\%https://www.kernel.org/doc/man\-pages/

### Name
**toascii** - Convert character to ASCII

### Synopsis
.nf
```c
#include <ctype.h>

int toascii(int c);
```
.fi

### Feature Test Macro Requirements for glibc
- **toascii()**:
  - `_XOPEN_SOURCE` || /* glibc since 2.19: */ `_DEFAULT_SOURCE` || /* glibc < 2.19: */ `_SVID_SOURCE` || `_BSD_SOURCE`

### Description
The `toascii()` function converts the character `c` to an ASCII value by clearing the high-order bits.

### See Also
- `isascii(3)`

### Colophon
This page is part of release 5.13 of the Linux `man-pages` project. For a description of the project, information about reporting bugs, and the latest version of this page, visit:
\%https://www.kernel.org/doc/man\-pages/

### Name
**getenv, secure_getenv** - Get an environment variable

### Synopsis
.nf
```c
#include <stdlib.h>

char *getenv(const char *name);
char *secure_getenv(const char *name);
```
.fi

### Feature Test Macro Requirements for glibc
- **secure_getenv()**:
  - `_GNU_SOURCE`

### Description
The `getenv()` function searches the environment list to find the environment variable `name` and returns a pointer to the corresponding value string.

The GNU-specific `secure_getenv()` function is similar to `getenv()`, but it returns `NULL` if the process's effective user ID (EUID) is not equal to its real user ID (RUID) or if the process's effective group ID (EGID) is not equal to its real group ID (RGID).

### See Also
- `clearenv(3)`
- `putenv(3)`
- `setenv(3)`
- `unsetenv(3)`

### Colophon
This page is part of release 5.13 of the Linux `man-pages` project. For a description of the project, information about reporting bugs, and the latest version of this page, visit:
\%https://www.kernel.org/doc/man\-pages/