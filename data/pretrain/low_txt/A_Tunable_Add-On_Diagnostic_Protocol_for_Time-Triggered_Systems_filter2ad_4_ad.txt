### Transient Rate and Experimental Setup

- **Transient Rate**: 10
- **Experimental Tuning**:
  - **Penalty Threshold (P)**: 40
  - **Criticality Level (si)**: 6
  - **Recovery Time (R)**: 1
  - **TDMA Rounds**: 197, 106 (2.5ms)
  - **Tolerated Outage**: 17, 106 (2.5ms)

### Reward Threshold and Figure

- **Reward Threshold (R)**: 7
- **Figure 3**: Setting R with rounds of 2.5ms

### Domain and Criticality Classes

#### Automotive
- **Safety Critical (SC)**
  - **Example**: X-by-wire
  - **Tolerated Outage**: 20-50ms
- **Safety Relevant (SR)**
  - **Example**: Stability control
  - **Tolerated Outage**: 100-200ms
- **Non Safety Relevant (NSR)**
  - **Example**: Door control
  - **Tolerated Outage**: 500-1000ms

#### Aerospace
- **Safety Critical (SC)**
  - **Example**: High Lift, Landing Gear
  - **Tolerated Outage**: 50ms

### Table 2: Results of the Experimental Tuning of the p/r Algorithm

| Tolerated Outage | Crit. lvl. (si) | P | R | TDMA |
|------------------|----------------|---|---|-------|
| 40               | 6              | 1 | 1 | 197   |
| 106 (2.5ms)      | 17             | 1 | 1 | 106   |

### Maximum Tolerated Transient Outage

The maximum tolerated transient outage time is the sum of the diagnostic latency and the recovery time. This outage is critical for restoring service availability or reaching a safe state. The tolerated transient outages for different classes of automotive and aerospace applications are shown in Table 2.

### Automotive and Aerospace Applications

- **Automotive**:
  - **Safety Critical (SC)**: Physical control of the vehicle with strict reactivity constraints (e.g., X-by-wire). Recovery actions must preserve the availability of the (possibly degraded) service.
  - **Safety Relevant (SR)**: Support the driver (e.g., Electronic Stability Control, Driver Assistant Systems). These systems are not necessary for the control of the car but the driver must be informed if they are unavailable.
  - **Non Safety Relevant (NSR)**: Comfort and entertainment subsystems.

- **Aerospace**:
  - **Safety Critical (SC)**: Only safety-critical functionalities are connected to the backbone. The High Lift System adds lift during flight and is related to the control of flaps. The Landing Gear System controls the retractable wheels used for landing.

### Diagnostic and Membership Services

Both the diagnostic and membership services are fast enough to meet the requirements of the highest criticality class. To maximize availability in the presence of transient faults, we delay the isolation of faulty nodes. The diagnostic latency can be tuned by setting the penalty threshold and criticality levels according to the application requirements. We injected continuous faulty bursts and observed the value of the penalty counter reached when the maximum diagnostic latency for each criticality class was reached. Each experiment was repeated 100 times.

### Table 3: Abnormal Transient Scenarios

| Scenario | Burst | TTReapp. | # Inj. |
|----------|-------|----------|--------|
| Auto (blinking light) | 10ms | 500ms | 50 |
| Aero (lightning bolt) | 40ms | 160ms | 1 |
| Aero (lightning bolt) | 40ms | 290ms | 9 |
| Aero (lightning bolt) | 40ms | 500ms | 1 |

### Diagnosis under Adverse External Conditions

We evaluated the capability of the p/r algorithm to guarantee node availability under adverse external conditions characterized by an abnormal rate of transient faults. For the automotive setting, we considered a blinking light causing periodic electrical instabilities on the bus due to an open relay. For the aerospace setting, we considered a lightning bolt producing a sequence of instabilities with increasing time to reappearance. Systems are designed and tested to tolerate such transient behaviors without taking specific recovery actions, so isolations should be avoided. The results for the automotive and aerospace settings are shown in Table 4.

### Table 4: Time to Incorrect Isolation

| Setting | Criticality Class | Time to Isolation |
|---------|------------------|-------------------|
| Automotive | SC / SR / NSR | 0.518 / 4.595 / 24.475sec |
| Aerospace | SC | 0.205sec |

### Portability Issues for Varied TT Platforms

Our design aimed to define a tunable and portable add-on application-level module rather than a static and built-in system-level feature. The protocol uses detection capabilities provided by any TT platform. Local detection of faults is implicitly performed by monitoring the exchange of diagnostic messages among diagnostic jobs. The bandwidth requirement of the protocol is limited, and in our prototype, diagnostic messages were as small as N bits.

### Scheduling and Detection Latency

We avoided imposing strong constraints on node scheduling. The read and send alignments ensure that all diagnostic jobs use consistent data for any schedule, provided that the diagnostic jobs are executed at every round. If a static scheduling policy is used, this information is constant and known at design time. In case of dynamic scheduling, the OS provides this information to the application at runtime.

The relaxed constraints on the scheduling of the diagnostic jobs lead to a detection latency of four TDMA rounds in the worst case. However, by constraining the internal node scheduling, we can reduce the detection latency down to one round for the diagnostic protocol and two rounds for the membership protocol. All properties of the protocol are preserved in this variant, although portability becomes more complex.

### Conclusions

We presented a generic diagnostic protocol that can be added as a middleware layer on top of any TT platform. It tolerates multiple benign and malicious faults and aims to maximize node availability using a p/r algorithm even under abnormal transient disturbances. We extended it to be usable as a membership protocol without using additional resources. Both variants of the protocol have been experimentally validated. We tuned the p/r algorithm under realistic automotive and aerospace settings and addressed open issues of characterization of intermittent faults, determination of the severity of faults, and diagnosis under adverse external conditions.

### References

1. FlexRay Communication System, Protocol Specification v. 2.1. http://www.flexray.com/specification_request_v21.php
2. H. Kopetz and G. Grunsteidl. TTP - A Protocol for Fault Tolerant Real Time Systems. IEEE Computer, 27(1), pp. 14–23, 1994.
3. K. Hoyme and K. Driscoll. SAFEbus. IEEE Aerospace and Electronic Systems Magazine, 8(3), pp. 34-39, 1993.
4. C. Constantinescu. Impact of Deep Submicron Technology on Dependability of VLSI Circuits. DSN, pp. 205–209, 2000.
5. A. Bondavalli et al. Discriminating Fault Rate and Persistency to Improve Fault Treatment. FTCS, pp. 354–362, 1997.
6. A. Bondavalli et al. Threshold-Based Mechanisms to Discriminate Transient from Intermittent Faults. IEEE Trans. on Computers, 49(3), pp. 230–245, 2000.
7. M. Serafini et al. On-line Diagnosis and Recovery: On the Choice and Impact of Tuning Parameters. TR-TUD-DEEDS-05-05-2006, 2006.
8. F.P. Preparata at al. On the Connection Assignment Problem of Diagnosable Systems. IEEE Trans. on Electronic Computers, 16(12), pp. 848-854, 1967.
9. M. Malek. A Comparison Connection Assignment for Diagnosis of Multiprocessor Systems, ISCA, pp. 31–36, 1980.
10. M. Barborak et.al, The Consensus Problem in Fault Tolerant Computing, ACM Surveys, vol. 25, pp. 171–220, Jun. 1993.
11. C. Walter et al. Formally Verified On-line Diagnosis. IEEE TSE, 23(11), pp. 684–721, 1997.
12. M.A. Hiltunen. Membership and System Diagnosis. SRDS, pp. 208-217, 1995.
13. F. Cristian. Reaching Agreement on Processor-group Membership in Synchronous Distributed Systems. Distributed Computing, 4(4), pp. 175–187, 1991.
14. G. Bauer and M. Paulitsch. An Investigation of Membership and Clique Avoidance in TTP/C. SRDS, pp. 118–124, 2000.
15. P.D. Ezhilchelvan and R. Lemos. A Robust Group Membership Algorithm for Distributed Real Time Systems. RTSS, pp. 173-179, 1990.
16. C. Walter et al. Continual On-line Diagnosis of Hybrid Faults. DCCA, pp. 150-166, 1994.
17. A. Ademaj et al. Evaluation of Fault Handling of the Time Triggered Architecture with Bus and Star Topology. DSN, pp. 123-132, 2003.
18. P. Lincoln and J. Rushby. A Formally Verified Algorithm for Interactive Consistency under Hybrid Fault Models. FTCS, pp. 402-411, 1993.