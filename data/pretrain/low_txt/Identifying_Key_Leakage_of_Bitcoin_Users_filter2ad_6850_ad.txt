# Identifying Key Leakage of Bitcoin Users

## 4. Case Study: Sudden Drop in Stealable Bitcoins

In Figure 4, we compare a spike where Bitcoins might have been stolen due to a sudden drop in stealable Bitcoins (left) and a case where we see a smooth decrease, indicating that no coins might have been stolen (right).

### Sudden Drop in Stealable Bitcoins
We observe a sudden drop in the number of stealable Bitcoins. For example, at block 297,304, there are 7.49 BTC that are stealable, but at block 297,305, only 0.2 BTC remain stealable. We identified a single transaction that transferred all the stealable Bitcoins, suggesting a theft. The fact that the number of vulnerable addresses did not decrease to zero simultaneously can be explained by various reasons. It is possible that the attacker was unaware of the remaining vulnerable addresses or used a balance threshold, determining that the remaining addresses were not worth stealing from. As shown, the 0.2 BTC are shared among 86 vulnerable addresses.

### Smooth Decrease in Stealable Bitcoins
In the second spike in Figure 4, we observe a smooth and monotone decrease over time in the number of stealable Bitcoins, followed by a sudden decrease in the number of vulnerable addresses at the same time the stealable BTC drop. This phenomenon could be explained by the fact that all the addresses belong to the same individual, and at the end, all the so-called "change addresses" are emptied by the wallet. Change addresses are used to accumulate leftover transaction outputs. For example, if an address A wants to send 1 BTC to an address B using a single output worth 5 BTC, the resulting transaction will create two outputs: one worth 1 BTC for address B and another worth 4 BTC for a change address belonging to the owner of A. The final transaction of the wallet will then use all accumulated outputs of the change addresses, which could explain the sudden drop.

## 5. Discussion

In this section, we consider the ethical aspects of our work and describe how the problem of key leakage in cryptocurrencies can be addressed.

### 5.1 Ethical Considerations
Given that we systematically describe how attackers can steal Bitcoins by abusing leaked keys, we must address the ethical aspects of such work. On one hand, raising awareness of these attack vectors is fundamental and important to improve the security of the cryptocurrency ecosystem. On the other hand, providing detailed methods may enable easy reproducibility by attackers. However, we believe that transparency is crucial, as "security by obscurity" has proven insufficient in the past. ECDSA nonce reuse is a known problem, with reports in forum posts and our findings showing it still occurs regularly. The latest case of nonce reuse appeared in a block mined on 2017-07-15, leading us to believe that emphasizing this problem is necessary.

Another ethical aspect is the responsible disclosure process for notifying victims. Bitcoin's decentralized nature and anonymity make it challenging to contact the legitimate owners of vulnerable addresses. We handled this problem responsibly by refraining from disclosing problematic addresses and transactions. While an attacker can reproduce our methodology to find future vulnerable addresses, it should be difficult to find the addresses we discovered, as Pastebin only lists the most recent 250 pastes, and search engines do not support regex-based searches.

### 5.2 Countermeasures
Leaking keys is not strictly a technical problem, as users often publish private information without understanding the consequences. However, some technical solutions can be applied. For instance, Pastebin could include a check in their logic to scan pastes for Bitcoin secret keys encoded in the WIF format and provide immediate feedback to users about the security implications.

To avoid ECDSA nonce reuse, RFC 6979 proposes choosing the nonce k deterministically based on the message m and the key sk. This scheme provides unique nonces and hardens against nonce reuse. However, since this solution is backward-compatible, peers do not have to follow it. Another approach is to incorporate a duplicate nonce check into the Bitcoin protocol, such as checking for duplicate r values during transaction verification. A Bloom filter could help scale this process. Additionally, network rules could be adapted to discourage the distribution of transactions containing duplicate nonces. If such a transaction reaches a peer following the new rules, the duplicate r value will be detected, and the transaction will not be relayed further. The more peers follow these rules, the less likely it becomes that transactions with duplicate r values will be distributed.

## 6. Related Work

### OSINT and Bitcoin Key Leakage
OSINT has been used to expose privacy-related information. Matic et al. [16] monitored the Pastebin feed to develop a framework for detecting sensitive information, discovering almost 200,000 compromised accounts. Sabottke et al. [20] designed a Twitter-based exploit detector, and Zhu et al. [24] used academic security literature for malware detection. These works show the potential of OSINT but are only remotely related to our use case.

### ECDSA Nonce Reuse
Vasek et al. [22] outlined how to attack passphrase-based wallets, developing a tool called Brainflayer to generate weak passphrases. Castellucci et al. [10] and Valsorda [21] considered ECDSA nonce reuse in Bitcoin, but only covered the basic case. Our work generalizes this concept to systems of linear equations and outlines a graph-based approach for leaking secrets.

### General Problem of Nonce Reuse
Nonce reuse in ECDSA and DSA has been studied in other contexts. In 2010, Sony reused the same nonce to sign software for the PlayStation 3 [8]. Heninger et al. [14] studied the impact of weak keys and nonce reuse in TLS and SSH servers, finding that 0.05% of signatures contained the same r value. Our work differs in that we systematically outline how an attacker can leak keys beyond the simple case of repeated key and nonce usage.

## 7. Conclusion

We have studied the problem of implicit and explicit key leakage in cryptocurrencies, showing how an attacker can leverage OSINT or duplicate nonces to leak secret keys. Our case studies demonstrate the practical relevance of these issues. An attacker monitoring Pastebin or scanning transactions for nonce reuse could have stolen up to 22.40 BTC and 412.80 BTC, respectively. Our work emphasizes the importance of making users aware of handling cryptocurrency secrets and highlights the benefits of incorporating countermeasures at the protocol level. As cryptocurrencies become more popular, it will become more lucrative for miscreants to perform key leakage attacks, underscoring the importance of our research.

## Acknowledgements

This work was supported by the European Union’s Horizon 2020 research and innovation programme, RAMSES, under grant agreement No. 700326.

## References

1. https://coinmarketcap.com/currencies/bitcoin/. Accessed 27 Mar 2018
2. https://coinmarketcap.com/currencies/ethereum/. Accessed 27 Mar 2018
3. https://pastebin.com. Accessed 27 Mar 2018
4. https://bitcoin.org/en/alert/2013-08-11-android. Accessed 27 Mar 2018
5. https://bitcointalk.org/index.php?topic=581411.0. Accessed 27 Mar 2018
6. https://bitcointalk.org/index.php?topic=1118704.0. Accessed 27 Mar 2018
7. https://bitcointalk.org/index.php?topic=1431060.0. Accessed 27 Mar 2018
8. https://events.ccc.de/congress/2010/Fahrplan/attachments/1780 27c3 console
hacking 2010.pdf (2010). Accessed 27 Mar 2018
9. Back, A.: Hashcash - a denial of service counter-measure (2002)
10. Castellucci, R., Valsorda, F.: Stealing Bitcoin with Math. https://news.webamooz.
com/wp-content/uploads/bot/oﬀsecmag/151.pdf. Accessed 27 Mar 2018
11. Decker, C., Wattenhofer, R.: Bitcoin transaction malleability and MtGox. In:
Proceedings of the European Symposium on Research in Computer Security
(ESORICS) (2014)
12. Diﬃe, W., Hellman, M.: New directions in cryptography. IEEE Trans. Inf. Theory
22, 644–654 (1976)
13. Eskandari, S., Barrera, D., Stobert, E., Clark, J.: A ﬁrst look at the usability
of bitcoin key management. In: Proceedings of the Workshop on Usable Security
(USEC) (2015)
14. Heninger, N., Durumeric, Z., Wustrow, E., Halderman, J.A.: Mining your Ps and
Qs: detection of widespread weak keys in network devices. In: Proceedings of the
USENIX Security Symposium (USENIX Security) (2012)
15. Koblitz, N.: Elliptic curve cryptosystems. Math. Comput. 48, 203–209 (1987)
16. Matic, S., Fattori, A., Bruschi, D., Cavallaro, L.: Peering into the muddy waters
of pastebin. ERCIM News (2012)
17. Nakamoto, S.: Bitcoin: a peer-to-peer electronic cash system (2008)
18. Naware, A.M.: Bitcoins, its advantages and security threats. Int. J. Adv. Res.
Comput. Eng. Technol. (IJARCET) 5, 1732–1735 (2016)
19. Pornin, T.: Deterministic usage of the digital signature algorithm (DSA) and elliptic
curve digital signature algorithm (ECDSA) (2013). https://rfc-editor.org/rfc/
rfc6979.txt
20. Sabottke, C., Suciu, O., Dumitras, T.: Vulnerability disclosure in the age of social
media: exploiting Twitter for predicting real-world exploits. In: Proceedings of the
USENIX Security Symposium (USENIX Security) (2015)
21. Valsorda, F.: Exploiting ECDSA failures in the bitcoin blockchain. In: Proceedings
of Hack In The Box (HITB) (2014)
22. Vasek, M., Bonneau, J., Castellucci, R., Keith, C., Moore, T.: The bitcoin brain
drain: examining the use and abuse of bitcoin brain wallets. In: Grossklags, J.,
Preneel, B. (eds.) FC 2016. LNCS, vol. 9603, pp. 609–618. Springer, Heidelberg
(2017). https://doi.org/10.1007/978-3-662-54970-4 36
23. Wood, G.: Ethereum: a next-generation smart contract and decentralized
application platform (2018). https://ethereum.github.io/yellowpaper/paper.pdf.
Accessed 27 Mar 2018
24. Zhu, Z., Dumitras, T.: FeatureSmith: automatically engineering features for mal-
ware detection by mining the security literature. In: Proceedings of the Conference
on Computer and Communications Security (CCS) (2016)

**Open Access**
This chapter is licensed under the terms of the Creative Commons Attribution 4.0 International License (http://creativecommons.org/licenses/by/4.0/), which permits use, sharing, adaptation, distribution, and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third-party material in this chapter are included in the chapter’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the chapter’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder.