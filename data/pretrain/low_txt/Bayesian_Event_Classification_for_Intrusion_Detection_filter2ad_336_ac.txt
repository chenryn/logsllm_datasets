### Discretization and Anomaly Detection in Bayesian Networks

Discretization, the process of mapping continuous values to a finite number of discrete states, is essential for managing the Conditional Probability Tables (CPTs) in Bayesian networks. This process ensures that the CPTs remain manageable and allows for efficient probability calculations at the hypothesis nodes. As illustrated in Table 1, model outputs close to zero indicate normal features, while those close to one suggest anomalous behavior.

#### Table 1: Anomaly Score Intervals
| Anomaly Score Range | Level       |
|---------------------|-------------|
| [0.00, 0.50)        | Normal      |
| [0.50, 0.75)        | Uncommon    |
| [0.75, 0.90)        | Irregular   |
| [0.90, 0.95)        | Suspicious  |
| [0.95, 1.00]        | Very Suspicious |

### Dependencies in the Bayesian Network

Figure 3 illustrates the dependencies introduced in our intrusion detection system's Bayesian network. One key dependency connects the output of the string length model to the quality of the character distribution. This quality is also influenced by the confidence in the character distribution model. The mediating node, "Char Distribution Quality," reflects that the quality of the anomaly score from the character distribution model depends not only on the a-priori confidence but also on the length of the analyzed string. Short strings significantly reduce the statistical test's reliability, which is reflected in the conditional probability tables of the "Char Distribution Quality" node.

Another dependency exists between the character distribution and the structure model. An abnormal character distribution often correlates with a structure that does not conform to the learned grammar, indicating a positive correlation between the models' outputs.

### Analysis Phase

During the analysis phase, the outputs and confidences of the four models are entered as evidence into the Bayesian network. The probabilities of the two states (normal and anomalous) associated with the root node (Classification) are then calculated. If the probability of an event being anomalous is sufficiently high, an alarm is raised. The threshold for raising an alarm can be interpreted as a probability value, directly expressing the likelihood of an attack given the specific structure of the Bayesian network. In contrast, a threshold-based system sums model outputs, which may not be proportional to the actual probability of an attack.

### Implementation with Smile

We implemented the models using a C++ library and integrated the Bayesian statistics library, Smile, developed by the Decision Systems Laboratory at the University of Pittsburgh. Smile was chosen for its ability to implement actual Bayesian networks and provide a usable API. However, since Smile's source code is not freely available and its licensing precludes use in open-source software, we created adapter classes to abstract the interaction with Smile, allowing for potential replacement if necessary.

Belief propagation, the calculation of probabilities at hypothesis nodes when evidence is entered at information nodes, is generally NP-hard. Despite this, Smile implements efficient algorithms that solve most problems in a reasonable time. The computational cost during runtime is linear in the number of nodes, enabling real-time analysis of system calls without significant overhead.

### Evaluation

For evaluation, we used the MIT Lincoln Labs 1999 data set, which includes network packet dumps and BSM system call records. We trained our models on data from two attack-free weeks and tested them on the subsequent two weeks. The truth file provided by MIT Lincoln Labs lists all attacks during the test period. Many of these were reconnaissance attempts, visible only in network dumps and not at the system call level, making them undetectable by our approach.

Figure 4 compares the Receiver Operating Characteristic (ROC) curves for our Bayesian network and a threshold-based system. The ROC curve for the Bayesian classifier varies the 'anomalous' probability value, while the threshold-based classifier varies the sum of outputs. The results show that the Bayesian approach consistently performs better, reporting half as many false positives when all attacks are detected.

### Conclusions

In this paper, we presented a novel method for Bayesian classification of input events for intrusion detection. By using Bayesian networks, we incorporated model confidence and dependencies, achieving a significant reduction in false alerts. When all attacks in our test data set were detected, the Bayesian event classification reported only half as many false alerts as the traditional threshold-based approach.

### Acknowledgments

This research was supported by the Army Research Office under agreement DAAD19-01-1-0484. The views and conclusions are those of the authors and do not necessarily represent the official policies or endorsements of the Army Research Office or the U.S. Government.

### References

[1] S. Axelsson. The Base-Rate Fallacy and its Implications for the Difficulty of Intrusion Detection. In 6th ACM Conference on Computer and Communications Security, 1999.
[2] P. Billingsley. Probability and Measure. Wiley-Interscience, 3rd edition, April 1995.
[3] Basic Security Module Guide – SunSHIELD BSM. http://docs.sun.com/db/doc/802-5757.
[4] D. Denning. An Intrusion Detection Model. IEEE Transactions on Software Engineering, 13(2):222–232, Feb. 1987.
[5] S. Forrest. A Sense of Self for UNIX Processes. In Proceedings of the IEEE Symposium on Security and Privacy, pages 120–128, Oakland, CA, May 1996.
[6] R. Goldman. A Stochastic Model for Intrusions. In Symposium on Recent Advances in Intrusion Detection (RAID), 2002.
[7] K. Ilgun. USTAT: A Real-time Intrusion Detection System for UNIX. In Proceedings of the IEEE Symposium on Research on Security and Privacy, Oakland, CA, May 1993.
[8] H. S. Javitz and A. Valdes. The SRI IDES Statistical Anomaly Detector. In Proceedings of the IEEE Symposium on Security and Privacy, May 1991.
[9] F. Jensen. Bayesian Networks and Decision Graphs. Springer, New York, USA, 2001.
[10] C. Kruegel, T. Toth, and E. Kirda. Service Specific Anomaly Detection for Network Intrusion Detection. In Symposium on Applied Computing (SAC). ACM Scientific Press, March 2002.
[11] M. Lincoln Labs. DARPA Intrusion Detection Evaluation. http://www.ll.mit.edu/IST/ideval, 1999.
[12] J. McHugh. Testing Intrusion Detection Systems: A Critique of the 1998 and 1999 DARPA Intrusion Detection System Evaluations as Performed by Lincoln Laboratory. ACM Transaction on Information and System Security, 3(4), November 2000.
[13] J. Pearl. Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. Morgan Kaufmann, 1997.
[14] P. Porras and P. Neumann. EMERALD: Event Monitoring Enabling Responses to Anomalous Live Disturbances. In Proceedings of the 1997 National Information Systems Security Conference, October 1997.
[15] P. A. Porras and A. Valdes. Live traffic analysis of TCP/IP gateways. In Proceedings of the 1998 ISOC Symposium on Network and Distributed System Security (NDSS’98), San Diego, CA, 1998.
[16] R. Puttini, Z. Marrakchi, and L. Me. Bayesian Classification Model for Real-Time Intrusion Detection. In 22nd International Workshop on Bayesian Inference and Maximum Entropy Methods in Science and Engineering, 2002.
[17] RealSecure. http://www.iss.net/products_services/enterprise_protection.
[18] M. Roesch. Snort - Lightweight Intrusion Detection for Networks. In USENIX Lisa 99, 1999.
[19] A. A. Sebyala, T. Olukemi, and L. Sacks. Active Platform Security through Intrusion Detection Using Naive Bayesian Network for Anomaly Detection. In London Communications Symposium, 2002.
[20] Smile: Structural Modeling, Inference, and Learning Engine. http://www.sis.pitt.edu/~genie/.
[21] SNARE - System iNtrusion Analysis and Reporting Environment. http://www.intersectalliance.com/projects/Snare.
[22] A. Stolcke and S. Omohundro. Inducing probabilistic grammars by Bayesian model merging. In International Conference on Grammatical Inference, 1994.
[23] Swatch: Simple Watchdog. http://swatch.sourceforge.net.
[24] A. Valdes and K. Skinner. Adaptive, Model-based Monitoring for Cyber Attack Detection. In Proceedings of RAID 2000, Tolouse, France, October 2000.
[25] G. Vigna and R. A. Kemmerer. NetSTAT: A Network-based Intrusion Detection System. Journal of Computer Security, 7(1):37–71, 1999.
[26] C. Warrender, S. Forrest, and B. Pearlmutter. Detecting intrusions using system calls: Alternative data models. In IEEE Symposium on Security and Privacy, pages 133–145, 1999.