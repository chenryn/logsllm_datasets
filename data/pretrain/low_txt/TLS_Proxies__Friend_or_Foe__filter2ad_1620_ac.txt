### Table 3: Classification of Claimed Issuer, Ordered by Percentage Proxied

#### Malware and Deceptive Practices

1. **Sendori**:
   - Sendori poses as a legitimate enterprise but produces software that compromises the DNS lookup of infected machines. This allows them to redirect users to improper hosts.
   - A TLS proxy component is used to bypass host authenticity warnings in the browser. The substitute certificates generated by the TLS proxy are signed by a root authority added to the root store of the local machine at the time of infection.
   - Substitute certificates issued by Sendori originated from 30 distinct countries.

2. **WebMakerPlus**:
   - WebMakerPlus malware primarily inserts advertisements into web pages. We hypothesize that it uses a TLS proxy to simulate that their advertisements are served from a secure connection and to modify secure pages in transit to include such content.
   - Substitute certificates containing markings for WebMakerPlus originated from 16 distinct countries.

3. **IopFailZeroAccessCreate**:
   - Manual internet queries revealed that this issuer common name field value is associated with malware. Certificates containing this value originated from 14 distinct countries.
   - Disturbingly, each certificate contained the same 512-bit public key. This malware was also reported in [9].

It is somewhat surprising that these malware programs self-identify in the substitute certificates they generate, as an attacker can arbitrarily select values for the fields in a substitute certificate.

#### Spam-Related Activities

In addition to malware, we found that the names of two companies highly associated with spam were present in numerous issuer organization fields:
- **Sweesh LTD**: Found in 39 substitute certificates.
- **AtomPark Software Inc**: Found in 20 substitute certificates.
  - AtomPark offers tools for spammers, including "email extractors" and "bulk mailers."
  - Sweesh provides services to spammers to overcome "hurdles" faced by advertisers and publishers. Internet searches suggest that Sweesh may be responsible for the development of WebMakerPlus.

#### Root Certificate Analysis

Not all of the root certificates found in the collected substitute chains were unique. In the 11,764 substitute chains, 8,341 distinct roots were found. For example:
- 310 leaf certificates signed by "Fortinet" all used the same root certificate, obtained from 155 distinct IP addresses.
- This behavior was consistent across many popular issuers (e.g., POSCO, Southern Company Services, Target Corporation).
- These organizations likely use a single root to sign intermediate certificates and then deploy these at various endpoints where they operate TLS proxies.

### 5.2 Negligent Behavior

We installed and characterized personal firewall software from many of the most common companies whose names were provided in the issuer organization, issuer organizational unit, and issuer common name fields of our collected certificates. We characterized the behavior of these solutions when running behind our own TLS proxy (set up using sslsplit and ARP poisoning) which issued certificates signed by an untrusted CA.

- **Kurupira**: A parental filter responsible for 267 proxied connections in our dataset, did not properly reject our forged certificates. When visiting google.com and gmail.com, Kurupira replaced our untrusted certificate with a signed trusted one, allowing attackers to perform a transparent man-in-the-middle attack against Kurupira users without compromising root stores.
- **BitDefender**: Not only blocked the forged certificate but also blocked a forged certificate that resolved to a new root we installed.

#### Cryptographic Strength of Substitute Certificates

- Our original certificate has a public key size of 2048 bits.
- 5,951 (50.59%) substitute certificates have public key sizes of 1024 bits.
- 21 certificates have public key sizes of 512 bits.
- 23 (0.20%) TLS proxies generated substitute certificates that used MD5 for signing, 21 (0.18%) of which were also 512-bit keys.
- Some TLS proxies generated certificates with better cryptographic strength than our certificate: 7 (0.06%) used certificates with a key size of 2432, and 5 (0.04%) used SHA-256 for signing.

#### Misrepresentation of Issuers

- 49 (0.42%) substitute certificates claim to be signed by DigiCert, though none of them actually are. The original certificate from our secure web server is issued by DigiCert High Assurance CA-3, indicating the TLS proxy likely copied this field when creating the substitute.
- It is alarming that a TLS proxy would opt to copy this field, as it signifies masquerading as the legitimate authority. These proxies may be operated by malicious individuals trying to avoid detection by the user.

#### Subject Field Modifications

- 110 substitute certificates have modifications to the subject field.
- For 51 (0.43%) certificates, the subject did not match our website’s domain. In many cases, a wildcarded IP address was used that only designated the subnet of our website.
- In two cases, the substitute certificate is issued to the wrong domain entirely: mail.google.com and urs.microsoft.com. These certificates appear to be legitimate for those domains and properly validate back to GeoTrust and Cybertrust roots, respectively.

### 6. Related Work

The most closely related work in this field is a recent paper by Huang et al., which independently develops a measurement tool similar to ours and conducts a study of TLS proxies that intercept the Facebook website [9]. Generally speaking:
- The advantage of Huang’s methodology is that they may find proxies specifically targeting Facebook.
- The advantage of our methodology is that we may detect proxies that intentionally whitelist popular sites such as Facebook to avoid detection.
- A limitation of our method is that we cannot collect data from users with ad blockers. Thus, results from Huang must be read with the postfix "for facebook.com users," and results from our study must be read with the postfix "for Internet users permitting ads."

#### Comparison with Huang's Results

- **Issuer Fields**: 13 of the 20, and 8 of the top 10 issuers also appear in Huang’s measurements.
- **Bad Actors**: Sendori and IopFailZeroAccessCreate were also found by Huang, along with some of the behavior by Kurupira.
- **Prevalence of Proxies**: The prevalence of proxies in our study is roughly twice what was measured by Huang (0.41% versus 0.20%).
- **Malware and Deceptive Practices**: We find a wider array of malware, deceptive practices, and suspicious circumstances. WebMakerPlus, Sweesh, and AtomPark infections are unique to our study.
- **Parental Filter**: We are the first to identify a parental filter replacing an untrusted certificate with a trusted one.

#### Differences in Characteristics of Substitute Certificates

- **Chain Depths**: Chains with a depth of two or more certificates accounted for 20% of our substitute chains and 9% of Huang’s. Legitimate chains in both studies had a chain depth of two.
- **Public Key Sizes**: We find fewer certificates using 512-bit key lengths (us: 21, Huang: 119) and the presence of keys larger than 2048 (us: 7, Huang: 0).

### 7. Conclusion

Our work highlights the need for stronger protection and monitoring of the root store used by devices and browsers. The only way for TLS proxies to avoid a browser warning is if they generate substitute certificates that are valid; both benevolent and malicious parties need to insert a certificate into the root store. Modifying the root store should require administrative privileges, and monitoring software should be used to remove certificates from the store that are considered malicious or run by untrustworthy organizations.

Better measurement tools are needed to understand the prevalence and nature of SSL proxies. The method used by Huang is still viable but only works to detect proxies affecting a single server. Our measurements indicate that this undercounts proxies when that server is well-known, and yet measuring at well-known servers is the only way to get large amounts of data with this method. Using a Flash advertisement provides a more scalable and robust method for detecting proxies, but this does not work for mobile platforms that do not support Flash. Moreover, most advertising networks no longer allow these types of advertisements. In the future, a community-driven, voluntary measurement platform would significantly help to collect these types of measurements.

### 8. Acknowledgments

This work is supported by a 2014 Google Faculty Research Award.

### 9. References

[1] H. Adkins. An update on attempted man-in-the-middle attacks. http://googleonlinesecurity.blogspot.com/2011/08/update-on-attempted-man-in-middle.html.

[2] A. Barth, C. Jackson, and J. C. Mitchell. Robust defenses for cross-site request forgery. In Proceedings of the 15th ACM Conference on Computer and Communications Security, pages 75–88. ACM, 2008.

[3] T. Chiu. The growing need for SSL inspection. http://www.bluecoat.com/security/security-archive/2012-06-18/growing-need-ssl-inspection/, 2011. Accessed: 27 February, 2014.

[4] J. Clark and P. C. van Oorschot. SoK: SSL and HTTPS: Revisiting past challenges and evaluating certificate trust model enhancements. In IEEE Symposium on Security and Privacy (SP), pages 511–525. IEEE, 2013.

[5] X. d. C. de Carnavalet and M. Mannan. Killed by proxy: Analyzing client-end TLS interception software. In Network and Distributed System Security Symposium (NDSS), 2016.

[6] Z. Durumeric, J. Kasten, M. Bailey, and J. A. Halderman. Analysis of the HTTPS certificate ecosystem. In Internet Measurement Conference, 2013.

[7] P. Eckersley. A Syrian man-in-the-middle attack against Facebook. https://www.eff.org/deeplinks/2011/05/syrian-man-middle-against-facebook, May 2011.

[8] C. Evans and C. Palmer. Certificate pinning extension for HSTS. http://tools.ietf.org/html/draft-evans-palmer-hsts-pinning-00. Accessed: 22 March, 2013.

[9] L. S. Huang, A. Rice, E. Ellingsen, and C. Jackson. Analyzing forged SSL certificates in the wild. In 2014 IEEE Symposium on Security and Privacy, pages 83–97. IEEE, 2014.

[10] G. Huston. Counting DNSSEC. https://labs.ripe.net/Members/gih/counting-dnssec. Accessed: 26 February, 2014.

[11] C. Jackson, A. Barth, A. Bortz, W. Shao, and D. Boneh. Protecting browsers from DNS rebinding attacks. ACM Transactions on the Web (TWEB), 3(1):2, 2009.

[12] B. Laurie, A. Langley, and E. Kasper. Certificate transparency, IETF RFC 6962. http://tools.ietf.org/html/rfc6962, Jun 2013.

[13] W. Lian, E. Rescorla, H. Shacham, and S. Savage. Measuring the practical impact of DNSSEC deployment. In Proceedings of USENIX Security, 2013.

[14] S. Loreto, J. Mattsson, R. Skog, H. Spaak, G. Gus, and M. Hafeez. Explicit trusted proxy in HTTP/2.0, Internet Draft. http://tools.ietf.org/html/draft-loreto-httpbis-trusted-proxy20-01, February 2014.

[15] M. Marlinspike. SSL and the future of authenticity. Black Hat USA, 2011.

[16] M. Marlinspike and T. Perrin. Trust assertions for certificate keys. http://tack.io/, 2013.

[17] MaxMind. Geolite. http://dev.maxmind.com/geoip/legacy/geolite/#IP Geolocation. Accessed: 27 February, 2014.

[18] D. McGrew, D. Wing, Y. Nir, and P. Gladstone. TLS proxy server extension, Internet-Draft, TLS Working Group. http://tools.ietf.org/html/draft-mcgrew-tls-proxy-server-01, July 2012.

[19] Y. Nir. A method for sharing record protocol keys with a middlebox in TLS, Internet-Draft, TLS Working Group. http://tools.ietf.org/html/draft-nir-tls-keyshare-02, March 2012.

[20] S. Ruoti, M. O’Neill, D. Zappala, and K. Seamons. User attitudes toward the inspection of encrypted traffic. In Twelfth Symposium on Usable Privacy and Security (SOUPS), 2016.

[21] M. D. Ryan. Enhanced certificate transparency and end-to-end encrypted mail. In Network and Distributed System Security Symposium (NDSS). Internet Society, 2014.

[22] N. Vallina-Rodriguez, J. Amann, C. Kreibich, N. Weaver, and V. Paxson. A tangled mass: The Android root certificate stores. In Proceedings of the 10th ACM CONEXT, pages 141–148. ACM, 2014.