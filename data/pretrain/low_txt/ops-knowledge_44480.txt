We are currently exploring transport and protocol solutions and planning to conduct a series of performance tests. Before proceeding, I would like to check with the community to see if similar evaluations have already been carried out. Specifically, has anyone conducted server performance tests for simple echo services, as well as serialization and deserialization for various message sizes, comparing EJB3, Thrift, and Protocol Buffers on Linux? Our primary languages of interest are Java, C/C++, Python, and PHP.

**Update:**
I remain very interested in this topic. If anyone has performed additional benchmarks, please share your findings. Additionally, I came across an interesting benchmark that shows compressed JSON performing similarly or even better than Thrift and Protocol Buffers. Therefore, I am also including JSON in this comparison.

**Assistant:**
If raw network performance is your primary goal, IIOP (RMI/IIOP) is often considered the best option. It offers the smallest possible footprint, transmitting only binary data without any markup, which results in extremely fast serialization and deserialization. Furthermore, since IIOP is part of the CORBA standard, it has bindings available for almost all programming languages.

However, I assume that performance is not the only requirement. Are there other factors you are considering, such as ease of use, development time, or community support?