### Theoretical Interest and Lower Bound Circumvention
The theoretical significance of our approach lies in its ability to bypass the 2κ lower bound established by [ZRE15] when evaluating a single AND gate. However, this method does not generalize to arbitrary circuits.

### C. Boolean Circuit Compilers
#### Acknowledgments
Circuit compilers abstract the complexity of designing Boolean circuits by translating high-level languages (such as Java, C, or Verilog) into Boolean circuit representations. For instance, CBMC-GC [HFKV12] employs a model checker to generate a Boolean circuit from a C description. The Portable Circuit Format (PCF) [KSMB13] compiles high-level code into an assembler-like representation. The programming framework ObliVM [LWN+15] introduces a specialized language that is compiled into a memory-trace oblivious program based on Boolean circuits and Oblivious RAM (ORAM). TinyGarble [SHS+15], [DDK+15] presents a radically different approach by leveraging established hardware synthesis tools within a fully automated toolchain to compile a circuit description in a hardware description language such as VHDL or Verilog into a Boolean circuit. In our work, we extend beyond the TinyGarble approach by utilizing and repurposing LUT-based synthesis tools, which are typically used for mapping circuit implementations onto Field-Programmable Gate Arrays (FPGAs), to generate LUT representations for a wide range of functions.

### IX. Conclusion and Future Work
The primary bottleneck in most semi-honest secure two-party computation protocols is the network bandwidth and latency. In this work, we demonstrate how to significantly reduce communication and round complexity, albeit at the cost of increased computation. For secure computation on Boolean circuits, we reduce the communication from 2κ-bit to nearly a single κ-bit ciphertext per AND gate. Additionally, we outline how to substantially improve round and communication complexity by representing the functionality as a network of lookup tables (LUTs). We introduce two protocols, OP-LUT and SP-LUT, for evaluating LUTs, and a compiler that leverages a customized hardware synthesis tool to automatically translate high-level functions into LUT representations. Our SP-LUT protocol achieves a remarkable 3-4x improvement in round complexity and reduces communication even further than the one κ-bit per AND gate boundary achieved by evaluating a Boolean circuit using GMW, even with our improved pre-computation for many basic operations. Furthermore, our LUT protocols can be freely combined with Boolean circuit evaluation using GMW, incurring no additional costs and achieving the benefits of both representations.

We identify several interesting research questions for future work:
A) Can the LUT compiler be further optimized? Although hardware synthesis tools already generate optimized circuits with good performance, there is potential in extracting XOR gates from LUTs, as XORs can be evaluated for free, resulting in LUTs with fewer inputs and outputs.
B) Is it possible to combine the efficient setup phase of our SP-LUT approach with the efficient online phase of our OP-LUT approach to achieve both an efficient setup and online phase?
C) Do our protocols extend to stronger adversaries?

### Funding and Support
This work has been partially funded by the European Union’s 7th Framework Program (FP7/2007-2013) under grant agreement n.609611 (PRACTICE), by the German Federal Ministry of Education and Research (BMBF) within CRISP, and by the DFG as part of project E3 within the CRC 1119 CROSSING. This work is also supported in part by NSF awards 1619261 and 1649423 and AFOSR/MURI FA9550-14-1-0351.

### References
[ALSZ13] G. Asharov, Y. Lindell, T. Schneider, and M. Zohner. More efficient oblivious transfer and extensions for faster secure computation. In CCS'13, pages 535–548. ACM, 2013.
[Alt] Altera. Quartus Prime Design Software. https://www.altera.com/products/design-software/fpga-design/quartus-prime/overview.html.
[BB94] M. L. Bonet and S. R. Buss. Size-depth tradeoffs for Boolean formulae. Information Processing Letters, 49(3):151–155, 1994.
[BCD+09] P. Bogetoft, D. L. Christensen, I. Damgård, M. Geisler, T. P. Jakobsen, M. Krøigaard, J. D. Nielsen, J. B. Nielsen, K. Nielsen, J. Pagter, M. I. Schwartzbach, and T. Toft. Secure multiparty computation goes live. In FC'09, volume 5628 of LNCS, pages 325–343. Springer, 2009.
[ARS+15] M. Albrecht, C. Rechberger, T. Schneider, T. Tiessen, and M. Zohner. Ciphers for MPC and FHE. In EUROCRYPT'15, volume 9056 of LNCS, pages 430–454. Springer, 2015.
[Ber] Berkeley Logic Synthesis and Verification System. http://www.eecs.berkeley.edu/~alanmi/abc/.
[BMR16] M. Ball, T. Malkin, and M. Rosulek. Garbling gadgets for boolean and arithmetic circuits. In CCS'16, pages 565–577. ACM, 2016.
[BJSV15] D. Bogdanov, M. Jõemets, S. Siim, and M. Vaht. How the Estonian tax and customs board evaluated a tax fraud detection system based on secure multi-party computation. In FC'15, volume 8975 of LNCS, pages 227–234. Springer, 2015.
[BHKR13] M. Bellare, V. Hoang, S. Keelveedhi, and P. Rogaway. Efficient garbling from a fixed-key blockcipher. In S&P'13, pages 478–492. IEEE, 2013.
[BP05] J. Boyar and R. Peralta. The exact multiplicative complexity of the Hamming weight function. Electronic Colloquium on Computational Complexity (ECCC'05), TR05(049), 2005.
[BP12] J. Boyar and R. Peralta. A small depth-16 circuit for the AES S-box. In Information Security and Privacy Research (SEC'12), volume 376 of IFIP Advances in Information and Communication Technology, pages 287–298. Springer, 2012.
[CO15] T. Chou and C. Orlandi. The simplest protocol for oblivious transfer. In Progress in Cryptology – LATINCRYPT'15, volume 9230 of LNCS, pages 40–58. Springer, 2015.
[DDK+15] D. Demmler, G. Dessouky, F. Koushanfar, A.-R. Sadeghi, T. Schneider, and S. Zeitouni. Automated synthesis of optimized circuits for secure computation. In CCS'15, pages 1504–1517. ACM, 2015.
[DNNR16] I. Damgård, J. B. Nielsen, M. Nielsen, and S. Ranellucci. Gate-scrambling revisited - or: The TinyTable protocol for 2-party secure computation. Cryptology ePrint Archive, Report 2016/695, 2016.
[DSZ15] D. Demmler, T. Schneider, and M. Zohner. ABY - a framework for efficient mixed-protocol secure two-party computation. In NDSS'15. The Internet Society, 2015.
[DZ16] I. Damgård and R. W. Zakarias. Fast oblivious AES: A dedicated application of the MiniMac protocol. In AFRICACRYPT'16, volume 9646 of LNCS, pages 245–264. Springer, 2016.
[FJJBT16] T. Kasper Frederiksen, T. P. Jakobsen, J. B. Nielsen, and R. Trifiletti. On the complexity of additively homomorphic UC commitments. In TCC'16, volume 9562 of LNCS, pages 542–565. Springer, 2016.
[GLNP15] S. Gueron, Y. Lindell, A. Nof, and B. Pinkas. Fast garbling of circuits under standard assumptions. In CCS'15, pages 567–578. ACM, 2015.
[GLMY16] S. Gueron and N. Mouha. Simpira v2: A family of efficient permutations using the AES round function. Cryptology ePrint Archive, Report 2016/122, 2016.
[GMW87] O. Goldreich, S. Micali, and A. Wigderson. How to play any mental game or a completeness theorem for protocols with honest majority. In STOC'87, pages 218–229. ACM, 1987.
[GM16] A. Groce, A. Ledger, A. J. Malozemoff, and A. Yerukhimovich. CompGC: Efficient offline/online semi-honest two-party computation. Cryptology ePrint Archive, Report 2016/458, 2016.
[HEKM11] Y. Huang, D. Evans, J. Katz, and L. Malka. Faster secure two-party computation using garbled circuits. In USENIX Security'11, pages 539–554. USENIX, 2011.
[HFKV12] A. Holzer, M. Franz, S. Katzenbeisser, and H. Veith. Secure two-party computations in ANSI C. In CCS'12, pages 772–783. ACM, 2012.
[HKS+10] W. Henecka, S. Kögl, A.-R. Sadeghi, T. Schneider, and I. Wehrenberg. TASTY: Tool for Automating Secure Two-partY computations. In CCS'10, pages 451–462. ACM, 2010.
[Hua12] Y. Huang. Practical secure two-party computation. Ph.D. Thesis, 2012. Online: https://yhuangpress.files.wordpress.com/2014/02/dissertation.pdf.
[IKM+13] Y. Ishai, E. Kushilevitz, S. Meldgaard, C. Orlandi, and A. Paskin-Cherniavsky. On the power of correlated randomness in secure computation. In TCC'13, volume 7785 of LNCS, pages 600–620. Springer, 2013.
[IKNP03] Y. Ishai, J. Kilian, K. Nissim, and E. Petrank. Extending oblivious transfers efficiently. In CRYPTO'03, volume 2729 of LNCS, pages 145–161. Springer, 2003.
[IR89] R. Impagliazzo and S. Rudich. Limits on the provable consequences of one-way permutations. In STOC'89, pages 44–61. ACM, 1989.
[KK12] V. Kolesnikov and R. Kumaresan. Improved secure two-party computation via information-theoretic garbled circuits. In SCN'12, volume 7485 of LNCS, pages 205–221. Springer, 2012.
[KK13] V. Kolesnikov and R. Kumaresan. Improved OT extension for transferring short secrets. In CRYPTO'13, volume 8043 of LNCS, pages 54–70. Springer, 2013.
[KKW16] W. S. Kennedy, V. Kolesnikov, and G. T. Wilfong. Overlaying circuit clauses for secure computation. Cryptology ePrint Archive, Report 2016/685, 2016.
[Kol05] V. Kolesnikov. Gate evaluation secret sharing and secure one-round two-party computation. In ASIACRYPT'05, volume 3788 of LNCS, pages 136–155. Springer, 2005.
[KS08] V. Kolesnikov and T. Schneider. Improved garbled circuit: Free XOR gates and applications. In ICALP'08, volume 5126 of LNCS, pages 486–498. Springer, 2008.
[KSMB13] B. Kreuter, A. Shelat, B. Mood, and K. Butler. PCF: A portable circuit format for scalable two-party secure computation. In USENIX Security'13, pages 321–336. USENIX, 2013.
[KSS12] B. Kreuter, A. Shelat, and C. Shen. Billion-gate secure computation with malicious adversaries. In USENIX Security'12, pages 285–300. USENIX, 2012.
[LWN+15] C. Liu, X. Wang, K. Nayak, Y. Huang, and E. Shi. ObliVM: A programming framework for secure computation. In S&P'15, pages 359–376. IEEE, 2015.
[MCB07] A. Mishchenko, S. Chatterjee, and R. K. Brayton. Improvements to technology mapping for LUT-based FPGAs. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems (TCAS'07), 26(2):240–253, 2007.
[MCCB07] A. Mishchenko, S. Cho, S. Chatterjee, and R. Brayton. Combinational and sequential mapping with priority cuts. IEEE/ACM International Conference on Computer-Aided Design (ICCAD'07), pages 354–361. IEEE, 2007.
[MMRR10] O. Martinello, F. S. Marques, R. P. Ribas, and A. I. Reis. KL-cuts: A new approach for logic synthesis targeting multiple output blocks. In Design, Automation Test in Europe Conference Exhibition (DATE'10), pages 777–782. IEEE, 2010.
[NPS99] M. Naor, B. Pinkas, and R. Sumner. Privacy preserving auctions and mechanism design. In Electronic Commerce (EC'99), pages 129–139. ACM, 1999.
[MPS15] T. Malkin, V. Pastro, and A. Shelat. The whole is greater than the sum of its parts: Linear garbling and applications. Workshop talk at Securing Computation Workshop in Berkeley, 2015. Online: https://simons.berkeley.edu/talks/tal-malkin-2015-06-10.
[PSSZ15] B. Pinkas, T. Schneider, G. Segev, and M. Zohner. Phasing: Private set intersection using permutation-based hashing. In USENIX Security'15, pages 515–530. USENIX, 2015.
[RME+12] S. Ray, A. Mishchenko, N. Een, R. Brayton, S. Jang, and C. Chen. Mapping into LUT structures. In Design, Automation Test in Europe Conference Exhibition (DATE'12), pages 1579–1584. IEEE, 2012.
[SHS+15] E. M. Songhori, S. U. Hussain, A.-R. Sadeghi, T. Schneider, and F. Koushanfar. TinyGarble: Highly compressed and scalable sequential garbled circuits. In S&P'15, pages 411–428. IEEE, 2015.
[Sec15] Dyadic Security. Dyadic's DSM web suite use-cases, 2015. Online: https://www.dyadicsec.com/wp-content/uploads/2015/06/dyadicwhitepaper.pdf.
[SS06] R. Schürer and W. Schmid. Monte Carlo and Quasi-Monte Carlo Methods 2004, chapter MinT: A Database for Optimal Net Parameters, pages 457–469. Springer, 2006. Online: http://mint.sbg.ac.at.
[Syn] Synopsys Inc. FPGA-based design. http://www.synopsys.com/tools/implementation/fpgaimplementation/pages/default.aspx.
[Syn10] Synopsys Inc. Design Compiler, 2010. http://www.synopsys.com/Tools/Implementation/RTLSynthesis/DesignCompiler.
[SZ13] T. Schneider and M. Zohner. GMW vs. Yao? Efficient secure two-party computation with low depth circuits. In FC'13, volume 7859 of LNCS, pages 275–292. Springer, 2013.
[TP14] M. S. Turan and R. Peralta. The multiplicative complexity of Boolean functions on four and five variables. In Lightweight Cryptography for Security and Privacy (LightSec'14), volume 8898 of LNCS, pages 21–33. Springer, 2014.
[Wol] C. Wolf. Yosys Open Synthesis Suite. http://www.clifford.at/yosys/.
[Xil] Xilinx Inc. Vivado Design Suite - HLx Editions. http://www.xilinx.com/products/design-tools/vivado.html.
[ZRE15] S. Zahur, M. Rosulek, and D. Evans. Two halves make a whole: Reducing data transfer in garbled circuits using half gates. In EUROCRYPT'15, volume 9057 of LNCS, pages 220–250. Springer, 2015.
[Xil09] Xilinx Inc. XST Synthesis Overview. http://www.xilinx.com/support/documentation/sw_manuals/xilinx11/ise_c_using_xst_for_synthesis.htm.
[Yao86] A. C. Yao. How to generate and exchange secrets. In FOCS'86, pages 162–167. IEEE, 1986.