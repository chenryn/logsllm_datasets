### Redundancy and Chosen-Ciphertext Security

Several studies have demonstrated that redundancy and plaintext awareness are not prerequisites for achieving chosen-ciphertext security. The initial findings in this direction were presented by Phan and Pointcheval [37, 38]. Earlier work by Desai [25] achieved a similar goal, but in the context of symmetric encryption. Libert and Quisquater [33] developed a redundancy-free identity-based encryption scheme that achieves adaptive IND-CCA security. More recently, Boyen [20] proposed a compact, redundancy-free encryption scheme based on the Gap-Diffie-Hellman problem [35]. While Boyen's scheme is optimal in terms of bandwidth, with only a 160-bit overhead, it is not particularly efficient due to the need for multiple costly full exponentiations during both encryption and decryption.

### Formal Proofs of Cryptographic Schemes

The application of formal methods to cryptography has a long and rich history, primarily focusing on the formal verification of cryptographic protocols in the symbolic model, which assumes that the underlying primitives are perfectly secure. A seminal article by Abadi and Rogaway [1] demonstrated that, for encryption, symbolic methods are sound in the computational model and can thus provide cryptographically meaningful guarantees. The computational soundness result of Abadi and Rogaway has been extended in many directions; see [22] for a comprehensive survey on computational soundness.

In contrast, the application of formal proofs to cryptographic schemes is more recent and less developed. To our knowledge, Impagliazzo and Kapron [32] were the first to propose a formal logic for reasoning about indistinguishability. Using this logic, they proved that next-bit unpredictability implies pseudo-randomness. However, their logic cannot handle adaptive adversaries with oracle access. Computational Indistinguishability Logic [3] is a more recent logic that overcomes these limitations. Both works provide logical foundations for reasoning about cryptographic systems but lack tool support.

In an inspiring article, Halevi [30] advocated for computer-assisted cryptographic proofs and outlined the design of an automated tool to support such proofs using a code-based game-playing approach. CryptoVerif [15] is one of the first tools to provide support for computer-aided cryptographic proofs. It allows users to conduct, either automatically or interactively, game-based concrete security proofs of primitives or protocols. Games in CryptoVerif are modeled as processes in the applied π-calculus, and transitions are proven using various methods, including process-algebraic (e.g., bisimulations) or purpose-built (e.g., failure events) tools. CryptoVerif has been used to prove the security of the Full-Domain Hash signature scheme [17] and several protocols; see [16] for a detailed account of the examples proven with CryptoVerif.

Our work uses EasyCrypt [4], a more recent tool that takes a programming language approach to cryptographic proofs. EasyCrypt and its predecessor, CertiCrypt, have been used to verify several emblematic cryptographic schemes, including OAEP [5]. Like CryptoVerif, EasyCrypt and CertiCrypt aim to provide general frameworks that capture common reasoning patterns in cryptography. An alternative approach is to develop specialized logics for proving specific properties for a given class of schemes. For example, the Hoare logic of Courant et al. [23] allows for the automatic proof that an encryption scheme based on trapdoor one-way functions, random oracles, concatenation, and exclusive-or is IND-CPA or IND-CCA secure. Their logic (or a suitable extension) uses a syntactic form of plaintext awareness to conclude that an encryption scheme is IND-CCA secure, making it inapplicable to ZAEP.

### Conclusion

ZAEP is a surprisingly simple and efficient padding scheme that achieves adaptive chosen-ciphertext security without introducing any redundancy. Using the EasyCrypt tool, we have constructed a machine-checked proof that ZAEP yields IND-CCA security with a rather efficient reduction, whenever it is instantiated with trapdoor permutations satisfying two intuitive algebraic properties that hold for the Rabin function and small exponent RSA. This proof is significant beyond its intrinsic interest, as it represents the first application of verified security to a novel construction. Starting from a high-level intuition, we were able to build, with reasonable effort in less than a week and directly in EasyCrypt, the sequence of games for proving IND-CCA security. The time needed to complete the proof contrasts sharply with the six man-months reported to reproduce the proof of OAEP in CertiCrypt [5]. Thus, our work provides further evidence that, as stated in [4], "EasyCrypt makes a significant step towards the adoption of computer-aided proofs by working cryptographers."

The ZAEP proof opens exciting perspectives for future work. On one hand, it suggests that automation can be significantly improved through user-defined and built-in strategies that automatically generate a sequence of games. More speculatively, we are currently investigating whether such strategies could provide an effective means to automate IND-CPA and IND-CCA proofs for encryption schemes obtained through methods of program synthesis. In a parallel thread of work, we have implemented a synthesis tool that generates encryption schemes based on trapdoor one-way permutations, random oracles, concatenation, and exclusive-or. To limit the set of candidate schemes, we have constrained the generation mechanism by Dolev-Yao filters that eliminate obviously insecure schemes. Thus, the synthesis algorithm generates a list of candidates that is exhaustive up to a given number of operations. Notably, there are only two candidates with a minimal number (four) of operations: the (redundancy-free and IND-CPA) Bellare and Rogaway encryption scheme [10], known since 1993, and ZAEP, which has not been studied before. The case of ZAEP gives us hope that automated synthesis of cryptographic schemes may lead to surprising discoveries.

### Acknowledgments

This work was partially funded by European Projects FP7-256980 NESSoS and FP7-229599 AMAROUT, Spanish National project TIN2009-14599 DESAFIOS 10, and Madrid Regional project S2009TIC-1465 PROMETIDOS.

### References

[1] M. Abadi and P. Rogaway. Reconciling two views of cryptography (The computational soundness of formal encryption). J. Cryptology, 15(2):103–127, 2002.

[2] M. Abe, E. Kiltz, and T. Okamoto. Chosen ciphertext security with optimal ciphertext overhead. In Advances in Cryptology – ASIACRYPT 2008, volume 5350 of Lecture Notes in Computer Science, pages 355–371. Springer, 2008.

[3] G. Barthe, M. Daubignard, B. Kapron, and Y. Lakhnech. Computational indistinguishability logic. In 17th ACM Conference on Computer and Communications Security, CCS 2010, pages 375–386. ACM, 2010.

[4] G. Barthe, B. Grégoire, S. Heraud, and S. Zanella Béguelin. Computer-aided security proofs for the working cryptographer. In Advances in Cryptology – CRYPTO 2011, volume 6841 of Lecture Notes in Computer Science, pages 71–90. Springer, 2011.

[5] G. Barthe, B. Grégoire, Y. Lakhnech, and S. Zanella Béguelin. Beyond provable security. Verifiable IND-CCA security of OAEP. In Topics in Cryptology – CT-RSA 2011, volume 6558 of Lecture Notes in Computer Science, pages 180–196. Springer, 2011.

[6] G. Barthe, B. Grégoire, and S. Zanella Béguelin. Formal certification of code-based cryptographic proofs. In 36th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL 2009, pages 90–101. ACM, 2009.

[7] G. Barthe, D. Pointcheval, and S. Zanella-Béguelin. Verified security of redundancy-free encryption from Rabin and RSA. Cryptology ePrint Archive, Report 2012/308, 2012.

[8] M. Bellare, A. Desai, D. Pointcheval, and P. Rogaway. Relations among notions of security for public-key encryption schemes. In Advances in Cryptology – CRYPTO 1998, volume 1462 of Lecture Notes in Computer Science, pages 26–45. Springer, 1998.

[9] M. Bellare and A. Palacio. Towards plaintext-aware public-key encryption without random oracles. In Advances in Cryptology – ASIACRYPT 2004, volume 3329 of Lecture Notes in Computer Science, pages 48–62. Springer, 2004.

[10] M. Bellare and P. Rogaway. Random oracles are practical: A paradigm for designing efficient protocols. In 1st ACM Conference on Computer and Communications Security, CCS 1993, pages 62–73. ACM, 1993.

[11] M. Bellare and P. Rogaway. Optimal asymmetric encryption. In Advances in Cryptology – EUROCRYPT 1994, volume 950 of Lecture Notes in Computer Science, pages 92–111. Springer, 1994.

[12] M. Bellare and P. Rogaway. The exact security of digital signatures: How to sign with RSA and Rabin. In Advances in Cryptology – EUROCRYPT 1996, volume 1070 of Lecture Notes in Computer Science, pages 399–416. Springer, 1996.

[13] M. Bellare and P. Rogaway. The security of triple encryption and a framework for code-based game-playing proofs. In Advances in Cryptology – EUROCRYPT 2006, volume 4004 of Lecture Notes in Computer Science, pages 409–426. Springer, 2006.

[14] J. Birkett and A. W. Dent. Relations among notions of plaintext awareness. In 11th International Conference on Theory and Practice of Public Key Cryptography, PKC 2008, volume 4939 of Lecture Notes in Computer Science, pages 47–64. Springer, 2008.

[15] B. Blanchet. A computationally sound mechanized prover for security protocols. In 27th IEEE Symposium on Security and Privacy, S&P 2006, pages 140–154. IEEE Computer Society, 2006.

[16] B. Blanchet and D. Pointcheval. Automated security proofs with sequences of games. In Advances in Cryptology – CRYPTO 2006, volume 4117 of Lecture Notes in Computer Science, pages 537–554. Springer, 2006.

[17] F. Bobot, J.-C. Filliâtre, C. Marché, and A. Paskevich. The Why3 platform. Version 0.71. Online – http://why3.lri.fr, 2010.

[18] D. Boneh. Simplified OAEP for the RSA and Rabin functions. In Advances in Cryptology – CRYPTO 2001, volume 2139 of Lecture Notes in Computer Science, pages 275–291. Springer, 2001.

[19] X. Boyen. Miniature CCA2 PK encryption: Tight security without redundancy. In Advances in Cryptology – ASIACRYPT 2007, volume 4833 of Lecture Notes in Computer Science, pages 485–501. Springer, 2007.

[20] D. Coppersmith. Finding a small root of a univariate modular equation. In Advances in Cryptology – EUROCRYPT 1996, volume 1070 of Lecture Notes in Computer Science, pages 155–165. Springer, 1996.

[21] V. Cortier, S. Kremer, and B. Warinschi. A survey of symbolic methods in computational analysis of cryptographic systems. J. Autom. Reasoning, 46(3-4):225–259, 2011.

[22] J. Courant, M. Daubignard, C. Ene, P. Lafourcade, and Y. Lakhnech. Towards automated proofs for asymmetric encryption schemes in the random oracle model. In 15th ACM conference on Computer and Communications Security, CCS 2008, pages 371–380. ACM, 2008.

[23] A. W. Dent. The Cramer-Shoup encryption scheme is plaintext aware in the standard model. In Advances in Cryptology – EUROCRYPT 2006, volume 4004 of Lecture Notes in Computer Science, pages 289–307. Springer, 2006.

[24] A. Desai. New paradigms for constructing symmetric encryption schemes secure against chosen-ciphertext attack. In Advances in Cryptology – CRYPTO 2000, volume 1880 of Lecture Notes in Computer Science, pages 394–412. Springer, 2000.

[25] S. Goldwasser and S. Micali. Probabilistic encryption. Journal of Computer and System Sciences, 28(2):270–299, 1984.

[26] S. Halevi. A plausible approach to computer-aided cryptographic proofs. Cryptology ePrint Archive, Report 2005/181, 2005.

[27] J. Herzog, M. Liskov, and S. Micali. Plaintext awareness via key registration. In Advances in Cryptology – CRYPTO 2003, volume 2729 of Lecture Notes in Computer Science, pages 548–564. Springer, 2003.

[28] R. Impagliazzo and B. M. Kapron. Logics for reasoning about cryptographic constructions. In 44th Annual IEEE symposium on Foundations of Computer Science, FOCS 2003, pages 372–383. IEEE Computer Society, 2003.

[29] B. Libert and J.-J. Quisquater. Identity based encryption without redundancy. In 3rd International Conference on Applied Cryptography and Network Security, ACNS 2005, volume 3531 of Lecture Notes in Computer Science, pages 285–300. Springer, 2005.

[30] M. Naor and M. Yung. Public-key cryptosystems provably secure against chosen ciphertext attacks. In 22nd Annual ACM Symposium on Theory of Computing, STOC 1990. ACM, 1990.

[31] T. Okamoto and D. Pointcheval. The gap-problems: A new class of problems for the security of cryptographic schemes. In 4th International Workshop on Theory and Practice in Public Key Cryptography, PKC 2001, volume 1992 of Lecture Notes in Computer Science, pages 104–118. Springer, 2001.

[32] T. Okamoto and D. Pointcheval. REACT: Rapid Enhanced-security Asymmetric Cryptosystem Transform. In Topics in Cryptology – CT-RSA 2001, volume 2020 of Lecture Notes in Computer Science, pages 159–175. Springer, 2001.

[33] D. H. Phan and D. Pointcheval. Chosen-ciphertext security without redundancy. In Advances in Cryptology – ASIACRYPT 2003, volume 2894 of Lecture Notes in Computer Science, pages 1–18. Springer, 2003.

[34] D. H. Phan and D. Pointcheval. OAEP 3-round: A generic and secure asymmetric encryption padding. In Advances in Cryptology – ASIACRYPT 2004, volume 3329 of Lecture Notes in Computer Science, pages 63–77. Springer, 2004.

[35] E. Fujisaki and T. Okamoto. How to enhance the security of public-key encryption at minimum cost. In 2nd International Workshop on Theory and Practice in Public Key Cryptography, PKC 1999, volume 1560 of Lecture Notes in Computer Science, pages 53–68. Springer, 1999.

[36] E. Fujisaki and T. Okamoto. Secure integration of asymmetric and symmetric encryption schemes. In Advances in Cryptology – CRYPTO 1999, volume 1666 of Lecture Notes in Computer Science, pages 537–554. Springer, 1999.

[37] C. Rackoff and D. R. Simon. Non-interactive zero-knowledge proof of knowledge and chosen ciphertext attack. In Advances in Cryptology – CRYPTO 1991, volume 576 of Lecture Notes in Computer Science, pages 433–444. Springer, 1992.

[38] R. L. Rivest, A. Shamir, and L. M. Adleman. A method for obtaining digital signature and public-key cryptosystems. Communications of the Association for Computing Machinery, 21(2):120–126, 1978.