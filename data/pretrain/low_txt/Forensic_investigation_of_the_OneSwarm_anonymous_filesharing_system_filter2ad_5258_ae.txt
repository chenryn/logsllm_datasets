# Mojohost, CMich, and HMC Throughput Analysis

The following data presents the throughput (in MB/s or KB/s) for different paths (Mojohost, CMich, and HMC) under various conditions. The results are categorized into two main scenarios: when the target possesses the file and when the target is proxying the file.

## Data Summary
- **Mojohost, CMich, and HMC Throughput (MB/s or KB/s):**
  - Possessed File:
    - Mojohost: 1.29, 1.25, 686, 3.66, 3.56, 3.57, 350, 385, 344, 281, 277, 270, 446, 413, 402, 158, 183, 200, 94.7, 86.6, 93.7, 1.61, 1.69, 1.41, 2.02, 3.58, 1.98
    - CMich: 1.43, 1.96, 1.44, 1.90, 1.46, 1.26, 13.5, 13.6, 14.0, 2.84, 3.13, 3.12, 10.4, 10.2, 8.76, 16.8, 19.2, 18.0, 0.861, 0.793, 0.903, 0.750, 0.458, 0.678
    - HMC: 686, 646, 714, 1.09, 1.04, 933, 311, 329, 304, 274, 292, 280, 407, 475, 342, 168, 178, 209, 117, 115, 116, 681, 659, 707, 1.25, 1.04, 1.03
  - Proxied File:
    - Mojohost: 1.07, 1.05, 1.21, 4.42, 3.94, 3.74, 1.75, 1.48, 2.06, 8.48, 7.95, 7.15, 11.3, 11.2, 12.2, 0.976, 1.01, 0.920, 0.850, 1.02, 1.05
    - CMich: 1.07, 1.05, 1.21, 4.42, 3.94, 3.74, 1.75, 1.48, 2.06, 8.48, 7.95, 7.15, 11.3, 11.2, 12.2, 0.976, 1.01, 0.920, 0.850, 1.02, 1.05
    - HMC: 1.07, 1.05, 1.21, 4.42, 3.94, 3.74, 1.75, 1.48, 2.06, 8.48, 7.95, 7.15, 11.3, 11.2, 12.2, 0.976, 1.01, 0.920, 0.850, 1.02, 1.05

- **Relative Throughput (Attack vs. wget):**
  - Possessed File: 2.0, 1.9, 1.8, 3.0, 2.9, 3.0, 2.5, 2.6, 2.5, 2.2, 2.1, 2.0, 2.0, 1.9, 1.8, 1.5, 1.6, 1.7, 1.0, 0.9, 1.0, 1.7, 1.8, 1.5, 2.1, 3.7, 2.0
  - Proxied File: 1.0, 1.0, 1.2, 4.0, 3.5, 3.3, 1.5, 1.3, 1.8, 7.4, 6.8, 6.1, 9.8, 9.6, 10.5, 0.8, 0.9, 0.8, 0.7, 0.9, 0.9

- **Timeouts (Indicated by *):**
  - Mojohost: *, *, *
  - CMich: *, *, *
  - HMC: *, *, *, *, *, *

## Results
The results, as shown in Table 1, demonstrate that the attack can differentiate between files served directly by the target and those proxied by the target. Files served at higher rates are likely possessed by the target, while files served at lower rates or resulting in timeouts are likely proxied from a different source. The attack is successful when the relative speedup of the attack (compared to `wget`) is higher for files possessed by the target than for proxied files. This holds true in most cases, even with a fixed `maxExtra` value.

## Limitations
The success of the attack depends on the attacker's ability to force the target to serve files faster than they can be retrieved from potential sources when proxied. This assumption may not always hold due to factors such as poor connectivity, rate limiting, traffic shaping, or the target having a high-bandwidth connection to the true source. In some cases, the machines may be co-located, which is acceptable for a search warrant, or the owner of the machine may cooperate with law enforcement.

## Defenses
To detect this attack, nodes can drop outgoing packets from their TCP stream and check if the remote peer requests the missing data or acknowledges receiving it. A patch exists for an old version of the Linux kernel, but deploying a non-standard TCP implementation is unlikely. To defend against the attack without detection, OneSwarm can enforce a bandwidth cap on peers, though this is not currently implemented.

## Conclusions
OneSwarm is used by thousands of peers and is of interest to criminal and civil investigators. We have detailed three attacks on the system using only plain view data, quantifying the precision and error rates of two of these attacks for legal context. Each attack can be repeated for increased success. Our novel timing attack is successful with only two attackers, and we have described a defense that introduces delays. We have re-analyzed the collusion attack, showing a greater vulnerability than previously reported. Finally, we show that OneSwarm is vulnerable to a known TCP-based attack, allowing a single attacker to identify whether a neighbor is the source of data or a proxy. Only users who turn off the default rate limit setting are exposed.

We provided our findings to the OneSwarm developers, who have since made changes to the system, including setting the default value of `p` to 0.5, reducing unintended forwarding latency, and fixing discrepancies between text search and hash search delays.

## Acknowledgements
This work was supported in part by NSF award CNS-1018615. We thank Cpl. Robert Erdely of the Pennsylvania State Police, Elizabeth Belding, Norman Danner, Danny Krizanc, Clay Shields, Matthew Wright, Robert Walls, and Brian Lynn for their contributions.

## References
[1] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and D. Sicker. Low-Resource Routing Attacks Against Tor. In Proc. ACM WPES, pages 11–20, 2007.
[2] S. Brenner, B. Carrier, and J. Henninger. The Trojan Horse Defense in Cybercrime Cases. Santa Clara Computer and High Technology Law Journal, 21(1), 2004.
[3] J. Chu, K. Labonte, and B. N. Levine. Availability and Locality Measurements of Peer-to-Peer File Systems. In Proc. ITCom: Scalability and Traffic Control in IP Networks II Conference, volume SPIE 4868, pages 310–321, July 2002.
[4] B. Cohen. Incentives Build Robustness in BitTorrent. In International Workshop on Peer-to-Peer Systems (IPTPS), Berkeley, CA, February 2003.
[5] L. Denoyer and M. Latapy. Measurement and Analysis of P2P Activity Against Paedophile. Journé Donnés et Apprentissage Artificiel (DAPA), March 2009.
[6] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The Second-Generation Onion Router. In Proc. USENIX Security Symposium, August 2004.
[7] R. Geambasu, T. Kohno, A. Levy, and H. M. Levy. Vanish: Increasing Data Privacy with Self-Destructing Data. In Proc. USENIX Security Symposium, 2009.
[8] T. Isdal, M. Piatek, A. Krishnamurthy, and T. Anderson. Privacy-preserving P2P data sharing with OneSwarm. In Proc. ACM SIGCOMM, pages 111–122, August 2010.
[9] T. Isdal, M. Piatek, A. Krishnamurthy, and T. Anderson. Privacy-preserving P2P data sharing with OneSwarm. Technical report, Dept. CS and Eng., Univ. of Washington, 2010. http://oneswarm.cs.washington.edu/f2f_tr.pdf.
[10] M. Latapy, C. Magnien, and R. Fournier. Quantifying paedophile activity in a large P2P system. In IEEE Infocom Mini-Conference. http://antipaedo.lip6.fr, April 2011.
[11] M. Liberatore, R. Erdely, T. Kerle, B. N. Levine, and C. Shields. Forensic Investigation of Peer-to-Peer File Sharing Networks. In Proc. DFRWS Annual Digital Forensics Research Conference, August 2010.
[12] M. Liberatore, B. N. Levine, and C. Shields. Strengthening Forensic Investigations of Child Pornography on P2P Networks. In Proc. ACM Conference on Future Networking Technologies (CoNEXT), November 2010.
[13] L. Peterson, A. Bavier, M. E. Fiuczynski, and S. Muir. Experiences building PlanetLab. In Proc. USENIX OSDI, pages 351–366, 2006.
[14] M. Piatek, T. Kohno, and A. Krishnamurthy. Challenges and directions for monitoring P2P file sharing networks. In Proc. USENIX Hot Topics in Security (HotSec), pages 12:1–12:7, July 2008.
[15] M. Ripeanu, I. Foster, and A. Iamnitchi. Mapping the Gnutella Network. IEEE Internet Computing Journal, 6(1):50–57, 2002.
[16] J. Rorher. MUTE. http://mute-net.sourceforge.net.
[17] RShare. http://www.stealthnet.de/en_index.php and http://www.planetpeer.de/wiki/index.php/RShare_documentation_%28English%29.
[18] S. Savage, N. Cardwell, D. Wetherall, and T. Anderson. TCP congestion control with a misbehaving receiver. In Proc. ACM SIGCOMM, pages 71–78, October 1999.
[19] R. Sherwood, B. Bhattacharjee, and R. Braud. Misbehaving TCP receivers can cause Internet-wide congestion collapse. In Proc. ACM CCS, pages 383–392, Oct. 2005.
[20] P. Syverson, G. Tsudik, M. Reed, and C. Landwehr. Towards an Analysis of Onion Routing Security. In Intl. Wkshp. on Designing Privacy Enhancing Technologies, pages 96–114, July 2000.
[21] U.S. Dept. of Justice. National Strategy for Child Exploitation Prevention and Interdiction: A Report to Congress. http://www.projectsafechildhood.gov/docs/natstrategyreport.pdf, August 2010.
[22] U.S. General Accounting Office. File-Sharing Programs. Child Pornography Is Readily Accessible over Peer-to-Peer Networks. GAO-03-537T. Statement Before Congress; Linda D. Koontz, Information Management Issues, March 2003.
[23] U.S. Government. Federal Rules of Evidence. Rule 401. http://www.law.cornell.edu/rules/fre/rules.htm.
[24] R. J. Walls, B. N. Levine, M. Liberatore, and C. Shields. Effective Digital Forensics Research is Investigator-Centric. In Proc. USENIX Workshop on Hot Topics in Security (HotSec), August 2011.
[25] S. Wolchok, O. Hofmann, N. Heninger, E. Felten, J. Halderman, C. Rossbach, B. Waters, and E. Witchel. Defeating Vanish with Low-Cost Sybil Attacks Against Large DHTs. In Proc. ISOC Symposium Network and Distributed System Security (NDSS), February 2010.
[26] M. Wright, M. Adler, B. N. Levine, and C. Shields. An Analysis of the Degradation of Anonymous Protocols. In Proc. ISOC Symposium Network and Distributed System Security (NDSS), pages 38–50, February 2002.
[27] M. Wright, M. Adler, B. N. Levine, and C. Shields. Defending Anonymous Communication Against Passive Logging Attacks. In Proc. IEEE Symposium on Security & Privacy, pages 28–41, May 2003.