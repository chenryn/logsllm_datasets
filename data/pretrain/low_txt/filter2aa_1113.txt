**August 2007**
©2007 Finjan Software Ltd. All rights reserved.

# The Inherent Insecurity of Widgets and Gadgets

## Authors
- **Aviv Raff**: Security Researcher at Finjan’s MCRC
- **Iftach Ian Amit**: Director of Security Research at Finjan

## Introduction
### What is a Widget?
- **Definition**: A widget is a small application that provides visual information or access to frequently used functions.
- **Environment**: Widgets are typically hosted in an environment known as a "Widget Engine."

### Types of Widgets
- **Website Widgets**: Embedded on web pages.
- **Third-Party Application Widgets**: Installed through third-party applications.
- **OS Integrated Widgets**: Built into the operating system.

## General Issues
### Malicious Widgets
- **Nature**: Widgets are applications, and like any other application, they can include malicious code.
- **Conclusion**: Therefore, widgets can be malicious.

### Vulnerabilities
- **Perception**: Widgets are often seen as too simple to pose a security threat.
- **Development**: They are frequently developed without considering security.
- **Conclusion**: This makes them likely to have security vulnerabilities.

### Attack Vectors
- **Downloadable Malicious Widgets**
- **Email Attachments**
- **Vulnerable Widgets**
  - Command injection
  - Man-in-the-middle attacks
  - Browser vulnerabilities
- **Vulnerable Websites**
  - Cross-Site Scripting (XSS)
  - Cross-Site Request Forgery (CSRF)

### Impact
- **Session/Account Hijacking**
- **Remote Denial-of-Service (DoS)**
- **Information Leakage**
  - Personal
  - Corporate
- **Remote Code Execution**
  - Exploiting browser vulnerabilities
  - Download and execute

## Web Widgets in the Wild
### Examples
- **Personalized Portals**
  - iGoogle
  - Microsoft Live
  - MyYahoo
- **Blog Systems**
  - WordPress
  - TypePad
- **Social Networks**
  - MySpace

### Case Study: iGoogle
- **Overview**: A personalized portal requiring a Google Account.
- **Technology**: Based on HTML and JavaScript, with a JS API for developers.
- **Features**: Supports mobile devices.
- **Malicious Widget Demo**
- **Vulnerable Widget Demo**

## Third-Party Application Widgets
### Examples
- **Yahoo Widgets (Konfabulator)**
- **Google Desktop**
- **DesktopX**
- **Opera Browser**

### Case Study: Yahoo Widgets
- **Overview**: Previously known as Konfabulator, recently released version 4.0.
- **Technology**: Based on HTML-like markup language and JavaScript.
- **Features**: Some widgets require a Yahoo account, multiplatform API.
- **Malicious Widget Demo**
- **Vulnerable Widget Demo**

## OS Integrated Widgets
### Out-of-the-Box Engines
- **Apple macOS**
  - Dashboard
- **Windows Vista**
  - Sidebar
- **Linux**
  - KDE / GNOME

### Case Study: Windows Vista Sidebar
- **Overview**: Installed by default on all Windows Vista editions.
- **Features**: Allows installation of external widgets, uses Internet Explorer 7.0 for rendering.
- **Security Note**: Does not utilize IE7 Protected Mode.
- **Developer API**: JS API for widget developers.
- **Malicious Widget Demo**
- **Vulnerable Widget Demo**

## Widgets on Mobile Devices
- **Overview**: iGoogle and Live.com provide mobile interfaces.
- **Differences**: Different widgets display from the PC version; only some widgets are allowed.
- **Attack Vectors**
  - Session/Account hijacking
  - Exploiting mobile browser vulnerabilities

## Widgets and Browser Extensions
- **Similarities**: Not much different from browser extensions.
- **Integration**: Browser integration vs. OS/Engine/Site integration.
- **Examples**
  - Firefox browser extensions (e.g., Firebug)
  - Internet Explorer ActiveX (e.g., BHO, OS ActiveX)

## Solutions and Recommendations
### General Recommendations
- **Digital Signing for Widgets**
- **Trust No One**: Do not install unofficial or unknown widgets.
- **Block Unnecessary Widgets**: If you don’t use it, block it!
- **File Blocking**: Block .widget and .gadget files.
- **Use W3C Standard**: Implement solutions based on the W3C Widgets 1.0 standard.

### W3C Widgets 1.0
- **Standard**: W3C standard for widget development.
- **Details**: Last draft version from November 2006, available at [http://www.w3.org/TR/widgets/](http://www.w3.org/TR/widgets/).
- **Model**: Based on Apple’s Dashboard.
- **Implemented in**: Opera browser widgets.
- **Security Model**
  - No access to the user's file system.
  - Explicit declarations of protocol usage.
  - Explicit declarations of port usage.
  - Intranet IP range restrictions.

## Questions
- Open for Q&A