# Analyzing the Performance of an Anycast CDN

**Authors:**
- Matt Calder, University of Southern California
- Ashley Flavel, Microsoft
- Ethan Katz-Bassett, University of Southern California
- Ratul Mahajan, Microsoft
- Jitendra Padhye, Microsoft

## Abstract
Content delivery networks (CDNs) must balance multiple trade-offs when directing clients to CDN servers. While DNS-based redirection requires a complex global traffic manager, anycast relies on BGP to direct clients to a CDN front-end. Anycast is simple, scalable, and naturally resilient to DDoS attacks. However, it lacks precise control over client redirection. This paper examines the performance implications of using anycast in a global, latency-sensitive CDN. We analyze millions of client-side measurements from the Bing search service to compare anycast and unicast performance to nearby front-ends. Our findings indicate that anycast generally performs well, but it directs approximately 20% of clients to suboptimal front-ends. We also demonstrate that the performance of these clients can be improved through a simple history-based prediction scheme.

**Categories and Subject Descriptors:**
- C.2.5 [Computer-Communication Networks]: Local and Wide-Area Networks—Internet
- C.4 [Performance of Systems]: Measurement Techniques

**Keywords:**
- Anycast, CDN, Measurement

## 1. Introduction
Content delivery networks (CDNs) are a critical part of Internet infrastructure. CDNs deploy front-end servers globally and direct clients to nearby, available front-ends to reduce bandwidth, improve performance, and maintain reliability. For latency-sensitive services like search results, CDNs aim to minimize client-perceived latency by mapping clients to nearby front-ends.

CDNs can use several mechanisms to direct clients to front-ends, with DNS and anycast being the most popular. DNS-based redirection, pioneered by Akamai, offers fine-grained and near-real-time control over client-front-end mapping but requires significant investment in infrastructure and operations. In contrast, anycast, used by newer CDNs like CloudFlare, announces the same IP address from multiple locations, leaving client-front-end mapping to Internet routing protocols. Anycast is easy and cheap to deploy but offers minimal control and is performance-agnostic by design.

In this paper, we investigate whether anycast directs clients to nearby front-ends and the performance impact of poor redirection. Using data from Bing's anycast-based CDN, we instrumented the search stack to measure latency to four front-ends: one selected by anycast and three nearby ones. Our results show that while anycast generally performs well, it directs about 20% of clients to suboptimal front-ends. We also demonstrate that a simple prediction scheme can improve the performance of 15-20% of clients underserved by anycast.

## 2. Client Redirection
CDNs can direct clients to front-ends in multiple ways:

### DNS
- **Process:** The client fetches a CDN-hosted resource via a hostname. The client's local DNS resolver (LDNS) forwards the DNS request to the CDN's authoritative nameserver, which returns an IP address based on the LDNS.
- **Advantages:** Precise control over client redirection with small DNS cache TTL values.
- **Challenges:** LDNS may serve geographically disparate clients, making it difficult to find a good single redirection choice. The EDNS client-subnet-prefix standard (ECS) addresses this by allowing per-prefix redirection decisions.

### Anycast
- **Process:** The same IP address is announced from multiple locations, and BGP routes clients to the nearest front-end.
- **Advantages:** Operational simplicity and independent client redirection, avoiding LDNS issues.
- **Challenges:** Unaware of network performance and server load, leading to potential overloading and session termination issues.

### Other Redirection Mechanisms
- **HTTP Status Code 3xx or Manifest-Based Redirection:** These schemes add extra RTTs and are not suitable for latency-sensitive services like search.

## 3. Methodology
Our goal is to evaluate the effectiveness of anycast in directing clients to nearby front-ends and compare its performance to DNS-based unicast redirection. We use Bing's anycast-based CDN, which has dozens of front-ends globally, all within the same Microsoft-operated autonomous system.

### 3.1 Routing Configuration
- **Anycast:** All production search traffic is served using anycast from all front-ends.
- **Unicast:** Each front-end location has a unique /24 prefix, which forces traffic to ingress near the front-end, allowing a head-to-head comparison between unicast and anycast.

### 3.2 Data Sets
We use both passive and active measurements:

#### 3.2.1 Passive Measurements
- **Data Source:** Bing server logs provide detailed information about client requests for each search query.
- **Data Collection:** Data was collected during the first week of April 2015, representing millions of queries.

#### 3.2.2 Active Measurements
- **Measurement Tool:** A JavaScript beacon injected into a small fraction of Bing Search results.
- **Process:** After the results page loads, the beacon measures latency to four test URLs and reports the results to a backend infrastructure.
- **Techniques:** 
  - Warm-up request to remove DNS lookup impact.
  - Use of W3C Resource Timing API for accurate resource download timing.
- **Data Collection:** Millions of search queries over March and April 2015, aggregated into /24 prefixes.

### 3.3 Choice of Front-ends to Measure
- **Goal:** Compare anycast performance with the best performing front-end.
- **Mechanisms:**
  - Consider only the ten closest front-ends to the LDNS based on geolocation data.
  - Geolocation data is sufficiently accurate to identify the best front-ends.
  - Figure 1 shows diminishing returns of measuring to additional front-ends.

## 4. Results
Our results show that anycast generally performs well, but it directs about 20% of clients to suboptimal front-ends. When anycast does not direct a client to the best front-end, the client usually lands on a nearby alternative. We demonstrate that a simple prediction scheme can improve the performance of 15-20% of clients underserved by anycast.

## 5. Conclusion
This study provides important insights into CDN performance, showing that anycast delivers optimal performance for most clients. However, for a small percentage of clients, performance can be improved through a simple history-based prediction scheme. These findings are specific to the current front-end deployment of the CDN we measured but offer valuable insights for future CDN designs.

---

**Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from Permissions@acm.org.**

**IMC’15, October 28–30, 2015, Tokyo, Japan.**
**Copyright is held by the owner/author(s). Publication rights licensed to ACM.**
**ACM 978-1-4503-3848-6/15/10 ...$15.00.**
**DOI: http://dx.doi.org/10.1145/2815675.2815717.**