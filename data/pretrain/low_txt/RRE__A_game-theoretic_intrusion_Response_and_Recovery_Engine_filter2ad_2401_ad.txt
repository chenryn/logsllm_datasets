### 文章优化版

---

**授权许可使用范围：清华大学。下载时间：2021年3月20日 09:58:14 UTC，来自IEEE Xplore。 使用受限。**

#### 图5. 网络安全状态示例
图5展示了一个网络安全状态（Fig. 5），共有13种可能的状态转换，这些转换被分为两个子集：1）响应动作 \( A_r(s) = \{ \text{重启(G1)}, \text{切换(HMI)}, \text{无操作} \} \)，以及2）针对叶节点后果的敌对动作 \( A_a(s) \)。我们假设响应动作 \( A_r(s) \) 需要SCADA操作员的一些手动协助；因此，由于人力资源有限，它们不能同时执行。

通过RRE模型求解得到的最佳响应动作为“切换(HMI)”，因为如果选择“重启(G1)”或“无操作”，攻击者可以通过破坏SCOPF服务器（见图4），在后续阶段对系统造成巨大损害，导致控制子系统的完全失效，从而影响电力负载供应，并最终导致“SCADA被破坏”的顶级事件。换句话说，正如前面所解释的，引擎选择了使攻击者在未来造成的最大损害最小化的响应动作。

#### 7. 计算效率
尽管值迭代算法在具有数千个状态的马尔可夫决策过程（MDP）中表现良好，但RRE（像大多数基于状态的建模技术一样）在保护包含大量资产的大网络时面临状态空间爆炸问题，尤其是当分布式入侵检测系统（IDS）发送大量警报时。状态空间的指数增长使得在大规模应用中计算最优解决方案（即响应动作）变得不可行。当采用部分可观测的马尔可夫决策过程（POMDP）来寻找最优解决方案时，问题变得更加严重。因此，RRE采用了两种状态压缩技术来解决这个问题。

首先，最可能状态（MLS）近似技术[5]用于将POMDP转化为MDP，这在实时响应决策中更为可行。具体来说，我们通过计算最可能状态 \( s^* = \arg\max_s b(s) \)，并定义策略为 \( \pi(s) = \pi_{\text{MDP}}(s^*) \) 来实现这一点。该策略是通过Bellman最优方程计算得出的价值函数 \( V^*(s) = \max_{a_r \in A_r(s)} \Upsilon(V^*, s, a_r) \) 和策略 \( \pi_{\text{MDP}}(s) = \arg\max_{a_r \in A_r(s)} \Upsilon(V^*, s, a_r) \) 得出的，其中 \( \Upsilon(.) \) 如式(13)所定义。值迭代算法[3]用于计算价值函数，即 \( V(s) \leftarrow \max_{a \in A(s)} \Upsilon(V, s, a) \)。

在RRE中使用MLS是合理的，因为最可能状态的概率远大于其他状态的概率；然而，由此导出的MDP仍然不足以实现实时响应。此外，由于其庞大的状态空间，即使是离线解决方案技术也不适用，因为大多数方法（例如值迭代）需要在整个状态空间上进行迭代更新。为了将计算集中在相关状态上，采用了一种在线随时算法——包络算法，使RRE能够在大规模计算机网络中实现实时响应。

简而言之，包络算法在一个给定当前状态（如上述的 \( s^* \)）可到达的状态子集上执行有限步的前瞻搜索。这个子集称为“包络 \( E_\pi \)”，最初只包含当前状态，并逐步扩展。一个近似价值函数 \( \tilde{V} \) 用于评估边界状态，即不在包络中但可以通过一步从包络中的某个状态到达的状态集合：
\[ F_\pi = \{ s \in S - E_\pi | \exists s' \in E_\pi, P(s', \pi(s'), s) > 0 \}. \]
包络算法收敛于最优策略[7]，其一般方案如下：

1. **初始化**：生成初始包络 \( E_\pi = s^* \)。
2. **循环**：当 \( E_\pi \neq S \) 且未达到截止时间时：
   - **边界扩展**：扩展包络 \( E_\pi \)。选择某个 \( s \in F_\pi \) 并更新其价值。
   - **祖先更新阶段**：为包络生成最优策略 \( \pi \)。
3. **返回**：返回策略 \( \pi \)。

通过包络，RRE可以非常高效地解决巨大的MDP，通过仅在包络上定义的部分策略，而无需评估整个状态空间。

#### 8. 实验评估
本节研究提出的响应和恢复引擎（RRE）在实际中的性能。我们在开源签名型IDS Snort 2.7[22]上实现了RRE。实验在一个配备2.2 GHz AMD Athlon 64 Processor 3700+、1 MB缓存、2 GB内存和Ubuntu（Linux 2.6.24-21）操作系统的计算机系统上运行。

##### 8.1. 可扩展性
为了评估RRE处理由大量主机系统组成的复杂网络的能力，我们测量了RRE计算最优响应动作所需的时间与各种指标的关系。图6显示了在不同攻击-响应树阶数（即每个节点的最大子节点数）下，十次运行的平均响应时间。给定固定数量的节点（例如图6中的500个节点），攻击-响应树阶数决定了Markov决策模型中状态空间的大小。对于每个树阶数 \( d \)，生成一个平衡树，每个节点有 \( d \) 个子节点；门被随机分配为AND或OR，概率均为0.5。在我们的实验中，Bellman方程的ε-最优终止准则和折扣因子分别设置为 \( \varepsilon = 0.1 \) 和 \( \gamma = 0.99 \)。然后构建并求解决策过程，并记录总耗时（见图6）。如预期所示，随着攻击-响应树阶数的增加，引擎所需的响应时间迅速增长。

在另一个可扩展性评估实验中，我们测量了响应时间与平衡攻击-响应树（阶数为2）中节点数量的关系。图7显示了十次运行的平均结果。首先，给定IDS警报和攻击-响应树，构建完整的决策模型，包括状态空间中的所有状态。如图7(a)所示，响应引擎可以在大约2分钟内解决最多45个节点的攻击-响应树的最优响应动作。其次，生成并求解了一个扩展限制为两步的有限前瞻Markov决策模型。如图7(c)所示，有限扩展提高了收敛速度，并将可解的攻击-响应树大小提高到最多900个节点，耗时不超过40秒。通过在一分钟内解决约900个节点的攻击-响应树，RRE能够保护大规模计算机网络。第三，为进一步提高RRE的可扩展性，我们评估了在扩展限制为两步的情况下，决策过程的求解速度。图7(b)比较了所有可能起始场景下的总恢复成本。

##### 8.2. 比较
本节评估RRE相对于静态入侵响应系统（IRS）的优势，特别是那些静态选择并从查找表中获取响应动作的系统。在实验中，RRE和静态IRS都被给定了一个具有六个叶节点的样本攻击-响应树，并基于此计算响应动作。RRE的响应动作选择已在前面详细说明；静态IRS将每个警报（即攻击-响应树中的一个叶节点）映射到一个响应动作，该动作以最小的成本重置特定叶节点。给定当前网络状态，我们比较了RRE和静态IRS在游戏结束时（即所有叶节点都已清理）花费的成本。由于篇幅限制，攻击-响应树参数和图形省略，但最终结果如下。我们将攻击者建模为完全智能的；换句话说，在每一步中，他或她采取最有害的敌对行动。总共有 \( 2^{|L|} = 64 \) 个起始场景（状态）用于两种不同的游戏方案。在第一种方案中，IRS和攻击者之间的动作比率为1；也就是说，对于响应系统采取的每一个动作，攻击者被允许选择一个敌对动作。正如预期的那样，在所有初始场景中，RRE选择最优动作所需的恢复成本小于或等于静态IRS的成本。在第二种游戏方案中，我们增强了攻击者的实力，并将动作比率设为1/2，这意味着对于IRS的每一个动作，攻击者被允许采取两个动作。在64个场景中的5个场景中，RRE导致的恢复成本高于其静态竞争对手，原因是RRE在假设动作比率为1的情况下选择最优响应动作。

#### 9. 相关工作
FLIPS[16]是一个基于主机的应用级防火墙，它使用选择性事务技术在实际执行前模拟选定的应用片段，并在检测到任何异常行为时采取静态响应动作。Musman等人[18]提出了SoSMART，它利用基于案例的推理将当前系统状态与之前识别的入侵情况相匹配。静态映射的响应选择方案使FLIPS和SoSMART在实现上高效且易于实施，但在动态变化的真实环境中灵活性较差。EMERALD[20]是一个动态协作响应系统，其中响应组件不仅分析IDS警报，还能与其在网络其他层的同僚通信。AAIRS[21]通过与IDS警报相关的置信度度量和与响应动作相关的成功度量提供适应性。尽管EMERALD和AAIRS提供了自动IRS的良好基础设施，但它们没有试图平衡入侵损害和恢复成本。αLADS[13]使用部分可观测的马尔可夫决策过程（POMDP）来处理不完整状态信息；然而，由于依赖本地响应和特定配置文件的IDS，αLADS不适用于通用分布式系统。Balepin等人[2]提出了一种自动IRS，它使用资源类型层次树和系统地图。αLADS和[2]中的IRS都容易被对手利用，因为它们在选择响应动作时没有考虑恶意攻击者的潜在下一步行动。博弈论在IRS相关上下文中也被以前的研究利用。Lye等人[17]将攻击者和管理员之间的交互建模为两人同时博弈，其中每个玩家在不知道对方策略的情况下做出决策；然而，在现实中，IDS帮助管理员在决定响应动作之前了解攻击者的行为，如同序贯博弈。Bloem等人创建的AOAR[4]用于决定是否将攻击转发给管理员或由自动化响应系统处理。单步博弈模型使得AOAR容易受到多步骤安全攻击的影响，在这种攻击中，攻击者通过精心选择的一系列单独看起来微不足道的敌对行动显著损害系统。ADEPTS[10]使用I-GRAPH（即入侵目标图）来确定入侵的传播和适当的响应。I-GRAPH和ART之间的一个细微但重要的区别在于前者根据入侵情景设计，而后者则基于后果，而不考虑导致这些后果的攻击情景。SARA[15]由多个组件组成，这些组件充当传感器、检测器、仲裁器（决策引擎）和响应者（响应实现）；然而，它没有研究特定的响应策略。

#### 10. 结论
本文介绍了一种基于博弈理论的入侵响应引擎——响应和恢复引擎（RRE）。我们将计算机网络的安全维护建模为一个Stackelberg随机双人博弈，其中攻击者和响应引擎分别试图通过采取最优敌对和响应动作来最大化自身利益。通过使用一种扩展的攻击树结构——攻击-响应树（ART），RRE明确考虑了IDS警报中的不准确性，从而估计系统的安全状态。此外，RRE在决定最优响应动作之前探索了有意的恶意攻击者的下一个可能行动空间，从而确保攻击者无法造成比RRE预测更大的损害。实验表明，RRE能对正在进行的攻击采取适当的对策，并以最低的成本将不安全的网络恢复到正常运行状态。

#### 致谢
本研究得到了美国国家科学基金会CNS-0524695号资助项目的支持，作为NSF/DOE/DHS可信网络基础设施电力中心（http://tcip.iti.illinois.edu）的一部分。

#### 参考文献
[1] A. Avizienis, J. Laprie, B. Randell, and C. Landwehr. Basic concepts and taxonomy of dependable and secure computing. IEEE Trans. on Dep. and Sec. Comp., 1:11–33, 2004.
[2] I. Balepin, S. Maltsev, J. Rowe, and K. Levitt. Using specification-based intrusion detection for automated response. Proc. of the Int’l Symp. on Recent Advances in Intrusion Detection, pages 136–54, 2003.
[3] R. Bellman. Dynamic Programming. Princeton University Press, 1957; republished 2003.
[4] M. Bloem, T. Alpcan, and T. Basar. Intrusion response as a resource allocation problem. Proc. of Conf. on Decision and Control, pages 6283–8, 2006.
[5] A. Cassandra. Exact and Approximate Algorithms for Partially Observable Markov Decision Processes. PhD thesis: Brown University, 1998.
[6] F. Cohen. Simulating cyber attacks, defenses, and consequences. Journal of Comp. and Sec., 18:479–518, 1999.
[7] T. Dean, L. Kaelbling, J. Kirman, and A. Nicholson. Planning under time constraints in stochastic domains. Artificial Intelligence, 76:35–74, 1995.
[8] J. Filar and K. Vrieze. Competitive Markov Decision Processes. Springer-Verlag, 1997.
[9] B. Foo, M. Glause, G. Howard, Y. Wu, S. Bagchi, and E. Spafford. Information assurance: Dependability and Security in Networked Systems. Morgan Kaufmann, 2007.
[10] B. Foo, Y. Wu, Y. Mao, S. Bagchi, and E. Spafford. ADEPTS: Adaptive intrusion response using attack graphs in an e-commerce environment. Proc. of Dependable Systems and Networks, pages 508–17, 2005.
[11] S. Hsu and A. Arapostathis. Competitive Markov decision processes with partial observation. Proc. of IEEE Int. Conf. on Systems, Man and Cybernetics, 1:236–41, 2004.
[12] L. Kaelbling, M. Littman, and A. Cassandra. Partially observable Markov decision processes for artificial intelligence. Proc. of the German Conference on Artificial Intelligence: Advances in Artificial Intelligence, 981:1–17, 1995.
[13] O. P. Kreidl and T. M. Frazier. Feedback control applied to survivability: A host-based autonomic defense system. IEEE Trans. on Reliability, 53:148–66, 2004.
[14] C. Kruegel, W. Robertson, and G. Vigna. Using alert verification to identify successful intrusion attempts. Info. Processing and Communication, 27:220–8, 2004.
[15] S. Lewandowski, D. Hook, G. O’Leary, J. Haines, and M. Rossey. SARA: Survivable autonomic response architecture. Proc. of the DARPA Info. Survivability Conf. and Exposition II, 1:77–88, 2001.
[16] M. Locasto, K. Wang, A. Keromytis, and S. Stolfo. FLIPS: Hybrid adaptive intrusion prevention. Proc. of the Symp. on Recent Advances in Intrusion Detection, pages 82–101, 2005.
[17] K. Lye and J. Wing. Game strategies in network security. Int’l Journal of Info. Security, 4:71–86, 2005.
[18] S. Musman and P. Flesher. System or security managers adaptive response tool. Proc. of the DARPA Info. Survivability Conf. and Exposition, 2:56–68, 2000.
[19] G. Owen. Game Theory. Academic Press, 1995.
[20] P. Porras and P. Neumann. EMERALD: Event monitoring enabling responses to anomalous live disturbances. Proc. of the Info. Systems Security Conf., pages 353–65, 1997.
[21] D. Ragsdale, C. Carver, J. Humphries, and U. Pooch. Adaptation techniques for intrusion detection and intrusion response systems. Proc. of the IEEE Int’l Conf. on Systems, Man, and Cybernetics, pages 2344–9, 2000.
[22] R. Rehman. Intrusion Detection Systems with Snort. Prentice-Hall, 2003.
[23] B. Schneier. Secrets & Lies: Digital Security in a Networked World. John Wiley & Sons, 2000.
[24] A. Somayaji and S. Forrest. Automated response using system call delay. Proc. of the USENIX Security Symp., pages 185–97, 2000.
[25] E. Sondik. The Optimal Control of Partially Observable Markov Processes. PhD Thesis: Stanford University, 1971.
[26] N. Stakhanova, S. Basu, and J. Wong. A taxonomy of intrusion response systems. Int’l Journal on Info. and Computer Security, pages 169–84, 2007.
[27] A. Valdes and K. Skinner. Adaptive, model-based monitoring for cyber attack detection. Proc. of the Recent Advances in Intrusion Detection, pages 80–92, 2000.
[28] G. White, E. Fisch, and U. Pooch. Cooperating security managers: A peer-based intrusion detection system. IEEE Network, pages 20–3, 1996.

---