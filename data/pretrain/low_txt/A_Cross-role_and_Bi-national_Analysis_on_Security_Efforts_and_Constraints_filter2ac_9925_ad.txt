### 4.5.3 Developers and Managers

We conducted the same analysis for participants in Japan as described in Sections 4.4.1 and 4.4.2, and compared the results with those from participants in the US. Our comparison of security constraints between developers and managers in Japan revealed significant differences in "Unconcerned about security" (U = 18029.0, p < .05, r = 0.12) and "No authority/Conservative" (U = 21751.0, p < .01, r = 0.32). Similarly, in the US, a large difference was observed in "No authority/Conservative," indicating that developers feel more constrained than managers. We found that C8 ("Decision-making is difficult") ranked 2nd and 5th for managers and developers, respectively, suggesting that this is a strong constraint common to both roles, similar to the findings in the US. Additionally, C10 ("No decision-making authority") was the most strongly felt constraint by developers in Japan, with 57% selecting "Strongly agree" or "Agree."

We analyzed the responses of participants in Japan to assess their understanding of the overall security efforts in their projects. Similar to the US, developers in Japan were more likely to answer "Not sure" to questions E1–E15 compared to managers. In Japan, 9.7% of participants selected "Not sure" for these questions, which is significantly higher than the 3.5% in the US. This suggests that developers in Japan have a lower understanding of the overall security efforts in their projects.

In summary, the following points are common between the US and Japan:
- Both developers and managers feel strongly constrained by difficulties in decision-making.
- Developers feel strongly constrained by their lack of decision-making authority.
- Developers tend to have a lesser understanding of the overall security efforts in their projects compared to managers.

### 5. DISCUSSIONS

Based on the findings of our user study, we provide suggestions for secure software development in projects and for research studies targeting software development. We also describe the limitations of our survey.

#### 5.1 Implications

**Improving Software Security Equally Regardless of User Scope:**
In Section 4.3.1, we found that professionals developing software for limited and specific users tend to apply fewer security measures than those developing software for the general public. As noted by Assel et al. [5], security measures involve a trade-off between cost and expected benefits. It is intuitive that software with a low risk of attack (i.e., software for specific users) tends to have fewer security measures. However, recent software development processes should avoid applying insufficient security measures due to the assumption that the system is closed and trusted. The concept of Zero Trust [27] is now pervasive across industries, changing security from traditional perimeter-based approaches to eliminating default trust for both internal and external parties. There have been numerous reports of systems developed for specific users being attacked by outsiders, such as advanced persistent threats (APTs) that exploit internal systems. Therefore, software must be developed based on the zero-trust security model.

**Supporting Security-Related Decision-Making in Software Development:**
According to the results in Sections 4.4.1 and 4.4.2, developers often lack knowledge of the overall security measures in their projects or the authority to implement them. When considering software security, it is crucial to engage managers who have decision-making authority. Additionally, the difficulty in decision-making can hinder secure software development, so managers need support in this process. One approach is to design metrics that can serve as indicators for security-related decisions, such as metrics for potential vulnerability risk based on the degree of dependency on third-party components [24]. If these metrics can be easily calculated and effectively communicated to managers, they may reduce the difficulties in security-related decision-making.

The results in Section 4.4.1 indicate that managers tend to feel less constrained about security than developers. This discrepancy within the development team can hinder the smooth implementation of security measures. If managers do not recognize the importance of security measures or the actual impediments to adopting them, proper security measures may not be taken. One developer's open-ended response highlighted this issue: "Getting the client, managers, and development team to be on the same page has always been a difficult task." To address this, interventions can be conducted to share the security concerns of developers with managers.

In supporting decision-making, it is necessary to consider not only the roles of people involved in the development project but also the stakeholders. From the results in Section 4.3.2, we found that it is important to approach the organization with decision-making authority (e.g., the customer or prime contractor), as subcontractors often lack the discretion to implement security measures. Reaching out to higher-level stakeholders in the contract hierarchy is particularly effective in Japan, where many contract developments are conducted.

**Suggestions for Designing User Studies for Software Development Professionals:**
Two key points from this study should be considered in future research on software developers:
1. Developers often do not fully understand the implementation of security measures in their projects.
2. Developers frequently lack the authority to make decisions about implementing security measures.

Usable security research has pointed out the ecological validity of findings, i.e., the extent to which research findings generalize to real-world settings [2, 26]. To improve ecological validity, two factors have been discussed: participant demographics [2, 26] and experimental context [2, 38]. While previous research has investigated computer science students, freelancers, and company developers, we shed new light on managers in this study. Although much research has focused on people involved in software development in the context of usable security, few studies [30, 32, 36] have distinguished between managers and developers as different participant demographics or analyzed differences in their awareness and behaviors. When designing surveys for software development professionals, it is essential to consider the characteristics of developers and managers and select and recruit appropriate participants who suit the purpose and content of the survey.

#### 5.2 Limitations

**Social Desirability Bias:**
Our results are based on self-reported data from participants. Security questions may be subject to social desirability bias (SDB), where participants give socially preferred answers depending on their affiliation and position. To reduce the impact of SDB, we explained at the beginning of the questionnaire that the survey would be conducted anonymously and that all questions were voluntary. There were a small number of empty responses, particularly for A2, E2, and C4, which may have been perceived as indirectly asking about security weaknesses in their projects.

**Limited Countries Investigated:**
In this work, we aimed to understand the characteristics of software development more generally by investigating two countries (US and Japan). Future work should comparatively study more countries, such as European ones, to yield more generic results.

**Various Roles of Managers:**
We targeted managers with security-related decision-making authority. In general, managerial positions in organizations are hierarchical and diverse, with various managers having different privileges. By disaggregating the types of managers surveyed, we can better understand how people in different roles and positions within a project impact security.

### 6. CONCLUSION

In this study, we conducted an online survey of individuals involved in software development projects. Our analysis of the survey results revealed that the characteristics of development and the positions of software development professionals significantly impact software security. Among these characteristics, the lack of security-related decision-making authority and the difficulty in making decisions strongly influence software security. Therefore, when considering security measures for software development professionals, it is important to engage the people or organizations with decision-making authority (e.g., managers, project clients). Additionally, there is a gap in security awareness between developers and managers in a project, which must be considered when designing surveys targeting software development professionals.

### REFERENCES

[1] Yasemin Acar, Michael Backes, Sascha Fahl, Doowon Kim, Michelle L. Mazurek, and Christian Stransky. 2018. You get where you’re looking for: The impact of information sources on code security. In Proceedings of the 2016 IEEE Symposium on Security and Privacy (SP ’16). IEEE.

[2] Yasemin Acar, Sascha Fahl, and Michelle L. Mazurek. 2016. You are not your developer, either: A research agenda for usable security and privacy research beyond end users. In Proceedings of the 2016 IEEE Cybersecurity Development (SecDev ’16). IEEE, 3–8.

[3] Yasemin Acar, Christian Stransky, Dominik Wermke, Charles Weir, Michelle L. Mazurek, and Sascha Fahl. 2017. Developers Need Support, Too: A Survey of Security Advice for Software Developers. In Proceedings of the 2017 IEEE Cybersecurity Development (SecDev ’17). IEEE.

[4] Noura Alomar, Primal Wijesekera, Edward Qiu, and Serge Egelman. 2020. “You’ve Got Your Nice List of Bugs, Now What?” Vulnerability Discovery and Management Processes in the Wild. In Proceedings of the 16th Symposium on Usable Privacy and Security (SOUPS ’20). USENIX Association, 319–339.

[5] Hala Assal and Sonia Chiasson. 2018. Security in the Software Development Lifecycle. In Proceedings of the 14th Symposium on Usable Privacy and Security (SOUPS ’18). USENIX Association.

[6] Hala Assal and Sonia Chiasson. 2019. “Think Secure from the Beginning”: A Survey with Software Developers. In Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems (CHI ’19). ACM.

[7] Dejan Baca, Martin Boldt, Bengt Carlsson, and Andreas Jacobsson. 2015. A Novel Security-Enhanced Agile Software Development Process Applied in an Industrial Setting. In Proceedings of the 10th International Conference on Availability, Reliability and Security (ARES ’15). 11–19.

[8] Steffen Bartsch. 2011. Practitioners’ Perspectives on Security in Agile Development. In Proceedings of the 6th International Conference on Availability, Reliability and Security (ARES ’11). IEEE, 479–484.

[9] Jens Dibbern, Tim Goles, Rudy Hirschheim, and Bandula Jayatilaka. 2004. Information Systems Outsourcing: A Survey and Analysis of the Literature. SIGMIS Database 35, 4 (2004), 6–102.

[10] Leandre R. Fabrigar, Duane T. Wegener, Robert C. MacCallum, and Erin J. Strahan. 1999. Evaluating the use of exploratory factor analysis in psychological research. Psychological Methods 4, 3 (1999), 272.

[11] Viktoria Felmetsger, Ludovico Cavedon, Christopher Kruegel, and Giovanni Vigna. 2010. Toward automated detection of logic vulnerabilities in web applications. In Proceedings of the 19th USENIX Conference on Security Symposium (SEC ’10). USENIX Association, 143–160.

[12] Felix Fischer, Konstantin Böttinger, Huang Xiao, Christian Stransky, Yasemin Acar, Michael Backes, and Sascha Fahl. 2017. Stack Overflow Considered Harmful? The Impact of Copy&Paste on Android Application Security. In Proceedings of the 2017 IEEE Symposium on Security and Privacy (SP ’17). IEEE, 121–136.

[13] Felix Fischer, Huang Xiao, Ching-Yu Kao, Yannick Stachelscheid, Benjamin Johnson, Danial Razar, Paul Fawkesley, Nat Buckley, Konstantin Böttinger, Paul Muntean, and Jens Grossklags. 2019. Stack Overflow Considered Helpful! Deep Learning Security Nudges Towards Stronger Cryptography. In Proceedings of the 28th USENIX Conference on Security Symposium (SEC ’19). USENIX Association, 339–356.

[14] Gartner. Newsroom (In Japanese). www.gartner.com/jp/newsroom/press-releases/pr-20190221.

[15] Gartner. Results Summary: Agile in the Enterprise 2019. https://circle.gartner.com/Portals/2/Resources/pdf/Agile in the Enterprise 2019 - Results Summary (updated).pdf.

[16] Sonja Glumich, Juanita Riley, Paul Ratazzi, and Amanda Ozanam. 2018. BP: Integrating Cyber Vulnerability Assessments Earlier into the Systems Development Lifecycle: A Methodology to Conduct Early-Cycle Cyber Vulnerability Assessments. In Proceedings of the 2018 IEEE Cybersecurity Development (SecDev ’18). IEEE.

[17] Peter Leo Gorski, Luigi Lo Iacono, Dominik Wermke, Christian Stransky, Sebastian Moeller, Yasemin Acar, and Sascha Fahl. 2018. Developers Deserve Security Warnings, Too: On the Effect of Integrated Security Advice on Cryptographic API Misuse. In Proceedings of the 14th Symposium on Usable Privacy and Security (SOUPS ’18). USENIX Association.

[18] Brent Dale Hill. 2011. Sequential Kaiser-meyer-olkin Procedure as an Alternative for Determining the Number of Factors in Common-factor Analysis: a Monte Carlo Simulation. Ph.D. Dissertation. Oklahoma State University.

[19] Luigi Lo Iacono and Peter Leo Gorski. 2017. I Do and I Understand. Not Yet True for Security APIs. So Sad. In Proceedings of the 2nd European Workshop on Usable Security (EuroUSEC ’17).

[20] Faris Bugra Kokulu, Ananta Soneji, Tiffany Bao, Yan Shoshitaishvili, Ziming Zhao, Adam Doupé, and Gail-Joon Ahn. 2019. Matched and Mismatched SOCs: A Qualitative Study on Security Operations Center Issues. In Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security (CCS ’19). ACM.

[21] V. Benjamin Livshits and Monica S. Lam. 2005. Finding Security Vulnerabilities in Java Applications with Static Analysis. In Proceedings of the 14th Conference on USENIX Security Symposium (SSYM ’05). USENIX Association, 18.

[22] Siqi Ma, David Lo, Teng Li, and Robert H. Deng. 2016. CDRep: Automatic Repair of Cryptographic Misuses in Android Applications. In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security (ASIA CCS ’16). ACM.

[23] Macromill Group. 2020. https://group.macromill.com/.

[24] Fabio Massacci and Ivan Pashchenko. 2021. Technical Leverage in a Software Ecosystem: Development Opportunities and Security Risks. In Proceedings of the 43rd International Conference on Software Engineering (ICSE ’21). IEEE.

[25] Ministry of Internal Affairs and Communications. 2019. White Paper on Information and Communications (In Japanese). https://www.soumu.go.jp/johotsusintokei/whitepaper/ja/r01/html/nd112210.html.

[26] Alena Naiakshina, Anastasia Danilova, Eva Gerlitz, and Matthew Smith. 2020. On Conducting Security Developer Studies with CS Students: Examining a Password-Storage Study with CS Students, Freelancers, and Company Developers. In Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems (CHI ’20). ACM, 1–13.

[27] National Institute of Standards and Technology. 2020. Zero Trust Architecture. https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf.

[28] Duc Cuong Nguyen, Dominik Wermke, Yasemin Acar, Michael Backes, Charles