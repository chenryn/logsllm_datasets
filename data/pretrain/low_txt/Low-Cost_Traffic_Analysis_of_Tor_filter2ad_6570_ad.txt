### Artifacts Under Investigation

**Figure 6. Artifacts under investigation**

The tear-down of a connection can be tracked through the network, providing information about the route of the connection. In addition to the precise load information extracted from probe traffic, secondary traffic artifacts can also be used for traffic analysis and to determine which Tor server is relaying the target traffic. Therefore, a strategy to eliminate information leakage into other streams should also aim to eliminate these artifacts.

### Conclusions

We have presented an attack against Tor, a widely deployed and well-used anonymizing protocol. This attack can be executed by a modest adversary with capabilities within the restricted Tor threat model. In fact, we demonstrate that the anonymizing network itself can be utilized to route probe traffic and gather information that would otherwise only be available to a global passive adversary.

In November 2004, we conducted extensive experiments on current Tor nodes and found them to be vulnerable to this attack. The following code snippet illustrates the main loop of the Tor software, highlighting the polling mechanism:

```c
/* Tor main loop */
for(;;) {
    timeout = prepare_for_poll();
    ...
    /* poll until we have an event, or the second ends */
    poll_result = tor_poll(poll_array, nfds, timeout);
    ...
    /* do all the reads and errors first, so we can detect closed sockets */
    for(i=0; i<nfds; i++) {
        /* this also marks broken connections */
        conn_read(i);
    }
    /* then do the writes */
    for(i=0; i<nfds; i++) {
        conn_write(i);
    }
    /* any of the conns need to be closed now? */
    for(i=0; i<nfds; i++) {
        conn_close_if_marked(i);
    }
    ...
}

/* Read from connection */
static void conn_read(int i) {
    ...
    if(!(poll_array[i].revents & (POLLIN|POLLHUP|POLLERR))) {
        if(!connection_is_reading(conn) || !connection_has_pending_tls_data(conn)) {
            return; /* this conn should not read */
        }
    }
    ...
    if (connection_handle_read(conn) < 0) {
        ...
    }
}
```

**Figure 5. The Tor 0.0.9 polling code**

Two examples of traffic patterns that could be used for traffic analysis if linked with specific states of the Tor nodes are shown in Figure 6. Figure 6(a) presents the results of probes against an exit node in the Tor network. The top graph shows the latency over time of the probe traffic, while the bottom graph represents the times when the corrupt server was sending data. The latency of the probes appears to be quantized into four or five bands, even when a high volume of traffic is injected. This quantization could be due to the lack of precision in the measurement process or the formation of bands by measuring the node when one, two, three, or four other streams are being served. This matches the experimental data: only four clusters are visible when the corrupt server is not relaying, and five when the stream is present. This technique could be developed to extract information about the number of relayed streams and infer the beginning and termination of a stream.

**Figure 6(b)** illustrates a different type of traffic pattern. After the last burst of traffic from the corrupt server, the latency of the probe traffic exhibits a peculiar pattern, rising six times before falling back to the average latency. This event has been observed multiple times in conjunction with the closure of a Tor connection and may be due to the time devoted to tearing down connections. If such events can be observed, the connection teardown can be tracked.

### Implications

Our attack does not allow us to trace the actual originator of the communication, as we cannot observe who is connected to a Tor node. However, it significantly degrades the anonymity provided by Tor by enabling adversaries to discover the path of a Tor connection, thereby reducing the protection to the level provided by a collection of simple proxy servers. We expect similar attacks to be applicable to other low-latency anonymizing network designs, as none have been specifically hardened against such attacks.

Furthermore, since Tor reuses the same path for multiple streams within a short time interval, our attacks allow different operations to be linked to the same initiator with greater certainty. The observable path of each stream can act as an identifier or identity that links streams among themselves and to the initiator, making Tor weaker than a simple proxy in protecting the unlinkability of actions.

We discussed several strategies to protect Tor against our attacks, all of which involve, to some degree, an increase in the latency of the communication. These strategies highlight the need for a comprehensive covert-channel analysis of anonymizing networks to assess whether any information that could be used for traffic analysis is leaked to other potentially observable streams.

This attack brings the field of anonymous communications closer to more traditional computer security disciplines. On one hand, we show that the literature on covert channel analysis and elimination is directly applicable and necessary to truly secure Tor. On the other hand, our attack relies on using Tor nodes as oracles that disclose their load, thus not requiring a global observer. Similar techniques have been used in the past to break cryptographic protocols by using and combining the services they provide. This is the first time such techniques have been applied to the traffic analysis of anonymous communication systems.

### Acknowledgements

Paul Syverson and Roger Dingledine, part of the team that designed Tor, provided us with valuable feedback and information regarding the architecture of Tor and the true impact of our attacks. This work would not have been possible without the dedication of the volunteers running Tor nodes. George Danezis is supported by the Cambridge-MIT Institute (CMI) project on 'Third generation peer-to-peer networks' and part of this work was done while visiting MIT CSAIL and the Brown University Watermyn Coop. Steven J. Murdoch is supported by a scholarship from the Carnegie Trust for the Universities of Scotland.

### References

[1] A. Acquisti, R. Dingledine, and P. F. Syverson:. On the economics of anonymity. In R. N. Wright, editor, Financial Cryptography, volume 2742 of Lecture Notes in Computer Science, pages 84–102. Springer, 2003.

[2] D. Agrawal, D. Kesdogan, and S. Penz. Probabilistic treatment of mixes to hamper traffic analysis. In IEEE Symposium on Security and Privacy, pages 16–27, Berkeley, CA, USA, May 2003. IEEE Computer Society.

[3] A. Alsaid and D. Martin. Detecting web bugs with bugnosis: Privacy advocacy through education. In Privacy Enhancing Technologies (PET 2002), San Francisco, CA, May 2002.

[4] A. Back, I. Goldberg, and A. Shostack. Freedom systems 2.1 security issues and analysis. White paper, Zero Knowledge Systems, Inc., May 2001.

[5] A. Back, U. Moller, and A. Stiglic. Traffic analysis attacks and trade-offs in anonymity providing systems. In I. S. Moskowitz, editor, Information Hiding workshop (IH 2001), volume 2137 of LNCS, pages 245–257. Springer-Verlag, April 2001.

[6] O. Berthold, H. Federrath, and S. Kopsell. Web MIXes: A system for anonymous and unobservable Internet access. In H. Federrath, editor, Designing Privacy Enhancing Technologies, volume 2009 of LNCS, pages 115–129. Springer-Verlag, July 2000.

[7] A. Blum, D. Song, and S. Venkataraman. Detection of interactive stepping stones: Algorithms and confidence bounds. In Recent Advances in Intrusion Detection: 7th International Symposium, RAID 2004, Sophia Antipolis, France, September 2004.

[8] R. Bohme, G. Danezis, C. Diaz, S. Kopsell, and A. Pfitzmann. Mix cascades vs. peer-to-peer: Is one concept superior? In Privacy Enhancing Technologies (PET 2004), Toronto, Canada, May 2004.

[9] P. Boucher, A. Shostack, and I. Goldberg. Freedom systems 2.0 architecture. White paper, Zero Knowledge Systems, Inc., December 2000.

[10] D. Chaum. Untraceable electronic mail, return addresses, and digital pseudonyms. Communications of the ACM, 24(2):84–88, February 1981.

[11] B. Chun, D. Culler, T. Roscoe, A. Bavier, L. Peterson, M. Wawrzoniak, and M. Bowman. PlanetLab: An Overlay Testbed for Broad-Coverage Services. ACM SIGCOMM Computer Communication Review, 33(3), July 2003.

[12] R. Clayton, G. Danezis, and M. G. Kuhn. Real world patterns of failure in anonymity systems. In I. S. Moskowitz, editor, Information Hiding, 4th International Workshop, volume 2137 of LNCS, pages 230–245. Springer-Verlag, April 2001.

[13] G. Danezis. Statistical disclosure attacks. In Gritzalis, Vimercati, Samarati, and Katsikas, editors, Security and Privacy in the Age of Uncertainty, (SEC2003), pages 421–426, Athens, May 2003. IFIP TC11, Kluwer.

[14] G. Danezis. The traffic analysis of continuous-time mixes. In Proceedings of Privacy Enhancing Technologies workshop (PET 2004), volume 3424 of LNCS, May 2004.

[31] I. S. Moskowitz, R. E. Newman, D. P. Crepeau, and A. R. Miller. Covert channels and anonymizing networks. In Workshop on Privacy in the Electronic Society (WPES 2003), Washington, DC, USA, October 2003.

[32] I. S. Moskowitz, R. E. Newman, and P. F. Syverson. Quasi-anonymous channels. In Communication, Network, and Information Security (CNIS 2003), New York, USA, 10–12 December 2003.

[33] A. Pfitzmann, B. Pfitzmann, and M. Waidner. ISDN-mixes: Untraceable communication with very small bandwidth overhead. In W. Effelsberg, H. W. Meuer, and G. Muller, editors, GI/ITG Conference on Communication in Distributed Systems, volume 267 of Informatik-Fachberichte, pages 451–463. Springer-Verlag, February 1991.

[34] R Development Core Team. R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria, 2004. ISBN 3-900051-07-0. http://www.R-project.org/.

[35] M. G. Reed, P. F. Syverson, and D. M. Goldschlag. Anonymous connections and onion routing. IEEE Journal on Selected Areas in Communications, 16(4):482–494, May 1998.

[36] M. Rennhard and B. Plattner. Introducing MorphMix: Peer-to-Peer based Anonymous Internet Usage with Collusion Detection. In Workshop on Privacy in the Electronic Society (WPES 2002), Washington, DC, USA, November 2002.

[37] G. Rieger et al. socat – multipurpose relay. http://www.dest-unreach.org/socat/.

[38] A. Serjantov and P. Sewell. Passive attack analysis for connection-based anonymity systems. In European Symposium on Research in Computer Security (ESORICS 2003), Gjovik, Norway, 13–15 October 2003.

[39] P. F. Syverson, G. Tsudik, M. G. Reed, and C. E. Landwehr. Towards an analysis of onion routing security. In H. Federrath, editor, Designing Privacy Enhancing Technologies, volume 2009 of LNCS, pages 96–114, Berkeley, CA, USA, 25-26 July 2000. Springer-Verlag.

[40] J. Young and E. M. On obtaining “lawful interception” documents. http://www.quintessenz.org/etsi.

[41] Y. Zhang and V. Paxson. Detecting stepping stones. In 9th USENIX Security Symposium, August 2000.

[42] Y. Zhu, X. Fu, B. Graham, R. Bettati, and W. Zhao. On flow correlation attacks and countermeasures in mix networks. In Proceedings of Privacy Enhancing Technologies workshop (PET 2004), volume 3424 of LNCS, May 2004.

[15] G. Danezis, R. Dingledine, and N. Mathewson. Mixminion: Design of a type III anonymous remailer protocol. In IEEE Symposium on Security and Privacy, Berkeley, CA, 11-14 May 2003.

[16] W. Diffie and M. E. Hellman. New directions in cryptography. IEEE Transactions on Information Theory, IT-22(6):644–654, 1976.

[17] R. Dingledine and N. Mathewson. Tor spec. Technical report, The Free Haven Project, October 20, 2004. http://www.freehaven.net/tor/cvs/doc/tor-spec.txt.

[18] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The second-generation onion router. In Proceedings of the 13th USENIX Security Symposium, August 2004.

[19] R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P. Leach, and T. Berners-Lee. Hypertext transfer protocol – HTTP/1.1. RFC 2616, Network Working Group, June 1999.

[20] M. J. Freedman and R. Morris. Tarzan: A peer-to-peer anonymizing network layer. In V. Atluri, editor, ACM Conference on Computer and Communications Security (CCS 2002), pages 193–206, Washington, DC, November 2002. ACM.

[21] M. J. Freedman, E. Sit, J. Cates, and R. Morris. Introducing tarzan, a peer-to-peer anonymizing network layer. In P. Druschel, M. F. Kaashoek, and A. I. T. Rowstron, editors, International workshop on Peer-to-Peer Systems (IPTPS), volume 2429 of LNCS, pages 121–129, Cambridge, MA, March 2002. Springer-Verlag.

[22] V. D. Gligor. A Guide to Understanding Covert Channel Analysis of Trusted Systems. National Computer Security Center, 1993. NCSC-TG-030, Version 1.

[23] I. Goldberg. A Pseudonymous Communications Infrastructure for the Internet. PhD thesis, UC Berkeley, December 2000.

[24] D. M. Goldschlag, M. G. Reed, and P. F. Syverson. Onion routing. Communications of the ACM, 42(2):39–41, 1999.

[25] Guirguis, Mina, Bestavros, Azer, and I. Matta. Exploiting the Transients of Adaptation for RoQ Attacks on Internet Resources. In Proceedings of ICNP’04: The 12th IEEE International Conference on Network Protocols, Berlin, Germany, October 2004.

[26] C. Gulcu and G. Tsudik. Mixing E-mail with Babel. In Network and Distributed Security Symposium — NDSS ’96, pages 2–16, San Diego, California, February 1996. IEEE.

[27] D. Kesdogan, D. Agrawal, and S. Penz. Limits of anonymity in open environments. In F. A. P. Petitcolas, editor, Information Hiding workshop (IH 2002), volume 2578 of LNCS, pages 53–69, Noordwijkerhout, The Netherlands, 7-9 October 2002. Springer-Verlag.

[28] B. N. Levine, M. K. Reiter, C. Wang, and M. K. Wright. Timing attacks in low-latency mix-based systems. In A. Juels, editor, Proceedings of Financial Cryptography (FC ’04). Springer-Verlag, LNCS 3110, February 2004.

[29] N. Mathewson and R. Dingledine. Practical traffic analysis: Extending and resisting statistical disclosure. In Proceedings of Privacy Enhancing Technologies workshop (PET 2004), LNCS, May 2004.

[30] U. Moeller, L. Cottrell, P. Palfrader, and L. Sassaman. Mixmaster protocol version 2. Technical report, Network Working Group, May 25, 2004. Internet-Draft.