### Causes of Blocked Connections

At the time of writing, a blocked connection can occur due to one of two reasons:
1. Chrome requires Certificate Transparency (CT) compliance for the website's Certificate Authority (CA).
2. The website has opted into CT via the Expect-CT header.

#### 1. Current Impact
Currently, CT noncompliance has a negligible impact on end users. According to Chrome metrics for the week ending February 1, 2018, 100.0% of HTTPS connections and requests that required CT compliance were successfully compliant. Note that multiple HTTP requests can share a single HTTPS connection. CT compliance failures accounted for only 0.02% of all main-frame certificate errors, which are errors that occur when loading the main resource of a page. Therefore, CT-related main-frame errors represent a negligible fraction of all connections requiring CT compliance.

From late July 2018, Chrome began blocking connections if a website used a noncompliant certificate issued after April 2018 (Section II-C2). For the week ending September 2, 2018, CT compliance was required for 42.6% of connections, meaning these connections would be blocked if they were noncompliant. Of the connections that required CT compliance, 99.5% were successfully compliant. Similarly, 99.7% of HTTP requests that required CT were compliant. CT compliance failures represented 3.4% of all main-frame certificate errors during this period.

#### 2. Historical Impact
Historically, even when new CT requirements have been introduced, the immediate user impact has been minimal. For example, in fall 2016, Chrome began requiring CT compliance for certificates issued by the Symantec CA [14]. In the week ending September 9, 2016, shortly after the enforcement change, CT errors represented only 1.2% of all certificate errors. During this time, several popular websites were serving certificates with malformed Signed Certificate Timestamps (SCTs) that Chrome rejected. This issue was due to an option provided by the CA to strip full domain names from the certificates submitted to CT logs, resulting in SCTs that Chrome did not accept as valid. This option was intended for private internal domains but was accidentally selected by several large public websites [28].

Most instances of this error were quickly corrected: by the week ending October 14, 2016, CT errors had dropped to 0.3% of all certificate errors.

#### 3. Causes of Blocked Connections
CT-related breakage is relatively rare, but when it does occur, it is most commonly due to:
- The name-stripping option discussed above.
- A CA implementation error.
- A lack of CA support for CT.

We examined CT-caused certificate errors from the certificate error reports described in Section III-B. We used reports for CT errors that occurred during the week ending July 2, 2018, for Chrome 67 and the week ending September 2, 2018, for Chrome 68, the current Stable releases during these weeks, respectively.

The Chrome 67 dataset contained CT errors from 119 unique websites, and the Chrome 68 dataset contained 9,649. We manually inspected the 10 websites that caused the most CT errors during each week. For privacy reasons, we restricted this analysis to websites that had been visited by Googlebot. The following four causes of noncompliance were identified, as shown in Table III.

| **Chrome 67** | **Chrome 68** |
|---------------|---------------|
| **Name stripped** | 8 | 0 |
| **Not enough SCTs** | 1 | 0 |
| **Not diverse SCTs** | 0 | 10 |
| **No SCTs** | 0 | 1 |

- **Name stripping**: These websites serve malformed SCTs as part of the name-stripping option.
- **Not enough SCTs**: These websites serve certificates with embedded SCTs, but not enough as required by the Chrome CT policy. This likely represents a bug in the CA’s implementation of CT.
- **Not diverse SCTs**: These websites serve certificates with embedded SCTs, but they do not satisfy the log diversity requirement of the Chrome CT policy. Again, this likely represents a bug in the CA’s implementation of CT.
- **No SCTs**: These websites do not serve SCTs at all, indicating that their CAs have not yet implemented CT support despite Chrome’s requirement.

### Extended Validation (EV) Downgrades

If an EV certificate is not compliant with Chrome’s CT policy, Chrome removes the EV browser UI but does not block the connection. This restriction went into effect in early 2015. At the time of rollout, Chrome included a whitelist of EV certificates that had appeared in CT logs as of January 1, 2015, but did not have embedded SCTs. Certificates on this whitelist were treated as CT-compliant until June 2017, when the whitelist was removed. Chrome does not support EV on mobile platforms, so this section only includes data from desktop Chrome.

#### 1. Current Impact
Currently, EV downgrades are rare but not unheard-of. In the week ending February 1, 2018, EV status was removed for 1.0% of connections with EV certificates. 90% of these removals were due to an insufficient number of SCTs, and the remaining 10% failed to meet the log diversity requirement.

#### 2. Historical Impact
Since the EV CT requirement came into effect, the frequency of EV downgrades has always been low, as shown in Fig. 5. EV downgrades never exceeded 4% of connections with EV certificates. This result is largely thanks to the EV whitelist, which preserved the EV UI on more than 70% of connections initially and still accounted for about 7% of EV connections a year later.

The Chrome EV plan was announced in September 2013 [29], but most CAs did not begin embedding SCTs into EV certificates until the month before the January 2015 deadline. Fig. 6 shows the percentage of EV certificates issued each day with embedded SCTs, as observed in CT logs.

Some CAs continued to issue EV certificates after January 2015 without embedded SCTs, even though these certificates would not receive EV UI treatment unless the site owner served SCTs themselves via TLS extension or OCSP response. Table IV shows the count of EV certificates issued after January 1, 2015, without embedded SCTs, grouped by issuing organization. Some organizations are combined because they represent the same corporate entity. The table shows the 10 organizations that have issued the most EV certificates without embedded SCTs.

Fortunately, the end-user impact of these certificates has been low, perhaps because they are used on less popular websites or on websites that are not accessed by Chrome users. Prior work suggests that users may not even notice the absence of an EV indicator [30], [31].

### User Impact

In this section, we measure the user impact of CT in two key areas: the performance costs of SCT validation and the user experience when CT causes errors or breakage.

#### A. Performance

**SCT validation in Chrome:**
CT was designed to minimize performance impact by allowing clients to verify public key signatures from logs rather than blocking connections while communicating with the logs directly. In Chrome 69, SCT validation has a moderate performance impact compared to certificate validation.

For the week ending September 24, 2018, among HTTPS connections with SCTs, 99% of SCT validations complete in under 13.3 milliseconds, with a mean of 1.9 and median of 1.1 milliseconds. In comparison, certificate validations take 88 milliseconds on average, with a median of 14 milliseconds. Chrome caches the results of certificate validations, so the actual time spent validating certificates when setting up an HTTPS connection is 18 milliseconds on average, with a median of less than 1 millisecond. A similar optimization could be applied to SCT validation to reduce the performance impact of CT. In this design, Chrome would cache the results of SCT validations and would not repeat validation for the same set of certificate and SCTs when it has a result cached already.

**Performance issues in Firefox:**
Firefox’s experimental CT implementation has been blocked for over a year on an unresolved performance regression [32]. The underlying cause is not yet clear, and significant investigation and investment are needed before Firefox’s CT code will be enabled by default [33]. This issue demonstrates that CT deployment is a substantial investment for browser implementers, a hurdle that we discuss further in Section IX-B.

#### B. User Experience of Errors

Although users encounter CT errors rarely, they react to them in unsafe ways. These behaviors are especially concerning because CT errors tend to occur on security-sensitive sites.

**1. Error Clickthrough:**
Users bypass CT errors, choosing to proceed despite the security warning, at a much higher rate than other types of certificate errors. We note that the error UI is nearly identical across all types of certificate errors, and prior work has been successful at improving the UI’s adherence but not comprehension [34].

In the week ending July 2, 2018, users proceeded through 47.8% of CT errors shown in Chrome 67, compared to 28.0% of all bypassable certificate errors. (For comparison, users proceeded through 4.9% of Safe Browsing errors that warn about phishing or malware.)

Similarly, in Chrome 68, which began enforcing CT for newly issued certificates, during the week ending September 2, 2018, users proceeded through 49.0% of CT errors, compared to 28.2% of all bypassable certificate errors.

This finding underscores the need to deploy CT gradually with minimal breakage. Otherwise, users might learn to bypass certificate errors whenever they see them, undermining the security benefits of CT and HTTPS in general.

**2. Types of Affected Sites:**
Users experience CT errors most often on websites in important, security-sensitive domains, such as government portals and financial services. We manually categorized the top 10 websites that caused CT errors in Chrome from Table III. For the Chrome 67 websites, four were financial services, two were enterprise administrative portals, and one was a government site. Three lacked sufficient information for us to categorize them. Of the Chrome 68 websites, eight were government sites, one was a corporate login portal, and one could not be categorized. The Chrome 68 results are consistent with prior findings that government websites are disproportionately responsible for certificate errors in Chrome [18].

**3. Help Forum Case Studies:**
To further understand how CT errors impact end users, we reviewed CT-related posts in the Chrome product help forum as described in Section III-E. The Appendix contains the full results of our coding procedure.

Many of the help forum posts came from a Chrome bug during fall 2016. Out-of-date Chrome builds exhibited this bug by showing CT errors for large numbers of websites that were correctly CT-logged [35]. This incident, while not a CT compliance issue, provides insight into how users react to widespread CT errors and also demonstrates the complexity of building web browser support for CT (Section IX-B).

**Incorrect Solutions:**
60% of threads were labeled as “Incorrect fix or explanation suggested or tried, or issue was perceived to be solved by something unrelated.” (For comparison, CT was correctly identified as the source of the issue in 41% of the threads.) Users commonly disabled antivirus software, checked system date settings, or disabled extensions in an attempt to fix the error.

*Example:*
"I have tried resetting to default settings (so disabling all extensions)." [36]

In these scenarios, users lose their data and settings without resolving the issue. Users might also end up in a less secure state, for example, by disabling extensions that make their browsing more secure.

**Bypassing Errors:**
Users bypassed CT errors by clicking through the warning or by trying different browsers. In 8% of the threads, users mentioned that they clicked through the warning or tried to, and in 19% of the threads, users noted that affected websites worked in other browsers, or that they would consistently use another browser to access the affected sites.

*Example:*
"I had to download another browser, which I am starting to like." [36]

These responses show that browsers take a first-mover risk by implementing new security requirements such as CT: breakage could cause users to switch to other browsers. The tendency to switch browsers also demonstrates that other browsers must adopt CT to achieve its intended security benefits. Otherwise, in an attack using a noncompliant certificate, users might simply ignore the warning and switch to another browser that leaves them vulnerable.

**Poor User Experience:**
In 9% of threads, users expressed anger, frustration, or impatience, and in 9%, they mentioned a specific task (such as homework or bill-paying) that they could not complete because of the error.

*Example:*
"This makes it nearly impossible to manage bills." [37]

These threads demonstrate the generally poor user experience associated with CT errors.