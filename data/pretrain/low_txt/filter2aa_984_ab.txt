# Compromised Data and Regulatory Compliance

Any organization dealing with compromised data must address regulatory compliance. 

# Linux Application Security

All Linux applications are vulnerable to attacks, which is a significant concern.

©  Novell Inc.  All rights reserved

## Best Targets for AppArmor

- **Isolate all programs interacting with the outside world:**
  - An auto-scan tool identifies applications that should be profiled.
  - Profiles represent your total exposure and provide an auditable policy.

- **Networked Servers:**
  - Complex and not easily auditable for security.
  - May be closed source.
  - Prevents attacks on one component from spreading to other components or systems.

- **Business Applications:**
  - Profiles for desktop applications that process external data.
  - Separates these programs from other applications and data on the system.
  - Protects high-risk programs.

- **Corporate Desktop:**
  - Isolates all programs interacting with the outside world.
  - Comprehensive profile set defined for specific uses.
  - Limits misuse of machines.
  - AppArmor profiles for user sessions and executable apps.

- **POS Terminals, Kiosks:**
  - Similar isolation and protection as corporate desktops.

©  Novell Inc.  All rights reserved

## Capture the Flag (CtF) Competition History

### 2002
- **Target:** Red Hat, easily ported to Immunix.
- **Issues:** Too focused on Immunix, not enough on the game.
- **Outcome:** Delayed launching any server until it was running on Immunix. Placed 2nd, a good result for the first try.

### 2003
- **Target:** OpenBSD, took longer to port.
- **Issues:** SQL injection attacks, which AppArmor does not prevent.
- **Outcome:** Placed 3rd, a less favorable result.

### 2004
- **Target:** Windows.
- **Issues:** A weekend was insufficient time to port 5 applications from Windows to Linux under pressure.
- **Outcome:** Placed 4th, indicating a downward trend.

### 2005
- **Change in Management:** Kenshoto took over the game from Ghettohackers.
- **New Target:** Under Kenshoto's control, no more OS defensive techniques.
- **Focus Shift:** The CtF game now focused on binary code reverse engineering.

### 2007
- **Return to OS Focus:** 0tB/OtB brought the focus back to OS comparisons.

©  Novell Inc.  All rights reserved

## Application Least Privilege for Linux

### SELinux
- **Type Enforcement:**
  - Assign users or programs to domains.
  - Label files with types.
  - Write policies in terms of which domains can access which types.

### AppArmor
- **Pathnames:**
  - Name a program by its path.
  - When it runs, it can only access the files specified by pathname.
  - Generalize pathnames with shell syntax wildcards.

©  Novell Inc.  All rights reserved

## Label Splitting: SELinux

- **Post-it Note™ Security:**
  - Label files and programs with colored stickers.
  - Policy decides which colors can interact.
- **Equivalence Class:**
  - A single label in SELinux treats all files with that label identically.
- **Human Decision:**
  - Determine which files should have the same label and which need different labels.
- **Label Splitting:**
  - If incorrect, relabel all affected files and revise all policies referencing that label.

### AppArmor

- **Explicit Pathnames and Regular Expressions:**
  - Achieves the same as SELinux but with two key differences:
    - The class is evaluated at access time, checking new files against policy.
    - The class is local to a single profile, avoiding the need to relabel the entire system.

©  Novell Inc.  All rights reserved

## Network Storage

### SELinux
- **NFS-Mounted Volumes:**
  - Only supports all/nothing access control.
  - Relies on labels stored in extended attributes, which NFS2 and NFS3 do not support.
  - Applies a single label to the mount point.
  - Policies either grant or deny access to the entire NFS volume.

### AppArmor
- **No Extended Attributes:**
  - Can write fine-grained profiles that grant access to individual files on NFS volumes.

©  Novell Inc.  All rights reserved

## Creating Policy: SELinux vs. AppArmor

### SELinux
1. Create a file at `$SELINUX_SRC/domains/program/foo.te`.
2. Put the daemon domain macro call in the file.
3. Create the file contexts file.
4. Put the first list of file contexts in `file.fc`.
5. Load the new policy with `make load`.
6. Label the foo files.
7. Start the daemon, `service foo start`.
8. Examine the audit log for denial messages.
9. Familiarize yourself with the errors generated by the daemon.
10. Use `audit2allow` to generate the first round of policy rules.
11. Check if the `foo_t` domain tries to create a network socket.
12. Continue iterating through the basic steps to generate all necessary rules.
13. If the domain accesses `port_t`, determine the required port number.
14. Resolve remaining AVC denials and configure unique port requirements.
15. Determine the port used by the daemon.
16. Replace the generic `port_t` rule with a specific rule for the new port type based on the `foo_t` domain.

### AppArmor
1. Open YaST Control Center.
2. Run Server Analyzer to determine which programs to profile.
3. Run the Profile Wizard to generate a profile template.
4. Run the application through normal operation.
5. Use the interactive optimizer to synthesize log events into a profile.

©  Novell Inc.  All rights reserved

## Compare Resulting Policy: SELinux vs. AppArmor

### SELinux
```plaintext
#################################
#
# Rules for the ftpd_t domain 
#
type ftp_port_t, port_type;
type ftp_data_port_t, port_type;
daemon_domain(ftpd, `, auth_chkpwd')
type etc_ftpd_t, file_type, sysadmfile;
can_network(ftpd_t)
can_ypbind(ftpd_t)
allow ftpd_t self:unix_dgram_socket create_socket_perms;
allow ftpd_t self:unix_stream_socket create_socket_perms;
allow ftpd_t self:process {getcap setcap};
allow ftpd_t self:fifo_file rw_file_perms;
allow ftpd_t bin_t:dir search;
can_exec(ftpd_t, bin_t)
allow ftpd_t { sysctl_t sysctl_kernel_t }:dir search;
allow ftpd_t sysctl_kernel_t:file { getattr read };
allow ftpd_t urandom_device_t:chr_file { getattr read };
ifdef(`crond.te', `
system_crond_entry(ftpd_exec_t, ftpd_t)
can_exec(ftpd_t, { sbin_t shell_exec_t })
')
allow ftpd_t ftp_data_port_t:tcp_socket name_bind;
...
```

### AppArmor
```plaintext
/usr/sbin/in.ftpd {
  #include 
  #include 
  #include 
  #include 
  /                                 r,
  /dev/urandom                      r,
  /etc/fstab                        r,
  /etc/ftpaccess                    r,
  /etc/ftpconversions               r,
  /etc/ftphosts                     r,
  /etc/ftpusers                     r,
  /etc/shells                       r,
  /usr/sbin/in.ftpd                 r,
  /usr/share/ssl/certs/ca-bundle.crt        r,
  /usr/share/ssl/certs/ftpd-rsa.pem         r,
  /usr/share/ssl/private/ftpd-rsa-key.pem   r,
  /usr/share/ssl/.rnd               w,
  /var/log/xferlog                  w,
  /var/run                          wr,
  /var/run/ftp.{pids,rips}-all      wr,
}
```

### Summary
- **AppArmor Profile:**
  - About 4x smaller than SELinux.
  - Uses classical Linux syntax with read/write/execute permissions.
  - No new jargon.

©  Novell Inc.  All rights reserved

## SELinux New GUI Tools

- **Advanced GUIs:**
  - Enable and disable chunks of pre-written policies.
  - No help for authoring new policies.
  - Works well for software already profiled by others.
  - Problematic for in-house and 3rd party software.

- **AppArmor:**
  - Fundamental model, not just the GUI.

### AppArmor Roadmap

©  Novell Inc.  All rights reserved

## AppArmor Near-Term Development

- **Network Access Control:**
  - TCP/UDP-based network access control per process.
- **Profile Merge Tool:**
  - Merges two profiles into a single profile consisting of the union set of both.
- **Profile Sharing:**
  - Tools and portal for community sharing of AppArmor profiles.
- **Tomcat Support:**
  - AppArmor containment for Java servlets.
- **PAM change_hat:**
  - Strengthens security of AppArmor's role-based shell functionality for PAM-using applications (e.g., sshd, gdm, ftp).
- **CIM Providers:**
  - Standards-based CIM instrumentation for reporting, alerting, and profile state.

©  Novell Inc.  All rights reserved

## AppArmor Future Development

- **DB Armor:**
  - Access controls for database tables and files.
- **Default Policy:**
  - System-level list of resources accessible only through an AppArmor profile.
- **DBUS Event Advertising:**
  - Report security events via DBUS.
- **DBUS / HAL Event Mediation:**
  - Containment for the hardware abstraction layer.
- **IPC Mediation:**
  - Mediate inter-process communication.
- **Enterprise Management:**
  - Integration with Novell's enterprise management system.
- **Profile Lint:**
  - Tool for analyzing profiles for dangerous rules.
- **Resource Limits Mediation:**
  - Centralized profile development.

©  Novell Inc.  All rights reserved

## Availability

- **Bundled with:**
  - SLES10
  - SLED10
  - openSUSE 10.1, 10.2 ...
- **Open Source:**
  - GPL
  - http://opensuse.org/AppArmor
  - Mailing lists: apparmor-announce, apparmor-general, apparmor-dev
  - IRC: irc.oftc.net/#apparmor

©  Novell Inc.  All rights reserved

## AppArmor for Ubuntu

- **Ported by Magnus Runesson:**
  - http://www.linuxalert.org/ubuntu/apparmor/
- **Availability:**
  - In Universe for Feisty Fawn
  - Going into Main for Gutsy Gibbon
- **User Feedback:**
  - Very helpful for improving profiles.

©  Novell Inc.  All rights reserved

## AppArmor for Everyone

- **Gentoo Port:**
  - By Mathew Snelham
  - http://sigalrm.com/apparmor/apparmor-ebuilds_20061013
- **Debian:**
  - Should be easy to generate from the Ubuntu port.
  - Needs a maintainer.
  - AppArmor's ease of use makes it a good candidate for a de facto Linux security standard.

©  Novell Inc.  All rights reserved

## AppArmor for Debian

- **Ubuntu Port:**
  - By Magnus Runesson
  - http://www.linuxalert.org/ubuntu/apparmor/
  - In discussion for mainstream inclusion in future Ubuntu releases.
- **Gentoo Port:**
  - By Mathew Snelham
  - http://sigalrm.com/apparmor/apparmor-ebuilds_20061013
- **Debian:**
  - Should be easy to generate from the Ubuntu port.
  - Needs a maintainer.

©  Novell Inc.  All rights reserved

## AppArmor for Red Hat

- **Multiple Ports:**
  - To RH variants, but no public maintainers.
- **RHEL5 Port:**
  - By Steve Beattie @ SUSE
  - http://developer.novell.com/wiki/index.php/Special:Downloads/apparmor/Development_-_RHEL5_beta_2_packages/
  - http://software.opensuse.org/download/home:/steve-beattie/Fedora_Extras_6/
- **Seeking:**
  - A Red Hat/Fedora user to maintain the package.

©  Novell Inc.  All rights reserved