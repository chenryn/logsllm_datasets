### Characterization of Processor Opportunities for Reliability Monitoring

#### Benchmark Suite
The benchmarks used in this study include Gzip, Crafty, Bzip, Mcf, and Parser, in addition to the five benchmarks utilized in our FPGA emulations. These benchmarks are part of the SPEC CPU2000 suite.

#### Types of Opportunities
There are two types of opportunities that we focus on:
1. **Local Opportunities**: These occur when a specific Component Under Test (CUT) is idle. The duration and frequency of these opportunities can vary based on the application and the distribution of different instruction types in the execution trace.
2. **Global Opportunities**: These occur when multiple CUTs in the processor are simultaneously idle, such as after a branch misprediction or a cache miss, which flushes the entire pipeline.

#### Experimental Setup
Our experiments were conducted using a 4-wide issue out-of-order processor with a 16KB L1 data cache. We ran 10 benchmarks, each for one billion cycles, to measure the local and global opportunities.

#### Quantification of Opportunities
- **Local Opportunities**: We used detailed processor models with one floating-point multiplier/divider unit (FPMD), four integer ALUs, and one integer multiplier/divider (IMD). The duration and distance between successive idle periods for these units were measured to quantify local opportunities.
- **Global Opportunities**: We measured the duration and distance between idle periods for the entire pipeline, including the instruction fetch (IF), integer execution (EINT), and retirement (RE) stages. Additionally, we measured the distances between L1 data cache misses (L1 DCM), branch mispredictions (BMP), L2 cache misses (L2CM), and L1 instruction cache misses (L1 ICM).

#### Results
- **Figure 6(a)**: Shows the distribution of opportunity durations in terms of percentage of total execution cycles. The data for the four ALUs was averaged into one dataset.
- **Figure 6(b)**: Shows the distribution of distances between consecutive local and global opportunities. Both figures use a logarithmic scale for the vertical axis.

Most local and global opportunities have a duration of 10-100 cycles. Opportunities with durations below 10 cycles account for 0.8% of the total simulated cycles, while those with durations of 50-100 cycles account for 0.4%.

#### Utilization of Opportunities
- **Local Opportunities**: Since these opportunities often occur very close to each other, it is possible to spread a single test phase across two consecutive opportunity windows.
- **Global Opportunities**: These are more prevalent at both short and long distances, making them ideal for longer test phases.

#### WearMon: A Low-Cost Reliability Monitoring Framework
WearMon is designed to take advantage of the numerous test opportunities that exist but are not currently being utilized. By dynamically selecting and conducting tests during idle periods, WearMon minimizes performance overhead and ensures robust monitoring even in the presence of variations in operating conditions.

#### Related Work
- **Modeling and Prediction of Wearout Faults**: Previous works have focused on modeling wearout faults using device failure models [21, 17]. Others have proposed methods for error detection and correction, such as the DIVA checker [9] and self-calibrating online wearout detection [6].
- **Fault Tolerance and Reliability**: Works like BulletProof [11] and Razor [12] have explored defect-tolerant architectures and low-power pipeline designs, respectively.

#### Conclusions
As processor reliability becomes a critical design constraint, continuous monitoring and just-in-time activation of error detection and correction mechanisms are essential. WearMon provides a low-cost, adaptive framework for monitoring and testing, ensuring efficient and reliable operation across a range of computing platforms.

#### Acknowledgments
This work was supported by NSF grants CCF-0834798, CCF-0834799, and an IBM Faculty Fellowship.

#### References
[1] M. Agarwal, B. Paul, M. Zhang, and S. Mitra. Circuit failure prediction and its application to transistor aging. In 25th IEEE VLSI Test Symposium, pages 277-286, May 2007.
[2] M. Alam and S. Mahapatra. A comprehensive model of PMOS NBTI degradation. Microelectronics Reliability, 45(1):71-81, 2005.
[3] M. Annavaram, E. Grochowski, and P. Reed. Implications of device timing variability on full chip timing. Proceedings of the 13th International Symposium on High Performance Computer Architecture, pages 37-45, Feb 2007.
[4] T. Austin. DIVA: A reliable substrate for deep submicron microarchitecture design. Proceedings of the 32nd Annual International Symposium on Microarchitecture, pages 196-207, 1999.
[5] T. Austin, E. Larson, and D. Ernst. Simplescalar: An infrastructure for computer system modeling. Computer, 35(2):59-67, Feb 2002.
[6] J. Blome, S. Feng, S. Gupta, and S. Mahlke. Self-calibrating online wearout detection. In Proceedings of the 40th Annual IEEElACM International Symposium on Microarchitecture, pages 109-122, 2007.
[7] S. Borkar. Designing reliable systems from unreliable components: the challenges of transistor variability and degradation. Proceedings of the 38th Annual International Symposium on Microarchitecture, pages 10-16, Dec 2005.
[8] S. Borkar, T. Karnik, S. Narendra, J. Tschanz, A. Keshavarzi, and V. De. Parameter variations and impact on circuits and microarchitecture. Proceedings of the 40th Annual IEEElACM International Symposium on Microarchitecture, pages 197-208, 2005.
[9] F. Bower, D. Sorin, and S. Ozev. A mechanism for online diagnosis of hard faults in microprocessors. In Proceedings of the 38th annual IEEElACM International Symposium on Microarchitecture, pages 197-208, 2005.
[10] D. Brooks, V. Tiwari, and M. Martonosi. Wattch: A framework for architectural-level power analysis and optimization. SIGARCH Computer Architecture News, 28(2):83-94, 2000.
[11] K. Constantinides, S. Plaza, J. Blome, B. Zhang, V. Bertacco, S. Mahlke, T. Austin, and M. Orshansky. Bulletproof: A defect-tolerant CMP switch architecture. In The Twelfth International Symposium on High-Performance Computer Architecture, pages 5-16, Feb. 2006.
[12] D. Ernst, N. Kim, S. Das, S. Pant, R. Rao, T. Pham, and T. Mudge. Razor: A low-power pipeline based on circuit-level timing speculation. Proceedings of the 36th Annual International Symposium on Microarchitecture, pages 7-18, Dec. 2003.
[13] T. Fischer, E. Amirante, P. Huber, K. Hofmann, M. Ostermayr, and D. Schmitt-Landsiedel. A 65nm test structure for SRAM device variability and NBTI statistics. Solid-State Electronics, 53(7):773-778, 2009.
[14] M. Li, P. Ramachandran, U. Karpuzcu, S. Hari, and S. Adve. Accurate microarchitecture-level fault modeling for studying hardware faults. In Proceedings of the 15th International Symposium on High-Performance Computer Architecture, Feb 2009.
[15] X. Liang, G. Wei, and D. Brooks. Revival: A variation-tolerant architecture using voltage interpolation and variable latency. In 35th International Symposium on Computer Architecture, pages 191-202, June 2008.
[16] S. Rauch. Review and reexamination of reliability effects related to NBTI-induced statistical variations. Device and Materials Reliability, IEEE Transactions on, 7(4):524-530, Dec. 2007.
[17] J. Shin, V. Zyuban, Z. Hu, J. Rivers, and P. Bose. A framework for architecture-level lifetime reliability modeling. In Proceedings of the International Conference on Dependable Systems and Networks, pages 534-543, June 2007.
[18] S. Shyam, K. Constantinides, S. Phadke, V. Bertacco, and T. Austin. Ultra low-cost defect protection for microprocessor pipelines. In Proceedings of the 12th International Conference on Architectural Support for Programming Languages and Operating Systems, pages 73-82, Oct 2006.
[19] K. Skadron, M. Stan, W. Huang, S. Velusamy, K. Sankaranarayanan, and D. Tarjan. Temperature-aware microarchitecture. Proceedings of the 30th International Symposium on Computer Architecture, pages 276-287, June 2004.
[20] J. C. Smolens, B. T. Gold, J. C. Hoe, B. Falsafi, and K. Mai. Detecting emerging wearout faults. In Proceedings of the IEEE Workshop on Silicon Errors in Logic - System Effects, pages 2-14, June 2003.
[21] J. Srinivasan, S. Adve, P. Bose, and J. Rivers. The case for lifetime reliability-aware microarchitecture. In Proceedings of the 31st Annual International Symposium on Computer Architecture, pages 276-287, June 2004.
[22] A. Tiwari and J. Torrellas. Facelift: Hiding and slowing down aging in multicores. In Proceedings of the 41st International Symposium on Microarchitecture, pages 129-140, Nov 2008.
[23] Q. Wu, P. Juang, M. Martonosi, and D. Clark. Voltage and frequency control with adaptive reaction time in multiple-clock-domain processors. In 11th International Symposium on High-Performance Computer Architecture, pages 178-189, Feb. 2005.