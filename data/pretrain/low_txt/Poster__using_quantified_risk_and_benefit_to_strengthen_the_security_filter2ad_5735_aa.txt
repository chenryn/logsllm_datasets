**Title: Poster: Using Quantified Risk and Benefit to Strengthen the Security of Information Sharing**

**Authors:**
- Weili Han
- Chenguang Shen
- Yuliang Yin
- Yun Gu
- Chen Chen

**Contact Information:**
- {wlhan, 08301010162, 08302010056, 07302010076, chenc}@fudan.edu.cn
- Affiliations:
  - Software School, Fudan University, Shanghai, P. R. China
  - Key Lab of Information Network Security, Ministry of Public Security, Shanghai, P. R. China

**Abstract:**
Risk and benefit are two implicit key factors in determining access in secure information sharing. Recent research has shown that these factors can be explicitly quantified to enhance the flexibility of information systems. This paper introduces the motivation and technical design of Quantiﬁed riSk and Beneﬁt adaptive Access Control (QSBAC) to strengthen the security of information sharing. It also discusses the key issues in designing policies for QSBAC.

**Categories and Subject Descriptors:**
- D.4.6 [Operating Systems]: Security and Protection - Access Controls
- D.2.9 [Software Engineering]: Software Configuration Management

**General Terms:**
- Security, Management

**Keywords:**
- Quantiﬁed Risk, Quantiﬁed Beneﬁt, Secure Information Sharing, QSBAC

**1. Introduction**
With the advancement of information technologies, including cloud computing and social network services, information is being shared on a larger scale. Users can access and share their preferred information anytime, anywhere, and with any device. However, ensuring the security of information sharing remains a significant challenge. The parties involved in sharing should be protected according to explicit or implicit security policies. For example, in personalization recommendations, sharing more private data can yield more accurate results but also increases the risk of data leakage. In such cases, setting explicit policies can be challenging.

Quantiﬁed risk and beneﬁt can enhance the security of information sharing because:
- Each security policy implicitly considers risk and beneﬁt. These factors are often hidden in each step of the access control process. For instance, if a user allows a website to know their age, they accept all associated risks and benefits.
- Explicitly quantifying risk and beneﬁt is suitable for emergent and dynamic applications where policies can be set based on measured values. This approach provides more directed evidence for decision-making, especially in scenarios where preset policies are insufficient.

This paper introduces the technical design of QSBAC, discusses key issues in designing QSBAC policies, and evaluates the policy engine of QSBAC.

**2. Steps to Enforce QSBAC**
QSBAC considers two types of quantiﬁed risk: Risk of Allowing Access (RAA) and Risk of Denying Access (RDA), and two types of quantiﬁed beneﬁt: Beneﬁt of Allowing Access (BAA) and Beneﬁt of Denying Access (BDA). The enforcement process includes the following steps:

- **S1: Set Risk Mitigation Actions (RMA) and Beneﬁt Incentive Actions (BIA):** RMAs reduce risk when an access request is allowed or denied, while BIAs stimulate beneﬁts.
- **S2: Set quantiﬁed risk and beneﬁt adaptive policies:** QSBAC policies supplement traditional security policies, particularly in handling undefined or dynamic situations.
- **S3: Measure quantiﬁed risk and beneﬁt:** The four variables (RAA, RDA, BAA, BDA) are measured using predefined functions, considering applicable RMAs and BIAs.
- **S4: Determine a request according to the policies and measurements:** The Policy Decision Point (PDP) evaluates the request and returns a decision, along with necessary RMAs and BIAs.
- **S5: Implement the response with RMAs and BIAs:** A QSBAC-enabled system implements RMAs and BIAs, requiring a more complex session control mechanism.
- **S6: Record runtime context:** This data source optimizes RMAs, BIAs, policies, and measurement functions.

**3. Policies of QSBAC**
We extend XACML (eXtensible Access Control Markup Language) to express policies in QSBAC. XACML is becoming a standard for access control policy languages. Our extension, referred to as QSBAC-XACML, includes additional elements to handle the four variables (RAA, RDA, BAA, BDA), their corresponding measurement functions, and membership functions.

**Figure 1: Dataflow Diagram of QSBAC-XACML**
- **PEP (Policy Enforcement Point):** Enforces the policy decision.
- **PDP (Policy Decision Point):** Evaluates the request and makes a decision.
- **PAP (Policy Administration Point):** Manages and administers policies.
- **PIP (Policy Information Point):** Provides attribute values.
- **RMP (Risk Measure Point):** Measures risk.
- **BMP (Benefit Measure Point):** Measures benefit.
- **RMA Service (Risk Mitigation Action Service):** Implements RMAs.
- **BIA Service (Benefit Incentive Action Service):** Implements BIAs.

The extended XACML structure includes:
- Four variables: RAA, RDA, BAA, BDA.
- Corresponding measurement functions.
- Membership functions for attributes.

This structured approach ensures a more flexible and secure information sharing environment.