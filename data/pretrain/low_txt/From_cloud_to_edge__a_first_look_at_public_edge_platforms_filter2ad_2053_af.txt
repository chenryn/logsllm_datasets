### Workloads Profiling and Prediction for Cloud Platforms

Workload profiling and prediction have been extensively studied in the context of cloud platforms [30, 38, 45]. However, directly applying these methods to Network Edge Platforms (NEPs) may not be sufficient due to the distinct nature of the workloads they handle. For instance, scheduling virtual machines (VMs) to different sites based on past resource usage predictions can lead to changes in future VM usage patterns, as edge VMs are highly dependent on their geographic locations. Such changes can render the initial predictions invalid within a short period.

### Limitations and Future Work

#### Dataset Representativeness
Despite our best efforts, the cloud-side workload dataset (Azure) does not perfectly align with our NEP dataset, as they were collected from different countries and at different times. Therefore, we draw our conclusions cautiously. Nonetheless, we believe the lessons learned from this study are valid for two reasons:
1. Azure is a global Cloud Service Provider (CSP) with sites in China, similar to NEP.
2. Azure's cloud workloads have remained relatively stable from 2017 to 2019, suggesting that the 2020 NEP dataset would exhibit similar characteristics.

#### Experimental Settings
In addition to the workload traces, our actively collected dataset was gathered through crowdsourced, controlled experiments. We identified several imperfections in these experiments:

- **Network Delay Measurement**: In §3.1, we used ICMP-based ping instead of TCP to measure network delay, primarily because it is a built-in feature of non-rooted Android devices. However, TCP-based ping is more representative of normal workloads, as ICMP is often treated differently by cloud providers compared to regular TCP/UDP traffic [52].
- **Edge Application Implementation**: In §3.3, we implemented two edge applications using state-of-the-art libraries, following typical design practices. Despite our best efforts, our implementation and deployment may not perfectly reflect those of commercial edge applications. In future work, we plan to benchmark more applications and their diverse deployment configurations to comprehensively study how edge computing enhances application Quality of Experience (QoE).
- **User Study Participation**: The number of endpoints (users) participating in our user study was limited. We aim to scale this up in future work.
- **Network-Layer Characteristics**: We did not investigate the network-layer characteristics (e.g., routing) of NEP traffic. Understanding these can facilitate better network-edge cooperation, such as through improved traffic engineering.

#### NEP as an Early Adopter
NEP is currently in its early stages (three years since release), and not all its characteristics match the "ideal" edge computing vision, particularly in terms of deployment density, customer diversity, and VM elasticity. However, NEP is a leading edge platform with a significantly larger number of sites compared to typical cloud providers, and it has seen large-scale adoption by a wide range of commercial applications. Our measurements already highlight significant differences between NEP and traditional cloud platforms. As commercial edge computing is still in its infancy, our results provide a crucial baseline for studying its evolution.

### Related Work

#### Commercial Edge/Cloud Platforms
While the concept of "pushing computations and services closer to users" is widely accepted in the edge computing community, the practical implementation remains an open challenge. This study focuses on the public edge platform NEP, which is considered an extension of traditional clouds but with more diverse geographic distribution. Other major cloud providers, such as AWS Local Zones [11] and Azure Edge Zone [13], are also developing multi-tenant edge platforms. However, these platforms are still in their early stages compared to NEP (Table 1), and there are no comprehensive measurements available yet. Major data providers like Facebook [33, 84, 85] and Google [98] have built edge infrastructure (CDNs, Points of Presence, etc.) to deliver content more efficiently. While content delivery is a key use case for edge, NEP is designed as a more general-purpose, multi-tenant computing platform, similar to existing cloud providers.

#### Measurements of Edge/Cloud Platforms
- **Network Performance**: Wide-area network (WAN) performance has been extensively studied from the perspective of cloud providers, including network latency [47, 89], throughput [40, 59], and resource demand volatility [57]. Recent studies [55, 71] have focused on geo-distributed data centers but remain at the cloud level. Inspired by these works, we are the first to quantify the network and application performance of a real edge platform with much denser DC deployment than traditional cloud platforms (Table 1).
- **Workloads**: To our knowledge, no prior work has characterized workloads on edge platforms. Some studies [41, 79] analyze first-party, container-based workloads on cloud platforms, which are orthogonal to our focus on multi-tenant, VM-based workloads of NEP. The most related work is on Azure [38], which we directly compare in this study. A key finding is that edge workloads differ significantly from cloud workloads. [37] also performs large-scale measurements on network performance among end users (8,000 RIPE Atlas probes) and data centers (189 in total from many cloud providers). Their study on global cloud platforms is complementary to ours, which focuses on a much denser, nationwide edge platform.

#### Edge Systems and Applications
Edge systems and applications are designed to bridge the gap between low-end devices and faraway clouds. Key use cases include smart homes and cities [34, 90, 93], autonomous driving [61, 62, 64], video analytics for smartphones [63, 78], surveillance cameras [31, 99, 100], and drones [94]. These applications motivate the development of NEP, which relieves edge developers from deploying and maintaining edge hardware, similar to how cloud computing has helped developers over the past two decades. Beyond specific use cases, there have been system-level optimizations for edge performance and security [68, 69, 76, 80], which are orthogonal to NEP.

### Conclusions

This study provides the first comprehensive measurement of a commercial, multi-tenant edge platform. Our findings quantitatively answer two key questions: what is the edge performance perceived by end users, and what are the edge workloads experienced by the edge operator. Our results reveal critical differences between cloud and edge platforms and offer valuable insights for designing future edge platforms and edge-based applications.

### Acknowledgments

Mengwei Xu was supported by the National Key R&D Program of China under grant number 2020YFB1805500, the Fundamental Research Funds for the Central Universities, and the National Natural Science Foundation of China under grant number 61922017. Xuanzhe Liu was supported in part by the Alibaba University Joint Research Program. We extend special thanks to the Alibaba Group for their contribution to this paper. We also thank our shepherd, Aaron Schulman, and the anonymous IMC reviewers for their useful suggestions. Shangguang Wang is the corresponding author of this work.

### References

[1] Game battle tanks. http://btanks.sourceforge.net/blog/, 2010.
[2] Game pingus. https://pingus.seul.org/, 2015.
[3] Alibaba cluster trace program. https://github.com/alibaba/clusterdata, 2018.
[4] Scaling kubernetes to 2,500 nodes. https://openai.com/blog/scaling-kubernetes-to-2500-nodes/, 2018.
[5] U.S. video 360 report 2018. https://www.nielsen.com/us/en/insights/report/2018/video-360-2018-report/#, 2018.
[6] 3GPP org. 2019. https://www.3gpp.org/release-15, 2019.
[7] C-V2X use cases methodology, examples and service level requirements. https://5gaa.org/wp-content/uploads/2019/07/5GAA191906WPCV2XUCsv1-3-1.pdf, 2019.
[8] Cloud AR/VR whitepaper. https://www.gsma.com/futurenetworks/wiki/cloud-ar-vr-whitepaper/, 2019.
[9] Game flare. https://flarerpg.org/, 2019.
[10] Alibaba cloud elastic compute service. https://www.alibabacloud.com/product/ecs, 2020.
[11] AWS local zones. https://aws.amazon.com/about-aws/global-infrastructure/localzones/, 2020.
[12] AWS wavelength. https://aws.amazon.com/wavelength/, 2020.
[13] Azure edge zone. https://docs.microsoft.com/en-us/azure/networking/edge-zones-overview, 2020.
[14] Easyrtmp-android. https://github.com/tsingsee/EasyRTMP-Android, 2020.
[15] Extending the boundaries of the cloud with edge computing. https://www.alibabacloud.com/blog/extending-the-boundaries-of-the-cloud-with-edge-computing594214, 2020.
[16] FFmpeg. https://ffmpeg.org/, 2020.
[17] FFplay documentation. https://ffmpeg.org/ffplay.html, 2020.
[18] Kubernetes (K8s). https://kubernetes.io/, 2020.
[19] MPlayer. http://www.mplayerhq.hu/design7/news.html, 2020.
[20] Nginx. https://nginx.org/en/, 2020.
[21] Powered by SA: 5G MEC-based cloud game innovation practice. https://www.gsma.com/futurenetworks/wp-content/uploads/2020/03/Powered-by-SA-5G-MEC-Based-Cloud-Game-Innovation-Practice-.pdf, 2020.
[22] Serverless computing and applications. https://aws.amazon.com/serverless/, 2020.
[23] UI/Application Exerciser Monkey. https://developer.android.com/studio/test/monkey, 2020.
[24] User equipment (UE) radio access capabilities. https://www.3gpp.org/ftp/specs/archive/38series/38.306/, 2020.
[25] Istemi Ekin Akkus, Ruichuan Chen, Ivica Rimac, Manuel Stein, Klaus Satzke, Andre Beck, Paarijaat Aditya, and Volker Hilt. {SAND}: Towards high-performance serverless computing. In 2018 {Usenix} Annual Technical Conference ({USENIX} {ATC} 18), pages 923–935, 2018.
[26] Sherif Akoush, Ripduman Sohan, Andrew Rice, Andrew W Moore, and Andy Hopper. Predicting the performance of virtual machine migration. In 2010 IEEE international symposium on modeling, analysis and simulation of computer and telecommunication systems, pages 37–46, 2010.
[27] Ghufran Baig, Jian He, Mubashir Adnan Qureshi, Lili Qiu, Guohai Chen, Peng Chen, and Yinliang Hu. Jigsaw: Robust live 4K video streaming. In The 25th Annual International Conference on Mobile Computing and Networking, pages 1–16, 2019.
[28] Jacob Benesty, Jingdong Chen, Yiteng Huang, and Israel Cohen. Pearson correlation coefficient. In Noise reduction in speech processing, pages 1–4. Springer, 2009.
[29] David Breitgand, Gilad Kutiel, and Danny Raz. Cost-aware live migration of services in the cloud. SYSTOR, 10:1815695–1815709, 2010.
[30] Rodrigo N Calheiros, Enayat Masoumi, Rajiv Ranjan, and Rajkumar Buyya. Workload prediction using ARIMA model and its impact on cloud applications’ QoS. IEEE Transactions on Cloud Computing, 3(4):449–458, 2014.
[31] Christopher Canel, Thomas Kim, Giulio Zhou, Conglong Li, Hyeontaek Lim, David G. Andersen, Michael Kaminsky, and Subramanya R. Dulloor. Scaling video analytics on constrained edge nodes. In Proceedings of the 2nd SysML Conference, 2019.
[32] Chris Chatfield. The Holt-Winters forecasting procedure. Journal of the Royal Statistical Society: Series C (Applied Statistics), 27(3):264–279, 1978.
[33] David Chou, Tianyin Xu, Kaushik Veeraraghavan, Andrew Newell, Sonia Margulis, Lin Xiao, Pol Mauri Ruiz, Justin Meza, Kiryong Ha, Shruti Padmanabha, et al. Taiji: Managing global user traffic for large-scale internet services at the edge. In Proceedings of the 27th ACM Symposium on Operating Systems Principles, pages 430–446, 2019.
[34] Franco Cicirelli, Antonio Guerrieri, Giandomenico Spezzano, and Andrea Vinci. An edge-based platform for dynamic smart city applications. Future Generation Computer Systems, 76:106–118, 2017.
[35] Christopher Clark, Keir Fraser, Steven Hand, Jacob Gorm Hansen, Eric Jul, Christian Limpach, Ian Pratt, and Andrew Warfield. Live migration of virtual machines. In Proceedings of the 2nd conference on Symposium on Networked Systems Design & Implementation-Volume 2, pages 273–286, 2005.
[36] Mark Claypool and Kajal Claypool. Latency and player actions in online games. Communications of the ACM, 49(11):40–45, 2006.
[37] Lorenzo Corneo, Maximilian Eder, Nitinder Mohan, Aleksandr Zavodovski, and Suzan BayhanZ. Surrounded by the clouds. In The Web Conference, 2021.
[38] Eli Cortez, Anand Bonde, Alexandre Muzio, Mark Russinovich, Marcus Fontoura, and Ricardo Bianchini. Resource central: Understanding and predicting workloads for improved resource management in large cloud platforms. In Proceedings of the 26th Symposium on Operating Systems Principles, pages 153–167, 2017.
[39] Christina Delimitrou and Christos Kozyrakis. Quasar: Resource-efficient and QoS-aware cluster management. In Rajeev Balasubramonian, Al Davis, and Sarita V. Adve, editors, Architectural Support for Programming Languages and Operating Systems, ASPLOS ’14, Salt Lake City, UT, USA, March 1-5, 2014, pages 127–144. ACM, 2014.
[40] Haotian Deng, Chunyi Peng, Ans Fida, Jiayi Meng, and Y Charlie Hu. Mobility support in cellular networks: A measurement study on its configurations and implications. In Proceedings of the Internet Measurement Conference 2018, pages 147–160, 2018.
[41] Sheng Di, Derrick Kondo, and Walfredo Cirne. Characterization and comparison of cloud versus grid workloads. In 2012 IEEE International Conference on Cluster Computing, pages 230–238, 2012.
[42] John Dilley, Bruce Maggs, Jay Parikh, Harald Prokop, Ramesh Sitaraman, and Bill Weihl. Globally distributed content delivery. IEEE Internet Computing, 6(5):50–58, 2002.
[43] Dong Du, Tianyi Yu, Yubin Xia, Binyu Zang, Guanglu Yan, Chenggang Qin, Qixuan Wu, and Haibo Chen. Catalyzer: Sub-millisecond startup for serverless computing with initialization-less booting. In Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems, pages 467–481, 2020.
[44] Rohan Gandhi, Hongqiang Harry Liu, Y Charlie Hu, Guohan Lu, Jitendra Padhye, Lihua Yuan, and Ming Zhang. Duet: Cloud scale load balancing with hardware and software. ACM SIGCOMM Computer Communication Review, 44(4):27–38, 2014.
[45] Zhenhuan Gong, Xiaohui Gu, and John Wilkes. PRESS: Predictive elastic resource scaling for cloud systems. In 2010 International Conference on Network and Service Management, pages 9–16, 2010.
[46] Ori Hadary, Luke Marshall, Ishai Menache, Abhisek Pan, Esaias E Greeff, David Dion, Star Dorminey, Shailesh Joshi, Yang Chen, Mark Russinovich, et al. Protean: VM allocation service at scale. In 14th USENIX Symposium on Operating Systems Design and Implementation (OSDI 20), pages 845–861, 2020.
[47] Osama Haq, Mamoon Raja, and Fahad R Dogar. Measuring and improving the reliability of wide-area cloud paths. In Proceedings of the 26th International Conference on World Wide Web, pages 253–262, 2017.
[48] Antony S. Higginson, Mihaela Dediu, Octavian Arsene, Norman W. Paton, and Suzanne M. Embury. Database workload capacity planning using time series analysis and machine learning. In David Maier, Rachel Pottinger, An-Hai Doan, Wang-Chiew Tan, Abdussalam Alawini, and Hung Q. Ngo, editors, Proceedings of the 2020 International Conference on Management of Data, SIGMOD Conference 2020, online conference [Portland, OR, USA], June 14-19, 2020, pages 769–783.
[49] Michael R Hines, Umesh Deshpande, and Kartik Gopalan. Post-copy live migration of virtual machines. ACM SIGOPS operating systems review, 43(3):14–26, 2009.
[50] Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural computation, 9(8):1735–1780, 1997.
[51] Yun Chao Hu, Milan Patel, Dario Sabella, Nurit Sprecher, and Valerie Young. Mobile edge computing—a key technology towards 5G. ETSI white paper, 11(11):1–16, 2015.
[52] Zi Hu, Liang Zhu, Calvin Ardi, Ethan Katz-Bassett, Harsha V Madhyastha, John Heidemann, and Minlan Yu. The need for end-to-end evaluation of cloud availability. In International Conference on Passive and Active Network Measurement, pages 119–130. Springer, 2014.
[53] Chun-Ying Huang, Kuan-Ta Chen, De-Yu Chen, Hwai-Jung Hsu, and Cheng-Hsin Hsu. Gaminganywhere: The first open source cloud gaming system. ACM Trans. Multim. Comput. Commun. Appl., 10(1s):10:1–10:25, 2014.
[54] Te-Yuan Huang, Ramesh Johari, Nick McKeown, Matthew Trunnell, and Mark Watson. A buffer-based approach to rate adaptation: Evidence from a large video