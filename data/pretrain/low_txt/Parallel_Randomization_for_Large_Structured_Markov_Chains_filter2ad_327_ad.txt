# Performance of Parallel Randomization on a Sun Enterprise and SGI Origin 2000

## Data Summary
- **Speed Up**:
  - For 1 thread: 1.00
  - For 2 threads: 1.67
  - For 4 threads: 1.80
  - For 8 threads: 1.43
- **Efficiency**:
  - For 1 thread: 1.00
  - For 2 threads: 0.83
  - For 4 threads: 0.90
  - For 8 threads: 0.72

## Discussion

It is natural to extend the presented approach for parallel randomization from subsets of columns to subsets of blocks, even without the need to partition according to Lemma 4.1. This is because the Kronecker representations for different blocks do not interfere with each other.

Consequently, an implementation of the abstract functional interface (AFI) used by the proposed parallel randomization solver is conceptually straightforward. Once this AFI is provided, our parallel randomization template allows for the derivation of parallel randomization for hierarchical Kronecker representations without additional effort.

Matrix diagrams [12, 11] are a data structure that combines a Kronecker representation of \( R \) with the Directed Acyclic Graph (DAG) representation of \( S \) into a single data structure. A recent extension by A. Miner to canonical matrix diagrams makes this an interesting theoretical structure, similar to binary decision diagrams. More importantly, the original main improvement of matrix diagrams was to provide fast matrix access by columns, enabling faster Gauss-Seidel type iterations than those proposed in [6] with structured representations. This support for matrix access by columns suggests that implementing an AFI with an iterator, as described in Section 5, is conceptually straightforward. Consequently, for a given AFI implementation using matrix diagrams, the parallel randomization solver can be compiled using the C++ template we developed for this approach.

## Conclusions

We have presented a parallel randomization method for a modular Kronecker representation and its implementation with POSIX threads for a shared memory multiprocessor architecture. The Kronecker representation has been modified to allow parallel computations to proceed without write conflicts and with an efficient matrix-vector multiplication scheme.

A dependability model of a workstation cluster, known from the literature, was analyzed to illustrate the applicability of the approach. The performance of the multi-threaded randomization was measured for state spaces up to 26 million states on two platforms: a Sun Enterprise with 2 processors and an SGI Origin 2000 with 16 processors.

The new algorithm is implemented in a way that accommodates the state-level AFI of MÖBIUS and the textual interfaces of the APNN toolbox, such that its integration into the numerical analysis package and the CSL model checker of the APNN toolbox will be completed in due time. The clear separation of the parallel solver and the functional interface of the Kronecker representation makes extensions to parallel iterative techniques for stationary analysis straightforward to establish. Furthermore, the multithreaded solver template can perform with any implementation of the AFI that provides iterators for subsets of columns. Hence, the randomization solver can also perform with other representations of Continuous-Time Markov Chains (CTMCs), such as the classic sparse matrix representation, the disk-based approach of [14], or the on-the-fly approach of [15].

## Acknowledgements

We gratefully acknowledge the opportunity to conduct experiments on the SGI Origin 2000 at the Chair of Systems Analysis, Prof. H.P. Schwefel, Universität Dortmund, as well as the valuable comments from four reviewers that helped improve the paper.

## References

[1] C. Baier, B. Haverkort, H. Hermanns, and J.P. Katoen. On the logical characterisation of performability results. In Automata Languages and Programming (ICALP’2000), LNCS 1853, Springer, 2000.

[2] D.P. Bertsekas and J. N. Tsitsiklis. Parallel and Distributed Computing - Numerical Methods. Prentice Hall, 1989.

[3] P. Buchholz. Markovian process algebra: Composition and equivalence. In U. Herzog and M. Rettelbach, editors, Proc. of the 2nd Work. on Process Algebras and Performance Modelling. Arbeitsberichte des IMMD, University of Erlangen, no. 27, 1994.

[4] P. Buchholz. Hierarchical Markovian models: Symmetries and aggregation. Performance Evaluation, 22:93–110, 1995.

[5] P. Buchholz. Structured analysis approaches for large Markov chains. Applied Numerical Mathematics, 31(4):375–404, 1999.

[6] P. Buchholz, G. Ciardo, S. Donatelli, and P. Kemper. Complexity of memory-efficient Kronecker operations with applications to the solution of Markov models. INFORMS J. on Computing, 12(3), 2000.

[7] P. Buchholz, M. Fischer, and P. Kemper. Distributed steady state analysis using Kronecker algebra. In [27].

[8] P. Buchholz, J.P. Katoen, P. Kemper, and C. Tepper. Model-checking large structured Markov chains. Submitted for publication, 2001.

[9] P. Buchholz, P. Kemper, and C. Tepper. New features in the APNN toolbox. In P. Kemper, editor, Tools of Aachen 2001, int. Multiconference on Measurement, Modelling and Evaluation of Computer-Communication Systems, Tech. report No. 760/2001. Universität Dortmund, FB Informatik, 2001.

[10] G. Chiola, C. Dutheillet, G. Franceschinis, and S. Haddad. Stochastic well-formed coloured nets for symmetric modelling applications. IEEE Transactions on Computers, 42(11):1343–1360, Nov 1993.

[11] G. Ciardo and A. Miner. A data structure for the efficient Kronecker solution of GSPNs. In P. Buchholz and M. Silva, editors, Proc. 8th int. Workshop Petri Nets and Performance Models, IEEE CS Press, 1999.

[12] G. Ciardo and A. Miner. Efficient reachability set generation and storage using decision diagrams. In S. Donatelli and J. Kleijn, editors, Proc. 20th int. Conf. Application and Theory of Petri Nets. LNCS 1639, Springer, 1999.

[13] G. Clark, T. Courtney, D. Daly, D. Deavours, S. Derisavi, J. M. Doyle, W. H. Sanders, and P. Webster. The MÖBIUS modeling tool. In Proc. 9th Int. Workshop on Petri Nets and Performance Models (PNPM’01), IEEE CS Press, 2001.

[14] D. D. Deavours and W. H. Sanders. An efficient disk-based tool for solving very large Markov models. In Proc. 9th Int. Conf. Modelling Techniques and Tools for Computer Performance Evaluation (TOOLS ’97), LNCS 1245, Springer, 1997.

[15] D. D. Deavours and W. H. Sanders. ‘On-the-fly’ solution techniques for stochastic Petri nets and extensions. IEEE Trans. on Software Engineering, 24(10):889–902, 1998.

[16] S. Derisavi, P. Kemper, and W.H. Sanders. The MÖBIUS state-level abstract functional interface. In Proc. 12th Int. Conf. Modelling Tools and Techniques for Computer and Communication System Performance Evaluation (Performance TOOLS’02), LNCS 2324. Springer, 2001.

[17] S. Donatelli. Superposed generalized stochastic Petri nets: definition and efficient solution. In Proc. 15th int. Conf. Application and Theory of Petri nets, LNCS 815, Springer, 1994.

[18] P. Fernandes, B. Plateau, and W.J. Stewart. Efficient descriptor-vector multiplication in stochastic automata networks. JACM, 45(3):381–414, 1998.

[19] M. Fischer and P. Kemper. Distributed numerical Markov chain analysis. In Y. Cotronis and J. Dongarra, editors, Proc. 8th Euro PVM/MPI 2001, LNCS 2131, Springer, 2001.

[20] B.L. Fox and P.W. Glynn. Computing Poisson probabilities. Comm. ACM, 31:440–445, 1988.

[21] B. Haverkort, H. Hermanns, and J.P. Katoen. The use of model checking techniques for quantitative dependability evaluation. In IEEE Symp. on Reliable and Distributed Systems, IEEE CS Press, 2000.

[22] H. Hermanns, J. Meyer-Kayser, and M. Siegle. Multi-terminal binary decision diagrams to represent and analyse continuous time Markov chains. In [27].

[23] A. Jensen. Markoff chains as an aid in the study of Markoff processes. Skand. Akuarietidskrift, 36:87–91, 1953.

[24] J. P. Katoen, M. Kwiatkowska, G. Norman, and D. Parker. Faster and symbolic CTMC model checking. In Proc. PAPM-PROBMIV’01, LNCS 2165, Springer, 2001.

[25] W. Knottenbelt and P. G. Harrison. Distributed disk-based solution techniques for large Markov models. In [27].

[26] V. Migallon, J. Penades, and D.B. Szyld. Experimental study of parallel iterative solutions of Markov chains with block partitions. In [27].

[27] B. Plateau, W. J. Stewart, and M. Silva, editors. Proc. 3rd Int. Workshop on the Numerical Solution of Markov Chains. Prensas Universitarias de Zaragoza, 1999.

[28] W. H. Sanders and J. F. Meyer. Reduced base model construction methods for stochastic activity networks. IEEE Journal on Selected Areas in Communications, 9(1):25–36, January 1991.

[29] Roger B. Sidje and William J. Stewart. A survey of methods for computing large sparse matrix exponentials arising in Markov chains. Computational Statistics and Data Analysis, 29:345–368, 1999.