### Bottlenecks and Accuracy

The accuracy of the method in identifying bottlenecks is nearly 100%. An intuitive explanation for this high accuracy, compared to the correlation measure, is that the accuracy metric only penalizes incorrect binary decisions about the dependency matrix values after thresholding. This makes it more lenient than the correlation measure, which compares real values directly.

### Varying Sparsity Parameters

Next, we varied the parameter \( s_X \) that imposes sparsity on \( X \). The value of \( s_X \) was adjusted from 0.1 to 0.95 for the H-NMF algorithm. We fixed the noise level \( \sigma \) to a low value of 0.01 and kept the parameter \( s_A \), which imposes sparsity on \( A \), at 0.5. Figures 1c and 1d show the results for the reconstruction of delay and dependency matrices, respectively. These results suggest that higher sparsity over the delay matrix generally improves the reconstruction of both matrices. However, for the delay matrix, extremely high values (e.g., \( s_X > 0.9 \)) can degrade performance. As before, the delay matrix reconstruction is more sensitive to both sparsity and the number of bottlenecks than the dependency matrix reconstruction. The accuracy for the dependency matrix quickly approaches nearly 100% for higher sparsities.

We then performed the same set of experiments by varying the second sparsity parameter \( s_A \), which imposes sparsity on \( A \), while keeping \( s_X = 0.5 \). The results, shown in Figures 1e and 1f, exhibit similar behavior.

### Experiments with Real Traffic

We also evaluated our method using real network traffic collected in a controlled environment. The test lab contained six routers (Cisco and Juniper) and six links, where end-to-end delays were measured using probes such as SAA/rtr on Cisco routers and RPM on Juniper routers. Our focus was on reconstructing link delays rather than node delays. Only four probes were necessary to ensure the identifiability of a single link problem. The network topology and the corresponding dependency matrix are shown in Figure 2a, where each probe name (e.g., 312) describes the path through the routers.

In a controlled experiment, we stressed a particular link (or combination of links) with 30K 1400-byte ECHO_REQUEST packets to induce performance bottlenecks. Specifically, we first induced a bottleneck on link 16, affecting only the two probes going through that link, 4216 and 4316 (Figure 2b shows the probe delay data averaged over one-minute intervals). Then, we simultaneously stressed links 12 and 13, observing performance degradation in probes 1249 and 312.

### Results

Using the real data from our lab setting, Figures 2c-f show the reconstruction results for the link delays and the dependency matrix as a function of the sparsity parameters in the H-NMF algorithm, averaged over 50 runs. Figure 2c shows the correlation between the true link delay and its best-matching row in the reconstructed delay matrix for each link, as a function of varying \( s_X \). Figure 2d shows the accuracy of reconstructing the dependency-matrix column for that link. Similarly, Figures 2e and 2f show the correlation and accuracy results as functions of varying sparsity on the dependency matrix \( A \).

The highest correlation (up to 0.65) was observed for the two links (12 and 13) that were stressed for a prolonged period. Link 16, which was stressed but for a short time, achieved a correlation of about 0.3. The remaining unstressed links had lower correlations, and increasing sparsity parameters sometimes improved and sometimes hurt the correlation, depending on the specific link. Interestingly, the highest correlation between the true and reconstructed delay (e.g., for links 12 and 13) did not necessarily imply the best reconstruction accuracy in the dependency matrix. The most accurate dependency reconstruction (around 80%) was achieved for link 49, which was not stressed but appeared on the path of a single probe 1249, simplifying its reconstruction. The reconstruction accuracy did not change much with varying sparsity parameters. The next best dependency reconstruction results were for the bottleneck links 13 and 16, as well as for link 34 (also on the path of only one probe). For these links, accuracy changed with varying sparsity, but the effects could be opposite (higher sparsity on both \( X \) and \( A \) helped link 34 but hurt links 13 and 16).

Since the accuracy and especially the correlation values were less impressive in the real setting compared to Gnutella simulations, we performed simulated traffic experiments to better understand the sources of inaccuracies (see Figure 3). While the simulation results were somewhat more accurate than the real experiment, they were still much less accurate than the results for a larger Gnutella network. This effect may be due to the ratio between the number of bottlenecks and the network size, which yields a much higher sparsity in large networks. In our lab environment, just two bottlenecks already constitute 1/3 of all links. We conjecture that our method works better in larger networks with a small number of bottlenecks. Other properties of the "ground truth" dependency and link delay matrices may also affect the reconstruction quality and require further investigation.

### Conclusions and Open Issues

This paper proposes a novel approach to the challenging problem of network bottleneck/delay diagnosis in the absence of dependency/routing information. On the Gnutella and INET topologies, the reconstruction quality of our approach was quite impressive and exceeded our expectations. We learned that using non-negative constraints on the BSS approach, with sufficiently high sparsity imposed on both dependency and node delay matrices, is important for obtaining accurate reconstructions. Clearly, results deteriorate with increasing noise, which might be an issue in realistic scenarios.

Preliminary results on real versus simulated traffic in small lab settings were somewhat less impressive. However, since even the simulation results in the same setting were much less accurate than for larger networks, we conjecture that our approach should be more applicable in larger networks with a reasonably small number of (more clearly "pronounced") bottlenecks. Further investigation of our approach on real traffic in large-scale networks is the direction of our ongoing work. Other interesting directions for future work include investigating identifiability and uniqueness conditions for the proposed approaches in practical scenarios and applying this approach to other end-to-end measures, such as jitter, which is particularly important in VoIP networks. Finally, we plan to extend our approach to a "semi-blind" source separation that can incorporate some partial dependency (routing) information.