### 链接、装载与库

#### 1. 编译器和链接器选项
- **/DEBUG**：输出调试模式版本。
- **/DEF:filename**：指定模块定义文件（.DEF）。
- **/DEFAULTLIB:library**：指定默认运行库。
- **/DLL**：生成动态链接库（DLL）。
- **/ENTRY:symbol**：指定程序入口点。
- **/EXPORT:symbol**：指定导出符号。
- **/HEAP**：指定默认堆大小。
- **/LIBPATH:dir**：指定链接时的库搜索路径。
- **/MAP[:filename]**：生成链接映射文件。
- **/NODEFAULTLIB[：library]**：禁止使用默认运行库。
- **/OUT:filename**：指定输出文件名。
- **/RELEASE**：以发布版本生成输出文件。
- **/STACK**：指定默认栈大小。
- **/SUBSYSTEM**：指定子系统。

#### 2. dumpbin工具
- **/ALL**：显示所有信息。
- **/ARCHIVEMEMBERS**：显示.LIB文件中的所有目标文件列表。
- **/DEPENDENTS**：显示文件的动态链接依赖关系。
- **/DIRECTIVES**：显示链接器指示。
- **/DISASM**：显示反汇编代码。
- **/EXPORTS**：显示导出函数表。
- **/HEADERS**：显示文件头信息。
- **/IMPORTS**：显示导入函数表。
- **/LINENUMBERS**：显示行号信息。
- **/RELOCATIONS**：显示重定位信息。
- **/SECTION:name**：显示特定段的信息。
- **/SUMMARY**：显示文件概要信息。
- **/SYMBOLS**：显示文件符号表。
- **/TLS**：显示线程局部存储（TLS）信息。

#### 3. 术语索引
- **ABI (Application Binary Interface)**：应用程序二进制接口。
- **COM (Component Object Model)**：组件对象模型。
- **Common Block**：公共块。
- **Activation Record**：激活记录。
- **Compilation**：编译。
- **Address and Storage Allocation**：地址和空间分配。
- **Condition Variable**：条件变量。
- **API (Application Programming Interface)**：应用程序编程接口。
- **Context-Free Grammar**：上下文无关语法。
- **Core Dump File**：核心转储文件。
- **ANSI (American National Standards Institute)**：美国国家标准学会。
- **CPU Bound**：CPU密集型。
- **Anonymous Virtual Memory Area**：匿名虚拟内存区域。
- **Critical Section**：临界区。
- **Assembly Language**：汇编语言。
- **Data Section**：数据段。
- **Atomic**：原子操作。
- **Decorated Name**：修饰后的名称。
- **AWE (Address Windowing Extensions)**：地址窗口扩展。
- **Delayed Load**：延迟加载。
- **Base Address**：基地址。
- **Dependency Ordering**：依赖顺序。
- **Base Index Scale Addressing**：基址比例变址寻址。
- **Device Driver**：设备驱动程序。
- **BFD (Binary File Descriptor Library)**：二进制文件描述符库。
- **Disk Page**：磁盘页。
- **Big Endian**：大端字节序。
- **DLL Binding**：DLL绑定。
- **Binary Semaphore**：二元信号量。
- **DSO (Dynamic Shared Object)**：动态共享对象。
- **Bus**：总线。
- **Dynamic Linker**：动态链接器。
- **Byte Order**：字节序。
- **Dynamic Linking**：动态链接。
- **Calling Conventions**：调用约定。
- **Dynamic Semantic**：动态语义。
- **Code Generator**：代码生成器。
- **Dynamic Symbol Table**：动态符号表。
- **Code Sections**：代码段。
- **ELF (Executable and Linkable Format)**：可执行和可链接格式。
- **COFF (Common Object File Format)**：通用对象文件格式。
- **Entry Point**：入口点。
- **Environment Subsystem**：环境子系统。
- **EXE (Executable)**：可执行文件。
- **Execution View**：执行视图。
- **Exit Code**：退出码。
- **Explicit Run-time Linking**：显式运行时链接。
- **Export Function**：导出函数。
- **FHS (File Hierarchy Standard)**：文件层次结构标准。
- **File Descriptor**：文件描述符。
- **Finite State Machine**：有限状态机。
- **Frame Pointer**：帧指针。
- **Free List**：空闲链表。
- **Function Level Linking**：函数级别链接。
- **Function Signature**：函数签名。
- **Global Symbol Interposition**：全局符号介入。
- **GOT (Global Offset Table)**：全局偏移表。
- **Grammar Parser**：语法解析器。
- **Handle**：句柄。
- **Heap**：堆。
- **Heap Manager**：堆管理器。
- **Hook**：钩子。
- **Image File**：映像文件。
- **Import Address Table**：导入地址表。
- **Import Function**：导入函数。
- **Import Library**：导入库。
- **Interrupt**：中断。
- **ISR (Interrupt Service Routine)**：中断服务例程。
- **IVT (Interrupt Vector Table)**：中断向量表。
- **Kernel Mode**：内核模式。
- **Lazy Binding**：延迟绑定。
- **LBA (Logical Block Address)**：逻辑块地址。
- **LWP (Lightweight Process)**：轻量级进程。
- **Precompiled Header File**：预编译头文件。
- **Priority Scheduling**：优先级调度。
- **Process**：进程。
- **Program Header**：程序头。
- **Program Header Table**：程序头表。
- **Read-Write Lock**：读写锁。
- **Rebasing**：基址重置。
- **Reference**：引用。
- **Relocatable File**：可重定位文件。
- **Relocation**：重定位。
- **Relocation Entry**：重定位条目。
- **Relocation Table**：重定位表。
- **Runtime Library**：运行时库。
- **RVA (Relative Virtual Address)**：相对虚拟地址。
- **Scanner**：扫描器。
- **Scope**：作用域。
- **Section**：段。
- **Segmentation**：分段。
- **Semantic Analyzer**：语义分析器。
- **Semaphore**：信号量。
- **Shared Library**：共享库。
- **Shared Object File**：共享目标文件。
- **SMP (Symmetric Multi-Processing)**：对称多处理。
- **Software Interrupt**：软件中断。
- **Source Code Optimizer**：源代码优化器。
- **Stack**：栈。
- **Static Linking**：静态链接。
- **Static Semantic**：静态语义。
- **Starvation**：饥饿。
- **Strong Reference**：强引用。
- **Symbol**：符号。
- **Symbol Resolution**：符号解析。
- **Symbol Table**：符号表。
- **System Call**：系统调用。
- **System Call Interface**：系统调用接口。
- **System Service**：系统服务。
- **Task**：任务。
- **Target Code Optimizer**：目标代码优化器。
- **TEB (Thread Environment Block)**：线程环境块。
- **Thread**：线程。
- **Thread Local Storage (TLS)**：线程局部存储。
- **Thread Priority**：线程优先级。
- **Three-Address Code**：三地址码。
- **Token**：记号。
- **User Mode**：用户模式。
- **Versioning**：版本控制。
- **Virtual Address**：虚拟地址。
- **Virtual Address Space**：虚拟地址空间。
- **Virtual Page**：虚拟页。
- **Weak Reference**：弱引用。
- **Weak Symbol**：弱符号。

#### 4. 书籍推荐
这是一本深入阐述链接、装载和库等问题的优秀图书，读后让人受益匪浅。书中清晰地介绍了程序从编写到在系统中运行的全过程，对于开发人员和故障排除者都有很大的帮助。无论是希望从事系统开发，还是想更深入地理解操作系统和编译器，或是不满于现状的程序员，都值得阅读这本书。

- **推荐人**：趋势科技（中国）研发中心资深软件工程师
- **推荐人**：阿里巴巴（中国）网络技术有限公司运维部架构师

#### 5. 出版信息
- **策划编辑**：周
- **责任编辑**：陈元玉
- **责任美编**：杨小勤
- **定价**：65.00元

本书配有激光防伪标志，凡没有防伪标志者，属盗版图书。