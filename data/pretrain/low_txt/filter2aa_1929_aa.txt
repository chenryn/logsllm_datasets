# Vista Log Forensics

## Presenter
- **Dr. Rich Murphey, ACS**

## Background
- **Case Study**
  - **Engagement**
  - **Preliminary Report**
  - **Final Report**

## Vista Event Logging
- **Logging Service**
- **Vista Event Encoding**
- **Undocumented Internals**

### Event Log Analysis
- **Recovery**
- **Correlation**
- **Interpretation**

### Shadow Copy Services
- **Provider C**
- **Provider B**
- **Provider A**
- **Controller**
- **Log files**
- **Consumer**
- **Real-time Delivery**
- **Logged Events**
- **Session Control**
  - **Session 1**
  - **Session 2**
  - **Session 64**
  - **Events**
  - **Enable/Disable**
- **Windows Kernel**
  - **Repair**
  - **Correlate**
  - **Recover**

## Acknowledgements
- **Shouts out to:**
  - MD5, Caesar
  - HTA
  - Fednaughty
  - DT
- **Thanks to:**
  - Jerlyn Mardis, ACS
  - Josh Pennell, IO Active
  - Matthew Geiger, CERT
- **Dedicated to:**
  - BitMonk (HTA/Ad Hoc)

## Special Thanks To
- **Sponsor:**
  - **Forensics**
    - In-depth Analysis
    - Expert Witness
    - Data Recovery
    - Complex RAID, Exotic File Systems
    - Consulting
    - Information Security
- **Disclaimer:**
  - This is not legal advice.
  - Not suitable for testimony.

## About Dr. Rich Murphey
- **Experience:**
  - **Rice University**
    - Ph.D. in Electrical and Computer Engineering
  - **UTMB Medical School**
    - Faculty, Physiology & Biophysics
  - **Pentasafe Security**
    - Chief Scientist
  - **Applied Cognitive Solutions**
    - Chief Scientist
  - **Expert Witness**
    - CISSP, ACE, EnCE
- **Author of:**
  - GNU Graphics
  - Asterisk VOIP (See “Authors”)
  - FreeBSD (Founding Core Team)
  - XFree86 (man xorg | grep Rich)

## For More Information
- **C. R. Murphey, "Automated Windows Event Log Forensics," Digital Investigation, August 2007**
  - A peer-reviewed paper on a new tool for automating XP log recovery and analysis.
- **Presentations:**
  - Digital Forensic Research Workshop, 8/13/07
  - HTCIA National, 8/27/07

## Roadmap
- **Background**
- **Case Study**
  - **Engagement**
  - **Preliminary Results**
  - **Revised Scope**
- **Vista Event Logging**
  - **Events**
  - **Logging Service**
  - **Undocumented Internals**
- **Event Log Analysis**
  - **Recovery**
  - **Correlation**
  - **Report**
- **Shadow Copy Services**
  - **Providers and Controllers**
  - **Log Files and Consumers**
  - **Real-time Delivery and Session Control**
  - **Windows Kernel Functions**

## Case Study Steps
1. **Define Preliminary Scope**
   - Define the feasibility of the engagement.
2. **Preliminary Report**
   - Uncover and mitigate surprises.
   - Define capability to answer questions.
3. **Final Report**
   - In-depth coverage.
   - Adapt methods to answer questions.

## Hurdles in the Case Study
### 1st Hurdle: Define a Scope
- **Context:**
  - Officer/Director calls about a possible contract violation involving the outgoing transfer of proprietary documents.
- **Objective:**
  - Define a scope of work to identify file transfers, examine hard drives, email attachments, and other potential sources.

### 2nd Hurdle: Preliminary Report
- **Good News:**
  - Well-defined keywords and file names.
- **Bad News:**
  - IT deleted the user profile, reformatted, and reinstalled Windows Vista six months ago, and gave the laptop to a new employee.
- **Findings:**
  - D:\OfInterest.doc found in unallocated space.

### Shortcuts
- **Attributes:**
  - IDs, labels, size
  - Snapshot of file and media attributes
- **Example:**
  - **Shortcut File:**
    - Read-only
    - File attributes: N/A
    - Last access time (UTC): 11/3/2006 10:12:34 AM
    - Last write time (UTC): 11/11/2006 3:21:14 PM
    - Creation time (UTC): 1643743
    - File size: E2C3-F184
    - Volume Serial Number: Nov 11 2006
    - Volume Label: CD-ROM
    - Volume Type: D:\OfInterest.doc
    - Local Path: Link target information

### 3rd Hurdle: Final Report
- **Objective:**
  - Identify outgoing file transfers.
- **Methods:**
  - Data carving for file paths and timestamps.
  - Sources:
    - Event logs
    - Internet history
    - Shortcuts
    - Other potential sources

## Event Logging in Windows Vista/2008
- **Key Features:**
  - Time, SID, Source, Severity, Message
  - Over 50 default logs located at `C:/Windows/system32/winevt/Logs/`
  - Example logs: Application.evtx, HardwareEvents.evtx, Internet Explorer.evtx, Security.evtx, Setup.evtx, System.evtx

## Vista Logging Service
- **High Performance Tracing:**
  - Event Tracing for Windows (ETW)
  - Unified: kernel/app, tracing/logging, remote/local
  - High performance: 5% CPU for 20K events/sec, 200K w/Transactions
  - Buffered in kernel
  - Dynamically enable/disable
  - No reboot or restart required
  - Push or pull subscription options

## Vista Events
- **Encoding:**
  - XML standards encoding
  - System: standard properties
  - EventData: application-defined
  - Query live logs and log files
  - Subscribe to live logs
  - Filter using XPath
- **Internals:**
  - New, different encoding
  - Arbitrary structure defined by each application

### Undocumented Event Structure
- **Record Header:**
  - Common attributes (timestamp, severity)
  - Number of sections
- **Section Descriptors:**
  - Source
  - Offset, length
- **Section Headers:**
  - Specifies encoding of body
- **Section Body:**
  - Event-specific data

## Binary XML (BXML)
- **Features:**
  - Developed by CubeWerx for OpenGIS Consortium
  - Higher performance in both space and time
  - More compact
  - String table for tags and values
  - Gzip whole document or just body
  - Avoids resource exhaustion of DOM
  - 10 to 100 times faster to parse
  - 100 times faster for dense numeric data due to binary encoding
- **Serialization:**
  - Numbers begin with a one-byte code identifying the data type
  - XML tags are serialized as a byte code followed by a reference to the tag name in the string table
  - Strings are preceded by their length
  - String tables are preceded by type code and table size

## Why the Changes?
- **Performance, Scalability, and Security:**
  - New event publishing API
  - Schematized, discoverable, structured events
  - Unified API
  - Logging uses the tracing framework

This optimized version provides a clear, professional, and organized structure for the presentation, making it easier to follow and understand.