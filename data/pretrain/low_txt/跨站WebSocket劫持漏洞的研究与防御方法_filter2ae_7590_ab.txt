### 优化后的文本

#### 第四节 安全机制设计
5. 当客户端建立连接时，使用协商密钥对Token进行加密，并将加密后的Token与WebSocket连接请求一起发送给服务器。
6. 服务器使用相同的协商密钥解密Token值，验证身份信息，并决定是否接受连接。如果身份信息验证成功，则销毁之前的Token并生成新的Token，返回给客户端。

本方案首先采用公钥加密技术来确保登录信息和客户端密钥的安全性。然后，利用协商好的对称密钥对Token进行加密。即使Token被泄露，如果没有相应的密钥，攻击者也无法通过服务器的身份验证，从而防止了Token泄露的风险。最后，在身份验证完成后，销毁旧的Token并发放新的Token，可以有效防止重放攻击。

#### 第五节 实验结果与分析
本节主要检验所提出设计方案的效果。

**A. 实验平台和检测工具**
- **实验平台**：测试环境以Ubuntu作为服务器操作系统，使用Node.js作为Web容器，360安全浏览器作为客户端。
- **加密算法**：非对称加密采用RSA算法，对称加密采用AES算法。AES密钥长度和随机令牌长度统一规定为16位字符。
- **检测工具**：采用OWASP ZAP软件作为实验检测工具。设置浏览器代理后，OWASP ZAP可以抓取浏览器与服务器之间的数据包进行分析和渗透性检测。实验主要利用ZAP抓取WebSocket请求连接数据包，修改参数后重新发送连接请求，以检查是否能成功连接到服务器。

**B. 效果测试**
- **无防御措施的情况**：图6显示了未采取任何防御措施的实验结果。原点字段被修改，但连接仍然成功建立，说明存在跨站点WebSocket劫持漏洞。
  - **图6**：在没有任何防御措施的情况下成功建立劫持连接
  
- **使用防御方案的情况**：图7展示了使用本文提出的防御方案后的实验结果。可以看出，WebSocket连接失败是因为服务器的Token值发生了变化。当重放请求时，服务器验证失败。
  - **图7**：使用防御方案后，请求被重放，但连接失败。
  
- **进一步测试**：从捕获的响应数据包中提取Token值，并替换请求数据包中的Token。再次发送请求，但连接仍然失败，如图8所示。这是因为Token没有经过加密，服务器验证失败。
  - **图8**：使用防御方案后，Token被篡改，但连接失败。

从以上实验结果可以看出，本文提出的防御方案能够有效抵抗跨站WebSocket劫持漏洞。

#### 参考文献
1. Jiahao Qin, "Research and performance analysis of instant messaging based on WebSocket [J]," *Mobile Communication*, vol. 41, no. 12, pp. 44-48, 2017.
2. Xuejie Tong and Xufu Peng, "Research on Security Algorithms of Web Communication [J]," *Information Communication*, vol. 12, pp. 126-127, 2018.
3. Chaoju Hu and Cong Gao, "Research on New Features and Security of WebSocket [J]," *Network Security Technology and Application*, vol. 11, pp. 55-56, 2015.
4. Cong Gao, "Research on Application of Information Security Technology in WebSocket Real-Time Communication [D]," North China Electric Power University, 2016.
5. Jun Zhu, "Design and Implementation of WebSocket Security Subprotocol Based on Node Platform [D]," Huazhong University of Science and Technology, 2016.
6. Renwei Yi, "Research on Real-time Web Application Based on WebSocket [D]," Wuhan University of Technology, 2013.
7. Deyu Zeng, "WebSocket Security Vulnerability and Its Repair [J]," *Digital Technology and Application*, vol. 09, pp. 198, 2016.
8. Dong Lu and Tong Zhou, "Research on CSRF Attack and Defense Methods [J]," *Electronic World*, vol. 12, pp. 139-140, 2017.
9. Xinxin Zheng, "Research on CSRF Attack and Defense Technology [D]," Beijing University of Posts and Telecommunications, 2016.
10. Yingjun Wang, Jianming Fu, and Lily Jiang, "Cross-site request forgery defense method based on randomized parameter names [J]," *Computer Engineering*, vol. 44, no. 11, pp. 158-164, 2018.
11. Haiyang Wei, "Analysis of Information Security Application of Hybrid Encryption Technology in Network Communication [J]," *Information Communication*, vol. 07, pp. 181-182, 2018.
12. Pingping Shao, "Research on Hybrid Encryption Technology in Computer Network Security [J]," *Information Technology and Informatization*, vol. 12, pp. 123-125, 2018.