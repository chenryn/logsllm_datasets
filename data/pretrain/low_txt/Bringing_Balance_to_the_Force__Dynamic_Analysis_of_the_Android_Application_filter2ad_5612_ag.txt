以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[39] B. Liu, M. S. Andersen, F. Schaub, H. Almuhimedi, S. A. Zhang, N. Sadeh, Y. Agarwal, and A. Acquisti, “Follow My Recommendations: A Personalized Privacy Assistant for Mobile App Permissions,” in *Twelfth Symposium on Usable Privacy and Security (SOUPS ’16)*. USENIX Association, 2016.

[40] L. Lu, Z. Li, Z. Wu, W. Lee, and G. Jiang, “Chex: Statically Vetting Android Apps for Component Hijacking Vulnerabilities,” in *19th ACM Conference on Computer and Communication Security (CCS’12)*, 2012.

[41] L. Luo, Q. Zeng, C. Cao, K. Chen, J. Liu, L. Liu, N. Gao, M. Yang, X. Xing, and P. Liu, “System Service Call-Oriented Symbolic Execution of Android Framework with Applications to Vulnerability Discovery and Exploit Generation,” in *15th Annual International Conference on Mobile Systems, Applications, and Services (MobiSys’17)*. ACM, 2017.

[42] S. Ognawala, A. Petrovska, and K. Beckers, “An Exploratory Survey of Hybrid Testing Techniques Involving Symbolic Execution and Fuzzing,” *CoRR*, vol. abs/1712.06843, 2017.

[43] R. Pandita, X. Xiao, W. Yang, W. Enck, and T. Xie, “WHYPER: Towards Automating Risk Assessment of Mobile Applications,” in *22nd USENIX Security Symposium (SEC’13)*. USENIX Association, 2013.

[44] S. T. Peddinti, I. Bilogrevic, N. Taft, M. Pelikan, U. Erlingsson, P. Anthonysamy, and G. Hogben, “Reducing Permission Requests in Mobile Apps,” in *Internet Measurement Conference (IMC ’19)*. ACM, 2019.

[45] S. T. Peddinti, N. Taft, I. Bilogrevic, and P. Anthonysamy, “Google Security Blog: Helping Developers with Permission Requests,” 2020 (Last visited: Sep 20, 2020). [Online]. Available: <https://security.googleblog.com/2020/02/helping-developers-with-permission.html>

[46] O. A. V. Ravnås, “Dynamic Instrumentation Toolkit for Developers, Reverse-Engineers, and Security Researchers,” 2020 (Last visited: Sep 20, 2020). [Online]. Available: <https://frida.re/>

[47] Y. Shao, Q. A. Chen, Z. M. Mao, J. Ott, and Z. Qian, “Kratos: Discovering Inconsistent Security Policy Enforcement in the Android Framework,” in *23rd Annual Network and Distributed System Security Symposium (NDSS’16)*. The Internet Society, 2016.

[48] R. Stevens, J. Ganz, V. Filkov, P. Devanbu, and H. Chen, “Asking for (and about) Permissions Used by Android Apps,” in *10th Working Conference on Mining Software Repositories (MSR)*. IEEE, 2013.

[49] L. Tsai, P. Wijesekera, J. Reardon, I. Reyes, S. Egelman, D. Wagner, N. Good, and J.-W. Chen, “Turtle Guard: Helping Android Users Apply Contextual Privacy Preferences,” in *Thirteenth Symposium on Usable Privacy and Security (SOUPS ’17)*. USENIX Association, 2017.

[50] R. Vallée-Rai, P. Co, E. Gagnon, L. Hendren, P. Lam, and V. Sundaresan, “Soot - A Java Bytecode Optimization Framework,” in *Conference of the Centre for Advanced Studies on Collaborative Research (CASCON ’99)*, 1999.

[51] T. Vidas, N. Christin, and L. Cranor, “Curbing Android Permission Creep,” in *W2SP*, 2011.

[52] Y. Wang, W. Cai, P. Lyu, and W. Shao, “A Combined Static and Dynamic Analysis Approach to Detect Malicious Browser Extensions,” *Security and Communication Networks*, vol. 2018, pp. 7087239:1–7087239:16, 2018.

[53] R. Watson, W. Morrison, C. Vance, and B. Feldman, “The TrustedBSD MAC Framework: Extensible Kernel Access Control for FreeBSD 5.0,” in *Proceedings of the FREENIX Track: 2003 USENIX Annual Technical Conference*. USENIX Association, 2003.

[54] C. Wright, C. Cowan, S. Smalley, J. Morris, and G. K. Hartman, “Linux Security Modules: General Security Support for the Linux Kernel,” in *11th USENIX Security Symposium (SEC’02)*. USENIX Association, 2002.

[55] J. Wu, S. Liu, S. Ji, M. Yang, T. Luo, Y. Wu, and Y. Wang, “Exception Beyond Exception: Crashing Android System by Trapping in ‘Uncaught Exception’,” in *39th IEEE/ACM International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP’17)*. IEEE, 2017.

[56] L. Wu, M. Grace, Y. Zhou, C. Wu, and X. Jiang, “The Impact of Vendor Customizations on Android Security,” in *20th ACM Conference on Computer and Communication Security (CCS’13)*. ACM, 2013.

[57] W. Yang, X. Xiao, B. Andow, S. Li, T. Xie, and W. Enck, “AppContext: Differentiating Malicious and Benign Mobile App Behaviors Using Context,” in *2015 IEEE/ACM 37th IEEE International Conference on Software Engineering*, 2015.

[58] Young Han Choi, Byoung Jin Han, Byung Chul Bae, Hyung Geun Oh, and Ki Wook Sohn, “Toward Extracting Malware Features for Classification Using Static and Dynamic Analysis,” in *8th International Conference on Computing and Networking Technology (INC, ICCIS and ICMIC ’12)*, 2012.

[59] L. Zhang, Z. Yang, Y. He, Z. Zhang, Z. Qian, G. Hong, Y. Zhang, and M. Yang, “Invetter: Locating Insecure Input Validations in Android Services,” in *25th ACM Conference on Computer and Communication Security (CCS’18)*. ACM, 2018.

[60] X. Zhang, A. Edwards, and T. Jaeger, “Using CQUAL for Static Analysis of Authorization Hook Placement,” in *11th USENIX Security Symposium (SEC’02)*. USENIX Association, 2002.

---

**附录A：ARCADE的误报**

表II. ARCADE的权限映射中错误地报告为正向的API列表及其原因

**过度近似**
- `input method.setImeWindowStatus`
- `input method.startInput`
- `input method.windowGainedFocus`
- `iphonesubinfo.getDeviceId` *
- `iphonesubinfo.getDeviceIdForPhone` *
- `iphonesubinfo.getLine1Number` *
- `iphonesubinfo.getLine1NumberForSubscriber` *
- `phone.factoryReset`
- `phone.getLine1NumberForDisplay` *
- `textservices.getCurrentSpellChecker`
- `textservices.getEnabledSpellCheckers`
- `textservices.getSpellCheckerService`
- `textservices.isSpellCheckerEnabled`

**错误的权限执行（名称解析）**
- `alarm.setTime`
- `content.getIsSyncable` *
- `content.getIsSyncableAsUser` *
- `content.getMasterSyncAutomatically` *
- `content.getMasterSyncAutomaticallyAsUser` *
- `content.getSyncAutomatically` *
- `content.getSyncAutomaticallyAsUser` *
- `deviceidle.addPowerSaveTempWhitelistApp`
- `deviceidle.addPowerSaveTempWhitelistAppForMms`
- `deviceidle.addPowerSaveTempWhitelistAppForSms`
- `input.registerTabletModeChangedListener`
- `input.setTouchCalibrationForInputDevice`
- `input.tryPointerSpeed`
- `package.movePrimaryStorage`
- `wallpaper.setWallpaperComponentChecked` *

**错误报告检查关系**
- `package.movePrimaryStorage`

*注：这些API对第三方应用开发者是可访问的。

---

**附录D：评估开发人员文档的结果**

表V. Google开发者文档中扩展和反驳的管理API权限注释 [24]

**扩展权限的API**
- `activity.getCurrentUser`
- `activity.switchUser`
- `audio.registerAudioPolicy`
- `color display.setSaturationLevel`
- `connectivity.getCaptivePortalServerUrl`
- `connectivity.setAirplaneMode`
- `connectivity.shouldAvoidBadWiFi`
- `connectivity.startCaptivePortalApp`
- `contexthub.disableNanoApp`
- `contexthub.enableNanoApp`
- `contexthub.queryNanoApps`
- `incidentcompanion.deleteIncidentReports`
- `incidentcompanion.getIncidentReport`
- `incidentcompanion.getIncidentReportList`
- `location.flushGnssBatch`
- `location.getGnssBatchSize`
- `location.registerGnssBatchedLocationCallback`
- `network score.setActiveScorer`
- `phone.setRttCapabilitySetting`
- `role.addOnRoleHoldersChangedListenerAsUser`
- `telecom.getCurrentTtyMode`
- `user.removeUser`
- `wallpaper.clearWallpaper`
- `wallpaper.setWallpaperComponent`
- `wifi.getPrivilegedConfiguredNetworks`
- `wifi.getWifiApConfiguration`
- `wifi.setWifiApConfiguration`
- `wifi.startScan`

**自然语言补充的不完整权限报告**
- `role.addRoleHolderAsUser`
- `role.clearRoleHoldersAsUser`
- `role.getRoleHoldersAsUser`
- `role.removeOnRoleHoldersChangedListenerAsUser`
- `role.removeRoleHolderAsUser`
- `usagestats.whitelistAppTemporarily`

**错误的权限报告**
- `audio.getAudioVolumeGroups`
- `overlay.getOverlayInfosForTarget`
- `overlay.setEnabled`
- `overlay.setEnabledExclusiveInCategory`
- `phone.getSupportedRadioAccessFamily`
- `phone.requestCellInfoUpdate`
- `telecom.getPhoneAccountsSupportingScheme`
- `telecom.isRinging`
- `user.isRestrictedProfile`

---

**附录B：DYNAMO的漏报**

表III. DYNAMO权限映射中的漏报API示例

**过度近似**
- `sip.close`
- `power.updateWakeLockWorkSource`
- `network management.setUidCleartextNetworkPolicy`
- `network score.clearScores`
- `account.copyAccountToUser`
- `audio.disableSafeMediaVolume`
- `netstats.getDataLayerSnapshotForUid`
- `package.clearPackagePreferredActivities`
- `media session.setRemoteVolumeController`
- `isms.sendDataForSubscriber`
- `phone.getAllCellInfo`
- `phone.getNeighboringCellInfo`
- `appops.checkAudioOperation`
- `bluetooth manager.disable`
- `connectivity.requestNetwork`
- `input method.setInputMethod`
- `location.getLastLocation`
- `vibrator.vibratePattern`
- `account.addAccountAsUser`
- `activity.moveTaskBackwards`
- `device policy.getRemoveWarning`
- `fingerprint.getEnrolledFingerprints`
- `package.addCrossProfileIntentFilter`
- `window.disableKeyguard`
- `notification.isSystemConditionProviderEnabled`

---

**附录C：ARF的结果**

表IV. ARF [29] 报告的确认和反驳的漏洞

**确认的漏洞**
- `areNotificationsEnabledForPackage`
- `cancelToast`
- `dismissKeyguard`
- `enqueueToast`
- `getAuthenticatorId`
- `getEnrolledFingerprints`
- `getFreeBytes`
- `getPermittedAccessibilityServicesForUser`
- `hasNamedWallpaper`
- `isDeviceSecure`
- `isPackageDeviceAdminOnAnyUser`
- `isSeparateProfileChallengeAllowed`

**误报**
- `whitelistAppTemporarily`
- `switchUser`
- `startBluetoothSco`
- `stopBluetoothSco`
- `startBluetoothScoVirtualCall`

---

**附录E：DYNAMO的预定义种子**

表VII. DYNAMO用于输入生成的预定义种子列表

**字符串**
- `null`
- `com.android.systemui`
- `content://user dictionary/words`
- `android.permission.MANAGE_USERS`

**整数**
- `-1, 0, 1, 10`

**字节、字符、双精度、浮点、短整型**
- `1` *

**布尔值**
- `true, false`

**Android组件**
- `android.content.[ComponentName/Intent]`
- `Package:`
- `Class:`

**URI**
- `android.net.Uri`
- `content://user dictionary/words`

*注：根据需要转换为相应的类型。

---

希望这些优化能使您的文档更加清晰和专业。如果有进一步的需求或修改，请随时告知。