### Can Coalitions Be Prevented by Simpler Solutions?

The Bitcoin community has proposed two primary alternative approaches to our solution. The first is the promotion of P2Pool and other forms of "responsible" mining, allowing users to join mining pools without ceding full control of their resources to a central authority. However, this approach has not been successful; at the time of writing, P2Pool accounts for less than 2% of the total hash power. While some pools support a protocol called "getblocktemplate," which allows pool members to see the contents of the blocks they are assigned to work on (and thus leave if they detect any disagreeable policies), the top six pools, which account for more than two-thirds of the total hash power, do not support this protocol.

A second approach involves monitoring large pools and applying social pressure to limit their size. However, pools have been accused of hiding their bandwidth to avoid backlash. In any case, we draw an analogy to coercion-resistance in electronic voting: although social deterrents can be effective in some cases, greater confidence can be derived from technical and economic deterrents.

### It's Too Late to Change Bitcoin

While we have described our design as a proposed modification to Bitcoin, this is primarily for ease of presentation. Our design can also serve as the basis for a new cryptocurrency or as a modification to any of the hundreds of Bitcoin-like "altcoins" that compete with Bitcoin. Indeed, altcoins have already begun experimenting with (weak) nonoutsourceable puzzles.

It seems unlikely that our proposed design will soon be adopted by Bitcoin. Due to the coordination involved and the risk of splintering the network, there is considerable political resistance within the Bitcoin community to adopting "hard fork" protocol changes, except in extreme cases. However, such changes have occurred in the past and could occur again. Although miners are influential and it would be unwise to adopt a new policy that causes them to leave, they are not solely responsible for Bitcoin governance. Stakeholders include payment processors, operators of "full nodes" that may not mine, and developers of popular clients. Additionally, as mentioned in Section 7.3 and explained in detail in our extended online paper, our nonoutsourceable puzzle constructions can be made backward-compatible with existing Bitcoin mining equipment, lessening the impact on established miners. Finally, even if our design is not adopted, the mere public knowledge of a viable coalition-resistant design alternative that the community could adopt, if necessary, may already serve as a deterrent against large coalitions.

### Related Work

#### Computational Puzzles
Moderately hard computational puzzles, often referred to as "proofs of work," were originally proposed to combat email spam. Most work on computational puzzles has focused on "client puzzles," which can prevent denial-of-service attacks. Recently, several attempts have been made to provide formal security definitions for client puzzles.

#### Theoretical and Economic Understanding of Bitcoin
Although a purely digital currency has long been sought by researchers, Bitcoin's key insight is to frame the problem as a consensus protocol and provide incentives for user participation. While Bitcoin's security was initially proven (informally) in the "honest majority" model, this assumption is unsatisfying because it does not address whether the incentive scheme indeed leads to an honest majority. An economic analysis by Kroll et al. showed that honest participation in Bitcoin may be incentive-compatible under certain assumptions. More recently, Eyal and Sirer demonstrated that with a more realistic strategy space, when a single player (or coalition) comprises more than a third of the network's overall strength, the protocol is not incentive-compatible. This underscores the importance of discouraging the formation of Bitcoin mining coalitions.

#### Decentralized Mining Pools
While most mining pools are operated by a central administrator, P2Pool is a successful protocol for decentralized mining pools that achieve lower payout variance for participants without requiring an administrator. Engineering efforts to improve P2Pool's performance and usability, along with public awareness campaigns, may steer more users to P2Pool rather than centralized mining pools. However, as P2Pool inherently requires more overhead than a centralized pool, we believe it is wiser to directly discourage coalitions through the built-in reward mechanism.

#### Altcoins
Numerous attempts have been made to tweak the incentive structure by modifying Bitcoin's underlying puzzle. Litecoin, for example, uses an scrypt-based puzzle to promote the use of general-purpose equipment. Another goal is to make the puzzle-solving computation have an intrinsically useful side effect. To our knowledge, we are the first to suggest deterring mining coalitions as a design goal.

#### Zerocoin, Zerocash, and PinocchioCoin
Zerocoin, Zerocash, and PinocchioCoin focus on making Bitcoin transactions anonymous by introducing a public cryptographic accumulator for mixing coins. Spending a coin involves producing a zero-knowledge proof that the coin has not yet been spent. Although our zero-knowledge proof construction may bear superficial resemblance to this approach, our work addresses a completely different problem.

#### Coercion-Resistance in Electronic Voting
Our approach is inspired by notions of coercion-resistance in electronic voting. Vote buying and other forms of coercion are illegal in all U.S. state and federal elections. While legal prosecution poses a deterrent, electronic voting schemes have been designed to provide technical countermeasures. Such schemes ensure that voters cannot obtain any receipt that could demonstrate how they voted to a coercive attacker. We draw an analogy between vote buying and what we call outsourcing schemes; analogous to receipt-freeness, the (strongly) nonoutsourceable property prevents a worker from proving to a pool operator how its hash power is used.

#### Most Closely Related Work
In Permacoin, Miller et al. proposed a Bitcoin-like system that achieves decentralized data storage as a useful side effect of mining. They implicitly developed a weakly nonoutsourceable puzzle that deters consolidation of storage capacity. Our Merkle-tree-based weakly nonoutsourceable puzzle construction is directly inspired by the construction in Permacoin. However, Permacoin does not formalize the notion of (weakly) nonoutsourceable puzzles or consider the goal of deterring outsourcing outside the context of archival storage. Our paper provides the first formal treatment of nonoutsourceable puzzles and introduces a new notion of strongly nonoutsourceable puzzles, which repairs a critical flaw in Permacoin.

In independent work, Eyal and Sirer developed a technique for combining a weakly nonoutsourceable puzzle with an arbitrary scratch-off puzzle, resulting in a puzzle that retains the best properties of the constituents. This can be used, for example, to create a nonoutsourceable puzzle that is backward-compatible with existing Bitcoin mining equipment. We discuss applications of this technique in the full online version of our paper.

### Conclusion
The prevalence of Bitcoin mining coalitions, including both mining pools and hosted mining services, leads to the consolidation of power and increased systemic risk to the network. This is a result of a built-in design limitation of the Bitcoin puzzle itself, specifically, that it admits an effective coalition enforcement mechanism. To address this, we have proposed formal definitions of nonoutsourceable puzzles for which no such enforcement mechanism exists. We have contributed two constructions: a weak nonoutsourceable puzzle provable in the random oracle model and a generic transformation from any weak nonoutsourceable puzzle to a strong one. The former may already be a sufficient deterrent against mining pools, while the latter thwarts both hosted mining and mining pools. We have implemented both techniques and provided performance evaluation results showing that these add only a tolerable overhead to the cost of Bitcoin blockchain validation. Overall, we are optimistic that our approach, combined with suitable modifications to the reward structure, could be used to guarantee that participation as an independent individual is the most effective mining strategy.

### Acknowledgments
We thank the readers and reviewers of earlier drafts of this paper. This work was supported in part by NSF awards #0964541, #1223623, and #1518765.

### References
[1] ziftrcoin : A cryptocurrency to enable commerce. Whitepaper.
[2] James Aspnes, Collin Jackson, and Arvind Krishnamurthy. Exposing computationally-challenged byzantine impostors. Department of Computer Science, Yale University, New Haven, CT, Tech. Rep, 2005.
[3] Simon Barber, Xavier Boyen, Elaine Shi, and Ersin Uzun. Bitter to better – how to make bitcoin a better currency. In Financial Cryptography and Data Security, pages 399–414. Springer, 2012.
[4] Eli Ben-Sasson, Alessandro Chiesa, Christina Garman, Matthew Green, Ian Miers, Eran Tromer, and Madars Virza. Zerocash: Decentralized anonymous payments from bitcoin. In Security and Privacy (SP), 2014 IEEE Symposium on. IEEE. IEEE, 2014.
[5] Eli Ben-Sasson, Alessandro Chiesa, Eran Tromer, and Madars Virza. Succinct non-interactive zero knowledge for a von neumann architecture. In 23rd USENIX Security Symposium (USENIX Security 14), pages 781–796, San Diego, CA, August 2014. USENIX Association.
[6] Josh Benaloh and Dwight Tuinstra. Receipt-free secret-ballot elections. In Proceedings of the twenty-sixth annual ACM symposium on Theory of computing, pages 544–553. ACM, 1994.
[7] Joseph Bonneau, Andrew Miller, Jeremy Clark, Arvind Narayanan, Joshua Kroll, and Edward W. Felten. Research perspectives on bitcoin and second-generation digital currencies. In 2015 IEEE Symposium on Security and Privacy. IEEE, 2015.
[8] Joseph Bonneau, Arvind Narayanan, Andrew Miller, Jeremy Clark, Joshua A Kroll, and Edward W Felten. Mixcoin: Anonymity for bitcoin with accountable mixes. In Financial Cryptography and Data Security, pages 486–504. Springer, 2014.
[9] Danny Bradbury. Alydian targets big ticket miners with terahash hosting. http://www.coindesk.com/alydian-targets-big-ticket-miners-with-terahash-hosting/, August 2013.
[10] Vitalik Buterin. Bitcoin network shaken by blockchain fork. http://bitcoinmagazine.com/3668/bitcoin-network-shaken-by-blockchain-fork/, 2013.
[11] David Chaum. Blind signatures for untraceable payments. In Crypto, volume 82, pages 199–203, 1982.
[12] David Chaum, Amos Fiat, and Moni Naor. Untraceable electronic cash. In Advances in Cryptology—CRYPTO’88, pages 319–327. Springer, 1990.
[13] Liqun Chen, Paul Morrissey, Nigel P Smart, and Bogdan Warinschi. Security notions and generic constructions for client puzzles. In Advances in Cryptology–ASIACRYPT 2009, pages 505–523. Springer, 2009.
[14] Wei Dai. b-money. http://www.weidai.com/bmoney.txt, 1998.
[15] George Danezis, Cedric Fournet, Markulf Kohlweiss, and Bryan Parno. Pinocchio coin: building zerocoin from a succinct pairing-based proof system. In Proceedings of the First ACM workshop on Language support for privacy-enhancing technologies, pages 27–30. ACM, 2013.
[16] C. Dwork and M. Naor. Pricing via processing or combatting junk mail. In CRYPTO, 1993.
[17] Ittay Eyal and Emin Gün Sirer. How to disincentivize large bitcoin mining pools. Blog post: http://hackingdistributed.com/2014/06/18/how-to-disincentivize-large-bitcoin-mining-pools/, June 2014.
[18] Ittay Eyal and Emin Gün Sirer. Majority is not enough: Bitcoin mining is vulnerable. In Financial Cryptography and Data Security, pages 436–454. Springer, 2014.
[19] Juan Garay, Aggelos Kiayias, and Nikos Leonardos. The bitcoin backbone protocol: Analysis and applications. In Advances in Cryptology-EUROCRYPT 2015, pages 281–310. Springer, 2015.
[20] Rosario Gennaro, Craig Gentry, Bryan Parno, and Mariana Raykova. Quadratic span programs and succinct NIZKs without PCPs. In Advances in Cryptology–EUROCRYPT 2013, pages 626–645. Springer, 2013.
[21] Bogdan Groza and Bogdan Warinschi. Cryptographic puzzles and DoS resilience, revisited. Designs, Codes and Cryptography, pages 1–31, 2013.
[22] Richard L Hasen. Vote buying. California Law Review, pages 1323–1371, 2000.
[23] Ari Juels and John G Brainard. Client puzzles: A cryptographic countermeasure against connection depletion attacks. In NDSS, volume 99, pages 151–165, 1999.
[24] Joshua A Kroll, Ian C Davey, and Edward W Felten. The economics of bitcoin mining or, bitcoin in the presence of adversaries. WEIS, 2013.
[25] Ben Laurie and Richard Clayton. Proof-of-work proves not to work; version 0.2. In Workshop on Economics and Information, Security, 2004.
[26] Yoad Lewenberg, Yonatan Sompolinsky, and Aviv Zohar. Inclusive block chain protocols. Financial Cryptography and Data Security. Springer, 2015.
[27] Jon Matonis. The bitcoin mining arms race: Ghash.io and the 51% issue. http://www.coindesk.com/bitcoin-mining-detente-ghash-io-51-issue/, July 2014.
[28] Ian Miers, Christina Garman, Matthew Green, and Aviel D Rubin. Zerocoin: Anonymous distributed e-cash from bitcoin. In Security and Privacy (SP), 2013 IEEE Symposium on, pages 397–411. IEEE, 2013.
[29] Andrew Miller, Ari Juels, Elaine Shi, Bryan Parno, and Jonathan Katz. Permacoin: Repurposing bitcoin work for long-term data preservation. In IEEE Symposium on Security and Privacy, 2014.
[30] Andrew Miller, Ahmed Kosba, Elaine Shi, and Jonathan Katz. Nonoutsourceable scratch-off puzzles to discourage bitcoin mining coalitions. (full version). http://cs.umd.edu/~amiller/nonoutsourceable_full.pdf, 2015.
[31] Andrew Miller and Joseph J. LaViola, Jr. Anonymous byzantine consensus from moderately-hard puzzles: A model for bitcoin. UCF Tech Report. CS-TR-14-01.
[32] Satoshi Nakamoto. Bitcoin: A peer-to-peer electronic cash system. http://bitcon.org/bitcoin.pdf, 2008.
[33] Valtteri Niemi and Ari Renvall. How to prevent buying of votes in computer elections. In Advances in Cryptology–ASIACRYPT’94, pages 164–170. Springer, 1995.
[34] Emily Oster. Are all lotteries regressive? Evidence from the Powerball. National Tax Journal, June, 2004.
[35] Bryan Parno. A note on the unsoundness of vntinyram’s SNARK. Cryptology ePrint Archive, Report 2015/437, 2015. http://eprint.iacr.org/.
[36] Bryan Parno, Craig Gentry, Jon Howell, and Mariana Raykova. Pinocchio: Nearly practical verifiable computation. In IEEE Symposium on Security and Privacy, pages 238–252, 2013.
[37] Colin Percival and Simon Josefsson. The scrypt password-based key derivation function. 2012.
[38] John Quiggin. On the optimal design of lotteries. Economica, 58(229):1–16, 1991.
[39] Meni Rosenfeld. Analysis of bitcoin pooled mining reward systems. arXiv preprint arXiv:1112.4980, 2011.
[40] Yonatan Sompolinsky and Aviv Zohar. Secure high-rate transaction processing in bitcoin. Financial Cryptography and Data Security. Springer, 2015.
[41] Spreadcoin. http://spreadcoin.net/files/SpreadCoin-WhitePaper.pdf, October 2014.
[42] Douglas Stebila, Lakshmi Kuppusamy, Jothi Rangasamy, Colin Boyd, and Juan Gonzalez Nieto. Stronger difficulty notions for client puzzles and denial-of-service-resistant protocols. In Topics in Cryptology–CT-RSA 2011, pages 284–301. Springer, 2011.
[43] John Tromp. Cuckoo cycle: a new memory-hard proof-of-work system. Bitcoin Research Workshop, 2015.
[44] Forrest Voight. P2Pool: Decentralized, DoS-resistant, hop-proof pool. https://bitcointalk.org/index.php?topic=18313, June 2011.