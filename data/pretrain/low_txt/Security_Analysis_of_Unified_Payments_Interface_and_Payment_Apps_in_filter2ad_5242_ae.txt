### Analysis of SSL Vulnerabilities in Mobile Applications

Reaves et al. [48] conducted an analysis of 47 mobile applications from 29 countries, focusing on SSL vulnerabilities. They then manually reverse-engineered seven branchless banking apps, including three Indian payment apps: Airtel Money, Oxigen Wallet, and MobileOnMoney. Their findings revealed that attackers could bypass authentication due to the use of insecure channels, weak cryptography, or weak passwords.

In a follow-up study, Castle et al. [9] examined 197 payment apps, some of which were from Southern Asia (the specific apps were not listed). They concluded that payment apps generally have sufficient safeguards against attacks, and the vulnerabilities identified by Reaves et al. were either due to regulatory constraints or the use of outdated Android devices. This conclusion was supported by interviews with developers from well-established organizations.

### Global Studies on Payment App Security

Several other studies have explored the security of payment apps in different regions. Yang et al. [62] highlighted implementation weaknesses in third-party SDKs used by Chinese financial apps, which could lead to integrity attacks on financial transactions. Jung et al. [31] investigated repackaging attacks on seven Korean banking apps, demonstrating that such attacks could bypass integrity and antivirus checks. Yacouba et al. [33] successfully launched a DDoS attack on a banking server through a repackaged banking app. Roland et al. [50] demonstrated an NFC relay attack on the Google Wallet payment system.

### Research on Financial Application Vulnerabilities

Taylor et al. [56] performed a static analysis of financial apps on the Google Play Store, identifying several weaknesses, such as the creation of world-readable and writable files, the use of unsecured content providers, and the use of weak random number generators. Bojjagani et al. [7] conducted both static and dynamic analyses on banking apps, discovering 356 exploitable vulnerabilities, though the details and sample set remain unknown.

AlJudaibi et al. [3] discussed 11 significant threats to mobile devices, including insecure data storage, weak server-side controls in third-party apps, the use of rooted devices, and inadequate security in software and kernel. Chothia et al. [11], Stone et al. [55], and Bojjagani et al. [6] analyzed both Android and iPhone apps for the lack of hostname verification when SSL certificates are pinned, showing how these vulnerabilities make popular banking apps susceptible to phishing and man-in-the-middle attacks.

### Protocol Flaws and Financial Inclusion

Previous research has also examined protocol flaws in payment systems using chip and PIN (EMV) [8, 35, 38, 51] and 3-D Secure 2.0 [2], an authentication protocol for web-based payments. Additionally, extensive studies have been conducted on financial inclusion in developing countries like Brazil and Africa [22, 42, 61]. The weaknesses in financial systems due to excessive reliance on one-time passwords (OTPs) [10, 37, 49, 59] and their implications for internet-based services [1, 16, 32, 37, 53, 63] are well-documented.

### Indian Payment Apps and UPI

Prior studies on Indian payment apps were conducted before the launch of the Unified Payment Interface (UPI), a first-of-its-kind initiative by the Indian government. To our knowledge, this is the first study to focus on UPI.

### Conclusion

In this paper, we employed a systematic approach to analyze the UPI 1.0 protocol, uncovering core design weaknesses in its unpublished multi-factor authentication workflow. These vulnerabilities can severely impact users, and we demonstrated attacks that require only the installation of an attacker-controlled app, regardless of whether the user employs a UPI app. All identified vulnerabilities were responsibly disclosed, and a subsequent software update to UPI 2.0 mitigated the discussed attack vectors. However, several underlying security flaws persist, highlighting the need for further vetting and security analysis of UPI 2.0, given its critical role in India's mobile payment ecosystem. We discussed the lessons learned and potential mitigation strategies. Our findings are expected to be valuable for other countries considering the implementation of a common backend infrastructure for financial apps.

### Acknowledgements

The authors thank Paul Pearce for shepherding the paper, the anonymous reviewers for their valuable inputs, and Roya Ensafi and Earlence Fernandes for their feedback. We also thank colleagues Jithin M., Jothis M., and Arjun R. for their assistance in analyzing Android apps during the preliminary stages of the project. This work was supported by the National Science Foundation under grant number 1646392.

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text.