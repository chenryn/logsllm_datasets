### Key Compromise for 0.5% of HTTPS-Enabled Internet Hosts [20]

In a separate study on the remediation of hijacked websites, Li et al. reported that browser interstitials and search engine warnings correlated with faster remediation compared to private notifications via WHOIS contact alone [29].

### Figure 1: Overview of Spoofer Project Architecture

The Spoofer project architecture consists of client software, a server to coordinate measurements, and a series of receivers to collect packets sent by clients.

### Timeline of Spoofer Project Since Re-Launch

- **May 2015**: Project re-launched.
- **February 2016**: Client allows users to share test results publicly.
- **May 2016**: New client released, featuring a GUI and automated probing via a daemon. Begin sending private notifications.
- **October 2016**: Presented at North American Network Operators’ Group (NANOG) meeting.
- **December 2016**: Probing speed improvements in the client.
- **March 2017**: Begin testing SAV inbound to the client.
- **October 2017**: Begin testing the granularity of IPv6 SAV filters.
- **April 2018**: Begin monthly geo-scoped emails to network operator groups.
- **June 2018**: Release OpenWRT client.
- **September 2018**: Deploy new NAT testing mode.
- **December 2018**: Halt private notifications.

### 3. System Architecture

The Spoofer system comprises client software, a set of vantage points for receiving spoofed packets sent by the client, and a server for coordinating measurements and sending spoofed packets to the clients, as illustrated in Figure 1. Prior to 2016, the collected measurements were sparse across both time and topology [6]. Users had to manually run a program requiring root access, resulting in many prefixes and ASes having only a single test run. Since August 2015, we have undertaken development efforts to reduce or remove barriers to operating the measurement client and obtaining data, and outreach efforts to promote both testing and deployment of SAV. Table 1 summarizes the major improvements made and some of the outreach to network operators at industry meetings.

#### Key Improvements

1. **Client Software**:
   - The client now has a digitally signed install package available for all major desktop operating systems (Windows, MacOS, and Linux) as well as OpenWRT, and is provided as open source.
   - The client includes a GUI to present results in English, communicates securely to our server using protobuf and TLS, and can automatically update itself.
   - Ideally, the project would provide a Spoofer App for Android or iOS, but neither platform supports constructing packets with spoofed source addresses unless the device is jailbroken.

2. **Automated Testing**:
   - Instead of requiring manual initiation, the client now runs as a daemon that automatically performs tests, typically weekly, and whenever it connects to a new network.
   - This increases both spatial and temporal coverage, allowing for richer and more confident inferences (§5).

3. **Expanded Testing Capabilities**:
   - The handshake process allows the server to determine if the client is behind a NAT router, enabling novel tests to evaluate SAV limitations in NAT implementations (§6.1).
   - The client now tests both IPv4 and IPv6 on all platforms, including SAV granularity and location in the network (§6.2).
   - The system also tests filtering of spoofed packets inbound to the client’s network using packets from the Spoofer server with a source address from the client’s network (e.g., 192.0.2.0/24 in Figure 1).

4. **Promoting SAV Deployment**:
   - Test results are publicly shared with anonymized IP addresses on the project website.
   - Unanonymized IP addresses are privately shared with operators who require them to identify specific equipment without SAV deployed, provided the user does not opt-out.
   - The Spoofer client prompts the user for their sharing preferences upon first launch.
   - For public reporting, we anonymize IP addresses by concealing at least the last eight bits of the address (IPv4) or the first 40 bits (IPv6).

#### Impact on Coverage

The project's efforts to lower barriers to running the test have significantly increased the coverage of Spoofer measurements (Figure 2). Before the release of the probing daemon in May 2016, the project collected approximately 23k successful test sessions over 11 years, averaging 174 sessions per month. In the following 39 months ending August 2019, the project collected more than 414k sessions, averaging 10,639 sessions per month, representing a two orders of magnitude increase. Measurement coverage of the global Internet topology has similarly expanded, from 3410 IPv4 ASes to 6938 (10.6% of globally routed ASes as of August 2019), with 3528 ASes newly observed since May 2016. IPv6 coverage has increased from 211 ASes to 980 (6.3% of globally routed IPv6 ASes), with 769 ASes newly observed since May 2016.

### 4. Overview

Figure 4 provides an overview of our findings on SAV deployment for packets both outbound from and inbound to the measured networks, for the year ending 1 August 2019. We present deployment statistics by IPv4/24 and IPv6/40 prefixes, and by AS. An AS with partial deployment originates some prefixes from which the Spoofer system did not receive spoofed packets, and others from which it did.

This data indicates that while most networks block packets with spoofed source IP addresses, deployment is far from universal. Specifically, 25.2% and 32.1% of tested IPv4 and IPv6 ASes, respectively, had at least one prefix where operators had not deployed SAV to block outbound spoofed packets to the Internet (first and last bars in Figure 4b). The small fraction of prefixes from which we received spoofed IPv4 packets (Figure 4a) is primarily due to the presence of NAT routers that rewrite spoofed packets with the router’s publicly routable address. When a NAT router was not present, 14.9% of IPv4 prefixes had no filtering; filtering was better deployed at prefix-level granularity in IPv6, with 12.3% of tested prefixes not filtering.

The lower panels of Figure 4 (c and d) summarize the observed state of filtering of packets inbound to the client’s network, claiming to be from within the same subnet as the client. This test sends a packet to the client with a source address inside the same subnet. Surprisingly, inbound filtering of spoofed packets is even less deployed than outbound filtering, despite these packets being a threat to the receiving network. In our data, 67.0% and 74.2% of IPv4 and IPv6 ASes, respectively, had at least one prefix where they were not filtering inbound packets.

We compare the IPv4 tests we received for the year ending August 2019, where the client was not behind a NAT, to the same class of tests from 1 May 2006 to 7 May 2006, during which the project received 1057 tests, triggered by an article on Slashdot encouraging readers to run the original Spoofer test [61] (lower left panel of Figure 2). For the first week of May 2006, 18.3% of IPv4/24 prefixes and 20.4% of ASes tested did not block spoofed-source packets from leaving their networks. Figure 4 shows that for the year ending August 2019, 14.9% of IPv4/24 prefixes and 30.5% of ASes tested did not block spoofed-source packets, implying that SAV deployment has not generally improved.

We reinforce this result by considering the influence of a prefix’s age—defined as how long it has been observable in the global BGP routing table—on the probability that it performs source address validation. One hypothesis is that older networks are more mature and hence have better hygiene. However, newer networks may have newer equipment, less configuration inertia, and better awareness of network security. The increasing prevalence of address transfers post-IPv4-exhaustion adds additional noise to this already speculative exercise.

We generate a radix trie of prefix ages by iterating over monthly snapshots of Routeviews [1] and RIPE RIS from January 2000 to August 2019. The metadata in the radix trie for each prefix is the date it first appeared in our snapshots. Note that prefix aggregation can affect the accuracy of this data.