### When Classes are in Session at the University of Wisconsin

Clients can request, pause, resume, fast-forward, rewind, and jump to specific markers in the video content at any point in time. These results are based on simulations under Poisson request arrivals. However, as reported in [12], similar results are obtained for a heavy-tailed distribution of inter-request times modeled by a Pareto distribution. All results in the figure have 95% confidence intervals within 5% of the reported values.

### Figure 10: RBS Performance (10% Packet Loss)

- **Client Request Rate, N**
  - n=1.25
  - n=1.39
  - n=1.67
  - n=2.22
  - Lower Bound

The implementation has demonstrated that bandwidth skimming (1) is simple to implement, particularly for the closest target (CT) variant of the protocol [11], (2) can be easily extended to support client interactive requests, and (3) can be designed with minimal client feedback for stream merging. Extensions to implement the RBS protocol are currently in progress.

### 6. Conclusions

This paper addresses the design of scalable and reliable on-demand delivery of streaming media. New Reliable Periodic Broadcast (RPB) protocols and Reliable Bandwidth Skimming (RBS) protocols were developed and evaluated. The evaluation relied on simple lower bounds on required server bandwidth for any protocol that provides uninterrupted playback when the average packet loss rate is bounded by \( p \). One bound assumes immediate service to each client, while the other assumes serving an unlimited number of clients with a specified maximum client start-up delay. Each of the new protocols nearly achieves the applicable lower bound, thus achieving near-optimal scalability.

Ongoing research includes:
- Experimental evaluation of the new RPB and RBS protocols.
- Development of congestion control strategies for RPB and RBS systems.
- Development of RPB and RBS protocols for VBR content that has not been fully smoothed.
- Development of RPB systems with different loss protection for different layers in a layered media stream.
- Quantification of required server bandwidth for RBS systems with specified frequencies and types of interactive requests.

### 7. Acknowledgments

We would like to thank John Zahorjan for early technical discussions on this topic. We also thank Jussara Almeida, Paul Barford, and the anonymous SIGCOMM 2001 referees for their valuable comments that improved the paper presentation.

### 8. References

[1] C. C. Aggarwal, J. L. Wolf, and P. S. Yu, “A Permutation Based Pyramid Broadcasting Scheme for Video On-Demand Systems”, Proc. IEEE ICMCS '96, Hiroshima, Japan, June 1996.

[2] J. M. Almeida, J. Krueger, D. L. Eager, and M. K. Vernon, “Analysis of Educational Media Server Workloads”, Proc. NOSSDAV '01, Port Jefferson, NY, June 2001.

[3] Y. Birk and R. Mondri, “Tailored Transmissions for Efficient Near-Video-On-Demand Service”, Proc. IEEE ICMCS '99, Florence, Italy, June 1999.

[4] J. C. Bolot, S. Parisis, and D. Towsley, “Adaptive FEC-Based Error Control for Internet Telephony”, Proc. IEEE Infocom '99, New York, NY, March 1999.

[5] J. Byers, M. Luby, M. Mitzenmacher, and A. Rege, “A Digital Fountain Approach to Reliable Distribution of Bulk Data”, Proc. ACM Sigcomm '98, Vancouver, Canada, Sept. 1998.

[6] Y. Cai, K. A. Hua, and K. Vu, “Optimizing Patching Performance”, Proc. MMCN '99, San Jose, CA, Jan. 1999.

[7] G. Carle and E. W. Biersack, “Survey of Error Recovery Techniques for IP-based Audio-Visual Multicast Applications”, IEEE Network, Vol. 11, No. 6, Nov./Dec. 1997.

[8] S. W. Carter and D. D. E. Long, “Improving Video-on-Demand Server Efficiency Through Stream Tapping”, Proc. ICCCN '97, Las Vegas, Sept. 1997.

[9] P. A. Chou, A. E. Mohr, A. Wang, and S. Mehrotra, “FEC and Pseudo-ARQ for Receiver-driven Layered Multicast of Audio and Video”, Proc. IEEE Data Compression Conf., Snowbird, UT, March 2000.

[10] D. L. Eager, M. K. Vernon, and J. Zahorjan, “Minimizing Bandwidth Requirements for On-Demand Data Delivery”, IEEE Trans. on Knowledge and Data Engineering, Sept./Oct. 2001. (Earlier version appears in Proc. MIS '99.)

[11] D. L. Eager, M. K. Vernon, and J. Zahorjan, “Optimal and Efficient Merging Schedules for Video-on-Demand Servers”, Proc. ACM Multimedia '99, Orlando, FL, Nov. 1999.

[12] D. L. Eager, M. K. Vernon, and J. Zahorjan, “Bandwidth Skimming: A Technique for Cost-Effective Video-on-Demand”, Proc. MMCN '00, San Jose, CA, Jan. 2000.

[13] S. Floyd, V. Jacobson, C. G. Liu, S. McCanne, and L. Zhang, “A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing”, Proc. ACM Sigcomm '95, Cambridge, MA, Aug. 1995.

[14] L. Gao, J. Kurose, and D. Towsley, “Efficient Schemes for Broadcasting Popular Videos”, Proc. NOSSDAV '98, Cambridge, UK, July 1998.

[15] L. Gao and D. Towsley, “Supplying Instantaneous Video-on-Demand Systems Using Controlled Multicast”, Proc. IEEE ICMCS '99, Florence, Italy, June 1999.

[16] A. Hu, “Video-on-Demand Broadcasting Protocols: A Comprehensive Study”, Proc. IEEE Infocom '01, Anchorage, AK, April 2001.

[17] K. A. Hua and S. Sheu, “Skyscraper Broadcasting: A New Broadcasting Scheme for Metropolitan Video-on-Demand Systems”, Proc. ACM Sigcomm '97, Cannes, France, Sept. 1997.

[18] K. A. Hua, Y. Cai, and S. Sheu, “Patching: A Multicast Technique for True Video-On-Demand Services”, Proc. ACM Multimedia '98, Bristol, U.K., Sept. 1998.

[19] W. Jiang and H. Schulzrinne, “Modeling of Packet Loss and Delay and their Effect on Real-Time Multimedia Service Quality”, Proc. NOSSDAV '00, Chapel Hill, NC, June 2000.

[20] L. Juhn and L. Tseng, “Fast Data Broadcasting and Receiving Scheme for Popular Video Service”, IEEE Trans. on Broadcasting, Vol. 44, No. 1, March 1998.

[21] X. Li, M. H. Ammar, and S. Paul, “Video Multicast over the Internet”, IEEE Network, Vol. 13, No. 2, March/April 1999.

[22] X. Li, S. Paul, P. Pancha, and M. Ammar, “Layered Video Multicast with Retransmission (LVMR): Evaluation of Error Recovery Schemes”, Proc. NOSSDAV '97, St. Louis, MO, May 1997.

[23] J. Nonnenmacher, E. W. Biersack, and D. Towsley, “Parity-Based Loss Recovery for Reliable Multicast Transmission”, IEEE/ACM Trans. on Networking, Vol. 6, No. 4, Aug. 1998.

[24] J. Nonnenmacher, M. Lacher, M. Jung, G. Carl, and E. W. Biersack, “How Bad is Reliable Multicast Without Local Recovery?”, Proc. IEEE Infocom '98, San Francisco, CA, April 1998.

[25] J. Paris, S. W. Carter, and D. E. Long, “Efficient Broadcasting Protocols for Video on Demand”, Proc. MASCOTS '98, Montreal, Canada, July 1998.

[26] C. Perkins, O. Hodson, and V. Hardman, “A Survey of Packet Loss Recovery Techniques for Streaming Audio”, IEEE Network, Vol. 12, No. 5, Sept./Oct. 1998.

[27] L. Rizzo, “Effective Erasure Codes for Reliable Computer Communication Protocols”, Computer Communication Review, Vol. 27, No. 2, April 1997.

[28] L. Rizzo and L. Vicisano, “A Reliable Multicast Data Distribution Protocol Based on Software FEC Techniques”, Proc. HPCS '97, Greece, June 1997.

[29] S. Sen, L. Gao, J. Rexford, and D. Towsley, “Optimal Patching Schemes for Efficient Multimedia Streaming”, Proc. NOSSDAV '99, Basking Ridge, NJ, June 1999.

[30] W. Tan and A. Zakhor, “Multicast Transmission of Scalable Video using Receiver-driven Hierarchical FEC”, Packet Video Workshop, New York, NY, April 1999.

[31] L. Vicisano, L. Rizzo, and J. Crowcroft, “TCP-like Congestion Control for Layered Video Multicast Data Transfer”, Proc. IEEE Infocom '98, San Francisco, CA, April 1998.

[32] S. Viswanathan and T. Imielinski, “Metropolitan Area Video-on-Demand Service using Pyramid Broadcasting”, Multimedia Systems, Vol. 4, No. 4, Aug. 1996.

[33] R. Yavatkar, J. Griffoen, and M. Sudan, “A Reliable Dissemination Protocol for Interactive Collaborative Applications”, Proc. ACM Multimedia '95, San Francisco, CA, Nov. 1995.

[34] X. R. Xu, A. C. Myers, H. Zhang, and R. Yavatkar, “Resilient Multicast Support for Continuous-Media Applications”, Proc. NOSSDAV '97, St. Louis, MO, May 1997.

### Appendix

#### A. Multicast Retransmissions

This appendix derives a lower bound on the required server bandwidth when retransmissions are multicast, assuming independent packet losses with probability \( p \). In real systems, there may be some correlation among packet losses due to shared links. Simple models of plausible correlation structures can be analyzed similarly.

Consider a small portion of the object at an arbitrary time offset \( x \). For a client request arriving at time \( t \), this portion must be delivered no later than \( t + x \). Thus, there is a "sharing window" of duration at most \( x \) over which a multicast of this portion may be received by new clients.

A lower bound on the required server bandwidth can be obtained by:
1. Assuming closely spaced retransmissions experience the same loss probability.
2. Neglecting the impact of retransmission time on the scheduling of fresh multicasts and the sharing window size.

Under uncorrelated loss probabilities, the number of transmissions required to achieve successful delivery to a client is \( n \) with probability \( p^{(n-1)}(1-p) \), and has an average value of \( \frac{1}{1-p} \). The probability \( s \) that another client successfully receives the data is given by:

\[
s = \sum_{n=1}^{\infty} \frac{p^{(n-1)}}{(1-p)(1-p^n)} = \frac{1}{1+p}
\]

If a client does not receive the data, a new fresh multicast must be scheduled. The required server bandwidth is minimized if this new multicast is scheduled to achieve just-in-time delivery to the earliest such client. Thus, each fresh multicast incurs on average \( \frac{1}{1-p} \) transmissions. The minimal average frequency of these multicasts is increased compared to the no-packet-loss case.

This minimal frequency is identical to the average throughput of a system where "customers" (representing fresh multicasts and their associated sharing windows) arrive and reside in the system for a constant time duration \( x \). Arrivals occur at rate \( \lambda \) when no customers are present, at rate \( \lambda \times (1-s) \) when one customer is present, and so on.

The average throughput in this system is identical to that in a similar system with exponentially distributed customer residence times of mean duration \( x \). The average throughput can be computed numerically as the solution of an infinite state one-dimensional Markov chain with transition rates from state \( i \) to \( i+1 \) of \( \lambda \times (1-s)^i \) and from state \( i+1 \) to \( i \) of \( \frac{i+1}{x} \).

A lower bound on required server bandwidth can be obtained by dividing the object into arbitrarily small portions and summing the size of each portion times \( \frac{1}{1-p} \) times the throughput computed from the Markov chain analysis for the corresponding time offset \( x \).

#### B. Asymptotic Analysis of RPB

The results in Figure 6 suggest that as the parameters \( n \) and \( s \) of the new periodic broadcast protocols increase, the start-up delay approaches the lower bound. The following asymptotic analysis supports this result.

Fix \( n \), and let \( s \) and \( \frac{K}{s} \) grow large, so that each segment becomes infinitesimally small in length and delivery rate, and the start-up delay approaches zero. Further, let the \( n \)-th segment (with \( 0 < n < 1 \)) follow a geometric progression. If the first segment is normalized to length 1, the sum of the lengths of all \( K \) segments is asymptotically \( O(e^{bn \frac{K}{s}}) \). Since the start-up delay \( d \) is equal to \( a \) times the length of the first segment, and using \( n = sr \), we have \( d = O(ae^{-brK}) \). Solving for the server bandwidth \( rK \) yields a required server bandwidth of:

\[
\frac{1}{b} \ln\left(\frac{1}{d}\right) + \text{lower order terms}
\]

For large \( n \), \( \frac{1}{b} \) tends to \( a \). If \( a \) is chosen equal to \( \frac{1}{1-p} \) (the smallest \( a \) for which full recovery from loss is possible without extra delay at the clients, given loss rate \( p \)), the required server bandwidth is asymptotically the same as the lower bound given in equation (4).

Interestingly, for \( a = 1 \) (i.e., the no-packet-loss case) and general \( n \), we get \( b = 1 - e^{-bn} \), implying that \( \frac{1}{b} \) is identical to the constant \( \eta_n \) defined in [10]. This implies that the asymptotic required server bandwidth for general \( n \) (and large \( s \)) in the no-packet-loss case is identical to the conjectured asymptotic lower bound on required server bandwidth for general \( n \) from [10].