### Packet Classification and Long-Lived Capabilities

Packets can be classified based on a special TOS-like field, which is initialized by the client according to its session requirements. The server has the discretion to reject requests for long-lived capabilities. However, to minimize the useful validity time of a long-lived capability at the client, the server may also delay its transmission.

### Conclusion

The current Internet is vulnerable to DDoS flooding and flash crowds, where network links upstream from a victim become saturated, rendering the victim's service unavailable to its clients. TCP services are particularly susceptible to such attacks due to the TCP exponential backoff mechanism, which significantly reduces performance when packet loss exceeds 5%. These vulnerabilities arise partly from the end-to-end principle, where the network is treated as a simple transit mechanism for packets, with all interpretation occurring at the destination. This lack of "intelligence" in the network to filter out malicious traffic exacerbates the problem.

Several research efforts have explored DDoS countermeasures, but these often require per-flow state on routers, inter-ISP collaboration, an overlay infrastructure, or extensive router processing.

In this paper, we introduce SIFF, a novel design that addresses DDoS flooding in a future Internet setting without relying on the aforementioned assumptions. We also present a countermeasure that can be deployed in the current Internet, provided that client and server software is updated. SIFF does not depend on any of the previous countermeasure assumptions. In SIFF, network traffic is divided into privileged and unprivileged packets, with the goal of protecting privileged packets from unprivileged packet flooding. This allows packet receivers to selectively terminate individual privileged flows and drop their packets deep in the network before they reach the victim. Clients and servers who adopt our protocol will see significant immunity to packet flooding, assuming their ISP deploys updated routers with our technology.

### Acknowledgments

We would like to thank Tom Anderson, Hal Burch, David Maltz, Srini Seshan, Ion Stoica, Hui Zhang, and the anonymous reviewers for their feedback and suggestions. Special thanks to Virgil Gligor and Vern Paxson for their insightful feedback as shepherds of this paper.

### References

[1] Daniel Adkins, Karthik Lakshminarayanan, Adrian Perrig, and Ion Stoica. Taming IP packet flooding attacks. In Proceedings of Workshop on Hot Topics in Networks (HotNets-II), November 2003.

[2] Micah Adler. Tradeoffs in probabilistic packet marking for IP traceback. In Proceedings of 34th ACM Symposium on Theory of Computing (STOC), 2002.

[3] D. Scott Alexander, Kostas G. Anagnostakis, William A. Arbaugh, Angelos D. Keromytis, and Jonathan M. Smith. The price of safety in an active network. In SIGCOMM '99, 1999.

[4] David G. Andersen. Mayday: Distributed filtering for Internet services. In Proceedings of USITS, 2003.

[5] Tom Anderson, Timothy Roscoe, and David Wetherall. Preventing Internet denial-of-service with capabilities. In Proceedings of Hotnets-II, November 2003.

[6] S. Bellovin, M. Leech, and T. Taylor. The ICMP traceback message. Internet-Draft, draft-ietf-itrace-01.txt, October 2001.

[7] Robert Braden. Requirements for Internet hosts – communication layers. Internet Request for Comment RFC 1122, Internet Engineering Task Force, October 1989.

[8] Hal Burch and Bill Cheswick. Tracing anonymous packets to their approximate source. Unpublished paper, December 1999.

[9] CAIDA. Skitter. http://www.caida.org/tools/measurement/skitter/, 2000.

[10] CERT. TCP SYN flooding and IP spoofing attacks. Advisory CA-96.21, September 1996.

[11] CERT. Increased activity targeting Windows shares. Advisory CA-2003-08, March 2003.

[12] Drew Dean, Matt Franklin, and Adam Stubblefield. An algebraic approach to IP traceback. ACM Transactions on Information and System Security, May 2002.

[13] Sven Dietrich, Neil Long, and David Dittrich. Analyzing distributed denial of service attack tools: The Shaft case. In 14th Systems Administration Conference, LISA 2000, 2000.

[14] Dave Dittrich. Distributed Denial of Service (DDoS) attacks/tools resource page. http://staff.washington.edu/dittrich/misc/ddos/, 2003.

[15] P. Ferguson and D. Senie. Network ingress filtering: Defeating denial of service attacks which employ IP source address spoofing. RFC 2267, January 1998.

[16] L. Garber. Denial-of-service attacks rip the Internet. In IEEE Computer, volume 33, April 2000.

[17] Virgil Gligor. On denial of service in computer networks. In Proceedings of International Conference on Data Engineering, pages 608–617, February 1986.

[18] Virgil Gligor. Guaranteeing access in spite of service-flooding attacks. In Proceedings of the Security Protocols Workshop, April 2003.

[19] Michael Goodrich. Efficient packet marking for large-scale IP traceback. In Proceedings of the 9th ACM Conference on Computer and Communications Security, pages 117–126. ACM Press, 2001.

[20] Christian E. Hopps. Analysis of an equal-cost multipath algorithm. Internet Request for Comment RFC 2992, Internet Engineering Task Force, November 2000.

[21] J. Howard. An Analysis of Security Incidents on the Internet. PhD thesis, Carnegie Mellon University, August 1998.

[22] John Ioannidis and Steven M. Bellovin. Implementing pushback: Router-based defense against DDoS attacks. In Proceedings of the Symposium on Network and Distributed Systems Security (NDSS 2002), February 2002.

[23] Hani Jamjoom and Kang G. Shin. Persistent dropping: An efficient control of traffic aggregates. In Proceedings of ACM SIGCOMM '03, pages 287–297, August 2003.

[24] Jaeyeon Jung, Balachander Krishnamurthy, and Michael Rabinovich. Flash crowds and denial of service attacks: Characterization and implications for CDNs and web sites. In The Eleventh International World Wide Web Conference (WWW 11), May 2002.

[25] A. Keromytis, V. Misra, and D. Rubenstein. SOS: Secure Overlay Services. In Proceedings of ACM SIGCOMM, August 2002.

[26] Heejo Lee and Kihong Park. On the effectiveness of probabilistic packet marking for IP traceback under denial of service attack. In Proceedings IEEE Infocomm 2001, April 2001.

[27] Ratul Mahajan, Steven M. Bellovin, Sally Floyd, John Ioannidis, Vern Paxson, and Scott Shenker. Controlling high bandwidth aggregates in the network. CCR, 32(3):62–73, July 2002.

[28] A. Mankin, D. Massey, C.L. Wu, S.F. Wu, and L. Zhang. On design and evaluation of intention-driven ICMP traceback. In Proceedings of IEEE International Conference on Computer Communications and Networks, October 2001.

[29] Jelena Mirkovic, Gregory Prier, and Peter Reiher. Attacking DDoS at the source. In ICNP, 2002.

[30] Jeffrey Mogul and Steve Deering. Path MTU discovery. Internet Request for Comment RFC 1191, Internet Engineering Task Force, November 1990.

[31] David Moore, Geoffrey Voelker, and Stefan Savage. Inferring Internet denial of service activity. In Proceedings of the 10th USENIX Security Symposium, Washington, D.C., August 2001. USENIX.

[32] Kihong Park and Heejo Lee. On the effectiveness of route-based packet filtering for distributed DoS attack prevention in power-law internets. In ACM SIGCOMM '01, pages 15–26, 2001.

[33] Vern Paxson. End-to-end routing behavior in the internet. In ACM SIGCOMM Computer Communications Review, volume 26, pages 25–38, October 1996.

[34] Vern Paxson. An analysis of using reflectors for distributed denial-of-service attacks. Computer Communication Review, 31(3), July 2001.

[35] Stefan Savage, David Wetherall, Anna Karlin, and Tom Anderson. Network support for IP traceback. ACM/IEEE Transactions on Networking, 9(3), June 2001.

[36] Colleen Shannon, David Moore, and K. C. Claffy. Beyond folklore: observations on fragmented traffic. IEEE/ACM Transactions on Networking (TON), 10(6), 2002.

[37] Alex C. Snoeren, Craig Partridge, Luis A. Sanchez, Christine E. Jones, Fabrice Tchakountio, Beverly Schwartz, Stephen T. Kent, and W. Timothy Strayer. Single-packet IP traceback. IEEE/ACM Transactions on Networking (ToN), 10(6), December 2002.

[38] Dawn Song and Adrian Perrig. Advanced and authenticated marking schemes for IP traceback. In Proceedings IEEE Infocomm 2001, April 2001.

[39] Ion Stoica, Daniel Adkins, Shelley Zhuang, Scott Shenker, and Sonesh Surana. Internet Indirection Infrastructure. In Proceedings of ACM SIGCOMM 2002, pages 10–20, August 2002.

[40] Ion Stoica, Scott Shenker, and Hui Zhang. Core-stateless fair queueing: A scalable architecture to approximate fair bandwidth allocations in high-speed networks. In SIGCOMM '98, 1998.

[41] Ion Stoica and Hui Zhang. Providing guaranteed services without per-flow management. In Proceedings of ACM SIGCOMM'99, pages 81–94, 1999.

[42] Robert Stone. CenterTrack: An IP overlay network for tracking DoS floods. In Proceedings of the 9th USENIX Security Symposium. USENIX, August 2000.

[43] Minho Sung and Jun Xu. IP traceback-based intelligent packet filtering: A novel technique for defending against internet DDoS attacks. In Proceedings of IEEE ICNP 2002, November 2002.

[44] R. Teixera, K. Marzullo, S. Savage, and G. Voelker. Characterizing and measuring path diversity of internet topologies. In SIGMETRICS'03, June 2003.

[45] R. van den Berg and P. Dibowitz. Over-zealous security administrators are breaking the Internet. In Proceedings of 2002 LISA Conference, November 2002.

[46] XiaoFeng Wang and Michael K. Reiter. Defending against denial-of-service attacks with puzzle auctions. In Proceedings of IEEE Symposium on Security and Privacy, May 2003.

[47] Abraham Yaar, Adrian Perrig, and Dawn Song. Pi: A Path Identification mechanism to defend against DDoS attacks. In Proceedings of IEEE Symposium on Security and Privacy, May 2003.

### Fragmentation and the IP Identification Field

Marking every packet in the network with a special field is incompatible with the current IPv4 fragmentation mechanism, except under very strict network conditions such as no packet reordering or loss. Although fragmented traffic represents only between 0.25% and 0.75% of packets in the Internet [36, 41], we propose a mechanism to allow packet marking to coexist with fragmentation.

Our solution involves marking only those packets that will never be fragmented and are not fragments themselves. Identifying non-fragmented packets is straightforward, as they will have a non-zero Fragment Offset field or a more fragments flag set in their header. Determining which packets will never be fragmented is more challenging. One simple classification is packets with the Do Not Fragment (DF) bit set in the Flags field of the IP header. This classification is adequate for servers with a majority of TCP traffic, as most modern TCP implementations set the DF bit by default [45], as specified by the Path MTU Discovery standard in RFC 1191 [30]. Packets that do not match this predicate are ineligible for being EXP packets. DTA packets could be fragmented, provided all fragments follow the same path through the network, and the fragmenting router does not reset any reserved bits normally set in a DTA packet.

However, the DF classification is inadequate for UDP traffic, where a much smaller percentage of traffic has the DF bit set. Without the DF bit, classifying packets that will never be fragmented is no longer 100% accurate. An alternative method is to mark only UDP traffic smaller than the smallest Maximum Transmission Unit (MTU) for common Internet traffic links. A widely accepted value for this is 576 bytes [7], although lower MTU links are possible, especially with the proliferation of web-enabled phones. Table 2 shows the percentage of markable traffic from a 31-day trace of packets from the Lawrence Berkeley Lab DMZ. The networking community will need to agree on a specific minimum MTU value before implementing our handshake algorithm over non-DF or UDP-specific services.

| Packet Classification | Percent Markable |
|----------------------|------------------|
| TCP with DF           | 98.24%           |
| UDP with DF           | 26.69%           |
| UDP ≤576b or DF Set   | 87.12%           |
| UDP ≤250b or DF Set   | 79.06%           |
| UDP ≤100b or DF Set   | 64.75%           |

**Table 2.** Percent of packets that can be marked by classification. Average over 31 days of traffic from Lawrence Berkeley Lab DMZ, May 1-31, 2003.