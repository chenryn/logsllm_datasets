# Title: SmartNIC Performance Isolation with FairNIC: Programmable Networking for the Cloud

## Authors:
- Stewart Grant\*
- Anil Yelam\*
- Maxwell Bland†
- Alex C. Snoeren

**Affiliations:**
- \*UC San Diego
- †University of Illinois-Urbana Champaign

## Abstract
Recent advancements in SmartNIC technology have introduced devices that combine specialized accelerators and programmable processing cores, enabling sophisticated packet processing tasks to be offloaded from general-purpose CPUs. Leading data center operators have deployed these SmartNICs at scale to support network virtualization and application-specific tasks. However, cloud providers have not fully leveraged these capabilities for tenants due to the lack of adequate isolation mechanisms.

We present FairNIC, a system designed to provide performance isolation between tenants using the full capabilities of commodity SoC SmartNICs. We implemented FairNIC on Cavium LiquidIO 2360s, demonstrating its ability to isolate typical packet processing, prevent MIPS-core cache pollution, and fairly share access to fixed-function hardware accelerators. We used FairNIC to implement NIC-accelerated OVS and key/value store applications, showing that they can coexist on a single NIC without impacting each other's performance.

Our results highlight the feasibility of sharing SmartNICs among virtual tenants and motivate the development of robust security isolation mechanisms.

## CCS Concepts
- Networks → Network adapters

## Keywords
- Network adapters
- Cloud hosting
- Performance isolation

## ACM Reference Format
Grant, S., Yelam, A., Bland, M., & Snoeren, A. C. (2020). SmartNIC Performance Isolation with FairNIC: Programmable Networking for the Cloud. In SIGCOMM '20: Annual Conference of the ACM Special Interest Group on Data Communication, August 10–14, 2020, Virtual Event, USA. ACM, New York, NY, USA, 13 pages. https://doi.org/10.1145/3387514.3405895

**Note:** These authors contributed equally.
**Permission:** Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s).

**SIGCOMM '20, August 10–14, 2020, Virtual Event, USA**
**© 2020 Copyright held by the owner/author(s).**
**ACM ISBN 978-1-4503-7955-7/20/08.**
**https://doi.org/10.1145/3387514.3405895**

## 1. Introduction
Cloud providers have found it inefficient to perform network processing tasks on host cores, leading to the deployment of custom-designed SmartNICs for traffic scheduling, security, and network virtualization. Similarly, enterprises and service providers have adopted programmable SmartNICs to accelerate various tasks. Despite the efficiency benefits, tenants are unable to share in these gains because cloud providers do not allow them to run their own applications on NIC hardware in virtualized environments.

We explore the potential of extending the network acceleration benefits of commodity SmartNICs to cohabitating tenants in cloud environments. Our goal is to enable individual tenants to run custom on-NIC programs that utilize shared hardware resources to improve performance, reduce host CPU utilization, or both. The primary challenge is ensuring isolation, which we address by designing techniques that work within an existing manufacturer’s SDK and do not require learning new languages or frameworks.

While production-grade isolation is a high bar, we focus on achieving performance isolation as a first step. We defer considerations of deliberate malfeasance and privacy attacks to future work.

In this study, we focus on system-on-a-chip (SoC) SmartNICs due to their ease of programmability. We illustrate the challenges of cross-tenant performance isolation using a Cavium LiquidIO 2360 SmartNIC, showing that concurrent applications can decrease tenant performance by one to two orders of magnitude. In response, we develop isolation mechanisms that enable fair sharing of contended resources while maintaining 25-Gbps line-rate processing.

We prototype these mechanisms in FairNIC, an extension of the Cavium Simple Executive for SmartNIC applications. FairNIC provides strict core partitioning, cache and memory striping, DWRR packet scheduling, and distributed token-based rate limiting for fixed-function hardware accelerators. We evaluate FairNIC in micro-benchmarks and realistic multi-tenant environments, demonstrating that it can enforce fairness and defend against resource exhaustion. We also show that Open vSwitch (OVS) and a key/value store can coexist on the same SmartNIC while preserving performance isolation.

## 2. Background
### 2.1 Service Models
We consider three common cloud service models in the context of public clouds, focusing on performance isolation but not fully addressing security isolation. 

- **SaaS (Software-as-a-Service):** SmartNIC applications are written, compiled, and deployed by datacenter operators. Tenants pay for these applications to be offloaded onto SmartNICs. Performance isolation is necessary for quality-of-service guarantees in multi-application deployments.
- **PaaS (Platform-as-a-Service):** Developers can write custom SmartNIC applications and submit them for approval and deployment. This model may restrict tenants’ code for easier static checking or software-based access restrictions. Runtime isolation mechanisms are necessary if not enforced by the platform API.
- **IaaS (Infrastructure-as-a-Service):** Tenants can run unmodified SmartNIC programs. Performance isolation requires either full hardware virtualization in software or proper hardware support for isolation, such as Intel VT-x. Security isolation is necessary if tenants are distrustful or vulnerable to malicious third parties.

### 2.2 Types of SoC SmartNICs
SmartNICs are built using ASIC, FPGA, and SoC technologies. Traditional NICs are ASIC-based, offering the best price/performance but limited programmability. Some vendors have developed programmable ASIC-based SmartNICs, but they are challenging to program and have seen limited deployment.

FPGAs provide near-ASIC performance and flexibility but are expensive, power-hungry, and require expert knowledge. SoC SmartNICs offer a middle ground, combining traditional ASICs with general-purpose cores and fixed-function coprocessors, making them suitable for tenant-authored applications.

SoC SmartNICs vary in design, with "on-path" and "off-path" approaches. On-path designs pass all packets through NIC cores, while off-path designs use an on-NIC switch to route traffic. Recent research has proposed hybrid architectures.

### 2.3 Cavium Architecture
We use "on-path" LiquidIO SoC SmartNICs from Cavium, now owned by Marvell. These NICs include traditional packet-processing engines and embedded cores with cache and memory subsystems for general-purpose programmability. They also feature special-purpose coprocessors for accelerating networking tasks.

Cavium CN2360s have 16 1.5-GHz MIPS64 cores connected to a shared 4-MB L2 cache and 16 GB of main memory. Each core runs firmware (Cavium Simple Executive) in C, and the NIC includes coprocessors for functions like synchronization, buffer allocation, random-number generation, compression, encryption, and regular expression matching.

Packet ingress and egress are handled by dedicated processing units with software-configurable QoS options. Cores continually poll for packets to avoid interrupt overheads, and end-to-end packet processing involves a chain of hardware components.

## 3. Motivation & Challenges
The key challenge in enabling tenant access to programmable SmartNICs is that these resources lie outside traditional cloud isolation boundaries. Existing virtualization mechanisms focus on host processors, and even "fair" access to the NIC can result in disproportionate network utilization due to differing tenant programming.

### 3.1 Traffic Scheduling
Link bandwidth is the primary resource considered for network isolation in traditional settings. Allowing tenants to deploy applications on a SmartNIC can lead to performance crosstalk in various ways.