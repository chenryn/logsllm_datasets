### Figure 8: Tables of Minimum Number of Packets Needed for Reconstruction

**Parameters:**
- **q**: Marking probability
- **Len1**: Length of the path from the attacker to the reflector
- **Len2**: Length of the path from the reflector to the victim
- **nRf**: Number of reflectors (set to 30 in these experiments)

**Experimental Setup:**
- **Marking Probabilities (q)**: 4% and 1%
- **Path Lengths (Len1 and Len2)**: Varying from 5 to 30
- **Number of Experiments**: Over 200 independent runs for each data point

**Results:**

- **Table 1 (q = 0.04)**
  - Len1: 5 to 30
  - Len2: 0 to 30
  - Data points represent the average minimum number of packets required for 95% successful reconstruction.

- **Table 2 (q = 0.01)**
  - Len1: 5 to 30
  - Len2: 0 to 30
  - Data points represent the average minimum number of packets required for 95% successful reconstruction.

### Analysis and Observations

**Experimental Results:**
- The proposed marking scheme is feasible and performs satisfactorily.
- The attack path reconstruction algorithm yields negligible false positives.

**Key Findings:**
- The minimum number of packets needed for path reconstruction primarily depends on the length of the path from the attacker to the reflector (Len1).
- For a given Len1, varying Len2 (from 5 to 30) results in only a small change (no more than 70 packets) in the minimum number of packets required.
- Non-reflector attacks require slightly more packets than reflector attacks due to the amplification of reflected packets.

### Figure 9: Bar Chart Representation of Minimum Number of Packets Needed for Attack Path Reconstruction (q = 0.01)

**Observations:**
- The bar chart shows the minimum number of packets needed for attack path reconstruction with q = 0.01.
- A similar representation for q = 0.04 would show similar trends.
- The number of packets required for reconstruction is primarily influenced by Len1, with minor variations for different values of Len2.

### Performance Comparison

- **Comparison with FMS [7] and Advanced Marking Scheme [9]:**
  - Our marking scheme requires significantly fewer packets for attack path reconstruction.
  - It outperforms other traceback schemes based on the criterion of producing the least number of false positives.

### Speed of Attack Path Reconstruction

- **Algorithm Performance:**
  - Can reconstruct 50 distributed attack paths with lengths ranging from 20 to 30 within 5 seconds.
  - Faster than FMS [7].
  - Grouping packets is the most time-consuming part.
  - For large numbers of packets (e.g., >300,000), the reconstruction time might be longer than the advanced marking scheme [9].

### Conclusion

- **Proposed Scheme:**
  - A reflective algebraic marking scheme for tracing both ordinary DoS and reflector attacks.
  - Uses an upstream routers map for faster attack path reconstruction.
  - Proven theoretically and experimentally to produce negligible false positives.
  - Effective in tracing general DoS and DDoS attacks, including reflector attacks.
  - Requires fewer packets for attack path reconstruction compared to other methods.
  - Fast attack path reconstruction.

- **Disadvantages:**
  - Marked information is not authenticated, making it vulnerable to tampering by compromised routers.
  - Limited applicability to IPv6 due to the lack of an Identification field and the 128-bit IP address.

### Future Work

- Develop a technique to authenticate marked data to identify compromised routers.
- Address the challenges of applying the scheme to IPv6.

### References

[1] Dean, D., Franklin, M., & Stubblefield, A. (2002). An Algebraic Approach to IP Traceback. ACM Transactions on Information and System Security, Vol. 5, No. 2, pp. 119-137.

[2] Savage, S., Wetherall, D., Karlin, A., & Anderson, T. (2000). Practical Network Support for IP Traceback. 2000 ACM SIGCOMM Conference.

[3] Song, D., & Perrig, A. (2001). Advanced and Authenticated Marking Schemes for IP Traceback. Proc. IEEE INFOCOM 2001.

[4] Press, W. H., Flannery, B. P., Teukolsky, S. A., & Vetterling, W. T. (1992). Numerical Recipes in FORTRAN: The Art of Scientific Computing. Cambridge University Press, pp. 83-84.

[5] Theilmann, W., & Rothermel, K. (2000). Dynamic Distance Maps of the Internet. Proc. IEEE INFOCOM Conference, Vol. 1, pp. 275-284.

[6] Stoica, I., & Zhang, H. (1999). Providing Guaranteed Services Without Per Flow Management. ACM SIGCOMM '99, pp. 81-94.

[7] Snoeren, A. C., Partridge, C., Sanchez, L. A., Jones, C. E., Tchakountio, F., Kent, S. T., & Strayer, W. T. (2001). Hash-Based IP Traceback. Proc. ACM SIGCOMM 2001.

[8] Judson, T. W. (1994). Abstract Algebra: Theory and Applications. Boston, MA: PWS Pub. Co., pp. 379.

[9] Paxson, V. (2001). An Analysis of Using Reflectors for Distributed Denial-of-Service Attacks. ACM Comp. Commun. Rev., vol. 31, no. 3, pp. 3-14.

[10] Lau, F., Rubin, S. H., Smith, M. H., & Trajkovic, L. (2000). Distributed Denial of Service Attacks. Systems, Man, and Cybernetics, 2000 IEEE International Conference on, Volume: 3, pp. 2275-2280.

[11] Chang, R. K. C. (2002). Defending Against Flooding-Based Distributed Denial-of-Service Attacks: A Tutorial. IEEE Communications Magazine, Vol. 40, Issue: 10, pp. 42-51.

[12] Yamada, T., Nakamura, H., Nishimura, K., Ishizaki, T., & Ogawa, K. (2000). A Flat-Time-Delay Transversely Coupled Resonator SAW Filter Comprising Parallel Connected Filter Tracks. Ultrasonics Symposium, 2000 IEEE, Vol. 1, pp. 121-124.

---

This optimized version provides a clearer and more structured presentation of the experimental results, key findings, and future work, while maintaining the technical and professional tone.