### 99% Confidence Level in Email Exploitation Risk Assessment

To assess the risk of email addresses being exploited, we investigated which email addresses are more attractive for attackers. Our findings indicate that Lycos is the most attractive provider, with over 77.27% of all discovered addresses being freely available for registration. We suspect this high number is due to the 30-day expiration period for free email addresses. Conversely, Yandex is the least attractive provider, with only 2.47% of the addresses being freely available. However, Yandex was also the fastest service to check for registered addresses, taking just 0.11 seconds per address. The low number of free email addresses at Yandex is likely due to a 2-year expiration period. The average across all providers is 33%, meaning an attacker has a 33% chance that a randomly selected email address is free.

### Analysis of Leaked Data

Some data breaches, such as the last.fm leak, provide account registration dates. We analyzed the probability that an email address is free to register based on the registration date provided in the leak. Figure 2 shows the probability as a function of the registration date for 22,533 email addresses, of which 3,358 (15%) were free to register. For registration dates before May 2004, approximately 30% of the addresses were free to register. This higher rate is likely because email addresses were not automatically validated during the registration process, leading to invalid entries in the database. From May 2004 to July 2009, the average rate of free-to-register addresses dropped to 15%. Between July 2009 and February 2012, the rate gradually decreased from 10% to 2%, with an average of 5%.

The correlation between the distribution of hosts in the last.fm leak and our combined dataset is 0.86, indicating a very similar distribution. Therefore, observations from the last.fm dataset can be generalized. We conclude that email addresses used more recently are less likely to be free to register.

For registrations in March 2012, 14% of the addresses in the database were free to register. This may be due to ongoing registrations at the time of the leak, where preliminary accounts may still contain unconfirmed, invalid email addresses. Providing an invalid email address violates the terms of use, and such accounts are usually deleted within a short period. However, this did not occur for the ongoing registrations at the time of the leak.

### Use-After-FreeMail Based on Expired Domain Names

To evaluate the Use-After-FreeMail attack on domain names of leaked email addresses, it is necessary to pre-filter definitely invalid email addresses. Many services do not validate email addresses during the registration process, leading to invalid entries in data leaks. After filtering, the set of potential target domains contains 23,669,300 names.

During the evaluation, we encountered rate limitations on all publicly available DNS resolvers. To address this, we set up our own resolver, which, while reducing throughput, eliminated the possibility of corrupting results due to rate limitations.

Resolving all 23,669,300 domains showed that 7,252,062 domains (30.6%) resulted in the NXDOMAIN status. We identified two reasons for this large portion:

1. **Sub-Domains**: Some TLDs did not allow public registration of second-level domains, so registries registered them and offered third-level domains (sub-domains) to customers. For example, sverige.hotmail.com. The DNS resolver found that the status of this sub-domain is NXDOMAIN, but it is not available for registration. The number of second-level domains with NXDOMAIN status is 5,242,711.
   
2. **Invalid Email Addresses**: These email addresses were likely provided during the registration process even though they never existed. Such registrations increase the number of available domains found in our evaluation. However, these are still exploitable dangling references if the chosen domain name is valid and not yet registered.

We filtered the dataset to only include second-level domains, the most promising targets for an attack. We found that 11,575,621 email addresses referenced available second-level domains. Figure 3 shows the number of email addresses per available second-level domain. Most second-level domains are referenced by a small number of email addresses, with 4.2 million domains having only a single reference. Only 38 second-level domains are referenced by more than 10,000 email addresses.

The second-level domain with the most references was datingeurope.net, with 83,735 email addresses. By registering this single available second-level domain, an attacker could gain control over at least 83,735 email addresses, potentially still referenced by various web services. A detailed case study for this domain is provided in Section 7.3.

### Case Studies

#### Quantitative Case Study

We conducted a quantitative case study with 100 participants to have a maximum standard error below 10% at a 95% confidence level. We found that 60% of users have an address they no longer use, and 18% of these, or 11% of all users, are affected by our attack.

#### User Case Study

Our user case study involved 31 participants recruited via University newsgroups, mailing lists, and word-of-mouth. The age range was 20 to 53 years. 18 out of 31 participants (58%) provided 23 free-mail addresses. We studied the Use-After-FreeMail attack on these 23 addresses and found that 17 were free to register. Automated and semi-automated checks against popular websites revealed dangling references for 6 free-mail addresses of 6 different users. Thus, 19% of users from the selected University environment are affected (standard error 14%, confidence level 95%). Comprehensive case studies were performed with the 6 affected users, and the results are summarized in this section and detailed in Appendix C.

#### Domain Case Study: datingeurope.net

The domain datingeurope.net was registered from approximately 2008 to 2013. We found this domain to have the most dangling email addresses (83,735) in up to 4 database leaks. To prevent Use-After-FreeMail attacks, we registered this domain and set up an information page recommending users to check haveibeenpwned.com and their accounts to eliminate dangling references. We also set up a mail server that immediately rejects any emails to datingeurope.net, ensuring we do not receive any emails, subjects, or other metadata beyond the sender's email address and the IP address of the connecting mail server.

Over a 5-day period, we logged 401 connections to the web server, of which 105 were benign and 148 were malicious. On the mail server, we observed 5,496,304 connections from 44,011 unique IP addresses, attempting to deliver 1,028,719 emails to 85,690 recipients. The peak activity was 34 hours after registration, with 446,287 connections in one hour. Out of the 83,736 addresses in online leaks, emails were sent to 83,599. The remaining 137 email addresses did not appear in our log files, but we found 2,091 addresses not present in any online leak.

Most of the emails were likely spam, but our results clearly demonstrate the viability of this attack.

### Discussion

Use-after-free is a more generic and omnipresent problem than anticipated. We need to raise awareness that it can occur in almost any system. With Twitter and DNS entry use-after-free being exploited in the wild, it is likely that free-mail use-after-free is also being exploited. We need to take action to prevent further damage to users, such as cutting at least one of the links shown in Figure 1 or making resource reuse impossible.

#### Applying Existing Countermeasures

We observed similarities between traditional use-after-free situations and our use-after-free situation for mail addresses. In traditional use-after-free, once a buffer is deleted, the corresponding pointer becomes and stays invalid. Applying this idea to mail addresses, once a mailbox is deleted, the corresponding email address must become and stay invalid forever. Several works propose solutions using compiler extensions, but practical challenges remain, as copies of email addresses can be stored in unpredictable ways.

#### Recommendations for Providers and Web Services

Mills and Kucherawy [47] proposed a require-recipient-valid-since header field or SMTP extension in RFC 7293. While there are implementations, they are not widely adopted. Non-expiring resource identifiers, as suggested by Dhurjati et al. [15], may be a viable solution in many places, especially for email addresses.