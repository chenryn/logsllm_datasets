以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[1] 意大利。
(2018年10月) Dss演示
Web应用程序v5.2。 [在线]。 可访问: https://dss.agid.gov.it/

[2] 爱沙尼亚。
(2018年10月) Siva演示应用。
[在线]。
可访问: https://siva-arendus.eesti.ee/

[3] Evrotrust。
(2018年10月) 验证签名。
[在线]。 可访问: https://www.evrotrust.com/landing/en/a/validation

[4] iText PDF。
iText在线PDF服务。
[在线]。
可访问: https://itextpdf.com/en/

[5] intarsys。
intarsys在线PDF服务。
[在线]。
可访问: https://www.intarsys.de/

[6] ISO, ISO 32000-2:2017 - 文档管理 – 便携式文档格式 – 第2部分：PDF 2.0，第1版，2017年9月。

[7] V. Mladenov, C. Mainka, K. Meyer zu Selhausen, M. Grothe, 和 J. Schwenk, “1万亿美元退款 – 如何伪造PDF签名”，在ACM计算机与通信安全会议上发表，2019年11月。

[8] Y. Chen, L. Xing, Y. Qin, X. Liao, X. Wang, K. Chen, 和 W. Zou, “指导中的魔鬼：通过自动化文档分析预测支付联合服务中的逻辑漏洞”，在第28届USENIX安全研讨会 (USENIX Security 19) 上发表。 圣克拉拉, CA: USENIX协会, 2019年8月, pp. 747–764。 [在线]。 可访问: https://www.usenix.org/conference/usenixsecurity19/presentation/chen-yi

[9] T. Lv, R. Li, Y. Yang, K. Chen, X. Liao, X. Wang, P. Hu, 和 L. Xing, “阅读手册！从库文档中自动发现假设并进行验证推导以检测API误用”，在2020年ACM SIGSAC计算机与通信安全会议论文集中, ser. CCS '20。纽约, NY, USA: 计算机协会, 2020, p. 1837–1852。 [在线]。 可访问: https://doi.org/10.1145/3372297.3423360

[10] M. Acharya 和 T. Xie, “从源代码中挖掘API错误处理规范”，在国际软件工程基础方法会议上发表。 Springer, 2009, pp. 370–384。

[11] H. A. Nguyen, R. Dyer, T. N. Nguyen, 和 H. Rajan, “在大规模代码语料库中挖掘API的前置条件”，在第22届ACM SIGSOFT国际软件工程基础研讨会上发表, 2014, pp. 166–177。

[12] B. Homès, 《软件测试基础》, [在线]。 可访问: ISTE. Wiley, 2013. https://books.google.de/books?id=z1XDNlSceFkC

[13] K. G. Paterson, T. Ristenpart, 和 T. Shrimpton, “标签大小确实重要：对TLS记录协议的攻击和证明”，在第17届国际密码学理论与应用及信息安全会议上发表, ser. ASIACRYPT'11。柏林, Heidelberg: Springer-Verlag, 2011, p. 372–389。 [在线]。 可访问: https://doi.org/10.1007/978-3-642-25385-0_20

[14] H. Böck, J. Somorovsky, 和 C. Young, “Bleichenbacher预言威胁的回归 (ROBOT)”，在第27届USENIX安全研讨会上发表。 巴尔的摩, MD: USENIX协会, 2018年8月, pp. 817–849。 [在线]。 可访问: https://www.usenix.org/conference/usenixsecurity18/presentation/bock

[15] K. Bhargavan, A. D. Lavaud, C. Fournet, A. Pironti, 和 P. Y. Strub, “三次握手和Cookie切割器：在TLS上破坏和修复认证”，在2014 IEEE安全与隐私研讨会上发表, 2014, pp. 98–113。

[16] M. Heiderich, J. Schwenk, T. Frosch, J. Magazinius, 和 E. Z. Yang, “MXSS攻击：通过使用innerHTML突变攻击安全的Web应用程序”，在2013 ACM SIGSAC计算机与通信安全会议上发表, ser. CCS '13。纽约, NY, USA: 计算机协会, 2013, p. 777–788。 [在线]。 可访问: https://doi.org/10.1145/2508859.2516723

[17] S. Lekies, K. Kotowicz, S. Groß, E. A. Vela Nava, 和 M. Johns, “针对Web的代码重用攻击：通过脚本小工具破坏跨站脚本缓解措施”，在2017 ACM SIGSAC计算机与通信安全会议上发表, ser. CCS '17。纽约, NY, USA: 计算机协会, 2017, p. 1709–1723。 [在线]。 可访问: https://doi.org/10.1145/3133956.3134091

[18] Y. Zhang, X. Zheng, Z. Wang, G. Ai, 和 Q. Huang, “基于GPU的并行时空克里金框架实现”，ISPRS Int. J. Geo Inf., vol. 7, no. 5, p. 193, 2018。 [在线]。 可访问: https://doi.org/10.3390/ijgi7050193

[19] J. Müller, F. Ising, V. Mladenov, C. Mainka, S. Schinzel, 和 J. Schwenk, “实际解密外泄：破解PDF加密”，在ACM计算机与通信安全会议上发表, 2019年11月。

[20] M. Grothe, C. Mainka, P. Rösler, 和 J. Schwenk, “如何破解Microsoft权利管理服务”，在第10届USENIX攻击技术研讨会上发表 (WOOT 16)。 奥斯汀, TX: USENIX协会, 2016年8月。 [在线]。 可访问: https://www.usenix.org/conference/woot16/workshop-program/presentation/grothe

[21] J. Müller, F. Ising, C. Mainka, V. Mladenov, S. Schinzel, 和 J. Schwenk, “Office文档安全与隐私”，在第14届USENIX攻击技术研讨会上发表 (WOOT 20)。 USENIX协会, 2020年8月。 [在线]。 可访问: https://www.usenix.org/conference/woot20/presentation/muller

[22] Statista, Inc. (2019年9月) 操作系统 - 统计数据与事实。 [在线]。 可访问: https://www.statista.com/topics/1003/operating-systems/

[23] Datanyze。 Adobe Acrobat DC市场份额报告。 [在线]。 可访问: https://www.datanyze.com/market-share/other-sales-software--408/adobe-acrobat-dc-market-share

[24] 欧洲电信标准研究所 (ETSI), “电子签名和基础设施 (ESI); 第一部分：PDF高级电子签名概要”, 技术报告, 2009。 [在线]。 可访问: https://www.etsi.org/deliver/etsi_ts/102700_102799/10277801/01.01.01_60/ts_10277801v010101p.pdf

[25] ——, “电子签名和基础设施 (ESI); 第二部分：PDF CAdES基线概要”, 技术报告, 2012。 [在线]。 可访问: https://www.etsi.org/deliver/etsi_ts/103100_103199/103173/02.01.01_60/ts_103173v020101p.pdf

[26] J. M. Esparza. (2014年10月) PDF攻击 - 从漏洞利用工具包到Shellcode的旅程。 [在线]。 可访问: https://www.blackhat.com/docs/eu-14/materials/eu-14-Esparza-PDF-Attack-A-Journey-From-The-/Exploit-Kit-To-The-Shellcode.pdf

[27] V. Hamon, “便携式文档格式 (PDF) 安全分析与恶意软件威胁”，Black Hat Abu Dhabi, 2012。

[28] P. Stokes. (2019年3月) 恶意PDF - 揭示攻击背后的技术。 [在线]。 可访问: https://www.sentinelone.com/blog/malicious-pdfs-revealing-techniques-behind-attacks/

[29] R. Brandis 和 L. Steller, “Adobe PDF威胁建模”，指挥、控制、通信与情报部门, DSTO, 澳大利亚, 2012。

[30] Adobe Systems Incorporated, JavaScript for Acrobat API参考 - Adobe Acrobat SDK 8.1, 2007年4月。 [在线]。 可访问: https://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/javascript.html

[31] C.-t.-a. Mainka, V.-d.-l. Mladenov, 和 S. Rohlmann, “阴影攻击：隐藏和替换签名PDF中的内容”，在2019网络与分布式系统安全研讨会论文集中。 Internet Society, 2021年2月。

[32] Microsoft. (2020) 允许更改受保护文档的部分内容。 [在线]。 可访问: https://support.microsoft.com/en-us/office/allow-changes-to-parts-of-a-protected-document-187ed01c-8795-43e1-9fd0-c9fca419dadf

[33] I. Grigg. (2008) 技术人员关于签名的看法：找错了地方。 [在线]。 可访问: http://financialcryptography.com/mt/archives/001056.html

[34] I. Grigg. (2012) 传真和电子邮件上的签名 - 如果你不打算被约束，为什么要写它？ [在线]。 可访问: http://financialcryptography.com/mt/archives/001364.html

[35] F. Raynal, G. Delugré, 和 D. Aumaitre, “PDF中的恶意折纸”，《计算机病毒学杂志》，第6卷, 第4期, 2010, pp. 289–315。 [在线]。 可访问: http://esec-lab.sogeti.com/static/publications/08-pacsec-maliciouspdf.pdf

[36] G. Lax, F. Buccafurri, 和 G. Caminiti, “数字文档签名：漏洞与解决方案”，《信息安全杂志：全球视角》，第24卷, 第1-3期, 2015, pp. 1–14。

[37] M. Stevens, E. Bursztein, P. Karpman, A. Albertini, 和 Y. Markov, “SHA-1的首次碰撞”，在年度国际密码学会议上发表。 Springer, 2017, pp. 570–596。

[38] P. Domingues 和 M. Frade, “带有数字签名和权限限制的PDF文件：一个数字取证案例研究”，在第13届可用性、可靠性和安全性国际会议上发表, ser. ARES 2018。纽约, NY, USA: 计算机协会, 2018。 [在线]。 可访问: https://doi.org/10.1145/3230833.3232811

[39] F. Buccafurri, “数字签名信任漏洞：一种新的数字签名攻击”，《信息管理与计算机安全》，第4卷, pp. 28–6, 2005。 [在线]。 可访问: http://www.unirc.it/firma/en/Buccafurri_ISSA_1008.pdf

[40] F. Buccafurri, G. Caminiti, 和 G. Lax, “加强Dalí对数字签名的攻击”，在第二届信息安全与网络国际会议上发表, ser. SIN '09。纽约, NY, USA: 计算机协会, 2009, p. 278–287。 [在线]。 可访问: https://doi.org/10.1145/1626195.1626262

[41] D. Popescu, “在PDF文档中隐藏恶意内容”，CoRR, vol. abs/1201.0397, 2012。 [在线]。 可访问: http://arxiv.org/abs/1201.0397

[42] A. Albertini, “这是一张猫的照片”，概念验证11 GTFO 0x03, 2014。 [在线]。 可访问: https://www.alchemistowl.org/pocorgtfo/pocorgtfo03.pdf

[43] M. McIntosh 和 P. Austel, “XML签名元素包装攻击及对策”，在SWS '05: 2005安全Web服务研讨会论文集中。 纽约, NY, USA: ACM Press, 2005, pp. 20–27。

[44] J. Somorovsky, A. Mayer, J. Schwenk, M. Kampmann, 和 M. Jensen, “打破SAML：成为你想成为的人”，在第21届USENIX安全研讨会上发表, 贝尔维尤, WA, 2012年8月。

**附录A：权限不合规的PDF应用程序列表**

以下应用程序未正确实现权限级别检查。此实现问题使得可以将SSA应用于P1认证文档，并将EAA应用于P1和P2认证文档。

- Expert PDF 14, 14.0.28.3456, Windows
- LibreOffice Draw, 6.4.2.2, Windows
- Master PDF Editor, 5.4.38, Windows
- PDF Architect 7, 7.1.14.4969, Windows
- PDF-XChange Editor, 8.0 (Build 336.0), Windows
- Perfect PDF 8 Reader, 8.0.3.5, Windows
- Perfect PDF 10 Premium, 10.0.0.1, Windows
- Soda PDF Desktop, 11.2.46.6035, Windows
- LibreOffice Draw, 6.4.2.2, macOS
- Master PDF Editor, 5.4.38, Linux
- LibreOffice Draw, 6.4.2.2, Linux

**附录B：已修复的应用程序**

以下应用程序已被供应商报告为已修复。

- Adobe Acrobat DC, 2021.001.20315, Windows
- Adobe Acrobat 2020, 2020.001.30020, Windows
- Adobe Acrobat 2017, 2017.011.30190, Windows
- Foxit PhantomPDF, 10.1.1, Windows
- Foxit Reader, 10.1.1, Windows
- LibreOffice, 7.0.4, Windows
- Adobe Acrobat DC, 2021.001.20315, macOS
- Adobe Acrobat 2020, 2020.001.30020, macOS
- Adobe Acrobat 2017, 2017.011.30190, macOS
- Foxit PhantomPDF, 4.1.1, macOS
- Foxit Reader, 4.1.1, macOS
- LibreOffice, 7.0.4, macOS
- LibreOffice, 7.0.4, Linux

**附录C：PDF测试器工作流程**

开始
用户配置
生成屏幕截图
是
否
评估屏幕截图
选择攻击向量
PDF文件
是
打开外部程序
PDF应用程序
截取屏幕截图, 关闭程序
选择未修改的屏幕截图
真实情况
选择修改后的屏幕截图
比较
是
保存屏幕截图
存储结果
更多程序？
更多屏幕截图？
否
更多PDF？
否
结束

PDF测试器的概念。左侧显示了PDF测试器的屏幕截图生成过程。右侧显示了PDF测试器的屏幕截图评估过程。

**附录D：PDF检测器报告**

```json
{
  "status": "OK/warning/error",
  "type": "approval/certified/none",
  "permission": "1/2/3/none",
  "incremental-update-changes": "annotation/signature/annotation+signature/exists/none",
  "changes-danger-level": "very high/high/medium/low/none",
  "message": ""
}
```

清单2. PDF检测器返回一个JSON消息报告，该消息包含有关文档中是否出现与原始内容相交的危险元素的信息。

**附录E：PDF中的特权JavaScript执行**

```javascript
/JS (app.launchURL("https://www.malicious.org/", true););
/S /JavaScript
```

清单3. 自动调用URL的特权JavaScript执行。

---

这样优化后的文本更加结构化，条理清晰，便于读者理解和引用。