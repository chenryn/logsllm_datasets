### 5.1.1 Mail Submission

During mail submission, the server provided a certificate with the common name `*.hotmail.com` and no `subjectAltName`. On the delivery side, we observed that several providers, including Hotmail and Yahoo!, used mismatched certificates.

### 5.1.2 Web Interface

All 22 selected providers offered a web-based mail interface. However, three providers (163.com, libero.it, and daum.net) did not support TLS. Among the top 10 providers, all except qq.com and comcast.net required SSL/TLS to access their webmail services.

**Certificates:** All certificates used for HTTPS were valid and matched the domain names. This is expected, as modern browsers issue warnings for mismatched certificates. The lack of certificate validation by MUAs (Mail User Agents) likely explains the high number of mismatched certificates used by MSAs (Mail Submission Agents) and MDAs (Mail Delivery Agents).

### 5.2 Inside the Provider

Once a message is submitted to a mail provider, it may pass through several internal servers before reaching the outgoing MTA (Message Transfer Agent). We do not have direct visibility into these internal processes, so our measurements are based on the information provided in the `Received` headers (Section 4.7). Using this data, we reconstructed the use of TLS within the 22 selected providers for both outgoing and incoming paths (labeled (b) and (d) in Figure 1).

**Table 3: Internal TLS Usage**

- **Outgoing Path (MSA to Outgoing MTA):** Shows internal hops on the outgoing path.
- **Incoming Path (Incoming MTA to MDA):** Shows internal hops on the incoming path.
- **Symbols:**
  - (cid:73): Indicates TLS was used.
  - (cid:66): Indicates TLS was not used.
  - ·: Indicates a non-standard protocol was used.

Yahoo! appears to use an internally developed protocol called NNFMP, which is not publicly documented, and its TLS usage is unknown. Some providers had multiple possible routes for messages, and we prioritized the route with the most hops.

Overall, the use of TLS on internal hops is not widespread. Incoming message paths are generally shorter and, in some cases, record no hops at all. None of the incoming message paths appeared to use TLS.

**Note:** Providers like web.de, which report no hops from the MTA to MDA, may be using the same host for both or may not be recording internal hops in the message headers.

### 5.3 Provider-to-Provider Communication

The hop between providers, from the outgoing MTA to the incoming MTA, uses SMTP. In the absence of direct peering, messages will transit the public Internet, making this segment particularly vulnerable to mass traffic interception. As discussed in Sections 4.2 and 4.3, we infer the behavior of MTAs when communicating with each other based on their interactions with our test servers.

#### 5.3.1 TLS Support at Outgoing MTAs

**Email Providers:**

- **Table 6: STARTTLS Command Usage by Outgoing MTAs**
  - **CONTROL Column:** Indicates the use of the STARTTLS command by provider outgoing MTAs when contacting our server.
  - **Symbols:**
    - (cid:35): Indicates TLS was not used.
    - (cid:32): Indicates TLS was used in both scans (March 2014 and February 2015).
    - %: Indicates TLS was used in the February 2015 scan but not in the March 2014 scan.
  - All top 10 providers used TLS when offered in 2015.

**Other Generators:**

- **Table 4: TLS, SPF, and DMARC Support among Outgoing MTAs Used by Select Web Services**
  - Shows TLS, SPF, and DMARC support for major web services.
  - Note: Some services appear in both Table 6 and Table 4 with different levels of TLS support, reflecting their use for both mail and non-mail services.

Financial institutions showed the highest TLS support, with all but USBank's outgoing MTA supporting TLS. News and dating sites had the lowest TLS support, which is surprising given the personal nature of the emails.

#### 5.3.2 Certificate Checking at Outgoing MTAs

We performed the experiment multiple times, offering different certificates to the outgoing MTA. We found that all but three providers (wp.pl, comcast.net, and hotmail.com) did not perform any certificate checking. Specifically, they accepted a revoked, expired, self-signed, mismatched certificate with a weak signature (sha1WithRSA 512 bit). The outgoing MTAs for hotmail.com, wp.pl, and comcast.net rejected our certificate only because it was expired. When remedied, their MTAs accepted the revoked, self-signed, mismatched, weak certificate.

#### 5.3.3 Outgoing MTA Client Certificates

For each connection from an outgoing MTA, we recorded the client certificate provided during TLS negotiation. Seven of the 22 selected providers returned a client certificate for our request. Of these, only one, from comcast.com, was expired or otherwise invalid.

#### 5.3.4 TLS Support at Incoming MTAs

**Select Providers:**

- **Table 6: TLS Support at Incoming MTAs**
  - Surprisingly, more providers support sending with TLS than receiving with TLS. However, Google’s TLS data (discussed in Section 6) shows that 7 of the providers we observed not sending with TLS do use TLS with Google.

**Other Providers:**

- **Top 1 Million Domains (Adobe Leak Data)**
  - 50.5% of 302,938 MTAs (covering 245,054 providers) supported TLS in March 2014, increasing to 54.6% in February 2015.
  - Among the top 1000 providers, support for TLS increased from 43.7% to 59.2%.

**Table 5: Certificate Status of Top Mail Receiving MTAs (Adobe Data Set)**

| Status       | Frequency 2014 | Frequency 2015 |
|--------------|----------------|----------------|
| Valid        | 75.86%         | 79.14%         |
| Self Signed  | 20.47%         | 11.39%         |
| Expired      | 3.41%          | 2.88%          |
| Revoked      | 0.17%          | 0.04%          |
| Non Matched  | 34.13%         | 37.26%         |

This table summarizes the certificate status of the top mail receiving MTAs found in the Adobe data set.