### Secure Computation Outsourcing
Secure computation outsourcing has been a subject of research for over a decade. Early studies primarily focused on delegating cryptographic operations, such as modular exponentiations, to untrusted helpers [38, 31]. More recent work includes techniques for securely computing edit distances and string alignments [19, 16, 32, 20, 44], which, however, are too computationally intensive for data-intensive tasks. Efforts have also been made to securely outsource linear algebra operations [15] and machine-learning tasks [25]. For example, Peer-for-Privacy decomposes data mining algorithms into vector addition steps, distributes them to multiple cloud nodes, and evaluates them using a special secret sharing scheme [25]. Despite these advancements, these approaches often require extensive communication during the computation process. Additionally, secret-sharing-based methods can introduce new policy challenges: once data is shared among multiple parties, the original organization loses control, as these parties can collude to reconstruct the data. It remains unclear whether the organization needs to sign agreements with each party, and if so, what those agreements should entail [36]. This concern also applies to methods that decompose a computation problem into smaller sub-problems and distribute them to multiple solvers, under the assumption that these parties will not collude.

### Computation Splitting
The concept of splitting computations among multiple parties for security purposes has been explored in various contexts. For instance, Swift [21] uses secure information-flow analysis [39] to partition web applications into client and server components. Another example is distributing genomic computations across two or more parties [44, 48]. However, these techniques are not designed for data-intensive computations, which is the focus of our research.

### Discussion
Sedic is designed to handle data where sensitive records are known and can be marked by the owner. This is common in many real-life scenarios, such as documents in organizational file systems, which are often labeled by access privileges. However, there are cases where the owner is unaware of which parts of the data are sensitive. A notable example is read mapping in human DNA sequences [45], where the task is to align a short DNA sequence to a long reference genome to identify its genetic location. The challenge here is that before alignment, it is unknown where the sequence belongs or whether it contains sensitive information. In such cases, a specific solution must be developed, considering the unique characteristics of the problem.

Our approach is built on Hadoop, which does not natively support iterative MapReduce [23]. To execute tasks requiring multiple rounds of map-reduce operations, we break them down into multiple Hadoop jobs. Sedic also requires an additional step to label the output of one job so that the follow-up job can be split between public and private clouds. In future research, we plan to migrate our design to Twister [27] to support iterative MapReduce, which is crucial for certain data mining analyses [24]. We also aim to embed lightweight information-flow tracking and declassification mechanisms into the execution framework to enable automatic labeling of sensitive outputs.

The design of Sedic can be further improved. Our experimental study found that data blocks containing only public or sensitive data are processed more efficiently than those with mixed data types. A straightforward solution would be to reorganize the data, clustering sensitive records from different blocks into new blocks. However, this could lead to incorrect computation results, as keys generated by mappers are often related to the positions of the blocks in the datasets. To address this, we need to attach position information to individual records being clustered. The question remains whether the extra workload for processing this information will significantly degrade performance, which will be investigated in future research.

Our current code analysis and transformation tool can only handle reducers of the type described in Section 4.1. This approach is sufficient for most real-world reducers, which are relatively simple. However, it is important to understand if there is a demand for more complex reduction operations, which may not be associative. If such demands exist, the analysis and transformation techniques will need to be improved to accommodate new applications. This issue is on our research agenda.

### Conclusion
Commercial cloud services like Amazon EC2 enable customers to process large amounts of data at a low cost. However, this benefit comes with privacy risks, as organizational computing tasks often involve sensitive data that cannot be directly delegated to the public cloud without proper protection. Traditional secure outsourcing techniques are often inadequate for handling large data volumes. A more practical solution is to split the computation, moving non-sensitive data to the commercial cloud while keeping sensitive data within a private cloud. This hybrid computing paradigm requires a new privacy-aware computation framework. To this end, we present Sedic, the first secure data-intensive computing system. Sedic leverages the features of MapReduce to schedule individual map tasks over a carefully planned data placement, ensuring that tasks within the private cloud only work on sensitive data and those on the public cloud only process public data. This allows all non-sensitive workload to be offloaded to the low-cost commercial cloud. To minimize data exchange between clouds, Sedic automatically analyzes the reducer of a legacy MapReduce job to extract a combiner for aggregating map outcomes on the public cloud. We implemented our techniques on Hadoop and evaluated our prototype on FutureGrid, a large-scale cloud test-bed. Our study shows that Sedic effectively outsources a large amount of computing workload to the public cloud without compromising user privacy, fully preserving the scalability of MapReduce and accommodating legacy computing jobs.

### Acknowledgements
We thank Kumar Bhaskaran, Milton H. Hernandez, and Xiaolan (Catherine) Zhang for their valuable comments and advice, and Vijay Naik for his knowledge about hybrid cloud. We also thank anonymous reviewers for their insightful comments. Kehuan Zhang was supported in part by the NSF CNS-0716292, CNS-1017782, and the IBM internship program.

### References
[1] Network performance within Amazon EC2 and to Amazon S3. http://blog.rightscale.com/2007/10/28/network-performance-within-amazon-ec2-and-to-amazon-s3/, 2008.
[2] Testing Amazon Web Services bandwidth. http://jonathanmaim.com/2008/05/testing-amazon-web-services-bandwidth.html, 2008.
[3] Amazon Virtual Private Cloud. http://aws.amazon.com/vpc/, 2011.
[4] Awareness, trust, and security to shape government cloud adoption. http://www.lockheedmartin.com/data/assets/isgs/documents/CloudComputingWhitePaper.pdf, 2011.
[5] DARPA Intrusion Detection Data Set. http://www.ll.mit.edu/mission/communications/ist/corpora/ideval/data/index.html, 2011.
[6] Enron Email Dataset. http://www.cs.cmu.edu/~enron/, 2011.
[7] Future Grid Portal. https://portal.futuregrid.org/, 2011.
[8] An introduction to distributed intrusion detection systems. http://www.symantec.com/connect/articles/introduction/distributed/intrusion/detection/systems, 2011.
[9] Social media data helping to target extend demand gen campaigns. http://www.demandgenreport.com/archives/feature-articles/594-social-media.html, 2011.
[10] Sony: Hacker stole PlayStation users' personal info. http://edition.cnn.com/2011/TECH/gaming.gadgets/04/26/playstation.network.hack/index.html, 2011.
[11] Soot: A Java optimization framework. http://www.sable.mcgill.ca/soot/, 2011.
[12] Spam Archive. http://untroubled.org/spam/, 2011.
[13] Summary of the Amazon EC2 and Amazon RDS service disruption in the US East Region. http://aws.amazon.com/message/65648/, 2011.
[14] Target Marketing. http://en.wikipedia.org/wiki/Target_market, 2011.
[15] M. J. Atallah and K. B. Frikken. Securely outsourcing linear algebra computations. In Proceedings of the 5th ACM Symposium on Information, Computer and Communications Security, ASIACCS '10, pages 48–59, New York, NY, USA, 2010. ACM.
[16] M. J. Atallah, F. Kerschbaum, and W. Du. Secure and private sequence comparisons. In Proceedings of the 2003 ACM workshop on Privacy in the electronic society, WPES '03, pages 39–44, New York, NY, USA, 2003. ACM.
[17] M. J. Atallah and J. Li. Secure outsourcing of sequence comparisons. Int. J. Inf. Secur., 4:277–287, October 2005.
[18] D. Bernstein, E. Ludvigson, K. Sankar, S. Diamond, and M. Morrow. Blueprint for the Intercloud - protocols and formats for cloud computing interoperability. Internet and Web Applications and Services, International Conference on, 0:328–336, 2009.
[19] M. Blanton and M. Aliasgari. Secure outsourcing of DNA searching via finite automata. In S. Foresti and S. Jajodia, editors, DBSec, volume 6166 of Lecture Notes in Computer Science, pages 49–64. Springer, 2010.
[20] F. Bruekers, S. Katzenbeisser, K. Kursawe, and P. Tuyls. Privacy-preserving matching of DNA profiles. Technical Report Report 2008/203, ACR Cryptology ePrint Archive, 2008.
[21] S. Chong, J. Liu, A. C. Myers, X. Qi, K. Vikram, L. Zheng, and X. Zheng. Secure web applications via automatic partitioning. SIGOPS Oper. Syst. Rev., 41:31–44, October 2007.
[22] J. Dean and S. Ghemawat. MapReduce: simplified data processing on large clusters. Commun. ACM, 51:107–113, January 2008.
[23] J. Dean and S. Ghemawat. MapReduce: simplified data processing on large clusters. Commun. ACM, 51:107–113, January 2008.
[24] A. P. Dempster, N. M. Laird, and D. B. Rubin. Maximum likelihood from incomplete data via the EM algorithm. JOURNAL OF THE ROYAL STATISTICAL SOCIETY, SERIES B, 39(1):1–38, 1977.
[25] Y. Duan, N. Youdao, J. Canny, and J. Zhan. P4P: Practical large-scale privacy-preserving distributed computation robust against malicious users. In Proceedings of the 19th USENIX Security Symposium, Washington, DC, August 2010.
[26] C. Dwork. Differential privacy. In ICALP, pages 1–12. Springer, 2006.
[27] J. Ekanayake, H. Li, B. Zhang, T. Gunarathne, S.-H. Bae, J. Qiu, and G. Fox. Twister: A runtime for iterative MapReduce. Technical report, Indiana University, Bloomington, IN, 2010.
[28] T. A. S. Foundation. Apache Hadoop Project. http://hadoop.apache.org/, 2010.
[29] B. Furht. Cloud Computing Fundamentals. In B. Furht and A. Escalante, editors, Handbook of Cloud Computing, pages 3–19. Springer US, 2010.
[30] C. Gentry. Fully homomorphic encryption using ideal lattices. In Proceedings of the 41st annual ACM symposium on Theory of computing, STOC '09, pages 169–178, New York, NY, USA, 2009. ACM.
[31] S. Hohenberger and A. Lysyanskaya. How to securely outsource cryptographic computations. In J. Kilian, editor, Theory of Cryptography, volume 3378 of Lecture Notes in Computer Science, pages 264–282. Springer Berlin / Heidelberg, 2005.
[32] S. Jha, L. Kruger, and V. Shmatikov. Towards practical privacy for genomic computation. In 2008 IEEE Symposium on Security and Privacy, 2008.
[33] A. V. Konstantinou, T. Eilam, M. Kalantar, A. A. Totok, W. Arnold, and E. Snible. An architecture for virtual solution composition and deployment in infrastructure clouds. In Proceedings of the 3rd international workshop on Virtualization technologies in distributed computing, VTDC '09, pages 9–18, New York, NY, USA, 2009. ACM.
[34] B. Langmead, M. Schatz, J. Lin, M. Pop, and S. Salzberg. Searching for SNPs with cloud computing. Genome Biology, 10(11):R134+, November 2009.
[35] A. W. S. LLC. Amazon Elastic Compute Cloud (Amazon EC2). http://aws.amazon.com/ec2/, 2010.
[36] A. W. S. LLC. Amazon Web Services Customer Agreement. http://aws.amazon.com/agreement/, 2010.
[37] M. C. I. Lockheed Martin, LM Cyber Security Alliance. Awareness, trust, and security to shape government cloud adoption. http://www.lockheedmartin.com/data/assets/isgs/documents/CloudComputingWhitePaper.pdf, April 2010.
[38] T. Matsumoto, K. Kato, and H. Imai. Speeding up secret computations with insecure auxiliary devices. In Proceedings of the 8th Annual International Cryptology Conference on Advances in Cryptology, pages 497–506, London, UK, 1990. Springer-Verlag.
[39] A. C. Myers and B. Liskov. Protecting privacy using the decentralized label model. ACM Trans. Softw. Eng. Methodol., 9(4):410–442, 2000.
[40] NSF. Award abstract #091081 - FutureGrid: An experimental, high-performance grid test-bed, 2009.
[41] I. Roy, S. T. V. Setty, A. Kilzer, V. Shmatikov, and E. Witchel. Airavat: Security and privacy for MapReduce. In NSDI, pages 297–312. USENIX Association, 2010.
[42] M. C. Schatz. CloudBurst: highly sensitive read mapping with MapReduce. Bioinformatics, 25(11):1363–1369, 2009.
[43] A. W. Services. AWS case study: Washington Post. http://aws.amazon.com/solutions/case-studies/washington-post/, December 2010.
[44] D. Szajda, M. Pohl, J. Owen, and B. G. Lawson. Toward a practical data privacy scheme for a distributed implementation of the Smith-Waterman genome sequence comparison algorithm. In NDSS. The Internet Society, 2006.
[45] C. Trapnell and S. L. Salzberg. How to map billions of short reads onto genomes. Nature Biotechnology, 27(5):455–457, May 2009.
[46] M. van Dijk, C. Gentry, S. Halevi, and V. Vaikuntanathan. Fully homomorphic encryption over the integers. In H. Gilbert, editor, Advances in Cryptology - EUROCRYPT 2010, volume 6110 of Lecture Notes in Computer Science, pages 24–43. Springer Berlin / Heidelberg, 2010.
[47] C. Wang, Q. Wang, K. Ren, and W. Lou. Privacy-preserving public auditing for data storage security in cloud computing. In Proceedings of the 29th conference on Information communications, INFOCOM'10, pages 525–533, Piscataway, NJ, USA, 2010. IEEE Press.
[48] R. Wang, X. Wang, Z. Li, H. Tang, M. K. Reiter, and Z. Dong. Privacy-preserving genomic computation through program specialization. In CCS '09: Proceedings of the 16th ACM conference on Computer and communications security, pages 338–347, New York, NY, USA, 2009. ACM.
[49] Z. Yang, S. Zhong, and R. N. Wright. Privacy-preserving classification of customer data without loss of accuracy. In SIAM SDM, pages 21–23, 2005.