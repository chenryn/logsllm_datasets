### Network Configuration and Simulation Test

The network configuration was performed manually and is deemed reasonable. To ensure the firewall settings are appropriate, a simulation test was conducted on a Windows XP platform equipped with a 3.0GHz Intel Pentium 4 processor and 512MB of main memory. The results of the simulation test are presented in Table 3. The field test results confirmed the scalability analysis.

**Table 3: Simulation Test Results**

| Test | Num of Subnets | Num of Host Clusters | Num of Vulnerabilities | Num of Stack Alphabets | Vulnerabilities per Host | Reachability Rate | Num of Targets | Time for Construction | Num of Productions after Eliminating Nullable | Time for Simplification | Num of Productions after Simplification |
|------|-----------------|-----------------------|-------------------------|-------------------------|---------------------------|--------------------|-----------------|------------------------|------------------------------------------------|--------------------------|-----------------------------------------|
| Test 1 | 3               | 15                    | 20                      | 3                       | 0~5                       | 43.2%              | 1               | 0.031s                 | 20208                                          | 0.001s                   | 2150619                                 |
| Test 2 | 5               | 50                    | 20                      | 3                       | 0~5                       | 36.0%              | 1               | 5.45s                  | 11659221                                       | 0.031s                   | 380                                     |
| Test 3 | 8               | 80                    | 20                      | 3                       | 0~5                       | 30.0%              | 2               | 43.28s                 | 735                                            | 0.25s                    | 19                                      |

### Related Work

Previous research on network vulnerability analysis can be broadly categorized into graph-based and logic-based approaches, though some studies overlap both categories.

**Graph-Based Approaches:**
- **Swiler et al. [9, 10]**: Developed one of the first graph-based formalisms for analyzing network vulnerabilities. Their NETSpa system [16] constructs the full attack graph, which becomes impractical for large networks due to combinatorial growth.
- **Ammann et al. [17]**: Proposed a monotonicity assumption [18] and developed a polynomial algorithm with an approximate complexity of O(N^6). This assumption was also identified in Jajodia et al. [21], who described the Topological Vulnerability Analysis tool with a scalability of O(N^6) relative to the number of hosts.
- **Ammann et al. [19]**: Presented an O(N^3) algorithm to determine worst-case paths to all compromised hosts, but it only provides suboptimal recommendations.
- **Lippmann et al. [3]**: Introduced a host-compromised graph called the predictive graph with a construction complexity of O(N^3), but it only shows the shortest attack path to a target.

**Logic-Based Approaches:**
- **Ritchey and Ammann [11]**: Proposed using model checkers to generate attack paths for known exploits. Later work by Jha et al. [12] and Sheyner et al. [14, 15] extended the use of model checking to analyze attack graphs on complex networks. Model checking does not assume monotonicity, leading to poor scalability.
- **MulVAL [20]**: Proposed a monotonic, logic-based approach that produces counterexamples for a given security policy. Representing vulnerability information in Prolog, the complexity is between O(N^2) and O(N^3), but only separate attack paths can be outputted.
- **X. Ou et al. [13]**: Extended their previous research on MulVAL by providing an efficient graph-generating algorithm with a complexity of O(N^2 log N). However, removing loops in the generated graph has a runtime of approximately O(N^4).

**Other Research:**
- **Templeton and Levitt [22]**: First proposed the "requires/provides" model to describe exploits, which has been widely used to chain these exploits together.
- **LAMBDA [23]**: Focuses on the detailed description of attacks, but requires a significant amount of detailed attack specifications, making it impractical.
- **Ritchey et al. [24]**: Addressed the computation of reachability problems.

**IDS Alert Correlation:**
- **Cuppens et al. [27]** and **Cheung et al. [4]**: Focused on dependencies among events. In [27], logical rules were defined through pre-conditions and post-conditions, while [4] used a bottom-up methodology to recognize attack scenarios. However, designing detailed attack models or patterns for every attack is challenging, and no high-level attack scenario is recognized due to a lack of a global view of network attacks.
- **Ning et al. [6]**: Used attack graphs to represent relationships among IDS events, constructing the graph as events occur.
- **Wang et al. [7]**: One of the few studies that use attack graphs to filter alerts, generating graphs without fixed starting points and targets, with the actual start and end of an intrusion indicated by alerts.

### Conclusion and Future Work

In this paper, we propose a grammar-based approach to modeling and analyzing multi-step network attack sequences. We present methods for modeling attacks with PDA and algorithms for constructing, simplifying, and analyzing attack grammars. The primary goal is to overcome the limitations of using graphs in previous research. Since the algorithm complexity for converting attack grammars to attack graphs is linear to the length of the grammar, it is also feasible and instructive to construct attack graphs using our method. Future work may include completing our tool and testing the attack grammar on realistic networks, as well as integrating our approach with existing IDS applications for alert correlation.

### References

[1] K. Ingols, R. Lippmann, and K. Piwowarski, “Practical Attack Graph Generation for Network Defense,” 22nd Annual Computer Security Applications Conference, December 2006.

[2] Common vulnerabilities and exposures dictionary. http://cve.mitre.org/.

[3] R. P. Lippmann et al., “Validating and restoring defense in depth using attack graphs,” in Proceedings of MILCOM 2006, Washington, DC.

[4] S. Cheung, U. Lindqvist, et al., “Modeling multistep cyber attacks for scenario recognition,” in Proceedings of the Third DARPA Information Survivability Conference and Exposition (DISCEX III), pages 284–292, 2003.

[5] S. Noel and S. Jajodia, “Correlating Intrusion Events and Building Attack Scenarios through Attack Graph Distances,” Proceedings of the 20th Annual Computer Security Application Conference (ACSAC04).

[6] P. Ning, D. Xu, C. Healey, R. St. Amant, “Building Attack Scenarios through Integration of Complementary Alert Correlation Methods,” in Proceedings of the 11th Information Survivability Conference and Distributed System Security Annual Network Symposium, February 2004.

[7] Wang, L., Liu, A., Jajodia, S., “Using attack graphs for correlating, hypothesizing, and predicting intrusion alerts,” Computer Communications, vol. 29, 2006.

[8] Thomas A. S., Languages and Machines: An Introduction to the Theory of Computer Science.

[9] C. Phillips and L. Swiler, “A graph-based system for network-vulnerability analysis,” in Proceedings of the New Security Paradigms Workshop, pages 71–79, Charlottesville, VA, 1998.

[10] L. Swiler, C. Phillips, D. Ellis, and S. Chakerian, “Computer-attack graph generation tool,” in Proceedings DISCEX ’01: DARPA Information Survivability Conference & Exposition II, pages 307–321, June 2001.

[11] R. W. Ritchey and P. Ammann, “Using model checking to analyze network vulnerabilities,” in Proceedings of the 2000 IEEE Symposium on Security and Privacy (Oakland 2000), pages 156–165, Oakland, CA, May 2000.

[12] S. Jha, O. Sheyner, and J. Wing, “Two formal analyses of attack graphs,” in Proceedings of the 2002 Computer Security Foundations Workshop, pages 49–63, Nova Scotia, June 2002.

[13] Xinming Ou, Wayne F. Boyer, and Miles A. McQueen, “A scalable approach to attack graph generation,” in Proceedings of the 13th ACM conference on computer and communications security, Alexandria, Virginia, 2006.

[14] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and J. Wing, “Automated generation and analysis of attack graphs,” in Proceedings of the 2002 IEEE Symposium on Security and Privacy (Oakland 2002), Oakland, CA, May 2002.

[15] O. Sheyner and J. Wing, “Tools for generating and analyzing attack graphs,” in Proceedings of International Symposium on Formal Methods for Components and Objects, Lecture Notes in Computer Science, 2005.

[16] M. Artz, “NETspa, a network security planning architecture,” Master’s thesis, Massachusetts Institute of Technology, 2002.

[17] P. Ammann, D. Wijesekera, and S. Kaushik, “Scalable, graph-based network vulnerability analysis,” in Proceedings of the 9th ACM Conference on Computer and Communications Security, pages 217–224, ACM Press, 2002.

[18] S. Noel and S. Jajodia, “Managing attack graph complexity through visual hierarchical aggregation,” in Proceedings of the 2004 ACM workshop on Visualization and data mining for computer security, pages 109–118, New York, NY, USA, 2004. ACM press.

[19] P. Ammann, J. Pamula, R. Ritchey, and J. Street, “A host-based approach to network attack chaining analysis,” in ACSAC’05: Proceedings of the 21st Annual Computer Security Applications Conference, pages 72–84, IEEE Computer Society, 2005.

[20] X. Ou, S. Govindavajhala, and A. Appel, “MulVAL: A logic-based network security analyzer,” in Proceedings of the 14th USENIX Security Symposium, pages 113–128, 2005.

[21] S. Jajodia, S. Noel, and B. O’Berry, Topological Analysis of Network Attack Vulnerability, chapter 5, Kluwer Academic Publisher, 2003.

[22] S. Templeton and K. Levitt, “A requires/provides model for computer attacks,” in Proceedings of the New Security Paradigms Workshop, Cork, Ireland, September 2000.

[23] F. Cuppens and R. Ortalo, “LAMBDA: A Language to Model a Database for Detection of Attacks,” Recent Advances in Intrusion Detection (RAID) 2000, Lecture Notes in Computer Science 1907, H. Debar, L. Me, and F. Wu, Eds., Berlin: Springer Verlag, 2001.

[24] R. Ritchey, B. O’Berry, and S. Noel, “Representing TCP/IP connectivity for topological analysis of network security,” in Proceedings of the 18th Annual Computer Security Applications Conference, Las Vegas, NV, 2002.

[25] O. Sheyner, “Scenario Graphs and Attack Graphs,” PhD Thesis, Carnegie Mellon University, April 2004.

[26] Hopcroft, Motwani, Ullman, Introduction to Automata Theory, Languages, and Computation (2Ed Aw 2001).

[27] F. Cuppens, A. Miege, “Alert Correlation in a Cooperative Intrusion Detection Framework,” in Proceedings of the 2002 IEEE Symposium on Security and Privacy, May 2002.