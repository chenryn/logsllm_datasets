### Performance and Aggregation Details

- The combined operation (instead of separate invocations of `Prove` followed by `Aggregate`) takes only 83ms for \( |S| = 8 \). For more details, see Figure 3.
- If verification of \(\hat{\pi}\) is desired before aggregation, it can be performed in 4.7ms for \( |S| = 1 \) and 9.9ms (1.2ms per value proven) for \( |S| = 8 \). See Figure 3 for more details.
- The block proposer can aggregate proofs across multiple commitments \(\hat{\pi}_1, \ldots, \hat{\pi}_\ell\) into a single proof \(\pi\) using `AggregateAcross` at a cost of 0.06–0.07ms per proof. The per-proof cost decreases as the number of proofs in a block increases. Aggregation is highly parallelizable because the main cost is one exponentiation per commitment. See Figure 4 for more details.
- A validator can verify the aggregated proof \(\pi\) using `VerifyAcross` at a cost of 1.9ms per commitment for \( |S| = 1 \) and 5.7ms per commitment (0.72ms per value proven) for \( |S| = 8 \). The per-commitment cost does not change significantly as the number of commitments grows from 1000 to 5000. Verification is highly parallelizable because the main cost is the per-commitment Miller loop of one pairing operation. See Figure 4 for more details.
- In the Algorand blockchain, for example, a 64-thread parallelized version of the `Verify` algorithm would add 0.45 seconds (or 70%) to the block verification time for 5000 transactions (see Figure 5, plot "5000 txs; Pixel" [DGNW20]).
- Anyone storing the commitments can update them with new values in \( m'[S] \) at a cost of 0.3ms per proof for \( |S| = 1 \) and 0.2ms per proof for \( |S| = 8 \). One-time precomputation on the public parameters (storing 256 values per parameter) can speed this up by a factor of 3–5.

### Acknowledgments

We thank Derek Leung and Nickolai Zeldovich for numerous insightful discussions on using vector commitments on the blockchain; Shai Halevi, Craig Gentry, and Ariel Gabizon for conversations on polynomial commitments; Adam Suhl for insights into parameter generation; and Dario Fiore for help understanding the parameters of prior work. This work was done while HW and SG were at Algorand.

### References

- **[AGH10]** Jae Hyun Ahn, Matthew Green, and Susan Hohenberger. "Synchronized Aggregate Signatures: New Definitions, Constructions, and Applications." In Ehab Al-Shaer, Angelos D. Keromytis, and Vitaly Shmatikov, editors, ACM CCS 2010, pages 473–484. ACM Press, October 2010.
- **[Alg20a]** Algorand. Pairing plus library, 2020. https://github.com/algorand/pairing-plus.
- **[Alg20b]** Algorand. Source code for PointProofs, 2020. https://github.com/algorand/pointproofs.
- **[BBF18]** Dan Boneh, Benedikt Bünz, and Ben Fisch. "A Survey of Two Verifiable Delay Functions." Cryptology ePrint Archive, Report 2018/712, 2018. https://eprint.iacr.org/2018/712.
- **[BBF19]** Dan Boneh, Benedikt Bünz, and Ben Fisch. "Batching Techniques for Accumulators with Applications to IOPs and Stateless Blockchains." In Alexandra Boldyreva and Daniele Micciancio, editors, CRYPTO 2019, Part I, volume 11692 of LNCS, pages 561–586. Springer, Heidelberg, August 2019.
- **[BBG05]** Dan Boneh, Xavier Boyen, and Eu-Jin Goh. "Hierarchical Identity Based Encryption with Constant Size Ciphertext." In Ronald Cramer, editor, EUROCRYPT 2005, volume 3494 of LNCS, pages 440–456. Springer, Heidelberg, May 2005.
- **[BDN18]** Dan Boneh, Manu Drijvers, and Gregory Neven. "Compact Multi-Signatures for Smaller Blockchains." In Thomas Peyrin and Steven Galbraith, editors, ASIACRYPT 2018, Part II, volume 11273 of LNCS, pages 435–464. Springer, Heidelberg, December 2018.
- **[BDFG20]** Dan Boneh, Justin Drake, Ben Fisch, and Ariel Gabizon. "Efficient Polynomial Commitment Schemes for Multiple Points and Polynomials." Cryptology ePrint Archive, Report 2020/081, 2020.
- **[BGM17]** Sean Bowe, Ariel Gabizon, and Ian Miers. "Scalable Multi-Party Computation for zk-SNARK Parameters in the Random Beacon Model." Cryptology ePrint Archive, Report 2017/1050, 2017. http://eprint.iacr.org/2017/1050.
- **[BGR12]** Kyle Brogle, Sharon Goldberg, and Leonid Reyzin. "Sequential Aggregate Signatures with Lazy Verification from Trapdoor Permutations - (Extended Abstract)." In Xiaoyun Wang and Kazue Sako, editors, ASIACRYPT 2012, volume 7658 of LNCS, pages 644–662. Springer, Heidelberg, December 2012.
- **[BGW05]** Dan Boneh, Craig Gentry, and Brent Waters. "Collusion Resistant Broadcast Encryption with Short Ciphertexts and Private Keys." In Victor Shoup, editor, CRYPTO 2005, volume 3621 of LNCS, pages 258–275. Springer, Heidelberg, August 2005.
- **[BM+19]** Benedikt Bünz, Mary Maller, Pratyush Mishra, and Noah Vesely. "Proofs for Inner Pairing Products and Applications." Cryptology ePrint Archive, Report 2019/1177, 2019. https://eprint.iacr.org/2019/1177.
- **[BR93]** Mihir Bellare and Phillip Rogaway. "Random Oracles are Practical: A Paradigm for Designing Efficient Protocols." In Dorothy E. Denning, Raymond Pyle, Ravi Ganesan, Ravi S. Sandhu, and Victoria Ashby, editors, ACM CCS 93, pages 62–73. ACM Press, November 1993.
- **[But14]** Vitalik Buterin. "Ethereum: A Next-Generation Smart Contract and Decentralized Application Platform," 2014.
- **[But17]** Vitalik Buterin. "The Stateless Client Concept." Ethereum Blog, 2017. https://ethresear.ch/t/the-stateless-client-concept/172.
- **[CF13]** Dario Catalano and Dario Fiore. "Vector Commitments and Their Applications." In Kaoru Kurosawa and Goichiro Hanaoka, editors, PKC 2013, volume 7778 of LNCS, pages 55–72. Springer, Heidelberg, February/March 2013.
- **[Che06]** Jung Hee Cheon. "Security Analysis of the Strong Diffie-Hellman Problem." In Serge Vaudenay, editor, EUROCRYPT 2006, volume 4004 of LNCS, pages 1–11. Springer, Heidelberg, May/June 2006.
- **[CKS09]** Jan Camenisch, Markulf Kohlweiss, and Claudio Soriente. "An Accumulator Based on Bilinear Maps and Efficient Revocation for Anonymous Credentials." In Stanislaw Jarecki and Gene Tsudik, editors, PKC 2009, volume 5443 of LNCS, pages 481–500. Springer, Heidelberg, March 2009.
- **[CFG+20]** Matteo Campanelli, Dario Fiore, Nicola Greco, Dimitris Kolonelos, and Luca Nizzardo. "Vector Commitment Techniques and Applications to Verifiable Decentralized Storage." Cryptology ePrint Archive, Report 2020/149, 2020. https://eprint.iacr.org/2020/149.
- **[CPZ18]** Alexander Chepurnoy, Charalampos Papamanthou, and Yupeng Zhang. "Edrax: A Cryptocurrency with Stateless Transaction Validation." Cryptology ePrint Archive, Report 2018/968, 2018. https://eprint.iacr.org/2018/968.
- **[DGKR18]** Bernardo David, Peter Gazi, Aggelos Kiayias, and Alexander Russell. "Ouroboros Praos: An Adaptively-Secure, Semi-Synchronous Proof-of-Stake Blockchain." In Jesper Buus Nielsen and Vincent Rijmen, editors, EUROCRYPT 2018, Part II, volume 10821 of LNCS, pages 66–98. Springer, Heidelberg, April/May 2018.
- **[DGNW20]** Manu Drijvers, Sergey Gorbunov, Gregory Neven, and Hoeteck Wee. "Pixel: Multi-Signatures for Consensus." In USENIX Security, 2020. https://eprint.iacr.org/2019/514.
- **[DPS19]** Phil Daian, Rafael Pass, and Elaine Shi. "Snow White: Robustly Reconfigurable Consensus and Applications to Provably Secure Proof of Stake." In Ian Goldberg and Tyler Moore, editors, FC 2019, volume 11598 of LNCS, pages 23–41. Springer, Heidelberg, February 2019.
- **[Drake17]** Justin Drake. "History, State, and Asynchronous Accumulators in the Stateless Model." Ethereum Blog, 2017. https://ethresear.ch/t/history-state-and-asynchronous-accumulators-in-the-stateless-model/287.
- **[FKL18]** Georg Fuchsbauer, Eike Kiltz, and Julian Loss. "The Algebraic Group Model and Its Applications." In Hovav Shacham and Alexandra Boldyreva, editors, CRYPTO 2018, Part II, volume 10992 of LNCS, pages 33–62. Springer, Heidelberg, August 2018.
- **[Gab20]** Ariel Gabizon. "Private Communication," April 2020.
- **[GHM+17]** Yossi Gilad, Rotem Hemo, Silvio Micali, Georgios Vlachos, and Nickolai Zeldovich. "Algorand: Scaling Byzantine Agreements for Cryptocurrencies." In Proceedings of the 26th Symposium on Operating Systems Principles, 2017.
- **[GWC19]** Ariel Gabizon, Zachary J. Williamson, and Oana Ciobotaru. "PLONK: Permutations over Lagrange-Bases for Oecumenical Noninteractive Arguments of Knowledge." Cryptology ePrint Archive, Report 2019/953, 2019. https://eprint.iacr.org/2019/953.
- **[KZG10]** Aniket Kate, Gregory M. Zaverucha, and Ian Goldberg. "Constant-Size Commitments to Polynomials and Their Applications." In Masayuki Abe, editor, ASIACRYPT 2010, volume 6477 of LNCS, pages 177–194. Springer, Heidelberg, December 2010.
- **[LM19]** Russell W. F. Lai and Giulio Malavolta. "Subvector Commitments with Application to Succinct Arguments." In Alexandra Boldyreva and Daniele Micciancio, editors, CRYPTO 2019, Part I, volume 11692 of LNCS, pages 530–560. Springer, Heidelberg, August 2019.
- **[LRY16]** Benoît Libert, Somindu C. Ramanna, and Moti Yung. "Functional Commitment Schemes: From Polynomial Commitments to Pairing-Based Accumulators from Simple Assumptions." In Ioannis Chatzigiannakis, Michael Mitzenmacher, Yuval Rabani, and Davide Sangiorgi, editors, ICALP 2016, volume 55 of LIPIcs, pages 30:1–30:14. Schloss Dagstuhl, July 2016.
- **[LY10]** Benoît Libert and Moti Yung. "Concise Mercurial Vector Commitments and Independent Zero-Knowledge Sets with Short Proofs." In Daniele Micciancio, editor, TCC 2010, volume 5978 of LNCS, pages 499–517. Springer, Heidelberg, February 2010.
- **[MBKM19]** Mary Maller, Sean Bowe, Markulf Kohlweiss, and Sarah Meiklejohn. "Sonic: Zero-Knowledge SNARKs from Linear-Size Universal and Updatable Structured Reference Strings." In Lorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz, editors, ACM CCS 2019, pages 2111–2128. ACM Press, November 2019.
- **[Mer88]** Ralph C. Merkle. "A Digital Signature Based on a Conventional Encryption Function." In Carl Pomerance, editor, CRYPTO'87, volume 293 of LNCS, pages 369–378. Springer, Heidelberg, August 1988.
- **[Mil12]** Andrew Miller. "Storing UTXOs in a Balanced Merkle Tree (Zero-Trust Nodes with O(1)-Storage)," 2012. https://bitcointalk.org/index.php?topic=101734.msg1117428.
- **[Nak09]** Satoshi Nakamoto. "Bitcoin: A Peer-to-Peer Electronic Cash System," 2009.
- **[Pip80]** Nicholas Pippenger. "On the Evaluation of Powers and Monomials." SIAM J. Comput., 9(2):230–250, 1980.
- **[PS18]** Rafael Pass and Elaine Shi. "Thunderella: Blockchains with Optimistic Instant Confirmation." In Jesper Buus Nielsen and Vincent Rijmen, editors, EUROCRYPT 2018, Part II, volume 10821 of LNCS, pages 3–33. Springer, Heidelberg, April/May 2018.
- **[RMCI17]** Leonid Reyzin, Dmitry Meshkov, Alexander Chepurnoy, and Sasha Ivanov. "Improving Authenticated Dynamic Dictionaries, with Applications to Cryptocurrencies." In Aggelos Kiayias, editor, FC 2017, volume 10322 of LNCS, pages 376–392. Springer, Heidelberg, April 2017.
- **[SCIPR-Lab20]** SCIPR-Lab. "Zexe," 2020. https://github.com/scipr-lab/zexe.
- **[ST99]** Tomas Sander and Amnon Ta-Shma. "Auditable, Anonymous Electronic Cash." In Michael J. Wiener, editor, CRYPTO'99, volume 1666 of LNCS, pages 555–572. Springer, Heidelberg, August 1999.
- **[Suh19]** Adam Suhl. "Private Communication," 2019. https://github.com/algorand/pointproofs-paramgen/blob/master/consistencycheck.pdf.
- **[Sup20]** Supranational. "blst," 2020. https://github.com/supranational/blst.
- **[TAB+20]** Alin Tomescu, Itai Abraham, Vitalik Buterin, Justin Drake, Dankrad Feist, and Dmitry Khovratovich. "Aggregatable Subvector Commitments for Stateless Cryptocurrencies." Cryptology ePrint Archive, Report 2020/527, 2020. https://eprint.iacr.org/2020/527.
- **[Tak20]** Steve Thakur. "Batching Non-Membership Proofs with Bilinear Accumulators." Cryptology ePrint Archive, Report 2019/1147, 2019. https://eprint.iacr.org/2019/1147.
- **[Tod16]** Peter Todd. "Making UTXO Set Growth Irrelevant with Low-Latency Delayed TXO Commitments," 2016. https://petertodd.org/2016/delayed-txo-commitments.
- **[Wag02]** David Wagner. "A Generalized Birthday Problem." In Moti Yung, editor, CRYPTO 2002, volume 2442 of LNCS, pages 288–303. Springer, Heidelberg, August 2002.
- **[Whi15]** Bill White. "A Theory for Lightweight Cryptocurrency Ledgers." Available at http://qeditas.org/lightcrypto.pdf, 2015.
- **[ZkC19]** ZkCrypto. "Pairing Library," 2019. https://github.com/zkcrypto/pairing.

### Same-Commitment Aggregation from CDH-like Assumption

We sketch a same-commitment aggregation scheme with \( O(N^2) \)-size public parameters from the following CDH-like static assumption: given \( g, g^u, g^v \), it is hard to compute \( g^{uv} \). The efficiency and underlying hardness assumption of this scheme match that of LM-CDH ([LM19, Fig 2]), while additionally supporting aggregation.

#### Scheme

- **Setup**(\(1^\lambda, 1^N\)): Samples \( u_i, v_i \leftarrow \mathbb{Z}_p \) for \( i = 1, \ldots, N \) and outputs:
  \[
  \{g^{u_i}, g^{v_i}\}_{i \in [N]}, \{g^{u_j v_i}\}_{i \neq j}
  \]

- **Commit**(\(m\)): Outputs
  \[
  C := g^{\sum_{i \in [N]} m_i u_i}
  \]

- **UpdateCommit**(\(C, S, m[S], m'[S]\)): Outputs
  \[
  C' := C \cdot g^{\sum_{i \in S} (m'_i - m_i) u_i}
  \]

- **Prove**(\(i, m\)): Outputs
  \[
  \pi_i := g^{\sum_{j \neq i} m_j u_j v_i}
  \]

- **Aggregate**(\(C, S, m[S], \{\pi_i : i \in S\}\)): Outputs
  \[
  \hat{\pi} := \prod_{i \in S} \pi_i
  \]

- **Verify**(\(C, S, m[S], \hat{\pi}\)): Checks that
  \[
  e(C, g^{\sum_{i \in S} v_i}) \stackrel{?}{=} e(\hat{\pi}, g^2) \cdot g^{\sum_{i \in S} m_i u_i v_i}
  \]

#### Comparison with LM-CDH

We do not know how to support aggregation in LM-CDH (which corresponds to the special case \( u_i = v_i \)) [LM19, Fig 2]. The verification equation there is given by:
\[
e(C, g^{\sum_{i \in S} v_i}) \stackrel{?}{=} e(\hat{\pi}, g^2) \cdot g^{\sum_{i \in S} m_i u_i v_i}
\]
An earlier version of [LM19] claims security from CDH, but we found a mistake in the proof of binding, where they incorrectly assume that \( e(C, g^2) \). The mistake has since been fixed.

#### Proof of Correctness

Follows readily from:
\[
e(C, g^{\sum_{i \in S_0} v_i + \sum_{i \in S_1} v_i}) = e(C, g^{\sum_{i \in S} v_i})
\]
and then summing over \( i \in S \).

#### Proof of Binding

Consider the output of a winning adversary:
\[
C, \{S_b, m_b[S_b], \hat{\pi}_b\}_{b=0,1}
\]
along with \( i^* \) such that \( m_0[i^*] \neq m_1[i^*] \). The reduction proceeds as follows: embeds \( u, v \) from the computational problem into \( u_{i^*}, v_{i^*} \), and samples \( u_i, v_i \leftarrow \mathbb{Z}_p \) for \( i \neq i^* \) (formally, the reduction picks a random \( i^* \leftarrow \mathbb{Z}_N \) and aborts if \( m_0[i^*] = m_1[i^*] \)). Simulating the public parameters is straightforward since we know \( g^{u_{i^*}}, g^{v_{i^*}} \).