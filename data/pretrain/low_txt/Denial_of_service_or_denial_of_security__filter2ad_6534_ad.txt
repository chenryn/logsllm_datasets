### Impact of Number of Stages (l) on System Anonymity under Selective DoS

The number of stages (l) significantly influences the system's anonymity in the presence of a selective Denial of Service (DoS) attack. 

**Figure 8(a)** illustrates the effect of varying redundancy (r) on system anonymity under a selective DoS attack. Our findings indicate that increasing redundancy above r = 3 leads to a higher fraction of compromised tunnels. Values of r = 2 or r = 3 provide better anonymity. While higher redundancy makes it more difficult for an attacker to launch a public key modification attack, it also increases the likelihood of the attacker being present in any stage, which is given by \(1 - t^r\). This increased probability provides more opportunities for the attacker to execute a selective DoS attack and achieve their goal of having a presence in every stage, thereby compromising the tunnel through passive conventional attacks. Therefore, increasing redundancy in r does not enhance anonymity, and r = 2 or r = 3 are optimal design choices.

**Figure 8(b)** examines the effect of varying the number of stages (l) on system anonymity with a fixed r = 3. We observe that increasing the number of stages beyond l = 3 is counterproductive. The parameter l presents an interesting trade-off: while increasing l decreases the probability of an attacker being present in every stage, it also provides more opportunities for the attacker to launch a selective DoS attack. For l = 2, the impact of public key modification is significant for small attacker ratios, leading to a higher fraction of compromised tunnels. However, for higher attacker values, l = 3 becomes the optimal choice. Conventional analysis suggests that a higher value of l can improve anonymity at the cost of additional performance overhead, but this is not the case with selective DoS attacks. Our results show that higher values of l do not result in better anonymity, and l = 2 or 3 are optimal design choices.

### Alternative Design Considerations for Salsa

Another potential improvement to the Salsa design would be to use a majority decision rather than a consensus when a conflict arises. In the current Salsa design, a single malicious node returning an incorrect result causes the tunnel to be aborted. An alternative approach is to accept the result returned by the majority of nodes, ignoring the dissenting node. This change would reduce the ability to deny service during tunnel building but would make a public key modification attack easier. Our analysis with r = 3 and l = 2, 3 shows that this method does not outperform the consensus algorithm. However, it may still be useful as it requires fewer attempts to build a successful tunnel, enhancing usability.

### Countermeasures and Related Work

In this section, we briefly discuss potential countermeasures against selective DoS attacks. Although redundancy, as seen in Cashmere and Hydra-Onions, does not effectively address the attack, other measures might be more effective.

As mentioned in Section 2.1.2, fixing the first and last nodes in a tunnel or mix path can help defend against selective DoS attacks. Another straightforward approach is to identify and exclude unreliable nodes from future path building. A challenge here is determining which node is responsible for dropping a packet in an anonymous path. One could design a reputation system that penalizes both the sending and receiving nodes, but this approach fails when the fraction of malicious nodes (t) is 0.5 or less.

Dingledine et al. [7] propose using witness nodes to verify correct communication relaying and a reputation mechanism to avoid unreliable nodes. Dingledine and Syverson [11] further extend these ideas to construct reliable, long-term routes through networks of mixes. They describe a variant of the DoS attack aimed at reducing the reputation of honest nodes, making them less likely to be used.

Reliable anonymous communications have been extensively researched in the context of electronic voting, starting with [25]. For this application, losing anonymously transmitted ballots is unacceptable, and mix systems offering public verifiability of delivery have been developed. Neff [22] and Furukawa and Sako [14] present state-of-the-art techniques in this field. However, public verifiability requires operating all mixes in a synchronous cascade, performing expensive cryptographic operations, and posting intermediate batches on a public bulletin board. These requirements are suitable for voting contexts but are challenging to implement in general anonymous communication systems.

Jakobsson et al. [19] propose Randomized Partial Checking as an alternative for public verifiability. Mixes commit to their outputs and reveal half of the input-output correspondences. This technique can quickly catch and exclude cheaters. Gomułkiewicz et al. [16] show that the revealed information does not give an advantage to the adversary, even for short paths. However, this scheme has risks, such as users checking each mix to see if their messages arrived, potentially revealing their paths. No widely deployed system uses this mechanism, and low-latency networks would not be secure if the necessary traces were publicly available.

### Conclusion

We have demonstrated that denial of service attacks significantly reduce anonymity in anonymous communication systems, highlighting the link between availability and anonymity. Reliability must be assured against adversaries, not just random failures.

Our results have a profound impact on the theory of mixes and deployed systems like Mixminion [6] and Tor [9]. Traditional architectures, which offer no protection against DoS attacks, are vulnerable to complete compromise if the network contains a majority of dishonest nodes. Previous work assumed that a single honest mix on the path was sufficient for security [3], but we show that routes with few honest nodes will be subject to DoS, and only fully honest or fully compromised paths will survive. This insight, though embryonic in [11], was not fully understood until now.

Future mix system designs and deployments must include mechanisms to prevent DoS-based attacks, either by detecting maliciously unreliable nodes or ensuring an honest majority. Designs that focus solely on reliability, such as Cashmere and Hydra-Onions, address symptoms rather than the root cause, potentially worsening system anonymity under DoS attacks.

Our work underscores the importance of designing and evaluating mechanisms for reliability and DoS prevention using criteria from security engineering, not just network engineering. This is especially critical for future peer-to-peer-based designs, as the added complexity can provide more opportunities for attackers to launch DoS attacks.

### Acknowledgments

We thank Claudia Diaz and Emilia Käser for their help and proofreading, Paul Syverson for his comments on guard nodes, the anonymous reviewers for their suggestions, and our shepherd, Roger Dingledine, for his guidance in finalizing the paper.

### References

[1] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and D. Sicker. Low-resource routing attacks against Tor. In ACM Workshop on Privacy in Electronic Society, Alexandria, VA, Oct. 2007. ACM Press.
[2] S. M. Bellovin and D. A. Wagner, editors. IEEE Symposium on Security and Privacy, Berkeley, CA, May 2003. IEEE Computer Society.
[3] O. Berthold, A. Pfitzmann, and R. Standtke. The disadvantages of free MIX routes and how to overcome them. In Federrath [13], pages 30–45.
[4] D. Chaum. Untraceable electronic mail, return addresses, and digital pseudonyms. Communications of the ACM, 24(2):84–90, February 1981.
[5] D. Daly, D. D. Deavours, J. M. Doyle, P. G. Webster, and W. H. Sanders. Möbius: An extensible tool for performance and dependability modeling. In B. R. Haverkort, H. C. Bohnenkamp, and C. U. Smith, editors, Computer Performance Evaluation: Modelling Techniques and Tools, volume 1786 of Lecture Notes in Computer Science, pages 332–336, Schaumburg, IL, Mar. 2000. Springer.
[6] G. Danezis, R. Dingledine, and N. Mathewson. Mixminion: Design of a Type III Anonymous Remailer Protocol. In Bellovin and Wagner [2], pages 2–15.
[7] R. Dingledine, M. J. Freedman, D. Hopwood, and D. Molnar. A reputation system to increase MIX-net reliability. In I. S. Moskowitz, editor, Information Hiding, volume 2137 of Lecture Notes in Computer Science, pages 126–141, Pittsburgh, PA, 2001. Springer Berlin / Heidelberg.
[8] R. Dingledine and N. Mathewson. Anonymity loves company: Usability and the network effect. In R. Anderson, editor, Fifth Workshop on the Economics of Information Security (WEIS), Cambridge, UK, June 2006.
[9] R. Dingledine, N. Mathewson, and P. F. Syverson. Tor: The Second-Generation Onion Router. In The 13th USENIX Security Symposium, pages 303–320, San Diego, CA, August 2004. USENIX Association.
[10] R. Dingledine, V. Shmatikov, and P. F. Syverson. Synchronous batching: From cascades to free routes. In D. Martin and A. Serjantov, editors, 4th Privacy Enhancing Technologies Workshop (PET), volume 3424 of Lecture Notes in Computer Science, pages 186–206, Toronto, Canada, May 2004. Springer Berlin / Heidelberg.
[11] R. Dingledine and P. F. Syverson. Reliable MIX cascade networks through reputation. In M. Blaze, editor, Financial Cryptography, volume 2357 of Lecture Notes in Computer Science, pages 253–268, Southampton, Bermuda, 2003. Springer Berlin / Heidelberg.
[12] J. Douceur. The Sybil Attack. In P. Druschel, M. F. Kaashoek, and A. I. T. Rowstron, editors, International Workshop on Peer-to-Peer Systems (IPTPS), volume 2429 of Lecture Notes in Computer Science, pages 251–260, Cambridge, MA, Mar. 2002. Springer Berlin / Heidelberg.
[13] H. Federrath, editor. Designing Privacy Enhancing Technologies: Workshop on Design Issues in Anonymity and Unobservability, volume 2009 of Lecture Notes in Computer Science. Springer Berlin / Heidelberg, July 2000.
[14] J. Furukawa and K. Sako. An efficient scheme for proving a shuffle. In J. Kilian, editor, Advances in Cryptology (CRYPTO), volume 2139 of Lecture Notes in Computer Science, pages 368–387, Santa Barbara, CA, USA, 19-23 August 2001. Springer Berlin / Heidelberg.
[15] P. Golle and A. Juels. Parallel mixing. In ACM Conference on Computer and Communications Security, pages 220–226, Washington, DC, Oct. 2005. ACM Press.
[16] M. Gomułkiewicz, M. Klonowski, and M. Kutyłowski. Provable unlinkability against traffic analysis already after O(log(n)) steps! In K. Zhang and Y. Zheng, editors, Information Security Conference, volume 3225 of Lecture Notes in Computer Science, pages 354–366, Palo Alto, CA, Sept. 2004. Springer Berlin / Heidelberg.
[17] C. Gülçü and G. Tsudik. Mixing E-mail with Babel. In Network and Distributed Security Symposium (NDSS), pages 2–16, San Diego, CA, February 1996. Internet Society.
[18] J. Iwanik, M. Klonowski, and M. Kutyłowski. DUO-Onions and Hydra-Onions—failure and adversary resistant onion protocols. In IFIP TC-6 TC-11 Conference on Communications and Multimedia Security, pages 1–15, Windermere, United Kingdom, September 2004. Springer Boston.
[19] M. Jakobsson, A. Juels, and R. L. Rivest. Making mix nets robust for electronic voting by randomized partial checking. In D. Boneh, editor, USENIX Security Symposium, pages 339–353, San Francisco, CA, Aug. 2002. USENIX Association.
[20] U. Möller, L. Cottrell, P. Palfrader, and L. Sassaman. Mixmaster Protocol — Version 2. Draft, available at: http://www.abditum.com/mixmaster-spec.txt, July 2003.
[21] A. Nambiar and M. Wright. Salsa: a structured approach to large-scale anonymity. In 13th ACM conference on Computer and Communications Security, pages 17–26, Alexandria, VA, Oct. 2006. ACM Press.
[22] C. A. Neff. A verifiable secret shuffle and its application to e-voting. In P. Samarati, editor, 8th ACM conference on Computer and Communications Security, pages 116–125, Philadelphia, PA, Oct. 2001. ACM Press.
[23] L. Øverlier and P. Syverson. Valet services: Improving hidden servers with a personal touch. In Sixth Workshop on Privacy Enhancing Technologies (PET), volume 4258 of Lecture Notes in Computer Science, pages 223–244, Cambridge, UK, June 2006. Springer Berlin / Heidelberg.
[24] P. Palfrader. Number of Running Tor Routers. http://www.noreply.org/tor-running-routers/, 2007.
[25] C. Park, K. Itoh, and K. Kurosawa. Efficient anonymous channel and all/nothing election scheme. In T. Helleseth, editor, Advances in Cryptology (EUROCRYPT), volume 765 of Lecture Notes in Computer Science, pages 248–259, Lofthus, Norway, 23-27 May 1993. Springer Berlin / Heidelberg.
[26] A. Rowstron and P. Druschel. Pastry: Scalable, distributed object location and routing for large-scale peer-to-peer systems. In IFIP/ACM International Conference on Distributed Systems Platforms (Middleware), pages 329–350, Nov. 2001.
[27] P. Syverson, G. Tsudik, M. Reed, and C. Landwehr. Towards an analysis of onion routing security. In Federrath [13], pages 96–114.
[28] M. Wright, M. Adler, B. N. Levine, and C. Shields. An analysis of the degradation of anonymous protocols. In Network and Distributed Security Symposium (NDSS). Internet Society, February 2002.
[29] M. Wright, M. Adler, B. N. Levine, and C. Shields. Defending anonymous communication against passive logging attacks. In Bellovin and Wagner [2].
[30] L. Zhuang, F. Zhou, B. Y. Zhao, and A. Rowstron. Cashmere: Resilient anonymous routing. In USENIX Symposium on Networked Systems Design and Implementation (NSDI), Boston, MA, May 2005.