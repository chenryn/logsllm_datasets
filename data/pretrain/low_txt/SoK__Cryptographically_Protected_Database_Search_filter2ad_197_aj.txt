以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

1. D. S. Roche, D. Apon, S. G. Choi, and A. Yerukhimovich, “POPE: Partial Order Preserving Encoding,” in *ACM CCS 2016*. ACM Press, 2016, pp. 1131–1142.
2. F. Baldimtsi and O. Ohrimenko, “Sorting and Searching Behind the Curtain,” in *Financial Cryptography and Data Security (FC 2015)*, ser. LNCS, R. Böhme and T. Okamoto, Eds., vol. 8975. Springer, Heidelberg, Jan. 2015, pp. 127–146.
3. M. Strizhov and I. Ray, “Multi-Keyword Similarity Search over Encrypted Cloud Data,” *Cryptology ePrint Archive*, Report 2015/137, 2015. [Online]. Available: <http://eprint.iacr.org/2015/137>
4. E. Shen, E. Shi, and B. Waters, “Predicate Privacy in Encryption Systems,” in *Theory of Cryptography Conference (TCC 2009)*, ser. LNCS, O. Reingold, Ed., vol. 5444. Springer, Heidelberg, Mar. 2009, pp. 457–473.
5. C. Bösch, Q. Tang, P. H. Hartel, and W. Jonker, “Selective Document Retrieval from Encrypted Database,” in *Information Security (ISC 2012)*, ser. LNCS, D. Gollmann and F. C. Freiling, Eds., vol. 7483. Springer, Heidelberg, Sep. 2012, pp. 224–241.
6. X. Meng, S. Kamara, K. Nissim, and G. Kollios, “GRECS: Graph Encryption for Approximate Shortest Distance Queries,” in *ACM CCS 2015*, I. Ray, N. Li, and C. Kruegel, Eds. ACM Press, Oct. 2015, pp. 504–517.
7. O. Goldreich and R. Ostrovsky, “Software Protection and Simulation on Oblivious RAMs,” *Journal of the ACM (JACM)*, vol. 43, no. 3, pp. 431–473, 1996.
8. E. Stefanov, M. van Dijk, E. Shi, C. W. Fletcher, L. Ren, X. Yu, and S. Devadas, “Path ORAM: An Extremely Simple Oblivious RAM Protocol,” in *ACM CCS 2013*, A.-R. Sadeghi, V. D. Gligor, and M. Yung, Eds. ACM Press, Nov. 2013, pp. 299–310.
9. M. Naveed, “The Fallacy of Composition of Oblivious RAM and Searchable Encryption,” *Cryptology ePrint Archive*, Report 2015/668, 2015. [Online]. Available: <http://eprint.iacr.org/2015/668>
10. D. S. Roche, A. J. Aviv, and S. G. Choi, “A Practical Oblivious Map Data Structure with Secure Deletion and History Independence,” in *IEEE Symposium on Security and Privacy 2016*. IEEE Computer Society Press, 2016, pp. 178–197.
11. S. Garg, P. Mohassel, and C. Papamanthou, “TWORAM: Efficient Oblivious RAM in Two Rounds with Applications to Searchable Encryption,” ser. LNCS. Springer, Heidelberg, Aug. 2016, pp. 563–592.
12. S. Lu and R. Ostrovsky, “How to Garble RAM Programs,” in *EUROCRYPT 2013*, ser. LNCS, T. Johansson and P. Q. Nguyen, Eds., vol. 7881. Springer, Heidelberg, May 2013, pp. 719–734.
13. T. Moataz and E.-O. Blass, “Oblivious Substring Search with Updates,” *Cryptology ePrint Archive*, Report 2015/722, 2015. [Online]. Available: <http://eprint.iacr.org/2015/722>
14. S. Faber, S. Jarecki, S. Kentros, and B. Wei, “Three-Party ORAM for Secure Computation,” in *ASIACRYPT 2015, Part I*, ser. LNCS, T. Iwata and J. H. Cheon, Eds., vol. 9452. Springer, Heidelberg, Nov. / Dec. 2015, pp. 360–385.
15. G. Kellaris, G. Kollios, K. Nissim, and A. O’Neill, “Generic Attacks on Secure Outsourced Databases,” in *Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS 2016)*. New York, NY, USA: ACM, 2016, pp. 1329–1340. [Online]. Available: <http://doi.acm.org/10.1145/2976749.2978386>
16. E. Chen, I. Gomez, B. Saavedra, and J. Yucra, “Cocoon: Encrypted Substring Search,” *MIT Course 6.857*, 2016. [Online]. Available: <https://courses.csail.mit.edu/6.857/2016/files/29.pdf>, Accessed: 2016-07-15.
17. Y. Zhang, J. Katz, and C. Papamanthou, “All Your Queries Belong to Us: The Power of File-Injection Attacks on Searchable Encryption,” in *25th USENIX Security Symposium (USENIX Security 2016)*, Austin, TX, USA, Aug. 10-12, 2016, pp. 707–720. [Online]. Available: <https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/zhang>
18. D. Cash, P. Grubbs, J. Perry, and T. Ristenpart, “Leakage-Abuse Attacks Against Searchable Encryption,” in *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS 2015)*, Denver, CO, USA, Oct. 12-16, 2015, pp. 668–679. [Online]. Available: <http://doi.acm.org/10.1145/2810103.2813700>
19. D. Pouliot and C. V. Wright, “The Shadow Nemesis: Inference Attacks on Efficiently Deployable, Efficiently Searchable Encryption,” in *Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS 2015)*, Denver, CO, USA, Oct. 12-16, 2015, pp. 644–655. [Online]. Available: <http://doi.acm.org/10.1145/2810103.2813651>
20. M. Naveed, S. Kamara, and C. V. Wright, “Inference Attacks on Property-Preserving Encrypted Databases,” in *23rd ACM Conference on Computer and Communications Security (CCS 2016)*, Vienna, Austria, Oct. 24-28, 2016.
21. P. Grubbs, K. Sekniqi, V. Bindschaedler, M. Naveed, and T. Ristenpart, “Leakage-Abuse Attacks Against Order-Revealing Encryption,” *Cryptology ePrint Archive*, Report 2016/895, 2016. [Online]. Available: <http://eprint.iacr.org/2016/895>
22. M. S. Islam, M. Kuzu, and M. Kantarcioglu, “Access Pattern Disclosure on Searchable Encryption: Ramification, Attack, and Mitigation,” in *19th Annual Network and Distributed System Security Symposium (NDSS 2012)*, San Diego, CA, USA, Feb. 5-8, 2012.
23. A. Boldyreva and N. Chenette, “Efficient Fuzzy Search on Encrypted Data,” in *Fast Software Encryption (FSE 2014)*, ser. LNCS, C. Cid and C. Rechberger, Eds., vol. 8540. Springer, Heidelberg, Mar. 2015, pp. 613–633.
24. G. D. Crescenzo and A. Ghosh, “Privacy-Preserving Range Queries from Keyword Queries,” in *Data and Applications Security and Privacy XXIX*, ser. LNCS, vol. 9149. Springer, 2015, pp. 35–50.
25. M. F. Porter, “An Algorithm for Suffix Stripping,” *Program*, vol. 14, no. 3, pp. 130–137, 1980.
26. P. Willett, “The Porter Stemming Algorithm: Then and Now,” *Program*, vol. 40, no. 3, pp. 219–223, 2006.
27. J. Li, Q. Wang, C. Wang, N. Cao, K. Ren, and W. Lou, “Fuzzy Keyword Search over Encrypted Data in Cloud Computing,” in *INFOCOM 2010*, 29th IEEE International Conference on Computer Communications, Joint Conference of the IEEE Computer and Communications Societies, San Diego, CA, USA, Mar. 15-19, 2010, pp. 441–445. [Online]. Available: <http://dx.doi.org/10.1109/INFCOM.2010.5462196>
28. P. Indyk and R. Motwani, “Approximate Nearest Neighbors: Towards Removing the Curse of Dimensionality,” in *Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing (STOC 1998)*. ACM, 1998, pp. 604–613.
29. A. Gionis, P. Indyk, R. Motwani et al., “Similarity Search in High Dimensions via Hashing,” in *VLDB 1999*, vol. 99, no. 6, pp. 518–529.
30. M. Kuzu, M. S. Islam, and M. Kantarcioglu, “Efficient Similarity Search over Encrypted Data,” in *IEEE 28th International Conference on Data Engineering (ICDE 2012)*, 2012, pp. 1156–1167. [Online]. Available: <http://dx.doi.org/10.1109/ICDE.2012.23>
31. H. Park, B. H. Kim, D. H. Lee, Y. D. Chung, and J. Zhan, “Secure Similarity Search,” in *2007 IEEE International Conference on Granular Computing (GrC 2007)*, San Jose, CA, USA, Nov. 2-4, 2007, p. 598. [Online]. Available: <http://dx.doi.org/10.1109/GRC.2007.140>
32. M. Adjedj, J. Bringer, H. Chabanne, and B. Kindarji, “Biometric Identification over Encrypted Data Made Feasible,” in *Information Systems Security (ICISS 2009)*, 5th International Conference, Kolkata, India, Dec. 14-18, 2009, Proceedings, 2009, pp. 86–100. [Online]. Available: <http://dx.doi.org/10.1007/978-3-642-10772-6_8>
33. J. Bringer, H. Chabanne, and B. Kindarji, “Error-Tolerant Searchable Encryption,” in *Proceedings of IEEE International Conference on Communications (ICC 2009)*, Dresden, Germany, June 14-18, 2009, pp. 1–6. [Online]. Available: <http://dx.doi.org/10.1109/ICC.2009.5199004>
34. C. Wang, K. Ren, S. Yu, and K. M. R. Urs, “Achieving Usable and Privacy-Assured Similarity Search over Outsourced Cloud Data,” in *Proceedings of the IEEE INFOCOM 2012*, Orlando, FL, USA, Mar. 25-30, 2012, pp. 451–459. [Online]. Available: <http://dx.doi.org/10.1109/INFCOM.2012.6195784>
35. I. Demertzis, S. Papadopoulos, O. Papapetrou, A. Deligiannakis, and M. Garofalakis, “Practical Private Range Search Revisited,” in *ACM SIGMOD/PODS Conference 2016*.
36. I. Damgard, M. Geisler, and M. Kroigard, “Homomorphic Encryption and Secure Comparison,” *International Journal of Applied Cryptography*, vol. 1, no. 1, pp. 22–31, 2008.
37. F. Kerschbaum, D. Biswas, and S. de Hoogh, “Performance Comparison of Secure Comparison Protocols,” in *Database and Expert Systems Application (DEXA 2009)*, 20th International Workshop on. IEEE, 2009, pp. 133–136.
38. S. Han and W. K. Ng, “Privacy-Preserving Linear Fisher Discriminant Analysis,” in *Pacific-Asia Conference on Knowledge Discovery and Data Mining (PAKDD 2008)*, Springer, 2008, pp. 136–147.
39. X. S. Wang, K. Nayak, C. Liu, T.-H. H. Chan, E. Shi, E. Stefanov, and Y. Huang, “Oblivious Data Structures,” in *ACM CCS 2014*, G.-J. Ahn, M. Yung, and N. Li, Eds. ACM Press, Nov. 2014, pp. 215–226.
40. R. Elmasri and S. Navathe, *Fundamentals of Database Systems*. Boston, MA, USA: Addison-Wesley, 2011.
41. E. Bertino and R. Sandhu, “Database Security—Concepts, Approaches, and Challenges,” *IEEE Transactions on Dependable and Secure Computing*, vol. 2, no. 1, 2005.
42. A. Fuchs, “Accumulo—Extensions to Google’s Bigtable Design,” National Security Agency, Tech. Rep, 2012.
43. IARPA, “Broad Agency Announcement (BAA) for Research and Development of Security and Privacy Assurance (SPAR) Program,” IARPA-BAA-11-01, Feb. 2011. [Online]. Available: <https://www.fbo.gov/notices/announcement/c55e38dbde30cb668f687897d8f01e69>
44. A. Hamlin and J. Herzog, “A Test-Suite Generator for Database Systems,” in *2014 IEEE High Performance Extreme Computing Conference (HPEC 2014)*, 2014, pp. 1–6.
45. M. Varia, B. Price, N. Hwang, A. Hamlin, J. Herzog, J. Poland, M. Reschly, S. Yakoubov, and R. K. Cunningham, “Automated Assessment of Secure Search Systems,” *Operating Systems Review*, vol. 49, no. 1, pp. 22–30, 2015.
46. M. Varia, S. Yakoubov, and Y. Yang, “HEtest: A Homomorphic Encryption Testing Framework,” in *Financial Cryptography and Data Security (FC 2015) Workshops*, ser. LNCS, M. Brenner, N. Christin, B. Johnson, and K. Rohloff, Eds., vol. 8976. Springer, Heidelberg, Jan. 2015, pp. 213–230.
47. J. Kepner, V. Gadepally, P. Michaleas, N. Schear, M. Varia, A. Yerukhimovich, and R. K. Cunningham, “Computing on Masked Data: A High-Performance Method for Improving Big Data Veracity,” in *2014 IEEE High Performance Extreme Computing Conference (HPEC 2014)*. IEEE, 2014, pp. 1–6.
48. V. Gadepally, B. Hancock, B. Kaiser, J. Kepner, P. Michaleas, M. Varia, and A. Yerukhimovich, “Computing on Masked Data to Improve the Security of Big Data,” in *IEEE International Symposium on Technologies for Homeland Security (HST 2015)*. IEEE, 2015, pp. 1–6.
49. B. Schneier, “Data Is a Toxic Asset,” 2016. [Online]. Available: <https://www.schneier.com/essays/archives/2016/03/data_is_a_toxic_asset.html>
50. D. Blumenthal, “Launching HITECH,” *New England Journal of Medicine*, vol. 362, no. 5, pp. 382–385, 2010.
51. “The Office of the National Coordinator for Health Information Technology,” *Guide to Privacy and Security of Electronic Health Information*, 2015. [Online]. Available: <https://www.healthit.gov/sites/default/files/pdf/privacy/privacy-and-security-guide.pdf>
52. S. Barnum, “Standardizing Cyber Threat Intelligence Information with the Structured Threat Information eXpression (STIX),” MITRE Corporation, vol. 11, 2012.
53. “Amazon Web Services (AWS) - Cloud Computing Services.” [Online]. Available: <https://aws.amazon.com/>

### 附录 A：子字符串和通配符查询组合器

1. **固定长度子字符串使用关键词相等** [22]：
   通过在初始化时将所有长度为 \( \kappa \) 的子字符串（\(\kappa\)-grams）插入到一个可进行关键词搜索的索引中，可以支持固定长度 \( \kappa \) 的子字符串搜索。对于最大长度为 \( \alpha \) 的字段，此技术需要在插入时添加 \( \alpha - \kappa \) 个关键词，并在查询执行时进行一次关键词搜索。

2. **短子字符串使用范围** [22]：
   通过将 \(\kappa\)-grams 插入到范围索引中，可以支持长度最多为 \( \kappa \) 的子字符串查询。例如，可以通过在长度为 3 的子字符串索引中搜索范围 [hia, hiz] 来查询两字符字符串 "hi"。

3. **使用合取支持锚定子字符串** [18]：
   现在考虑相反的情况：支持长度至少为 \( \kappa \) 的长子字符串搜索，存储开销随着 \( \kappa \) 的增加而减少。我们从“锚定”搜索开始，其中子字符串出现在字符串的开头或结尾。
   例如，假设我们要支持记录 \( a = "teststring" \) 的子字符串搜索。在合取可搜索索引中，我们插入字符串的 \(\kappa\)-grams 及其位置 (1, "tes"), (2, "est"), ..., (8, "ing")。现在要搜索包含 "test" 的所有记录，客户端会请求匹配 (1, "tes") 和 (2, "est") 的所有记录。从字符串末尾开始搜索可以通过负索引实现；在上述示例中使用 (-1, "ing"), (-2, "rin"), (-3, "tri"), ..., (-8, "tes")。

4. **使用析取合取支持非锚定子字符串** [18]：
   从上述技术中移除锚定限制需要使用析取，因为子字符串的起始位置未知。为了找到子字符串 "test"，查询者必须搜索任何起始位置 \( i \) 的 (i, "tes") 和 (i+1, "est") 的合取。公式中的项数取决于最大字符串长度。

5. **使用合取支持单字符通配符** [18]：
   上述技术还支持单字符通配符查询。例如，要搜索 "tes_str"，客户端会请求 (1, "tes") 和 (5, "str") 的合取。注意，通配符两侧需要有字母的 \(\kappa\)-gram 长度。该技术可以扩展到非锚定查询，并且支持多个字符通配符，只需递增预期的 \(\kappa\)-grams 位置。

### 附录 B：试点研究程序

我们安装并配置了多个受保护的搜索系统。对于每个系统，我们导入了十百万条真实应用程序数据记录，并在十天内与十个用户进行了会话。我们的机构审查委员会审查了我们的协议和问卷，确定它们代表了最小的风险，并批准了该程序。软件驻留在亚马逊网络服务 (AWS) [163] 网络中。数据来自一个真实的应用程序源，并被转换成一个包含一百多列和十百万条记录的静态表。

参与者背景包括技术和非技术领域，六名男性和四名女性。所有参与者都有通过数据库后端呈现结果的 Web 界面交互经验。参与者知道他们在使用不同的系统，但系统仅用一个字母标识。参与者没有获得有关技术功能的任何信息。

每位参与者参加了三种类型的会话，每种会话持续 30 分钟：
1. 网页界面培训；
2. 与每种技术的脚本化互动；
3. 与每种技术的探索性会话。

用户通过一个 Web 应用程序与安全数据库技术进行交互，该应用程序包括一个可视化查询构建器，用于查询底层的安全数据库。参与者通过可视化查询构建器创建查询，然后 Web 服务器将查询提交给受保护的搜索系统。

---

希望这些优化使您的文本更加清晰、连贯和专业。如果还有其他部分需要进一步修改，请告诉我！