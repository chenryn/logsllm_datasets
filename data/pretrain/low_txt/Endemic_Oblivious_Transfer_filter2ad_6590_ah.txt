### References

- **[SAB+17]** Peter Schwabe, Roberto Avanzi, Joppe Bos, Leo Ducas, Eike Kiltz, Tancrede Lepoint, Vadim Lyubashevsky, John M. Schanck, Gregor Seiler, and Damien Stehlé. **CRYSTALS – kyber: a CCA-secure module-lattice-based KEM**. *Cryptology ePrint Archive, Report 2017/634*, 2017. [Link](http://eprint.iacr.org/2017/634)

- **[Bea96]** Donald Beaver. **Correlated pseudorandomness and the complexity of private computations**. In *28th ACM STOC*, pages 479–488. ACM Press, May 1996.

- **[BL18]** Fabrice Benhamouda and Huijia Lin. **k-round multiparty computation from k-round oblivious transfer via garbled interactive circuits**. In Jesper Buus Nielsen and Vincent Rijmen (eds.), *EUROCRYPT 2018, Part II*, volume 10821 of LNCS, pages 500–532. Springer, Heidelberg, April/May 2018.

- **[BM90]** Mihir Bellare and Silvio Micali. **Non-interactive oblivious transfer and applications**. In Gilles Brassard (ed.), *CRYPTO’89*, volume 435 of LNCS, pages 547–557. Springer, Heidelberg, August 1990.

- **[BPRS17]** Megha Byali, Arpita Patra, Divya Ravi, and Pratik Sarkar. **Fast and universally-composable oblivious transfer and commitment scheme with adaptive security**. *Cryptology ePrint Archive, Report 2017/1165*, 2017. [Link](https://eprint.iacr.org/2017/1165)

- **[BR93]** Mihir Bellare and Phillip Rogaway. **Random oracles are practical: A paradigm for designing efficient protocols**. In V. Ashby (ed.), *ACM CCS 93*, pages 62–73. ACM Press, November 1993.

- **[BRS02]** John Black, Phillip Rogaway, and Thomas Shrimpton. **Black-box analysis of the block-cipher-based hash-function constructions from PGV**. In Moti Yung (ed.), *CRYPTO 2002*, volume 2442 of LNCS, pages 320–335. Springer, Heidelberg, August 2002.

- **[CCL15]** Ran Canetti, Asaf Cohen, and Yehuda Lindell. **A simpler variant of universally composable security for standard multiparty computation**. In Rosario Gennaro and Matthew J. B. Robshaw (eds.), *CRYPTO 2015, Part II*, volume 9216 of LNCS, pages 3–22. Springer, Heidelberg, August 2015.

- **[CGH98]** Ran Canetti, Oded Goldreich, and Shai Halevi. **The random oracle methodology, revisited (preliminary version)**. In *30th ACM STOC*, pages 209–218. ACM Press, May 1998.

- **[CO]** Tung Chou and Claudio Orlandi. **The Simplest Oblivious Transfer Protocol**. [Link](http://users-cs.au.dk/orlandi/simpleOT/)

- **[CO15]** Tung Chou and Claudio Orlandi. **The simplest protocol for oblivious transfer**. In Kristin E. Lauter and Francisco Rodríguez-Henríquez (eds.), *LATINCRYPT 2015*, volume 9230 of LNCS, pages 40–58. Springer, Heidelberg, August 2015.

- **[CvT95]** Claude Crépeau, Jeroen van de Graaf, and Alain Tapp. **Committed oblivious transfer and private multi-party computation**. In Don Coppersmith (ed.), *CRYPTO’95*, volume 963 of LNCS, pages 110–123. Springer, Heidelberg, August 1995.

- **[DH76]** Whitfield Diffie and Martin E. Hellman. **New directions in cryptography**. *IEEE Transactions on Information Theory*, 22(6):644–654, 1976.

- **[DKLs18]** Jack Doerner, Yashvanth Kondi, Eysa Lee, and abhi shelat. **Secure two-party threshold ECDSA from ECDSA assumptions**. In *2018 IEEE Symposium on Security and Privacy*, pages 980–997. IEEE Computer Society Press, May 2018.

- **[EGL82]** Shimon Even, Oded Goldreich, and Abraham Lempel. **A randomized protocol for signing contracts**. In David Chaum, Ronald L. Rivest, and Alan T. Sherman (eds.), *CRYPTO’82*, pages 205–210. Plenum Press, New York, USA, 1982.

- **[FMV18]** Daniele Friolo, Daniel Masny, and Daniele Venturi. **Secure multi-party computation from strongly uniform key agreement**. *Cryptology ePrint Archive, Report 2018/473*, 2018. [Link](https://eprint.iacr.org/2018/473)

- **[FS87]** Amos Fiat and Adi Shamir. **How to prove yourself: Practical solutions to identification and signature problems**. In Andrew M. Odlyzko (ed.), *CRYPTO’86*, volume 263 of LNCS, pages 186–194. Springer, Heidelberg, August 1987.

- **[GIS18]** Sanjam Garg, Yuval Ishai, and Akshayaram Srinivasan. **Two-round MPC: Information-theoretic and black-box**. In Amos Beimel and Stefan Dziembowski (eds.), *TCC 2018, Part I*, volume 11239 of LNCS, pages 123–151. Springer, Heidelberg, November 2018.

- **[GKM+00]** Yael Gertner, Sampath Kannan, Tal Malkin, Omer Reingold, and Mahesh Viswanathan. **The relationship between public key encryption and oblivious transfer**. In *41st FOCS*, pages 325–335. IEEE Computer Society Press, November 2000.

- **[GKWY19]** Chun Guo, Jonathan Katz, Xiao Wang, and Yu Yu. **Efficient and secure multiparty computation from fixed-key block ciphers**. *IACR Cryptology ePrint Archive, 2019:74*, 2019.

- **[GS18]** Sanjam Garg and Akshayaram Srinivasan. **Two-round multiparty secure computation from minimal assumptions**. In Jesper Buus Nielsen and Vincent Rijmen (eds.), *EUROCRYPT 2018, Part II*, volume 10821 of LNCS, pages 468–499. Springer, Heidelberg, April/May 2018.

- **[HL17]** Eduard Hauck and Julian Loss. **Efficient and universally composable protocols for oblivious transfer from the CDH assumption**. *Cryptology ePrint Archive, Report 2017/1011*, 2017. [Link](https://eprint.iacr.org/2017/1011)

- **[IKNP03]** Yuval Ishai, Joe Kilian, Kobbi Nissim, and Erez Petrank. **Extending oblivious transfers efficiently**. In Dan Boneh (ed.), *CRYPTO 2003*, volume 2729 of LNCS, pages 145–161. Springer, Heidelberg, August 2003.

- **[IKO+11]** Yuval Ishai, Eyal Kushilevitz, Rafail Ostrovsky, Manoj Prabhakaran, and Amit Sahai. **Efficient non-interactive secure computation**. In Kenneth G. Paterson (ed.), *EUROCRYPT 2011*, volume 6632 of LNCS, pages 406–425. Springer, Heidelberg, May 2011.

- **[IPS08]** Yuval Ishai, Manoj Prabhakaran, and Amit Sahai. **Founding cryptography on oblivious transfer - efficiently**. In David Wagner (ed.), *CRYPTO 2008*, volume 5157 of LNCS, pages 572–591. Springer, Heidelberg, August 2008.

- **[Kel]** Marcel Keller, Emmanuela Orsini, and Peter Scholl. **APRICOT OT Extension**. [Link](https://github.com/bristolcrypto/apricot)

- **[Kil88]** Joe Kilian. **Founding cryptography on oblivious transfer**. In *20th ACM STOC*, pages 20–31. ACM Press, May 1988.

- **[Kil92]** Joe Kilian. **A note on efficient zero-knowledge proofs and arguments (extended abstract)**. In *24th ACM STOC*, pages 723–732. ACM Press, May 1992.

- **[KOS15]** Marcel Keller, Emmanuela Orsini, and Peter Scholl. **Actively secure OT extension with optimal overhead**. In Rosario Gennaro and Matthew J. B. Robshaw (eds.), *CRYPTO 2015, Part I*, volume 9215 of LNCS, pages 724–741. Springer, Heidelberg, August 2015.

- **[NP01]** Moni Naor and Benny Pinkas. **Efficient oblivious transfer protocols**. In S. Rao Kosaraju (ed.), *12th SODA*, pages 448–457. ACM-SIAM, January 2001.

- **[OOS17]** Michele Orrù, Emmanuela Orsini, and Peter Scholl. **Actively secure 1-out-of-N OT extension with application to private set intersection**. In Helena Handschuh (ed.), *CT-RSA 2017*, volume 10159 of LNCS, pages 381–396. Springer, Heidelberg, February 2017.

- **[ORS15]** Rafail Ostrovsky, Silas Richelson, and Alessandra Scafuro. **Round-optimal black-box two-party computation**. In Rosario Gennaro and Matthew J. B. Robshaw (eds.), *CRYPTO 2015, Part II*, volume 9216 of LNCS, pages 339–358. Springer, Heidelberg, August 2015.

- **[PVW08]** Chris Peikert, Vinod Vaikuntanathan, and Brent Waters. **A framework for efficient and composable oblivious transfer**. In David Wagner (ed.), *CRYPTO 2008*, volume 5157 of LNCS, pages 554–571. Springer, Heidelberg, August 2008.

- **[Rab81]** Michael O. Rabin. **How to exchange secrets by oblivious transfer**. Technical report, Harvard University, 1981.

- **[Reg05]** Oded Regev. **On lattices, learning with errors, random linear codes, and cryptography**. In Harold N. Gabow and Ronald Fagin (eds.), *37th ACM STOC*, pages 84–93. ACM Press, May 2005.

- **[Rin]** Peter Rindal. **libOTe: an efficient, portable, and easy to use Oblivious Transfer Library**. [Link](https://github.com/osu-crypto/libOTe)

- **[RR17a]** Peter Rindal and Mike Rosulek. **Improved private set intersection against malicious adversaries**. In Jean-Sébastien Coron and Jesper Buus Nielsen (eds.), *EUROCRYPT 2017, Part I*, volume 10210 of LNCS, pages 235–259. Springer, Heidelberg, April/May 2017.

- **[RR17b]** Peter Rindal and Mike Rosulek. **Malicious-secure private set intersection via dual execution**. In Bhavani M. Thuraisingham, David Evans, Tal Malkin, and Dongyan Xu (eds.), *ACM CCS 17*, pages 1229–1242. ACM Press, October/November 2017.

- **[SAB+17]** Peter Schwabe, Roberto Avanzi, Joppe Bos, Leo Ducas, Eike Kiltz, Tancrede Lepoint, Vadim Lyubashevsky, John M. Schanck, Gregor Seiler, and Damien Stehlé. **CRYSTALS-kyber**. Technical report, National Institute of Standards and Technology, 2017. [Link](https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions)

- **[Win84]** R. S. Winternitz. **A secure one-way hash function built from DES**. In *1984 IEEE Symposium on Security and Privacy*, pages 88–88, April 1984.

- **[WMK16]** Xiao Wang, Alex J. Malozemoff, and Jonathan Katz. **EMP-toolkit: Efficient Multi-Party computation toolkit**. [Link](https://github.com/emp-toolkit), 2016.

- **[Yao82]** Andrew Chi-Chih Yao. **Protocols for secure computations (extended abstract)**. In *23rd FOCS*, pages 160–164. IEEE Computer Society Press, November 1982.

- **[Yao86]** Andrew Chi-Chih Yao. **How to generate and exchange secrets (extended abstract)**. In *27th FOCS*, pages 162–167. IEEE Computer Society Press, October 1986.

- **[Zoh16]** Michael Zohner. **Encrypto Group OTExtension**. [Link](https://github.com/encryptogroup/OTExtension), 2016.

### Additional Preliminary Definitions and Lemmata

#### Definition A.1 (Coin Tossing)
An ideal coin tossing is a functionality denoted as \( F_{\text{coin}} \) that interacts with two parties \( A \) and \( B \). It samples a uniform string \( r \in \{0, 1\}^* \) and sends \( r \) to both \( A \) and \( B \).

#### Definition A.2 (Extractable Commitments)
An extractable commitment scheme consists of three algorithms:
- **com(x, r):** Commits to \( x \) using randomness \( r \).
- **open(com, x, r):** Outputs 1 if the commitment \( \text{com} \) was generated by \( \text{com}(x, r) \).
- **ext(com, aux):** Given some auxiliary information, it extracts the committed value \( x \).

For security, we require:
- **Hiding:** For any \( x, m \), \( \text{com}(x, r) \) is indistinguishable from \( \text{com}(m, r) \).
- **Binding:** For any \( x \), \( \text{ext}(\text{com}(x, r)) \) outputs \( x \).

An extractable commitment can be easily constructed using a random oracle by defining \( \text{com}(x, r) := H(x, r) \). The open algorithm simply evaluates \( H \) and checks equality, and the ext algorithm observes the random oracle queries from which \( x \) can be learned.

#### A.1 Key Agreement
We provide the following additional security definition for key agreement protocols.

##### Definition A.3 (One-Round Uniform Key Agreement)
We call a UKA (Uniform Key Agreement) a one-round uniform key agreement if the function \( m_B \leftarrow B(t_B, m_A) \) does not depend on \( m_A \) and can be computed solely using input \( t_B \). More precisely, there exists a function \( B' \) such that for any \( m_A \), \( B'(t_B) = B(t_B, m_A) \), which we will also refer to as \( B \).

##### Definition A.4 (Multi-Instance Uniformity)
We call a UKA \( Q \)-multi-instance \(\epsilon\)-uniform if for any probabilistic polynomial-time (ppt) distinguisher \( D \) and any polynomial-size auxiliary input \( z \),
\[ | \Pr[D^{O_A(z)} = 1] - \Pr[D^{O_U(z)} = 1] | \leq \epsilon, \]
where \( O_A \) outputs \( m_A \leftarrow A(t_A) \) for fresh randomness \( t_A \), and \( O_U \) outputs \( u \leftarrow G \). \( Q \) is a bound on the number of queries to \( O_U \) and \( O_A \).

##### Definition A.5 (Multi-Instance Key-Indistinguishability)
We call a UKA \((Q, n)\)-multi-instance \(\epsilon\)-key-indistinguishable if for any ppt distinguisher \( D \) and any polynomial-size auxiliary input \( z \),
\[ | \Pr[D^{O_{\langle A, B \rangle}, O_K(z)} = 1] - \Pr[D^{O_{\langle A, B \rangle}, O_U(z)} = 1] | \leq \epsilon, \]
where \( O_{\langle A, B \rangle} \) outputs on the \( i \)-th query a transcript \( T_i := \langle A_i, B_i \rangle \), and \( O_K \) outputs on query \( j \), key \( k_j = \text{Key}(t_{A,j}, m_{B,j}) = \text{Key}(t_{B,j}, m_{A,j}) \) that matches transcript \( T_i \). \( O_U \) outputs a uniform element \( u \) from the key domain. \( O_{\langle A, B \rangle} \) uses fresh random tapes \( t_{A,i}, t_{B,i} \leftarrow \{0, 1\}^* \) for every query. \( Q \) is a bound on the number of queries to \( O_{\langle A, B \rangle} \), and \( n \) bounds the number of queries to \( O_K \) and \( O_U \).

In the case of a one-round UKA, we define a stronger version of the multi-instance key-indistinguishability, called one-round multi-instance key-indistinguishability.

##### Definition A.6 (One-Round Multi-Instance Key-Indistinguishability)
We call a one-round UKA one-round \((Q, n)\)-multi-instance \(\epsilon\)-key-indistinguishable if for any ppt distinguisher \( D \) and any polynomial-size auxiliary input \( z \),
\[ | \Pr[D^{O_A, O_K(z, m_B)} = 1] - \Pr[D^{O_A, O_U(z, m_B)} = 1] | \leq \epsilon, \]
where \( m_B \leftarrow B(t_B) \) for uniform \( t_B \). \( O_A \) outputs on the \( i \)-th query \( m_{A,i} \leftarrow A(t_{A,i}) \) for uniform \( t_{A,i} \). \( O_K \) outputs on query \( j \), key \( k_j = \text{Key}(t_{A,j}, m_B) = \text{Key}(t_B, m_A) \). \( O_U \) outputs a uniform element \( u \) from the key domain. \( Q \) is a bound on the number of queries to \( O_A \), and \( n \) bounds the number of queries to \( O_K \) and \( O_U \).

In the following lemmata, we show that all the security notions are implied by the standard definitions, but potentially with a polynomial security loss.

##### Lemma A.7
Let UKA be \(\epsilon\)-uniform, then it is \( Q \)-multi-instance \( Q\epsilon \)-uniform.
- **Proof:** This follows straightforwardly from using a simple hybrid argument. Hybrid \( \text{hyb}_i \) samples \( m_{A,j} \) for \( j \leq i \) from \( O_U \) and for \( j > i \) from \( O_A \). If there is an adversary that distinguishes \( \text{hyb}_i \) from \( \text{hyb}_{i+1} \) for any \( i \), then we can break the uniformity of UKA by distinguishing \( m_{A,i+1} \) from uniform.

##### Lemma A.8
Let UKA be \(\epsilon\)-key-indistinguishable, then it is \((Q, n)\)-multi-instance \( Q\epsilon \)-key-indistinguishable.
- **Proof:** Again, we use a hybrid argument over hybrids \( \text{hyb}_i \). In \( \text{hyb}_i \), \((m_{A,j}, m_{B,j}), k_j\) is sampled from \( O_{\langle A, B \rangle} \times O_U \) for \( j \leq i \) and from \( O_{\langle A, B \rangle} \times O_K \) for \( j > i \). If one distinguishes \( \text{hyb}_i \) from \( \text{hyb}_{i+1} \) for some \( i \), one breaks the key-indistinguishability.

##### Lemma A.9
Let a one-round UKA be \(\epsilon\)-key-indistinguishable, then it is one-round \((Q, n)\)-multi-instance \( Q\epsilon \)-key-indistinguishable.
- **Proof:** This lemma follows for the same reason as Lemma A.8.

#### A.2 Oblivious Transfer

##### Lemma A.10 (Repeat of Lemma 3.1)
Let the distribution of OT strings be efficiently sampleable. Then \( F_{\text{U-OT}} \)-security implies \( F_{\text{S-OT}} \)-security and \( F_{\text{R-OT}} \)-security. \( F_{\text{S-OT}} \)-security and \( F_{\text{R-OT}} \)-security imply \( F_{\text{E-OT}} \)-security and \( F_{\text{R-OT}} \)-security.

- **Proof:** In the first step, we show that uniform message security implies sender-chosen message security and receiver-chosen message security implies endemic security. These two implications result from the same simple fact that a malicious sender interacting with the ideal OT is easier to construct when it can choose the OT strings than when it receives the strings from the ideal OT. The following claim formalizes this fact.