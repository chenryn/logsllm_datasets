### Figure 10: Dynamic Energy Consumption

Figure 10 illustrates the dynamic energy consumption under different schemes, with the results normalized to the Ideal scheme. Due to frequent scrubbing, the Scrubbing scheme consumes 17% more energy than the Ideal scheme when W=1. The M-metric scheme consumes 5% more dynamic energy due to longer read latency. The energy consumption for scrubbing is relatively low because the frequency of scrub operations is lower. The Hybrid scheme, which adopts W=0 scrubbing, requires more scrub operations, leading to an additional energy overhead of 8.7%.

Our proposed LWT-4 reduces energy consumption for certain benchmarks, such as bwaves and bzip2. This reduction is attributed to two factors: shorter read latency compared to M-metric and lower scrubbing energy due to the W=1 mode. However, for some benchmarks like sphinx, the energy consumption increases significantly. This is because many R-M reads are converted to write operations, increasing the overall energy consumption. Overall, LWT-4 has an energy overhead of 1.33%.

The Select-4:2 scheme significantly reduces write energy, which is a major component of the overall dynamic energy. By modifying only the changed bits, the energy consumption is 77.8% of the Ideal scheme, which writes all lines with full writes.

### C. Energy Delay Area Product (EDAP)

We next examined different schemes by considering the subarray area. We started by comparing the effective cell array sizes required to store the same amount of information. For example, storing 64B of data with a TLC design using (72,64) SECDED code requires 192 tri-level cells. With BCH-8 and parity check per 32 bits, the Scrubbing scheme requires 155 cells. Our proposed schemes, including LWT-4, also use BCH-8 per line, requiring an additional 153 cells per line, thus totaling 212 cells to store 64B of data. The required cells to store a line are normalized to TLC and shown in Figure 11.

To evaluate the schemes based on performance, energy consumption, and area, we used the EDAP (Energy Delay Area Product) metric. The results are reported in Figure 11, where lower bars indicate better performance. Product-D and Product-S represent the results when considering dynamic energy and system energy, respectively. On average, LWT-4 and Select-4:2 achieve 7.5% and 37% improvements over TLC when considering dynamic energy. When considering system energy, they achieve 11% and 23% improvements over the TLC design.

### D. Sensitivity Study

In this section, we varied the parameters and evaluated their impact on the system.

#### 1. Impact of Subinterval Number (k)
The value of k determines the number of subintervals within a 640s scrubbing interval. A larger k allows for longer tracking times, providing more opportunities for fast R-reads in some benchmarks. However, it also requires more flag bits for finer granularity tracking. Figure 12 shows that increasing k from 2 to 4 improves performance by 0.7% for all benchmarks and 2.3% for the memory-intensive benchmark mcf.

#### 2. Impact of Select Rewrite Interval Number (s)
As discussed in Section III-D, the choice of s determines the frequency of converting full writes to selective writes. We compared Select-4:1 and Select-4:2 settings. Figure 13 shows that the energy savings for s=2 over s=1 is 1.2%.

#### 3. R-M Read Conversion in LWT-k
Figure 14 highlights the benefits of R-M read conversion enhancement in LWT-4. For several benchmarks, such as sphinx, enabling R-M read conversion significantly improves performance. The performance improvement for sphinx is 22%. However, as analyzed in Section V-B, this conversion also increases energy consumption. Overall, R-M read conversion with LWT-4 results in a 2.9% performance improvement.

### E. Lifetime Impact

For PCM, the memory lifetime is determined by the number of write operations. We examined the impact of different schemes on memory lifetime, as shown in Figure 15. Scrubbing shortens the lifetime by 12.4%, while M-metric with W=1 scrubbing has a negligible impact. The Hybrid and LWT-4 schemes reduce the lifetime by 6% and 10%, respectively. Enabling Select-4:2 increases the memory lifetime by 42%.

### VI. Related Work

Phase Change Memory (PCM) is a promising non-volatile memory technology for future memory systems. In addition to resistance drift, various issues have been studied in the literature. ECP [27], PAYG [17], Free-p [33], and Safer [25] focus on hard errors in PCM. Write disturbance was addressed in SD-PCM [30] and DIN [10]. Wear-leveling techniques were proposed in Security-refresh [24] and Start-gap [19]. MLC PCM suffers from long write latency, which degrades performance. Write cancellation [18] and write truncation [11] address the long write latency in MLC PCM.

### VII. Conclusions

In this paper, we propose ReadDuo, a resistance drift-resilient readout solution for MLC PCM systems. ReadDuo combines fast R-metric sensing and drift-resilient M-metric sensing, transforming the reliability design into a performance optimization problem. By selectively scrubbing MLC lines for drift errors and rewriting only drifted cells, ReadDuo achieves high performance, low energy consumption, and good storage density simultaneously.

### Acknowledgment

We thank all anonymous reviewers for their valuable comments and suggestions. This research is supported in part by NSF #1535755, NSF #1422331, and NSF #1012070.

### References

[1] A. Athmanathan, M. Stanisavljevic, J. Cheon, et al., “A 6-bit drift-resilient readout scheme for multi-level phase-change memory,” in IEEE A-SSCC, 2014.
[2] M. Awasthi, M. Shevgoor, K. Sudan, et al., “Efficient scrub mechanisms for error-prone emerging memories,” in HPCA, pp. 1–12, 2012.
[3] Y. Choi, I. Song, M.-H. Park, et al., “A 20nm 1.8 v 8gb pram with 40mb/s program bandwidth,” in ISSCC, pp. 46–48, 2012.
[4] X. Dong, N. P. Jouppi, and Y. Xie, “Pcramsim: System-level performance, energy, and area modeling for phase-change ram,” in ICCAD, pp. 269–275, 2009.
[5] X. Dong, C. Xu, Y. Xie, and N. P. Jouppi, “Nvsim: A circuit-level performance, energy, and area model for emerging nonvolatile memory,” IEEE TCAD, 31(7):994–1007, 2012.
[6] D. Ielmini, A. L. Lacaita, and D. Mantegazza, “Recovery and drift dynamics of resistance and threshold voltages in phase-change memories,” IEEE Trans. on Electron Devices, 54(2):308–315, 2007.
[7] D. Ielmini, D. Sharma, S. Lavizzari, et al., “Reliability impact of chalcogenide-structure relaxation in phase-change memory (pcm) cellspart i: Experimental study,” IEEE Trans. on Electron Devices, 56(5):1070–1077, 2009.
[8] D. Ielmini, S. Lavizzari, D. Sharma, et al., “Physical interpretation, modeling and impact on phase change memory (pcm) reliability of resistance drift due to chalcogenide structural relaxation,” in IEDM, pp. 939–942, 2007.
[9] L. Jiang, Y. Zhang, B. R. Childers, and J. Yang, “FPB: Fine-grained power budgeting to improve write throughput of multi-level cell phase change memory,” in MICRO, pp. 1–12, 2012.
[10] L. Jiang, Y. Zhang, and J. Yang, “Mitigating write disturbance in super-dense phase change memories,” in DSN, pp. 216–227, 2014.
[11] L. Jiang, B. Zhao, Y. Zhang, J. Yang, and B. R. Childers, “Improving write operations in mlc phase change memory,” in HPCA, pp. 1–10, 2012.
[12] B. C. Lee, E. Ipek, O. Mutlu, and D. Burger, “Architecting phase change memory as a scalable dram alternative,” in ISCA, pp. 2–13, 2009.
[13] C.-K. Luk, R. Cohn, R. Muth, et al., “Pin: building customized program analysis tools with dynamic instrumentation,” in PLDI, pp. 190–200, 2005.
[14] N. Papandreou, H. Pozidis, T. Mittelholzer, et al., “Drift-tolerant multilevel phase-change memory,” in IEEE International Memory Workshop (IMW), 2011.
[15] A. Pirovano, A. L. Lacaita, F. Pellizzer, et al., “Low-field amorphous state resistance and threshold voltage drift in chalcogenide materials,” Electron Devices, IEEE Transactions on, 51(5):714–719, 2004.
[16] H. Pozidis, N. Papandreou, A. Sebastian, et al., “Enabling technologies for multilevel phase-change memory,” in European Phase Change & Ovonics Symposium, 2011.
[17] M. K. Qureshi, “Pay-as-you-go: low-overhead hard-error correction for phase change memories,” in MICRO, pp. 318–328, 2011.
[18] M. K. Qureshi, M. M. Franceschini, L. Lastras-Monta, et al., “Improving read performance of phase change memories via write cancellation and write pausing,” in HPCA, pp. 1–11, 2010.
[19] M. K. Qureshi, J. Karidis, M. Franceschini, et al., “Enhancing lifetime and security of pcm-based main memory with start-gap wear leveling,” in MICRO, pp. 14–23, 2009.
[20] S. Raoux, G. W. Burr, M. J. Breitwisch, et al., “Phase-change random access memory: A scalable technology,” IBM Journal of Research and Development, 52(4):465–479, 2008.
[21] A. Redaelli, A. Pirovano, F. Pellizzer, et al., “Electronic switching effect and phase-change transition in chalcogenide materials,” IEEE Electron Device Letters, 25(10):684–686, 2004.
[22] K. H. Rosen, Discrete Mathematics and Its Applications, Chapter 5. McGraw-Hill Higher Education, 5th ed., 2002.
[23] A. Sebastian, N. Papandreou, A. Pantazi, et al., “Non-resistance-based cell-state metric for phase-change memory,” Journal of Applied Physics, 110(8), 2011.
[24] N. H. Seong, D. H. Woo, and H.-H. S. Lee, “Security refresh: prevent malicious wear-out and increase durability for phase-change memory with dynamically randomized address mapping,” in ISCA, pp. 383–394, 2010.
[25] N. H. Seong, D. H. Woo, V. Srinivasan, J. A. Rivers, and H.-H. S. Lee, “Safer: Stuck-at-fault error recovery for memories,” in MICRO, pp. 115–124, 2010.
[26] N. H. Seong, S. Yeo, and H.-H. S. Lee, “Tri-level-cell phase change memory: Toward an efficient and reliable memory system,” in ISCA, 2013.
[27] S. Schechter, G. H. Loh, K. Straus, and D. Burger, “Use ecp, not ecc, for hard failures in resistive memories,” in ISCA, pp. 141–152, 2010.
[28] B. Schroeder, E. Pinheiro, and W.-D. Weber, “Dram errors in the wild: a large-scale field study,” in ACM SIGMETRICS, pp. 193–204, 2009.
[29] V. Sridharan, J. Stearley, N. DeBardeleben, et al., “Feng shui of supercomputer memory positional effects in dram and sram faults,” in SC, pp. 1–11, 2013.
[30] R. Wang, L. Jiang, Y. Zhang, and J. Yang, “Sd-pcm: Constructing reliable super dense phase change memory under write disturbance,” in ASPLOS, pp. 19–31, 2015.
[31] W. Xu, J. Liu, and T. Zhang, “Data manipulation techniques to reduce phase change memory write energy,” in ISLPED, pp. 237–242, 2009.
[32] H. Yoon, J. Meza, N. Muralimanohar, N. P. Jouppi, and O. Mutlu, “Efficient data mapping and buffering techniques for multilevel cell phase-change memories,” ACM TACO, Dec. 2014.
[33] D. H. Yoon, N. Muralimanohar, J. Chang, et al., “Free-p: Protecting non-volatile memory against both hard and soft errors,” in HPCA, pp. 466–477, 2011.
[34] W. Zhang and T. Li, “Helmet: A resistance drift resilient architecture for multi-level cell phase change memory system,” in DSN, pp. 197–208, 2011.
[35] P. Zhou, B. Zhao, J. Yang, and Y. Zhang, “A durable and energy efficient main memory using phase change memory technology,” in ISCA, pp. 14–23, 2009.