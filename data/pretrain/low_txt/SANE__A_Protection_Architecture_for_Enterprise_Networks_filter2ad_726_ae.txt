### Simplifying Network Management and Enhancing Security

#### Introduction
Enterprise networks, with their complex and difficult-to-manage architectures, often face significant challenges in terms of security and scalability. Similar to SANE (Secure Architecture for Network Environments), the approach we propose advocates for the separation of the control plane (routing) from the data plane (forwarding), resulting in a simpler and more manageable network. Although 4D centralizes routing policy decisions, it retains the current security model where routing (forwarding tables) and access controls (filtering rules) are decoupled and distributed to forwarding elements. These elements operate based on weakly-bound end-point identifiers, such as IP addresses. In our work, however, there is no need to disseminate forwarding tables or filters, as forwarding decisions are made a priori and encoded in source routes.

#### Predicate Routing
Predicate routing [43] aims to unify security and routing by defining connectivity through a set of declarative statements, from which routing tables and filters are generated. SANE, on the other hand, treats users as first-class objects, rather than relying on end-point IDs or IP addresses, allowing for more flexible and fine-grained access controls.

#### Expanding the Link Layer
Reducing a network to a single layer of connectivity, where all forwarding is handled at the link layer, has become a popular method for simplifying medium-sized enterprise networks. However, large Ethernet-only networks face significant issues with scalability, stability, and fault tolerance, primarily due to their reliance on broadcast and spanning-tree-based forwarding.

To address these concerns, several proposals suggest replacing MST-based forwarding at the link layer with traditional link-state routing [39, 35]. For instance, Myers et al. [35] advocate for an Ethernet model that provides explicit host registration and discovery through a directory service, instead of using the traditional broadcast discovery service (ARP) and implicit MAC address learning. This approach enhances scalability and transparent link-layer mobility while eliminating the inefficiencies of broadcast. Similarly, SANE eliminates broadcast in favor of tighter traffic control through link-state updates and source routes. However, SANE does not use persistent end-host identifiers, instead associating each routable destination with the switch port from which it registered.

#### Capabilities for DDoS Prevention
Recent research has focused on DoS mitigation through network-enforced capabilities on the WAN [12, 51, 52]. These systems assume no cooperation between network elements and do not rely on centralized control. Instead, clients receive capabilities directly from servers and vice versa, with capabilities constructed on-route by initial capability requests. This offers a different policy model compared to SANE, which is designed to meet different needs (limiting wide-area DoS) and operates under different assumptions (no common administrative domain).

### Conclusion
We believe that enterprise networks differ significantly from the broader Internet and require special attention. Security is paramount, and centralized control and uniform, consistent policies are essential. Providing strong protection, however, is challenging and requires trade-offs. An open environment with unconstrained connectivity, while beneficial, is also vulnerable to attacks from both internal and external malicious users.

Our goal was to design a network that limits the ability of end hosts or switches to launch effective attacks while maintaining flexibility and ease of management. SANE, our proposed solution, is an extreme approach that conservatively gives the least possible privilege and knowledge to all parties, except for a trusted, central Domain Controller. We believe this approach is acceptable in enterprises, where central control and restricted access are common.

Despite its conservative nature, SANE remains practical. Our implementation shows that SANE can be deployed in current networks with minimal modifications and can scale to networks with tens of thousands of nodes.

### Acknowledgements
We would like to thank Mendel Rosenblum, Vern Paxson, Nicholas Weaver, Mark Allman, and Bill Cheswick for their valuable comments on this project. We also thank the anonymous reviewers for their feedback and especially our shepherd, Michael Roe, for his guidance. This research was supported in part by the Stanford Clean Slate program, the 100x100 project, and the NSF. Part of this research was conducted while the authors were appointed as U.S. Department of Homeland Security (DHS) Fellows under the DHS Scholarship and Fellowship Program, administered by the Oak Ridge Institute for Science and Education (ORISE) for DHS through an interagency agreement with the U.S. Department of Energy (DOE). ORISE is managed by Oak Ridge Associated Universities under DOE contract number DE-AC05-00OR22750. The opinions expressed in this paper are those of the authors and do not necessarily reflect the policies and views of DHS, DOE, ORISE, or NSF. This work was also supported in part by TRUST (The Team for Research in Ubiquitous Secure Technology), which receives support from the National Science Foundation (NSF award number CCF-0424422).

### Notes
1. A policy might be specified by multiple people (e.g., LDAP) but is typically centrally managed.
2. SANE is agnostic to the PKI or other authentication mechanisms in use (e.g., Kerberos, IBE). Here, we assume principals and switches have keys certified by the enterprise's CA.
3. To establish shared keys, we use a simple key-exchange protocol from the IKE2 [28] suite.
4. Request capabilities are similar to network capabilities as discussed in [12, 51].
5. We use the same IV for all layers, as opposed to picking a new random IV for each layer, to reduce the capability’s overall size. For standard modes of operation (such as CBC and counter-mode), reusing the IV in this manner does not impact security, since each layer uses a different symmetric key.
6. While SANE’s protection layer prevents an adversary from targeting arbitrary switches, an attacker can attempt to target a switch indirectly by accessing an upstream server for which they otherwise have access permission.
7. Normally, DC packet headers contain a consistent sender-ID in cleartext, much like the IPSec ESP header. This sender-ID tells the DC which key to use to authenticate and decrypt the payload. We replace this static ID with an ephemeral nonce provided by the DC. Every DC response contains a new nonce to use as the sender-ID in the next message.
8. Implementing threshold cryptography for symmetric encryption is done combinatorially [16]: Start from a t-out-of-t sharing (encrypt a DC master secret under all independent DC server keys) and then construct a t-out-of-n sharing from it.
9. To calculate the concurrent number of TCP connections, we tracked srcip:srcport:dstip:dstport tuples, where a connection is considered finished upon receiving the first FIN packet or if no traffic packets belonging to that tuple are seen for 15 minutes. There were only 143 cases of TCP packets sent after a connection was considered timed-out.
10. This is a conservative upper bound: In our traces, the average flow length is 92s, implying that at most, 15% of the flows could have lengths greater than 10 minutes.

### References
[1] 802.1D MAC Bridges. http://www.ieee802.org/1/pages/802.1D-2003.html.
[2] Apani home page. http://www.apani.com/.
[3] Consentry home page. http://www.consentry.com/.
[4] DNS Service Discover (DNS-SD). http://www.dns-sd.org/.
[5] Lumeta. http://www.lumeta.com/.
[6] UPnP Standards. http://www.upnp.org/.
[7] Cisco Security Advisory: Cisco IOS Remote Router Crash. http://www.cisco.com/warp/public/770/ioslogin-pub.shtml, August 1998.
[8] CERT Advisory CA-2003-13 Multiple Vulnerabilities in Snort Preprocessors. http://www.cert.org/advisories/CA-2003-13.html, April 2003.
[9] Sasser Worms Continue to Threaten Corporate Productivity. http://www.esecurityplanet.com/alerts/article.php/3349321, May 2004.
[10] Technical Cyber Security Alert TA04-036Aarchive HTTP Parsing Vulnerabilities in Check Point Firewall-1. http://www.us-cert.gov/cas/techalerts/TA04-036A.html, February 2004.
[11] ICMP Attacks Against TCP Vulnerability Exploit. http://www.securiteam.com/exploits/5SP0N0AFFU.html, April 2005.
[12] T. Anderson, T. Roscoe, and D. Wetherall. Preventing Internet Denial-of-Service with Capabilities. SIGCOMM Comput. Commun. Rev., 34(1):39–44, 2004.
[13] Y. Bartal, A. J. Mayer, K. Nissim, and A. Wool. Firmato: A Novel Firewall Management Toolkit. ACM Trans. Comput. Syst., 22(4):381–420, 2004.
[14] S. M. Bellovin. Distributed Firewalls. ;login:, 24(Security), November 1999.
[15] M. Blaze, J. Feigenbaum, and A. D. Keromytis. Keynote: Trust Management for Public-Key Infrastructures (Position Paper). In Proceedings of the 6th International Workshop on Security Protocols, pages 59–63, London, UK, 1999. Springer-Verlag.
[16] E. Brickell, G. D. Crescenzo, and Y. Frankel. Sharing Block Ciphers. In Proceedings of Information Security and Privacy, volume 1841 of LNCS, pages 457–470. Springer-Verlag, 2000.
[17] M. Casado and N. McKeown. The Virtual Network System. In Proceedings of the ACM SIGCSE Conference, 2005.
[18] M. Castro and B. Liskov. Practical Byzantine Fault Tolerance and Proactive Recovery. ACM Transactions on Computer Systems (TOCS), 20(4):398–461, Nov. 2002.
[19] D. Cullen. Half Life 2 Leak Means No Launch for Christmas. http://www.theregister.co.uk/2003/10/07/half life 2 leak means/, October 2003.
[20] Y. Desmedt and Y. Frankel. Threshold Cryptosystems. In Advances in Cryptology - Crypto '89, 1990.
[21] J. R. Douceur. The Sybil Attack. In First Intl. Workshop on Peer-to-Peer Systems (IPTPS 02), Mar. 2002.
[22] T. Garfinkel, B. Pfaff, J. Chow, M. Rosenblum, and D. Boneh. Terra: A Virtual Machine-Based Platform for Trusted Computing. In Proceedings of the 19th Symposium on Operating System Principles (SOSP 2003), October 2003.
[23] D. M. Goldschlag, M. G. Reed, and P. F. Syverson. Hiding Routing Information. In R. Anderson, editor, Proceedings of Information Hiding: First International Workshop, pages 137–150. Springer-Verlag, LNCS 1174, May 1996.
[24] A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. Myers, J. Rexford, G. Xie, H. Yan, J. Zhan, and H. Zhang. A Clean Slate 4D Approach to Network Control and Management. In In ACM SIGCOMM Computer Communication Review, October 2005.
[25] J. H. Howard, M. L. Kazar, S. G. Menees, D. A. Nichols, M. Satyanarayanan, R. N. Sidebotham, and M. J. West. Scale and Performance in a Distributed File System. ACM Trans. Comput. Syst., 6(1):51–81, Feb. 1988.
[26] S. Ioannidis, A. D. Keromytis, S. M. Bellovin, and J. M. Smith. Implementing a Distributed Firewall. In ACM Conference on Computer and Communications Security, pages 190–199, 2000.
[27] G. C. S. Jian Pu, Eric Manning. Routing Reliability Analysis of Partially Disjoint Paths. In IEEE Pacific Rim Conference on Communications, Computers and Signal Processing (PACRIM' 01), volume 1, pages 79–82, August 2001.
[28] C. Kaufman. Internet Key Exchange (IKEv2) Protocol. draft-ietf-ipsec-ikev2-10.txt (Work in Progress).
[29] A. Kumar, V. Paxson, and N. Weaver. Exploiting Underlying Structure for Detailed Reconstruction of an Internet-Scale Event. In to appear in Proc. ACM IMC, October 2005.
[30] M. Leech, M. Ganis, Y. Lee, R. Kuris, D. Koblas, and L. Jones. SOCKS Protocol Version 5. RFC 1928, March 1996.
[31] T. Markham and C. Payne. Security at the Network Edge: A Distributed Firewall Architecture. In DARPA Information Survivability Conference and Exposition, 2001.
[32] G. M. Marro. Attacks at the Data Link Layer, 2003.
[33] A. Mayer, A. Wool, and E. Ziskind. FANG: A Firewall Analysis Engine. In SP '00: Proceedings of the 2000 IEEE Symposium on Security and Privacy, page 177, Washington, DC, USA, 2000. IEEE Computer Society.
[34] D. Moore, V. Paxson, S. Savage, C. Shannon, S. Staniford, and N. Weaver. Inside the Slammer Worm. IEEE Security and Privacy, 1(4):33–39, 2003.
[35] A. Myers, E. Ng, and H. Zhang. Rethinking the Service Model: Scaling Ethernet to a Million Nodes. In ACM SIGCOMM Hot-Nets, November 2004.
[36] R. Pang, M. Allman, M. Bennett, J. Lee, V. Paxson, and B. Tierney. A First Look at Modern Enterprise Traffic. In ACM/USENIX Internet Measurement Conference, Oct. 2005.
[37] R. Pang, M. Allman, V. Paxson, and J. Lee. The Devil and Packet Trace Anonymization. ACM Comput. Commun. Rev., 36(1), Jan. 2006.
[38] R. Perlman. Network Layer Protocols with Byzantine Robustness. PhD thesis, Massachusetts Institute of Technology, 1988.
[39] R. J. Perlman. RBridges: Transparent Routing. In INFOCOM, 2004.
[40] V. Prevelakis and A. D. Keromytis. Designing an Embedded Firewall/VPN Gateway. In Proc. International Network Conference, July 2002.
[41] J. Rexford, A. Greenberg, G. Hjalmtysson, D. A. Maltz, A. Myers, G. Xie, J. Zhan, and H. Zhang. Network-Wide Decision Making: Toward a Wafer-Thin Control Plane. In Proceedings of HotNets III, November 2004.
[42] P. Rogaway, M. Bellare, J. Black, and T. Krovetz. OCB: A Block-Cipher Mode of Operation for Efficient Authenticated Encryption. In ACM Conference on Computer and Communications Security, pages 196–205, 2001.
[43] T. Roscoe, S. Hand, R. Isaacs, R. Mortier, and P. Jardetzky. Predicate Routing: Enabling Controlled Networking. SIGCOMM Comput. Commun. Rev., 33(1):65–70, 2003.
[44] J. Veizades, E. Guttman, C. Perkins, and S. Kaplan. Service Location Protocol. RFC 2165, July 1997.
[45] N. Weaver, D. Ellis, S. Staniford, and V. Paxson. Worms vs. Perimeters: The Case for Hard-LANs. In Proc. Hot Interconnects 12, August 2004.
[46] A. Wool. A Quantitative Study of Firewall Configuration Errors. IEEE Computer, 37(6):62–67, 2004.
[47] A. Wool. The Use and Usability of Direction-Based Filtering in Firewalls. Computers & Security, 26(6):459–468, 2004.
[48] S. Wu, B. Vetter, and F. Wang. An Experimental Study of Insider Attacks for the OSPF Routing Protocol. October 1997.
[49] G. Xie, J. Zhan, D. Maltz, H. Zhang, A. Greenberg, G. Hjalmtysson, and J. Rexford. On Static Reachability Analysis of IP Networks. In IEEE INFOCOM 2005, March 2005.
[50] G. Xie, J. Zhan, D. A. Maltz, H. Zhang, A. Greenberg, and G. Hjalmtysson. Routing Design in Operational Networks: A Look from the Inside. In Proc. ACM SIGCOMM '04, pages 27–40, New York, NY, USA, 2004. ACM Press.
[51] A. Yaar, A. Perrig, and D. Song. SIFF: A Stateless Internet Flow Filter to Mitigate DDoS Flooding Attacks. In In Proceedings of the IEEE Security and Privacy Symposium, May 2004.
[52] X. Yang, D. Wetherall, and T. Anderson. A DoS-Limiting Network Architecture. In Proc. ACM SIGCOMM '05, pages 241–252, New York, NY, USA, 2005. ACM Press.