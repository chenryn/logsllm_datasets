### Window of Six Days and Alert Threshold of Three

Beginning in December 2004, the IMS (Internet Motion Sensor) system detected a significant increase in activity on TCP port 42. This surge in activity was particularly noteworthy because Microsoft had recently announced a new security vulnerability in the Windows Internet Name Service (WINS) server component of its Windows Server operating systems. The increased activity followed a vulnerability report from Immunity Security on November 24, 2004, which described a remotely exploitable buffer overflow in the WINS server component of Microsoft Windows. Payloads captured on TCP port 42 during this event included sequences that were byte-for-byte identical to exploit code observed in the wild following the vulnerability announcement. Although the attack was broadly scoped, it involved only a small number of hosts and lasted just one day. The broad deployment of the IMS system allowed for the rapid identification of this small-scale event, enabling additional monitoring capabilities.

### Another Quick Attack: January 11, 2005

On January 11, 2005, the IMS system observed a substantial increase in scanning activity on TCP port 6101. Approximately 600 sources were identified as aggressively probing many of the distributed IMS sensors. TCP port 6101 is used by the Veritas Backup Exec agent, a network service that allows for remote system backup. On December 16, 2004, iDefense announced a buffer overflow vulnerability in the Veritas Backup Exec agent, which could enable remote system-level access. On January 11, exploit code for this vulnerability was published, and the same day, IMS observed a large increase in activity on TCP/6101. Captured payloads from the attack included sequences that were byte-for-byte identical to the published exploit code. This rapid onset highlights the need for an automated system capable of quickly responding to new threat activity.

### Detection of a MySQL Worm/Bot: Late January 2005

In late January 2005, the IMS system detected a worm/bot targeting the MySQL database server. The worm/bot propagated by randomly scanning for the MySQL service on TCP port 3306. This threat was unique because it required interaction with a hidden IRC server before a new instance would start to propagate. The IRC channel was discovered by operators who subsequently shut it down, effectively eradicating the worm after a few days. This event underscores the importance of having detailed information on threats. Without observing the interaction between the worm/bot and the IRC server, there would have been no way to discover the communication channel and thus stop the worm.

### Effect of Coverage on Event Generation

Coverage represents the percentage of the total darknets monitored that would individually report an increase via our algorithm. Figure 15 illustrates the effect of various coverage values as a filter on the number of events generated. The majority of events generated by the algorithm are seen at a very small subset of darknets. Significant reductions in the number of events occur when considering only those events observed across more than one-third of the darknets.

### Production Validation

To validate our event generation algorithm, we compared the events identified by our system with those identified by the broader security community. It is important to note that our system has been in production use for several months and has identified several critical new threats. It is utilized by major network operators and governments worldwide to quickly identify new security events on the internet.

Over a four-month observation period, the IMS system identified 13 unique events, grouped by port. These include the TCP/42 WINS scanning, the TCP/611 Veritas Backup Exec agent scanning, and the MySQL worm/bot on TCP/3306. These events demonstrate the quick onset, short duration, and global prevalence of many attacks. Figure 16 shows the normalized number of unique source addresses detected at the 23 IMS sensors for these events over time.

### Conclusion

Global threats are evolving rapidly, necessitating innovative mechanisms for tracking and characterizing them. One approach involves hybrids of darknets with honeyfarms. While there are numerous challenges, this paper investigates the most critical: scaling interactions between darknets and honeyfarms. We examined key characteristics of traffic at individual darknets that affect the scalability of a hybrid system. Specifically, we showed that darknets are dominated by a small number of source IP addresses repeatedly contacting the same destination ports. However, this does not hold across darknets; neither the source IP addresses nor the destination ports appear frequently across different darknets. This lack of overlap implies that each additional new block added to a distributed darknet monitor will likely bring its own sensor-specific events. For a large collection of darknets to be effective, a new view of events and new methods of filtering are required. We constructed a filtering mechanism that takes into account the distribution of source IP addresses and the number of darknets observing an activity. We demonstrated the effectiveness of this algorithm by examining recent events such as the WINS vulnerability, Veritas vulnerabilities, and the MySQL worm.

### Acknowledgments

This work was supported by the Department of Homeland Security (DHS) under contract number NBCHC040146, the Advanced Research and Development Activity (ARDA) under contract number NBCHC030104, and corporate gifts from Intel Corporation and Cisco Corporation. The authors would like to thank all the IMS participants for their help and suggestions. We also extend our gratitude to Joseph Rock, Jenn Burchill, Jose Nazario, Dug Song, Robert Stone, and G. Robert Malan of Arbor Networks, as well as Larry Blunk, Bert Rossi, and Manish Karir at Merit Network for their assistance and support.

### References

[References are listed here as provided, without changes.]

---

This revised version aims to improve clarity, coherence, and professionalism while maintaining the original content and structure.