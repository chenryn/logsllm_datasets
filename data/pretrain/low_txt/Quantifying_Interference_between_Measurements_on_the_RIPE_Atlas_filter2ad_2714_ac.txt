### Measurement Completion Time and Interference

One-off traceroutes take more time to execute and are more prone to failure. The Round-Trip Times (RTTs) measured from the probes increase as the load on the probe increases, leading to higher completion times. To manage this, we measure the time delta between when we request traceroute measurements and when they finish.

#### Impact of Traceroute Volume on Completion Time

The number of traceroutes significantly affects the completion time. For instance, Figure 8 shows that requesting 50 one-off traceroutes on a v2 probe can result in a completion time of up to 6.7 minutes, while the same number on a v3 probe takes 4.5 minutes. When the number of traceroutes increases to 500 on a v3 probe, the completion time can extend to 41 minutes. All probe versions, including the more powerful v3, experience a significant increase in completion time under high load. Further experiments have even shown completion times exceeding one hour for v3 probes.

#### Load-Dependent Completion Time

The completion time also increases with the load on the probe. As shown in Figure 7, the first 25 one-off traceroutes may take up to 6.2 minutes to complete, while the second series of 25 traceroutes can take up to 11.3 minutes, and the third series up to 20.2 minutes. Sending 500 pings per second to a probe can multiply the completion time by more than three. When the ping frequency is too high, most traceroutes fail.

### Key Points

- **Measurement Delays:** Under heavy load, requested measurements may be delayed, making the platform unsuitable for synchronized measurements.
- **Synchronization Issues:** It is difficult to ensure that pings or traceroutes start simultaneously on multiple probes, which is problematic for measuring the effect of a single event from multiple vantage points.
- **Hardware Limitations:** This issue applies to all probe hardware, including the most powerful v3 probes.

### Discussion

#### Impact for Researchers

**Previous Works:**
Many research papers have used RIPE Atlas, often relying on delay-based measurements [3, 4, 18, 28, 6, 16]. These studies can be impacted by interferences. For example, Rimondini et al. [3] used PELT [29], a changepoint detection algorithm, to detect shifts in RTTs and correlate them with routing changes. We replicated such experiments and detected a changepoint each time a one-off traceroute series started and stopped. Cicalese et al. [18] used the minimum value of ten successive RTTs to enumerate and geolocate IP-level anycast replicas. A 1ms difference in latency corresponds to a 100 km radius in geodesic distance, so such studies may be affected by interference. Operators using Atlas probes to measure network performance may incorrectly trigger congestion alarms due to these effects. Based on our results, delay-based measurements from v1 and v2 probes should be avoided if a precision below 15 ms is required.

**Publicly Available Data:**
RIPE Atlas makes all collected data publicly available since its inception in 2010 [30]. Researchers using this data should consider the impact of interferences, especially for data collected before 2013, prior to the introduction of v3 probes. We recommend that researchers be cautious when using publicly available delay measurements.

#### Solutions

**Measurement Confidence Index:**
A fundamental problem with Atlas is the lack of visibility into the concurrent load of the platform. We propose that RIPE return a "confidence index" along with each result, reflecting the platform's concurrent load. High (resp. low) load would lead to low (resp. high) confidence. This metric should be computed based on passive measurements to avoid further stressing the platform.

**Enforce Synchronization:**
While real-time synchronization is not feasible on shared platforms, more precise scheduling can be achieved by maintaining a lower load on the probes and delaying upcoming measurements in favor of already scheduled events. Users could be informed of the exact timing of their experiments upon a measurement request. However, this approach is only possible if all users have the same privileges and some experiments cannot be preempted.

### Related Work

Other researchers have observed measurement interference and its impact on RTT. For example, the effects of virtualization on measured delays have been noted [31, 32]. Tools like [35] for PlanetLab and other large-scale platforms using VMs [33, 34, 25] have been developed to mitigate these issues.

### Conclusion

We presented the first measurement study of user-induced interferences on the RIPE Atlas platform. Our findings show that measurements do interfere with each other, leading to increased and more variable delays. Measurement campaigns can be arbitrarily delayed, making it challenging to perform simultaneous experiments from multiple probes. These findings raise new research questions about designing measurement platforms that provide better isolation between users while remaining efficient.

### Acknowledgments

We thank the RIPE Atlas and NLNOG RING support teams for accommodating our measurements and promptly responding to our questions.

### References

[1] RIPE NCC. RIPE Atlas. [Online]. Available: https://atlas.ripe.net
[2] S. Roy and N. Feamster, “Characterizing correlated latency anomalies in broadband access networks,” in ACM SIGCOMM 2013 (Poster Session), 2013.
[3] M. Rimondini, C. Squarcella, and G. Di Battista, “Towards an Automated Investigation of the Impact of BGP Routing Changes on Network Delay Variations,” in PAM, 2014.
[4] G. Da Lozzo, G. Di Battista, and C. Squarcella, “Visual discovery of the correlation between BGP routing and round-trip delay active measurements,” Computing, vol. 96, no. 1, pp. 67–77, 2014.
[5] A. Faggiani, E. Gregori, A. Improta, L. Lenzini, V. Luconi, and L. Sani, “A study on traceroute potentiality in revealing the internet AS-level topology,” in IFIP Networking 2014, 2014.
[6] A RIPE Atlas View of Internet Meddling in Turkey. [Online]. Available: https://labs.ripe.net/Members/emileaben/a-ripe-atlas-view-of-internet-meddling-in-turkey
[7] T. Yakimov, “Detecting routing anomalies with RIPE Atlas,” April 2014.
[8] C. Anderson, P. Winter, and Roya, “Global network interference detection over the RIPE Atlas network,” in 4th USENIX Workshop on Free and Open Communications on the Internet, August 2014.
[9] [Online]. Available: https://github.com/nsg-ethz/atlas-interference
[10] RIPE Atlas - User-Defined Measurements. [Online]. Available: https://atlas.ripe.net/docs/udm/
[11] N. Wells, “Busybox: A swiss army knife for Linux,” Linux J., vol. 2000, no. 78es, Oct. 2000.
[12] libevent - an event notification library. [Online]. Available: http://libevent.org/
[13] Releasing RIPE Atlas Measurements Source Code. [Online]. Available: https://labs.ripe.net/Members/philip-homburg/ripe-atlas-measurements-source-code
[14] Community Information, contributions, and hosts that stand out. [Online]. Available: https://atlas.ripe.net/get-involved/community/
[15] G. Machado, C. Tsiaras, and B. Stiller, “Schengen Routing: A Compliance Analysis,” in AIMS, 2015.
[16] R. Fanou, F. Pierre, and E. Aben, “On the Diversity of Interdomain Routing in Africa,” in PAM, 2015.
[17] P. Fiadino, M. Schiavone, and P. Casas, “Vivisecting WhatsApp in cellular networks: Servers, flows, and quality of experience,” in TMA, 2015.
[18] D. Cicalese, D. Joumblatt, D. Rossi, M.-O. Buob, J. Auge, and T. Friedman, “A fistful of pings: Accurate and lightweight anycast enumeration and geolocation,” in IEEE INFOCOM, 04/2015 2015.
[19] Measuring Countries and IXPs with RIPE Atlas. [Online]. Available: https://labs.ripe.net/Members/emileaben/measuring-ixps-with-ripe-atlas
[20] How does the MENOG Region Measure up? [Online]. Available: https://labs.ripe.net/Members/mirjam/how-does-the-menog-region-measure-up
[21] Measuring Countries and IXPs in the SEE Region. [Online]. Available: https://labs.ripe.net/Members/emileaben/measuring-countries-and-ixps-in-the-see-region
[22] Percentage of connected probes per country. [Online]. Available: https://atlas.ripe.net/results/maps/density/
[23] V. Bajpai, S. J. Eravuchira, and J. Schönwälder, “Lessons learned from using the RIPE Atlas platform for measurement research,” SIGCOMM Comput. Commun. Rev., vol. 45, no. 3, pp. 35–42, Jul. 2015.
[24] RIPE-Atlas-sbucket. [Online]. Available: https://github.com/cod3monk/RIPE-Atlas-sbucket
[25] NLNOG Ring. [Online]. Available: https://ring.nlnog.net
[26] Creating Measurements with the RIPE Atlas RESTful API. [Online]. Available: https://atlas.ripe.net/docs/measurement-creation-api/
[27] M. J. Luckie, “Scamper: a scalable and extensible packet prober for active measurement of the internet,” in IMC, 2010.
[28] RIPE Atlas - Superstorm Sandy. [Online]. Available: https://labs.ripe.net/Members/emileaben/ripe-atlas-superstorm-sandy
[29] R. Killick and I. A. Eckley, “changepoint: An R package for changepoint analysis,” Journal of Statistical Software, vol. 58, no. 3, pp. ??–??, 6 2014.
[30] RIPE Atlas - Public measurements. [Online]. Available: https://atlas.ripe.net/measurements/#!public
[31] J. Whiteaker, F. Schneider, and R. Teixeira, “Explaining packet delays under virtualization,” SIGCOMM Comput. Commun. Rev., vol. 41, 2009.
[32] N. Spring, L. Peterson, A. Bavier, and V. Pai, “Using PlanetLab for network research: Myths, realities, and best practices,” SIGOPS Oper. Syst. Rev., 2006.
[33] PlanetLab, “PlanetLab: An open platform for developing, deploying and accessing planetary-scale services,” http://planet-lab.org.
[34] M-Lab, “Measurement Lab,” http://www.measurementlab.net.
[35] K. Park and V. S. Pai, “Comon: A mostly-scalable monitoring system for PlanetLab,” SIGOPS Oper. Syst. Rev., vol. 40, no. 1, pp. 65–74, Jan. 2006.
[36] S. Gangam and S. Fahmy, “Mitigating interference in a network measurement service,” ser. IWQoS ’11, 2011.
[37] M. A. Sánchez, F. E. Bustamante, B. Krishnamurthy, and W. Willinger, “Experiment coordination for large-scale measurement platforms,” in ACM SIGCOMM Workshop on C2B(I)D, 2015.
[38] M. A. Sánchez, J. S. Otto, Z. S. Bischof, D. R. Choffnes, F. E. Bustamante, B. Krishnamurthy, and W. Willinger, “Dasu: Pushing experiments to the internet’s edge,” in NSDI, 2013.
[39] R. K. P. Mok, W. Li, and R. K. C. Chang, “Improving the packet send-time accuracy in embedded devices,” in PAM 2015.