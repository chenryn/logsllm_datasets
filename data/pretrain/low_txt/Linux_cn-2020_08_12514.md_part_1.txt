---
author: Red Hat
category: 代码英雄
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6631
date: '2020-08-13 21:33:00'
editorchoice: true
excerpt: 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
fromurl: https://www.redhat.com/en/command-line-heroes/season-1/agile-revolution
id: 12514
islctt: true
largepic: /data/attachment/album/202008/13/213350ttp2ww8d84qld382.jpg
permalink: /article-12514-1.html
pic: /data/attachment/album/202008/13/213350ttp2ww8d84qld382.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 12508
- displayorder: 0
  raid: 12529
reviewer: acyanbird
selector: bestony
summary: 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。
tags:
- 敏捷
- 代码英雄
thumb: false
title: '[重制版]《代码英雄》第一季（3）：敏捷革命'
titlepic: true
translator: redhat
updated: '2020-08-13 21:33:00'
---

> 《代码英雄》讲述了开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。

### 什么是《代码英雄》

《代码英雄》是世界领先的企业开源软件解决方案供应商红帽（Red Hat）精心制作的原创音频播客，讲述开发人员、程序员、黑客、极客和开源反叛者如何彻底改变技术前景的真实史诗。该音频博客邀请了谷歌、NASA 等重量级企业的众多技术大牛共同讲述开源、操作系统、容器、DevOps、混合云等发展过程中的动人故事。

![](/data/attachment/album/202008/13/213350ttp2ww8d84qld382.jpg)

本文是《[代码英雄](https://www.redhat.com/en/command-line-heroes)》系列播客[第一季（3）：敏捷革命](https://www.redhat.com/en/command-line-heroes/season-1/agile-revolution) 的[音频脚本](https://dts.podtrac.com/redirect.mp3/audio.simplecast.com/acf5928d.mp3)。

现在是 21 世纪之交，开源软件正在改变科技格局，需要一种新的工作模式。开发者们在寻找一种革命性的方法，让开源开发蓬勃发展。一群开发者在犹他州的一个滑雪场召开了会议，形成的是一份改变一切的宣言。

《敏捷软件开发宣言》的作者之一 Dave Thomas 将我们带回了那个著名的静修之地，敏捷革命就是在那里第一次组织起来的。不过，并不是每个人都那么快就签下了这种新方法，在这一集里，我们听听原因。

**Saron Yitbarek**：有些故事的走向和结局会重新定义一个行业。这些故事也传唱着我们的来源、身份和所做的事情。[上一集](/article-12508-1.html)中，我们追溯了 Linux ® 开源技术的崛起。但这一集我要讲的是紧接着发生的故事。操作系统之战结束后，开发者们成为了战争争夺的核心。

**00:00:30**：在这个新的战场，开发者们将重塑自己的工作方式。本集播客，我们将深入了解以开发人员为核心，产生的一种全新的软件开发方法论。这种新颖的工作流程产生了许多意想不到的事情，远远超出了屏幕上显示的代码所能控制的范围。

我是 Saron Yitbarek，欢迎收听红帽的原创播客《代码英雄 第三集 敏捷革命》。今天的故事始于 2001 年 2 月，发生在美国犹他州的滑雪小屋里。

**00:01:00 - Dave Thomas**：我们面前有个小屋，眼前是松树梁和壁炉，还有进入屋子的小门。我们前一天晚上到达这里时，基本上只是围坐在一起讨论我们准备探讨的内容。紧接着第二天，我们都起床并来到了预定的会议室。先把桌子移到边上去，然后将椅子摆放成一圈，确切地说是一个椭圆，这样一来我们就可以面对面交流，一定程度上也让人感觉到可以敞开心扉，畅所欲言。

**00:01:30 - Saron Yitbarek**：这群人都是开源开发人员，所以保持开放是他们的特点。Dave Thomas 和其他 16 个人在那个冬天集聚在雪鸟滑雪场。他们的目的并不是滑雪，而是探讨 90 年代开发者的世界所面临的问题。在这里我用“探讨”，但实际上用“辩论”更准确。他们最初是在面向对象编程、语言及系统（OOPSLA）的会议上认识的，这个会议主要议题是面向对象程序设计、编程、语言和系统。

**00:02:00**：正是那次会议让他们意识到当前的软件开发方式很混乱，但对于该怎么办没有达成一致。因此，此次在雪鸟山上的开会，试图寻找解决这个问题的方法。那么具体问题是什么？于是我询问 Dave，开发人员之前的方式到底出现了什么问题。

**Dave Thomas**：你有没有装饰过房间？

**Saron Yitbarek**：有。

**00:02:30 - Dave Thomas**：好。如果我先告诉你，“我想让你坐下来，然后给你一张白纸。接着我希望你能描绘出这个房间完成后大概的样子。”可以想象吗？

**Saron Yitbarek**：嗯嗯。

**Dave Thomas**：你能做到吗？

**Saron Yitbarek**：实际上，我的办公室就是这么布置出来的。首先，我画了一个简单的草图，然后加上一些修饰，最后把所有架子摆放在我觉得合适的位置。不过这种方式没有真正起到作用，我的计划也没有实现。

**Dave Thomas**：即使你尝试了这种方式，你都做了什么？先把架子放起来，然后说，“哦……这样放不行，因为会挡道。”所以，你又紧接着把架子移到其它地方，或者你会说，“你知道吗，我真的不能把地毯放在那里，因为我的椅子脚会陷进去。”状况频发。

**00:03:00 - Dave Thomas**：遇到未知的情况，你总需要一种“迭代”的方式去应对。人类的大脑无法准确地对现实世界的发展进行预判，从而提前预知哪里需要改变。所以，软件开发也是一样的，人们不知道他们的需求会怎么改变。对吗？

**Saron Yitbarek**：嗯嗯。

**00:03:30 - Dave Thomas**：我经历过太多这样的情况，当我从客户那里拿到了详细的要求，然后我已经很好地完成了每一条细则，但却总是吵得不欢而散。“这不是我们想要的。” 但我想说的是，“这就是你要求的啊。”他们说，“是的，但这不是我的意思。”你懂这种情况吗？

**Saron Yitbarek**：嗯嗯。

**00:04:00 - Dave Thomas**：理想情况是，你可以详细说明流程的每一步，然后通过非常机械的步骤就可以完成一切。

**Saron Yitbarek**：是啊。

**Dave Thomas**：但是在软件行业可行不通。这种方式不适用于有任何模棱两可的情况，也不适用于需要判断的情况。就像任何艺术尝试一样，这种方式就是行不通。总是缺失了关键的一步：反馈。

**Saron Yitbarek**：也许你已经听说过上世纪 90 年代的软件危机。当时的软件开发一团糟。相比于开发软件的费用，公司在修复软件上的钱花得更多。与此同时，像你我这样的开发人员进退不得。有时候，我们每隔好几年时间才能推出新的软件。

**00:04:30**：我们疲于应付这些缓慢、陈旧、瀑布式开发的工作流程。从 A 到 B 到 C，完全都是提前确定好的。因此，那时的时间消耗主要在寻找新的流程，寻找更好的软件开发方式上。事实上，每个月似乎都有新的开发者提出宏伟的设想来改善软件开发的过程。

---