### Simulation Setup and Results

In the simulation, the reserved rate for a control flow between nodes \( n0 \) and \( n4 \) is varied from 5 Kbps to 100 Kbps in steps of 5 Kbps. To congest the intermediate links in the network, three rogue Constant Bit Rate (CBR) flows are introduced: one between \( n0 \) and \( n4 \), another between \( s1 \) and \( r2 \), and a third between \( s2 \) and \( r3 \). Each of these CBR flows transmits at 100 Kbps. The simulation measures the average and worst-case end-to-end delays of the control flow.

### Scheduler Comparison

Stratified Round Robin (SRR) is compared against two well-known schedulers: Deficit Round Robin (DRR) and Weighted Fair Queuing (WFQ). DRR is chosen because it is a round-robin scheduler with comparable implementation complexity to SRR. WFQ is selected due to its proven good delay properties as a time-stamp scheduler. The primary goal of the simulation is to demonstrate that SRR can achieve delay properties similar to WFQ while maintaining an implementation complexity close to that of DRR.

### Simulation Results

Figure 6 illustrates the average and worst-case delays of the three schedulers as a function of the reserved bandwidth. As expected, both the average and worst-case delays of DRR are relatively insensitive to the reserved bandwidth. This is because, under DRR, a flow must wait until all other flows are serviced before it is serviced again. In contrast, for WFQ, the delays are inversely proportional to the reserved rate; higher reserved rates result in lower average and worst-case delays. SRR exhibits similar behavior to WFQ, with both average and worst-case delays closely mirroring those of WFQ. This is achieved despite SRR's implementation complexity being only slightly more than that of DRR, as discussed in Section 4.

### Conclusions

In this paper, we introduce a new fair queuing scheme called Stratified Round Robin (SRR). The key idea is to group flows with similar bandwidth requirements into a single flow class. Within each class, a weighted round-robin scheme with deficit is employed. Since all flows within a class have approximately the same weight, unfairness can be bounded. The flow classes are defined by partitioning the total bandwidth into exponentially increasing intervals, which allows efficient deadline-based scheduling as the number of flow classes grows logarithmically and remains a small constant in practical scenarios.

We describe a simple hardware implementation of SRR that can be realized with a priority encoder. Ease of implementation is a key merit of our scheme. SRR requires only a few additional bit operations compared to DRR but provides much stronger fairness and delay guarantees.

Our results show that SRR has good fairness and delay properties. Although its worst-case fairness is proportional to the number of flows \( N \), for the special case of a single packet, SRR achieves a delay bound that is strictly rate-proportional and independent of the number of flows. This property is unique among schedulers of comparable complexity. Through simulations, we demonstrate that SRR also has good average-case behavior and provides an accurate approximation of Weighted Fair Queuing.

In conclusion, SRR is a low-complexity scheduler that offers bandwidth fairness and certain delay bounds. It also admits a simple and efficient hardware implementation, making it a strong candidate for practical deployment in high-speed routers.

### Acknowledgments

We gratefully acknowledge the support of AT&T Labs-Research. We also wish to thank the anonymous reviewers, our shepherd Prof. Hui Zhang, and Prof. George Varghese, whose constructive comments significantly improved the paper.

### References

[1] J. Bennett and H. Zhang, "Hierarchical packet fair queueing algorithms," in *ACM SIGCOMM '96* (1996).

[2] J. Bennett and H. Zhang, "WF2Q: Worst case fair weighted fair queuing," in *IEEE INFOCOM '96* (1996).

[3] S. Blake et al., "An architecture for differentiated services," *RFC 2475* (1998).

[4] W. Chan and J. Nieh, "Group ratio round-robin: An O(1) proportional share scheduler," Tech. Rep. CUCS-012-03, Department of Computer Science, Columbia University, April 2003.

[5] S. Cheung and C. Pencea, "BSFQ: Bin sort fair queuing," in *IEEE INFOCOM'02* (2002).

[6] G. Chuanxiong, "SRR, an O(1) time complexity packet scheduler for flows in multi-service packet networks," in *ACM SIGCOMM '01* (2001).

[7] D. Clark, "The design philosophy of DARPA internet protocols," in *ACM SIGCOMM '88* (1988).

[8] D. Clark and W. Fang, "Explicit allocation of best-effort packet delivery service," *IEEE/ACM Transactions on Networking 6* (August 1998).

[9] D. Clark, S. Shenker, and L. Zhang, "Supporting real-time applications in an integrated services packet network: Architecture and mechanism," in *ACM SIGCOMM '92* (1992).

[10] A. Demers, S. Keshav, and S. Shenker, "Analysis and simulation of a fair queuing algorithm," in *ACM SIGCOMM '89* (1989).

[11] N. Figueira and J. Pasquale, "Leave-in-time: A new service discipline for real-time communications in a packet-switching network," in *ACM SIGCOMM '95* (1995).

[12] N. Figueira and J. Pasquale, "An upper bound on the delay for the virtual clock service discipline," *IEEE/ACM Transactions on Networking 3* (August 1995).

[13] N. Figueira and J. Pasquale, "A schedulability condition for deadline-based service disciplines," *IEEE/ACM Transactions on Networking 5* (April 1997).

[14] S. Floyd and K. Fall, "Promoting the use of end-to-end congestion control in the Internet," *IEEE/ACM Transactions on Networking 7* (August 1999).

[15] S. Floyd and V. Jacobson, "Random early detection gateways for congestion avoidance," *IEEE/ACM Transactions on Networking 1* (August 1993).

[16] S. Floyd and V. Jacobson, "Link-share and resource management models for packet networks," *IEEE/ACM Transactions on Networking 3* (August 1995).

[17] S. Golestani, "A self-clocked fair queueing scheme for broadband applications," in *IEEE INFOCOM '94* (1994).

[18] P. Goyal and H. Vin, "Generalized guaranteed rate scheduling algorithms: A framework," *IEEE/ACM Transactions on Networking 5* (August 1997).

[19] L. Lenzini, E. Mingozzi, and G. Stea, "Aliquem: a novel DRR implementation to achieve better latency and fairness at O(1) complexity," in *IWQoS'02* (2002).

[20] P. McKenney, "Stochastic fair queueing," *Internetworking: Research and Experience 2* (January 1991).

[21] A. Parekh and R. Gallager, "A generalized processor sharing approach to flow control in integrated services networks: The single node case," *IEEE/ACM Transactions on Networking 1* (1993).

[22] J. Rexford, A. Greenberg, and F. Bonomi, "Hardware-efficient fair queueing architectures for high-speed networks," in *IEEE INFOCOM '96* (1996).

[23] D. Saha, S. Mukherjee, and S. Tripathi, "Carry-over round robin: A simple cell scheduling mechanism for ATM networks," *IEEE/ACM Transactions on Networking 6* (1998).

[24] M. Shreedhar and G. Varghese, "Efficient fair queuing using deficit round robin," in *ACM SIGCOMM '95* (1995).

[25] D. Stephens, J. Bennet, and H. Zhang, "Implementing scheduling algorithms in high-speed networks," *IEEE Journal on Selected Areas in Communications: Special Issue on Next-generation IP Switches and Routers 17* (June 1999).

[26] D. Stiliadis and A. Varma, "Efficient fair queueing algorithms for packet switched networks," *IEEE/ACM Transactions on Networking 6* (April 1998).

[27] D. Stiliadis and A. Varma, "Rate proportional servers: A design methodology for fair queueing algorithms," *IEEE/ACM Transactions on Networking 6* (April 1998).

[28] S. Suri, G. Varghese, and G. Chandranmenon, "Leap forward virtual clock: An O(loglogN) queuing scheme with guaranteed delays and throughput fairness," in *IEEE INFOCOM '97* (1997).

[29] C. Waldspurger, "Lottery and Stride Scheduling: Flexible Proportional-Share Resource Management," PhD thesis, Massachusetts Institute of Technology, 1995.

[30] www.cisco.com, "Cisco GSR."

[31] J. Xu and R. Lipton, "On fundamental tradeoffs between delay bounds and computational complexity in packet scheduling algorithms," in *ACM SIGCOMM '02* (2002).

[32] L. Zhang, "A New Architecture for Packet Switching Network Protocols," PhD thesis, Massachusetts Institute of Technology, 1995.