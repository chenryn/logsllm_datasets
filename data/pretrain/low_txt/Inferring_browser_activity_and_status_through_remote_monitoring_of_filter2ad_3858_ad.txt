### 4.5 Comparison with Timing Attack

We compare our history-stealing attack, which uses storage footprints, with a conventional cache timing attack. Figure 16 provides the JavaScript pseudocode for inferring the browser history of a victim by measuring page load times [21].

To evaluate the inference accuracy of the timing attack, we used the front pages of the top 200 Alexa web sites on a Linux system. The data collection and evaluation methods are the same as those described in §4.3, except that we measure page loading time for the timing attack instead of the peak size of storage footprints.

Figure 17 shows that the inference accuracy of our history-stealing attack using storage footprints is 1.2× (LAN) and 1.4× (Wi-Fi) higher than that of the cache timing attack. Additionally, Figure 17 indicates that the inference accuracy of our history-stealing attack remains unaffected by network conditions, whereas the inference accuracy of the timing attack slightly decreases when the victim's web browser is connected via Wi-Fi.

### 4.6 Login Status Identification

We describe an attack that infers the login status of a victim's web browser by analyzing the peak size of storage footprints. Many websites have personalized web pages whose content changes or is restricted based on whether the browser has logged in. Therefore, we expect that the peak size of storage footprints for such web pages will also vary according to the login status.

Figure 18 illustrates the differences in the peak size of storage footprints for 20 web pages, depending on the login status. These 20 web pages are the front pages of highly ranked Alexa websites. In all cases, we were able to accurately recognize the login status.

Determining whether a victim is logged into specific websites (e.g., company, university, or society websites) allows an attacker to infer the identity and preferences of the victim.

Our goal is to identify the login status of a victim's web browser for 20 popular websites, which are highly ranked on Alexa and for which we already have accounts (see Appendix §A for details).

We measured the peak size of storage footprints when visiting both non-cached and cached web pages, without and with login information, 10 times on a Linux system. The results show that the difference in the peak size of storage footprints is significant enough to reliably determine the login status.