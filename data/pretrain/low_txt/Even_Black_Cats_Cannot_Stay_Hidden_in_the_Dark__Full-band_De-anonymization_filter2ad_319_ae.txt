### IX. Discussion

The Bluetooth (BT) vulnerability we have uncovered poses significant privacy risks, particularly as users increasingly rely on connected devices. The most serious risk is prolonged surveillance, where a user's location can be tracked using concealed wireless equipment once their identity is linked to a BT device they own. For example, road video footage combined with vehicle license plate recognition software could be used to identify a smart car owner and the car's BT address. Consequently, it would be possible to track the individual without expensive video infrastructure, by utilizing only BT sniffers, such as the system we presented.

This approach is feasible if a camera is deployed next to the developed sniffer, pointing towards incoming traffic. By acquiring a video frame every 100 ms, processing it, and discarding the data, character segmentation and optical recognition [24] can be used to detect plate numbers. As the adoption of wearables grows [25], both the risk of surveillance and the potential benefits of passenger flow monitoring in urban settings could be exploited with our BT sniffing (and de-anonymization) system. This would require deploying sniffing infrastructure at strategically selected hubs or checkpoints, such as airport terminals, train stations, road tunnels, or bridge crossings. For instance, there are only 21 main bridges and 16 tunnels that connect Manhattan to other boroughs of New York City and New Jersey. Deploying our system at such locations could provide insights into commuter flows.

### Mitigation

Preserving BT device anonymity would require a new revision of the Bluetooth standard. While it is unreasonable to expect the whitening and HEC generation procedures to be modified, given the number of BT devices already on the market, full address or UAP randomization should be feasible. Cryptographically generated addresses, similar to those used in BLE or proposed for IPv6 [26], could be employed. In this scheme, the 64-bit device identifier would be created using a cryptographic hash of information exchanged by peers during pairing.

### X. Related Work

Connection-oriented Bluetooth tracking was proposed in [27] for room-level indoor localization, with the goal of colleague searching and optimizing building heating/cooling. However, the system only works as long as target devices deliberately perform a one-off registration. Early room-level tracking without explicit user consent exploits the Bluetooth inquiry process (see, e.g., [28], [29]). Bluetooth devices commonly become "undiscoverable" after pairing, which questions the practicality of early tracking approaches. Spill and Bittau investigate the feasibility of eavesdropping on undiscoverable devices and develop the first open-source BT sniffer [30]. This solution is limited to a single channel, relies on cyclic redundancy checks that are not present in many BT profiles (or are encrypted), leading to high false positive and miss detection rates, questioning its practicality, as we have shown. Recent work uses passive sniffing based on Ubertooth together with active inquiry scanning to empirically verify the feasibility of this approach for forensics and surveillance purposes [31]. The value of these findings is limited due to the shortcomings of single-channel sniffing and imprecise detection. A dual-radio Ubertooth setup is used in [32] to jam and predict adaptive hopping sequences, in view of BT/BLE sniffing. De-anonymization is not pursued, unlike in our approach, which does not require active jamming since we can eavesdrop on all channels simultaneously.

Previous work also scrutinizes BLE privacy. Beacons were used to establish a user’s indoor location [33], which, together with physical fingerprinting [34], can underpin user tracking. M. Ryan highlights the simplicity of snooping on BLE by exploiting the advertisement messages sent periodically on dedicated channels [35]. Although the standard introduces address randomization, Fawaz et al. show that more than 200 BLE devices studied reveal their presence to adversaries and propose an external management solution to mitigate this problem [12]. An SDR tool for BLE/Wi-Fi debugging is proposed in [36], where multi-channel capture is considered. BT is, however, substantially different from BLE, and with the advent of SDR platforms and the growing popularity of connected cars and wireless entertainment based on BT, user privacy is at risk, as we have revealed.

### XI. Conclusions

We have practically demonstrated that BT is inadequate for ensuring user identity and location privacy. We proved that, apart from a 1/2 uncertainty about a master’s UAP, which can be resolved through header data inspection, the meaningful part of the master BT address is recoverable with a limited number of packets and without requiring to examine the frames’ payloads, which can be encrypted. We empirically proved the benefits of capturing the entire BT spectrum with a full-band SDR system that we developed. With the decreasing costs of SDR platforms, BT sniffing will no longer be confined to single-channel sniffing. As such, user privacy is at risk and calls for revising the Bluetooth specification.

### Acknowledgements

This material is based upon work partially supported by Arm Ltd, the National Science Foundation under Grant NSF/DGE-1661532, and the European Commission (EC) in the framework of the H2020-ICT-2016-2017 project ORCA (Grant agreement no. 732174).

### References

[1] E. C. Jimenez, P. K. Nakarmi, M. Naslund, and K. Norrman. Subscription identifier privacy in 5G systems. In 2017 International Conference on Selected Topics in Mobile and Wireless Networking, MoWNeT 2017, 2017.
[2] C. Sørseth, S. X. Zhou, S. F. Mjølsnes, and R. F. Olimid. Experimental analysis of subscribers’ privacy exposure by LTE paging. Wireless Personal Communications, 109(1):675–693, 2019.
[3] S. F. Mjølsnes and R. F. Olimid. Experimental assessment of private information disclosure in LTE mobile networks. In ICETE 2017 - Proceedings of the 14th International Joint Conference on e-Business and Telecommunications, volume 4, pages 507–512, 2017.
[4] Bloomberg. Euclid Analytics Inc - Company profile and news, Accessed: Sept. 2019.
[5] Wired. Tracking devices hidden in London’s recycling bins are stalking your smartphone, August 2013.
[6] Arstechnica. iOS 8 to stymie trackers and marketers with MAC address randomization, June 2014.
[7] Kassem Fawaz and Kang G Shin. Location privacy protection for smartphone users. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security, pages 239–250. ACM, 2014.
[8] United States Senate Judiciary Committee. Location Privacy Protection Act of 2014, June 2014.
[9] Official Journal of the European Union. Regulation (EU) 2016/679 of the European Parliament and of the Council of 27 April 2016 on the protection of natural persons with regard to the processing of personal data and on the free movement of such data, and repealing Directive 95/46/EC (General Data Protection Regulation), May 2016.
[10] Bluetooth SIG, Inc. Bluetooth Market update, 2019.
[11] Bluetooth SIG, Inc. Bluetooth Core Specification v5.1, Jan. 2019.
[12] Kassem Fawaz, Kyu-Han Kim, and Kang G. Shin. Protecting privacy of BLE device users. In USENIX Security, August 2016.
[13] A. Dabrowski, N. Pianta, T. Klepp, M. Mulazzani, and E. Weippl. IMSI-catch me if you can: IMSI-catcher-catchers. In ACM International Conference Proceeding Series, volume 2014-December, pages 246–255, 2014.
[14] S. Park, A. Shaik, R. Borgaonkar, and J. . Seifert. Anatomy of commercial IMSI catchers and detectors. In Proceedings of the ACM Conference on Computer and Communications Security, pages 74–86, 2019.
[15] Ellisys. Bluetooth analyzers comparison chart. https://www.ellisys.com/products/btcompare.php, Accessed: Sept. 2019.
[16] Frontline. Sodera Wide Band Bluetooth Protocol Analyzer. http://www.fte.com/products/sodera.aspx, Accessed: Sept. 2019.
[17] Project ubertooth. http://ubertooth.sourceforge.net/, Accessed: June 2019.
[18] Photosware. The Photos Project. https://github.com/pothosware/PothosCore, Accessed: June 2019.
[19] gr-bluetooth. Bluetooth for GNU Radio. http://gr-bluetooth.sourceforge.net/, Accessed: June 2019.
[20] R. H. Barker. Group synchronizing of binary digital sequences. Communication Theory, pages 273–287, 1953.
[21] L.H. Charles Lee. Error-Control Block Codes for Communications Engineers. Artech House, 2000.
[22] Alan V. Oppenheim, Alan S. Willsky, and Ian T. Young. Signals and Systems (2nd Edition). Pearson, 1996.
[23] F. J. Harris, C. Dick, and M. Rice. Digital receivers and transmitters using polyphase filter banks for wireless communications. IEEE Transactions on Microwave Theory and Techniques, 51(4):1395–1412, April 2003.
[24] Tesseract Open Source OCR Engine. Accessed: Oct. https://github.com/tesseract-ocr/tesseract, 2019.
[25] Mordor Intelligence. Smart Wearable Market - Growth, Trends, and Forecast (2019 - 2024). 2019.
[26] Tuomas Aura. Cryptographically generated addresses (CGA). In International Conference on Information Security, pages 29–43. Springer, 2003.
[27] Simon Hay and Robert Harle. Bluetooth tracking without discoverability. In Proc. International Symposium on Location and Context Awareness (LoCA), Tokyo, Japan, May 2009.
[28] Mortaza S. Bargh and Robert de Groote. Indoor localization based on response rate of Bluetooth inquiries. In Proc. ACM International Workshop on Mobile Entity Localization and Tracking in GPS-less Environments, MELT '08, pages 49–54, San Francisco, California, USA, 2008.
[29] V. Kostakos. Using Bluetooth to capture passenger trips on public transport buses. Personal and Ubiquitous Computing, pages 1–13, 2008.
[30] Dominic Spill and Andrea Bittau. Bluesniff: Eve meets Alice and Bluetooth. In USENIX WOOT, 2007.
[31] M. Chernyshev, C. Valli, and M. Johnstone. Revisiting Urban War Nibbling: Mobile Passive Discovery of Classic Bluetooth Devices Using Ubertooth One. IEEE Transactions on Information Forensics and Security, 12(7):1625–1636, July 2017.
[32] Wahhab Albazrqaoe, Jun Huang, and Guoliang Xing. Practical Bluetooth traffic sniffing: Systems and privacy implications. In Proc. ACM MobiSys, 2016.
[33] S. Kajioka, T. Mori, T. Uchiya, I. Takumi, and H. Matsuo. Experiment of indoor position presumption based on RSSI of Bluetooth LE beacon. In Proc. IEEE Global Conference on Consumer Electronics (GCCE), Oct 2014.
[34] Tien Dang Vo-Huu, Triet Dang Vo-Huu, and Guevara Noubir. Fingerprinting Wi-Fi Devices Using Software Defined Radios. In Proc. ACM WiSec, 2016.
[35] Mike Ryan. Bluetooth: With low energy comes low security. In USENIX Workshop on Offensive Technologies, Washington, D.C., 2013.
[36] Francesco Gringoli, Nahla Ali, Fabrizio Guerrini, and Paul Patras. A flexible framework for debugging IoT wireless applications. In IEEE Workshop on Metrology for Industry 4.0 and IoT, 2018.
[37] B. S. Peterson, R. O. Baldwin, and J. P. Kharoufeh. Bluetooth inquiry time characterization and selection. IEEE Transactions on Mobile Computing, 5(9):1173–1187, Sept 2006.

### Appendix

#### A. Bluetooth Protocol Operation

We briefly describe basic concepts that we use to explain our device address de-anonymization attack.

**a) Physical Layer:**
BT adopts a Frequency-hopping Spread Spectrum (FHSS) channel access scheme. The 2.4 GHz band is divided into 79 contiguous channels, each of 1 MHz. Data frames are modulated using binary GFSK after bits are obfuscated through a whitening procedure. By this, data is passed through an LFSR initialized with part of the internal clock.

All BT frames start with an Access Code followed by a header. Different types of frames are defined for different services (e.g., keep-alive, audio streaming, etc.), each of which has specific FEC following the header that is protected with Hamming codes. As we show, we exploit the header protection mechanism to reverse the obfuscation applied over the entire frame.

**b) MAC Layer:**
Throughout the different phases a BT device undergoes when communicating, from advertising (i.e., when a device is "discoverable" or "scannable"), to scanning, and data exchange, it hops across different channels 1,600 times per second. The exact hopping sequence is negotiated and shared by actively communicating devices. Each piece of BT equipment is identified by a 6-byte MAC address that does not change over time. This address is logically divided into three parts: a 2-byte NAP, a 1-byte UAP, and a 3-byte LAP. Devices form "piconets," where a master periodically polls slaves and all the frames exchanged contain the LAP of the master.

**c) Network Formation:**
A master establishing a piconet initiates a discovery procedure to identify and connect to other devices within range. For this, the master broadcasts inquiries over 32 wake-up carriers, which are equally spaced in the 79 MHz range, hopping following a pseudo-random sequence derived from its MAC address. Such packets are identified by an Inquiry Access Code (IAC) that is known to all devices.

All devices listen periodically (every 1.28 s) for inquiries on a single frequency chosen from the set of 32 wake-up carriers, for a total duration of 11.25 ms. This "inquiry scanning" frequency also changes, according to the device’s own hopping sequence. When receiving an inquiry frame, a device enters a back-off procedure and remains on the channel where the inquiry was received, for a random number of time slots uniformly distributed in the [0, 1024) range (to reduce the probability of collision with others that have received the same inquiry). After back-off, the device returns to inquiry scan mode and, upon receiving a second inquiry, it replies in the next slot with a Frequency Hopping Synchronization (FHS) message, which contains the address of the device and its clock offset [37]. Note that non-discoverable devices may no longer respond to inquiries after establishing communication with a master.

If an inquiry is successful, the master enters a paging mode and hops on a sequence derived from the slave’s address, sending a page message to the device it wants to connect to. This contains a so-called Device Access Code (DAC) derived from the lower 24 bits of the paged device’s address. An acknowledgment is sent back, which contains the slave ID. The master then sends an FHS frame, which the slave will use to subsequently follow the master’s hopping sequence; this is computed based on the master’s UAP and part of its clock. This sequence is confirmed with another page response. The master then assigns a 3-bit AMA to the slave, and the connection is established.

#### B. Privacy Infringements on the Move

Another experiment we conducted involved deploying our sniffing system inside a car, with the antenna pointing opposite to the direction of movement, while driving on the highway. Our aim was to assess how many unique UAPs an attacker could infer under different traffic conditions, as the sniffing system moves with speeds ranging between 5 and 120 km/h depending on road congestion levels, and to verify how often we identify the same target, thereby offering perspectives on the surveillance risks to which connected cars are exposed through the de-anonymization attack we uncovered.

Figure 16 illustrates our findings. Over the entire travel duration, our system was able to detect over 250 distinct BT-powered cars. More importantly, during periods when traffic is slow, we can re-identify several targets multiple times. This highlights the potential of employing the privacy attack we uncovered to follow targets while remaining visually undetectable, as many of these vehicles are hundreds of meters away from the sniffer, mostly not within line of sight.

![Unique UAPs detected at different times during an approximately 2.5-hour drive on the highway.](path_to_image.png)

Figure 16: Unique UAPs detected at different times during an approximately 2.5-hour drive on the highway.