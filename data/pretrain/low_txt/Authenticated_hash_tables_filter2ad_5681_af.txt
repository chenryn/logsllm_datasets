To conduct a comprehensive evaluation of our scheme, we set the parameters as follows: ǫ = 0.1, 0.125, 0.3, and 0.5 (corresponding to RSA trees with 10, 8, 3, and 2 levels, respectively) and κ = 1 (each bucket contains log n elements). Table 2 presents the performance metrics for a hash table containing 100,000,000 elements, where we vary the value of ǫ, which directly influences the number of levels in the RSA tree.

From this, we can draw the following observations:
- As ǫ increases, both the verification and update times decrease, as they are inversely proportional to ǫ.
- Conversely, the query time increases due to the larger internal nodes of the tree, necessitating more exponentiation operations.
- In terms of communication cost, our system is highly efficient, with a maximum of 1.90KB of data needing to be transmitted.

Figure 2 illustrates how the query time scales with an increasing number of elements in the hash table. Specifically, for ǫ = 0.1, the query time scales efficiently. For a hash table with 100,000,000 elements, the time to generate a proof for an element is approximately 100ms. In Figure 2, we use the values κ = 1 and κ = opt (see the previous paragraph for details on how κ = opt is determined). The query time for κ = opt is around 70ms.

Figure 3 compares the query time of our scheme with that of [GTH] for different values of ǫ and κ. Our scheme (with ǫ = 0.1, κ = 1) and (with ǫ = 0.1, κ = opt) outperforms [GTH] (with ǫ = 0.1) and (with ǫ = 0.2).

Next, we compare our scheme with the scheme from [GTH], which uses the RSA accumulator and relies on the strong RSA assumption for security. As shown in Table 1, their query time, update authentication information, and update time are O(nǫ) for some constant 0 < ǫ < 1. In contrast, our scheme demonstrates that the update cost is O(1) while the query cost is O(nǫ/ logκǫ n). A significant open problem is to reduce these bounds to O(log n) while maintaining all other complexity measures constant. Additionally, it would be valuable to explore whether there exists a solution for authenticating hash tables with constant complexities. This also suggests a direction for studying lower bounds for set-membership authentication, given a cryptographic primitive or authentication model, what is the best achievable complexity while ensuring provable security? This work indicates a trade-off between security and complexity, which could be a starting point for further research. Finally, it would be interesting to investigate non-amortized results for Theorem 7.

**Acknowledgments**

This research was supported by the U.S. National Science Foundation under grants IIS–0713403 and OCI–0724806, the Center for Geometric Computing and the Kanellakis Fellowship at Brown University, and the Center for Algorithmic Game Theory at the University of Aarhus, funded by the Carlsberg Foundation. The views expressed in this paper do not necessarily reflect those of the sponsors. We thank Michael Goodrich, Anna Lysyanskaya, John Savage, and Ioannis Vergados for their valuable discussions, and Chris Erway for providing pointers to the NTL library.

**References**

[1] G. Ateniese, R. Burns, R. Curtmola, J. Herring, L. Kissner, Z. Peterson, and D. Song. Provable Data Possession at Untrusted Stores. In Proc. ACM Conf. on Computer and Communications Security (CCS), pp. 598-609, 2007.
[2] N. Baric and B. Pfitzmann. Collision-Free Accumulators and Fail-Stop Signature Schemes Without Trees. In Proc. EUROCRYPT, pp. 480-494, 1997.
[3] J. Benaloh and M. de Mare. One-Way Accumulators: A Decentralized Alternative to Digital Signatures. In Proc. EUROCRYPT, pp. 274-285, 1993.
[4] M. Blum, W. Evans, P. Gemmell, S. Kannan, and M. Naor. Checking the Correctness of Memories. In Proc. IEEE Symp. on Foundations of Computer Science (FOCS), pp. 90-99, 1991.
[5] A. Buldas, P. Laud, and H. Lipmaa. Accountable Certificate Management Using Undeniable Attestations. In Proc. ACM Conf. on Computer and Communications Security (CCS), pp. 9-18, 2000.
[6] J. Camenisch and A. Lysyanskaya. Dynamic Accumulators and Application to Efficient Revocation of Anonymous Credentials. In Proc. CRYPTO, pp. 61-76, 2002.
[7] I. L. Carter and M. N. Wegman. Universal Classes of Hash Functions. In Proc. ACM Symp. on Theory of Computing (STOC), pp. 106-112, 1977.
[8] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein. Introduction to Algorithms. MIT Press, Cambridge, MA, 2nd edition, 2001.
[9] M. Dietzfelbinger, A. Karlin, K. Mehlhorn, F. Meyer auf der Heide, H. Rohnert, and R. E. Tarjan. Dynamic Perfect Hashing: Upper and Lower Bounds. SIAM J. Comput., 23:738-761, 1994.
[10] C. Dwork, M. Naor, G. N. Rothblum, and V. Vaikuntanathan. How Efficient Can Memory Checking Be? Manuscript, 2008.
[11] R. Gennaro, S. Halevi, and T. Rabin. Secure Hash-and-Sign Signatures Without the Random Oracle. In Proc. EUROCRYPT, pp. 123-139, 1999.
[12] M. T. Goodrich, C. Papamanthou, and R. Tamassia. On the Cost of Persistence and Authentication in Skip Lists. In Proc. Workshop on Experimental Algorithms (WEA), pp. 94-107, 2007.
[13] M. T. Goodrich, C. Papamanthou, R. Tamassia, and N. Triandopoulos. Athos: Efficient Authentication of Outsourced File Systems. In Proc. Information Security Conf. (ISC), pp. 80-96, 2008.
[14] M. T. Goodrich, R. Tamassia, and J. Hasic. An Efficient Dynamic and Distributed Cryptographic Accumulator. In Proc. Information Security Conf. (ISC), pp. 372-388, 2002.
[15] M. T. Goodrich, R. Tamassia, and A. Schwerin. Implementation of an Authenticated Dictionary with Skip Lists and Commutative Hashing. In Proc. DARPA Information Survivability Conference and Exposition II (DISCEX II), pp. 68-82, 2001.
[16] M. T. Goodrich, R. Tamassia, and N. Triandopoulos. Super-Efficient Verification of Dynamic Outsourced Databases. In Proc. CT-RSA, pp. 407-424, 2008.
[17] M. T. Goodrich, R. Tamassia, N. Triandopoulos, and R. Cohen. Authenticated Data Structures for Graph and Geometric Searching. In Proc. CT-RSA, pp. 295-313, 2003.
[18] A. Hutflesz, H.-W. Six, and P. Widmayer. Globally Order Preserving Multidimensional Linear Hashing. In Proc. IEEE Int. Conf. on Data Engineering (ICDE), pp. 572-579, 1988.
[19] C. M. Kenyon and J. S. Vitter. Maximum Queue Size and Hashing with Lazy Deletion. Algorithmica, 6:597–619, 1991.
[20] J. Li, N. Li, and R. Xue. Universal Accumulators with Efficient Nonmembership Proofs. In Proc. Applied Cryptography and Network Security (ACNS), pp. 253-269, 2007.
[21] N. Linial and O. Sasson. Non-Expansive Hashing. In Proc. ACM Symp. on Theory of Computing (STOC), pp. 509-517, 1996.
[22] C. Martel, G. Nuckolls, P. Devanbu, M. Gertz, A. Kwong, and S. G. Stubblebine. A General Model for Authenticated Data Structures. Algorithmica, 39(1):21–41, 2004.
[23] R. C. Merkle. A Certified Digital Signature. In Proc. CRYPTO, pp. 218–238, 1989.
[24] J. K. Mullin. Spiral Storage: Efficient Dynamic Hashing with Constant-Performance. Computer J., 28:330–334, 1985.
[25] M. Naor and K. Nissim. Certificate Revocation and Certificate Update. In Proc. USENIX Security Symposium, pp. 217-228, 1998.
[26] L. Nguyen. Accumulators from Bilinear Pairings and Applications. In Proc. CT-RSA, pp. 275-292, 2005.
[27] G. Nuckolls. Verified Query Results from Hybrid Authentication Trees. In Proc. Data and Applications Security (DBSec), pages 84–98, 2005.
[28] C. Papamanthou and R. Tamassia. Time and Space Efficient Algorithms for Two-Party Authenticated Data Structures. In Proc. Int. Conf. on Information and Communications Security (ICICS), pp. 1-15, 2007.
[29] T. Sander. Efficient Accumulators Without Trapdoor (Extended Abstract). In Proc. Int. Conf. on Information and Communications Security (ICICS), pp. 252-262, 1999.
[30] T. Sander, A. Ta-Shma, and M. Yung. Blind, Auditable Membership Proofs. In Proc. Financial Cryptography (FC), pp. 53-71, 2000.
[31] V. Shoup. NTL: A Library for Doing Number Theory. http://www.shoup.net/ntl/.
[32] R. Tamassia. Authenticated Data Structures. In Proc. European Symp. on Algorithms (ESA), pp. 2-5, 2003.
[33] R. Tamassia and N. Triandopoulos. Computational Bounds on Hierarchical Data Processing with Applications to Information Security. In Proc. Int. Colloquium on Automata, Languages and Programming (ICALP), pp. 153-165, 2005.
[34] R. Tamassia and N. Triandopoulos. Efficient Content Authentication in Peer-to-Peer Networks. In Proc. Applied Cryptography and Network Security (ACNS), pp. 354-372, 2007.
[35] P. Wang, H. Wang, and J. Pieprzyk. A New Dynamic Accumulator for Batch Updates. In Proc. Int. Conf. on Information and Communications Security (ICICS), pp. 98-112, 2007.