### 优化后的文本

如果我能在两周内开发出一张软盘，并在上面实现“run checkbook”功能，那么他们就得带我去拉斯维加斯。如果他们要在展览会上介绍这张软盘，也必须带上我。为此，我每天都在工作，不分昼夜、元旦或圣诞节，每一天都在努力。

**00:14:59**：
起初，我将注意力集中在 Shugart 公司的五英寸软盘上。我对它进行了仔细研究，在脑海中对其进行了逆向工程。我意识到，它需要的是每 4 微秒传输一次的大块数据（0 和 1）。我决定使用一根线从我的计算机上提供这些数据。因此，我拆除了所有 Shugart 数字芯片和步进电机控制芯片，这些芯片用于在轨道之间切换。每个相位之间的间隔是 A、B、C、D 相位，依次为第一轨道、第二轨道和第三轨道。我一开始去掉了他们的 20 块芯片，并对自己说：“我只需要使用尽可能少的电路。”

**00:15:36**：
最终，我想到了一个解决方案：使用 7 块价值 1 美元的小芯片，可以在 4 微秒内写入这些数据位，以满足软盘的规格。我的计算机可以通过软件计算出需要发送的 0 和 1。然而，更困难的是读取数据。当我将数据写入软盘时，我可以用示波器看到信号的高低变化，但我不知道它在哪里开始和停止。现在我需要读取它。

**00:16:04**：
为了读取数据，当有一个比特进来时，你需要等待 4 或 8 微秒内的信号切换。大约 6 微秒后，你可以内置计时器来判断信号是从高到低还是从低到高。这可能需要 10 到 20 个芯片。我在大学三年级时学习了状态机课程，状态机通常有一个地址来标识当前的位置或状态号。我想到可以使用一个 256 * 8 的 ROM 芯片。

**00:16:48**：
我会把地址放在状态机中，以确定其当前位置，并放入软盘读取头读取的比特。ROM 决定下一个状态，然后输出相应的比特。在 7 MHz 的条件下，我可以在 28 个周期内完成这一过程，相当于 4 微秒的时间。它可以进入阶段 1、阶段 2、阶段 3……直到阶段 28，最后在阶段 40 左右，它会做出决定：是否得到了脉冲？是将 0 还是 1 移到寄存器中并放入计算机中。

**00:17:23**：
整个读取过程只需要两块芯片。回顾过去，我不清楚当时那些奇妙的想法是如何涌现的。我只是专注于解决问题，尽量减少所需的零件数量。我有一个名叫 Randy Wigginton 的高中生程序员，他一直在协助我。当我完成这项工作后，不禁问道：“为什么 Altair 和 S-100 计算机的电路板如此庞大？”
我拿出了一张 North Star 的 8 英寸软盘电路板，发现上面有 50 个芯片，而我的只有 8 个，却能控制两个软盘驱动器并正常工作。我们在展会上展示了它。我去了拉斯维加斯，还教我的高中朋友 Randy 玩骰子，结果他还赢了我 35 美元。这是一个巨大的进步，因为对用户来说，能够运行程序是一个巨大的飞跃。

**00:18:21 - Saron Yitbarek**：
在第 6 集中，我们了解了新一代创客，即开源硬件运动背后的人们。这一运动被比作“自制计算机俱乐部”以及当时进行的所有合作与创新。我们问沃兹，他对硬件领域再次产生的创造力和开放性有何看法。

**00:18:44 - 史蒂夫·沃兹尼亚克**：
我认为这是非常好的。你应该总是制作一些东西，并分享你的成果，让别人能够运用自己的技能和经验将其扩展到新的领域，而不仅仅局限于你最初设想的应用。我完全支持这一点。现在很多嵌入式处理器，有人制作了一种微处理器，实际上像是一张名片，厚度薄到只有一块扁平芯片，还可以插入 USB 接口。他用 2 美元建造了一台完整的 Linux 计算机。

**00:19:17**：
这些非常令人兴奋。我做了一个 PDP-8 小型计算机套件，他们称之为 PiDP-8。树莓派是计算机，而这个套件有旧式 PDP-8 的所有灯和开关，可以运行当时的 PDP-8 程序。PDP-8 最大内存只有 4K，这就是你如何让它与其他设备连接的方式。现在的处理器是树莓派里面的软件。你可以将树莓派与传感器和输出设备连接起来，人们就会想要进行实验和探索。

**00:19:52**：
回到构建某些复古计算机的过程中，肯定会教你如何将硬件连接到硬件，如何将其连接，以及如何使用它来做更多的事情。我能做什么还没做的事情？可能有点不同。这就是我喜欢的。独立的人，往往是学生。我想要学习，尝试一些对生活没有任何实际价值的东西。我回顾了一系列项目，可能有 10 或 15 个项目，没有任何实际价值。它们只是我觉得有趣的事情：“也许我可以做这个，我会尝试把它放在一起，我会把它构建起来。”如果你知道芯片的内部构造方式，就可以弄清整个电路是如何工作的。

**00:20:28 - Saron Yitbarek**：
作为苹果公司的创始人之一，史蒂夫·沃兹尼亚克是现代科技的象征。但是对他来说，成功与名气无关。最重要的是让他的工作被看到，而工作始于命令行。

**00:20:45 - 史蒂夫·沃兹尼亚克**：
在我的一生中，甚至在苹果公司之前，我为公司做了很多项目，比如第一个酒店电影系统，电视台使用的磁带时间码等。我一直以我的工程为荣。我希望其他工程师能看到我的作品，因为他们可以看到普通人看不到的东西。不是它做了什么，而是它是如何构造的。我想让他们看到它，为我的工程技能而惊叹。

**00:21:14**：
最近，我获得了 IEEE 奖金。这是你一生中能得到的其他工程师对电子工程的最高认可。几乎让我热泪盈眶。这就是我想要的。不是创办一家公司，不是开创一个行业，而是想以一个伟大的工程师而闻名。现在工程师们可以看到我做了什么，但他们不能看着我的原理图和代码说，“你是怎么写这些代码的？”

**00:21:41**：
这是我一生中获得的最有意义的奖项之一。因为那是我一直想要的，没有人知道。每个人都认为，“哦，我的第一台电脑是 Apple II，我在上面做这个做那个，在学校里运行这些程序，哇，是你设计了它！”那很酷。但他们不是从工程的角度来看的。

**00:21:58 - Saron Yitbarek**：
谢谢你，史蒂夫·沃兹尼亚克，感谢你参加我们的《代码英雄》访谈。在这一季结束之前，我想请一位特别嘉宾来告诉大家第五季的情况。

**00:22:10 - Clive Thompson**：
我是克莱夫·汤普森，《程序员》一书的作者。在第五季中，我将会是 Saron 旁边的嘉宾，讲述开发者的职业生涯。不要错过它。

**00:22:21 - Saron Yitbarek**：
《代码英雄》是红帽的原创播客。请访问 [redhat.com/commandlineheroes](https://www.redhat.com/commandlineheroes) 来看看我们对你在上一季听到的硬件的所有出色研究。我是 Saron Yitbarek，

**00:22:34 - 史蒂夫·沃兹尼亚克**：
我是史蒂夫·沃兹尼亚克。生命不息，编码不止。

> **什么是 LCTT SIG 和 LCTT LCRH SIG**
>
> LCTT SIG 是 LCTT 特别兴趣小组 (Special Interest Group)，LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
>
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
>
> 本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出
>
> via: 
>
> 作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[xiao-song-123](https://github.com/xiao-song-123) 校对：[pityonline](https://github.com/pityonline), [wxy](https://github.com/wxy)