### 4.5 更新传播

接下来，我们研究CoDoNS在主动更新传播过程中产生的延迟。图9显示了向不同级别复制的资源记录分发更新时所经历的延迟。即使对于在系统中所有节点上复制的level-0记录，98%的副本也能在一秒钟内完成更新。

由于网络延迟和某些主机负载的高方差，部分副本可能需要几秒钟才能完成更新。从主节点开始，更新99%的一跳距离内的副本大约需要一秒钟。总体而言，CoDoNS中的更新传播延迟取决于记录的复制程度。在最坏的情况下，更新所有节点需要log N跳。

通过在一个行星规模的部署中对真实工作负载进行性能测量，结果表明CoDoNS可以为查询解析提供低延迟。对于最受欢迎的记录进行大规模复制，但每个服务器上的副本数量适中，从而在低开销下实现高性能。消除静态查询处理层次结构并将负载动态分配到对等节点上，大大降低了CoDoNS遭受拒绝服务攻击的脆弱性。自组织和持续适应性的复制避免了在突发流量情况下出现瓶颈。主动更新传播确保未预见的变化能够迅速传播并在系统中缓存。

### 4.6 总结

### 5. 相关工作

许多研究人员已经广泛研究了传统DNS的性能，并提出了新的机制来改进其性能。在本节中，我们将讨论过去测量和改进传统DNS的方法。

#### 性能研究
1988年，Mockapetris和Dunlap发表了关于传统DNS发展的回顾性研究，指出了其成功的特点和不足之处[27]。此后，多项测量研究提供了对该系统优缺点的良好见解。Pappas等人[29]最近的一项调查研究了无效委派、循环依赖和名称服务器冗余减少对传统DNS性能的影响；他们的发现与我们的调查结果一致。Danzig等人[10]和Brownlee等人[4, 5]分析了根和gTLD名称服务器上的DNS流量。Huitema等人[16]和Wills等人[41]从客户端角度研究了DNS性能。Jung等人[18, 19]详细研究了客户端体验的性能以及传统DNS中缓存的有效性。这些研究为我们设计和优化CoDoNS提供了宝贵的见解。

#### 设计替代方案
最近，一些方案被提出以提高DNS的故障恢复能力和查找性能。Cohen和Kaplan[8]提出了一种用于DNS记录的主动缓存方案。在他们的方案中，缓存中过期的DNS记录会从权威名称服务器主动获取。他们分析了几种基于启发式的预取算法，并评估了它们的性能。该方案涉及中间缓存的预取，这会产生大量的后台流量来更新DNS记录。相比之下，CoDoNS仅在主节点上获取每个记录一次，显著减少了对传统DNS的开销。

CoDNS[30]通过将查询转移到其他健康的解析器上来掩盖由本地解析器故障引起的传统DNS延迟。CoDNS提供了针对传统DNS临时问题的弹性，但并不打算作为替代品。DDNS[9]和Overlook[37]是旨在增强容错性和负载均衡特性的对等名称服务。DDNS在Chord[36]（一种基于一致哈希的O(log N)查找时间结构化DHT）之上实现了传统DNS功能。Overlook是在Pastry[34]之上的通用名称服务。两者都因请求通过O(log N)个覆盖层跳转而产生较高的查找延迟。Beehive提供了一个复制框架，使CoDoNS能够实现O(1)的查找性能。

一些研究人员提议用扁平的全局标识符替换分层的DNS和URL命名空间[39]。CoDoNS可以用来将这些标识符高效地映射到物理位置或其内容。

#### 结构化DHT
除了Chord和Pastry之外，近年来还提出了多种结构化DHT。CAN[33]将对象和节点映射到d维环面上，提供O(dN^d)的延迟。Tapestry[42]使用一致哈希[20]将对象映射到节点，并使用前缀匹配[31]在O(log N)跳转中路由查找。Kademlia[24]使用类似的搜索技术，但使用XOR度量进行路由，提供O(log N)的查找性能。SkipNet[15]使用跳跃列表提供O(log N)的概率查找保证。Viceroy[23]使用常数度路由图提供O(log N)的查找性能。一些DHT使用De Bruijn图[21, 40]来实现O(log N / log log N)的查找性能。这些DHT提供的多跳查找性能不足以支持像DNS这样的性能敏感应用。

最近的一些DHT通过增加存储和带宽消耗来提供O(1)的查找性能。Kelips[13]通过在O(pN)个节点上复制每个对象并使用基于流言协议管理复制，将查找延迟限制在一到两跳。另一种实现单跳查找的方法描述于[14]，依赖于在每个节点上维护完整的路由状态（即系统的完整成员描述）。这种方法的空间和带宽成本随网络规模线性增长。Farsite[11]也使用固定深度层次结构在恒定数量的跳转中路由，但没有解决快速成员变化的问题。总体而言，这些DHT至少有一个覆盖层跳转的最小延迟，而CoDoNS可以将平均查找时间减少到不到一个跳转。

### 6. 结论

域名系统是互联网的关键组成部分。随着互联网命名空间的增长、联网主机数量的爆炸性增长以及大规模协调攻击的出现，传统的分层静态架构的域名系统已经不堪重负。DNS容易受到拒绝服务攻击，查询解析和更新传播的延迟较高，存在配置错误，并且难以管理。

本文提出了一种新的DNS替代方案——CoDoNS。CoDoNS保留了DNS设计中最成功的部分，包括命名空间的分层划分、不同层次的独立管理和通用数据库接口。CoDoNS结合了对等覆盖网络和分析驱动的主动缓存，提供了一种替代的DNS基础设施。它能够抵御拒绝服务攻击，绕过故障自动分配负载，支持快速更新，并迅速适应突发流量。通过加密委派，CoDoNS将名称服务与名称服务器的物理位置解耦，并创建了一个竞争性的名称服务市场。在PlanetLab上使用真实DNS工作负载进行的性能测量表明，CoDoNS可以在适度的存储和带宽开销下显著提高传统DNS的查找性能。

CoDoNS为名称所有者提供了一个高效发布和管理数据的新平台。我们当前的实现和部署提供了一个简单的增量迁移路径，从传统DNS过渡到CoDoNS提供的性能和功能。在此过程中，CoDoNS可以作为传统DNS的安全网。

### 致谢

感谢Robert Morris、Hari Balakrishnan、Jaeyon Jung和Emil Sit提供的DNS跟踪数据。

### 参考文献

[1] M. Andrews. Negative Caching of DNS Queries. RFC 2308, Mar 1998.

[2] A. Bavier, M. Bowman, B. Chun, D. Culler, S. Karlin, S. Muir, L. Peterson, T. Roscoe, T. Spalink, and M. Wawrzoniak. Operating System Support for Planetary-Scale Network Services. Symposium on Networked Systems Design and Implementation, San Francisco CA, Mar 2004.

[3] T. Brisco. DNS Support for Load Balancing. RFC 1794, Apr 1995.

[4] N. Brownlee, kc Claffy, and E. Nemeth. DNS Measurements at a Root Server. GlobeCom, San Antonio, TX, Nov 2001.

[5] N. Brownlee, kc Claffy, and E. Nemeth. DNS Root/gTLD Performance Measurements. Systems Administration Conference, San Diego CA, Dec 2001.

[6] L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker. Web Caching and Zipf-like Distributions: Evidence and Implications. International Conference on Computer Communications, New York NY, Mar 1999.

[7] M. Castro, P. Druschel, A. Ganesh, A. Rowstron, and D. Wallach. Secure Routing for Structured Peer-to-Peer Overlay Networks. Symposium on Operating Systems Design and Implementation, Boston MA, Dec 2002.

[8] E. Cohen and H. Kaplan. Proactive Caching of DNS Records: Addressing a Performance Bottleneck. Symposium on Applications and the Internet, San Diego-Mission Valley CA, Jan 2001.

[9] R. Cox, A. Muthitacharoen, and R. Morris. Serving DNS using a Peer-to-Peer Lookup Service. International Workshop on Peer-To-Peer Systems, Cambridge MA, Mar 2002.

[10] P. Danzig, K. Obraczka, and A. Kumar. An Analysis of Wide-Area Nameserver Traffic: A Study of the Internet Domain Name System. SIGCOMM, Baltimore MD, 1992.

[11] J. Douceur, A. Adya, W. Bolosky, D. Simon, and M. Theimer. Reclaiming Space from Duplicate Files in a Serverless Distributed File System. International Conference on Distributed Computing Systems, Vienna Austria, Jul 2002.

[12] D. Eastlake. Domain Name System Security Extensions. RFC 2535, Mar 1999.

[13] I. Gupta, K. Birman, P. Linga, A. Demers, and R. van Renesse. Kelips: Building an Efficient and Stable P2P DHT Through Increased Memory and Background Overhead. International Workshop on Peer-To-Peer Systems, Berkeley CA, Feb 2003.

[14] A. Gupta, B. Liskov, and R. Rodrigues. Efficient Routing for Peer-to-Peer Overlays. Symposium on Networked Systems Design and Implementation, San Francisco CA, Mar 2004.

[15] N. Harvey, M. Jones, S. Saroiu, M. Theimer, and A. Wolman. SkipNet: A Scalable Overlay Network with Practical Locality Properties. Symposium on Internet Technologies and Systems, Seattle WA, Mar 2003.

[16] C. Huitema and S. Weerahandi. Internet Measurements: The Rising Tide and the DNS Snag. ITC Specialist Seminar on Internet Traffic Measurement and Modeling, Monterey CA, Sep 2000.

[17] Internet Systems Consortium. BIND Vulnerabilities. www.isc.org/sw/bind/bind-security.php, Feb 2004.

[18] J. Jung, E. Sit, H. Balakrishnan, and R. Morris. DNS Performance and Effectiveness of Caching. SIGCOMM Internet Measurement Workshop, San Francisco CA, Nov 2001.

[19] J. Jung, A. Berger, and H. Balakrishnan. Modeling TTL-based Internet Caches. International Conference on Computer Communications, San Francisco CA, Mar 2003.

[20] D. Karger, E. Lehman, T. Leighton, M. Levine, D. Lewin, and R. Panigrahy. Consistent Hashing and Random Trees: Distributed Caching Protocols for Relieving Hot-spots on the World Wide Web. Symposium on Theory of Computing, El Paso TX, Apr 1997.

[21] F. Kaashoek and D. Karger. Koorde: A Simple Degree-Optimal Distributed Hash Table. International Workshop on Peer-To-Peer Systems Workshop, Berkeley CA, Feb 2003.

[22] A. Kumar, J. Postel, C. Neuman, P. Danzig, and S. Miller. Common DNS Implementation Errors and Suggested Fixes. RFC 1536, Oct 1993.

[23] D. Malkhi, M. Naor, and D. Ratajczak. Viceroy: A Scalable and Dynamic Emulation of the Butterfly. Symposium on Principles of Distributed Computing, Monterey CA, Aug 2002.

[24] P. Maymounkov and D. Mazières. Kademlia: A Peer-to-peer Information System Based on the XOR Metric. International Workshop on Peer-To-Peer Systems, Cambridge MA, Mar 2002.

[25] P. Mockapetris. Domain Names: Concepts and Facilities. RFC 1034, Nov 1987.

[26] P. Mockapetris. Domain Names: Implementation and Specification. RFC 1035, Nov 1987.

[27] P. Mockapetris and K. Dunlop. Development of the Domain Name System. SIGCOMM, Stanford CA, 1988.

[28] R. Naraine. Massive DDoS Attack Hit DNS Root Servers. www.internetnews.com/dev-news/article.php/1486981, Oct 2002.

[29] V. Pappas, Z. Xu, S. Lu, D. Massey, A. Terzis, and L. Zhang. Impact of Configuration Errors on DNS Robustness. SIGCOMM, Portland OR, Aug 2004.

[30] K. Park, Z. Wang, V. Pai, and L. Peterson. CoDNS: Masking DNS Delays via Cooperative Lookups. Princeton University Computer Science Technical Report TR-690-04, Feb 2004.

[31] G. Plaxton, R. Rajaraman, and A. Richa. Accessing Nearby Copies of Replicated Objects in a Distributed Environment. Theory of Computing Systems, vol 32, pg 241-280, 1999.

[32] V. Ramasubramanian and E. G. Sirer. Beehive: Exploiting Power Law Query Distributions for O(1) Lookup Performance in Peer to Peer Overlays. Symposium on Networked Systems Design and Implementation, San Francisco CA, Mar 2004.

[33] S. Ratnasamy, P. Francis, M. Hadley, R. Karp, and S. Shenker. A Scalable Content-Addressable Network. SIGCOMM, San Diego CA, Aug 2001.

[34] A. Rowstron and P. Druschel. Pastry: Scalable, Decentralized Object Location and Routing for Large-Scale Peer-to-Peer Systems. International Conference on Distributed Systems Platforms, Heidelberg, Germany, Nov 2001.

[35] A. Shaikh, R. Tewari, and M. Agarwal. On the Effectiveness of DNS-based Server Selection. International Conference on Computer Communications, Anchorage AK, Apr 2001.

[36] I. Stoica, R. Morris, D. Karger, F. Kaashoek, and H. Balakrishnan. Chord: A Scalable Peer-to-peer Lookup Service for Internet Applications. SIGCOMM, San Diego CA, Aug 2001.

[37] M. Theimer and M. Jones. Overlook: Scalable Name Service on an Overlay Network. International Conference on Distributed Computing Systems, Vienna Austria, Jul 2002.

[38] P. Thurrott. Microsoft Suffers Another DoS Attack. www.winnetmag.com/WindowsSecurity/Article/ArticleID/19770/WindowsSecurity 19770.html, Jan 2001.

[39] M. Walsh, H. Balakrishnan, and S. Shenker. Untangling the Web from DNS. Symposium on Networked Systems Design and Implementation, San Francisco CA, Mar 2004.

[40] U. Wieder and M. Naor. A Simple Fault Tolerant Distributed Hash Table. International Workshop on Peer-To-Peer Systems, Berkeley CA, Feb 2003.

[41] C. Wills and H. Shang. The Contribution of DNS Lookup Costs to Web Object Retrieval. Worcester Polytechnic Institute Technical Report TR-00-12, Jul 2000.

[42] B. Zhao, L. Huang, J. Stribling, S. Rhea, A. Joseph, and J. Kubiatowicz. Tapestry: A Resilient Global-scale Overlay for Service Deployment. Journal on Selected Areas in Communications, 2003.

[43] L. Zhou, F. B. Schneider, and R. van Renesse. COCA: A Secure Distributed On-line Certification Authority. Transactions on Computer Systems, vol 20, Nov 2002.