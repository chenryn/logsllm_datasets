### DefCon 13: Shmoo-Fu: Hacker Goo, Goofs, and Gear with the Shmoo

**The Shmoo Group**
- Website: [www.shmoo.com](http://www.shmoo.com)

#### Stickers Anyone?

**What's Up, Shmoo?**
- **Introductions and Welcome**
- **Festivities Include:**
  - Super Spy Stuff
  - IDN Fallout & Homograph Attacks for Personal Identities
  - Revving Up Rainbow Tables
  - Rogue Squadron & EAP Peeking
  - Shooting Your Security Wad
  - Don't Try This at Home
  - And MORE!

### Super Spy Stuff
- Pablos, after a chic hacker photo shoot in FHM, started hanging out with models. The result was a fashionable cell-phone stowaway that addressed the issue of hot women's faces.

### Pablos

### 3ricj?

### IDN Fallout
- At ShmooCon 2005, Eric Johansen revealed significant issues with Internationalized Domain Names (IDNs).
- The press covered it, and the responsible parties ranted.
- But did anything concrete happen? Where are we now?

### Dan Moniz Goes Crazy...

### Rainbow Tables
- We think rainbow tables are neat.
- We started hosting generated rainbow tables:
  - LanMan
  - Via Bittorrent
  - FREE
- Some people liked it, but others didn't.

#### Forwarded Message from Zhu Shuanglei
- **From:** Zhu Shuanglei
- **Date:** Mar 10, 2005 12:42 AM
- **Subject:** About your shmoo site
- **To:** PI:EMAIL

Hi,

I am Zhu Shuanglei, the author of RainbowCrack software. I noticed you are offering free BitTorrent links on your website for the rainbow tables. For those selling the tables without permission, they are not welcome. But you are worse.

I developed RainbowCrack and released it to the public for free. My goal was to introduce the technique to the world and benefit those who need it. If I sell the tables, I would only make some money for my work, hosting, and computing resources. This should be reasonable. I am not a businessman; if I were, there would be no free source code or table generation tool on the net, and I could make a lot of money.

Do you feel cool because "knowing all passwords is cooler than trying to crack one"? Many people can do what you do, but they don't. Showing off does not prove your ability or knowledge.

Please respect my intellectual property. Let those who need the tables generate them themselves. If everyone acts like you, there will be no reason for me to develop this software further or create other useful software. Or I will never release anything useful to the public. Don't be crazy anymore!

Best Regards,
Zhu Shuanglei

### Revving Up Rainbow Tables
- Badass LanMan tables are now available via Bittorrent and still FREE.
- Join the 43.9 GB torrent!
- Meanwhile, Dan decided to “be crazy” a bit more.
- We don't need your stinkin' code, Zhu!
- Snax says, “FUCK OFF!”

### Unnamed Project
- **Team Members:**
  - Dan Moniz
  - Rev. Dr. Patrick Stach

### Improving on RainbowCrack
- We started by trying to optimize RainbowCrack.
- We found it to be suboptimal, so we changed our approach and made a new tool.
- It doesn't have a name... yet.

### Problems with RainbowCrack
- **Reduction Function Bias:**
  - If your keyspace has 6 valid inputs and 2^4 outputs, the reduction function creates a bias.
  - Example: 
    - 0 mod 6 = 0
    - 1 mod 6 = 1
    - 2 mod 6 = 2
    - 3 mod 6 = 3
    - 4 mod 6 = 4
    - 5 mod 6 = 5
    - 6 mod 6 = 0
    - 7 mod 6 = 1
    - ...
    - 15 mod 6 = 3
  - Values 0 to 3 have a better chance of being picked due to the bias.

### The Real Bias Problem
- This modulo arithmetic has a bias.
- You can assume the output of DES is statistically random, but the bias remains.

### Why This Matters
- **n = floor((total num of outputs) / (total num of inputs))**
- Add 1 if n is below the bias marker to represent the extra chance.
- **(1+n) / (total num of outputs) = chance of hitting any given key**
- **n / (total num of outputs) = chance of hitting any given key**
- Values below the bias marker are unfairly weighted and more likely to be inputs.

### Our Generation Technique (Avoiding Bias)
- We start generating at the last possible input and walk towards the first.
- We use a bitmask to ensure 100% verified keyspace.
- Requires 768 GB of disk space for one machine.

### Our Badass Sorting-Fu
- We separate out anything less than or equal to 6 characters.
- 7-character keyspace is one table, 5-6 character keyspace is another.
- This helps detect the length of the password.
- **LanMan Primer:**
  - Takes 14 bytes of input and splits it into two 7-byte parts, hashing them independently.

### LanMan Hashing Examples
- **Password: "dog"**
  - DOG\0\0\0\0\0\0\0\0\0\0
  - DOG\0\0\0\0 \0\0\0\0\0\0\0
  - First half is 7 characters or less, second half is null.
- **Password: "spamdadrulz"**
  - SPAMDADRULZ\0\0\0
  - SPAMDAD RULZ\0\0\0
  - Second half is not null, indicating 7 characters.

### RainbowCrack Loses
- RainbowCrack generates random hashes and has the reduction function bias problem.
- **Bad + Suck = l4m3x0r!!!**

### We Get Our Crack On
- **rtcrack:**
  - Reads the hash table file generated by rtgen using the read() syscall.
  - Walks linearly to check if endpoints match on the rainbow chains.
  - Has O(n) complexity.

### We Get Our Search On
- We store the start point and endpoints in separate files at corresponding offsets.
- Use page size (4096 bytes) divided by entry size (8) plus 1 (for the index) equals 513.
- Every 513th entry is stored in a special index file.
- At crack time, we mmap() the endpoint index file and use divide and conquer (Fibonacci find).

### Disk I/O Costs
- Disk I/O costs as much CPU time as encryption in RainbowCrack, if not more.
- RainbowCrack fails to account for this in their statistics.

### The Secret Sauce
- Our code is implemented in C and assembly for IA64 (Itanium2) and runs on a classified number of processors.
- Thanks to SGI!
- We also have the generator implemented in VHDL to run on Spartan-3 FPGAs.

### New Wi-Fi Kung-Fu from Beetle

### Why Do We Wi-Fi?
- Who here has an open wireless network at home or work?
- What about devices that can't do WPA, like Tivo or PSP?
- When and where should we Wi-Fi?
  - Coffee shops, airports, hospitals, banks, nuclear power plants?

### Where Did We Go Wrong? Where Are We Going?
- Technology of convenience vs. the inconvenience of securing it.
- Users were left out in the authentication cold.
- Half-ass security standards provide defacto insecure options.
- Security acronyms take precedence over proper implementation.

### How the User Knows
- **Access Point:**
  - SSID: “goodguy”
  - SSID: “badguy”
- **Wi-Fi Card:**
  - SSID: “goodguy”
  - SSID: “badguy”

### Rogue AP Attacks
- Normal Gear @ 25mW (14dBm)
- Cisco Gear @ 100mW (20dBm)
- Senao Gear @ 200mW (23dBm)
- Use a 15dBd antenna with a Senao for 38dBd total... 6 WATTS!
- VS 25mW? BAD GUY WINS! NO CONTEST!

### Choose Your Wi-Fi Weapon
- Rogue APs won't go away.
- Users will fall for access point impersonators.
- Phishing and identity theft are on the rise, and so is hotspot usage.
- Extra wireless client profiles provide extra avenues of attack.
- EAP is an acronym, not a catch-all.
- Gartner can blow us.