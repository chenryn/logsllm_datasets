### Improving Relationship Coverage

In the absence of instructions (1) and (2), we defaulted to instruction (1). We then added and subsequently removed specific ASes from the Route Server Peer (RP) set based on instructions of types (3) and (4), respectively. Following this, we constructed paths in the form (B, A, p5) for all B in RP, which cross the IXP at the link (B, A). These paths were combined with routes gathered from five days of RIB snapshots from the RIPE RIS and RouteViews route collector projects, which are the same data sources used by CAIDA to produce serial-1 data.

For IPv4-related inferences, we utilized the publicly available ASRank script hosted by CAIDA. For IPv6, we applied the necessary modifications as described by Giotsas et al. [33] to adapt the inference script to IPv6 routing policies. Both scripts require a list of Route Server ASNs. To generate this list, we extracted all ASNs with the type 'Route Server' from PeeringDB. After these steps, our extended relationship dataset covered 69.0% of traffic-carrying IPv4 links and 63.2% of IPv6 links.

### Manual Search for Additional Relationship Information

Despite the improvements, some ASes still had limited coverage. Therefore, we conducted a three-day manual search for additional relationship information. We focused on ASes that:
1. Are among the top 30 contributors of unclassified links.
2. Have less than 10% of their links covered.
3. Have more than 10% of their links inferred to be transit connections.

For the manual search, we primarily relied on entries in PeeringDB, RADb/Whois, and targeted web searches. For RADb/Whois autnum objects, we used an approach similar to that described in [47] to infer transit relationships. We also used as-set objects with clearly defined names (e.g., AS:AS-CUSTOMER(S), AS:AS-TRANSIT(S), AS:AS-UPSTREAM(S), or AS:AS-PEER(S)) to identify relationships. For PeeringDB and web searches, we looked for exhaustive enumerations of providers and customers, differentiating between IPv4 and IPv6 relationships and regional relationships when possible.

As we investigated these ASes, we observed diminishing returns in coverage improvements. Thus, we decided not to extend our manual search further. If an AS explicitly listed its providers and customers but not its peers, we assumed the remaining links were peering relationships.

Our final set of relationships covered 74.2% of traffic-carrying IPv4 links and 65.9% of IPv6 links at our IXP. Figures 13 and 14 show the fraction of links inferred to be P2P and P2C relationships. Our dataset covers at least a quarter of all relationships for 93% of ASes, with a median coverage of 66% for IPv4 and 51% for IPv6. While only 1.2% (IPv4) and 1.5% (IPv6) of all inferred links have transit relationships, these relationships are distributed across almost all IXP members, indicating that it is common to establish additional sessions with transit providers via the IXP's peering fabric.

### Filtering Impact of the Relationship Dataset

Figure 15 shows the number of available IPv4 and IPv6 norm-prefixes per traffic-carrying, directed AS link. Some links carry traffic for more than 10^6 norm-prefixes. However, when considering only the links classified as peering links, we filter out those carrying exceptionally many prefixes. Thus, we continue our analysis using only the explicitly inferred peering links, ignoring both transit links and those with no inferred relationship.

### Private Peering

As discussed in Section 4, our traffic captures do not include private peering connections. Therefore, we rely on queries to carefully selected looking glasses (LGs) to infer routes available via private peering. We developed identification and querying interfaces for common LG utilities, including HSDN, RESPAWNER, and COUGAR. We initially found ASes with LGs using PeeringDB and various online lists, narrowing down the selection to ASes that are IXP members and have functional LGs. After removing LGs requiring captchas, rate-limiting, or stating 'no automation allowed,' we were left with LGs from 17 different ASes.

#### Triggering Looking Glasses

To avoid overloading the LGs, we implemented several safeguards:
1. We limited the set of norm-prefixes queried to those necessary for the analysis and not yet covered by multi-lateral or bi-lateral peering.
2. If a LG returned a covering prefix likely not a default route, we stopped querying other norm-prefixes covered by this less-specific prefix.
3. We waited an average of 39.3 seconds between consecutive queries to the same LG.

We queried the LGs as follows:
1. **Querying a LG:** We chose a LG in round-robin fashion and performed either an exact match or, preferably, a longest-prefix match query.
2. **Ignoring Transit Routes:** If the first-hop was a transit provider or a Tier 1 provider without a known relationship, we ignored the route.
3. **Requiring IXP Routes:** We ensured the first-hop AS was also an IXP member.

If no route remained after steps 2 and 3, we waited 2 seconds and queried the next LG. If a non-filtered route was returned, we marked the norm-prefix as reachable; otherwise, we marked it as unreachable.

In total, we uncovered 2.33M, 6.73M, and 6.77M IPv4 (3.41B, 3.41B, and 3.45B IPv6) norm-prefixes available via multi-lateral, bi-lateral, and private peering, covering 19.8%, 57.1%, and 57.4% (37.3%, 37.4%, and 37.8%) of all routed IPv4 (IPv6) addresses, respectively. These results provide a real-world calibration for the 70+ % reachability theoretically calculated by BÃ¶ttger et al. [10] in 2018.

### Route Importance

This section presents a qualitative analysis of the uncovered peering prefixes using two measures of importance: (a) the number of domains in a top N ranking served by transit-free reachable prefixes, and (b) the number of top destination prefixes of a large eyeball network that are reachable without transit.

**Summary of Findings:**
- For both rankings, around half of the top-100 norm-prefixes can be reached via multi-lateral peering.
- For the traffic-based ranking, nearly all prefixes can be reached via bi-lateral peering, with few exceptions mostly reachable via private peering.
- For the domain-based ranking, the same holds true for IPv4. For IPv6, bi-lateral peering has a lower impact, and more prefixes remain unreachable, but most can be obtained via private peering.
- The prefixes that remain unreachable even via private peering mostly lead to large Transit and Tier 1 providers.

#### Prefix Rankings

**Traffic-Based Ranking:**
We used traffic statistics from one of the largest European ISPs, collecting egress traffic from all edge routers over one day (10th June 2021) at a sample rate of 1:1000 packets. We summed the number of egress bytes, aggregated these values to norm-prefixes, and clustered the top 10k norm-prefixes for IPv4 and IPv6.

**Domain-Based Ranking:**
We relied on re-computed results from Naab et al. [55] to obtain a domain-based importance ranking. We used the Umbrella-based norm-prefix top list, which provided 10K IPv4 and 10K IPv6 prefixes.

#### Reachability of the Top-10K

**Traffic-Based Ranking:**
Figure 16 shows the top 10k prefixes separated into classes based on their ranking (x-axis) and the fraction of reachable prefixes (y-axis) for IPv4 (bottom) and IPv6 (top). Each prefix is colored by the lowest-requirement peering type (PNI > BLP > MLP) that it can be reached by. The top 100 prefixes for both protocols can be fully covered using all peering types. Most top-10k prefixes can be reached via bi-lateral peering, benefiting aspiring IXP members who can keep operational costs minimal by carefully selecting private peering partners.

**Domain-Based Ranking:**
Figure 17 shows the results for the domain-based top 10k prefixes. More lower-ranked prefixes are unreachable (e.g., approximately 15% of the lowest 5k IPv4 prefixes). For IPv6, the difference between routes available via multi-lateral and bi-lateral peering is negligible compared to IPv4. IXP members must rely more on private peering to reach high-domain-count prefixes. For approximately 15% of 500-or-lower prefix class prefixes, IXP members still need to rely on their transit as they are unreachable via peering.