### Sample Acquisition, Training, and Login

**Figure 12: Instant Power Reading via the Power Monitor**
Figure 12 illustrates the instantaneous power consumption during the execution of a single beat-PIN. The figure clearly delineates the power consumption for sample acquisition, training, and login. It is evident that sample acquisition consumes the most power, averaging approximately 341.5 mW. In comparison, the average power consumption for training and login are 337.2 mW and 181.4 mW, respectively.

**Figure 13: Distribution of Power Consumption in Executing Beat-PINs**
- **(a) Enrollment**: The power consumption during enrollment ranges from 272.4 mW to 374.1 mW, with 90% of the samples below 367.0 mW.
- **(b) Login**: The power consumption during login ranges from 165.8 mW to 197.6 mW, with 90% of the samples below 191.4 mW.

In general, the enrollment stage consumes about twice the power of the login stage.

### Comparison with Common Smartwatch Tasks

Table 7 compares the average power consumption of the Beat-PIN login process with other common smartwatch tasks. The power consumption for Beat-PIN login (181.4 mW) is only slightly higher than that for turning on the screen (161.5 mW). This makes it more energy-efficient than most operations, such as using a voice assistant (585.0 mW), map service (508.7 mW), or sending a text message (410.5 mW). For instance, sending a voice message consumes an average of 524.7 mW, which is about three times the power consumption of Beat-PIN login. Given that Beat-PIN can be performed quickly, our authentication mechanism imposes only a mild energy overhead on the smartwatch, making it suitable for battery-constrained wearable devices.

| Operation                     | Power Consumption (mW) |
|-------------------------------|------------------------|
| Beat-PIN login                | 181.4                  |
| Screen on                     | 161.5                  |
| Voice assistant               | 585.0                  |
| Map service                   | 508.7                  |
| Sending a text message        | 410.5                  |
| Sending a voice message       | 524.7                  |
| Web browsing                  | 574.8                  |
| Measuring heartbeat           | 428.0                  |

### Impact of User Motions

Ideally, Beat-PIN should be insensitive to user motions since wearable devices are often used in mobile environments where motion introduces noise. To test this, we evaluated the impact of three types of user motions: sitting, slow walking, and fast walking. The results, shown in Figure 14, indicate that the best authentication accuracy is achieved when the user is sitting, with a False Rejection Rate (FRR) of 4.5% and a False Acceptance Rate (FAR) of 8.0%. The lowest accuracy occurs during fast walking, with an FRR of 9.0% and an FAR of 8.3%. This suggests that user motion does affect authentication performance, as faster motion increases vibration and noise in the smartwatch. However, the FAR remains relatively stable across all three motion patterns, indicating that while user motion impacts usability (legitimate users are more likely to be denied when walking), it has a limited impact on security (imposters are consistently rejected).

**Figure 14: Impact of User Motions on Authentication Accuracy**

### Conclusions

As wearable devices become increasingly integrated into daily life, ensuring the security of data acquired by or accessed through these devices is crucial. In this study, we developed Beat-PIN, a user authentication mechanism that relies on the timing of beat sequences for direct authentication to a wearable device. Compared to existing solutions, Beat-PIN provides accurate authentication, low processing overhead, and great convenience to users.

Through an extensive evaluation involving 124 participants, we observed that the average Equal Error Rate (EER) of our approach is 7.2% with just 7 training samples. We implemented a prototype on Moto 360 smartwatches and measured its security and utility, including robustness against various types of attacks, time and power consumption, impact of user motions, and memorability. We conclude that Beat-PIN is a practical and efficient authentication mechanism for resource-constrained wearables.

### Acknowledgments
- **Ming Li**: Supported by the U.S. National Science Foundation under grants CNS-1566634 and ECCS-1711991.
- **Lei Yang**: Supported in part by the U.S. National Science Foundation under Grants CNS-1559696 and IIA-1301726.

### References
[1] Fitbit. http://en.wikipedia.org/wiki/Fitbit.
[2] Gartner Says Worldwide Wearable Devices Sales to Grow 18.4 Percent in 2016. https://www.gartner.com/newsroom/id/3198018.
[3] Apple Watch Series Battery Information. https://www.apple.com/watch/battery.html.
[4] Google Glass. http://en.wikipedia.org/wiki/Google_Glass.
[5] IDC Forecasts Worldwide Shipments of Wearables to Surpass 200 Million in 2019, Driven by Strong Smartwatch Growth and the Emergence of Smarter Watches. https://www.businesswire.com/news/home/20160317005136/en/IDC-Forecasts-Worldwide-Shipments-Wearables-Surpass-200.
[6] PIN Analysis. http://www.datagenetics.com/blog/september32012/.
[7] Power Monitor Software. http://msoon.github.io/powermonitor/.
[8] scikit-learn - Machine Learning in Python. http://scikit-learn.org/stable/.
[9] Unmasked: What 10 Million Passwords Reveal About the People Who Choose Them. https://wpengine.com/unmasked/.
[10] Wearable Technology Market - Global Opportunity Analysis and Industry Forecast, 2014-2022. https://www.prnewswire.com/news-releases/wearable-technology-market—global-opportunity-analysis-and-industry-forecast-2014-2022-300460342.html.
[11] Here’s How iPhone Thermal Cameras Can Be Used to Steal Your Pin Codes. https://petapixel.com/2014/08/29/heres-iphone-thermal-cameras-can-used-steal-pin-codes/. (2014).
[12] Adam J Aviv, Katherine L Gibson, Evan Mossop, Matt Blaze, and Jonathan M Smith. 2010. Smudge Attacks on Smartphone Touch Screens. In Proceedings on USENIX Conference on Offensive Technologies (WOOT).
[13] Michael Backes, Markus Dürmuth, and Dominique Unruh. 2008. Compromising Reflections - Or How to Read LCD Monitors Around the Corner. In IEEE Symposium on Security and Privacy.
[14] Jagmohan Chauhan, Hassan Jameel Asghar, Anirban Mahanti, and Mohamed Ali Kaafar. 2016. Gesture-Based Continuous Authentication for Wearable Devices: The Smart Glasses Use Case. In International Conference on Applied Cryptography and Network Security. Springer, 648–665.
[15] Hsin-Yi Chiang and Sonia Chiasson. 2013. Improving User Authentication on Mobile Devices: A Touchscreen Graphical Password. In Proceedings of ACM Conference on Human-Computer Interaction with Mobile Devices and Services (MobileHCI).
[16] Geumhwan Cho, Jun Ho Huh, Junsung Cho, Seongyeol Oh, Youngbae Song, and Hyoungshick Kim. 2017. SysPal: System-Guided Pattern Locks for Android. In Proceedings of IEEE Symposium on Security and Privacy.
[17] Se Young Chun, Jae-Hwan Kang, Hanvit Kim, Chungho Lee, Ian Oakley, and Sung-Phil Kim. 2016. ECG Based User Authentication for Wearable Devices Using Short Time Fourier Transform. In Proceedings of IEEE International Conference on Telecommunications and Signal Processing (TSP).
[18] Nathan L Clarke, SM Furnell, BM Lines, and Paul L Reynolds. 2003. Keystroke Dynamics on a Mobile Handset: A Feasibility Study. Information Management & Computer Security 11, 4 (2003), 161–166.
[19] Nathan L Clarke and Steven M Furnell. 2007. Authenticating Mobile Phone Users Using Keystroke Analysis. International Journal of Information Security 6, 1 (2007), 1–14.
[20] Sauvik Das, Gierad Laput, Chris Harrison, and Jason I Hong. 2017. Thumprint: Socially-Inclusive Local Group Authentication Through Shared Secret Knocks. In Proceedings of ACM Conference on Human Factors in Computing Systems (CHI).
[21] Benjamin Dran, Jiang Zhu, and Joy Ying Zhang. 2013. KeySens: Passive User Authentication Through Micro-Behavior Modeling of Soft Keyboard Interaction. In Proceedings of International Conference on Mobile Computing, Applications, and Services.
[22] Mario Frank, Ralf Biedert, Eugene Ma, Ivan Martinovic, and Dawn Song. 2013. Touchalytics: On the Applicability of Touchscreen Input as a Behavioral Biometric for Continuous Authentication. IEEE Transactions on Information Forensics and Security 8, 1 (2013), 136–148.
[23] Benjamin Laxton, Kai Wang, and Stefan Savage. 2008. Reconsidering Physical Key Secrecy: Teleduplication via Optical Decoding. In Proceedings of the ACM Conference on Computer and Communications Security.
[24] Jeong Jun Lee, Seungin Noh, Kang Ryoung Park, and Jaihie Kim. 2004. Iris Recognition in Wearable Computers. In Biometric Authentication. Springer, 475–483.
[25] Sugang Li, Ashwin Ashok, Yanyong Zhang, Chenren Xu, Janne Lindqvist, and Marco Gruteser. 2016. Whose Move Is It Anyway? Authenticating Smart Wearable Devices Using Unique Head Movement Patterns. In Proceedings of IEEE International Conference on Pervasive Computing and Communications (PerCom).
[26] Felix Xiaozhu Lin, Daniel Ashbrook, and Sean White. 2011. RhythmLink: Securely Pairing I/O-Constrained Devices by Tapping. In Proceedings of ACM Symposium on User Interface Software and Technology.
[27] Jim Pitman. 1999. Probability. Springer Science & Business Media (1999).
[28] Volker Roth, Kai Richter, and Rene Freidinger. 2004. A PIN-Entry Method Resilient Against Shoulder Surfing. In Proceedings of the ACM Conference on Computer and Communications Security.
[29] Yunpeng Song, Zhongmin Cai, and Zhi-Li Zhang. 2017. Multi-Touch Authentication Using Hand Geometry and Behavioral Information. In Proceedings of IEEE Symposium on Security and Privacy.
[30] Jingchao Sun, Rui Zhang, Jinxue Zhang, and Yanchao Zhang. 2014. Touchin: Sightless Two-Factor Authentication on Multi-Touch Mobile Devices. In Proceedings on IEEE Conference on Communications and Network Security (CNS).
[31] Furkan Tari, Ant Ozok, and Stephen H Holden. 2006. A Comparison of Perceived and Real Shoulder-Surfing Risks Between Alphanumeric and Graphical Passwords. In Proceedings of The Symposium on Usable Privacy and Security.
[32] Tianzi Wang, Zheng Song, Jian Ma, Yongping Xiong, and Yun Jie. 2013. An Anti-Fake Iris Authentication Mechanism for Smart Glasses. In Proceedings of IEEE International Conference on Consumer Electronics, Communications and Networks (CECNet).
[33] Jacob Otto Wobbrock. 2009. Tapsongs: Tapping Rhythm-Based Passwords on a Single Binary Sensor. In Proceedings of ACM Symposium on User Interface Software and Technology.
[34] Junshuang Yang, Yanyan Li, and Mengjun Xie. 2015. MotionAuth: Motion-Based Authentication for Wrist-Worn Smart Devices. In Proceedings of IEEE International Conference on Pervasive Computing and Communication Workshops (PerCom Workshops).
[35] Yulong Yang, Gradeigh D Clark, Janne Lindqvist, and Antti Oulasvirta. 2016. Free-Form Gesture Authentication in the Wild. In Proceedings of ACM Conference on Human Factors in Computing Systems (CHI).
[36] Yunze Zeng, Amit Pande, Jindan Zhu, and Prasant Mohapatra. 2017. WearIA: Wearable Device Implicit Authentication Based on Activity Information. In Proceedings of IEEE International Symposium on A World of Wireless, Mobile and Multimedia Networks (WoWMoM).
[37] Nan Zheng, Kun Bai, Hai Huang, and Haining Wang. 2014. You Are How You Touch: User Verification on Smartphones Via Tapping Behaviors. In Proceedings of IEEE International Conference on Network Protocols.

### Proof of Theorem 5.1

**Theorem 5.1: The Raw Size of Beat-PIN Space**

\[ |{\mathcal{P}}| = \sum_{l=1}^{L_{\text{max}}} \left( \frac{T_{\text{max}}}{\Delta t} - 1 \right) \times l - \left( \frac{\tau_b}{\Delta t} - 1 \right) \times l + \left( \frac{\tau_s}{\Delta t} - 1 \right) \times (l - 1) \]

where:
- \( L_{\text{max}} \): Maximum length of the beat-PIN.
- \( T_{\text{max}} \): Maximum time duration.
- \( \Delta t \): Minimum unit of the system clock.
- \( \tau_b \): Minimum value of a beat-duration.
- \( \tau_s \): Minimum value of a space-duration.

**Proof:**
Our goal is to determine the number of different beat-PINs, given that the length and time duration are limited by \( L_{\text{max}} \) and \( T_{\text{max}} \), respectively. Additionally, we assume that the beat-duration and space-duration are lower-bounded by \( \tau_b \) and \( \tau_s \), respectively.

First, with the minimum system clock unit \( \Delta t \), the maximum number of time slots in a beat-PIN is calculated as \( N = \frac{T_{\text{max}}}{\Delta t} \). We now analyze the number of all possible beat-PINs when their lengths, i.e., the number of beats, are \( l \) (where \( l \in [1, L_{\text{max}}] \)).

By treating each beat-duration as a "white" bin, each space-duration as a "black" bin, and the entire \( N \) time slots as stars, our problem is equivalent to finding the number of all possible configurations of \( N \) stars into \( l \) "white" bins and \( l - 1 \) "black" bins. Each "white" bin must contain at least \( \frac{\tau_b}{\Delta t} \) stars, and each "black" bin must contain at least \( \frac{\tau_s}{\Delta t} \) stars.

To solve this, we first place \( \frac{\tau_b}{\Delta t} - 1 \) stars in each "white" bin and \( \frac{\tau_s}{\Delta t} - 1 \) stars in each "black" bin. This leaves us with \( N - \left( \frac{\tau_b}{\Delta t} - 1 \right) \times l - \left( \frac{\tau_s}{\Delta t} - 1 \right) \times (l - 1) \) stars to be distributed freely among the bins.

This is a standard "Stars and Bins" (or "Stars and Bars") problem. The solution is given by:

\[ \binom{N - \left( \frac{\tau_b}{\Delta t} - 1 \right) \times l - \left( \frac{\tau_s}{\Delta t} - 1 \right) \times (l - 1)}{2l - 1} \]

Thus, the total number of possible beat-PINs is:

\[ |{\mathcal{P}}| = \sum_{l=1}^{L_{\text{max}}} \binom{N - \left( \frac{\tau_b}{\Delta t} - 1 \right) \times l - \left( \frac{\tau_s}{\Delta t} - 1 \right) \times (l - 1)}{2l - 1} \]