### 商户端程序逻辑的挑战与API安全

商户端程序逻辑往往不够严谨，这使得如何安全地调用API成为编程中的一个长期挑战。这种问题不仅限于Web API，例如，在C语言中，`strcpy` 和 `setuid` 的安全调用就非常困难。因此，CaaS（Cashier-as-a-Service）API在Web商店中留下了许多逻辑漏洞也就不足为奇了。

我们的研究表明，有必要重新考虑支付协议的可能性，尤其是考虑到过去采用这些技术的经验教训。当然，协议的有效性需要放在具体环境中评估。毕竟，理论上证明安全的协议在实际系统中的安全性常常依赖于多种因素。首先，错误的实现可能会引入安全漏洞。其次，设计时的假设可能与实际操作环境大相径庭。例如，协议设计者可能忽略了任何人都可以成为卖家的事实，或者系统实际上需要在并发HTTP会话中运行（见第III.B.1节）。最后，整个系统的安全性还取决于支付模块与其他模块的交互方式，例如，如果购物车的状态可以在支付处理过程中被更改（见第III.B.3节），或者订单ID是从客户端cookie中获取的（见第III.B.2节），都可能存在安全漏洞。

我们认为，我们工作的主要贡献在于促使学术界和电子商务行业对构建安全且易用的支付系统进行反思，这种系统应保留API的灵活性，并提供形式化验证的安全保障。

### 相关工作

#### 安全协议验证技术
数十年来，许多研究都集中在验证协议的安全属性上。经典的方法可以分为两类：基于Dolev和Yao [14] 提出的代数模型的方法，以及基于Burrows、Abadi和Needham (BAN逻辑) [7] 提出的公理化系统的方法。前者包括Interrogator [26] 和NRL协议分析器 [24][15]，它们通过搜索协议状态空间中的不安全路径来识别协议缺陷。后者则更侧重于协议参与者信念的形式化，尽管BAN逻辑被认为比Dolev-Yao模型更为有限，但它具有可判定性。尽管如此，Needham-Schroeder公钥协议后来还是被Lowe [22] 发现在中间人攻击假设下存在漏洞。近年来，协议验证领域取得了显著进展，Abadi [2] 的最新教程涵盖了多种技术，其中一些方法可能不符合Millen [26] 的分类，如基于类型系统的方法 [4]。

#### 电子商务安全问题
电子商务技术中的安全弱点和缺陷已在多个来源中讨论过。早期的一些购物车实现中存在价格操纵漏洞，如[32]和[27]所报告的那样，这些问题利用了浏览器cookie中存储的购物车总价来生成订单。我们发现，当今主流的购物车（例如我们研究的所有购物车）无法以同样的方式被攻击。另一个购物车漏洞由[9]报道，允许商品数量为负。

值得一提的是一个新的支付协议3D-Secure，该协议由Visa推广并被MasterCard采纳，分别以Verified By Visa和MasterCard SecureCode的名义进行市场推广。其主要目标是通过密码保护信用卡，防止卡不在场的攻击（例如使用被盗卡号）。Murdoch和Anderson [28] 讨论了3D-Secure的一系列弱点，包括GUI设计、注册流程和隐私保护等。

#### 解决Web应用逻辑漏洞的技术
研究人员越来越关注Web应用程序中的逻辑漏洞。提出的技术可分为两类：一是帮助新应用程序避免逻辑漏洞（即“安全构造”方法）；二是查找遗留应用程序中的逻辑漏洞。

第一类技术的例子包括Swift [12] 和Ripley [36]。它们都基于分布式编译器（如Google Web Toolkit和Microsoft Volta），自动将单个Web程序分割到服务器和客户端之间。Swift将安全任务视为“逻辑放置”问题，允许开发者注释源代码以满足安全要求，从而执行信息流分析以决定哪些逻辑可以安全地放置在客户端。Ripley则将任务视为逻辑复制问题：它在服务器端运行客户端逻辑的副本，以检测客户端篡改导致的不一致。

第二类技术针对遗留应用程序，包括NoTamper [9] 和Waler [16]。NoTamper通过查找仅由客户端逻辑检查而未由服务器逻辑检查的条件来检测参数验证漏洞。Waler则根据运行时跟踪生成可能的不变量，并将其与源代码进行对比。

上述技术解决了客户端-服务器或客户端-前端-后端架构下的Web应用程序逻辑漏洞问题。我们的工作明确聚焦于集成第三方Web API的网站，在这种新的背景下，逻辑漏洞似乎更加难以捉摸。

### 结论与未来工作

我们对基于CaaS的Web商店进行了分析，作为第三方服务集成中的安全挑战的一个例子。我们在领先的商户应用程序、热门在线商店和CaaS提供商（如Amazon Payments）中发现了严重的逻辑缺陷，这些缺陷可以被恶意用户利用，导致CaaS和商户之间的状态不一致。结果，恶意用户可以以较低的价格购买商品，甚至在支付一件商品后免费购物，甚至完全逃避支付。我们已将这些发现报告给受影响方，并收到了他们的确认。

进一步的分析揭示了基于CaaS的结账机制的逻辑复杂性，以及在开发和测试这些系统时验证其安全属性所需的努力。我们认为，这项研究是在混合Web应用程序带来的新安全问题领域迈出的第一步。即使是对商户应用程序的安全分析，我们也只是触及了表面，还有许多有趣的功能（如取消、退货、订阅、拍卖和市场）尚未研究。例如，一个有趣的问题可能是，我们是否可以结账一个$1的订单和一个$10的订单，然后取消$1的订单以获得$10的退款。我们还在考虑其他场景中的Web服务集成所带来的安全挑战，例如社交网络和Web认证服务。从根本上说，我们认为这种新的Web编程范式要求新的研究努力，以确保其产生的系统的安全质量。

### 致谢

感谢Martín Abadi、Brian Beckman、Josh Benaloh、Cormac Herley、Dan Simon和Yi-Min Wang提供的宝贵讨论，感谢Akash Lal对Poirot的重要建议，感谢Beth Cate提供的法律协助，感谢Robert Schnabel的支持使这项工作得以完成。我们还要特别感谢Trent Jaeger的指导。来自IU的作者得到了NSF Grant CNS-0716292和CNS-1017782的部分支持。Rui Wang还得到了微软研究院实习的部分支持。

### 参考文献

[1] Amazon Security Advisories. Amazon Payments Signature Version 2 Validation. https://payments.amazon.com/sdui/sdui/security  
[2] Martín Abadi. Security Protocols: Principles and Calculi (Tutorial Notes), Foundations of Security Analysis and Design IV, FOSAD 2006/2007 Tutorial Lectures, Springer-Verlag (2007), 1-23.  
[3] N. Asokan, Victor Shoup, and Michael Waidner. Asynchronous protocols for optimistic fair exchange. In Proceedings of IEEE Symposium on Research in Security and Privacy, pages 86–99, 1998.  
[4] Karthikeyan Bhargavan, Cédric Fournet, Andrew Gordon. Modular verification of security protocol code by typing. ACM Symposium on Principles of Programming Languages (POPL), 2010  
[5] Karthikeyan Bhargavan, Cédric Fournet, Andrew Gordon, Riccardo Pucella. TulaFale: A security tool for web services. In Symposium on Formal Methods for Components and Objects (FMCO), 2003  
[6] BigCommerce. http://www.bigcommerce.com/  
[7] Michael Burrows, Martín Abadi, and Roger Needham. 1990. A logic of authentication. ACM Trans. Computer Systems 8, 1, 18-36.  
[8] Ecommerce Statistics Compendium 2010. http://econsultancy.com/us/reports/e-commerce-statistics/downloads/2076-econsultancy-ecommerce-statistics-uk-sample-pdf  
[9] Prithvi Bisht, Timothy Hinrichs, Nazari Skrupsky, R. Bobrowicz, and V. N. Venkatakrishnan, "NoTamper: Automatically Detecting Parameter Tampering Vulnerabilities in Web Applications," ACM Conf. on Computer and Communications Security, 2010  
[10] Dominique Bolignano. “Towards the Formal Verification of Electronic Commerce Protocols,” Proceedings of the IEEE Computer Security Foundations Workshop, 1997.  
[11] David Chaum, Amos Fiat, and Moni Naor. Untraceable electronic cash. In Proceedings on Advances in cryptology (CRYPTO '88).  
[12] Stephen Chong, Jed Liu, Andrew C. Myers, Xin Qi, K. Vikram, Lantian Zheng, and Xin Zhen, "Secure Web Applications via Automatic Partitioning," ACM Symposium on Operating Systems Principles (SOSP), October 2007.  
[13] Benjamin Cox, J. D. Tygar, and Marvin Sirbu. 1995. NetBill security and transaction protocol. In Proceedings of the 1st conference on USENIX Workshop on Electronic Commerce (WOEC'95).  
[14] Danny Dolev and Andrew C. Yao. 1981. On the Security of Public Key Protocols. Technical Report. Stanford University, Stanford, USA.  
[15] Santiago Escobar, Catherine Meadows, and Jose Meseguer. 2005. A rewriting-based inference system for the NRL protocol analyzer: grammar generation, the 2005 ACM workshop on Formal methods in security engineering (FMSE '05). ACM, New York, NY, USA, 1-12.  
[16] Viktoria Felmetsger, Ludovico Cavedon, Christopher Kruegel, and Giovanni Vigna, "Toward Automated Detection of Logic Vulnerabilities in Web Applications," USENIX Security Symposium, August 2010.  
[17] Fiddler Web Debugger. http://www.fiddler2.com/fiddler2  
[18] Phillip M. Hallam-Baker. Electronic Payment Schemes. http://www.w3.org/ECommerce/roadmap.html  
[19] Nevin Heintze, J. D. Tygar, Jeannette Wing, and H. Chi Wong. Model checking electronic commerce protocols. The 2nd USENIX Workshop on Electronic Commerce , Berkeley, CA, USA. 1996.  
[20] Interspire Shopping Cart. http://www.interspire.com/shoppingcart  
[21] Live HTTP Headers. http://livehttpheaders.mozdev.org  
[22] Gavin Lowe. An attack on the Needham-Schroeder public key authentication protocol. Information Processing Letters 56(3), 1995  
[23] Shiyong Lu and Scott A. Smolka. 1999. Model Checking the Secure Electronic Transaction (SET) Protocol. The 7th International Symposium on Modeling, Analysis and Simulation of Computer and Telecommunication Systems (MASCOTS '99).  
[24] Catherine Meadows. Applying Formal Methods to the Analysis of a Key Management Protocol. Journal of Computer Security, 1992.  
[25] Catherine Meadows and Paul F. Syverson. "A Formal Specification of Requirements for Payment Transactions in the SET Protocol," Financial Cryptography 1998  
[26] Jonathan K. Millen. The Interrogator Model. IEEE Symposium on Security and Privacy 1995..  
[27] K. K. Mookhey, "Common Security Vulnerabilities in e-commerce articles/common- http://www.symantec.com/connect/ Systems," security-vulnerabilities-e-commerce-systems  
[28] Steven Murdoch and Ross Anderson, "Verified by Visa and MasterCard SecureCode: or, How Not to Design Authentication," Financial Cryptography and Data Security, January 2010  
[29] NopCommerce. http://www.nopcommerce.com/  
[30] Poirot: concurrency sleuth. The http://research.microsoft .com /en-us/projects/poirot/  
[31] Resources – Amazon Payments. https://payments.amazon.com/sdui /sdui/business/resources#cba  
[32] SecurityFocus.com. "3D3.Com ShopFactory Shopping Cart Cookie http://www. Securityfocus.com/bid/6296/discuss Price Manipulation  
[33] Vitaly Shmatikov and John C. Mitchell, Analysis of a fair exchange protocol, Symposium on Network and Distributed Systems Security (NDSS '00), San Diego, CA, Internet Society, 2000.  
[34] Softpedia, "Choose the Best Open Source CMS for 2010," http://news.softpedia.com/news/Choose-the-Best-Open-Source-CMS-for-2010-158440.shtml  
[35] TopTenReviews. eCommerce Software Review 2011. http://ecommerce-software-review.toptenreviews.com  
[36] K. Vikram, Abhishek Prateek, and Benjamin Livshits, "Ripley: Automatically Securing Web 2.0 Applications Through Replicated Execution," ACM Conference on Computer and Communications Security (CCS), Nov. 2009.  
[37] Rui Wang, Shuo Chen, XiaoFeng Wang, Shaz Qadeer. “How to Shop for Free Online -- Security Analysis of Cashier-as-a-Service Based Web Stores”. Technical Report, IU-CS-TR690. Supporting materials are available at http://research.microsoft.com/~shuochen/caas/supp/  
[38] Rui Wang, Shuo Chen, XiaoFeng Wang, Shaz Qadeer. “A Case Study of CaaS Based Merchant Logic,” http://research.microsoft.com/en-us/people/shuochen/caaslogiccasestudy.aspx  
[39] Wikipedia, "Secure Electronic Transaction," http://en. wikipedia.org/wiki/Secure_Electronic_Transaction