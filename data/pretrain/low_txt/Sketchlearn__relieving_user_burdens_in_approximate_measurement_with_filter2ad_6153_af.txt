### SketchLearn: Accurate and General Network Measurement with Minimal User Configuration

**Source Code Availability:**
The source code for SketchLearn is available at:
- [GitHub Repository](https://github.com/huangqundl/SketchLearn)

**Acknowledgments:**
We extend our gratitude to our shepherd, Walter Willinger, and the anonymous reviewers for their valuable feedback. This work was supported in part by:
- CAS Pioneer Hundred Talents Program
- National Key R&D Program of China (2016YFB1000200)
- Research Grants Council of Hong Kong (GRF 14204017)
- National Natural Science Foundation of China (61420106013)
- Outstanding Member Award of Youth Innovation Promotion Association of CAS

### Experimental Results

#### Arbitrary Flowkey Definitions (Experiment #9)
- **Figure 14:** Illustrates the results for arbitrary flowkey definitions.

#### Attaching Error Measures (Experiment #10)
- **Figure 15:** Shows the impact of error filtering on heavy hitter and heavy changer detection, as well as cardinality estimation.
- **Memory and Thresholds:** We used 64KB of memory and set detection thresholds at 0.1% and 0.5%.
- **Precision Improvement:** For heavy hitter and heavy changer detection, error filtering improved precision to over 90% for a threshold of 0.1% and to 100% for a threshold of 0.5%.
- **Cardinality Error Reduction:** The error for cardinality was reduced from 4.25% to 3.07%.

#### Network-wide Coordination (Experiment #11)
- **Simulator Setup:** We evaluated network-wide coordination using a simulator that built an 8-ary Fat-Tree topology with 128 hosts and 80 switches.
- **Network Statistics:** We analyzed three network-wide statistics: heavy hitters, cardinality, and entropy.
- **Measurement Points:** We varied the number of measurement points \( x \) from one to seven. For each \( x \) (where \( 1 \leq x \leq 7 \)), we analyzed all flows that traverse \( x \) devices.
- **Threshold:** An extremely small threshold of 0.01% of the total frequency was used to demonstrate the improvement in network-wide coordination.
- **Accuracy Improvement:** Initially, with one measurement point, the precision and recall were around 70% and 40%, respectively. As the number of measurement points increased, the accuracy significantly improved. With four measurement points, the precision reached 100%, and the recall was 80%.

### References
1. Omid Alipourfard, Masoud Moshref, and Minlan Yu. 2015. Re-evaluating Measurement Algorithms in Software. In Proc. of HotNets.
2. Mohammad Alizadeh, Albert Greenberg, David A Maltz, and Jitendra Padhye. 2010. Data Center TCP (DCTCP). In Proc. of SIGCOMM.
3. Ziv Bar-Yossef, T. S. Jayram, Ravi Kumar, D. Sivakumar, and Luca Trevisan. 2002. Counting Distinct Elements in a Data Stream. In Proc. of RANDOM.
4. Barefoot’s Tofino. 2018. [Barefoot Networks Technology](https://www.barefootnetworks.com/technology).
5. Ran Ben Basat, Gil Einziger, Roy Friedman, Marcelo C Luizelli, and Erez Waisbard. 2017. Constant Time Updates in Hierarchical Heavy Hitters. In Proc. of SIGCOMM.
6. Theophilus Benson, Aditya Akella, and David A. Maltz. 2010. Network Traffic Characteristics of Data Centers in the Wild. In Proc. of IMC.
7. Tian Bu, Jin Cao, Aiyou Chen, and Patrick P. C. Lee. 2010. Sequential Hashing: A Flexible Approach for Unveiling Significant Patterns in High Speed Networks. Computer Networks 54, 18 (2010), 3309–3326.
8. CAIDA Anonymized Internet Traces 2016 Dataset. 2018. [CAIDA Dataset](http://www.caida.org/data/passive/passive_2016_dataset.xml).
9. Marco Canini, Damien Fay, David J. Miller, Andrew W. Moore, and Raffaele Bolla. 2009. Per Flow Packet Sampling for High-Speed Network Monitoring. In Proc. of COMSNETS.
10. George Casella and Roger Berger. 2001. Statistical Inference. Duxbury Resource Center.
11. Amit Chakrabarti, Graham Cormode, and Andrew McGregor. 2007. A Near-Optimal Algorithm for Computing the Entropy of a Stream. In Proc. of SODA.
12. Moses Charikar, Kevin Chen, and Martin Farach-Colton. 2004. Finding Frequent Items in Data Streams. Theoretical Computer Science 312, 1 (2004), 3–15.
13. Surajit Chaudhuri, Bolin Ding, and Srikanth Kandula. 2017. Approximate Query Processing: No Silver Bullet. In Proc. of SIGMOD.
14. Yi-Chao Chen, Lili Qiu, Yin Zhang, Guangtao Xue, and Zhenxian Hu. 2014. Robust Network Compressive Sensing. In Proc. of MOBICOM.
15. Graham Cormode and Marios Hadjieleftheriou. 2010. Methods for Finding Frequent Items in Data Streams. The VLDB Journal 19, 1 (2010), 3–20.
16. Graham Cormode, Flip Korn, S. Muthukrishnan, and Divesh Srivastava. 2003. Finding Hierarchical Heavy Hitters in Data Streams. In Proc. of VLDB.
17. Graham Cormode and S. Muthukrishnan. 2004. What’s New: Finding Significant Differences in Network Data Streams. In Proc. of IEEE INFOCOM.
18. Graham Cormode and S. Muthukrishnan. 2005. An Improved Data Stream Summary: The Count-Min Sketch and its Applications. Journal of Algorithms 55, 1 (2005), 58–75.
19. Graham Cormode and S. Muthukrishnan. 2005. Space Efficient Mining of Multigraph Streams. In Proc. of PODS.
20. Ítalo Cunha, Renata Teixeira, Nick Feamster, and Christophe Diot. 2009. Measurement Methods for Fast and Accurate Blackhole Identification with Binary Tomography. In Proc. of IMC.
21. Ralph D’Agostino and Egon S Pearson. 1973. Tests for Departure from Normality. Empirical Results for the Distributions of b2 and √b1. Biometrika 60, 3 (1973), 613–622.
22. Data Plane Development Kit. 2018. [DPDK](https://dpdk.org).
23. Xenofontas Dimitropoulos, Paul Hurley, and Andreas Kind. 2008. Probabilistic Lossy Counting: An Efficient Algorithm for Finding Heavy Hitters. ACM SIGCOMM Computer Communication Review 38, 1 (2008).
24. Philippe Flajolet, Éric Fusy, Olivier Gandouet, and Frédéric Meunier. 2007. HyperLogLog: The Analysis of A Near-optimal Cardinality Estimation Algorithm. In Proc. of AOFA. 127–146.
25. Philippe Flajolet and G. Nigel Martin. 1985. Probabilistic Counting Algorithms for Data Base Applications. J. Comput. System Sci. 31, 2 (1985), 182–209.
26. Nate Foster, Rob Harrison, Michael J. Freedman, Christopher Monsanto, Jennifer Rexford, Alec Story, and David Walker. 2011. Frenetic: A Network Programming Language. In Proc. of ICFP.
27. Sriram Govindan, Jie Liu, Aman Kansal, and Anand Sivasubramaniam. 2011. Cuanta: Quantifying Effects of Shared On-chip Resource Interference for Consolidated Virtual Machines. In Proc. of SoCC.
28. Arpit Gupta, Rüdiger Birkner, Marco Canini, Nick Feamster, Chris Mac-Stoker, and Walter Willinger. 2016. Network Monitoring as a Streaming Analytics Problem. In Proc. of HotNets.
29. Nikhil Handigol, Brandon Heller, Vimalkumar Jeyakumar, David Mazières, and Nick McKeown. 2014. I Know What Your Packet Did Last Hop: Using Packet Histories to Troubleshoot Networks. In Proc. of NSDI.
30. Nicholas J.A. Harvey, Jelani Nelson, and Krzysztof Onak. 2008. Sketching and Streaming Entropy via Approximation Theory. In Proc. of FOCS.
31. Stefan Heule, Marc Nunkesser, and Alexander Hall. 2013. HyperLogLog in Practice: Algorithmic Engineering of a State of The Art Cardinality Estimation Algorithm. In Proc. of EDBT.
32. Qun Huang, Xin Jin, Patrick P C Lee, Runhui Li, Lu Tang, Yi-Chao Chen, and Gong Zhang. 2017. SketchVisor: Robust Network Measurement for Software Packet Processing. In Proc. of SIGCOMM.
33. Qun Huang and Patrick P. C. Lee. 2015. A Hybrid Local and Distributed Sketching Design for Accurate and Scalable Heavy Key Detection in Network Data Streams. Computer Networks 91 (2015), 298–315.
34. Qun Huang, Patrick P. C. Lee, and Yungang Bao. 2018. SketchLearn: Relieving User Burdens in Approximate Measurement with Automated Statistical Inference (Technical Report). [SketchLearn Technical Report](https://github.com/huangqundl/SketchLearn/blob/master/TechReport.pdf).
35. Vimalkumar Jeyakumar, Mohammad Alizadeh, Yilong Geng, Changhoon Kim, and David Mazières. 2014. Millions of Little Minions: Using Packets for Low Latency Network Programming and Visibility. In Proc. of SIGCOMM.
36. Lavanya Jose, Minlan Yu, and Jennifer Rexford. 2011. Online Measurement of Large Traffic Aggregates on Commodity Switches. In USENIX HotICE.
37. Srikanth Kandula and Ratul Mahajan. 2009. Sampling Biases in Network Path Measurements and What To Do About It. In Proc. of IMC.
38. Abhishek Kumar, Minho Sung, Jun (Jim) Xu, and Jia Wang. 2004. Data Streaming Algorithms for Efficient and Accurate Estimation of Flow Size Distribution. In Proc. of SIGMETRICS.
39. Patrick P. C. Lee, Tian Bu, and Girish Chandranmenon. 2010. A Lock-Free, Cache-Efficient Multi-Core Synchronization Mechanism for Line-Rate Network Traffic Monitoring. In Proc. of IPDPS.
40. Yuliang Li, Rui Miao, Changhoon Kim, and Minlan Yu. 2016. FlowRadar: A Better NetFlow for Data Centers. In Proc. of NSDI.
41. Xuemei Liu, Meral Shirazipour, Minlan Yu, and Ying Zhang. 2016. MOZART: Temporal Coordination of Measurement. In Proc. of SOSR.
42. Zaoxing Liu, Antonis Manousis, Gregory Vorsanger, Vyas Sekar, and Vladimir Braverman. 2016. One Sketch to Rule Them All: Rethinking Network Flow Monitoring with UnivMon. In Proc. of SIGCOMM.
43. Gurmeet Singh Manku. 2002. Approximate Frequency Counts over Data Streams. In Proc. of VLDB.
44. Ahmed Metwally, Divyakant Agrawal, and Amr El Abbadi. 2005. Efficient Computation of Frequent and Top-k Elements in Data Streams. In Proc. of ICDT.
45. Rui Miao, Hongyi Zeng, Changhoon Kim, Jeongkeun Lee, and Minlan Yu. 2017. SilkRoad: Making Stateful Layer-4 Load Balancing Fast and Cheap Using Switching ASICs. In Proc. of SIGCOMM.
46. J. Misra and David Gries. 1982. Finding repeated elements. Science of Computer Programming 2, 2 (1982), 143–152.
47. Masoud Moshref, Minlan Yu, Ramesh Govindan, and Amin Vahdat. 2014. DREAM: Dynamic Resource Allocation for Software-defined Measurement. In Proc. of SIGCOMM.
48. Masoud Moshref, Minlan Yu, Ramesh Govindan, and Amin Vahdat. 2015. SCREAM: Sketch Resource Allocation for Software-defined Measurement. In Proc. of CoNEXT.
49. Masoud Moshref, Minlan Yu, Ramesh Govindan, and Amin Vahdat. 2016. Trumpet: Timely and Precise Triggers in Data Centers. In Proc. of SIGCOMM.
50. Srinivas Narayana, Mina Tashmasbi Arashloo, Jennifer Rexford, and David Walker. 2016. Compiling Path Queries. In Proc. of NSDI.
51. Srinivas Narayana, Anirudh Sivaraman, Vikram Nathan, Prateesh Goyal, Venkat Arun, Mohammad Alizadeh, Vimalkumar Jeyakumar, and Changhoon Kim. 2017. Language-Directed Hardware Design for Network Performance Monitoring. In Proc. of SIGCOMM.
52. OpenvSwitch. 2018. [Open vSwitch](http://openvswitch.org).
53. P4 Language. 2018. [P4.org](https://p4.org).
54. Ben Pfaff, Justin Pettit, Teemu Koponen, Ethan J. Jackson, Andy Zhou, Jarno Rajahalme, Jesse Gross, Alex Wang, Jonathan Stringer, Pravin Shelar, Keith Amidon, and Martín Casado. 2015. The Design and Implementation of Open vSwitch. In Proc. of NSDI.
55. Jeff Rasley, Brent Stephens, Colin Dixon, Eric Rozner, Wes Felter, Kanak Agarwal, John Carter, and Rodrigo Fonseca. 2014. Planck: Millisecond-scale Monitoring and Control for Commodity Networks. In Proc. of SIGCOMM.
56. Arjun Roy, Hongyi Zeng, Jasmeet Bagga, George Porter, and Alex C Snoeren. 2015. Inside the Social Network’s (Datacenter) Network. In Proc. of SIGCOMM.
57. Arjun Roy, Hongyi Zeng, Jasmeet Bagga, and Alex C Snoeren. 2017. Passive Realtime Datacenter Fault Detection and Localization. In Proc. of NSDI.
58. Robert Schweller, Zhichun Li, Yan Chen, Yan Gao, Ashish Gupta, Yin Zhang, Peter Dinda, Ming Yang Kao, and Gokhan Memik. 2007. Reversible Sketches: Enabling Monitoring and Analysis over High-Speed Data Streams. IEEE/ACM Trans. on Networking 15, 5 (2007), 1059–1072.
59. Vyas Sekar, Michael K. Reiter, Walter Willinger, Hui Zhang, Ramana Rao Kompella, and David G. Andersen. 2008. cSAMP: A System for Network-Wide Flow Monitoring. In Proc. of USENIX NSDI.
60. Vyas Sekar, Michael K Reiter, and Hui Zhang. 2010. Revisiting the Case for a Minimalist Approach for Network Flow Monitoring. In Proc. of IMC.
61. S. S. Shapiro and M. B. Wilk. 1965. An Analysis of Variance Test for Normality (Complete Samples). Biometrika 52, 3/4 (1965), 591–611.
62. Vibhaalakshmi Sivaraman, Srinivas Narayana, Ori Rottenstreich, S. Muthukrishnan, and Jennifer Rexford. 2017. Heavy-Hitter Detection Entirely in the Data Plane. In Proc. of SOSR.
63. Haoyu Song, Sarang Dharmapurikar, Jonathan Turner, and John Lockwood. 2005. Fast Hash Table Lookup using Extended Bloom Filter. In Proc. of SIGCOMM.
64. Daniel Stutzbach, Reza Rejaie, Nick Duffield, Subhabrata Sen, and Walter Willinger. 2009. On Unbiased Sampling for Unstructured Peer-to-peer Networks. IEEE/ACM Trans. on Networking 17, 2 (2009), 377–390.
65. Olivier Tilmans, Tobias Bühler, Ingmar Poese, Stefano Vissicchio, and Laurent Vanbever. 2018. Stroboscope: Declarative Traffic Mirroring on a Budget. In Proc. of NSDI.