### 6.1 Data Suppression and Its Consequences

The suppression of private ad serving data not only protects each ad network's confidential information, but it also complicates the verification of the legitimacy of ad requests from partner networks. This leaves advertisers vulnerable to fraud. Specifically, the masking of the last octet of IP addresses significantly hampers efforts to identify machines that exhibit suspicious behavioral patterns.

Furthermore, brokered auction traffic lacks referrer or section ID fields, and conversions are not reported for brokered traffic, even if it is sold to a locally-owned advertiser. The absence of these fields enables fraudsters to register with less vigilant or naive networks and perpetrate fraud across multiple networks.

### 6.2 Consistency vs. Flexibility

As previously discussed, RightMedia does not enforce the requirement that the referrer must match the publisher’s registered site domain and assigned sections. This policy is likely aimed at maintaining user-friendliness, as it would be inconvenient for publishers to re-register and obtain new section IDs if they change their domain. We identified an instance where a benign MIA (Missing in Action) site relocated to a new domain while retaining its old section IDs. Our analysis tools flagged this as suspicious because the original site (benign-golf-site1.com, obfuscated) returned a 404 error, yet there were numerous impressions from the referrer (benign-golf-site2.com, obfuscated). Manual inspection confirmed that the site had legitimate content, and the domain change was likely due to the owner seeking a more lucrative domain.

We suspect that RightMedia does not verify whether the referrer matches the section ID, possibly because they consider the ad networks responsible for monitoring and filtering potentially fraudulent traffic.

### 6.3 Hiding Fraud in the Exchange

The distributed nature of ad exchanges makes them a fertile ground for fraud. Apart from Yahoo! and the exchange itself, no entity has a comprehensive view of the entire system, allowing fraudsters to appear less malicious than they are. For example, in Section 5.1, we demonstrated a case where a malicious cookie generated 300 times more revenue in NETWORKX’s auction traffic than in their local traffic. However, NETWORKX only sees a small portion of the total auctioned traffic, making it impossible to determine the full extent of the fraudulent activity with our limited perspective.

Additionally, every fraudulent site we identified, whether a fake site (as discussed in Section 2.9) or one of our manually-identified bad publishers (from Section 3.2), had a large number of ads from multiple ad networks and exchanges. This distribution of fraudulent costs among many independent and often competing entities (such as DoubleClick and RightMedia) further complicates the detection of fraud.

### 6.4 What RightMedia Does Right

RightMedia takes steps to address the problem of fraud. Their user interface provides tools for ad network administrators to identify and shut down blatant cases of fraud and suspicious partnerships. In our experience with NETWORKX, it appears that ad networks generally stay actively involved in their ad serving processes to protect their advertisers from severe fraud.

RightMedia’s built-in malicious behavior detection system, SCOUR, can identify severe cases of fraud and take measures to limit (though not entirely stop) such activities. According to the RightMedia online user guide, SCOUR “searches for patterns exhibited by desktop software and flags sections that exhibit what, in our opinion, may be malicious traffic patterns” [4]. The system focuses on detecting bot signatures and flagging publishers with significant traffic from machines exhibiting these signatures. With a full view of the exchange, a modified version of this system could potentially detect more sophisticated types of fraud.

### 7. RELATED WORK

Previous research has focused on various aspects of click-fraud detection. Majumdar et al. proposed a content delivery system to verify broker honesty under standard security assumptions [18]. Metwally et al. developed efficient algorithms for detecting duplicate clicks [26], and other studies have shown how malware can exploit ad networks [7, 10].

Juels et al. introduced a cryptographic approach to replace the pay-per-click model with a pay-per-action model, discarding unsuccessful clicks [14]. Immorlica et al. presented a click-fraud resistant method for learning the click-through rate of advertisements [13]. Kintana et al. created a system to penetrate click-fraud filters and discover detection vulnerabilities [16].

Recent work has also examined botnets, with researchers infiltrating or seizing control of parts of the botnet infrastructure to gain insights into their operations [15, 22, 24, 25]. These botnets were primarily used for spam email and financial theft.

Our analysis is unique in using near real-time data to investigate ad fraud from inside an ad exchange and from the perspective of a botnet controller. This offers a detailed view of the ad exchange structure and its weaknesses. However, many ad networks are still hesitant to provide researchers with access to their data streams, limiting the effectiveness of proposed methods in preventing and quantifying fraud.

### 8. CONCLUSIONS

In this paper, we described the workings of online ad exchanges, focusing on Yahoo!’s RightMedia. We found that the complexity of ad exchanges provides opportunities for criminals to generate revenue through malware impersonating legitimate user activities. There is a trade-off between the security of the exchange and the flexibility offered to publishers and ad networks to maximize profits.

### Acknowledgements

This work was supported by the Office of Naval Research (ONR) under Grant N000140911042, the U.S. Army Research Laboratory and the U.S. Army Research Office under MURI grant No. W911NF-09-1-0553, and the National Science Foundation (NSF) under grants CNS-0845559 and CNS-0905537.

### References

[1] SeleniumHQ. Web Application Testing System.
http://seleniumhq.org/.

[2] Secure Accounting and Auditing on the Web. volume 30, pages 541 – 550, 1998.

[3] IAB Interactive Advertising Glossary.
http://www.iab.net/wiki/index.php/Category:Glossary, 2011.

[4] RightMedia Exchange Knowledge Base.
https://kb.yieldmanager.com/, 2011.

[5] C. Borgs, J. Chayes, O. Etesami, N. Immorlica, K. Jain, and M. Mahdian. Dynamics of Bid Optimization in Online Advertisement Auctions. In Proceedings of the International Conference on World Wide Web, 2007.

[6] N. Daswani, C. Mysen, V. Rao, S. Weis, and S. G. K. Gharachorloo. Online Advertising Fraud. In Proceedings of Crimeware, 2008.

[7] N. Daswani and M. Stoppelman. The Anatomy of Clickbot.A. In Proceedings of the USENIX Workshop on Hot Topics in Understanding Botnet, 2007.

[8] B. Edelman. Securing Online Advertising: Rustlers and Sheriffs in the New Wild West. In Harvard Business School NOM Working Paper No. 09-039, 2008.

[9] M. Gandhi, M. Jakobsson, and J. Ratkiewicz. Badvertisements: Stealthy Click-Fraud with Unwitting Accessories. In Journal of Digital Forensic Practice, 2011.

[10] F. Hacquebor. Making a Million: Criminal Gangs, the Rogue Traffic Broker, and Stolen Clicks.
http://blog.trendmicro.com/making-a-million%E2%80%94criminal-gangs-the-rogue-traffic-broker-and-stolen-clicks/, 2010.

[11] H. Haddadi. Fighting Online Click-fraud Using Bluff Ads. volume 40, April 2010.

[12] Y. Hu. Performance-based pricing models in online advertising. Number March, 2004.

[13] N. Immorlica, K. Jain, M. Mahdian, and K. Talwar. Click Fraud Resistant Methods for Learning Click-Through Rates. Internet and Network Economics, pages 34–45, 2005.

[14] A. Juels, S. Stamm, and M. Jakobsson. Combatting Click Fraud via Premium Clicks. In Proceedings of the USENIX Security Symposium, 2007.

[15] C. Kanich, C. Kreibich, K. Levchenko, B. Enright, G. Voelker, V. Paxson, and S. Savage. Spamalytics: An Empirical Analysis of Spam Marketing Conversion. In Proceedings of the ACM Conference on Computer and Communications Security, 2008.

[16] C. Kintana, D. Turner, J. Pan, A. Metwally, N. Daswani, E. Chin, and A. Bortz. The goals and challenges of click fraud penetration testing systems. In In Proceedings of the International Symposium on Software Reliability Engineering, 2009.

[17] N. Kshetri. The Economics of Click Fraud. volume 8, pages 45 –53, May-June 2010.

[18] S. Majumdar, D. Kulkarni, and C. Ravishankar. Addressing Click Fraud in Content Delivery Systems. In Proceedings of the IEEE Conference on Computer Communications, 2007.

[19] A. Metwally, D. Agrawal, and A. Abbadi. Duplicate Detection in Click Streams. In Proceedings of the International Conference on World Wide Web, 2005.

[20] A. Metwally, D. Agrawal, and A. E. Abbadi. DETECTIVES: DETEcting Coalition hiT Inflation attacks in adVertising nEtworks Streams. In Proceedings of the International Conference on World Wide Web, 2007.

[21] L. Rodriguez.
http://www.washingtonpost.com/wp-srv/technology/documents/yahoo_may2006.pdf, 2006.

[22] B. Stock, J. Gobel, M. Engelberth, F. Freiling, and T. Holz. Walowdac â ˘A¸S Analysis of a Peer-to-Peer Botnet. In Proceedings of European Conference on Computer Network Defense, 2009.

[23] B. Stone-Gross, R. Abman, R. Kemmerer, C. Kruegel, D. Steigerwald, and G. Vigna. The Underground Economy of Fake Antivirus Software. In Proceedings of the Workshop on Economics of Information Security, 2011.

[24] B. Stone-Gross, M. Cova, L. Cavallaro, B. Gilbert, M. Szydlowski, R. Kemmerer, C. Kruegel, and G. Vigna. Your Botnet is My Botnet: Analysis of a Botnet Takeover. In Proceedings of the ACM Conference on Computer and Communications Security, 2009.

[25] B. Stone-Gross, T. Holz, G. Stringhini, and G. Vigna. The Underground Economy of Spam: A Botmaster’s Perspective of Coordinating Large-Scale Spam Campaigns. In Proceedings of the USENIX Workshop on Large-Scale Exploits and Emergent Threats, 2011.

[26] L. Zhang and Y. Guan. Detecting Click Fraud in Pay-Per-Click Streams of Online Advertising Networks. In Proceedings of the IEEE Conference on Distributed Computing Systems, 2008.