### 11. HTTP and SSL

HTTP (Hypertext Transfer Protocol) operates on top of SSL (Secure Sockets Layer), which provides the necessary cryptographic strength. By integrating SSL at the server level, the server can retrieve the authentication parameters negotiated by SSL. SSL achieves authentication through public-key cryptography in X.5509 certificates [8] and requires a public-key infrastructure (PKI). The main challenge with using SSL for authentication is the lack of a global PKI, and it is unlikely that one will be established in the near future. Although several major certificate authorities (e.g., Verisign) exist, the space is fragmented and disjointed. Additionally, non-technical users often find client certificates difficult to understand, leading to their limited adoption. Some argue that the benefits of PKI as a solution to many network security problems have been overstated [13]. Client support for SSL is not standardized, leading to interoperability issues (e.g., Microsoft Internet Explorer and Netscape Navigator client certificates do not interoperate) and performance concerns. SSL can decrease web server performance and often provides more functionality than most applications require.

To avoid these issues, Bergadano, Crispo, and Eccettuato have used Java applets to secure HTTP transactions [6].

### 7.3 Schemes in Practice

Many ad hoc schemes are currently in use for web authentication without relying on SSL or any of the HTTP authentication mechanisms. Instead, these schemes often use HTTP state management to store authenticators on the client side. This approach helps sites provide authentication for web applications while maintaining ease-of-use and performance. While some of these schemes are well-designed and provide appropriate levels of security, others have critical flaws.

Shibboleth, a project of Internet2, is investigating architectures, frameworks, and technologies to support cross-realm authentication and authorization for access to web pages [39]. The group has conducted a survey of client authentication methods at several universities, most of which use a combination of Kerberos, client certificates, HTTP authentication, and cookies. However, they have not yet presented a complete design.

Open Market has patented a scheme that creates a folded cryptographic hash of a server secret, a session identifier, and other parameters [29]. Yahoo uses a cookie authentication scheme that computes the MD5 hash of a server secret, user identifier, timestamp, and other parameters [47]. This scheme is documented on their website. The ArsDigita Community System (ACS) uses a SHA1-based cookie authentication scheme [30]. All these schemes are likely secure against interrogative adversaries but may be vulnerable to eavesdroppers.

Microsoft Passport offers a managed cookie authentication scheme [36]. After a user logs in, Microsoft generates a cookie authenticator. Vendors participating in the passport service can verify the authenticator to determine authenticity and authorization. The details of the authentication scheme have not been published, but a white paper indicates that Microsoft shares a unique symmetric key with each vendor. These keys can both generate and verify authenticators.

### 8. Conclusion

To provide designers and implementers with a clear framework, we have described the limitations, requirements, and security models specific to web client authentication. We have also provided guidelines for designing a secure client authentication scheme based on our informal survey of commercial schemes. The survey revealed that many sites are not secure against interrogative adversaries. We proposed an authentication scheme that is secure against such adversaries.

Web sites have a wide range of requirements, and no single authentication scheme can meet them all. Currently, SSL remains too costly, and client authentication infrastructures are not widely deployed. This partly explains the proliferation of home-brew schemes. The web community should recommend a secure standard or best practices to eliminate the use of insecure home-brew authentication schemes. We hope this paper will help in resisting common attacks.

For more information and our source code, download our technical report [18] or visit our website at http://cookies.lcs.mit.edu/.

### 9. Acknowledgments

We thank David Andersen, Ian Anderson, Jeffrey W. Baker, Richard Barbalace, Andrew M. Boardman, Benjie Chen, David Dittrich, Paul Hill, Frans Kaashoek, David Mazières, Robert T. Morris, Steve Morris, Joon Park, Matt Power, Ron Rivest, Jerry Saltzer, Richard Smith, Win Treese, the anonymous reviewers, and the members of the PDOS group at MIT. We also thank the companies who discussed the security of their websites with us: FatBrain.com, WSJ.com, and yahoo.com.

The students of the MIT Applied Security Reading Group (http://pdos.lcs.mit.edu/asrg/) deserve credit for the genesis of this project. Finally, we thank Duncan Hines for providing the materials necessary to sustain our efforts.

### References

[1] Martín Abadi and Roger Needham. Prudent engineering practice for cryptographic protocols. Technical Report 125, DEC Systems Research Center, June 1994.

[2] Allaire Corporation. Personal Communication, January 2001.

[3] Mihir Bellare, Anand Desai, David Pointcheval, and Phillip Rogaway. Relations among notions of security for public-key encryption schemes. In Hugo Krawczyk, editor, Proceedings of Advances in Cryptology—CRYPTO 98, volume 1462 of Lecture Notes in Computer Science, pages 26–45, Santa Barbara, CA, 1998. Springer-Verlag.

[4] Mihir Bellare and Phillip Rogaway. The AuthA protocol for password-based authenticated key exchange. IEEE P1363, March 2000. http://grouper.ieee.org/groups/1363/StudyGroup/Passwd.html#autha. Technical report.

[5] Steven M. Bellovin and Michael Merritt. Encrypted key exchange: Password-based protocols secure against dictionary attacks. In Proceedings of the 1992 IEEE Symposium on Security and Privacy, pages 72–84, Oakland, CA, May 1992.

[6] F. Bergadano, B. Crispo, and M. Eccettuato. Secure WWW transactions using standard HTTP and Java applets. In Proceedings of the 3rd USENIX Workshop on Electronic Commerce, pages 109–119, Boston, MA, September 1998.

[7] Victor Boyko, Philip MacKenzie, and Sarvar Patel. Provably secure password authenticated key exchange using Diffie-Hellman. In B. Preneel, editor, Proceedings of Advances in Cryptology—EUROCRYPT 2000, volume 1807 of Lecture Notes in Computer Science, Bruges, Belgium, May 2000. Springer-Verlag.

[8] CCITT. Recommendation X.509: The directory authentication framework, 1998.

[9] CERT. Malicious HTML tags in embedded client web requests. CA-2000-02, February 2000. http://www.cert.org/advisories/CA-2000-02.html.

[10] Dominique de Waleffe and Jean-Jacques Quisquater. Better login protocols for computer networks. In B. Preneel, R. Govaerts, and J. Vandewalle, editors, Proceedings of Computer Security and Industrial Cryptography, volume 741 of Lecture Notes in Computer Science, pages 50–70. Springer-Verlag, 1993.

[11] Tim Dierks and Christopher Allen. The TLS protocol version 1.0. RFC 2246, Network Working Group, January 1999.

[12] Danny Dolev, Cynthia Dwork, and Moni Naor. Non-malleable cryptography. In Proceedings of the 23rd ACM Symposium on Theory of Computing, pages 542–552, New Orleans, LA, 1991.

[13] Carl Ellison and Bruce Schneier. Ten risks of PKI: What you’re not being told about public key infrastructure. Computer Security Journal, 16(1):1–7, 2000.

[14] Roy Fielding, James Gettys, Jeffrey Mogul, Henrik Frystyk, Larry Masinter, Paul Leach, and Tim Berners-Lee. Hypertext Transfer Protocol — HTTP/1.1. RFC 2616, Network Working Group, June 1999.

[15] FIPS 180-1. Secure Hash Standard. U.S. Department of Commerce/N.I.S.T., National Technical Information Service, Springfield, VA, April 1995.

[16] John Franks, Phillip Hallam-Baker, Jeffrey Hostetler, Scott Lawrence, Paul Leach, Ari Luotonen, and Lawrence Stewart. HTTP authentication: Basic and digest access authentication. RFC 2617, Network Working Group, June 1999.

[17] Kevin Fu, M. Frans Kaashoek, and David Mazières. Fast and secure distributed read-only file system. In Proceedings of the 4th USENIX Symposium on Operating Systems Design and Implementation (OSDI 2000), pages 181–196, San Diego, CA, October 2000.

[18] Kevin Fu, Emil Sit, Kendra Smith, and Nick Feamster. Dos and don’ts of client authentication on the Web. Technical Report 818, MIT Laboratory for Computer Science, May 2001. http://www.lcs.mit.edu/.

[19] Shafi Goldwasser, Silvio Micali, and Ronald L. Rivest. A digital signature scheme secure against adaptive chosen-message attacks. SIAM Journal of Computing, 17(2):281–308, April 1988.

[20] Neil Haller. The S/KEY one-time password system. In Proceedings of the ISOC Symposium on Network and Distributed System Security, pages 151–157, San Diego, CA, February 1994.

[21] Neil Haller. The S/KEY one-time password system. RFC 1760, Network Working Group, February 1995.

[22] IEEE P1363a: Standard specifications for public key cryptography: Additional techniques. http://www.manta.ieee.org/groups/1363/P1363a.

[23] John T. Kohl. The use of encryption in Kerberos for network authentication. In G. Brassard, editor, Proceedings of Advances in Cryptology—CRYPTO 89, volume 435 of Lecture Notes in Computer Science, pages 35–43. Springer-Verlag, 1990.

[24] Hugo Krawczyk, Mihir Bellare, and Ran Canetti. HMAC: Keyed-hashing for message authentication. RFC 2104, Network Working Group, February 1997.

[25] David Kristol and Lou Montulli. HTTP State Management Mechanism. RFC 2965, Network Working Group, October 2000.

[26] Leslie Lamport. Password authentication with insecure communication. Communications of the ACM, 24(11):770–771, November 1981.

[27] Butler Lampson. Hints for computer system design. In Proceedings of the 9th ACM Symposium on Operating Systems Principles, pages 33–48, Bretton Woods, NH, 1983.

[28] Arjen Lenstra and Eric Verheul. Selecting cryptographic key sizes. http://www.cryptosavvy.com/cryptosizes.pdf, November 1999.

[29] Thomas Levergood, Lawrence Stewart, Stephen Morris, Andrew Payne, and Winfield Treese. Internet server access control and monitoring systems. U.S. patent #5,708,780, Open Market, January 1998.

[30] Richard Li and Archit Shah. ArsDigita Community System (ACS) security design. http://developer.arsdigita.com/doc/security-design.html.

[31] Alfred J. Menezes, Paul C. Van Oorschot, and Scott A. Vanstone. Handbook of applied cryptography. The CRC Press series on discrete mathematics and its applications. CRC Press, 1997.

[32] Keith Moore and Ned Freed. Use of HTTP State Management. RFC 2964, Network Working Group, October 2000.

[33] Robert Morris and Ken Thompson. Password security: A case history. Communications of the ACM, 22(11):584–597, November 1979.

[34] B. Clifford Neuman and Theodore Ts’o. Kerberos: An authentication service for computer networks. IEEE Communications Magazine, 32(9):33–38, September 1994.

[35] Joon S. Park and Ravi Sandhu. Secure cookies on the Web. IEEE Internet Computing, 4(4):36–44, July/August 2000.

[36] Microsoft passport. http://www.passport.com/.

[37] Eric Rescorla. SSL and TLS: Designing and Building Secure Systems. Addison-Wesley, 2000.

[38] Vipin Samar. Single sign-on using cookies for Web applications. In Proceedings of the 8th IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, pages 158–163, Palo Alto, CA, 1999.

[39] The Shibboleth Project. http://middleware.internet2.edu/shibboleth/.

[40] Dug Song. dsniff. http://www.monkey.org/~dugsong/dsniff/.

[41] Jennifer Steiner, Clifford Neuman, and Jeffrey Schiller. Kerberos: An authentication service for open network systems. In Proceedings of the Winter 1988 USENIX, pages 191–202, Dallas, TX, February 1988.

[42] Paul Syverson, Stuart Stubblebine, and David Goldschlag. Unlinkable serial transactions. In R. Hirschfeld, editor, Proceedings of Financial Cryptography, volume 1318 of Lecture Notes in Computer Science, Anguilla, BWI, 1997. Springer-Verlag.

[43] Andrew Tanenbaum, Sape Mullender, and Robbert van Renesse. Using sparse capabilities in a distributed system. In Proceedings of the 6th International Conference on Distributed Computing, pages 558–563, Cambridge, MA, 1986.

[44] David Wagner and Ian Goldberg. Proofs of security for the Unix password hashing algorithm. In T. Okamoto, editor, Proceedings of Advances in Cryptology—ASIACRYPT 2000, volume 1976 of Lecture Notes in Computer Science, Kyoto, Japan, December 2000. Springer-Verlag.

[45] Thomas Wu. The secure remote password protocol. In Proceedings of the 1998 Internet Society Network and Distributed System Security Symposium, pages 97–111, San Diego, CA, March 1998.

[46] Web security and mobile code. http://www.securityfocus.com/forums/www-mobile-code/.

[47] Yahoo, Inc. Personal Communication, November 2000.