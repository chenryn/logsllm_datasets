### Apache RocketMQ简介
Apache RocketMQ 是一个采用 Java 语言开发的分布式消息系统，最初由阿里巴巴团队开发，并于2016年底贡献给 Apache 基金会。

### 核心概念

- **Producer（消息生产者）**
  - 负责生成并发送消息。通常情况下，这些消息由业务系统产生。
  - **Producer Group**：指一组具有相同配置或行为模式的消息生产者的集合。属于同一组的 Producer 通常负责生成同一种类型的消息，并遵循相同的发送逻辑。

- **Consumer（消息消费者）**
  - 负责接收并处理消息。一般来说，后台服务会异步地消费这些消息。
  - **Push Consumer**：采用服务器主动推送的方式向客户端传递消息。
  - **Pull Consumer**：客户端定期从服务器拉取新的消息进行处理。
  - **Consumer Group**：指一组具有相同特性和行为的消息消费者的集合。归属于同一个组内的 Consumers 一般会共同处理某一类特定的消息，并执行相似的消费逻辑。

- **NameServer**
  - 在集群架构中充当协调角色，主要职责是维护 Broker 的路由信息及状态。
  - 它并不直接参与到消息的实际传输过程中。

- **Broker**
  - 作为 RocketMQ 的核心组件之一，负责管理消息的收发、存储以及确保系统的高可用性等功能。
  - Brokers 需要定时向 NameServer 报告自己的运行状况，默认每隔 10 秒上报一次；如果超过 2 分钟没有收到某个 Broker 的心跳，则认为该 Broker 已经失效。

- **Topic**
  - 用于对不同类型的消息进行分类标识，例如可以定义为 "User" 或 "Order" 等不同的主题。
  - 这是一个逻辑上的概念，用来组织和区分不同种类的消息流。
  - **Message Queue（消息队列）**：每个 Topic 下包含一个或多个 Message Queues，用于实际存放待处理的消息。