### 5.4 Game Updates Significantly Impact Resource Usage

The infrastructure required to host online games must account for the mutability of these games over time. Software patches, which are essential for fixing bugs, preventing cheats, and delivering new content, can vary greatly in size, from a few bytes to several gigabytes. Understanding the impact of these patches on hosting and adequately provisioning for them is crucial for supporting online games. We use the trace data from the Steam content delivery network (CDN) to examine this aspect. Our Steam trace includes the initial download of the popular first-person shooter (FPS) game *Half-Life 2* as well as several significant content updates for both clients and servers.

#### The Role of the Steam Network

The Steam network serves two primary functions: player authentication and content distribution. Players are authenticated to Steam for each game session through the download of an authentication module. Content, including game patches, is distributed to players and servers at irregular intervals and in varying sizes. These two functions are not distinguished in our dataset, but we can differentiate them using the GameSpy dataset, which tracks player load. By assuming that player load and game authentication are linearly correlated, we can isolate the bandwidth requirements of patches.

#### Validation and Analysis

To validate that the Steam data and the GameSpy data are tracking the same thing (i.e., player load), we consider a week without a Steam update. Figure 15 shows a scatter plot of Steam data (in megabits per second) versus GameSpy data (in players), with a least-squares fit line. The correlation coefficient for this week is 0.86, indicating a roughly linear relationship. Small discrepancies are attributed to minor changes in the size of the authentication module and sampling error.

Using the GameSpy dataset, we subtract the authentication data from the Steam data to focus on the bandwidth requirements of patches. Figure 16 illustrates a two-week period of Steam activity, with a single patch occurring three days into the period. The authentication data component, computed from the GameSpy dataset with a ratio of players to megabits/second of 1 to 0.0291, is also graphed. By integrating these two signals and subtracting, we estimate the patch burden on Steam for this patch to be 129.7 terabytes, which is 30% of that week’s total load, including authentication.

We apply the same methodology to four patches delivered during our trace and chart the bandwidth impact of these patches over a two-week period in Figure 17. Three anomalies deserve explanation:
- Patch p3 is cut short due to the release of p5.
- Patch p2 shows a rise in bandwidth after one week due to erroneous player data from GameSpy.
- According to Steam’s press releases, the two weeks of patch p7 contain numerous patches.

The cumulative distribution function (CDF) of the patch delivery data in Figure 18 shows that 80% of the load occurs within the first 72 hours for the three single-patch traces, whereas the various patches in trace p7 are delivered throughout a two-week period.

#### Observations and Implications

Our observations on patch distribution highlight several issues:
- Content delivery for games is a significant burden that must be provisioned for, as it can greatly increase the hosting bandwidth requirement.
- The optimal strategy for delivery and scheduling is unclear, but spacing content delivery such that the bulk of each patch is delivered before the next patch begins may help avoid the stacking effect seen in Figure 18.
- If minimizing the combined content and authentication load is a goal, patches should be released at the lowest peak times in the weekly and daily cycle. For example, a patch released Monday evening may potentially miss the daily afternoon peak and the weekend peak.

Future work will include examining the proper scheduling of patches based on measured game workloads.

### 6. Conclusions

Online gaming is an increasingly popular form of entertainment on the Internet. However, effectively hosting online games is a difficult and expensive proposition, made more challenging by the lack of workload models for games or known characteristics of gamers. Due to the unpredictable nature of a game's popularity and the high barrier to entry for hosting, several academic and industry projects have focused on providing a shared on-demand infrastructure to solve the hosting problem.

This paper presents a comprehensive analysis of a collection of online games and their workloads. Our results show that gamers are difficult to satisfy throughout the gameplay process: they are likely to leave and never return if they cannot connect, and they are unlikely to become loyal to a server. Additionally, the popularity of games follows a power-law distribution, with a small number of games having orders of magnitude more players than the rest. This makes resource provisioning very difficult for the initial release of a game when its popularity has not been established, but once established, game workloads are relatively stable from week to week, allowing providers to allocate resources more easily.

Game workloads are synchronized among themselves and other interactive applications and follow strong diurnal and geographic patterns. Such synchronization makes it difficult to obtain statistical multiplexing gain between games and other interactive applications when using shared infrastructure. Finally, game software updates provide a significant burden on game hosting and must be scheduled and planned for accordingly.

### References

[1] DFC Intelligence, “Online Game Market is Growing but Making Money is Difficult,” http://www.dfcint.com/news/prjune252003.html.

[2] Sony Online Entertainment, “Sony Online Entertainment Ships Everquest: Gates of Discord,” http://sonyonline.com/corp/press_releases/020904_GOD_ships.html, 2004.

[3] IBM Corp., “On demand business,” http://www.ibm.com/ondemand.

[4] IDC, “HP utility data center: Enabling enhanced agility,” http://www.hp.com/large/globalsolutions/ae/pdfs/udc_enabling.pdf, May 2003.

[5] Sun Microsystems, “N1 Grid – introducing just in time computing,” http://wwws.sun.com/software/solutions/n1/wp-n1.pdf, 2003.

[6] GGF, “Global Grid Forum,” http://www.ggf.org.

[16] AMDZone, “Valve Releases Hammer Port of Counter-Strike Server,” http://www.amdzone.com/releaseview.cfm?ReleaseID=1050, 2003.

[17] ServerSpy, “ServerSpy.Net: World Server Ranks,” http://www.serverspy.net/site/serverranks/, 2004.

[18] GameSpy Industries, “GameSpy: Gaming’s Home Page,” http://www.gamespy.com/, 2002.

[19] Valve, Inc., “Steam,” http://www.steampowered.com/, 2005.

[20] L. Catledge and J. Pitkow, “Characterizing Browsing Strategies in the World-Wide Web,” Computer Networks and ISDN Systems, vol. 27, no. 6, pp. 1065–1073, 1995.

[7] IBM Corp., “Tivoli intelligent thinkdynamic orchestrator,” http://www.ibm.com/software/tivoli/products/intell-orch, 2004.

[21] F. Chang and W. Feng, “Modeling Player Session Times of On-line Games,” in NetGames 2003, May 2003.

[8] E. Manoel et al., Provisioning On Demand: Introducing IBM Tivoli Intelligent ThinkDynamic Orchestrator, IBM International Technical Support Organization, December 2003, http://www.redbooks.ibm.com.

[9] D. Saha, S. Sahu, and A. Shaikh, “A Service Platform for On-Line Games,” in NetGames, Redwood City, CA 2003.

[10] A. Shaikh, S. Sahu, M. Rosu, M. Shea, and D. Saha, “Implementation of a Service Platform for Online Games,” in NetGames, August 2004.

[11] M. Crovella and A. Bestavros, “Self-similarity in World Wide Web Traffic: Evidence and Possible Causes,” in Proceedings of ACM SIGMETRICS, May 1996.

[12] K. Gummadi, R. Dunn, S. Saroiu, S. Gribble, H. Levy, and J. Zahorjan, “Measurement, Modeling, and Analysis of a Peer-to-Peer Workload,” in Proceedings of ACM SOSP, October 2003.

[13] Online Game Publisher, “Private Communication,” 2004.

[14] mshmro.com, “Counter-strike Server,” http://www.mshmro.com/.

[15] W. Feng, F. Chang, W. Feng, and J. Walpole, “Provisioning On-line Games: A Traffic Analysis of a Busy Counter-Strike Server,” in Proc. of the Internet Measurement Workshop, November 2002.

[22] ReliaSoft Corporation, “Life Data Analysis and Reliability Engineering Theory and Principles Reference from ReliaSoft,” http://www.weibull.com/lifedatawebcontents.htm, 2003.

[23] T. Henderson and S. Bhatti, “Modelling User Behavior in Networked Games,” in ACM Multimedia, 2001, pp. 212–220.

[24] Half-Life Admin Mod Developers, “Half-Life Admin Mod Home,” http://www.adminmod.org/.

[25] AMX Mod Developers, “AMX Mod Server Plugin,” http://amxmod.net/.

[26] D. Papagiannaki, N. Taft, Z. Zhang, and C. Diot, “Long-Term Forecasting of Internet Backbone Traffic: Observations and Initial Models,” in Proc. IEEE INFOCOM, 2003.

[27] CNN, “SoBig.F Breaks Virus Speed Records,” http://www.cnn.com/2003/TECH/internet/08/21/sobig.virus, 2003.

[28] Microsoft Corporation, “Xbox Live,” http://www.xbox.com/live, 2003.

[29] Electronic Arts, Inc., “EA.com,” http://www.ea.com/, 2003.

[30] Butterfly.net, Inc., “Butterfly Grid Solution for Online Games,” http://www.butterfly.net/, 2003.

[31] Geobytes, Inc., “Geobytes Home Page,” http://www.geobytes.com/, 2003.