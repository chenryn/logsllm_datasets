以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 参考文献

[41] M. T. Rahman, Q. Shi, S. Tajik, H. Shen, D. L. Woodard, M. Tehranipoor, and N. Asadizanjani, “物理检查攻击：硬件安全的新前沿,” in 2018 IEEE 第三届验证与安全研讨会 (IVSW), 2018年7月, pp. 93–102.
© 2020 IEEE

[42] M. K. Mc Manus, J. A. Kash, S. E. Steen, S. Polonsky, J. C. Tsang, D. R. Knebel, and W. Huott, “PICA: 使用皮秒成像电路分析的CMOS电路背面故障分析,” Microelectronics Reliability, vol. 40, no. 8, pp. 1353–1358, 2000年8月.

[43] A. Schlösser, D. Nedospasov, J. Krämer, S. Orlic, and J.-P. Seifert, “简单的光子发射分析AES,” in 加密硬件和嵌入式系统 – CHES 2012, ser. Lecture Notes in Computer Science, E. Prouff and P. Schaumont, 编. Berlin, Heidelberg: Springer, 2012, pp. 41–57.

[44] H. Lohrke, S. Tajik, T. Krachenfels, C. Boit, and J. Seifert, “使用热激光刺激提取密钥：Xilinx UltraScale FPGA案例研究,” IACR Trans. Cryptogr. Hardw. Embed. Syst., vol. 2018, no. 3, pp. 573–595, 2018.

[45] F. Stellari, P. Song, M. Villalobos, and J. Sylvestri, “利用自发光子发射揭示SRAM存储内容,” in VTS 2016. IEEE Computer Society, 2016, pp. 1–6.

[46] J. Couch, N. Whewell, A. Monica, and S. Papadakis, “利用光子发射显微镜直接读取FPGA中的闲置块RAM,” in HOST 2018. IEEE Computer Society, 2018, pp. 41–48.

[47] U. Kindereit, G. Woods, J. Tian, U. Kerst, R. Leihkauf, and C. Boit, “在电激活器件中激光束调制的定量研究（如激光电压探测中使用的）,” IEEE Transactions on Device and Materials Reliability, vol. 7, no. 1, pp. 19–30, 2007.

[48] S. Tajik, H. Lohrke, J. Seifert, and C. Boit, “光学非接触探测的力量：攻击FPGA的比特流加密,” in CCS 2017. ACM, 2017, pp. 1661–1674.

[49] H. Lohrke, S. Tajik, C. Boit, and J. Seifert, “无处可藏：FPGA上秘密数据的非接触探测,” in CHES 2016, ser. LNCS, vol. 9813. Springer, 2016, pp. 147–167.

[50] B. Niu, G. M. E. Khoo, Y.-C. S. Chen, F. Chapman, D. Bockelman, and T. Tong, “激光逻辑状态成像 (LLSI),” in ISTFA 2014. ASM International, 2014, p. 65.

[51] M. Wagner, S. Heyse, and C. Guillemet, “针对近期智能卡DES轮密钥的单迹线和少数迹线模板攻击的暴力搜索策略,” IACR Cryptology ePrint Archive, vol. 2017, p. 614, 2017.

[52] H. Groß, S. Mangard, and T. Korak, “域定向掩码：具有任意保护级别的紧凑掩码硬件实现,” in TIS@CCS 2016. ACM, 2016, p. 3.

[53] TEXPLAINED. (2018) 硬件安全软件 - CHIPJUICE - [在线]. 可用: https://www.texplained.com/about-us/chipjuice-software/
(2020) 访问我们的逆向工程 [在线]. 可用: https://www.techinsights.com/access-reverse-engineering

[54] TechInsights Inc. — TechInsights. (2020) 访问我们的逆向工程 [在线]. 可用: https://www.techinsights.com/access-reverse-engineering

[55] K. D. Pham, E. L. Horta, and D. Koch, “BITMAN: 用于FPGA比特流操作的工具和API,” in DATE 2017. IEEE, 2017, pp. 894–897.

[56] T. Zhang, J. Wang, S. Guo, and Z. Chen, “全面的FPGA逆向工程工具链：从比特流到RTL代码,” IEEE Access, vol. 7, pp. 38 379–38 389, 2019.

[57] M. Ender, P. Swierczynski, S. Wallat, M. Wilhelm, P. M. Knopp, and C. Paar, “深入了解特洛伊木马设计师的思想：将特洛伊木马集成到比特流中的挑战,” in ASPDAC 2019. ACM, 2019, pp. 112–119.

[58] A. Moradi, A. Barenghi, T. Kasper, and C. Paar, “FPGA比特流加密对功耗分析攻击的脆弱性：从Xilinx Virtex-II FPGA中提取密钥,” in Proceedings of the 18th ACM conference on Computer and communications security, 2011, pp. 111–124.

[59] A. Moradi, D. Oswald, C. Paar, and P. Swierczynski, “Altera Stratix II比特流加密机制的侧信道攻击：通过软件逆向工程促进黑盒分析,” in Proceedings of the ACM/SIGDA international symposium on Field programmable gate arrays, 2013, pp. 91–100.

[60] A. Moradi and T. Schneider, “改进的侧信道分析攻击Xilinx 5, 6, 和 7系列比特流加密,” in COSADE 2016, ser. LNCS. Springer, 2016, vol. 9689, pp. 71–87.

[61] M. Ender, A. Moradi, and C. Paar, “无法修补的硅：Xilinx 7系列FPGA比特流加密的完全破解,” in 29th {USENIX} Security Symposium ({USENIX} Security 20), 2020.

[62] J. N. Sarvaiya, S. Patnaik, and S. Bombaywala, “基于归一化互相关的图像配准,” in ACT 2009. IEEE, 2009, pp. 819–822.

[63] F. Meyer, “地形距离和流域线,” Signal processing, vol. 38, no. 1, pp. 113–125, 1994.

[64] J. S. Lim, 二维信号和图像处理. Prentice-Hall, Inc., 1990.

[65] M. Renauld and F.-X. Standaert, “代数侧信道攻击,” in 国际信息安全和密码学会议. Springer, 2009, pp. 393–410.

[66] Y. Oren, M. Renauld, F.-X. Standaert, and A. Wool, “超越汉明重量泄漏模型的代数侧信道攻击,” in 国际密码硬件和嵌入式系统研讨会. Springer, 2012, pp. 140–154.

[67] M. Soos, K. Nohl, and C. Castelluccia, “扩展SAT求解器以解决密码问题,” in SAT 2009, ser. LNCS, vol. 5584. Springer, 2009, pp. 244–257.

[68] Altera Corporation. (2016) Cyclone IV设备手册. [在线]. 可用: https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/hb/cyclone-iv/cyclone4-handbook.pdf

[69] M. T. Rahman, S. Tajik, M. S. Rahman, M. Tehranipoor, and N. Asadizanjani, “钥匙放在垫子下面：关于逻辑锁定方案不适当的安全假设.” in 2020 IEEE 国际硬件导向安全与信任研讨会 (HOST). IEEE, 2020.

[70] H. Gross. (2016) 域定向保护的AES硬件实现. [在线]. 可用: https://github.com/hgrosz/aes-dom

[71] The MathWorks Inc., “MATLAB – 技术计算的语言,” http://www.mathworks.com/products/matlab/

[72] T. Moos, “亚100纳米CMOS ASIC的静态功耗SCA及低噪声环境中掩码方案的安全性,” IACR Trans. Cryptogr. Hardw. Embed. Syst., vol. 2019, no. 3, pp. 202–232, 2019.

[73] S. Tajik, H. Lohrke, F. Ganji, J. Seifert, and C. Boit, “物理不可克隆函数的激光故障攻击,” in FDTC 2015. IEEE Computer Society, 2015, pp. 85–96.

[74] H. Lohrke, P. Scholz, C. Boit, S. Tajik, and J.-P. Seifert, “用于可编程逻辑重构攻击的故障敏感位置自动检测,” in ISTFA 2016. ASM International, 2016, p. 6.

[75] C. Helfmeier, D. Nedospasov, C. Tarnovsky, J. S. Krissler, C. Boit, and J. Seifert, “通过硅片入侵,” in CCS 2013. ACM, 2013, pp. 733–744.

[76] M. Von Haartman, S. Rahman, S. Ganguly, J. Verma, A. Umair, and T. Deborde, “10纳米技术节点及更高技术节点的光学故障隔离和纳米探针技术,” in Proceedings of the 41st International Symposium for Testing and Failure Analysis, 2015, pp. 47–51.

[77] J. Beutler, J. J. Clement, E. I. Cole, J. Stevens, V. C. Hodges, S. Silverman, and R. Chivas, “体硅器件上的可见光LVP,” Sandia National Lab.(SNL-NM), Albuquerque, NM (United States), 技术报告, 2015.

[78] C. Boit, H. Lohrke, P. Scholz, A. Beyreuther, U. Kerst, and Y. Iwaki, “通过10 µm体硅进行无接触可见光探测纳米级IC,” in Proceedings of the 35th Annual NANO Testing Symposium (NANOTS 2015), 2015, pp. 215–221.

[79] H. Tong, Y. Lai, and C. Wong, 高级倒装芯片封装. Springer US, 2013.

[80] E. Amini, A. Beyreuther, N. Herfurth, A. Steigert, B. Szyszka, and C. Boit, “芯片背面保护评估,” Journal of Hardware and Systems Security, vol. 2, no. 4, pp. 345–352, 2018.

[81] M. Kar, A. Singh, S. K. Mathew, A. Rajan, V. De, and S. Mukhopadhyay, “使用全集成感应电压调节器减少AES引擎的功耗侧信道信息泄露,” J. Solid-State Circuits, vol. 53, no. 8, pp. 2399–2414, 2018.

[82] S. Tajik, J. Fietkau, H. Lohrke, J. Seifert, and C. Boit, “PUFMon: 使用物理不可克隆函数对FPGA进行安全监控,” in IOLTS 2017. IEEE, 2017, pp. 186–191.
© 2020 IEEE

---

### 附录A
**附加图**

![图10. 覆盖三个八位寄存器的快照差异图像，一次填充随机数据，一次填充零。寄存器的显著差异（黑白点）对应于位值1。](https://example.com/image.png)

### 附录B
**SAT子句**

我们假设寄存器与其他单元格（例如，通过第III节中给出的技术）区分开，并且可以在多个时钟周期内恢复其值，遵循给定的指令。我们还假设对手已知设计架构，即每个时钟周期处理和存储的内容。然而，恢复值（通过快照）与寄存器单元之间的关系是未知的。换句话说，对手不知道哪个恢复值属于哪个寄存器单元。

考虑到上述假设，我们使用CryptoMiniSat 5 [67] 进行攻击，与其他类似的SAT求解器相比，它更容易处理XOR子句。需要注意的是，在这种SAT求解器中，问题应写成合取范式（CNF），或说是和的乘积。每个子句是一个和（逻辑或）几个变量（或它们的反）。所有子句的乘积（逻辑与）必须为真，因此每个子句都必须为真。CryptoMiniSat允许我们轻松定义基于XOR的子句。

我们首先关注某个时钟周期的单个快照，导致二进制观察{ω0, . . . , ωn−1∈ F2}，对应于设计中的n个寄存器。某些寄存器属于控制逻辑（有限状态机），不在我们的兴趣范围内。因此，根据底层设计的架构，我们目标是m ≤ n个寄存器。例如，对于AES的未保护实现，m = 256（128位状态寄存器和128位密钥寄存器）。如果我们定义变量vi∈{0,...,m−1}为目标寄存器单元在选定时钟周期的值，我们可以写成：

\[ v_i = c_{i,0} \omega_0 + ... + c_{i,n-1} \omega_{n-1}, \]

其中ci,j表示二进制系数。由于只有其中一个观测值与第i个寄存器单元相关联，因此只有一个系数ci,j∈{0,...,n−1}为1，其余为0。换句话说，∀i, ∑∀j ci,j = 1。这些是我们需要包含在布尔可满足性问题（SAT）中的第一个公式。

为此，我们将加法分解为位级别，为每个i单独定义中间变量tj∈{2,...,n−1}。为了简化起见，我们在下面省略了i的上标。c0和c1相加的结果是t2 = c0 ⊕ c1和进位c0c1。由于进位必须为零，我们可以向SAT添加以下子句：

\[ t2 ⊕ c0 ⊕ c1 = 1, \]
\[ c0 ∨ c1 = 1 \]

同样的过程重复用于将c2与先前加法的结果t2相加，即t3 = c2 ⊕ t2和c2t2 = 0。通常，我们可以写成：

\[ tj+1 ⊕ cj ⊕ tj = 1, \]
\[ cj ∨ tj = 1 \]

对于所有的j ∈ {2, . . . , n−2}。

最后，我们向SAT添加一个子句tn−1 ⊕ cn−1 = 1，定义加法的最终结果应为1。

这些子句（与观测值ω和被攻击电路的架构无关）是为每个目标寄存器单元i ∈ {0, . . . , m− 1}单独生成的。我们还需要为每个目标寄存器单元添加（3）的CNF。那些为0的观测值ωj会取消相应的系数cj。因此，我们可以写成：

\[ \left( \bigvee_{\forall j, \omega_j = 1} c_j \right) = 0, \]
\[ \left( \bigvee_{\forall j, \omega_j = 1} c_j \right) = 1. \]

这可以转换为：

\[ vi ⊕ \left( \bigvee_{\forall j, \omega_j = 1} c_j \right) = 1, \]
\[ vi ∨ \left( \bigvee_{\forall j, \omega_j = 1} c_j \right) = 1. \]

左边的等式可以很容易地作为子句添加到SAT中（因为它已经是CNF形式），但右边的等式需要拆分为多个子句如下：

\[ \forall j, \omega_j = 1, \]
\[ vi ∨ c_j = 1. \]

有更多不同时钟周期的快照时，（6）和（7）中的子句应基于相应的观测值ωj重复m个不同的寄存器变量vi。然而，这些子句仅在整个电路中定义一次，与快照数量无关。因此，（4）和（5）中的子句也不重复。

剩下的任务是基于电路的设计架构和其实现的功能，链接不同时钟周期的目标寄存器变量vi。例如，在基于轮次的架构中，状态寄存器单元存储密码轮次函数的输出，密钥寄存器单元存储轮次密钥。在序列化架构中，寄存器的内容被移位（例如，按字节方式），并在确定的时钟周期对特定寄存器执行某些操作（例如，Sbox）。

在具有d + 1份额的掩码实现中，每个时钟周期的目标寄存器数量变为m(d + 1)（例如，对于使用状态和密钥寄存器的两份额的一阶掩码AES实现，为512 × 2）。因此，（6）到（7）中的所有子句应重复d + 1次。接下来，我们定义m个虚拟变量νi = vi,l（对于每个时钟周期），其中(vi,1, . . . , vi,d+1)表示具有d+1份额的变量νi。相应的子句可以写成：

\[ \nu_i ⊕ vi,1 ⊕ . . . ⊕ vi,d+1 = 1. \]

其余部分与未掩码实现类似，即基于电路的设计架构链接不同时钟周期的（未掩码）变量νi。

© 2020 IEEE