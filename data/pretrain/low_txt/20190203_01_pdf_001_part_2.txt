### EDB Postgres Replication Server User’s Guide

#### 1. Introduction
xDB Replication Server supports a variety of database server products. For a list of certified and supported database servers, please refer to Section 10.1.

**Copyright Notice:**
© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.

#### 1.1 Multi-Master Replication Configurations
xDB Replication Server supports the following multi-master replication configurations:
- Between PostgreSQL database servers
- Between PostgreSQL database servers and Advanced Servers in PostgreSQL-compatible mode
- Between Advanced Servers in PostgreSQL-compatible mode
- Between Advanced Servers in Oracle-compatible mode

**Note:** For detailed information on supported source and target database server configurations, see Section 10.1.3.

#### 1.2 Prerequisites
The reader is expected to have basic SQL knowledge and familiarity with database administration for Oracle, SQL Server, or PostgreSQL, as applicable. This includes the ability to create databases, users, schemas, and tables, as well as assign database object privileges.

#### 1.3 Document Organization
This guide is structured as follows:
- **Chapter 1:** Describes conventions used throughout the guide and suggests sections to read based on your specific needs.
- **Chapter 2:** Provides an overview of xDB Replication Server, including basic concepts, architecture, and design guidelines.
- **Chapter 3:** Offers instructions for installing and uninstalling xDB Replication Server.
- **Chapter 4:** Introduces the xDB Replication Console, the graphical user interface for managing xDB Replication Server.
- **Chapter 5:** Details the configuration and operation of xDB Replication Server for single-master replication systems.
- **Chapter 6:** Details the configuration and operation of xDB Replication Server for multi-master replication systems.
- **Chapter 7:** Describes common operations for both single-master and multi-master replication systems.
- **Chapter 8:** Explains the xDB Replication Server Command Line Interface (CLI) for configuration and management.
- **Chapter 9:** Provides instructions for configuring and using the Data Validator.
- **Chapter 10 (Appendix):** Contains troubleshooting tips, error messages, supported database products, permitted database combinations, upgrade procedures, and other technical information.

**Copyright Notice:**
© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.

### 1.1 What’s New in Version 6.2
The following features have been added to xDB Replication Server version 6.2:
- **Product Registration Removal:** The requirement to register xDB Replication Server with an EnterpriseDB product license key has been removed. Related components, such as the Product Registration dialog box, the `license_key` parameter, and the `registerkey` command, have been eliminated.
- **Support for New Versions:** PostgreSQL and Advanced Server versions 10 and 11 are now supported. For more details, see Section 10.1.1.
- **Partitioned Tables Replication:** Partitioned tables created using the declarative partitioning feature in PostgreSQL and Advanced Server version 10 and later can now be replicated in log-based single-master or multi-master replication systems. For more information, see Section 7.10.
- **Table Removal in Single-Master Replication:** In a single-master replication system, you can now remove a table from a publication that has existing subscriptions, provided the table is not referenced by a foreign key constraint in another table. For more details, see Section 7.6.3.2.

### 1.2 Typographical Conventions
This guide uses the following typographical conventions:
- **Italic Font:** Used to introduce new terms, typically in the sentence where they are first defined.
- **Fixed-Width Font:** Used for literal terms such as SQL commands, table and column names, and programming language keywords. Example: `SELECT * FROM emp;`
- **Italic Fixed-Width Font:** Used for terms where the user must substitute actual values. Example: `DELETE FROM table_name;`
- **Vertical Pipe (|):** Denotes a choice between the terms on either side. Example: `[ a | b ]` means choose one of “a” or “b” or neither.
- **Square Brackets [ ]:** Indicate optional terms. Example: `[ a | b ]` means choose one of “a” or “b” or neither.
- **Braces { }:** Indicate mandatory choices. Example: `{ a | b }` means exactly one of “a” or “b” must be specified.
- **Ellipses (...):** Indicate that the preceding term may be repeated. Example: `[ a | b ] ...` means you can have a sequence like “b a a b a”.

### 1.3 Other Conventions
- **Platform Compatibility:** This guide applies to both Linux and Windows systems. Directory paths are presented in Linux format with forward slashes. For Windows, use the drive letter followed by a colon and backslashes.
- **Database Systems:** The guide refers to both PostgreSQL and EDB Postgres Advanced Server. "Advanced Server" is used for EDB Postgres Advanced Server, and "Postgres" is used generically for both. Specific names are used when a distinction is necessary.
- **Installation Directories:**
  - **PostgreSQL Linux:** Defaults to `/opt/PostgreSQL/x.x` for version 10 and earlier. Use community packages for later versions.
  - **PostgreSQL Windows:** Defaults to `C:\Program Files\PostgreSQL\x.x`.
  - **Advanced Server Linux (Interactive Installer):** Defaults to `/opt/PostgresPlus/x.xAS` or `/opt/edb/asx.x` for version 10 and earlier.
  - **Advanced Server Linux (RPM Package):** Defaults to `/usr/ppas-x.x` or `/usr/edb/asx.x`.
  - **Advanced Server Windows:** Defaults to `C:\Program Files\PostgresPlus\x.xAS` or `C:\Program Files\edb\asx.x`.

### 1.4 How to Use This Guide
- **General Overview:** Read Sections 2.1, 2.2, and 2.3.
- **Planning Replication Implementation:** Read Sections 2.1, 2.2, 2.3, and 2.4.
- **Single-Master Replication Setup:** Read Chapters 3, 4, 5, and 7.
- **Multi-Master Replication Setup:** Read Chapters 3, 4, 6, and 7.
- **Command Line Interface (CLI):** Read Chapter 8.
- **Data Validator:** Read Chapter 9.
- **Supported Database Products and Configurations:** Read Section 10.1.
- **Upgrading from Previous Versions:** Read Section 10.2.
- **Troubleshooting:** Read Section 10.3.

**Copyright Notice:**
© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.

### 2. Overview
This chapter introduces basic replication concepts and the architecture of xDB Replication Server. It also provides design guidelines for implementing a replication system.

#### 2.1 Why Use Replication
Replication is useful in various organizational scenarios where data consistency across multiple settings is crucial. xDB Replication Server supports both single-master and multi-master replication, making it versatile for different use cases.

##### 2.1.1 Offloading Reporting and Business Intelligence Queries
- **Use Case:** Replicate data from a production OLTP system to a separate database for reporting.
- **Benefits:**
  - Improved transaction processing performance on the OLTP system.
  - Enhanced query performance without interference from transactions.
  - Reduced licensing costs for reporting servers in Oracle installations.

##### 2.1.2 Using Warm Standby Servers
- **Use Case:** Maintain warm standby servers for improved data availability.
- **Benefits:**
  - Quick failover in case of a primary system failure.
  - Facilitates regular maintenance by switching to the standby server.

##### 2.1.3 Testing Systems in Parallel
- **Use Case:** Run old and new systems in parallel for testing and comparison.
- **Benefits:**
  - Real-time testing and validation in development and testing environments.

##### 2.1.4 Migrating Data
- **Use Case:** Migrate data from one system to another.
- **Benefits:**
  - Efficient data seeding through replication.

##### 2.1.5 Write Availability
- **Use Case:** Enable write access on replicated target databases.
- **Benefits:**
  - Multi-master replication allows write access on all participating databases.

##### 2.1.6 Write Scalability
- **Use Case:** Handle write-intensive applications.
- **Benefits:**
  - Utilize multiple database servers to process write transactions independently.

##### 2.1.7 Localized Data Access
- **Use Case:** Provide local access to geographically dispersed clients.
- **Benefits:**
  - Reduce latency by placing database servers close to client regions.

#### 2.2 Replication Concepts and Definitions
xDB Replication Server is a software product that enables the implementation of a replication system, which copies data from one location to another and ensures data consistency over time.

##### 2.2.1 Comparison of Single-Master and Multi-Master Replication
- **Single-Master Replication (SMR):** Changes occur in a designated master database and are replicated to one or more slave databases.
- **Multi-Master Replication (MMR):** Changes can occur in any of the participating databases and are replicated to all others.

**Supported Configurations:**
- **Single-Master Replication:**
  - PostgreSQL to PostgreSQL
  - Oracle to PostgreSQL
  - Oracle to Advanced Server
  - SQL Server to PostgreSQL
  - SQL Server to Advanced Server
- **Multi-Master Replication:**
  - PostgreSQL database servers
  - PostgreSQL and Advanced Servers in PostgreSQL-compatible mode
  - Advanced Servers in PostgreSQL-compatible mode
  - Advanced Servers in Oracle-compatible mode

**Note:** A database cannot participate in both a single-master and multi-master replication system simultaneously.

##### 2.2.2 Publications and Subscriptions
xDB Replication Server uses a publish and subscribe architecture. A publication is a named set of tables and views within a database, and a subscription is a named association of a publication to a target database.

- **Single-Master Replication:**
  - Define a publication in the master database.
  - Create a subscription in the target database.
  - Synchronization: Apply changes from the master to the slave.
  - Snapshot: Copy rows from the master to empty tables in the slave.
- **Multi-Master Replication:**
  - Define a publication in the master definition node (MDN).
  - Add additional databases to the replication system.
  - Synchronization: Can occur between any pair of master nodes.
  - Snapshot: From the MDN to any other master node.

**Note:** In a single-master replication system, xDB Replication Server creates a table in the subscription database for each view in the publication.

**Diagrams:**
- **Figure 2-1:** Publications in one database replicating to subscriptions in another database.
- **Figure 2-2:** Publications replicating to two subscription databases.
- **Figure 2-3:** Publications in two databases replicating to one subscription database.
- **Figure 2-4:** Cascading Replication: Tables used in both a subscription and a publication.
- **Figure 2-5:** Multi-master replication system with three master nodes.

##### 2.2.3 Single-Master (Master-to-Slave) Replication
- **Definition:** Changes are propagated from the master to the slave.
- **Constraints:**
  - Table definitions should not be changed unless using the DDL change replication feature.
  - Subscription table rows should not be modified.

##### 2.2.4 Multi-Master Replication
- **Definition:** Changes can occur in any participating database and are replicated to all others.
- **Terms:**
  - **Master Node:** A database participating in a multi-master replication system.
  - **Master Definition Node (MDN):** The database in which the publication is initially defined. Only one MDN exists at a time, but it can be changed.

**Copyright Notice:**
© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.