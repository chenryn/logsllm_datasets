### Vantage: Optimizing Video Upload for Time-Shifted Viewing of Social Live Streams

#### Key Features and Performance
- **High Real-Time and Delayed Viewing Quality**: Vantage achieves high real-time quality (within 3.3% of the quality achieved by real-time optimized streaming techniques on average) and high quality for delayed viewing (within 7.7% of the optimal quality achievable for delayed viewing on average). This demonstrates its effectiveness for applications involving time-shifted viewing, such as SLVS applications (Section 5.2.1).
- **Adaptability to Viewing Delays**: Vantage can adapt and achieve high QoE (Quality of Experience) for various distributions of viewing delays (Section 5.2.3).
- **Dynamic Content Handling**: Vantage improves QoE across different viewing delays for videos with highly dynamic content, even in the absence of bandwidth variations (Section 5.2.4).
- **Robustness to Bandwidth Misestimation**: Vantage is robust to errors in bandwidth estimation (Section 5.2.6).

#### 5.2.1 Overall Improvements
Table 1 presents the SQI-SSIM (Structural Quality Index - Structural Similarity Index Measure) of the received video at both real-time and a delay of 30 seconds for all traces and videos. The average SQI-SSIM over the two delays (shown in brackets) indicates how well a particular upload technique caters to both viewing scenarios.

- **Delayed Viewing Quality**: Vantage consistently outperforms Base-RT (up to 42.9%) for delayed viewing. The most significant gains are observed in the AT&T-LTE network trace, attributed to the significant bandwidth variations. Even in the T-Mobile-UMTS network trace, which has very low bandwidth and frequent zero-bandwidth periods, Vantage shows modest improvements in delayed viewing quality over Base-RT.
- **Average SQI-SSIM**: Across all traces and videos, Vantage (bolded entries) significantly outperforms both Base-RT and Base-Delay in average SQI-SSIM across the viewing delays.

#### 5.2.2 Fine-Grained Time Shifts
Figure 5a plots the SQI-SSIM of the video for each viewing delay. For real-time viewing, Base-RT outperforms both Base-Delay and Vantage. At viewing delays beyond 15 seconds, Base-Delay outperforms both Base-RT and Vantage. While the performance of Base-RT and Base-Delay is unsatisfactory for non-optimized delays, Vantage provides a smooth increase in quality as the time-shift delay increases, making it competitive at the delays for which the baselines are separately optimized.

Figure 5b shows the number of skipped frames in groups of 10 or more for different delays, quantifying the smoothness of the resulting video. Both Base-RT and Base-Delay suffer from a large number of skipped frames for non-optimized time-shifts. In contrast, Vantage has nearly the same number of skipped frames as the baselines at their respective optimal delays and significantly reduces the number of skipped frames for intermediate delays.

#### 5.2.3 Adapting to Viewer-Delay Distributions
Vantage optimizes the video upload process for different distributions of viewing delays. We evaluated Vantage's performance for three viewing delay distributions: one skewed towards real-time viewing, one skewed towards delayed viewing, and one with uniform weights for low latency and delayed viewing. Figure 5c illustrates the effect of these weights on video quality at different viewing delays between 0 and 30 seconds.

- **Low Viewing Delays (0-10 seconds)**: Vantage with a real-time skewed delay distribution achieves the highest quality.
- **High Viewing Delays (22-30 seconds)**: Vantage with a delay skewed distribution achieves the highest quality.
- **Intermediate Delays (10-22 seconds)**: Vantage with a uniform delay distribution strikes a balance, achieving the highest quality.

This demonstrates that Vantage can support multiple time-shifted viewing delays and be tuned to cater to the exact distribution of viewing delays for optimized QoE.

#### 5.2.4 Quality Improvements for Dynamic Videos
In addition to handling bandwidth variations, Vantage compensates for lower video quality in harder-to-encode segments, even without bandwidth variation. To emulate this, we ran Vantage and Base-RT for the Animation video, an animated sequence with highly dynamic scene content, at a constant bandwidth of 1.5 Mbps.

- **Base-RT**: Causes 7 frames to be dropped, affecting both real-time and delayed viewing.
- **Vantage**: Drops 8 frames in real-time but retransmits them later, resulting in no lost frames for delayed playback and an increase in SQI-SSIM from 0.960 (Base-RT) to 0.963.

#### 5.2.5 Optimizer Period
We evaluated Vantage with different values of \( P \) (optimizer period) ranging from 1 second to 8 seconds. Larger periods allow the optimizer to spread retransmissions over a longer duration, improving real-time quality but reducing delayed viewing improvements due to stale bandwidth estimates. Smaller periods provide more accurate estimates but may result in a drop in real-time quality and smaller improvements for delayed viewing if retransmissions are squeezed into shorter periods.

#### 5.2.6 Errors in Bandwidth Estimation
Vantage's scheduler uses the average bandwidth from the previous second to schedule frame transmissions for a future 2-second period. To evaluate the effect of bandwidth misestimation, we analyzed Vantage's performance with erroneous bandwidth estimates on the AT&T-LTE trace with the Talking Heads video.

- **Normal Operation**: Vantage achieves slightly lower SQI-SSIM values compared to having exact future bandwidth knowledge.
- **Resilience to Errors**: Vantage results in drops in quality of at most 1.7%, 3.2%, and 2.4% for real-time, 15-second, and 30-second viewing delays, respectively, compared to perfect future bandwidth knowledge. This suggests that Vantage's approach is satisfactory and resilient to errors.

#### 5.2.7 Ablation Studies
The use of quality-enhancing retransmissions to improve video quality for higher viewing delays can be implemented in multiple ways. It is important to understand the additional benefits Vantage's design provides over other methods.

### References
[1] Facebook Live. https://live.fb.com/. Last accessed 18 June 2018.
[2] Hangouts On Air with YouTube Live. https://support.google.com/youtube/answer/7083786?hl=en. Last accessed 4 July 2018.
[3] HTTP Live Streaming. https://developer.apple.com/streaming/. Last accessed 19 June 2018.
[4] More Ways To Connect with Friends in Facebook Live. https://newsroom.fb.com/news/2017/05/more-ways-to-connect-with-friends-in-facebook-live/. Last accessed 4 July 2018.
[5] MPEG-DASH standard. https://mpeg.chiariglione.org/standards/mpeg-a/mpeg-dash. Last accessed 23 June 2019.
[6] Open Broadcaster Software. https://obsproject.com/. Last accessed 19 June 2018.
[7] Periscope. https://www.pscp.tv/. Last accessed 19 June 2018.
[8] Real-Time Messaging Protocol (RTMP) Specification. https://www.adobe.com/devnet/rtmp.html. Last accessed 19 June 2018.
[9] WebRTC. https://webrtc.org/. Last accessed 19 June 2018.
[10] Xiph.org Test Media. https://media.xiph.org/. Last accessed 27 January 2019.
[11] Youtube-Live. https://www.youtube.com/channel/UC4R8DWoMoI7CAwX8_LjQHig. Last accessed 18 June 2018.
[12] Facebook Live video for News Feed (part 2). https://atscaleconference.com/videos/facebook-live-video-for-news-feed-part-2/. Last accessed 19 June 2018.
[13] Hamed Ahmadi, Omar Eltobgy, and Mohamed Hefeeda. 2017. Adaptive multicast streaming of virtual reality content to mobile users. In Proceedings of the on Thematic Workshops of ACM Multimedia 2017.
[14] Cisco. 2017. Cisco Visual Networking Index: Forecast and Methodology, 2016-2021. Technical Report 1465272001663118.
[15] Luca De Cicco, Gaetano Carlucci, and Saverio Mascolo. 2013. Experimental Investigation of the Google Congestion Control for Real-time Flows. In Proceedings of the 2013 ACM SIGCOMM Workshop on Future Human-centric Multimedia Networking (FhMN ’13). ACM, New York, NY, USA, 21–26. https://doi.org/10.1145/2491172.2491182
[16] Zhengfang Duanmu, Kai Zeng, Kede Ma, Abdul Rehman, and Zhou Wang. 2016. A quality-of-experience index for streaming video. IEEE Journal of Selected Topics in Signal Processing 11, 1 (2016), 154–166.
[17] Aiman Erbad and Charles Buck Krasic. 2012. Sender-side buffers and the case for multimedia adaptation. Commun. ACM 55, 12 (2012), 50–58.
[18] Sadjad Fouladi, John Emmons, Emre Orbay, Catherine Wu, Riad S. Wahby, and Keith Winstein. 2018. Salsify: Low-Latency Network Video through Tighter Integration between a Video Codec and a Transport Protocol. In 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI 18).
[19] LLC Gurobi Optimization. Gurobi Optimizer Reference Manual. http://www.gurobi.com
[20] Jian He, Mubashir Adnan Qureshi, Lili Qiu, Jin Li, Feng Li, and Lei Han. 2018. Favor: Fine-Grained Video Rate Adaptation. In Proceedings of the 9th ACM Multimedia Systems Conference (MMSys 18).
[21] Stefan Holmer, Mikhal Shemer, and Marco Paniconi. 2013. Handling Packet Loss in WebRTC. In 2013 20th IEEE International Conference on Image Processing (ICIP 13).
[22] Te-Yuan Huang, Ramesh Johari, Nick McKeown, Matthew Trunnell, and Mark Watson. 2014. A Buffer-based Approach to Rate Adaptation: Evidence from a Large Video Streaming Service. In Proceedings of the 2014 ACM Conference on SIGCOMM (SIGCOMM ’14). ACM, New York, NY, USA, 187–198. https://doi.org/10.1145/2619239.2626296
[23] Junchen Jiang, Vyas Sekar, Henry Milner, Davis Shepherd, Ion Stoica, and Hui Zhang. 2016. CFA: A Practical Prediction System for Video QoE Optimization. In 13th USENIX Symposium on Networked Systems Design and Implementation (NSDI 16).
[24] Junchen Jiang, Vyas Sekar, and Hui Zhang. 2012. Improving Fairness, Efficiency, and Stability in HTTP-based Adaptive Video Streaming with FESTIVE. In Proceedings of the 8th International Conference on Emerging Networking Experiments and Technologies (CoNEXT 12).
[25] Junchen Jiang, Vyas Sekar, and Hui Zhang. 2014. Improving Fairness, Efficiency, and Stability in HTTP-Based Adaptive Video Streaming With Festive. IEEE/ACM Trans. Netw. 22, 1 (Feb. 2014), 326–340. https://doi.org/10.1109/TNET.2013.2291681
[26] Colin Levy and Ton Roosendaal. 2010. Sintel. In ACM SIGGRAPH ASIA 2010 Computer Animation Festival (SA ’10). ACM, New York, NY, USA, Article 82, 1 pages. https://doi.org/10.1145/1900264.1900346
[27] Zhenyu Li, Mohamed Ali Kaafar, Kave Salamatian, and Gaogang Xie. 2017. Characterizing and Modeling user Behavior in a Large-scale Mobile Live Streaming System. IEEE Transactions on Circuits and Systems for Video Technology 27, 12 (2017), 2675–2686.
[28] Xing Liu, Qingyang Xiao, Vijay Gopalakrishnan, Bo Han, Feng Qian, and Matteo Varvello. 2017. 360 Innovations for Panoramic Video Streaming. In Proceedings of the 16th ACM Workshop on Hot Topics in Networks (HotNets 17).
[29] Kaixuan Long, Chencheng Ye, Ying Cui, and Zhi Liu. 2019. Optimal Multi-Quality Multicast for 360 Virtual Reality Video. arXiv preprint arXiv:1901.02203 (2019).