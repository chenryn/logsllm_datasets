### DGAs and Threat Intelligence
#### John Bambenek â€“ Fidelis Cybersecurity Threat Research Team
#### HITCON 2015

**Introduction:**
- **Professional Background:**
  - President and Chief Forensic Examiner, Bambenek Consulting
  - Adjunct Faculty, Computer Science Department, University of Illinois at Urbana-Champaign
  - Producer of open-source intelligence feeds
  - Collaborates with companies and law enforcement globally to combat cybercrime

**About Threat Intelligence:**
- **Definition:**
  - **Information:** Unprocessed data that may or may not contain actionable intelligence.
  - **Intelligence:** The process of critically examining information to derive meaningful and actionable conclusions based on observations and data.
  - **Scope:** Involves analyzing the capabilities, intentions, and motivations of adversaries.

**Adversarial Objectives:**
- **Primary Focus:**
  - Organized crime, often financially motivated.
  - **Characteristics:**
    - Highly rational actors.
    - May hire external experts for specific tasks.
    - Technologically sophisticated.
    - Desire to remain undetected and resilient.

**My Objectives:**
- **Focus:**
  - Investigate and disrupt criminal networks.
  - Externally focused, targeting "criminal" actors.
  - Nation-state and APT threats require a different approach.
  - Most organizations are defensively focused, with different information priorities.

**Malware C2 Network Types:**
- **Common Methods:**
  - Static IP/Hostname Lists
  - Proxied C2s
  - Dynamic DNS
  - Fast Flux/Double Flux Networks
  - Domain Generation Algorithms (DGAs)
  - Tor/i2p Hidden Services

**A History of Malware C2 Networks:**
- **Resilience and Adaptation:**
  - Adversaries aim to persist over the long term and enhance network resilience against enforcement actions.
  - Domains are easier to take down than IPs due to jurisdictional issues.
  - Over time, adversaries have developed more resilient methods.
  - Future trends can be predicted by mapping historical patterns.

**Use of Multiple Techniques:**
- **Enhanced Resilience:**
  - Most resilient malware C2s use multiple callback methods.
  - **Examples:**
    - Static Lists
    - DGAs
    - Tor/I2P
  - Blocking one or two methods still allows control; all communication channels must be blocked for effective takedowns.

**Domain Generation Algorithms (DGAs):**
- **Functionality:**
  - Complex mathematical algorithms to generate pseudo-random but predictable domain names.
  - Dynamic list of hundreds or thousands of domains, with only a few registered at a time.
  - Can seek "friendly" registrars to avoid suspension.

**Reverse Engineering DGAs:**
- **Process:**
  - Many blog posts, notably by Johannes Bader, detail the reverse engineering of specific DGAs.
  - No shortcuts; requires using IDA/Debugger and reversing the function.
  - Look for functions that iterate many times.
  - Identify domain generation and connection functions.
  - Be aware of obfuscation and decoy code.

**Types of DGAs:**
- **Seed Types:**
  - Date-based
  - Static seed
  - Dynamic seed
  - Seeds must be globally consistent for all victims.

**Other DGA Hardening Techniques:**
- **Strategies:**
  - Choice of gTLD matters.
  - WHOIS protection complicates sinkholing.
  - Seed rotation.
  - Some malware has basic "sinkhole awareness."
  - Adversarial objectives: Maintain control and limit surveillance.

**Examples of Select DGAs:**
- **Cryptolocker:**
  - Used 1,000 domains per day across 7 gTLDs.
  - Ordered queries based on `GetTickCount()`.
  - Similar to DGA described in Wikipedia.
  - Previously used by Flashback OSX Worm.
  - Taken down in June 2014.
  - **Intel Conclusions:**
    - Likely written by a third party.
    - Days without domain registration suggest less concern about 24/7 operation.
    - Tended not to change registrars after suspensions.
    - Poor monitoring, with a 1:125 ratio of malicious to sinkholed domains.

- **Tinba:**
  - Generated 1,000 domains per day, not date-seeded.
  - Seeded by an initial hostname and defined gTLD(s).
  - Frequent seed changes and updates to infected machines.
  - Sinkholing was ineffective for more than a few days.
  - **Intel Conclusions:**
    - Active infrastructure monitoring.
    - Adaptive to DGA cracking.
    - Flexibility in DGA design.

- **Bedep:**
  - Uses dynamic seeds from currency exchange values.
  - Source data from European Central Bank daily feeds.
  - Impossible to predict future domains.
  - Successful takedowns required seizing malicious DGA domains and suspending current ones.
  - **Intel Conclusion:**
    - Intentional choice to use unpredictable seeds.

- **Matsnu and Rovnix:**
  - Use wordlists to generate "reasonable" domain names.
  - **Examples:**
    - Matsnu: `teamroomthing.com`, `transitionoccur.com`, `windbearboxreceive.com`, `winner-care-sir.com` (for 16 Aug 2015)
    - Rovnix: `theirtheandaloneinto.com`, `thathistoryformertrial.com`, `tothelayingthatarefor.com`, `definebritainhasforhe.com`, `tosecureonweestablishment.com`
  - Potential collisions with real domains.

**Benefits for Defenders:**
- **Advantages:**
  - Easy ability to sinkhole unused DGA domains for additional intelligence.
  - Easier bulk takedowns if domains can be predicted.
  - Near-real-time surveillance of malicious infrastructure.
  - Limitations on adversary's ability to evade detection via DNS.
  - Passive DNS can track DGA changes.

**Sinkholing:**
- **Practice:**
  - Many security companies engage in sinkholing.
  - Often kept secret.
  - Adversaries are usually aware.
  - Example: Cryptolocker had 125 sinkholed domains for every 1 malicious domain.