### Yielding the Update Size

By summing the storage and bandwidth requirements for every Certificate Revocation Vector (CRV) from each Certificate Authority (CA), we calculated the total storage and bandwidth. The results for various scenarios are reported below.

### B. Current Revocation Space

Using data from our scan, we simulated the current requirements for global revocation coverage using revocation numbers and CRVs. For the simulation, we grouped all CAs with fewer than 10,000 total certificates into a single conglomerate CA. After this grouping, we had 42 CA entities that issued 84.1 million certificates, with a revocation percentage of 1.29% and an average daily addition of 0.007%. Our simulation used these parameters and showed that the entire revocation space could be compressed to under 5.0 MB, with the optimal method for daily updates compressing to less than 25 KB. These small requirements indicate that CRVs are well-suited for the certificate space and revocation conditions we found during our scan.

| Compressed Storage | Uncompressed Storage | Daily Update Bandwidth |
|--------------------|----------------------|------------------------|
| 100M Certificates   | 1% Revocation        | 1.3 MB                 | 6.2 MB | 62.6 KB |
| 100M Certificates   | 10% Revocation       | 12.5 MB                | 125 MB | 429.2 KB |
| 1B Certificates     | 1% Revocation        | 12.5 MB                | 125 MB | 611.5 KB |
| 1B Certificates     | 10% Revocation       | 1.25 GB                | 1.25 GB | 4.1 MB |
| 10B Certificates    | 1% Revocation        | 125 MB                 | 1.25 GB | 7.4 MB |
| 10B Certificates    | 10% Revocation       | 1.25 GB                | 1.25 GB | 41.5 MB |

**Table IV: A storage and bandwidth comparison for CRVs representing different certificate space sizes.**

### C. Mass Revocation Event

In contrast to typically low revocation percentages, specific widespread security vulnerabilities have forced periods of mass revocation. Examples include the Trustico Revocation Event and the Heartbleed Vulnerability. Using data from the Heartbleed Revocation Event, we ran simulations modeling the requirements if a similar event occurred today. To match that event, we raised the reported revocation percentage to 10% by proportionally scaling each CA’s revocation percentage and increased the average daily update to 0.06%. This increase brought storage requirements to 10.8 MB and necessary update bandwidth to 150 KB per day. While much higher than typical revocation percentages, this simulation shows that CRVs can scale to handle mass revocation events.

### D. Growing Revocation Space

To show how CRVs scale into potential future certificate spaces, we ran simulations representing a single large CA responsible for all certificates, dividing them into 100 day-separated CRVs. The update bandwidth calculation assumes the associated revocation percentage occurs uniformly across all CRVs each day. Table IV contains a summary for each revocation percentage.

Of particular interest are the results for 1 billion certificates, which is slightly more than double the size of the current certificate space. The 100 associated CRVs store all the requisite information in less than 125 MB uncompressed. At 1% revocation, these CRVs compressed to 12 MB. Assuming an optimal update methodology of 0.02% new revocations per day, the compressed CRVs only require 612 KB of daily bandwidth. Increasing to the scale of a mass revocation event (10% revocation), the CRVs compressed to 60 MB and required a daily bandwidth of 4.1 MB. These results indicate the ability of CRVs and Let’s Revoke to scale gracefully with the ever-growing certificate space.

### VI. Security Analysis

We assume a threat model where an active network attacker can create, modify, and block messages. The attacker has two goals: (1) coerce a client to accept a revoked certificate, and (2) coerce a client to assume a valid certificate is revoked. The threat model does not include a compromised CA or a compromised client.

#### A. Accept a Revoked Certificate

An attacker can coerce a client to accept a revoked certificate by preventing them from updating their CRV and learning that the certificate is revoked.

1. **Update Manipulation:** The first method is to provide an update that omits the needed new revocation or removes a previously added revocation. To ensure a revocation update is valid, the CA must digitally sign each update. It is then the client’s responsibility to validate that signature. Further protection prevents the removal of previous revocations. Since the design of CRVs allows only insertions, the only way to remove a previous revocation is for the attacker to send an update indicating a new CRV. However, this attack is easy to prevent by having the client bitwise OR the new (malicious) CRV with the old CRV to ensure that all previous revocations remain even if the malicious CRV has excluded previous revocations.

2. **Update Blocking:** The second attack vector is to prevent updates from reaching the client by blocking traffic from the CA. This attack allows the adversary to conduct a Man-in-the-Middle (MitM) attack on the client using any certificate revoked since the last time the client updated its CRV. Since CRVs are a push-based revocation strategy, the client can detect any interference with the update schedule and warn the user about a potential MitM attack.

#### B. Revoke a Valid Certificate

An adversary may also coerce a client to believe a valid certificate has been revoked, resulting in a denial of service attack that prevents the client from using the service associated with the certificate.

1. **Unauthorized Revocation:** An attacker can attempt to impersonate the owner of the certificate to the CA and revoke the certificate. The revocation process should require the revoking party to prove they have access to the private key. If an adversary has access to the private key, the certificate should be revoked.

2. **Update Manipulation:** The attacker can also attempt to modify updates to the CRV by adding new numbers to any of the update methods. Again, this attack is defeated because the CA digitally signs the updates, and the client verifies those signatures.

### VII. Conclusion

This paper presents Let’s Revoke, a scalable global revocation strategy that addresses the concerns of current revocation checking. Let’s Revoke introduces a new unique identifier to each certificate that serves as an index to a dynamically-sized bit vector containing revocation status information. The bit vector approach enables significantly more efficient revocation checking for both clients and certificate authorities.

We demonstrated how Let’s Revoke fulfills the six properties [11] of a scalable revocation strategy:

1. **Efficiency:**
   - **Bandwidth:** CRVs minimize bandwidth requirements, not only for end-clients but also for certificate issuers and revocation status responders.
   - **Storage:** CRVs require fewer storage resources than all other currently implemented and proposed strategies that offer comparable revocation coverage.
   - **Computational:** CRVs are simply and efficiently constructed, requiring minimal computational time and resources.

2. **Timeliness:** Updates to CRVs can be acquired daily (or even more frequently) to ensure that they never become stale.

3. **Failure Model:** Since CRVs can efficiently represent the entire revocation space, clients can adopt a hard-failure policy.

4. **Privacy:** Since CRVs provide global coverage, they preserve client traffic privacy.

5. **Deployability:** CRVs allow for incremental deployment and provide an incentive to each of the involved entities.

6. **Auditability:** CRVs are auditable by all other parties.

We showed that Let’s Revoke requires fewer resources than currently available revocation methods, even those that cover only a fraction of the certificate space. We simulated certificate revocation data anticipating certificate growth to 1 billion and 10 billion certificates. Our estimates show the daily revocation download estimates are 612 KB and 7.4 MB, respectively. Storage estimates also remain manageable during mass revocation events that revoke 10% of all valid certificates.

### Acknowledgment

This material is based upon work supported by the National Science Foundation under Grant No. CNS-1528022 and CNS-1816929.

### References

[1] “Ballot 193 – 825-day Certificate Lifetimes.” [Online]. Available: https://cabforum.org/2017/03/17/ballot-193-825-day-certificate-lifetimes/

[2] R. Housley, W. Ford, T. Polk, and D. Solo, “Internet X.509 Public Key Infrastructure Certificate and CRL Profile,” RFC Editor, RFC 2560, January 1999.

[3] “CA:RevocationPlan.” [Online]. Available: https://wiki.mozilla.org/CA:RevocationPlan#OneCRL

[4] “CRLSets.” [Online]. Available: https://dev.chromium.org/Home/chromium-security/crlsets

[5] M. Myers, R. Ankney, A. Malpani, S. Galperin, and C. Adams, “X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP,” RFC Editor, RFC 2560, June 1999.

[6] D. Eastlake, “Transport Layer Security (TLS) Extensions: Extension Definitions,” RFC Editor, RFC 6066, January 2011.

[7] A. Schulman, D. Levin, and N. Spring, “Revcast: Fast, private certificate revocation over FM radio,” in Proceedings of the ACM SIGSAC Conference on Computer and Communications Security, 2014.

[8] P. Szalachowski, C. Amann, T. Lee, and A. Perrig, “RITM: Revocation in the Middle,” in 36th International Conference on Distributed Computing Systems (ICDCS). IEEE, 2016.

[9] “Feature request: OCSP Must Staple (RFC 7633).” [Online]. Available: https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/-pB8IFNu5tw

[10] Y. Liu, W. Tome, L. Zhang, D. Choffnes, D. Levin, B. Maggs, A. Mislove, A. Schulman, and C. Wilson, “An End-to-End Measurement of Certificate Revocation in the Web’s PKI,” in Proceedings of the Conference on Internet Measurement Conference (IMC). ACM, 2015.

[11] J. Larisch, D. Choffnes, D. Levin, B. M. Maggs, A. Mislove, and C. Wilson, “CRLite: A Scalable System for Pushing All TLS Revocations to All Browsers,” in 2017 Symposium on Security and Privacy (SP). IEEE, 2017.

[12] “Censys,” 2017. [Online]. Available: https://censys.io/certificates?q=tags.raw%3A+%22trusted%22

[13] J. Aas, R. Barnes, B. Case, Z. Durumeric, P. Eckersley, A. Flores-López, J. A. Halderman, J. Hoffman-Andrews, J. Kasten, E. Rescorla et al., “Let’s Encrypt: An Automated Certificate Authority to Encrypt the Entire Web,” in Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security, 2019, pp. 2473–2487.

[14] “Indexing HTTPS pages by default,” 2015. [Online]. Available: https://security.googleblog.com/2015/12/indexing-https-pages-by-default.html/

[15] M. Prince, “The Hidden Costs of Heartbleed,” 2017. [Online]. Available: https://blog.cloudflare.com/the-hard-costs-of-heartbleed/

[16] Z. Durumeric, J. Kasten, D. Adrian, J. A. Halderman, M. Bailey, F. Li, N. Weaver, J. Amann, J. Beekman, M. Payer et al., “The Matter of Heartbleed,” in Proceedings of the 2014 Conference on Internet Measurement Conference. ACM, 2014, pp. 475–488.

[17] A. Langley, “Revocation checking and Chrome’s CRL,” 2012. [Online]. Available: https://www.imperialviolet.org/2012/02/05/crlsets.html

[18] P. C. Kocher, “On Certificate Revocation and Validation,” in Financial Cryptography, R. Hirchfeld, Ed. Berlin, Heidelberg: Springer Berlin Heidelberg, 1998, pp. 172–177.

[19] M. Naor and K. Nissim, “Certificate Revocation and Certificate Update,” IEEE Journal on Selected Areas in Communications, vol. 18, no. 4, pp. 561–570, 2000.

[20] S. Micali, “Efficient Certificate Revocation,” Cambridge, MA, USA, Tech. Rep., 1996.

[21] B. Laurie and E. Kasper, “Revocation Transparency,” Google Research, Rep., September 2012.

[22] M. Marlinspike, “Defeating OCSP with the Character ‘3’,” Blackhat 2009, 2009.

[23] K. Rabieh, M. M. Mahmoud, K. Akkaya, and S. Tonyali, “Scalable Certificate Revocation Schemes for Smart Grid AMI Networks Using Bloom Filters,” IEEE Transactions on Dependable and Secure Computing, vol. 14, no. 4, pp. 420–432, 2017.

[24] Q. Hu, M. R. Asghar, and N. Brownlee, “Certificate Revocation Guard (CRG): An Efficient Mechanism for Checking Certificate Revocation,” in Proceedings of the 41st Conference on Local Computer Networks (LCN). IEEE, 2016.

[25] P. Hallam-Baker, “X.509v3 Transport Layer Security (TLS) Feature Extension,” RFC Editor, RFC 7633, October 2015.

[26] A. S. Wazan, R. Laborde, D. W. Chadwick, F. Barrere, and A. Benzekri, “TLS Connection Validation by Web Browsers: Why Do Web Browsers Still Not Agree?” in 41st Annual Computer Software and Applications Conference (COMPSAC). IEEE, 2017.

[27] H. Bock, “The Problem with OCSP Stapling and Must Staple and Why Certificate Revocation Is Still Broken,” 2017. [Online]. Available: https://blog.hboeck.de/archives/886-The-Problem-with-OCSP-Stapling-and-Must-Staple-and-why-Certificate-Revocation-is-still-broken.html

[28] T. Chung, J. Lok, B. Chandrasekaran, D. Choffnes, D. Levin, B. M. Maggs, A. Mislove, J. Rula, N. Sullivan, and C. Wilson, “Is the Web Ready for OCSP Must-Staple?” in Proceedings of the Internet Measurement Conference 2018. ACM, 2018, pp. 105–118.

[29] “Censys,” 2017. [Online]. Available: https://censys.io/certificates?q=%281.3.6.1.5.5.7.1.24%29+AND+tags.raw%3A+%22trusted%22

[30] R. L. Rivest, “Can We Eliminate Certificate Revocation Lists?” in International Conference on Financial Cryptography. Springer, 1998, pp. 178–183.

[31] Y.-K. Hsu and S. Seymour, “Intranet Security Framework Based on Short-lived Certificates,” in Proceedings of the Sixth IEEE Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, 1997.

[32] E. Topalovic, B. Saeta, L.-S. Huang, C. Jackson, and D. Boneh, “Towards Short-Lived Certificates,” Web 2.0 Security and Privacy, 2012.

[33] R. Barnes, J. Hoffman-Andrews, D. McCarney, and J. Kasten, “Automatic Certificate Management Environment (ACME) draft-ietf-acme-acme-12,” Internet Requests for Comments, Internet-Draft, April 2018. [Online]. Available: https://tools.ietf.org/html/draft-ietf-acme-acme-12

[34] Z. Durumeric, D. Adrian, A. Mirian, M. Bailey, and J. A. Halderman, “A Search Engine Backed by Internet-Wide Scanning,” Oct. 2015.

[35] D. Kumar, M. Bailey, Z. Wang, M. Hyder, J. Dickinson, G. Beck, D. Adrian, J. Mason, Z. Durumeric, and J. A. Halderman, “Tracking Certificate Misissuance in the Wild,” in 2018 Symposium on Security and Privacy (SP). IEEE, 2018.