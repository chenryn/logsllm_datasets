### Software Development Lifecycle and Security Efforts

#### Stages of Software Development
1. **Design**
   - Determining system and data structure
   - Evaluating system design
   - Assessing technical constraints

2. **Implementation**
   - Coding
   - Integrating components

3. **Development Testing**
   - Unit testing
   - Integration testing

4. **Reviews**
   - Code reviews
   - Test reviews

5. **Post-Development Testing**
   - System testing
   - Acceptance testing

6. **Other (Please specify)**
7. **Not sure**

### Q21: Security Awareness in Software Development
Please indicate the extent to which you agree or disagree with each statement using a 5-point Likert scale (strongly agree-strongly disagree).

A1. I think software security is an important issue for our project.
A2. I think the software that our project develops is easy to attack from the standpoint of an attacker.
A3. I think that the benefit (incentive) of attacking the software that our project develops is high from the standpoint of an attacker.
A4. I think our project takes adequate security measures.
A5. I think that no vulnerabilities will occur in the software that our project develops.

### Q22: Security Efforts at Each Stage of Software Development
Please indicate the extent to which you agree or disagree with each statement using a 5-point Likert scale (strongly agree-strongly disagree). Select "Not sure" if you are unsure whether an effort is being made.

#### 1. Security Efforts at “Requirements Definition” and “Design”
E1. Our project defines the security requirements that the software must meet.
E2. Our project performs a threat risk analysis (e.g., identifying potential attack vectors, common attack techniques).
E3. Our project performs a risk analysis of vulnerabilities that might occur during software development (e.g., handling of critical data, use of third-party code such as OSS).
E4. Our project designs the software so that even if a vulnerability is exploited by an attacker, any damage can be mitigated/minimized.

#### 2. Security Efforts at “Implementation”
E5. Our project has a document/checklist that we need to follow for our software to be secure (e.g., secure coding guide, security cheat sheet).
E6. Our project makes use of security mechanisms (APIs) included in existing libraries and frameworks to help guarantee software security (e.g., implementing error handling by using an existing library).
E7. Our project uses a tool to check whether secure coding practices are incorporated.

#### 3. Security Efforts at “Testing” and “Review”
E8. Our project uses an automated tool to perform vulnerability assessments on the software we develop.
E9. Our project manually performs vulnerability assessments on the software we develop.
E10. Our project assesses that security requirements are met during code review.
E11. Our project has an in-house security assessment team.
E12. Our project leverages an outsourced security assessment service.

#### 4. Other Security Efforts
E13. Our project continuously checks the latest vulnerability information available to the public (e.g., CVE, security white papers).
E14. Our project can extend the schedule if a security issue has been identified.
E15. Our project prioritizes tasks to ensure security over other tasks.

### Q23: Additional Security Efforts
Please describe any security efforts in software development other than those described in Q22 that you/your team are making. (Free text)

### Q24: Constraints Preventing Secure Software Development
Please indicate the extent to which you agree or disagree with each statement using a 5-point Likert scale (strongly agree-strongly disagree).

C1. Our project does not have enough time to ensure software security.
C2. Our project does not have enough knowledge to ensure software security.
C3. Our project does not have enough people to ensure software security.
C4. Our project does not have enough budget to ensure software security.
C5. Our project defers software security due to competing priorities.
C6. In our project, software security is not mandated by our client.
C7. Our project is not aware of the security measures (e.g., tools, frameworks, development methods) that meet the requirements of the software we develop.
C8. In our project, it takes a lot of time and effort to make a decision to introduce security measures (tools, frameworks, development methods).
C9. For our project, existing security measures (e.g., tools, frameworks, development methods) are useful for enhancing security but not cost-effective from the viewpoint of the cost of implementation/operation.
C10. I do not have the authority to decide to introduce security measures (e.g., tools, frameworks, development methods).
C11. Our project has been following the same development process for years and we cannot easily change it for ensuring security.

### Q25: Top Three Constraints Impacting Security
Please select the top three constraints that have the greatest impact on security in your team/project in order of 1st, 2nd, and 3rd.
- 1st
- 2nd
- 3rd

### Q26: Additional Constraints
Please describe any constraints you/your team are facing that prevent the development of secure software, other than those described in Q24. (Free text)

### Figure 8: Percentage of "Not Sure" in Questions About Security Effort (E1–E15)
- Manager
- Developer

### Table 4: Summary of Participants’ Company and Project Statistics
- **Period of Project (months)**
  - 100 and under
  - 101-500
  - 501-1000
  - 1001 and over
  - Not sure

- **Project Budget**
  - $49,999 and under
  - $50,000-$99,999
  - $100,000-$499,999
  - $500,000-$999,999
  - $1,000,000 and over
  - Not sure

- **Company Size**
  - 100 and under
  - 101-500
  - 501-1000
  - 1001 and over
  - Not sure

- **User Scope of Developed Software**
  - General public users
  - Limited to specific users
  - Other

- **Contractual Relationship**
  - In-house development
  - Contracted development
  - Other

- **Development Method**
  - Waterfall
  - Agile
  - Hybrid
  - Other

- **Developer (US)**
  - Mean (µ): 13.9
  - Median (Md): 8.0

- **Manager (US)**
  - Mean (µ): 20.6
  - Median (Md): 9.0

- **All (US)**
  - Mean (µ): 17.2
  - Median (Md): 9.0

- **Developer (JP)**
  - Mean (µ): 18.0
  - Median (Md): 12.0

- **Manager (JP)**
  - Mean (µ): 14.4
  - Median (Md): 12.0

- **All (JP)**
  - Mean (µ): 16.4
  - Median (Md): 12.0

*Note: Forty-two participants from the US and 68 participants from Japan did not indicate the scheduled period of their development project. One participant from the US did not indicate the user scope of the developed software. One participant from the US and one participant from Japan did not indicate a development method.*

This revised version aims to provide a clear, professional, and well-structured format for the questions and data presented.