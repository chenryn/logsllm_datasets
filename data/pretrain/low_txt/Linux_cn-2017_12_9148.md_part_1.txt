---
author: Benjamin Pollack
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4560
date: '2017-12-16 00:08:49'
editorchoice: false
excerpt: 指责开源软件的难用性并非新论调，许多比我更擅长辩论的人也提出过类似观点，甚至包括一些热衷于开源软件的支持者。那么，我为何还要重提这个话题呢？
fromurl: https://bitquabit.com/post/one-which-i-call-out-hacker-news/
id: 9148
islctt: true
largepic: /data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg
permalink: /article-9148-1.html
pic: /data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 指责开源软件的难用性并非新论调，许多比我更擅长辩论的人也提出过类似观点，甚至包括一些热衷于开源软件的支持者。那么，我为何还要重提这个话题呢？
tags:
- 开源软件
thumb: false
title: 我为何要点名批评 Hacker News
titlepic: true
translator: hopefully2333, yunfengHe
updated: '2017-12-16 00:08:49'
---

> "实现高速缓存可能需要30个小时，你有这额外的时间吗？不，你没有。实际上，我不知道具体会花多少时间，可能是五分钟。但即便如此，你还是无法抽出这五分钟。为什么？因为我在撒谎。它实际上会花费远超过五分钟的时间。所有这些简化的假设都只是程序员的一厢情愿罢了。"
>
> —— Owen Astrachan 教授，2004年2月23日，在杜克大学 CPS 108 课程上的演讲

![](/data/attachment/album/201712/16/000842naa44ssa740ab65r.jpg)

指责开源软件的难用性并不是什么新鲜事；这一观点已经被许多比我更具说服力的人提出过，其中不乏那些对开源软件充满热情的支持者。那么，我为什么要再次提及这个问题呢？

在周一的Hacker News讨论中，有一段内容让我感到好笑。文章提到，有人认为[编写一个与StackOverflow类似的系统可以非常简单](http://news.ycombinator.com/item?id=678501)，并自信地[声称他们可以在7月4日的周末就完成一个完全相同的版本](http://news.ycombinator.com/item?id=678704)。另一些人则指出，现有的仿制品（如[cnprog](http://code.google.com/p/cnprog/)和[soclone](http://code.google.com/p/soclone/)）已经证明了这一点。

让我们设想这样一个场景：经过深思熟虑后，你决定使用ASP.NET MVC来构建自己的StackOverflow。而我，被一块摇晃的怀表催眠后，又被人用棒槌敲了一下脑袋，像一只听话的狗一样一页一页地把StackOverflow的源代码递给你，让你逐字逐句地重新输入到你的环境中。假设你可以像我一样快速打字，每分钟输入100个单词（即每秒约8个字母），并且能做到零错误率。根据StackOverflow源代码大小约为2.3MB（包括.CS、.SQL、.CSS、.JS和.aspx文件）来估算，仅是逐字输入这部分代码就需要至少80个小时的时间。

或者，你打算从头开始编写你自己的StackOverflow。假设你从设计、编码到调试所需的时间是抄袭StackOverflow源代码时间的十倍。即使在这种假设下，你也需要几周的时间日夜不停地编写代码。我不知道你是否愿意这样做，但我可以肯定地说，如果只给我抄袭StackOverflow源代码所用时间的十倍，我是绝对无法完成这项任务的。

我知道你在听到这些假设时可能会感到泄气。你可能会想，如果不是全部实现，而是只实现StackOverflow的**大部分**功能，那是否会容易很多呢？

那么，“大部分”功能究竟是指什么呢？如果你只实现提问和回答的功能，这似乎很简单。但实际上，你需要创建一个投票系统，以显示用户对某个答案的支持或反对。这样，提问者才能获得问题的可信答案。此外，你还必须防止用户对自己提交的答案进行投票，并确保用户在一定时间内不能频繁投票，以防止机器人作弊。你还需要实现基本的垃圾评论过滤器，支持用户头像，并找到一个可靠的HTML库（假设你想复用StackOverflow的[优秀编辑器](http://github.com/derobins/wmd/tree/master)）。你还需要为所有控件设计或购买小图标和部件，并实现一个基本的管理界面，以便用户能够调整个性化设置。最后，你需要实现类似于Karma的声望系统，使用户随着使用时间的增加而逐步提升其影响力和解锁更多功能。

然而，即使实现了以上所有功能，你仍然没有完成整个项目。