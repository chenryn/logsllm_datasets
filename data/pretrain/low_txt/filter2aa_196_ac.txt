### Cobalt Strike Aggressor Scripts and Related Tools

#### Aggressor Scripts
- **AggressorScripts**: Highlights selected processes and loads various aliases into the beacon for later use.
- **AggressorAssessor**: A tool for assessing and managing C2 (Command and Control) operations.
- **AggressorCollection**: A collection of high-quality Cobalt Strike Aggressor scripts, curated by their respective authors.
- **Cobaltstrike-Aggressor-Scripts-Collection**: A repository of tested and verified Cobalt Strike Aggressor scripts.
- **Aggressor_Scripts**: A compilation of Aggressor and Sleep scripts for various purposes.
- **Z1-AggressorScripts**: Aggressor scripts compatible with Cobalt Strike 3.x and 4.x.

#### Related Tools
- **0x05 Related Tools**:
  - **purposes that I've made.**: Various tools and scripts created for specific purposes.
  - **cobalt_strike_extension_kit**: Includes utilities like SharpHound, SharpRDP, and SharpWMI.
  - **hash dumpEverything**: A script for dumping hashes.
  - **365CobaltStrike**: Resources for Cobalt Strike 4.0.
  - **CSPlugins**: Plugins for Cobalt Strike.
  - **CobaltStrike-xor**: Third-party VNC plugins (vnc_x86_dll and vnc).
  - **csplugin**: PowerView plugin for Cobalt Strike.
  - **CSplugins**: RDP-related plugins.
  - **LSTAR**: A tool for Cobalt Strike, including Mimikatz integration.
  - **SharpUtils**: A collection of C# utilities for use with Cobalt Strike's execute-assembly.
  - **SharpToolsAggressor**: C# tools for the Aggressor framework.
  - **C.Ex**: A Cobalt Strike plugin to start and utilize Cobalt Strike remotely from within Sifter.

#### Anti-Cobalt Strike Tools
- **AntiCobaltStrike**:
  - **cobaltstrike_brute**: Password brute-forcing tool for Cobalt Strike Team Server.
  - **CobaltSpam**: Another password brute-forcing tool for Cobalt Strike Team Server.
  - **CobaltStrikeDos**: Exploits CVE-2021-36798 for Denial of Service in Cobalt Strike < 4.0.
  - **CS_mock**: A mock Cobalt Strike beacon.
  - **CobaltStrikeScan**: Scans files or process memory for Cobalt Strike beacons and parses their configurations.
  - **grab_beacon_config**: A PoC script to scan and acquire Cobalt Strike beacon configurations.
  - **C2-JARM**: Generates sslJARM hashes for Cobalt Strike.
  - **JARM**: A scanner for JARM fingerprints.
  - **DetectCobaltStomp**: A PoC tool to detect Cobalt Strike stomping with moderate to high confidence.
  - **cobaltstrike**: Code and YARA rules to detect and analyze Cobalt Strike.
  - **CS_Decrypt**: Decrypts CS beacon teamserver data.
  - **CS Scripts**: Python scripts for parsing beacon keys.
  - **PyBeacon**: A collection of Python scripts for handling Cobalt Strike beacons.
  - **cobaltstrikescan**: Detects Cobalt Strike using Volatility.
  - **CobaltStrikeForensic**: Toolset for researching malware and Cobalt Strike beacons.
  - **DuckMemoryScan**: A simple tool to find backdoors, including iis hijacking and fileless Trojans.
  - **CobaltSplunk**: A Splunk application for ingesting Cobalt Strike logs, displaying operational dashboards, and generating reports.
  - **BeaconHunter**: A behavior-based monitoring and hunting tool leveraging ETW tracing.
  - **CobaltStrikeDetected**: A list of detected Cobalt Strike instances.
  - **BeaconEye**: Hunts out Cobalt Strike beacons and logs command output.
  - **Beacon_re**: Cobalt Strike beacon-related resources.
  - **Beacon.dll**: Cobalt Strike beacon DLL.
  - **EvilEye**: A BeaconEye implementation in Go.
  - **bypass-beacon-config-scan**: Bypasses Cobalt Strike beacon configuration scans.

#### Bypass AV Tools
- **BypassAV**:
  - **Cooolis-ms**: Metasploit payload for Cobalt Strike External C2 Loader with reflective injection.
  - **UrbanBishopLocal**: A port of FuzzySecurity's UrbanBishop for inline shellcode execution.
  - **ZheTian**: A powerful remote load and execute tool.
  - **EXOCET**: An AV-evading, undetectable payload delivery tool.
  - **SecondaryDevCobaltStrike**: Cobalt Strike after second development, bypassing Kaspersky, Norton, McAfee, etc.
  - **CrossNet-Beta**: A phishing executable generator that bypasses AV and judges the network environment.
  - **EVA**: A FUD (Fully UnDetectable) shellcode injector.
  - **golang**: Tools written in Golang for AV bypass.
  - **NimShellCodeLoader**: Nim-based Windows shellcode loader.
  - **beacon_hook_bypass_memscan**: A CS bypass technique.
  - **JsLoader**: Shellcode loader.
  - **ShellcodeLoader**: Shellcode loader for RSA-encrypted executables.
  - **Alt-Beacon-Payload**: Beacon payload using AV bypass methods.

#### Analysis Tools
- **Analysis**:
  - **Beacon**: Open-source Cobalt Strike beacon for research.
  - **Linco2**: Cobalt Strike beacon for HTTP C2 on Linux.
  - **beacon-object-files**: Miscellaneous extensions for Cobalt Strike beacon object files.

#### Auxiliary Tools
- **Auxiliary**:
  - **C2ReverseProxy**: Reverse proxy channel for Cobalt Strike beacons.
  - **Cobalt strike custom 404 page**: Custom 404 page for Cobalt Strike service.
  - **StageStrike**: A custom Cobalt Strike stager written in C.
  - **CS_SSLGen**: Installs a Let's Encrypt certificate and Cobalt Strike keystore.
  - **CobaltPatch**: Malleable Profile Inline Patch for Cobalt Strike.
  - **pycobalt**: Another Malleable Profile Inline Patch for Cobalt Strike.
  - **redshell**: An interactive command prompt for proxychains and Cobalt Strike logging.
  - **CobaltStrikeToGhostWriter**: Log converter from CS logs to Ghostwriter CSV format.
  - **Ansible-Cobalt-Strike**: An Ansible role to install Cobalt Strike on various architectures.
  - **cobaltstrike_runtimeconfig**: POC for modifying Cobalt Strike runtime.
  - **pystinger**: SOCK4 proxy and port forwarding through webshell for Cobalt Strike sessions.
  - **ansible-role-cobalt-strike**: An Ansible role for installing Cobalt Strike.
  - **CrossNet**: Phishing executable generator with AV killing and network environment judgment.
  - **CrossC2-C2Profile**: CrossC2 API configuration.
  - **BypassAddUser**: Bypass AV to add users.
  - **Docker-CobaltStrike**: Docker container for Cobalt Strike, covering technical lines in APT attack chains.
  - **TeamServer.prop**: Properties file for customizing Cobalt Strike teamserver settings.
  - **redi**: Automated script for setting up Cobalt Strike redirectors.
  - **cs2modrewrite**: Automatically generates rulesets for Apache mod_rewrite or Nginx for intelligent HTTP redirection.
  - **RedWarden**: Flexible Cobalt Strike Malleable Redirector.
  - **Apache Mod_Rewrite Terraform Automation**: Bash scripts for automating Apache2 with mod_rewrite in front of C2.
  - **Red-EC2**: Deploys RedTeam-specific EC2 instances via an automated script.

#### Related Resources
- **Popularity**:
  - **DATA**:
    - **SilasCutler JARM Scan**: Cobalt Strike beacon configuration data.
    - **Cobalt Strike hashes**: Basic information and YARA rule for Cobalt Strike, including malware samples.
  - **Synthesis**:
    - **Rapid Attack Infrastructure**: Quick and fast Red Team infrastructure setup.
    - **RedCommander**: Creates two Cobalt Strike C2 servers with redirectors and RedELK on AWS.
    - **CPLResourceRunner**: Runs shellcode (Cobalt Strike) from resources.
  - **Dev**:
    - **vscode-language-aggressor**: Visual Studio Code extension for Sleep and Cobalt Strike Aggressor grammar.
    - **PayloadAutomation**: Python scripts for automating payload development and deployment with Cobalt Strike.
    - **CrackSleeve**: Tools for cracking Cobalt Strike 4.0 and 4.1 beacons.
    - **CSAgent**: Java agent for Cobalt Strike 4.x.
  - **DATA**:
    - **List of Cobalt Strike servers**: List of known Cobalt Strike servers.
    - **CobaltStrike samples**: Samples with pass=infected.
    - **List of spawns from exposed Cobalt Strike C2**: List of spawns from exposed Cobalt Strike C2.
    - **C2IntelFeeds**: Automatically created C2 feeds based on Censys data.
  - **YARA**:
    - **apt_cobaltstrike**: YARA rules for detecting Cobalt Strike.
    - **apt_cobaltstrike_evasive**: YARA rules for evasive Cobalt Strike detection.
    - **rules**: YARA rules for Cobalt Strike.
  - **Rules**:
    - **suricata-rules**: Suricata IDS rules for detecting red team penetration and malicious behavior, supporting testing for Cobalt Strike, MSF, Empire, DNS tunnels, Weevely, scorpion, mining, rebound, kitchen, ice shell, ICMP tunnel, etc.