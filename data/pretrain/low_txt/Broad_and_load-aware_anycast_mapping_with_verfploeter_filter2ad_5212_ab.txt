### Augmenting Detection Methods with Traceroutes

To enhance detection methods, one can utilize traceroutes to identify potentially spoofed replies [18]. These approaches generally require the deployment of active probes across the Internet. The most extensive studies we are aware of involve between 9,000 and 10,000 vantage points (VPs), all of which are active VPs in the RIPE Atlas system.

Our key insight is that control over active VPs is not necessary if we can elicit messages from various parts of the Internet that will reveal their catchment. Instead of managing both queries and responses from VPs, we generate queries that prompt VPs to respond to the anycast system. We define these as passive VPs. By capturing traffic at all anycast catchments, we can determine the catchment of each VP that responds. Effectively, we shift the active query generation and reception from the VPs to the anycast network itself, while still gathering observations from millions of passive VPs. Although the anycast sites capture the data, the ping targets are the VPs, as they each generate a catchment report.

### Comparison of Methods

Figure 1 illustrates the differences between traditional mapping and our approach. On the left, traditional mapping sends queries (black arrows) from VPs into the anycast system. On the right, we send queries from the anycast network block (defined by the source address) to passive VPs in most /24 IPv4 networks. Their responses return to the site for their catchment, even if it is not the site that initiated the query.

### Verfploeter: Query and Response Mechanism

In Verfploeter, our queries are ICMP Echo Requests (pings) sent using a custom program, soliciting ICMP Echo Replies. Queries are sent from a designated measurement address within the anycast service IP prefix. Unlike traditional catchment mapping, the catchment is identified by the anycast site that receives the reply, not by the reply payload.

Our passive VPs are any computers on the Internet that respond to pings. We use a recent ISI IPv4 hitlist [17] to target representative addresses in each /24 block that are most likely to respond. This method reduces the measurement traffic to 0.4% of a complete IPv4 scan. We select /24 blocks as the smallest routable prefix in BGP today, since anycast depends on BGP.

### Traffic Management and Capture

We send requests in a pseudorandom order (following [25]) and at a relatively slow rate (about 6,000 queries per second) to spread the traffic and avoid rate limits and abuse complaints. While faster probing techniques exist, there is little penalty for extending the probing period to 10 or 20 minutes.

We must capture traffic for the measurement address with our response collection system. This can be done at the routers or by running computers that capture traffic on the address itself. Captures must occur concurrently at all anycast sites. We have three different response collection systems: a custom program for near-real-time packet capture and forwarding, LANDER [26] for continuous packet capture, and tcpdump for specific traffic capture. We use the first method for Tangled and both the second methods at B-Root.

Capturing traffic at sites may be a requirement for some anycast operators, but it can be managed efficiently. The measurement address, while in the service /24, can be a different address and need not see non-measurement traffic. Operators already manage services on these networks, and measurement can be conducted on a virtual IP address, dedicated hardware, or virtual machines. Time synchronization across all sites is essential, and standard techniques like NTP are sufficient.

### Response Rates and Data Handling

We send a single request per destination IP address without immediate retransmissions. We receive replies from about 55% of blocks, consistent with previous studies [17]. While incomplete, this provides responses from millions of blocks. Future work could explore improving the response rate by probing multiple targets in each block or retrying immediately. All responses are copied to a central site for analysis. The total traffic across the service is about 128 MB per measurement, manageable enough for manual or automated data transfer.

### Anycast Operator Involvement

Our approach to catchment mapping requires active participation at all anycast sites, necessitating cooperation from the anycast operator but not additional Internet-wide infrastructure. Anycast operators are motivated to understand their systems, making this a feasible trade-off. Unlike traditional anycast mapping, which requires active VPs but not support from the target anycast system, our method does not model BGP routing to predict future catchments; instead, it measures actual deployment. To predict possible future catchments, one must deploy and announce a test prefix that parallels the anycast service, then measure its routes and catchments.

### Load Estimation

Planning anycast deployment involves more than just mapping catchments; it also requires estimating the load that different services will experience based on client distribution and usage patterns. We build load estimates for each network block (/24 prefix) that accesses a service to calibrate the loads generated by a given catchment. We assume operators collect query logs and use historical data to estimate future loads. For B-Root, we use historical data from its unicast deployment. When operational load data is unavailable, as in Tangled, we estimate load using data from similar services or assume uniform load if no better estimates are available.

We consider three types of load: queries, good replies, and all replies. Queries represent incoming server load, while replies are the results. The count of query packets may differ from replies if response rate limiting is used to mitigate DNS amplification attacks. We separate good replies from all replies due to the high fraction of queries to non-present domains in root-server traffic. Operators may wish to optimize for volume or for good replies. We compute load over one day, using hourly bins for overall traffic.

### Measurement Setup and Dataset

Using the proposed ICMP-based method, Verfploeter, we measure the catchment of two anycast services, B-root and an anycast testbed (Tangled), from over 6.4 million VPs (IP addresses). We add geolocation information for these blocks using MaxMind [32], which is considered reasonably accurate at the country level [35]. We also use Route Views and RIPE RIS data to determine the AS number for each scanned IP address and the prefixes announced by each AS.

### B-Root Validation

We validate our methodology by providing a detailed view of the catchment of one of the DNS root-servers, B-root. B-root is the most recent root letter to transition from unicast to anycast, adding a site in Miami to its original site in Los Angeles. This new deployment makes B-root an interesting analysis target, as it does not have a history of anycast deployment to guide its choices.

We study B-Root catchments using several scans with both RIPE Atlas and Verfploeter, as shown in Table 1. We estimate B-Root load using two day-long datasets listed in Table 2. As a baseline, we use data from DITL 2017 (A Day in the Life of the Internet [16]), taken on April 12, 2017 (UTC), before B-Root was using anycast. We then test against May 15, 2017 (UTC), after B-Root anycast was well established.

### Anycast Testbed: Tangled

We augment our measurements of B-Root with those of our anycast testbed, Tangled, which has nine sites around the world.