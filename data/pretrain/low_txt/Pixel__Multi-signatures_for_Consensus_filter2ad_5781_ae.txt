### Table 2: Bandwidth Savings for Propagating 4500 Signatures During Consensus

| Signature Size (MB) |
|---------------------|
| 109.9               |
| 2.5                 |
| 6.2                 |
| 61.8                |

**Table 2: Total bandwidth to propagate a set of 4500 signatures during consensus to agree on a block of transactions.**

We clarify that the savings obtained from Pixel are complementary to those of Vault [42], another system built on top of Algorand to improve storage and catch-up speed. Specifically, Vault can be used in conjunction with Pixel to achieve further storage savings. Vault creates "jumps" between blocks, allowing the system to confirm block \( r \) knowing only block \( r - k \) for some parameter \( k \) (e.g., \( k = 100 \)). Instead of downloading every block, a catch-up node in Vault only needs to download every \( k \)-th block. Even using Vault, users would need to download and store about 106 blocks for every ≈ 13 years of blockchain operation.

### Bandwidth Savings

Algorand uses a relay-based propagation model where users' nodes connect to a network of relays (nodes with more resources). Without aggregation during propagation, Pixel's savings in bandwidth for both relays and regular nodes come from smaller signature sizes. Each relay can serve dozens or hundreds of nodes, depending on the resources it makes available. A relay must propagate a block of transactions and the corresponding certificate (with 1500 votes) to each node it serves. During consensus, an additional 3000 supporting votes are propagated for every block. Each node connects to 4 randomly chosen relays. Every vote received from a relay is propagated to the remaining 3 relays. Duplicate votes are dropped, so each vote propagates once on each connection. In Table 2, we summarize the savings for 4500 votes propagated during consensus for each block. From the table, we see that a relay with 10 connections saves about 44% of bandwidth. Bandwidth can be improved even further if Algorand relays were to aggregate multiple votes before propagating them to the users.

### Block Verification Time Savings

Since verifying a Pixel multi-signature requires only 3 pairings in addition to multiplying all the public keys in the signature set, they are faster to verify than BM-Ed25519 signature sets. Table 3 shows that a set of 3000 signatures can be verified about 65 times faster.

**Table 3: Total Runtime to Verify Signature Sets Authenticating a Block**

| Sig. Set Size | BM-Ed25519 (ms) | Pixel (ms) | Improvement |
|---------------|------------------|------------|-------------|
| 1             | 0.18             | 4.9        | 27x slower  |
| 1500          | 270              | 6.7        | 40x faster  |
| 3000          | 540              | 8.3        | 65x faster  |
| 10000         | 1.8 sec          | 15.6 ms    | 115x faster |

In Figure 4, we measure the overall savings on block verification time. Block verification time is broken into three main intervals:
- (a) Time to verify vote signatures
- (b) Time to verify vote VRF credentials
- (c) Time to verify transactions

In each interval, signature verification dramatically exceeds the time of any additional checks (e.g., checking that the transaction amount is higher than the user’s balance). Blocks with 1500 and 5000 transactions can be verified 38% and 29% faster, respectively.

### Conclusion

In this work, we focus on improving the speed and security of PoS consensus mechanisms by optimizing its core building block: the digital signature scheme. We design a new pairing-based forward-secure multi-signature scheme, Pixel. We prove that Pixel is secure in the random oracle model under a variant of the Diffie-Hellman inversion problem over bilinear groups. Pixel is efficient as a stand-alone primitive and results in significant performance and size reduction compared to previous forward-secure signatures applied in settings where multiple users sign the same message (block). For instance, compared to a set of 1500 tree-based forward-secure signatures, a single Pixel signature that can authenticate the entire set is 2667 times smaller and can be verified 40 times faster. We explain how to integrate Pixel into any PoS blockchains to solve the posterior corruptions problem. We also demonstrate that Pixel provides significant efficiency gains when applied to the Algorand blockchain. Pixel signatures reduce the size of Algorand blocks with 1500 transactions by approximately 35% and reduce block verification time by approximately 38%.

### Acknowledgments

We would like to thank Zhenfei Zhang for implementing Pixel and for his help with Section 7. Additionally, we thank Jens Groth, Nickolai Zeldovich, our shepherd Ari Juels, and the anonymous reviewers for their useful feedback.

### References

[1] Algorand’s official implementation in Go. https://github.com/algorand/go-algorand, 2019.
[2] Algorand’s official Pixel implementation. https://github.com/algorand/pixel, 2019.
[3] Ross Anderson. Two remarks on public-key cryptology. Manuscript. Relevant material presented by the author in an invited lecture at the 4th ACM Conference on Computer and Communications Security, CCS 1997, Zurich, Switzerland, April 1–4, 1997, September 2000.
[4] Elli Androulaki, Artem Barger, Vita Bortnikov, Christian Cachin, Konstantinos Christidis, Angelo De Caro, David Enyeart, Christopher Ferris, Gennady Laventman, Yacov Manevich, Srinivasan Muralidharan, Chet Murthy, Binh Nguyen, Manish Sethi, Gari Singh, Keith Smith, Alessandro Sorniotti, Chrysoula Stathakopoulou, Marko Vukolic, Sharon Weed Cocco, and Jason Yellick. Hyperledger Fabric: A distributed operating system for permissioned blockchains. In Rui Oliveira, Pascal Felber, and Y. Charlie Hu, editors, Proceedings of the Thirteenth EuroSys Conference, EuroSys 2018, pages 30:1–30:15. ACM, 2018.
[5] Christian Badertscher, Peter Gaži, Aggelos Kiayias, Alexander Russell, and Vassilis Zikas. Ouroboros Genesis: Composable proof-of-stake blockchains with dynamic availability. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS ’18, pages 913–930, New York, NY, USA, 2018. ACM.
[6] Ali Bagherzandi, Jung Hee Cheon, and Stanislaw Jarecki. Multisignatures secure under the discrete logarithm assumption and a generalized forking lemma. In Peng Ning, Paul F. Syverson, and Somesh Jha, editors, ACM CCS 2008, pages 449–458. ACM Press, October 2008.
[7] Paulo S. L. M. Barreto, Ben Lynn, and Michael Scott. Constructing elliptic curves with prescribed embedding degrees. In Stelvio Cimato, Clemente Galdi, and Giuseppe Persiano, editors, SCN 02, volume 2576 of LNCS, pages 257–267. Springer, Heidelberg, September 2003.
[8] Mihir Bellare, Juan A. Garay, and Tal Rabin. Fast batch verification for modular exponentiation and digital signatures. In Kaisa Nyberg, editor, EUROCRYPT’98, volume 1403 of LNCS, pages 236–250. Springer, Heidelberg, May / June 1998.
[9] Mihir Bellare and Sara K. Miner. A forward-secure digital signature scheme. In Michael J. Wiener, editor, CRYPTO’99, volume 1666 of LNCS, pages 431–448. Springer, Heidelberg, August 1999.
[10] Mihir Bellare and Gregory Neven. Multi-signatures in the plain public-key model and a general forking lemma. In Ari Juels, Rebecca N. Wright, and Sabrina De Capitani di Vimercati, editors, ACM CCS 2006, pages 390–399. ACM Press, October / November 2006.
[11] Mihir Bellare and Phillip Rogaway. Random oracles are practical: A paradigm for designing efficient protocols. In Dorothy E. Denning, Raymond Pyle, Ravi Ganesan, Ravi S. Sandhu, and Victoria Ashby, editors, ACM CCS 93, pages 62–73. ACM Press, November 1993.
[12] Iddo Bentov, Rafael Pass, and Elaine Shi. Snow White: Provably secure proofs of stake. Cryptology ePrint Archive, Report 2016/919, 2016. http://eprint.iacr.org/2016/919.
[13] Alexandra Boldyreva. Threshold signatures, multisignatures and blind signatures based on the gap-Diffie-Hellman-group signature scheme. In Yvo Desmedt, editor, PKC 2003, volume 2567 of LNCS, pages 31–46. Springer, Heidelberg, January 2003.
[14] Dan Boneh, Xavier Boyen, and Eu-Jin Goh. Hierarchical identity based encryption with constant size ciphertext. In Ronald Cramer, editor, EUROCRYPT 2005, volume 3494 of LNCS, pages 440–456. Springer, Heidelberg, May 2005.
[15] Dan Boneh, Manu Drijvers, and Gregory Neven. Compact multi-signatures for smaller blockchains. In Thomas Peyrin and Steven Galbraith, editors, ASIACRYPT 2018, Part II, volume 11273 of LNCS, pages 435–464. Springer, Heidelberg, December 2018.
[16] Dan Boneh, Ben Lynn, and Hovav Shacham. Short signatures from the Weil pairing. Journal of Cryptology, 17(4):297–319, September 2004.
[17] Joseph Bonneau, Andrew Miller, Jeremy Clark, Arvind Narayanan, Joshua A. Kroll, and Edward W. Felten. SoK: Research perspectives and challenges for Bitcoin and cryptocurrencies. In 2015 IEEE Symposium on Security and Privacy, pages 104–121. IEEE Computer Society Press, May 2015.
[18] Xavier Boyen, Hovav Shacham, Emily Shen, and Brent Waters. Forward-secure signatures with untrusted update. In Ari Juels, Rebecca N. Wright, and Sabrina De Capitani di Vimercati, editors, ACM CCS 2006, pages 191–200. ACM Press, October / November 2006.
[19] Eric Brier, Jean-Sébastien Coron, Thomas Icart, David Madore, Hugues Randriam, and Mehdi Tibouchi. Efficient indifferentiable hashing into ordinary elliptic curves. In Tal Rabin, editor, CRYPTO 2010, volume 6223 of LNCS, pages 237–254. Springer, Heidelberg, August 2010.
[20] Vitalik Buterin. Long-range attacks: The serious problem with adaptive proof of work. https://blog.ethereum.org, 2014.
[21] Vitalik Buterin and Virgil Griffith. Casper the Friendly Finality Gadget. CoRR, abs/1710.09437, 2017.
[22] Ran Canetti, Shai Halevi, and Jonathan Katz. A forward-secure public-key encryption scheme. In Eli Biham, editor, EUROCRYPT 2003, volume 2656 of LNCS, pages 255–271. Springer, Heidelberg, May 2003.
[23] Ran Canetti, Shai Halevi, and Jonathan Katz. A forward-secure public-key encryption scheme. Journal of Cryptology, 20(3):265–294, July 2007.
[24] Jing Chen, Sergey Gorbunov, Silvio Micali, and Georgios Vlachos. Algorand Agreement: Super fast and partition resilient Byzantine agreement. Cryptology ePrint Archive, Report 2018/377, 2018.
[25] Jung Hee Cheon. Security analysis of the strong Diffie-Hellman problem. In Serge Vaudenay, editor, EUROCRYPT 2006, volume 4004 of LNCS, pages 1–11. Springer, Heidelberg, May / June 2006.
[26] Sherman S. M. Chow, Lucas Chi Kwong Hui, Siu-Ming Yiu, and K. P. Chow. Secure hierarchical identity based signature and its application. In Javier López, Sihan Qing, and Eiji Okamoto, editors, ICICS 04, volume 3269 of LNCS, pages 480–494. Springer, Heidelberg, October 2004.
[27] M. Conti, E. Sandeep Kumar, C. Lal, and S. Ruj. A survey on security and privacy issues of Bitcoin. IEEE Communications Surveys Tutorials, 20(4):3416–3452, Fourthquarter 2018.
[28] Phil Daian, Rafael Pass, and Elaine Shi. Snow White: Robustly reconfigurable consensus and applications to provably secure proof of stake. In Financial Cryptography and Data Security FC, 2019.
[29] Bernardo David, Peter Gazi, Aggelos Kiayias, and Alexander Russell. Ouroboros Praos: An adaptively-secure, semi-synchronous proof-of-stake blockchain. In Jesper Buus Nielsen and Vincent Rijmen, editors, EUROCRYPT 2018, Part II, volume 10821 of LNCS, pages 66–98. Springer, Heidelberg, April / May 2018.
[30] David Derler, Stephan Krenn, Thomas Lorünser, Sebastian Ramacher, Daniel Slamanig, and Christoph Striecks. Revisiting proxy re-encryption: Forward secrecy, improved security, and applications. In Michel Abdalla and Ricardo Dahab, editors, PKC 2018, Part I, volume 10769 of LNCS, pages 219–250. Springer, Heidelberg, March 2018.
[31] Manu Drijvers, Kasra Edalatnejad, Bryan Ford, Eike Kiltz, Julian Loss, Gregory Neven, and Igors Stepanovs. On the security of two-round multi-signatures. In 2019 IEEE Symposium on Security and Privacy, pages 1084–1101. IEEE Computer Society Press, May 2019.