### Symmetric Signatures and Tamper-Evidence in Peer-to-Peer Settings

Symmetric signatures can be employed to provide tamper-evidence in peer-to-peer (P2P) settings. However, using symmetric signatures alone necessitates a coordinated and randomized key evolution between the connected nodes. This coordination is feasible if the adversary cannot access some of the information exchanged by the legitimate parties. While this assumption implies a weaker adversary compared to those tolerated by asymmetric signatures, the model remains practical in certain scenarios and offers the efficiency benefits of symmetric signatures.

### Combining Tamper-Evidence with Other Security Features

Tamper-evidence can be integrated with other security enhancements for signatures, such as forward-secure [3] or intrusion-resilient models [19, 17]. 

### Monotone Signatures

Monotone signatures, introduced by Naccache, Pointcheval, and Tymen [26], allow the verification algorithm to be updated. If the legitimate signer is under duress, they can reveal some secrets, enabling an extortionist to generate valid signatures under the current verification algorithm. Once the signer is released, they can update the verification algorithm to ensure that all previously generated signatures remain valid, while those generated by the extortionist become invalid. Unlike tamper-evident or forward-secure signatures, the definitions in [26] do not include the possibility of updating the signer's keys. We propose using key-evolving monotone signatures, which can achieve the main features of monotone signatures directly from tamper-evident signatures. The verification algorithm would check for tampering using Div and a signature for the previous time period. The signer would maintain both a "correct" and a "diverged" version of the secret key. This divergence is undetectable against the signature of the previous period used in the current verification, allowing the signer to release the diverged version under duress. Afterward, the signer can update the verification by including a signature for the current period, preventing the attacker from generating earlier signatures. This method, though not more efficient than the original constructions in [26], illustrates the connection between the two concepts. The efficiency of monotone signatures can be improved through key-evolution, as further developed in [20].

### Open Problems and Potential Approaches

One of the most challenging open problems is finding an alternative meaningful definition of tamper-evidence that does not fall under our lower bounds. It may also be interesting to investigate the probability of safety for each time period with respect to a given exposure time and the time of a second signature selected according to a specific distribution. This could provide a more realistic estimate of security, as the adversary might not know the time period of the signature against which their signature is compared. Security can be enhanced by testing the given signature against multiple signatures selected from the distribution. Determining the optimal distribution function is another intriguing problem.

Other potential approaches include allowing the Div test to occasionally miss divergence and give false positives, assuming the adversary cannot obtain any signatures after a certain point. One approach involves defining a metric on the space of public keys and restricting the distance between consecutive public keys, so there are multiple choices for the next public key. The evolution of the signer then corresponds to a random walk. Utilizing the property that the distance between positions at times \( t_1 \) and \( t_2 \) within one random walk is likely smaller than the positions corresponding to \( t_1 \) and \( t_2 \) on different random walks, we can detect tampering. However, it is unlikely that this approach will improve upon our results.

Future research directions include considering more interactive authentication models (e.g., zero-knowledge proofs of identity [13, 12]) and extending Div to use more than two signatures for tampering detection, which may impact PKI-related issues discussed in this section.

### Acknowledgments

The author is grateful to Leonid Levin and Drue Coles for their valuable discussions. Drue's insights were instrumental in crystallizing the key concepts, while Leonid pointed out the lower bound for subset separation strongly tamper-evidence schemes. The author also thanks the anonymous referees for their comments, particularly for highlighting the connection with monotone signatures. Finally, special thanks to Drue and Peng Xie for their helpful feedback on the preliminary drafts of the paper.

### References

[1] M. Abdalla and L. Reyzin. A new forward-secure digital signature scheme. In T. Okamoto, editor, Advances in Cryptology—ASIACRYPT 2000, volume 1976 of Lecture Notes in Computer Science, pages 116–129, Kyoto, Japan, 3–7 Dec. 2000. Springer-Verlag. Full version available from the Cryptology ePrint Archive, record 2000/002, http://eprint.iacr.org/.

[2] R. Anderson. Invited lecture. Fourth Annual Conference on Computer and Communications Security, ACM (see http://www.ftp.cl.cam.ac.uk/ftp/users/rja14/forwardsecure.pdf), 1997.

[3] M. Bellare and S. Miner. A forward-secure digital signature scheme. In M. Wiener, editor, Advances in Cryptology—CRYPTO ’99, volume 1666 of Lecture Notes in Computer Science, pages 431–448. Springer-Verlag, 15–19 Aug. 1999. Revised version is available from http://www.cs.ucsd.edu/~mihir/.

[4] M. Blaze. High-bandwidth encryption with low-bandwidth smartcards. In D. Grollman, editor, Fast Software Encryption: Third International Workshop, volume 1039 of Lecture Notes in Computer Science, pages 33–40, Cambridge, UK, 21–23 Feb. 1996. Springer-Verlag.

[5] M. Blaze, J. Feigenbaum, and M. Naor. A formal treatment of remotely keyed encryption. In Advances in Cryptology – EUROCRYPT ’98, pages 251–265, 1998.

[6] D. Boneh and M. Franklin. Efficient generation of shared RSA keys. In Proc. 17th International Advances in Cryptology Conference – CRYPTO ’97, pages 425–439, 1997.

[7] R. Canetti, Y. Dodis, S. Halevi, E. Kushilevitz, and A. Sahai. Exposure-resilient functions and all-or-nothing transforms. In B. Preneel, editor, Advances in Cryptology—EUROCRYPT 2000, volume 1807 of Lecture Notes in Computer Science, pages 453–469. Springer-Verlag, 14–18 May 2000.

[8] R. Canetti, S. Halevi, and A. Herzberg. Maintaining authenticated communication in the presence of break-ins. Journal of Cryptology, 13(1):61–105, Jan. 2000.

[9] Y. Desmedt and Y. Frankel. Threshold cryptosystems. In G. Brassard, editor, Advances in Cryptology—CRYPTO ’89, volume 435 of Lecture Notes in Computer Science, pages 307–315. Springer-Verlag, 1990, 20–24 Aug. 1989.

[10] Y. Dodis, J. Katz, S. Xu, and M. Yung. Key-insulated public key cryptosystems. In Knudsen [21].

[11] Y. Dodis, J. Katz, S. Xu, and M. Yung. Strong key-insulated signature schemes. In International Workshop on Practice and Theory in Public Key Cryptography (PKC’03), 2003.

[12] U. Feige, A. Fiat, and A. Shamir. Zero-knowledge proofs of identity. Journal of Cryptology, 1(2):77–94, 1988.

[13] A. Fiat and A. Shamir. How to prove yourself: Practical solutions to identification and signature problems. In A. M. Odlyzko, editor, Advances in Cryptology—CRYPTO ’86, volume 263 of Lecture Notes in Computer Science, pages 186–194. Springer-Verlag, 1987, 11–15 Aug. 1986.

[14] S. Goldwasser, S. Micali, and R. L. Rivest. A digital signature scheme secure against adaptive chosen-message attacks. SIAM Journal on Computing, 17(2):281–308, April 1988.

[15] J. Håstad, J. Jonsson, A. Juels, and M. Yung. Funkspiel schemes: An alternative to conventional tamper resistance. In Proceedings of the 7th ACM conference on Computer and communications security, pages 125–133. ACM Press, 2000.

[16] A. Herzberg, M. Jakobsson, S. Jarecki, H. Krawczyk, and M. Yung. Proactive public key and signature systems. In Fourth ACM Conference on Computer and Communication Security, pages 100–110. ACM, Apr. 1–4 1997.

[17] G. Itkis. Intrusion-resilient signatures: Generic constructions, or defeating strong adversary with minimal assumptions. In Third Conference on Security in Communication Networks (SCN’02) [31].

[18] G. Itkis and L. Reyzin. Forward-secure signatures with optimal signing and verifying. In J. Kilian, editor, Advances in Cryptology—CRYPTO 2001, volume 2139 of Lecture Notes in Computer Science, pages 332–354. Springer-Verlag, 19–23 Aug. 2001.

[19] G. Itkis and L. Reyzin. Intrusion-resilient signatures, or towards obsoletion of certificate revocation. In M. Yung, editor, Advances in Cryptology—CRYPTO 2002, Lecture Notes in Computer Science. Springer-Verlag, 18–22 Aug. 2002. Available from http://eprint.iacr.org/2002/054/.

[20] G. Itkis and P. Xie. Generalized key-evolving signatures, or how to foil an armed adversary. In 1st MiAn International Conference on Applied Cryptography and Network Security. Springer-Verlag, 2003.

[21] L. Knudsen, editor. Advances in Cryptology—EUROCRYPT 2002, Lecture Notes in Computer Science. Springer-Verlag, 28 April–2 May 2002.

[22] A. Kozlov and L. Reyzin. Forward-secure signatures with fast key update. In Third Conference on Security in Communication Networks (SCN’02) [31].

[23] H. Krawczyk. Simple forward-secure signatures from any signature scheme. In Seventh ACM Conference on Computer and Communication Security. ACM, Nov. 1–4 2000.

[24] S. Lucks. On the security of remotely keyed encryption. In E. Biham, editor, Fast Software Encryption: 4th International Workshop, volume 1267 of Lecture Notes in Computer Science, pages 219–229, Haifa, Israel, 20–22 Jan. 1997. Springer-Verlag.

[25] T. Malkin, D. Micciancio, and S. Miner. Efficient generic forward-secure signatures with an unbounded number of time periods. In Knudsen [21].

[26] D. Naccache, D. Pointcheval, and C. Tymen. Monotone signatures. In P. Syverson, editor, Financial Cryptography, volume 2339 of Lecture Notes in Computer Science, pages 305–318. Springer-Verlag, 2001.

[27] R. Ostrovsky and M. Yung. How to withstand mobile virus attacks. In 10-th Annual ACM Symp. on Principles of Distributed Computing, pages 51–59, 1991.

[28] T. P. Pedersen. A threshold cryptosystem without a trusted party (extended abstract). In D. W. Davies, editor, Advances in Cryptology—EUROCRYPT 91, volume 547 of Lecture Notes in Computer Science, pages 522–526. Springer-Verlag, 8–11 Apr. 1991.

[29] T. P. Pedersen and B. Pfitzmann. Fail-stop signatures. SIAM Journal on Computing, 26(2):291–330, 1997.

[30] R. L. Rivest. Can we eliminate certificate revocation lists? In R. Hirschfeld, editor, Financial Cryptography, volume 1465 of Lecture Notes in Computer Science. Springer-Verlag, 1998.

[31] Third Conference on Security in Communication Networks (SCN’02), Lecture Notes in Computer Science. Springer-Verlag, Sept. 12–13 2002.