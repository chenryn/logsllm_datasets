### Optimized Text

**IP and Service Port Number of Other Winny Peers**

The IP addresses and service port numbers (default upper limit: 600) of other Winny peers are collected. The number of IP addresses in the second set is lower than in the first because the information in the first set comes from connections to the service port of the decoy peer, while the second set comes from connections to the client port of the decoy peer. This discrepancy depends on the search capacity of the decoy peers and the number of "Port 0" peers, which do not have their own service ports.

In the third set, Winny peers in the stub network (database γ) access 1-3216 peers of the service port in database β, as shown in Table 1. In our procedures, peers D and F are not identified as Winny peers because they were accessed only once. Since a Winny peer regularly accesses the service ports of other peers to maintain the peer search connections, this identification method is effective. However, no "Winny" peers are found in the fourth set, as there are no connections between the service port of a Winny peer in the stub network and the client port of a Winny peer in the Internet. This is because Winny users in the stub network do not upload files to other Winny peers.

**Effect of Measurement Period for Log B**

Next, we investigate the effect of the measurement period for log B. The number of identified nodes remains constant, but the number of identified flows varies. A longer measurement period identifies more IP addresses and service ports of Winny peers in the Internet (database β), and more flows are also identified. Comparing (e) with (h), (h) yields better results despite the similar number of peers in database β, because earlier logged peers were not active during the measurement period of log A. However, the difference in the number of identified flows between (g) and (h) is small, likely due to the connection period of each peer. In (a), (g), and (h), the average flow size is smaller because the additional identified flows are used for composing the adjacent peer check/search network.

**Analysis Results 2**

As shown in the previous subsection, no "Winny" peers were found in the stub network except for the 5 decoy peers. We need to evaluate whether the proposed identification method 2 works effectively. In the initial evaluation, we ran 5 Winny applications in parallel, treating all 5 as decoy peers. For the next set of evaluations, we treated one of the decoy peers as a decoy and the other 4 as general "Winny" peers. These analyses identified one decoy peer and 4 "Winny" peers in the stub network. All 5 "Winny" peers are treated as "Winny" in this subsection. Note that the 5 decoy peers run on one PC, and the relationships in Figure 3 differ for the following results.

**Measurement Period and Identified Peers**

We determined a 24-hour measurement period for points A and B. The number of identified peers in each step is as follows:

1. **Unique IP Addresses of Winny Peers:** 19,136 (database α).
2. **Unique Pairs of IP Addresses and Service Ports of Winny Peers:** 13,791 (database β).
3. **Unique IP Addresses of Winny Peers in the Stub Network:** 11 (database γ).
4. **Unique IP Address and Service Port of Winny Peers in the Stub Network:** 5 (database δ). The number of "Port 0" peers is 9 (database ).
5. **Additional Peers Found by the Winny Peer:** 32,229, added to database α.
6. **Updated Database β:** The number of peers is 34,868.
7. **Identification of "Winny" and "Port 0" Peers in the Stub Network:** All "Winny" and "Port 0" peers were identified in step (4); no additional peers were found in this step.

These "Winny" peers access other peers more frequently than normal Winny peers, but our procedures work well, as demonstrated by these results.

**Effect of the Size of Database β**

We investigated the effect of the size of database β by changing it from 10, 100, 1,000, and 13,791. These peers are the first accessed by the decoy peer (one of the five) from 0:00 on January 11. Table 3 shows the relationship between the number of peers in database β and the identified peers in each database. When 10 or 100 peers are in database β, some Winny peers are not identified. However, with 1,000 peers, the results are almost the same as the "one decoy peer" case. This indicates that if there are many "Winny" peers in the stub network, our identification performance will improve.

**Conclusion**

We proposed an identification method for pure P2P traffic, specifically Winny, and evaluated its basic characteristics. Using a decoy node, we identified the IP address and service port of Winny peers and selected the identified IP and service port numbers in the traffic log of the backbone. Our method is effective for future pure P2P applications because it relies on the fundamental relationships in client/server computing in Internet applications.

In the stub network, the number of Winny users is small, and we may not find "Winny" traffic since Winny users in the stub network use Port 0. Collecting traffic logs from other stub networks with many Winny users, even with the current search capacity of the decoy peer, will allow for clearer analysis of traffic characteristics. The introduced identification method is an example, and we should improve it by analyzing the access patterns among peers. Our method's effectiveness depends on the number of accesses by decoy peers and the number of users in the stub network. Some flows may not be identified, but preparing many decoy peers or having many users in the stub network can improve the identification performance.

For real-time traffic management, our proposed procedure requires further improvement.

**Acknowledgments**

The authors wish to express their gratitude to Mr. Hideaki Suzuki of the Tokyo University of Agriculture and Technology for their support in traffic analysis. The authors also thank the anonymous reviewers for their useful comments and advice to improve this paper. This research is partly supported by Grants-in-Aid for Scientific Research (KAKENHI), No. 15500032.

**References**

1. M. St. Johns and G. Huston, “Considerations on the use of a Service Identifier in Packet Headers,” RFC 3639, 2003.
2. Gnutella, “http://www.gnutella.com/”
3. Kazaa, “http://www.kazaa.com/”
4. BitTorrent Protocol, “http://bitconjurer.org/BitTorrent”
5. S. Saroiu, P. Gummadi, and S. D. Gribble, “Measurement study of peer-to-peer file sharing systems,” Multimedia Computing and Networking 2002, 2002.
6. S. Sen and J. Wang, “Analyzing Peer-To-Peer Traffic Across Large Networks,” IEEE/ACM Trans. on Networking, Vol. 12, No. 2, pp. 219–232, 2004.
7. M. Kim, H. Kang, and J. W. Hong, “Towards Peer-to-Peer Traffic Analysis Using Flows,” Proc. of 14th IFIP/IEEE Workshop Distributed Systems: Operations and Management, 2003.
8. WinMX, “http://www.winmx.com/”
9. Winny, “http://www.nynode.info/”
10. C. Dewes, A. Wichmann, and A. Feldmann, “An Analysis of Internet Chat Systems,” Proc. of ACM SIGCOMM Internet Measurement Workshop 2003, pp. 51–64, 2003.
11. K. P. Gummadi, R. J. Dunn, and S. Saroiu, “Measurement, Modeling and Analysis of a Peer-to-Peer File-Sharing Workload,” Proc. of ACM SOSP’03 2003, pp. 314–329, 2003.
12. Snort, “http://www.snort.org/”
13. P. Barford, J. Kline, D. Plonka, and A. Ron, “A Signal Analysis of Network Traffic Anomalies,” Proc. of ACM IMW’02, pp. 71–82, 2002.
14. S. Sen, O. Spatscheck, and D. Wang, “Accurate, Scalable In-Network Identification of P2P Traffic Using Application Signatures,” Proc. of ACM WWW’04, 2004.
15. K. Tutscheku, “A Measurement-based Traffic Profile of the eDonkey Filesharing Service,” Proc. of PAM’04, 2004.
16. I. Clarke et al., “Freenet: A Distributed Anonymous Information Storage and Retrieval System,” Proc. of ICSI Workshop on Design Issues in Anonymity and Unobservability, Springer-Verlag, LNCS 2009, pp. 46–66, 2001.
17. Safeny, “http://www.geocities.co.jp/SiliconValley-SanJose/7063/”