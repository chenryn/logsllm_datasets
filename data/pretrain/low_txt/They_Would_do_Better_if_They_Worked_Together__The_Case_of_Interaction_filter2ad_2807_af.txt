### Interaction Problems Between Desktop Password Managers and Websites

**1. JavaScript Interactions in Password Managers (PWMs):**
We discovered that some PWMs, particularly those integrated into common web browsers, utilize JavaScript to interact with website elements. This interaction is typically aimed at identifying all relevant input fields on a webpage. However, we also observed instances where PWMs manipulate the website after credentials are entered or after a login form is submitted. Such manipulations can lead to website malfunctions, as they may trigger unintended events associated with specific website elements. Moreover, these manipulations are unnecessary for detecting input fields.

**2. Support for HTTP Basic Authentication:**
While HTTP Basic Authentication is not commonly used today, we argue that it should still be supported by PWMs as a standard web authentication method. Unlike other forms of authentication, Basic Authentication is not part of the website itself but is instead a mechanism provided by the browser. Consequently, different detection methods are required compared to those used for identifying input fields. Fortunately, most modern browsers provide APIs that PWMs can leverage to support Basic Authentication [6], [31].

**3. Better Support for TOTP (Time-Based One-Time Password):**
Our investigation revealed that almost none of the PWMs we examined support the automatic generation and filling of TOTP. This feature presents a double-edged sword: while it enhances the convenience and usability of a password manager by simplifying the process for users, it also consolidates multiple factors into a single point of failure, making the PWM a potential security risk. One way to mitigate this issue is to use a separate smartphone application for TOTP, which some PWMs like Dashlane already offer. This approach can further enhance security by enabling the PWM to send push notifications with authentication requests to the user's phone, adding a second factor without necessarily adopting a TOTP mechanism.

### Conclusion
This study identified several shortcomings in both modern desktop PWMs and current website authentication implementations, leading to interaction problems between them. While our work provides the first systematic analysis of these issues, there are areas for future research. Although we collected and labeled Chrome Web Store reviews and GitHub issues until saturation, our list of interaction problems is not exhaustive. Further work could include reviewing additional resources such as issue trackers from browser vendors. Additionally, while our focus was on desktop PWMs, mobile PWMs are becoming increasingly important and present their own unique opportunities and challenges. A similar analysis for mobile PWMs could be beneficial.

### References
[1] 1Password X – Password Manager. https://1password.com. Last visited: 11/23/2020.
[2] Angular Forms and Password Managers - Stack Overflow. https://stackoverflow.com/questions/53911864/angular-forms-and-password-managers/53956890#53956890. Last visited: 12/01/2020.
[3] Apple Password AutoFill. https://developer.apple.com/documentation/security/password_autofill. Last visited: 12/03/2020.
[4] AutoFill Framework — Android Developers. https://developer.android.com/guide/topics/text/autofill. Last visited: 12/03/2020.
[5] Bitwarden: Discord Added to #752. c4164f5703babc5d11d8cf1e8426c442b4969573. https://github.com/bitwarden/server/pull/752/commits/c4164f5703babc5d11d8cf1e8426c442b4969573. Last visited: 12/04/2020.
[6] chrome.webRequest - Google Chrome. https://developer.chrome.com/extensions/webRequest#event-onAuthRequired. Last visited: 12/03/2020.
[7] Content Security Policy Level 3. https://www.w3.org/TR/CSP3/. Last visited: 12/03/2020.
[8] Dashlane - Password Manager. https://www.dashlane.com. Last visited: 12/03/2020.
[9] Exciting News — ShareLaTeX is Joining Overleaf - Overleaf, Online LaTeX Editor. https://www.overleaf.com/blog/518-exciting-news-sharelatex-is-joining-overleaf. Last visited: 12/03/2020.
[10] Fetch Standard - 3.2. CORS Protocol. https://fetch.spec.whatwg.org/#http-cors-protocol. Last visited: 12/03/2020.
[11] Flask. https://palletsprojects.com/p/flask/. Last visited: 12/03/2020.
[12] GitHub - bitwarden/browser: The Browser Extension Vault (Chrome, Firefox, Opera, Edge, Safari, & more). https://github.com/bitwarden/browser. Last visited: 12/03/2020.
[13] GitHub - keepassxreboot/keepassxc-browser: KeepassXC Browser Extension. https://github.com/keepassxreboot/keepassxc-browser/. Last visited: 12/03/2020.
[14] GitHub - keepassxreboot/keepassxc: KeepassXC is a Cross-Platform Community-Driven Port of the Windows Application “KeePass Password Safe”. https://github.com/keepassxreboot/keepassxc/. Last visited: 12/03/2020.
[15] GitHub - passbolt/passbolt_browser_extension: Passbolt Browser Extensions (Firefox & Chrome). https://github.com/passbolt/passbolt_browser_extension/. Last visited: 12/03/2020.
[16] GitHub Main Page. https://github.com/. Last visited: 12/03/2020.
[17] How is a Two-Step Login Better Than Single-Step When You Have a Password Manager? https://ux.stackexchange.com/questions/124021/how-is-a-two-step-login-better-than-single-step-when-you-have-a-password-manager. Last visited: 12/01/2020.
[18] HTML 5.2: 4.10. Forms. https://www.w3.org/TR/html52/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute. Last visited: 12/03/2020.
[19] HTML Standard - 7.5 Origin. https://html.spec.whatwg.org/#origin. Last visited: 12/03/2020.
[20] LastPass: Free Password Manager. https://www.lastpass.com/. Last visited: 11/23/2020.
[21] NetMarketShare: Browser Market Share. https://netmarketshare.com/browser-market-share.aspx. Last visited: 12/03/2020.
[22] Norton Password Manager. https://norton.com/feature/password-manager. Last visited: 12/03/2020.
[23] Same-Origin Policy - Web Security. https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy. Last visited: 12/03/2020.
[24] Same-Origin Policy - Web Security — MDN. https://www.w3.org/Security/wiki/Same_Origin_Policy. Last visited: 12/03/2020.
[25] Selenium with Python — Selenium Python Bindings 2 Documentation. https://selenium-python.readthedocs.io/. Last visited: 12/03/2020.
[26] SeleniumHQ Browser Automation. https://www.selenium.dev/. Last visited: 12/03/2020.
[27] StackOverflow: How to Create a Minimal, Reproducible Example. https://stackoverflow.com/help/minimal-reproducible-example. Last visited: 12/03/2020.
[28] StatCounter: Browser Market Share. https://gs.statcounter.com/browser-market-share#monthly-202010-202010-bar. Last visited: 12/03/2020.
[29] Web Scraper - Free Web Scraping. https://chrome.google.com/webstore/detail/web-scraper-free-web-scra/jnhgnonknehpejjnehehllkliplmbmhn. Last visited: 12/03/2020.
[30] Web Scraper - The #1 Web Scraping Extension. https://webscraper.io/. Last visited: 12/03/2020.
[31] webRequest.onAuthRequired - Mozilla — MDN. https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/onAuthRequired. Last visited: 12/03/2020.
[32] Wikimedia Foundation: User Agent Breakdowns. https://analytics.wikimedia.org/dashboards/browsers/#all-sites-by-browser. Last visited: 12/03/2020.
[33] D. Akhawe and A. P. Felt. Alice in Warningland: A Large-Scale Field Study of Browser Security Warning Effectiveness. In Proc. 22nd Usenix Security Symposium (SEC’13). USENIX Association, 2013.
[34] I. Becker, S. Parkin, and M. A. Sasse. The Rewards and Costs of Stronger Passwords in a University: Linking Password Lifetime to Strength. In 27th {USENIX} Security Symposium ({USENIX} Security 18), pages 239–253, 2018.
[35] J. Bonneau. The Science of Guessing: Analyzing an Anonymized Corpus of 70 Million Passwords. In 2012 IEEE Symposium on Security and Privacy, pages 538–552. IEEE, 2012.
[36] J. Bonneau, C. Herley, P. C. Van Oorschot, and F. Stajano. The Quest to Replace Passwords: A Framework for Comparative Evaluation of Web Authentication Schemes. In Proc. 33rd IEEE Symposium on Security and Privacy (SP’12). IEEE, 2012.
[37] J. Bonneau, C. Herley, P. C. Van Oorschot, and F. Stajano. The Quest to Replace Passwords: A Framework for Comparative Evaluation of Web Authentication Schemes. In 2012 IEEE Symposium on Security and Privacy, pages 553–567. IEEE, 2012.
[38] I. Cherapau, I. Muslukhov, N. Asanka, and K. Beznosov. On the Impact of Touch ID on iPhone Passcodes. In Eleventh Symposium On Usable Privacy and Security (SOUPS 2015), pages 257–276, Ottawa, July 2015. USENIX Association.
[39] S. Chiasson, P. C. van Oorschot, and R. Biddle. A Usability Study and Critique of Two Password Managers. In USENIX Security Symposium, volume 15, pages 1–16, 2006.
[40] J. Colnago, S. Devlin, M. Oates, C. Swoopes, L. Bauer, L. Cranor, and N. Christin. “It’s Not Actually That Horrible” Exploring Adoption of Two-Factor Authentication at a University. In Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, pages 1–11, 2018.
[41] J. S. Conners and D. Zappala. Let’s Authenticate: Automated Cryptographic Authentication for the Web with Simple Account Recovery. Who Are You, 2019.
[42] H. de Vries. Making Password Managers Play Ball with Your Login Form. https://hiddedevries.nl/en/blog/2018-01-13-making-password-managers-play-ball-with-your-login-form. Last visited: 12/01/2020.
[43] Evolving Chrome’s Security Indicators, May 2017. Visited.
[44] R. T. Fielding and J. Reschke. Hypertext Transfer Protocol (HTTP/1.1): Authentication. RFC 7235, June 2014.
[45] Firefox 83 Introduces HTTPS-Only Mode, Nov. 2020. Visited.
[46] M. Golla, M. Wei, J. Hainline, L. Filipe, M. Dürmuth, E. Redmiles, and B. Ur. "What Was That Site Doing with My Facebook Password?" Designing Password-Reuse Notifications. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, pages 1549–1566, 2018.
[47] J. Gray, V. N. Franqueira, and Y. Yu. Forensically-Sound Analysis of Security Risks of Using Local Password Managers. In 2016 IEEE 24th International Requirements Engineering Conference Workshops (REW), pages 114–121. IEEE, 2016.
[48] M. Harbach, S. Fahl, and M. Smith. Who’s Afraid of Which Bad Wolf? A Survey of IT Security Risk Awareness. In Proc. 27th Computer Security Foundations Symposium (CSF’14). IEEE, 2014.
[49] A. Karole, N. Saxena, and N. Christin. A Comparative Usability Evaluation of Traditional Password Managers. In International Conference on Information Security and Cryptology, pages 233–251. Springer, 2010.
[50] Z. Li, W. He, D. Akhawe, and D. Song. The Emperor’s New Password Manager: Security Analysis of Web-Based Password Managers. In 23rd {USENIX} Security Symposium ({USENIX} Security 14), pages 465–479, 2014.
[51] S. G. Lyastani, M. Schilling, S. Fahl, M. Backes, and S. Bugiel. Better Managed than Memorized? Studying the Impact of Managers on Password Strength and Reuse. In 27th {USENIX} Security Symposium ({USENIX} Security 18), pages 203–220, 2018.
[52] S. G. Lyastani, M. Schilling, M. Neumayr, M. Backes, and S. Bugiel. Is FIDO2 the Kingslayer of User Authentication? A Comparative Usability Study of FIDO2 Passwordless Authentication. In 2020 IEEE Symposium on Security and Privacy (SP), pages 268–285. IEEE, 2020.
[53] R. Maclean and J. Ophoff. Determining Key Factors that Lead to the Adoption of Password Managers. In 2018 International Conference on Intelligent and Innovative Computing Applications (ICONIC), pages 1–7. IEEE, 2018.
[54] N. McDonald, S. Schoenebeck, and A. Forte. Reliability and Inter-Rater Reliability in Qualitative Research: Norms and Guidelines for CSCW and HCI Practice. Proceedings of the ACM on Human-Computer Interaction, 3(CSCW):1–23, 2019.
[55] J. Neale. Iterative Categorization (IC): A Systematic Technique for Analysing Qualitative Data. Addiction, 111(6):1096–1106, 2016.
[56] S. Oesch and S. Ruoti. That Was Then, This Is Now: A Security Evaluation of Password Generation, Storage, and Autofill in Browser-Based Password Managers. In Proc. of USENIX Security Symp, 2020.
[57] Password Rules Validation Tool. Visited.
[58] S. Pearman, J. Thomas, P. E. Naeini, H. Habib, L. Bauer, N. Christin, L. F. Cranor, S. Egelman, and A. Forget. Let’s Go In for a Closer Look: Observing Passwords in Their Natural Habitat. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages 295–310, 2017.
[59] S. Pearman, S. A. Zhang, L. Bauer, N. Christin, and L. F. Cranor. Why People (Don’t) Use Password Managers Effectively. In Fifteenth Symposium On Usable Privacy and Security (SOUPS 2019). USENIX Association, Santa Clara, CA, pages 319–338, 2019.
[60] H. Ray, F. Wolf, R. Kuber, and A. J. Aviv. Why Older Adults (Don’t) Use Password Managers. arXiv preprint arXiv:2010.01973, 2020.
[61] K. Reese, T. Smith, J. Dutson, J. Armknecht, J. Cameron, and K. Seamon. A Usability Study of Five Two-Factor Authentication Methods. In Fifteenth Symposium on Usable Privacy and Security ({SOUPS} 2019), 2019.
[62] J. Reynolds, N. Samarin, J. Barnes, T. Judd, J. Mason, M. Bailey, and S. Egelman. Empirical Measurement of Systemic 2FA Usability. In 29th {USENIX} Security Symposium ({USENIX} Security 20), pages 127–143, 2020.
[63] J. Reynolds, T. Smith, K. Reese, L. Dickinson, S. Ruoti, and K. Seamon. A Tale of Two Studies: The Best and Worst of YubiKey Usability. In 2018 IEEE Symposium on Security and Privacy (SP), pages 872–888. IEEE, 2018.
[64] D. Silver, S. Jana, D. Boneh, E. Chen, and C. Jackson. Password Managers: Attacks and Defenses. In 23rd {USENIX} Security Symposium ({USENIX} Security 14), pages 449–464, 2014.
[65] F. Stajano. Pico: No More Passwords! In International Workshop on Security Protocols, pages 49–81. Springer, 2011.
[66] F. Stajano, M. Spencer, G. Jenkinson, and Q. Stafford-Fraser. Password-Manager Friendly (PMF): Semantic Annotations to Improve the Effectiveness of Password Managers. In International Conference on Passwords, pages 61–73. Springer, 2014.
[67] E. Stobert and R. Biddle. Expert Password Management. In International Conference on Passwords, pages 3–20. Springer, 2015.
[68] B. Stock and M. Johns. Protecting Users Against XSS-Based Password Manager Abuse. In Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security, pages 183–194, 2014.
[69] J. Tan, L. Bauer, N. Christin, and L. F. Cranor. Practical Recommendations for Stronger, More Usable Passwords Combining Minimum-Strength, Minimum-Length, and Blocklist Requirements. In Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security, pages 1407–1426, 2020.
[70] K. Team. Add fidelity.com to Predefined Sites - KeePassXC GitHub Repository, 11 2020. https://github.com/keepassxreboot/keepassxc-browser/blob/develop/keepassxc-browser/common/sites.js (visited on 03/12/20, commit 7ee83ede26fb974d6366a64e6ef15e703eb6166d).
[71] B. Ur, F. Noma, J. Bees, S. M. Segreti, R. Shay, L. Bauer, N. Christin, and L. F. Cranor. "I Added '!' at the End to Make It Secure": Observing Password Creation in the Lab. In Symposium on Usable Privacy and Security (SOUPS), 2015.
[72] K. C. Wang and M. K. Reiter. How to End Password Reuse on the Web. In 26th Annual Network and Distributed System Security Symposium, NDSS 2019, San Diego, California, USA, February 24-27, 2019. The Internet Society, 2019.
[73] R. Wash, E. Rader, R. Berman, and Z. Wellmer. Understanding Password Choices: How Frequently Entered Passwords Are Re-Used Across Websites. In Twelfth Symposium on Usable Privacy and Security ({SOUPS} 2016), pages 175–188, 2016.
[74] R. Zhao and C. Yue. All Your Browser-Saved Passwords Could Belong to Us: A Security Analysis and a Cloud-Based New Design. In Proceedings of the Third ACM Conference on Data and Application Security and Privacy, pages 333–340, 2013.