### Aggregate Publisher Throughput for Key Distribution

**Figure 4.** The aggregate publisher throughput for key distribution is plotted on a log-log graph. A client session involves fetching sufficient key material to generate all the keys needed to decrypt the published content. Key regression allows a publisher to support many client sessions per second. Chefs consistently outperforms Sous-Chefs because key regression performance is largely independent of the rate of membership turnover.

- **Number of Keys:**
  - 1
  - 10
  - 100
  - 1,000
  - 10,000
  - 100,000
  - 1,000,000 (1e+06)

### Remote Procedure Calls and Key Regression Performance

Chefs generates a single remote procedure call, regardless of the number of key versions. This makes the key regression process a small component of the overall benchmark. For 1,000,000 keys, key regression on the client takes less than 1.5 seconds with CPU utilization never exceeding 42%.

### Improved Client Latency

The client latency experiment measures the time for a single client to execute the search workload. The untrusted server and publisher have warm caches, while the client has a cold cache. Figure 5 shows that Chefs outperforms Sous-Chefs for the search workload under various network conditions.

- **Network Conditions:**
  - Chefs
  - Sous-Chefs
  - Sous-Chefs (cable modem)
  - Sous-Chefs (analog modem)

In Sous-Chefs, the network transfer time dominates client latency due to the large volume of keys transferred from the publisher to the client. There is no measurement for Sous-Chefs downloading 1,000,000 keys because the kernel assumes the mount failed after waiting 1,000 seconds. On a 56 Kbit/sec network, Sous-Chefs is expected to take over 2,232 seconds to download 1,000,000 keys, each 16 bytes. Thus, only three bars appear for the test cases involving 1,000,000 content keys.

### Conclusions

We presented provably-secure constructions for key regression, addressing the shortfalls of key rotation. We also provided the first measurements of either a key regression or key rotation system. Finally, we integrated key regression into a content distribution application to demonstrate how it enables efficient key distribution on low-bandwidth, high-latency connections. Using key regression, a publisher can efficiently control access to content, independent of group membership dynamics and without needing a fast network connection.

### Acknowledgments

K. Fu was supported in part by Project Oxygen and an Intel Ph.D. Fellowship. S. Kamara was supported by a Bell Labs Graduate Research Fellowship. T. Kohno was supported by an IBM Ph.D. Fellowship, NSF CCR-0208842, NSF ANR-0129617, and NSF CCR-0093337. K. Fu performed this research while at The Johns Hopkins University and MIT. T. Kohno performed part of this research while visiting UC Berkeley. We thank Ron Rivest for detailed comments on this paper; David Mazières for suggestions on formalizing definitions of security; Mahesh Kallahalla and Ram Swaminathan for our initial work together to define key regression; Fabian Monrose for early reviews of this paper; Frans Kaashoek for his guidance and unending support; and Frank Dabek, Emil Sit, and Jeremy Stribling for help with the testbed.

### References

[1] M. Abdalla and M. Bellare. Increasing the lifetime of a key: A comparative analysis of the security of re-keying techniques. In T. Okamoto, editor, Advances in Cryptology – ASIACRYPT, volume 1976 of Lecture Notes in Computer Science, pages 546–559, Kyoto, Japan, Dec. 3–7, 2000.

[2] M. Abdalla, M. Bellare, D. Catalano, E. Kiltz, T. Kohno, T. Lange, J. Malone-Lee, G. Neven, P. Paillier, and H. Shi. Searchable encryption revisited: Consistency properties, relation to anonymous IBE, and extensions. In V. Shoup, editor, Advances in Cryptology – CRYPTO 2005, volume 3621 of Lecture Notes in Computer Science, Santa Barbara, CA, USA, Aug. 14–18, 2005. Springer-Verlag, Berlin, Germany.

[3] Akamai Technologies. http://www.akamai.com.

[4] S. G. Akl and P. D. Taylor. Cryptographic solution to a problem of access control in a hierarchy. ACM Transactions on Computer Systems, 1(3):239–248, 1983.

[5] M. Backes, C. Cachin, and A. Oprea. Lazy revocation in cryptographic file systems. In 3rd International IEEE Security in Storage Workshop, Dec. 2005.

[6] M. Backes, C. Cachin, and A. Oprea. Secure lazy revocation. IBM Research Report RZ 3627, Oct. 2005. Available at http://domino.research.ibm.com/library/cyberdig.nsf/index.html, keyword 99637; also archived as Cryptology ePrint Archive Report 2005/334.

[7] M. Bellare, A. Desai, E. Jokipii, and P. Rogaway. A concrete security treatment of symmetric encryption. In 38th Annual Symposium on Foundations of Computer Science (FOCS ’97), pages 394–403. IEEE Computer Society, 1997.

[8] M. Bellare, J. Kilian, and P. Rogaway. The security of the cipher block chaining message authentication code. In Y. Desmedt, editor, Advances in Cryptology – CRYPTO’94, volume 839 of Lecture Notes in Computer Science, pages 341–358, Santa Barbara, CA, USA, Aug. 21–25, 1994. Springer-Verlag, Berlin, Germany.

[9] M. Bellare and P. Rogaway. Random oracles are practical: A paradigm for designing efficient protocols. In V. Ashby, editor, ACM CCS 93: 1st Conference on Computer and Communications Security, Lecture Notes in Computer Science, Fairfax, Virginia, USA, Nov. 3–5, 1993. ACM Press.

[10] M. Bellare and B. Yee. Forward security in private key cryptography. In M. Joye, editor, Topics in Cryptology – CT-RSA 2003, volume 2612 of Lecture Notes in Computer Science, pages 1–18, San Francisco, CA, USA, Apr. 13–17, 2003. Springer-Verlag, Berlin, Germany.

[11] M. Blum and S. Micali. How to generate cryptographically strong sequences of pseudo-random bits. In Proceedings of the 23rd IEEE Symposium on Foundations of Computer Science (FOCS ’82), 1982.

[12] D. Boneh, G. Di Crescenzo, R. Ostrovsky, and G. Persiano. Public key encryption with keyword search. In C. Cachin and J. Camenisch, editors, Advances in Cryptology – EUROCRYPT 2004, volume 3027 of Lecture Notes in Computer Science, pages 506–522, Interlaken, Switzerland, May 2–6, 2004. Springer-Verlag, Berlin, Germany.

[13] D. Boneh, C. Gentry, and B. Waters. Collusion resistant broadcast encryption with short ciphertexts and private keys. In V. Shoup, editor, Advances in Cryptology – CRYPTO 2005, volume 3621 of Lecture Notes in Computer Science, pages 258–275, Santa Barbara, CA, USA, Aug. 14–18, 2005. Springer-Verlag, Berlin, Germany.

[14] B. Cohen. Incentives build robustness in BitTorrent. In Proceedings of the First Workshop on the Economics of Peer-to-Peer Systems, Berkeley, CA, June 2003.

[15] J.-S. Coron, Y. Dodis, C. Malinaud, and P. Puniya. Merkle-Damgård revisited: How to construct a hash function. In V. Shoup, editor, Advances in Cryptology – CRYPTO 2005, volume 3621 of Lecture Notes in Computer Science. Springer-Verlag, Berlin, Germany, 2005.

[16] W. Diffie and M. E. Hellman. New directions in cryptography. IEEE Transactions on Information Theory, 22:644–654, 1978.

[17] Y. Dodis and N. Fazio. Public key broadcast encryption for stateless receivers. In Digital Rights Management Workshop, volume 2696 of Lecture Notes in Computer Science, pages 61–80. Springer-Verlag, Berlin, Germany, 2002.

[18] Y. Dodis and N. Fazio. Public key broadcast encryption secure against adaptive chosen ciphertext attack. In Y. Desmedt, editor, PKC 2003: 6th International Workshop on Theory and Practice in Public Key Cryptography, volume 2567 of Lecture Notes in Computer Science, pages 100–115, Miami, USA, Jan. 6–8, 2003. Springer-Verlag, Berlin, Germany.

[19] A. Fiat and M. Naor. Broadcast encryption. In D. Boneh, editor, Advances in Cryptology – CRYPTO’93, volume 773 of Lecture Notes in Computer Science, pages 22–26, Santa Barbara, CA, USA, Aug. 17–21, 1993. Springer-Verlag, Berlin, Germany.

[20] M. Freedman, E. Freudenthal, and D. Mazières. Democratizing content publication with Coral. In 1st USENIX/ACM Symposium on Networked Systems Design and Implementation, San Francisco, CA, March 2004. See http://www.coralcdn.org/.

[21] K. Fu. Group sharing and random access in cryptographic storage file systems. Master’s thesis, Massachusetts Institute of Technology, May 1999.

[22] K. Fu. Integrity and access control in untrusted content distribution networks. PhD thesis, Massachusetts Institute of Technology, September 2005.

[23] K. Fu, M. F. Kaashoek, and D. Mazières. Fast and secure distributed read-only file system. In 4th Symposium on Operating Systems Design and Implementation, 2000.

[24] K. Fu, S. Kamara, and T. Kohno. Key regression: Enabling efficient key distribution for secure distributed storage. Cryptology ePrint Archive http://eprint.iacr.org/: Report 2005/303, 2005. (Full version of this paper.)

[25] D. K. Gifford. Cryptographic sealing for information secrecy and authentication. Communications of the ACM, 25(4):274–286, 1982.

[26] E.-J. Goh. Secure indexes. Cryptology ePrint Archive http://eprint.iacr.org/: Report 2003/216, 2003.

[27] S. Goldwasser and S. Micali. Probabilistic encryption. Journal of Computer and System Sciences, 28(2):270–299, Apr. 1984.

[28] P. Golle, J. Staddon, and B. R. Waters. Secure conjunctive keyword search over encrypted data. In M. Jakobsson, M. Yung, and J. Zhou, editors, ACNS 04: 2nd International Conference on Applied Cryptography and Network Security, volume 3089 of Lecture Notes in Computer Science, pages 31–45, Yellow Mountain, China, June 8–11, 2004. Springer-Verlag, Berlin, Germany.

[29] N. M. Haller. The S/KEY one-time password system. In ISOC Symposium on Network and Distributed System Security, February 1994.

[30] A. Harrington and C. Jensen. Cryptographic access control in a distributed file system. In Proceedings of 8th ACM Symposium on Access Control Models and Technologies (SACMAT 2003), Villa Gallia, Como, Italy, June 2003.

[31] A. Joux. Multicollisions in iterated hash functions. Application to cascaded constructions. In M. Franklin, editor, Advances in Cryptology – CRYPTO 2004, volume 3152 of Lecture Notes in Computer Science, pages 306–316. Springer-Verlag, Berlin, Germany, 2004.

[32] M. Kallahalla, E. Riedel, R. Swaminathan, Q. Wang, and K. Fu. Plutus: Scalable secure file sharing on untrusted storage. In 2nd USENIX Conference on File and Storage Technologies, 2003.

[33] J. Kelsey and T. Kohno. Herding hash functions and the Nostradamus attack. Cryptology ePrint Archive http://eprint.iacr.org/: Report 2005/281, 2005.

[34] L. Lamport. Password authentication with insecure communication. Communications of the ACM, 24(11):770–771, November 1981.

[35] M. Luby and C. Rackoff. How to construct pseudorandom permutations from pseudorandom functions. SIAM Journal on Computing, 17(2), 1988.

[36] S. MacKinnon and S. G. Akl. New key generation algorithms for multilevel security. In SP ’83: Proceedings of the 1983 IEEE Symposium on Security and Privacy, page 72, Washington, DC, USA, 1983. IEEE Computer Society.

[37] Mandriva Linux. http://www.mandriva.com/en/community/users/club.

[38] S. Micali. Fair public-key cryptosystems. In E. F. Brickell, editor, Advances in Cryptology – CRYPTO, volume 740 of Lecture Notes in Computer Science, pages 113–138, Aug. 16–20, 1992.

[39] G. Miklau and D. Suciu. Controlling access to published data using cryptography. In International Conference on Very Large Data Bases, pages 898–909, September 2003.

[40] D. Naor, M. Naor, and J. Lotspiech. Revocation and tracing schemes for stateless receivers. In J. Kilian, editor, Advances in Cryptology – CRYPTO, volume 2139 of Lecture Notes in Computer Science, pages 41–62, Santa Barbara, CA, USA, Aug. 19–23, 2001.

[41] D. Naor, A. Shenhav, and A. Wool. Toward securing untrusted storage without public-key operations. In First International Workshop on Storage Security and Survivability, November 2005.

[42] D. Reed and L. Svobodova. Swallow: A distributed data storage system for a local network. In A. West and P. Janson, editors, Local Networks for Computer Communications, pages 355–373. North-Holland Publ., Amsterdam, 1981.

[43] R. L. Rivest, A. Shamir, and L. M. Adleman. A method for obtaining digital signatures and public-key cryptosystems. Communications of the ACM, 21(2):120–126, 1978.

[44] L. Rizzo. Dummynet: a simple approach to the evaluation of network protocols. SIGCOMM Comput. Commun. Rev., 27(1):31–41, 1997.

[45] Salon.com. http://www.salon.com/press/release/.

[46] Q. Snell, A. Mikler, and J. Gustafson. Netpipe: A network protocol independent performance evaluator. In IASTED International Conference on Intelligent Information Management and Systems, 1996.

[47] D. X. Song, D. Wagner, and A. Perrig. Practical techniques for searches on encrypted data. In IEEE Symposium on Security and Privacy, pages 44–55, 2000.

[48] J. Staddon, S. Miner, M. Franklin, D. Balfanz, M. Malkin, and D. Dean. Self-healing key distribution with revocation. In Proceedings of IEEE Symposium on Security and Privacy, 2002.

[49] X. Wang, Y. L. Yin, and H. Yu. Finding collisions in the full SHA-1. In V. Shoup, editor, Advances in Cryptology – CRYPTO 2005, volume 3621 of Lecture Notes in Computer Science. Springer-Verlag, Berlin, Germany, 2005.

[50] B. R. Waters, D. Balfanz, G. Durfee, and D. K. Smetters. Building an encrypted and searchable audit log. In ISOC Network and Distributed System Security Symposium (NDSS 2004), 2004.

[51] A. Yao. Theory and applications of trapdoor functions. In Proceedings of the 23rd IEEE Symposium on Foundations of Computer Science (FOCS ’82), 1982.