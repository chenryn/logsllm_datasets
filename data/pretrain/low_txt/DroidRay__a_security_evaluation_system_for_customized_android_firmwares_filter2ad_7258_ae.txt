### Table 10: Statistics of Infected Smartphones

| Metric | Value |
| --- | --- |
| Unique IMEI | 415,607 |
| Unique IMSI | 3,178 |
| Number of Phone Models | 568,072 |
| Unique IP Addresses | 561,657 |
| First Log Time | 2012-10 |
| Last Log Time | 2013-03 |

### 7. Related Work

In this section, we review relevant studies on Android malware, application security, and firmware security.

**Android Malware Analysis:**
- Enck et al. [8] introduced the Ded Decompiler and analyzed 1,100 Android applications, providing a framework for observing dangerous functionalities.
- Felt et al. [9] conducted a study on 18 Android malware samples.
- Jia et al. [18] explored runtime enforcement of information flow in Android applications.
- Yang et al. [33] discussed methods to enhance users' understanding of Android permissions.
- ADAM [35] and DroidChameleon [23] are systems designed to generate Android malware variants.
- Zhou et al. [40] provided a systematic study on detecting malicious applications in Android markets, identifying 211 malware instances.

**Repackaged Applications and Content Leaks:**
- DroidMOSS [37] uses fuzzy hashing to detect repackaged applications.
- ContentScope [39] aimed to identify passive content leaks and pollution in Android applications.
- SmartDroid [34] automatically reveals UI-based trigger conditions in Android apps.

**Malware Characterization and Evolution:**
- Zhou et al. [38] characterized and studied the evolution of Android malware using 1,260 samples.
- McNamee [21] demonstrated how to build a spyphone.

**Firmware Security:**
- Woodpecker [12] analyzed each application in smartphone firmware to explore the reachability of dangerous permissions from public, unguarded interfaces.
- Lei et al. [20] examined ten stock Android images from five popular vendors, identifying numerous security issues in pre-installed applications.
- XRay [28] is an app for scanning security vulnerabilities in the Android system but does not cover firmware.

Our work is the first detailed study that comprehensively addresses both pre-installed application security and system-level security in Android firmware. We conducted large-scale experiments on 250 Android firmwares and performed a detailed case study on infected firmwares.

### 8. Conclusion

As malware authors increasingly use firmware to distribute new threats, it is crucial to address this emerging distribution channel. We present "DroidRay," a security evaluation system for customized Android firmwares. The system employs both static and dynamic analyses to assess firmware security at the application and system levels. Our comprehensive study of 24,009 pre-installed applications and 250 Android firmware systems revealed that compromised firmwares can contaminate the system and inject new malware into devices. Key findings include:
- 1,947 (8.1%) pre-installed applications have signature vulnerabilities.
- 19 (7.6%) firmwares contain pre-installed malware.
- 142 (56.8%) Android firmwares have default signature vulnerabilities.
- Five (2.0%) Android firmwares contain malicious hosts files.
- Up to 40 (16.0%) Android firmwares have native-level privilege escalation vulnerabilities.
- At least 249 (99.6%) Android firmwares have Java-level privilege escalation vulnerabilities.

We also conducted a detailed investigation into a real-world pre-installed zero-day Android malware, CE-Plugnew, which affected 348,018 Android smartphones, revealing its geographical spread.

### References

[1] F. Adrienne, Porter, C. Erika, H. Steve, S. Dawn, and W. David. Android permissions demystified. In Proceedings of ACM Conference on Computer and Communications Security (CCS), 2011.

[2] C-skill. Gingerbreak. http://c-skills.blogspot.hk/2011/04/yummy-yummy-gingerbreak.html, 2011.

[3] C-skill. Rageagainstthecage. https://github.com/bibanon/android-development-codex/wiki/rageagainstthecage, 2011.

[4] A. Central. Android central (ROM market). http://www.androidcentral.com/tags/firmware, 2013.

[5] C. Daily. Low-end smartphone fight. http://www.chinadaily.com.cn/bizchina/2012smartphone/2012-07/16/content_15703750.htm, 2012.

[18] L. Jia, J. Aljuraidan, E. Fragkaki, L. Bauer, M. Stroucken, K. Fukushima, S. Kiyomoto, and Y. Miyake. Run-time enforcement of information-flow properties on Android (extended abstract). In Computer Securityâ€”ESORICS 2013: 18th European Symposium on Research in Computer Security, Sept. 2013.

[19] Jidi. ROM jidi (ROM market). http://www.romjd.com/, 2013.

[20] W. Lei, G. Michael, Z. Yajin, W. Chiachih, and J. Xuxian. The impact of vendor customizations on Android security. In Proceedings of ACM Conference on Computer and Communications Security (CCS), 2013.

[21] K. McNamee. How to build a spyphone. Blackhat, 2013.

[22] C. Mod. Cyanogen mod (ROM forum). http://www.cyanogenmod.org/, 2013.

[6] N. V. Database. CVE-2009-1185. http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2009-1185, 2009.

[23] V. Rastogi, Y. Chen, and X. Jiang. Droidchameleon: evaluating Android anti-malware against transformation attacks. In Proceedings of the ASIACCS '13.

[7] DownloadAndroidROM. Downloadandroidrom (ROM market). http://downloadandroidrom.com/, 2013.

[24] Revolutionary. Zergrush. http://forum.xda-developers.com/showthread.php?t=1296916, 2011.

[8] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A study of Android application security. In Proceedings of the 20th USENIX conference on Security, SEC'11, 2011.

[9] A. P. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wagner. A Survey of Mobile Malware in the Wild. In Proceedings of the 1st ACM workshop on Security and privacy in smartphones and mobile devices, 2011.

[10] Google. Android open source project. http://source.android.com, 2008.

[11] Google. VirusTotal. https://www.virustotal.com/, 2013.

[12] M. Grace, Y. Zhou, Z. Wang, and X. Jiang. Systematic Detection of Capability Leaks in Stock Android Smartphones. In Proceedings of the 19th Annual Network & Distributed System Security Symposium, 2012.

[25] saurik. Android bug superior to master key. http://www.saurik.com/id/18, 2009.

[26] saurik. Exploit and fix Android master key. http://www.saurik.com/id/17, 2009.

[27] saurik. Yet another Android master key bug. http://www.saurik.com/id/19, 2009.

[28] D. Security. Xray for Android. http://www.xray.io/#vulnerabilities.

[29] Shendu. ROM shendu (ROM market). http://www.shendu.com/android/, 2013.

[30] VR-ZONE. Research shows Chinese manufacturers account for 20 percent of smartphones worldwide, India on the rise. http://vr-zone.com/articles/research-shows-chinese-manufacturers-account-for-20-percent-of-smartphones-worldwide-india-on-the-rise/49868.html, 2013.

[13] I. D. C. (IDC). Apple cedes market share in smartphone operating system market as Android surges and Windows Phone gains, according to IDC. http://www.idc.com/getdoc.jsp?containerId=prUS24257413, 2013.

[31] D. Walker. Pay-per-install pays big bucks in the mobile world. http://www.scmagazine.com/pay-per-install-pays-big-bucks-in-the-mobile-world/article/258731/, 2012.

[14] G. Inc. Google Map APIs. http://developers.google.com/maps/, 2012.

[32] XDA. XDA-developers (ROM forum). http://www.xda-developers.com/, 2013.

[15] L. Inc. Security alert: Malware found targeting custom ROMs (jsmshider). https://blog.lookout.com/blog/2011/06/15/security-alert-malware-found-targeting-custom-roms-jsmshider/, 2011.

[16] Ipmart. Ipmart (ROM forum). http://www.ipmart-forum.com/forum.php, 2013.

[17] J. Janego. The security implications of custom Android ROMs. http://labs.neohapsis.com/2011/12/21/the-security-implications-of-custom-android-roms/, 2012.

[33] L. Yang, N. Boushehrinejadmoradi, P. Roy, V. Ganapathy, and L. Iftode. Short paper: Enhancing users' comprehension of Android permissions. In Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, SPSM '12, 2012.

[34] C. Zheng, S. Zhu, S. Dai, G. Gu, X. Gong, X. Han, and W. Zou. Smartdroid: An automatic system for revealing UI-based trigger conditions in Android applications. In Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, SPSM '12, 2012.

[35] M. Zheng, P. P. C. Lee, and J. C. S. Lui. ADAM: An automatic and extensible platform to stress test Android anti-virus systems. In Proceedings of the 9th international conference on Detection of Intrusions and Malware, and Vulnerability Assessment, DIMVA'12, 2013.

[36] Zhijia. ROM zhijia (ROM market). http://www.romzj.com/, 2013.

[37] W. Zhou, Y. Zhou, X. Jiang, and P. Ning. DroidMOSS: Detecting Repackaged Smartphone Applications in Third-Party Android Marketplaces. In Proceedings of the second ACM conference on Data and Application Security and Privacy, 2012.

[38] Y. Zhou and X. Jiang. Dissecting Android Malware: Characterization and Evolution. In Proceedings of the 33rd IEEE Symposium on Security and Privacy, 2012.

[39] Y. Zhou and X. Jiang. Detecting passive content leaks and pollution in Android applications. In Proceedings of the 20th Annual Symposium on Network and Distributed System Security, 2013.

[40] Y. Zhou, Z. Wang, W. Zhou, and X. Jiang. Hey, You, Get Off of My Market: Detecting Malicious Apps in Official and Alternative Android Markets. In Proceedings of the 19th Annual Network & Distributed System Security Symposium, 2012.

[41] H. Z. Zihang Xiao, Qing Dong, and X. Jiang. Oldboot: The first bootkit on Android. http://blogs.360.cn/360mobile/2014/01/17/oldboot-the-first-bootkit-on-android/, 2014.