### Figures and Captions

**Figure 8: Impact of Dynamicity in X-REC**
- **(a) ML-Large**
  - Y-axis: Threads
  - X-axis: Values (2.4, 2.2, 2, 1.8, 1.6, 1.4, 1.2, 1, 0, 5, 10, 15, 20, 25, 30, 35, 40)
- **(b) FilmTrust**
  - Y-axis: Threads
  - X-axis: Values (2.4, 2.2, 2, 1.8, 1.6, 1.4, 1.2, 1, 0, 5, 10, 15, 20, 25, 30, 35, 40)

**Figure 9: End-User Latency Comparison with Non-Private (NX-REC) [27] and Fully Private (FHE) [5] Systems**
- **Y-axis: Logarithmic Scale (10^8 to 10^0)**
- **X-axis: Logarithmic Scale (10^8 to 10^0)**

**Figure 10: Security Comparison with J-REC**
- **(a) Bit Security**
  - Y-axis: Logarithmic Scale (10^6 to 10^0)
  - X-axis: Schemes (EX, MITM, BKW)
- **(b) Attacker Runtime**
  - Y-axis: Logarithmic Scale (10^2 to 10^0)
  - X-axis: Schemes (BDD)

### VII. Related Work

**Server-based Recommenders**
Most server-based privacy-aware recommenders allow third parties, other than the users themselves, to access rating profiles [16, 17, 35, 38–40]. These systems often assume that these third parties are not curious, which is a significant system-level privacy concern. These third parties provide middleware services either as an intermediary agent between the recommender and users (e.g., Alambic [17]) or as a super-peer aggregating plaintext data among users [35]. User preferences can be exposed in plaintext to these parties, such as the broker in Privad [38], the ad-network and advertisers in Adnostic [16], and a secure co-processor in Obliviad [39]. In Ptwitterrec [40], a tweet recommender, the server could learn a user’s proximity to the publisher of some tweet.

**Privacy-Preserving Server-Based Recommenders**
These systems rely on certain computations performed by users to recommend items [11, 13, 24]. These user-dependent computations impact latency, as a user needs to wait for other users to log in, and the communication may be unreliable. Additionally, recommendation quality is affected if the server does not wait for a sufficient number of similarity computations with other users. For example, in the friend-based recommender J-REC [24], the server requires at least one friend to be online for the similarity computation between two friends. Nikolaenko’s garbled-circuits-based solution [13] requires circuits to be built collaboratively by all users. In contrast, X-REC allows users to log in at any time, thereby avoiding potential delays.

**Serverless Recommenders**
These approaches rely on other users to recommend items. Canny suggested ratings encrypted under an unknown secret-shared master key, which requires joint decryption of personalized recommendations [9]. Hoens et al. predict ratings by combining friends’ encrypted ratings using joint multiplication and division [10]. Such joint operations require the participation of all users and induce a latency overhead, which does not occur in X-REC.

**Encryption Schemes**
The closest encryption scheme to our implementation of X-HE is Zhou et al.’s homomorphic encryption scheme (denoted by Z) with key-switching techniques [41]. However, Z does not support negation and comparison operations, making it unsuitable for recommenders like X-HE. Additionally, Z is not semantically secure [30], while X-HE is, and therefore does not provide system-level privacy. The encryption schemes considered in encrypted databases [42, 43] do not perform computation over different users’ data. Although CRYPTDB [42] and SCONEDB [43] provide comparison schemes, neither fits our privacy goal: CRYPTDB reveals the two numbers in comparison to users (violating user-level privacy), and SCONEDB reveals the two numbers to the servers (violating system-level privacy).

**Randomization and Differential Privacy**
Polat et al. rely on randomized perturbation techniques [44] to preserve user-level privacy. However, such techniques do not always meet privacy expectations [45]. To formally express privacy guarantees, (approximate) differential privacy [15] was proposed, originally in the context of databases. X-REC guarantees approximate differential privacy, applied to user profiles in a recommender where users do not revisit their past ratings (thus, our notion of user-level privacy does not consider updating or removing ratings). McSherry et al.’s recommender adds noise to the item covariance matrix [14], while D2P [46] leverages a technique that probabilistically replaces items with similar ones. Both approaches, however, are implemented based on the knowledge of user profiles, revealing actual user preferences to the service provider and users colluding with the service provider, violating system-level privacy. X-REC guarantees approximate differential privacy by leveraging the encrypted profiles of uniformly sampled users.

### VIII. Concluding Remarks

We present X-REC, a novel recommender that protects the profile of a user against the service provider (system-level privacy) and other users (user-level privacy). X-REC induces minimal latency while providing good recommendation quality. It achieves this without restricting the ability of users to log in or out at any time (dynamicity). Moreover, X-REC leverages uniform sampling of users to guard against curious users and ensure differential privacy.

### References

[1] X. Su and T. M. Khoshgoftaar, “A survey of collaborative filtering techniques,” in AAI’09, pp. 1–19.
[2] C. Sabottke, O. Suciu, and T. Dumitras, “Vulnerability disclosure in the age of social media: exploiting twitter for predicting real-world exploits,” in USENIX Security’15, pp. 1041–1056.
[3] N. Ramakrishnan, B. J. Keller, B. J. Mirza, A. Y. Grama, and G. Karypis, “Privacy risks in recommender systems,” in IC’01, pp. 54–62.
[4] C. Gentry, “A fully homomorphic encryption scheme,” Ph.D. dissertation, Stanford University, 2009.
[5] K. Rohloff and D. B. Cousins, “A Scalable Implementation of Fully Homomorphic Encryption Built on NTRU,” in FC’14, pp. 221–234.
[6] MovieLens dataset, 2003, http://grouplens.org/datasets/movielens/.
[7] G. Guo, J. Zhang, and N. Yorke-Smith, “A novel Bayesian similarity measure for recommender systems,” in IJCAI’13, pp. 2619–2625.
[8] M. Bellare, A. Desai, E. Jokipii, and P. Rogaway, “A concrete security treatment of symmetric encryption,” in FOCS’97, pp. 394–403.
[9] J. Canny, “Collaborative filtering with privacy,” in SP’02, pp. 45–57.
[10] T. R. Hoens, M. Blanton, and N. V. Chawla, “A private and reliable recommendation system for social networks,” in SOCIALCOM’10, pp. 816–825.
[11] Z. Erkin, M. Beye, T. Veugen, and R. L. Lagendijk, “Efficiently computing private recommendations,” in ICASSP’11, pp. 5864–5867.
[12] A. Ben-David, N. Nisan, and B. Pinkas, “FairplayMP: A system for secure multi-party computation,” in CCS ’08, pp. 257–266.
[13] V. Nikolaenko, S. Ioannidis, U. Weinsberg, M. Joye, N. Taft, and D. Boneh, “Privacy-preserving matrix factorization,” in CCS ’13, 2013, pp. 801–812.
[14] F. McSherry and I. Mironov, “Differentially private recommender systems: Building privacy into the net,” in SIGKDD’09, pp. 627–636.
[15] C. Dwork, “A firm foundation for private data analysis,” in CACM’11, pp. 86–95.
[16] S. Guha, B. Cheng, and P. Francis, “Privad: Practical privacy in online advertising,” in NSDI’11, pp. 169–182.
[17] E. Aimeur, G. Brassard, J. M. Fernandez, and F. S. M. Onana, “Alambic: a privacy-preserving recommender system for electronic commerce,” in IJISEC’08, pp. 307–334.
[18] M. Van Dijk and A. Juels, “On the impossibility of cryptography alone for privacy-preserving cloud computing.” in HotSec’10, pp. 1–8.
[19] “X-Rec Technical Report and Demo,” https://rpatra.github.io/x-rec/.
[20] G. Linden, B. Smith, and J. York, “Amazon.com recommendations: Item-to-item collaborative filtering,” in IC’03, pp. 76–80.
[21] “FUNKSVD,” http://lenskit.org/documentation/algorithms/svd/.
[22] Y. Koren, “Factorization meets the neighborhood: a multifaceted collaborative filtering model,” in SIGKDD’08, pp. 426–434.
[23] D. Lemire and A. Maclachlan, “Slope one predictors for online rating-based collaborative filtering,” in SDM’05, pp. 1–5.
[24] A. Jeckmans, A. Peter, and P. Hartel, “Efficient privacy-enhanced familiarity-based recommender system,” in ESORICS’13, pp. 400–417.
[25] B. Sarwar, G. Karypis, J. Konstan, and J. Riedl, “Item-based collaborative filtering recommendation algorithms,” in WWW’01, pp. 285–295.
[26] J. A. Calandrino, A. Kilzer, A. Narayanan, E. W. Felten, and V. Shmatikov, “You might also like: Privacy risks of collaborative filtering,” in SP’11, pp. 231–246.
[27] J. Herlocker, J. A. Konstan, and J. Riedl, “An empirical analysis of design choices in neighborhood-based collaborative filtering algorithms,” Information retrieval, vol. 5, no. 4, pp. 287–310, 2002.
[28] X. Amatriain, “Big & personal: data and models behind Netflix recommendations,” in BigMine’13, pp. 1–6.
[29] R. Canetti, “Security and composition of multiparty cryptographic protocols,” Journal of Cryptology, vol. 13, no. 1, pp. 143–202, 2000.
[30] O. Goldreich, Foundations of Cryptography. Cambridge University Press, 2004.
[31] O. Regev, “On lattices, learning with errors, random linear codes, and cryptography,” in JACM’09, p. 34.
[32] R. Lindner and C. Peikert, “Better key sizes (and attacks) for LWE-based encryption,” in CT-RSA ’11, pp. 319–339.
[33] M. R. Albrecht, R. Player, and S. Scott, “On the concrete hardness of learning with errors,” in Cryptology ePrint Archive’15, pp. 169–203.
[34] M. Albrecht, C. Cid, J.-C. Faugre, R. Fitzpatrick, and L. Perret, “On the complexity of the BKW algorithm on LWE,” Designs, Codes and Cryptography, vol. 74, no. 2, pp. 325–354, 2015.
[35] A. M. Elmisery and D. Botvich, “Enhanced middleware for collaborative privacy in IPTV recommender services,” in JoC’11, pp. 33–42.
[36] S. K. L. Al Mamunur Rashid, G. Karypis, and J. Riedl, “ClustKNN: a highly scalable hybrid model-& memory-based CF algorithm,” in WebKDD’06, pp. 147–166.
[37] A. K. Lenstra, “Key lengths,” in The Handbook of Information Security, 2004.
[38] V. Toubiana, A. Narayanan, D. Boneh, H. Nissenbaum, and S. Barocas, “Adnostic: Privacy Preserving Targeted Advertising.” in NDSS’10.
[39] M. Backes, A. Kate, M. Maffei, and K. Pecina, “Obliviad: Provably secure and practical online behavioral advertising,” in S&P ’12, pp. 257–271.
[40] B. Liu and U. Hengartner, “pTwitterRec: A privacy-preserving personalized tweet recommendation framework,” in ASIA CCS ’14, pp. 365–376.
[41] H. Zhou and G. Wornell, “Efficient homomorphic encryption on integer vectors and its applications,” in ITA’14, pp. 1–9.
[42] R. A. Popa, C. Redfield, N. Zeldovich, and H. Balakrishnan, “CryptDB: Processing queries on an encrypted database,” in CACM’12, pp. 103–111.
[43] W. K. Wong, D. W.-l. Cheung, B. Kao, and N. Mamoulis, “Secure kNN computation on encrypted databases,” in SIGMOD ’09, pp. 139–152.
[44] H. Polat and W. Du, “Privacy-preserving collaborative filtering using randomized perturbation techniques,” in ICDM ’03, pp. 625–628.
[45] S. Zhang, J. Ford, and F. Makedon, “Deriving private information from randomly perturbed ratings.” in SIAM’06, pp. 59–69.
[46] R. Guerraoui, A.-M. Kermarrec, R. Patra, and M. Taziki, “D2P: distance-based differential privacy in recommenders,” in VLDB ’15, pp. 862–873.