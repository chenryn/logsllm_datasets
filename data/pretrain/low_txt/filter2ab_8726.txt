**Title: The Firmware Supply-Chain Security Is Broken: Can We Fix It?**

In today's hardware industry, it is rare to find a vendor that develops all the components in its products. Many of these components, including firmware, are outsourced to Original Design Manufacturers (ODMs). This outsourcing limits the control that hardware vendors have over their products, creating additional supply chain security risks and introducing gaps in the threat modeling process.

Our research aims to raise awareness about the risks in the firmware supply chain and the challenges involved in addressing known vulnerabilities. Firmware patch cycles typically last 6-9 months, and sometimes even longer, due to the complexity of the supply chain and the lack of a standardized patching process. This extended timeline can leave enterprises vulnerable, as they may not have installed the latest firmware update or the device vendor may not have released a patch yet. Each vendor follows its own patch cycle, and even known issues may remain unpatched until the next firmware update is available.

To address these challenges, we have developed an open-source framework that identifies known vulnerabilities specific to UEFI, classifies them based on their impact, and detects them across the firmware ecosystem. This framework leverages the Linux Vendor Firmware Service (LVFS) project. We will be sharing our approach and the tools we have created to help the industry identify and mitigate these problems, ultimately leading to more secure firmware updates.

**Key Points:**
- **Outsourcing Risks:** Hardware vendors often outsource firmware development to ODMs, limiting their control and introducing security risks.
- **Patch Cycle Delays:** Firmware patch cycles can take 6-9 months or longer, leaving enterprises vulnerable to 1-day and n-day vulnerabilities.
- **Lack of Standardization:** The absence of a uniform patching process and varying vendor patch cycles exacerbate the problem.
- **Open-Source Solution:** Our framework, built with LVFS, helps identify, classify, and detect UEFI-specific vulnerabilities, aiding in faster and more effective patching.