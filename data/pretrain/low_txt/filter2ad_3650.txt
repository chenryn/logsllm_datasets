# Demo Overview: Privacy-Enhancing Features of IdentiDroid

**Authors:**
- Daniele Midi, Purdue University, daniele@purdue.edu
- Oyindamola Oluwatimi, Purdue University, oyindamola@purdue.edu
- Bilal Shebaro, Purdue University, bilal@purdue.edu
- Elisa Bertino, Purdue University, elisa@purdue.edu

## Abstract
Privacy is a major concern for mobile systems, and while network anonymizers are widely available on smartphones, applications can still identify users and devices through means other than IP addresses. In this demo, we present two solutions that provide application-level anonymity. The first solution shadows sensitive data that can reveal user identity, and the second solution dynamically revokes Android application permissions associated with sensitive information at runtime. Both solutions also protect against applications that identify users through traces left in their data storage or by exchanging identifying data messages. We developed IdentiDroid, a customized Android operating system, to deploy these solutions, and created the IdentiDroid Profile Manager, a profile-based configuration tool for setting different configurations for each installed Android application.

## 1. Introduction
The widespread use of mobile smartphones has raised significant privacy concerns, as these devices can disclose users' locations, movements, and habits. While network anonymizers such as Tor [2] and secure VPN services like Hotspot Shield [1] are available, they do not fully address all privacy issues. Applications can still identify users and devices using information other than IP addresses [8]. For example, an Android phone user connected to the Tor network and running the Pandora app may still be identified through the Contacts list or device ID. Ensuring privacy on mobile devices requires application-level anonymizers in addition to network anonymizers.

As discussed by Shebaro et al. [7], effective anonymity mechanisms should meet the following requirements:
1. Applications should not bypass data access restrictions.
2. No source code modifications should be required for application developers.
3. Anonymity restrictions should be fully customizable per application.
4. The approach should not introduce significant delays affecting system performance.

In this demo, we demonstrate IdentiDroid, a customized Android operating system that integrates two solutions addressing these requirements [7].

## 2. Related Work
Previous approaches to ensuring the privacy of personally identifying information (PII) on smartphones have focused on privacy risks from permissions granted to applications upon installation. These approaches help identify and reduce privacy risks [6, 3] but do not protect all information that could lead to user or device re-identification, such as user data in applications' data storage. Other approaches have focused on privacy risks from over-privileged applications and tools to identify applications violating the least privilege security principle [4, 5]. However, these tools are insufficient because anonymity can still be broken even with minimally granted permissions, due to the lack of protection for all PII or the fact that applications store PII within their own data storage space.

## 3. Sensitive Data and Permissions
We define "sensitive data" as any information that can uniquely identify a device or its user, either as identifiers (self-identification variables) or quasi-identifiers (that can re-identify a user or device when combined with other data). Sensitive data is categorized into four groups:
1. **System Information**: Information about the system state and identity.
2. **User Data**: Common data generated by the user, such as contacts and SMSs.
3. **Resources**: Resources provided by the device, such as camera and GPS.
4. **Application Data**: Data stored and managed autonomously by the applications.

To execute functions involving the phone hardware, settings, or user data, specific permissions must be granted. We define "sensitive permissions" as those that, when granted, permit access to sensitive data and resources.

## 4. Overview of IdentiDroid
IdentiDroid includes two main solutions: Data Shadowing and Dynamic Permission Management [7]. Both solutions include additional features: Fresh Start and Intent Filtering. Fresh Start prevents applications from leaving identifying information within their own data storage, while Intent Filtering prevents applications from exchanging messages during anonymous sessions. We implemented these solutions on the Android operating system as part of a comprehensive anonymity system, called IdentiDroid. We integrated our solutions within the Android application framework layer to ensure that no applications can bypass the constraints applied by IdentiDroid (see Figure 1).

### 4.1 Data Shadowing
Data shadowing obfuscates identifying data by replacing it with data that does not represent the user or device. When an application requests access to identifying data or resources, the call is intercepted, and the returned data is randomized. This applies to:
- **Device Information**: Fake values for IMEI, Phone Number, WiFi MAC Address, Android ID, etc.
- **User Databases**: Empty lists of database records for phone contacts, SMS/MMS, calendar, music, videos, browser bookmarks/history, and accounts.
- **Resources**: Fake values or ignored requests, depending on the application's method of access.

### 4.2 Dynamic Permission Management
Dynamic Permission Management controls applications' access to sensitive permissions at runtime. Even though Android applications are granted all required permissions at installation time, our solution can dynamically block permissions when required at runtime by intercepting permission calls and denying them.

### 4.3 Fresh Start Feature
Fresh Start prevents applications from identifying users by leaving traces within their own data storage. This feature can be activated per-application and makes applications believe they are running on a device for the first time by temporarily relocating their data files to an inaccessible directory. It also deletes the application's cache data, terminates related running processes, and denies access to external storage during anonymous sessions.

### 4.4 Intent Filtering Feature
Intent Filtering manages data and messages exchanged between applications, blocking the exchange of identifying data during anonymous sessions. This feature prevents cooperative applications from circumventing anonymity through message exchanges.

### 4.5 IdentiDroid Profile Manager
The IdentiDroid Profile Manager (Figure 2) allows users to configure profiles, each consisting of a set of customized configurations for every installed Android application. These configurations apply once a user activates a profile and should be used in conjunction with the connection to an anonymous network. Users can configure these profiles to use either one of the anonymity solutions and customize them per application.

## 5. Demonstration
We deployed IdentiDroid on the latest Android Google Nexus 7 tablet and the Google Nexus 4 phone to compare device anonymity behavior before and after using IdentiDroid. For anonymity networks, we used Tor and Hotspot Shield, two popular anonymous communication techniques available for Android devices. The audience will see the following:

- **Profile Configuration**: Using a real smartphone running our customized Android operating system, we will demonstrate how to configure anonymous profiles via the Profile Manager application. We will illustrate the different settings provided by our system for the various solutions and features it offers.
- **Threats on Anonymous Networks**: We will demonstrate how the use of anonymous networks is not sufficient to prevent user re-identification by applications. We will show how different sensitive data and resources can constitute identifying information by running applications that can identify a user over multiple sessions, even when network anonymizers are in use.
- **Anonymous Sessions**: By activating one of the configured anonymous profiles, we will demonstrate how the problem is solved by the solutions deployed by IdentiDroid. We will use profiles that leverage only Data Shadowing, only Permission Management, and a combination of both.
- **Fresh Start**: We will showcase the effects of Fresh Start on applications. Applications that locally store information for user re-identification will be shown to run as freshly-installed during anonymous sessions, while retaining all the original data once switched back to non-anonymous mode.
- **Intent Filtering**: We will show how message exchange between applications can leak identifying information. Viewers will see how Intent Filtering can protect against such leakage.

## 6. Conclusions
In this demo, we present several features of IdentiDroid, a customized Android operating system that protects the user's identity from applications, addressing the limitations of solutions based only on network anonymizers. IdentiDroid includes two mechanisms for privacy protection: one based on shadowing sensitive data and the other on dynamically blocking permissions at runtime. Each mechanism can be combined with Fresh Start and Intent Filtering features. Our demo provides two important contributions: (1) we illustrate the architecture of the IdentiDroid system, and (2) we demonstrate how to configure anonymous profiles and show the effectiveness of our mechanisms and additional features in preventing users from being re-identified by applications. Experimental results show the effectiveness of these solutions in protecting sensitive data and preventing user or device identification. For more details, we refer the reader to the paper by Shebaro et al. [7].

## Acknowledgments
This work was partially supported by the Purdue Cyber Center and the National Science Foundation under grants CNS-1111512 and CNS-1016722.

## References
[1] AnchorFree, Inc. Hotspot shield. http://www.anchorfree.com.
[2] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The second-generation onion router. In Proceedings of the 13th Conference on USENIX Security Symposium - Volume 13, SSYM’04, pages 21–21, 2004.
[3] W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung, P. McDaniel, and A. N. Sheth. Taintdroid: An information-flow tracking system for realtime privacy monitoring on smartphones. In Proceedings of the 9th USENIX Conference on Operating Systems Design and Implementation, OSDI’10, pages 1–6, 2010.
[4] A. P. Felt, K. Greenwood, and D. Wagner. The effectiveness of application permissions. In Proceedings of the 2Nd USENIX Conference on Web Application Development, WebApps’11, pages 7–7, 2011.
[5] C. Gibler, J. Crussell, J. Erickson, and H. Chen. Androidleaks: Automatically detecting potential privacy leaks in android applications on a large scale. In Proceedings of the 5th International Conference on Trust and Trustworthy Computing, TRUST’12, pages 291–307, 2012.
[6] P. Hornyack, S. Han, J. Jung, S. Schechter, and D. Wetherall. These aren’t the droids you’re looking for: Retrofitting android to protect data from imperious applications. In Proceedings of the 18th ACM Conference on Computer and Communications Security, CCS ’11, pages 639–652, 2011.
[7] B. Shebaro, O. Oluwatimi, D. Midi, and E. Bertino. Identidroid: Android can finally wear its anonymous suit. Trans. Data Privacy, 7(1):27–50, Apr. 2014.
[8] The Tor Project. Want tor to really work? https://www.torproject.org.

**Figures:**
- **Figure 1**: IdentiDroid Architecture
- **Figure 2**: Configuration of Anonymous Profiles via the Profile Manager