### Members' Anonymity and Unlinkability

Members remain anonymous and unlinkable. This scheme also supports backward unlinkability for revoked members, assuming the Decisional Diffie-Hellman (DDH) problem is hard. Without knowing the exponents, if one can determine whether \(\log_g D_1 = \log_{g'} D_2\) given two revocation tokens in different signatures \((g^a, g'^b)\) and \((D_1, D_2)\), then they can solve the DDH problem.

### Time-Limited Revocation

With \(O(\log T)\) storage overhead, Scheme II can be extended to allow time-limited revocation, meaning a group member's signatures are only revoked during specific time periods. The basic idea is to generate the sequence \(e_{u,0}, \ldots, e_{u,T}\) using a top-down one-way tree instead of a one-way chain. The sequence \(e_{u,0}, \ldots, e_{u,T}\) forms the leaf nodes in the top-down one-way tree. Knowing the root, one can generate the entire tree; knowing an internal node, one can generate the entire subtree but not any other nodes in the tree. When the group manager wants to revoke a group member \(U\)'s signature from time period \(t_1\) to \(t_2\), they reveal the internal nodes that serve as the roots of the subtrees covering the time periods from \(t_1\) to \(t_2\). Any user can then compute \(e_{u,i}\) for \(t_1 \leq i \leq t_2\) and check whether a signature is revoked.

### Discussion

Our two forward-secure group signature schemes are based on the group signature scheme proposed in [3] and use different one-way functions to evolve the group signing keys, achieving forward security. The schemes have different performance and security trade-offs:

- **Scheme I**:
  - Efficient EVOLVE procedure (only requiring a squaring).
  - Less efficient signing and verification (requiring \(O(T)\) squarings).
  - Proven to satisfy weak forward security.
  - Requires a new cryptographic assumption for revocation with backward unlinkability.

- **Scheme II**:
  - Efficient signing and verification procedures.
  - No extra overhead compared to the non-forward-secure group signature scheme in [3].
  - Less efficient EVOLVE procedure (requiring \(O(T)\) exponentiations), but techniques from [24] can reduce this overhead with a storage space trade-off.
  - Supports strong forward security.
  - More flexible time-limited group membership.
  - More efficient revocation mechanism.
  - Does not require new cryptographic assumptions for security.

Both schemes ensure that even if an attacker learns a group member \(U\)'s group signing key for time period \(i\), they cannot identify which signatures generated before time period \(i\) were generated by \(U\). All \(U\)'s signatures before time period \(i\) remain anonymous and unlinkable.

### Conclusion

In this paper, we present our forward-secure group signature schemes, which satisfy forward security and all traditional security properties shared with previous group signature schemes. Our schemes are efficient, independent of the number of group members, and the size of signatures and group keys is independent of the number of time periods during the lifetime of the group public key. We extend our schemes to provide the first solutions for retroactive-publicly-revokable group membership with backward unlinkability, where the signature size is independent of the number of revoked members.

Our approach highlights the importance of forward security in group signature schemes, not only because the risk of signing key exposure increases with group size, but also because forward security enables other desired security properties at little extra cost, such as time-limited group membership and retroactive revocation. Even if an attacker learns a group member \(U\)'s group signing key for time period \(i\), they still cannot identify which signatures generated before time period \(i\) were generated by \(U\).

### Acknowledgements

We would like to thank Giuseppe Ateniese and Gene Tsudik for their many helpful discussions and contributions to section 5 (and particularly section 5.4). We also thank anonymous reviewers for their feedback, Doug Tygar and Adrian Perrig for their encouragement and help on the paper.

### References

[1] Michel Abdalla and Leonid Reyzin. A new forward-secure digital signature scheme. In ASIACRYPT, pages 116–129, 2000.

[2] Ross Anderson. Invited Lecture, 4th ACM Computer and Communications Security, 1997.

[3] Giuseppe Ateniese, Jan Camenisch, Marc Joye, and Gene Tsudik. A practical and provably secure coalition-resistant group signature scheme. In M. Bellare, editor, Advances in Cryptology - CRYPTO 2000, pages 255–270. Springer-Verlag, 2000. Lecture Notes in Computer Science Volume 1880.

[4] Giuseppe Ateniese and Gene Tsudik. Some open issues and new directions in group signatures. In Financial Crypto 1999. Springer-Verlag, 1999.

[5] N. Baric and B. Pfitzmann. Collision-free accumulators and fail-stop signature schemes without trees. In Advances in Cryptology - EUROCRYPT 1997, pages 480–494. Springer-Verlag, 1997. Lecture Notes in Computer Science Volume 1233.

[6] Mihir Bellare and Sara Miner. A forward-secure digital signature scheme. In Advances in Cryptology - CRYPTO’99, 1999.

[7] D. Boneh. The decision Diffie-Hellman problem. In Proceedings of the Third Algorithmic Number Theory Symposium, pages 48–63. Springer-Verlag, 1998. Lecture Notes in Computer Science Volume 1423.

[8] F. Boudot. Efficient proofs that a committed number lies in an interval. In B. Preneel, editor, Advances in Cryptology - EUROCRYPT 2000, pages 431–444, Berlin, 2000. Springer-Verlag. Lecture Notes in Computer Science Volume 1807.

[19] I. Damgard. Efficient concurrent zero-knowledge in the auxiliary string model. In B. Preneel, editor, Advances in Cryptology - EUROCRYPT 2000, pages 431–444, Berlin, 2000. Springer-Verlag. Lecture Notes in Computer Science Volume 1807.

[20] W. Diffie and M. E. Hellman. New directions in cryptography. IEEE Transactions on Information Theory, 6(IT-22):644–654, 1976.

[21] A. Fiat and A. Shamir. How to prove yourself: practical solutions to identification and signature problems. In A. M. Odlyzko, editor, Advances in Cryptology - Crypto ’86, pages 186–194, Berlin, 1986. Springer-Verlag. Lecture Notes in Computer Science Volume 263.

[22] E. Fujisaki and T. Okamoto. Statistical zero-knowledge protocols to prove modular polynomial relations. In B. Kaliski, editor, Advances in Cryptology - Crypto ’97, pages 16–30, Berlin, 1997. Springer-Verlag. Lecture Notes in Computer Science Volume 1294.

[23] A. Herzberg, M. Jarecki, H. Krawczyk, and M. Yung. Proactive secret sharing or: How to cope with perpetual leakage. In Advances in Cryptology - CRYPTO’95. Springer-Verlag, 1995. Lecture Notes in Computer Science Volume 1807.

[24] Gene Itkis and Leonid Reyzin. Forward-secure signatures with optimal signing and verifying. In To Appear in CRYPTO 2001, 2001.

[9] Stefan Brands. An efficient off-line electronic cash system based on the representation problem. Technical Report CS-R9323, CWI, 1993.

[10] Emmanuel Bresson and Jacques Stern. Efficient revocation in group signatures. In Proceeding of Public Key Cryptography (PKC 2001), 2001.

[11] J. Camenisch and M. Michels. A group signature with improved efficiency. In Advances in Cryptology - ASIACRYPT ’98, pages 160–174, Berlin, 1998. Springer-Verlag. Lecture Notes in Computer Science Volume 1514.

[27] A. Lysyanskaya and Z. Ramzan. Group blind digital signatures: A scalable solution to electronic cash. In Financial Cryptography (FC’98), pages 184–197. Springer-Verlag, 1998. Lecture Notes in Computer Science Volume 1465.

[12] J. Camenisch and M. Michels. Separability and efficiency for generic group signature schemes. In M. Wiener, editor, Advances in Cryptology - Crypto ’99, pages 413–430, Berlin, 1999. Springer-Verlag. Lecture Notes in Computer Science Volume 1666.

[13] J. Camenisch and M. Stadler. Efficient group signature schemes for large groups. In B. Kaliski, editor, Advances in Cryptology - CRYPTO’97, pages 410–424. Springer-Verlag, 1997. Lecture Notes in Computer Science Volume 1296.

[14] D. Chaum. Zero-knowledge undeniable signatures (extended abstract). In Ivan B. Damgard, editor, Advances in Cryptology - EuroCrypt ’90, pages 458–464, Berlin, 1990. Springer-Verlag. Lecture Notes in Computer Science Volume 473.

[15] D. Chaum, J. H. Evertse, and J. van de Graaf. An improved protocol for demonstrating possession of discrete logarithms and some generalizations. In David Chaum and Wyn L. Price, editors, Advances in Cryptology - EuroCrypt ’87, pages 127–142, Berlin, 1987. Springer-Verlag. Lecture Notes in Computer Science Volume 304.

[16] D. Chaum and E. van Heyst. Group signatures. In Donald W. Davies, editor, Advances in Cryptology - EuroCrypt ’91, pages 257–265, Berlin, 1991. Springer-Verlag. Lecture Notes in Computer Science Volume 547.

[17] D. Chaum and T. P. Pedersen. Wallet databases with observers. In Ernest F. Brickell, editor, Advances in Cryptology - Crypto ’92, pages 89–105, Berlin, 1992. Springer-Verlag. Lecture Notes in Computer Science Volume 740.

[18] L. Chen and T. P. Pedersen. New group signature schemes. In Alfredo De Santis, editor, Advances in Cryptology - EuroCrypt ’94, pages 171–181, Berlin, 1995. Springer-Verlag. Lecture Notes in Computer Science Volume 950.

[29] C. P. Schnorr. Efficient identification and signatures for smart cards. In Jean-Jacques Quisquater and Joos Vandewalle, editors, Advances in Cryptology - EuroCrypt ’89, pages 688–689, Berlin, 1989. Springer-Verlag. Lecture Notes in Computer Science Volume 434.

### Appendix: Security Analysis

We provide here the proofs of the lemmas stated in the paper. The proofs are related to proofs in [3]. The proof for Lemma 3 is similar to the proof in Lemma 2. The proofs for Lemma 4 and 5 are similar to the proofs in [3]. Corollary 1 and 2 can be easily proven from the lemmas. Therefore, we omit the proofs for Lemma 2, 4, and 5 and Corollary 1 and 2 here.

**Lemma 1**: \(PK\{(α, β, δ, \lambda) : d_2 = (A_{2T-j+1})^\alpha (1/(g_2))^\delta \land \beta \in \Gamma \land \alpha \in \Lambda\}(m) \land B_2 = (g_2)^\lambda \land 1 = (B_{2T-j+1})^\alpha (1/(a_2))^\beta (1/(y_2))^\delta\) is a statistical zero-knowledge proof of knowledge of a group signing key valid for time period \(j\).

**Proof Sketch**: It is easy to see that the protocol is statistical zero-knowledge. Now we show how to build a knowledge extractor for the group signing key. Under the properties of the PK protocols and under the strong RSA assumption, the knowledge extractor can produce values \(\alpha, \beta, \delta, \lambda\) such that the statement after the colon holds. In particular, from \(B_2 = (g_2)^\lambda\) and \(1 = (B_{2T-j+1})^\alpha (1/(g_2))^\delta\), we get that \(\delta \equiv 2T-j\alpha\lambda \mod \text{ord}(g)\). Furthermore, we have \(d_2(a_2)^\beta = \alpha\). As \(\beta \in \Gamma, \alpha \in \Lambda\), \((A_2/(y_2)^\lambda, \alpha, \beta, \gamma)\) is a valid group signing key for time period \(j\). Hence, the signer must know a valid group signing key for time period \(j\).

**Lemma 2**: In Scheme I, under the strong RSA assumption, a group signing key for some time period \(t\), \((x_u, e_u, c_u)\) where \(c_u = d^{a x_u} \mod n\) and \(x_u \in \Gamma, e_u \in \Lambda\), can only be generated by the group manager given that the number of group signing keys the group manager issues is polynomially bounded.

**Proof Sketch**: Let \(M\) be an attacker that is allowed to adaptively run the JOIN procedure and thereby obtain group signing keys \(\{(x_i, e_i, c_i)\}_{1 \leq i \leq K}\) where \(d = a x_i c_i^{e_i} \mod n\). We show in the following that if \(M\) outputs a tuple \((\hat{x}, \hat{e}, \hat{c}, t)\) with \(\hat{x} \in \Gamma, \hat{e} \in \Lambda, d^{\hat{a} \hat{x}} = \hat{c}^{2T-t} \hat{e} \mod n\), and \((\hat{x}, \hat{e}) \neq (x_i, e_i)\) for all \(1 \leq i \leq K\), i.e., a new group signing key valid for time period \(t\), with non-negligible probability, then we can use \(M\) to break the strong RSA assumption.

Given a pair \((n, z)\), where \(n\) is the product of two safe primes and \(z \in \text{QR}_n\), and we would like to solve the strong RSA problem.