### Experimental Setup and Results Comparison

#### Scheme
- **Shroud [25]**
- **PrivateFS (PD-ORAM) [47]**
- **ObliviStore [6, 47]**

#### Experimental Setup
- **Block Size**: 
  - Shroud: 10 KB
  - PrivateFS: 4 KB
  - ObliviStore: 4 KB
- **ORAM Capacity**:
  - Shroud: 320 TB
  - PrivateFS: 100 MB to 1 TB
  - ObliviStore: 16 KB to 3 TB
- **Processors**:
  - Shroud: Secure co-processors (IBM 4764), distributed setting
  - PrivateFS: Single modern processor (client-side)
  - ObliviStore: Distributed setting, 20 SSDs, 11 modern processors, 1 oblivious load balancer + 10 ORAM nodes (each with 2 SSDs directly attached)
- **Private RAM Consumed**:
  - Shroud: 300 GB
  - PrivateFS: 13 GB to 33 GB
  - ObliviStore: 36 GB to 33 GB

#### Results
- **Response Time**:
  - Shroud: 360 ms
  - PrivateFS: 1s to >1s
  - ObliviStore: 66 ms to 276 ms
- **Throughput**:
  - Shroud: 28 KB/s
  - PrivateFS: 110 KB/s to 31.5 MB/s
  - ObliviStore: 757 KB/s to 43.4 MB/s

**Notes**:
- **Shroud [25]**: The performance is mainly constrained by the I/O bandwidth and computational power of the IBM 4764 secure co-processors.
- **PrivateFS [47]**: The paper reports two sets of experiments (PD-ORAM and PrivateFS) with different methodologies. PD-ORAM seems to be an older version of PrivateFS.
- **ObliviStore [6, 47]**: The throughput values are based on personal communication with the authors [6].

### Related Work

#### Oblivious RAM: Theory
- **Goldreich and Ostrovsky [14]**: Proposed the first hierarchical construction with O((log N)³) amortized cost.
- **Subsequent Research [9, 11, 13–16, 18, 23, 28, 29, 31, 43, 44, 46]**: Built upon and improved the original hierarchical construction.
- **Recent Paradigm [35, 40]**: Relies on secure partitioning to reduce or eliminate data shuffling overhead.

#### Oblivious RAM: Bridging Theory and Practice
- **Williams, Sion et al. [43, 46, 47]**: Pioneered in bridging the theory and practice of ORAM.
- **Goodrich, Mitzenmacher, Ohrimenko, Tamassia et al. [17, 18]**: Made significant contributions to practical ORAM implementations.
- **Backes et al. [8]**: Combined binary-tree ORAM with trusted hardware for privacy-preserving behavioral advertising applications, achieving a request latency of 4 to 5 seconds.

### Acknowledgments
We gratefully acknowledge the support and contributions from:
- Dawn Song and Bobby Bhattacharjee
- Dustin Schnaitman from Amazon
- Jonathan Dautrich
- Radu Sion, Peter Williams, Jay Lorch, and Bryan Parno
- Anonymous reviewers

This material is partially supported by the National Science Foundation Graduate Research Fellowship under Grant No. DGE-0946797 and the DoD National Defense Science and Engineering Graduate Fellowship.

### References
[1] StorageReview Benchmark Suite v4. <http://www.storagereview.com/php/benchmark/suite_v4.php?typeID=10&testbedID=4&osID=6&raidconfigID=1&numDrives=1&devID0=368&devCnt=1>
[2] IBM 4764 PCI-X Cryptographic Coprocessor (PCIXCC). <http://www-03.ibm.com/security/cryptocards/pcixcc/overview.shtml>
[3] Sloccount. <http://www.dwheeler.com/sloccount/>
[4] SSD Real World Adoption. <http://esj.com/blogs/enterprise-insights/2012/08/ssd-adoption.aspx>
[5] Trusted Computing Group. <http://www.trustedcomputinggroup.org/>
[6] Personal Communication with Radu Sion and Peter Williams, Nov. 2012.
[7] Asonov, D., & Freytag, J.-C. (2003). Almost optimal private information retrieval. In PET.
[8] Backes, M., Kate, A., Maffeis, M., & Pecina, K. (2012). Obliviad: Provably secure and practical online behavioral advertising. In S & P.
[9] Boneh, D., Mazieres, D., & Popa, R. A. (2011). Remote oblivious storage: Making oblivious RAM practical. Manuscript. <http://dspace.mit.edu/bitstream/handle/1721.1/62006/MIT-CSAIL-TR-2011-018.pdf>
[10] Chow, R., Golle, P., Jakobsson, M., Shi, E., Staddon, J., Masuoka, R., & Molina, J. (2009). Controlling data in the cloud: Outsourcing computation without outsourcing control. In CCSW.
[11] Damgård, I., Meldgaard, S., & Nielsen, J. B. (2011). Perfectly secure oblivious RAM without random oracles. In TCC.
[12] Fletcher, C. W., van Dijk, M., & Devadas, S. (2012). A secure processor architecture for encrypted computation on untrusted programs. In STC.
[13] Goldreich, O. (1987). Towards a theory of software protection and simulation by oblivious RAMs. In STOC.
[14] Goldreich, O., & Ostrovsky, R. (1996). Software protection and simulation on oblivious RAMs. J. ACM.
[15] Goodrich, M. T., & Mitzenmacher, M. (2011). Privacy-preserving access of outsourced data via oblivious RAM simulation. In ICALP.
[16] Goodrich, M. T., Mitzenmacher, M., Ohrimenko, O., & Tamassia, R. (2011). Oblivious RAM simulation with efficient worst-case access overhead. In ACM Cloud Computing Security Workshop (CCSW).
[17] Goodrich, M. T., Mitzenmacher, M., Ohrimenko, O., & Tamassia, R. (2012). Practical oblivious storage. In CODASPY.
[18] Goodrich, M. T., Mitzenmacher, M., Ohrimenko, O., & Tamassia, R. (2012). Privacy-preserving group data access via stateless oblivious RAM simulation. In SODA.
[19] Iliev, A., & Smith, S. (2005). Towards tiny trusted third parties. Technical report.
[20] Iliev, A., & Smith, S. W. (2005). Protecting client privacy with trusted computing at the server. IEEE Security and Privacy, 3(2):20–28.
[21] Islam, M., Kuzu, M., & Kantarcioglu, M. (2012). Access pattern disclosure on searchable encryption: Ramification, attack and mitigation. In Network and Distributed System Security Symposium (NDSS).
[22] Klein, G., Elphinstone, K., Heiser, G., Andronick, J., Cock, D., Derrin, P., Elkaduwe, D., Engelhardt, K., Kolanski, R., Norrish, M., Sewell, T., Tuch, H., & Winwood, S. (2009). sel4: Formal verification of an OS kernel. In SOSP.
[23] Kushilevitz, E., Lu, S., & Ostrovsky, R. (2012). On the (in)security of hash-based oblivious RAM and a new balancing scheme. In SODA.
[24] Liedtke, J. (1995). On micro-kernel construction. In SOSP.
[25] Lorch, J. R., Parno, B., Mickens, J. W., Raykova, M., & Schiffman, J. (2013). Shroud: Ensuring private access to large-scale data in the data center. FAST, 2013:199–213.
[26] McCune, J. M., Li, Y., Qu, N., Zhou, Z., Datta, A., Gligor, V. D., & Perrig, A. (2010). Trustvisor: Efficient TCB reduction and attestation. In S & P.
[27] McCune, J. M., Parno, B., Perrig, A., Reiter, M. K., & Isozaki, H. (2008). Flicker: An execution infrastructure for TCB minimization. In EuroSys.
[28] Ostrovsky, R. (1990). Efficient computation on oblivious RAMs. In ACM Symposium on Theory of Computing (STOC).
[29] Ostrovsky, R., & Shoup, V. (1997). Private information storage (extended abstract). In STOC, pages 294–303.
[30] Perry, D. (2011). HDD Prices Falling Faster Than SSD Prices. <http://www.tomshardware.com/news/falling-faster-ssd-hdd-solid-state-drive-hard-disk-drive-prices,14336.html>
[31] Pinkas, B., & Reinman, T. (2011). Oblivious RAM revisited. In CRYPTO.
[32] Sailer, R., Zhang, X., Jaeger, T., & van Doorn, L. (2004). Design and implementation of a TCG-based integrity measurement architecture. In USENIX Security Symposium.
[33] Santos, N., Rodrigues, R., Gummadi, K. P., & Saroiu, S. (2012). Policy-sealed data: A new abstraction for building trusted cloud services. In Usenix Security.
[34] Schiffman, J., Moyer, T., Vijayakumar, H., Jaeger, T., & McDaniel, P. (2010). Seeding clouds with trust anchors. In CCSW, pages 43–46.
[35] Shi, E., Chan, T.-H. H., Stefanov, E., & Li, M. (2011). Oblivious RAM with O((log N)³) worst-case cost. In ASIACRYPT, pages 197–214.
[36] Smith, S. W. (2002). Outbound authentication for programmable secure coprocessors. In ESORICS.
[37] Smith, S. W., & Safford, D. (2001). Practical server privacy with secure coprocessors. IBM Syst. J., 40(3):683–695.
[38] Smith, S. W., & Weingart, S. (1999). Building a high-performance, programmable secure coprocessor. Comput. Netw., 31(9):831–860.
[39] Stefanov, E., & Shi, E. (2012). ObliviStore: High performance oblivious cloud storage. Technical report.
[40] Stefanov, E., Shi, E., & Song, D. (2012). Towards practical oblivious RAM. In NDSS.
[41] Stefanov, E., van Dijk, M., Oprea, A., & Juels, A. (2012). Iris: A scalable cloud file system with efficient integrity checks. In ACSAC.
[42] Steinberg, U., & Kauer, B. (2010). Nova: A microhypervisor-based secure virtualization architecture. In EuroSys.
[43] Williams, P., & Sion, R. (2008). Usable PIR. In NDSS.
[44] Williams, P., & Sion, R. (2012). Round-optimal access privacy on outsourced storage. In CCS.
[45] Williams, P., & Sion, R. (2012). Single round access privacy on outsourced storage. In CCS.
[46] Williams, P., Sion, R., & Carbunar, B. (2008). Building castles out of mud: Practical access pattern privacy and correctness on untrusted storage. In CCS.
[47] Williams, P., Sion, R., & Tomescu, A. (2012). PrivateFS: A parallel oblivious file system. In CCS.
[48] Zhang, K., Zhou, X., Chen, Y., Wang, X., & Ruan, Y. (2011). Sedic: Privacy-aware data intensive computing on hybrid clouds. In CCS.