以下是经过优化后的参考文献列表，使其更加清晰、连贯和专业：

1. [6] BHATTACHARYA, S., REBEIRO, C., AND MUKHOPADHYAY, D. "Hardware Prefetchers Leak: A Revisit of SVF for Cache-Timing Attacks." In *IEEE/ACM International Symposium on Microarchitecture (MICRO)* (2012).
   
2. [7] BRASSER, F., MÜLLER, U., DMITRIENKO, A., KOSTIAINEN, K., CAPKUN, S., AND SADEGHI, A.-R. "Software Grand Exposure: SGX Cache Attacks Are Practical." *arXiv:1702.07521* (2017).

3. [8] CHEN, S., ZHANG, X., REITER, M. K., AND ZHANG, Y. "Detecting Privileged Side-Channel Attacks in Shielded Execution with Déjà Vu." In *ACM Symposium on Information, Computer and Communications Security (ASIACCS)* (2017).

4. [9] CHIAPPETTA, M., SAVAS, E., AND YILMAZ, C. "Real-Time Detection of Cache-Based Side-Channel Attacks Using Hardware Performance Counters." *Cryptology ePrint Archive*, Report 2015/1034 (2015).

5. [10] COSTAN, V., AND DEVADAS, S. "Intel SGX Explained." *Cryptology ePrint Archive*, Report 2016/086.

6. [11] COSTAN, V., LEBEDEV, I., AND DEVADAS, S. "Sanctum: Minimal Hardware Extensions for Strong Software Isolation." In *USENIX Security Symposium* (2016).

7. [12] DOMNITSER, L., JALEEL, A., LOEW, J., ABU-GHAZALEH, N., AND PONOMAREV, D. "Non-Monopolizable Caches: Low-Complexity Mitigation of Cache Side Channel Attacks." *ACM Transactions on Architecture and Code Optimization (TACO)* (2011).

8. [13] DOYCHEV, G., KÖPF, B., MAUBORGNE, L., AND REINEKE, J. "CacheAudit: A Tool for the Static Analysis of Cache Side Channels." *ACM Transactions on Information and System Security (TISSEC)* (2015).

9. [14] EVTYUSHKIN, D., AND PONOMAREV, D. "Covert Channels Through Random Number Generator: Mechanisms, Capacity Estimation, and Mitigations." In *ACM Conference on Computer and Communications Security (CCS)* (2016).

10. [15] EVTYUSHKIN, D., PONOMAREV, D., AND ABU-GHAZALEH, N. "Jump Over ASLR: Attacking Branch Predictors to Bypass ASLR." In *IEEE/ACM International Symposium on Microarchitecture (MICRO)* (2016).

11. [16] FERRI, C., BAHAR, R. I., LOGHI, M., AND PONCINO, M. "Energy-Optimal Synchronization Primitives for Single-Chip Multiprocessors." In *ACM Great Lakes Symposium on VLSI* (2009).

12. [17] GE, Q., YAROM, Y., COCK, D., AND HEISER, G. "A Survey of Microarchitectural Timing Attacks and Countermeasures on Contemporary Hardware." *Journal of Cryptographic Engineering* (2016).

13. [18] GODFREY, M. M., AND ZULKERNINE, M. "Preventing Cache-Based Side-Channel Attacks in a Cloud Environment." *IEEE Transactions on Cloud Computing* (2014).

14. [19] GOEL, B., TITOS-GIL, R., NEGI, A., MCKEE, S. A., AND STENSTROM, P. "Performance and Energy Analysis of the Restricted Transactional Memory Implementation on Haswell." In *International Conference on Parallel Processing (ICPP)* (2014).

15. [20] GÖTZFRIED, J., ECKERT, M., SCHINZEL, S., AND MÜLLER, T. "Cache Attacks on Intel SGX." In *European Workshop on System Security (EuroSec)* (2017).

16. [21] GRUSS, D., MAURICE, C., FOGH, A., LIPP, M., AND MANGARD, S. "Prefetch Side-Channel Attacks: Bypassing SMAP and Kernel ASLR." In *ACM Conference on Computer and Communications Security (CCS)* (2016).

17. [22] GRUSS, D., MAURICE, C., AND MANGARD, S. "Rowhammer.js: A Remote Software-Induced Fault Attack in JavaScript." In *Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)* (2016).

18. [23] GRUSS, D., MAURICE, C., WAGNER, K., AND MANGARD, S. "Flush+Flush: A Fast and Stealthy Cache Attack." In *Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)* (2016).

19. [24] GRUSS, D., SPREITZER, R., AND MANGARD, S. "Cache Template Attacks: Automating Attacks on Inclusive Last-Level Caches." In *USENIX Security Symposium* (2015).

20. [25] GUAN, L., LIN, J., LUO, B., JING, J., AND WANG, J. "Protecting Private Keys Against Memory Disclosure Attacks Using Hardware Transactional Memory." In *IEEE Symposium on Security and Privacy (S&P)* (2015).

21. [26] GULLASCH, D., BANGERTER, E., AND KRENN, S. "Cache Games – Bringing Access-Based Cache Attacks on AES to Practice." In *IEEE Symposium on Security and Privacy (S&P)* (2011).

22. [27] HERLIHY, M., ELIOT, J., AND MOSS, B. "Transactional Memory: Architectural Support for Lock-Free Data Structures." In *International Symposium on Computer Architecture (ISCA)* (1993).

23. [28] HUND, R., WILLEMS, C., AND HOLZ, T. "Practical Timing Side Channel Attacks Against Kernel Space ASLR." In *IEEE Symposium on Security and Privacy (S&P)* (2013).

24. [29] INTEL CORP. "Software Development Emulator v. 7.49." https://software.intel.com/en-us/articles/intel-software-development-emulator/ (retrieved 19/01/2017).

25. [30] INTEL CORP. "Intel 64 and IA-32 Architectures Optimization Reference Manual," June 2016.

26. [31] INTEL CORP. "Intel 64 and IA-32 Architectures Software Developer’s Manual, Volume 1: Basic Architecture," September 2016.

27. [32] INTEL CORP. "Intel 64 and IA-32 Architectures Software Developer’s Manual, Volume 3 (3A, 3B & 3C): System Programming Guide," September 2016.

28. [33] IRAZOQUI, G., EISENBARTH, T., AND SUNAR, B. "S$A: A Shared Cache Attack That Works Across Cores and Defies VM Sandboxing – and Its Application to AES." In *IEEE Symposium on Security and Privacy (S&P)* (2015).

29. [34] IRAZOQUI, G., EISENBARTH, T., AND SUNAR, B. "Cross Processor Cache Attacks." In *ACM Symposium on Information, Computer and Communications Security (ASIACCS)* (2016).

30. [35] IRAZOQUI, G., INCI, M. S., EISENBARTH, T., AND SUNAR, B. "Wait a Minute! A Fast, Cross-VM Attack on AES." In *Symposium on Recent Advances in Intrusion Detection (RAID)* (2014).

31. [36] JANG, Y., LEE, S., AND KIM, T. "Breaking Kernel Address Space Layout Randomization with Intel TSX." In *ACM Conference on Computer and Communications Security (CCS)* (2016).

32. [37] KIM, T., PEINADO, M., AND MAINAR-RUIZ, G. "STEALTHMEM: System-Level Protection Against Cache-Based Side Channel Attacks in the Cloud." In *USENIX Security Symposium* (2012).

33. [55] PESSL, P., GRUSS, D., MAURICE, C., SCHWARZ, M., AND MANGARD, S. "DRAMA: Exploiting DRAM Addressing for Cross-CPU Attacks." In *USENIX Security Symposium* (2016).

34. [38] KOCHER, P. C. "Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems." In *Advances in Cryptology—CRYPTO* (1996).

35. [39] KUVAISKII, D., FAQEH, R., BHATOTIA, P., FELBER, P., AND FETZER, C. "HAFT: Hardware-Assisted Fault Tolerance." In *European Conference on Computer Systems (EuroSys)* (2016).

36. [40] LEE, S., SHIH, M.-W., GERA, P., KIM, T., KIM, H., AND PEINADO, M. "Inferring Fine-Grained Control Flow Inside SGX Enclaves with Branch Shadowing." *arXiv preprint arXiv:1611.06952* (2016).

37. [41] LIPP, M., GRUSS, D., SPREITZER, R., MAURICE, C., AND MANGARD, S. "ARMageddon: Cache Attacks on Mobile Devices." In *USENIX Security Symposium* (2016).

38. [42] LIU, F., GE, Q., YAROM, Y., MCKEEN, F., ROZAS, C., HEISER, G., AND LEE, R. B. "Catalyst: Defeating Last-Level Cache Side Channel Attacks in Cloud Computing." In *International Symposium on High Performance Computer Architecture (HPCA)* (2016).

39. [43] LIU, F., YAROM, Y., GE, Q., HEISER, G., AND LEE, R. B. "Last-Level Cache Side-Channel Attacks Are Practical." In *IEEE Symposium on Security and Privacy (S&P)* (2015).

40. [44] LIU, Y., XIA, Y., GUAN, H., ZANG, B., AND CHEN, H. "Concurrent and Consistent Virtual Machine Introspection with Hardware Transactional Memory." In *International Symposium on High Performance Computer Architecture (HPCA)* (2014).

41. [45] MAURICE, C., WEBER, M., SCHWARZ, M., GINER, L., GRUSS, D., ALBERTO BOANO, C., MANGARD, S., AND RÖMER, K. "Hello from the Other Side: SSH over Robust Cache Covert Channels in the Cloud." In *Symposium on Network and Distributed System Security (NDSS)* (2017).

42. [46] MOGHIMI, A., IRAZOQUI, G., AND EISENBARTH, T. "CacheZoom: How SGX Amplifies the Power of Cache Attacks." *arXiv:1703.06986* (2017).

43. [47] MÜLLER, T., FREILING, F. C., AND DEWALD, A. "TRESOR Runs Encryption Securely Outside RAM." In *USENIX Security Symposium* (2011).

44. [48] NAKAIKE, T., ODAIRA, R., GAUDET, M., MICHAEL, M. M., AND TOMARI, H. "Quantitative Comparison of Hardware Transactional Memory for Blue Gene/Q, zEnterprise EC12, Intel Core, and POWER8." In *International Symposium on Computer Architecture (ISCA)* (2015).

45. [49] OHRIMENKO, O., SCHUSTER, F., FOURNET, C., MEHTA, A., NOWOZIN, S., VASWANI, K., AND COSTA, M. "Oblivious Multi-Party Machine Learning on Trusted Processors." In *USENIX Security Symposium* (2016).

46. [50] OREN, Y., KEMERLIS, V. P., SETHUMADHAVAN, S., AND KEROMYTIS, A. D. "The Spy in the Sandbox: Practical Cache Attacks in JavaScript and Their Implications." In *ACM Conference on Computer and Communications Security (CCS)* (2015).

47. [51] OSVIK, D. A., SHAMIR, A., AND TROMER, E. "Cache Attacks and Countermeasures: The Case of AES." In *RSA Conference Cryptographer’s Track (CT-RSA)* (2006).

48. [52] PAGE, D. "Partitioned Cache Architecture as a Side-Channel Defence Mechanism." *Cryptology ePrint Archive*, Report 2005/280.

49. [53] PAYER, M. "HexPADS: A Platform to Detect 'Stealth' Attacks." In *International Symposium on Engineering Secure Software and Systems (ESSoS)* (2016).

50. [54] PERCIVAL, C. "Cache Missing for Fun and Profit." In *Proceedings of BSDCan* (2005).

51. [56] RISTENPART, T., TROMER, E., SHACHAM, H., AND SAVAGE, S. "Hey, You, Get Off of My Cloud: Exploring Information Leakage in Third-Party Compute Clouds." In *ACM Conference on Computer and Communications Security (CCS)* (2009).

52. [57] SCHWARZ, M., GRUSS, D., WEISER, S., MAURICE, C., AND MANGARD, S. "Malware Guard Extension: Using SGX to Conceal Cache Attacks." In *Conference on Detection of Intrusions and Malware & Vulnerability Assessment (DIMVA)* (2017).

53. [58] SHI, J., SONG, X., CHEN, H., AND ZANG, B. "Limiting Cache-Based Side-Channel in Multi-Tenant Cloud Using Dynamic Page Coloring." In *IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)* (2011).

54. [59] SHIH, M.-W., LEE, S., KIM, T., AND PEINADO, M. "T-SGX: Eradicating Controlled-Channel Attacks Against Enclave Programs." In *Symposium on Network and Distributed System Security (NDSS)* (2017).

55. [60] SPREITZER, R., AND PLOS, T. "Cache-Access Pattern Attack on Disaligned AES T-Tables." In *Constructive Side-Channel Analysis and Secure Design (COSADE)* (2013).

56. [61] XU, Y., CUI, W., AND PEINADO, M. "Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems." In *IEEE Symposium on Security and Privacy (S&P)* (2015).

57. [62] YAROM, Y., AND FALKNER, K. "Flush+Reload: A High Resolution, Low Noise, L3 Cache Side-Channel Attack." In *USENIX Security Symposium* (2014).

58. [63] YOO, R. M., HUGHES, C. J., LAI, K., AND RAJWAR, R. "Performance Evaluation of Intel Transactional Synchronization Extensions for High-Performance Computing." In *International Conference for High Performance Computing, Networking, Storage and Analysis (SC)* (2013).

59. [64] ZACHAROPOULOS, G. "Employing Hardware Transactional Memory in Prefetching for Energy Efficiency." *Uppsala Universitet (report)*, 2015. http://www.diva-portal.org/smash/get/diva2:847611/FULLTEXT01.pdf (retrieved 20/02/2017).

60. [65] ZHANG, T., ZHANG, Y., AND LEE, R. B. "CloudRadar: A Real-Time Side-Channel Attack Detection System in Clouds." In *Symposium on Recent Advances in Intrusion Detection (RAID)* (2016).

61. [66] ZHANG, X., XIAO, Y., AND ZHANG, Y. "Return-Oriented Flush-Reload Side Channels on ARM and Their Implications for Android Devices." In *ACM Conference on Computer and Communications Security (CCS)* (2016).

62. [67] ZHANG, Y., JUELS, A., REITER, M. K., AND RISTENPART, T. "Cross-Tenant Side-Channel Attacks in PaaS Clouds." In *ACM Conference on Computer and Communications Security (CCS)* (2014).

63. [68] ZHANG, Y., AND REITER, M. "Düppel: Retrofitting Commodity Operating Systems to Mitigate Cache Side Channels in the Cloud." In *ACM Conference on Computer and Communications Security (CCS)* (2013).

64. [69] ZHOU, Z., REITER, M. K., AND ZHANG, Y. "A Software Approach to Defeating Side Channels in Last-Level Caches." In *ACM Conference on Computer and Communications Security (CCS)* (2016).

---

### 代码示例：Cloak 保护的决策树分类

**Listing 2** 展示了原始代码和使用 Cloak 保护后的代码。在原始代码中，树存储在一个 `Nodes` 数组中，每个节点包含一个特征 `fdim` 和阈值 `fthresh`。通过访问节点来确定使用哪个特征进行分裂，并根据该特征的值决定是向左还是向右继续遍历。对于每条记录（批量存储在 `Queries` 中），代码会根据记录中的特征值遍历树。一旦到达叶子节点，其值将作为查询结果写入 `LeafIds`。

Cloak 通过以下方式保护代码和数据访问：
1. 使用 Cloak 数据类型将 `Nodes` 和 `Queries` 分配到读集，将 `LeafIds` 分配到写集。这确保了数据分配如第 5.2.1 节所述，对程序员来说是透明的。参数 `NCSR` 和 `NCSW` 指定了用于读集和写集的缓存集合数量。
2. 程序员通过使用 `tsx protected` 注解指示编译器应将哪些函数运行在事务中。程序员在敏感数据结构上调用 `preload`（行 11、12 和 15）。重复预加载可写的数组 `leafids` 可以刷新写集，防止过早的驱逐。

```cpp
// 原始代码
using Nodes = nelem_t*;
using Queries = Matrix;
using LeafIds = uint16_t*;

// Cloak 保护后的代码
using Nodes = ReadArray;
using Queries = ReadMatrix;
using LeafIds = WriteArray;

tsx protected lookup_leafids(
    void Nodes &nodes, Queries &queries, LeafIds &leafids) {
    nodes.preload();
    queries.preload();
    for (size_t q = 0; q < queries.entries(); q++) {
        if (!(q % 8)) leafids.preload();
        size_t idx = 0, left, right;
        for (;;) {
            auto &node = nodes[idx];
            left = node.left;
            right = node.right_or_leafid;
            if (left == node) {
                leafids[q] = right;
                break;
            }
            if (queries.item(q, node.fdim) <= node.fthresh)
                idx = left;
            else
                idx = right;
        }
    }
}
```

此示例展示了如何使用 Cloak 来保护代码和数据访问，从而增强安全性。