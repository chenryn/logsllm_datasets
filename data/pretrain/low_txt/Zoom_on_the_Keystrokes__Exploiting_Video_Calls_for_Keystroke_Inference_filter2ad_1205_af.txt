以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 其他高需求功能

- **案例与数据**
  - [GitLab](https://gitlab.com/)
  - [Google Hangouts 插件](https://tools.google.com/dlpage/hangoutplugin)
  - [1000万个常用密码列表](https://gitlab.com/kalilinux/packages/seclists/-/blob/kali/master/Passwords/Common-Credentials/10-million-password-list-top-1000000.txt)（访问日期：2020年9月9日）
  - [50万Zoom账号在暗网免费分发](https://www.forbes.com/sites/leemathews/2020/04/13/500000-hacked-zoom-accounts-given-away-for-free-on-the-dark-web/)（访问日期：2020年5月22日）
  - [AudioSet - 大规模手动注释音频事件数据集](https://research.google.com/audioset/)（访问日期：2020年5月22日）
  - [2019冠状病毒病 (COVID-19) 病例监测更新](https://www.cdc.gov/coronavirus/2019-ncov/cases-updates/index.html)（访问日期：2020年5月22日）
  - [Google Hangouts](https://hangouts.google.com/)（访问日期：2020年5月22日）
  - [Google Meet 新增功能介绍](https://cloud.google.com/blog/products/productivity-collaboration/introducing-tiled-view-and-other-top-requested-features-in-google-meet)（访问日期：2020年5月22日）
  - [LiveChat 打字速度测试](https://www.livechat.com/typing-speed-test/#/global-scores)（访问日期：2020年9月9日）
  - [ManyCam](https://manycam.com/)（访问日期：2020年5月22日）
  - [OBS Studio](https://obsproject.com/)（访问日期：2020年5月22日）
  - [Skype](https://www.skype.com/en/)（访问日期：2020年5月22日）
  - [Majestic Million 前100万个网站](https://majestic.com/reports/majestic-million)（访问日期：2020年9月9日）
  - [Twitch](https://www.twitch.tv/)（访问日期：2020年5月22日）
  - [视频聊天成为千禧一代和Z世代的新常态](https://talkative.uk/info/why-video-chat-is-new-normal-for-millennials-gen-z/)（访问日期：2020年5月22日）
  - [Wikipedia 常用英语词汇前10万](https://gist.github.com/h3xx/1976236)（用于 John the Ripper）（访问日期：2020年5月22日）
  - [WIDER FACE: 大规模人脸检测基准](http://shuoyang1213.me/WIDERFACE/)（访问日期：2020年5月22日）
  - [YouTube](https://www.youtube.com/)（访问日期：2020年5月22日）
  - [Zoom](https://zoom.us/)（访问日期：2020年5月22日）
  - [Zoom 优化噪声消除以提升音频质量](https://blog.zoom.us/wordpress/2018/08/21/zoom-adds-noise-cancellation-to-our-top-notch-audio/)（访问日期：2020年5月22日）
  - [“Zoom轰炸”成为有组织的危险行为](https://www.nytimes.com/2020/04/03/technology/zoom-harassment-abuse-racism-fbi-warning.html)（访问日期：2020年5月22日）

### 参考文献

[20] K. Ali, A. X. Liu, W. Wang, and M. Shahzad, “Keystroke recognition using WiFi signals,” in International Conference on Mobile Computing and Networking (MobiCom), 2015.

[21] S. A. Anand and N. Saxena, “Keyboard emanations in remote voice calls: Password leakage and noise(less) masking defenses,” in Proceedings of the Eighth ACM Conference on Data and Application Security and Privacy, 2018.

[22] D. Asonov and R. Agrawal, “Keyboard acoustic emanations,” in IEEE Symposium on Security and Privacy (S&P), 2004.

[23] M. Backes, T. Chen, M. Duermuth, H. P. A. Lensch, and M. Welk, “Tempest in a teapot: Compromising reflections revisited,” in IEEE Symposium on Security and Privacy (S&P), 2009.

[24] Y. Berger, A. Wool, and A. Yeredor, “Dictionary attacks using keyboard acoustic emanations,” in ACM CCS, 2006.

[25] L. Cai and H. Chen, “Touchlogger: Inferring keystrokes on touch screen from smartphone motion,” in USENIX Conference on Hot Topics in Security, 2011.

[26] S. K. Card, The psychology of human-computer interaction. CRC Press, 1983.

[27] L.-C. Chen, G. Papandreou, F. Schroff, and H. Adam, “Rethinking atrous convolution for semantic image segmentation,” arXiv preprint arXiv:1706.05587, 2017.

[28] Y. Chen, T. Li, R. Zhang, Y. Zhang, and T. Hedgpeth, “Eyetell: Video-assisted touchscreen keystroke inference from eye movements,” in IEEE Symposium on Security and Privacy (S&P), 2018.

[29] A. Compagno, M. Conti, D. Lain, and G. Tsudik, “Don’t skype & type! Acoustic eavesdropping in voice-over-ip,” in Proceedings of the 2017 ACM on Asia Conference on Computer and Communications Security, 2017.

[30] L. Ding and A. Goshtasby, “On the Canny edge detector,” Pattern Recognition, vol. 34, no. 3, pp. 721–725, 2001.

[31] T. Halevi and N. Saxena, “A closer look at keyboard acoustic emanations: Random passwords, typing styles and decoding techniques,” in ACM Symposium on Information, Computer and Communications Security, 2012.

[32] M. G. Kuhn, “Optical time-domain eavesdropping risks of CRT displays,” in IEEE Symposium on Security and Privacy (S&P), 2002.

[33] M. Li, Y. Meng, J. Liu, H. Zhu, X. Liang, Y. Liu, and N. Ruan, “When CSI meets public WiFi: Inferring your mobile phone password via WiFi signals,” in ACM CCS, 2016, pp. 1068–1079.

[34] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ramanan, P. Dollár, and C. L. Zitnick, “Microsoft COCO: Common objects in context,” in European Conference on Computer Vision, 2014, pp. 740–755.

[35] X. Liu, Z. Zhou, W. Diao, Z. Li, and K. Zhang, “When good becomes evil: Keystroke inference with smartwatch,” in ACM CCS, 2015.

[36] A. Maiti, O. Armbruster, M. Jadliwala, and J. He, “Smartwatch-based keystroke inference attacks and context-aware protection mechanisms,” in ACM Asia Conference on Computer and Communications Security, 2016.

[37] A. Maiti and M. Jadliwala, “Light ears: Information leakage via smart lights,” Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, vol. 3, no. 3, 2019.

[38] A. Maiti, M. Jadliwala, J. He, and I. Bilogrevic, “Side-channel inference attacks on mobile keypads using smartwatches,” IEEE Transactions on Mobile Computing, vol. 17, no. 9, 2018.

[39] P. Marquardt, A. Verma, H. Carter, and P. Traynor, “(sp)iPhone: Decoding vibrations from nearby keyboards using mobile phone accelerometers,” in ACM CCS, 2011.

[40] E. Miluzzo, A. Varshavsky, S. Balakrishnan, and R. R. Choudhury, “Tapprints: Your finger taps have fingerprints,” in ACM International Conference on Mobile Systems, Applications, and Services (MobiSys), 2012.

[41] T. R. Ostrach, “Typing speed: How fast is average,” Orlando, FL, USA, 1997.

[42] E. Owusu, J. Han, S. Das, A. Perrig, and J. Zhang, “Accessory: Password inference using accelerometers on smartphones,” in ACM Workshop on Mobile Computing Systems and Applications (HotMobile), 2012.

[43] E. Ronen and A. Shamir, “Extended functionality attacks on IoT devices: The case of smart lights,” in IEEE European Symposium on Security and Privacy (EuroS&P), 2016.

[44] L. Simon and R. Anderson, “PIN skimmer: Inferring PINs through the camera and microphone,” in Proceedings of the Third ACM Workshop on Security and Privacy in Smartphones & Mobile Devices, 2013, pp. 67–78.

[45] D. Stavens, “The OpenCV library: computing optical flow,” 2007.

[46] M. Stokes, M. Anderson, S. Chandrasekar, and R. Motta, “A Standard Default Color Space for the Internet - sRGB,” https://www.w3.org/Graphics/Color/sRGB, （访问日期：2020年5月22日）。

[47] J. Sun, X. Jin, Y. Chen, J. Zhang, Y. Zhang, and R. Zhang, “Visible: Video-assisted keystroke inference from tablet backside motion.” in NDSS, 2016.

[48] T. Van Renterghem, P. Thomas, F. Dominguez, S. Dauwe, A. Touhafi, B. Dhoedt, and D. Botteldooren, “On the ability of consumer electronics microphones for environmental noise monitoring,” Journal of Environmental Monitoring, vol. 13, no. 3, pp. 544–552, 2011.

### 附录B：打字风格

- **敲击式打字**：通常被认为是最低效的打字技术。在这种方式中，打字者在打字时会看着键盘，因为他们通常不熟悉键盘布局。此外，大多数敲击式打字者主要使用他们的两个食指进行打字。因此，敲击式打字者的双臂在按键之间会有显著的动作。
- **触摸式打字**：通常被认为是最高效的打字技术。在这种方式中，打字者看着屏幕并连续打字而不看键盘。触摸式打字者使用全部十个手指。
- **混合式打字**：顾名思义，是敲击式和触摸式打字的混合。像触摸式打字者一样，混合式打字者可能已经记住了键盘布局，并能够在看着屏幕的情况下打字。然而，与触摸式打字者不同的是，混合式打字者使用的手指较少，通常为2到6个手指。

### 附录C：预处理图像

背景移除过程的示例如图17所示。此背景移除步骤使我们的框架对背景中的任何移动元素保持不可知性。

![图17：背景移除过程的示例输出](images/figure_17.png)

我们利用目标用户手臂相对于面部的相对位置的一致性（如图18所示），以便在背景移除后的灰度帧中分割左臂和右臂。

![图18：使用Faceboxes进行面部检测并在捕获的视频帧中分割左右手臂](images/figure_18.png)

### 附录D：按键检测算法

```python
def KEYSTROKE_DETECT(armS):
    ssimList = []
    ssimDiff = []
    keystrokesFS = []

    # 计算每对相邻帧之间的结构相似性分数
    for i in range(len(armS) - 1):
        ssimScore = SSIM(armS[i], armS[i + 1])
        ssimList.append(ssimScore)

    # 计算SSIM差值
    for i in range(len(ssimList) - 1):
        ssimDiff.append(ssimList[i] - ssimList[i + 1])

    # 计算均值和标准差
    mean = np.mean(ssimDiff)
    std = np.std(ssimDiff)

    # 检测局部极大值和极小值
    for i in range(len(ssimDiff) - 1):
        zScore = (ssimDiff[i] - mean) / std
        if φa < zScore < φb:
            if ssimDiff[i] 是局部极大值:
                if 存在一个局部极小值在i → i + 2之间:
                    keystrokesFS.append(armS[i])

    return keystrokesFS
```

### 附录E

...

---

希望这些改进能够帮助你更好地理解和展示内容。如果还有其他需要进一步优化的部分，请告诉我！