# Title: Password Typos and How to Correct Them Securely

**Authors:**
- Rahul Chatterjee
- Anish Athalye
- Devdatta Akhawe
- Ari Juels
- Thomas Ristenpart

**Affiliations:**
- ‡ Dropbox
- ∗ Cornell Tech
- † MIT

**Abstract:**
We present the first typo-tolerant password authentication system for arbitrary user-selected passwords. Instead of simply rejecting incorrect passwords, our system attempts to correct common typographical errors on behalf of the user. While limited forms of typo-tolerance have been used in some industry settings, there has been no comprehensive analysis of their utility and security. We quantify the types and rates of typos made by users through studies conducted on Amazon Mechanical Turk and via instrumentation of the production login infrastructure at Dropbox. Our experiments reveal that almost 10% of login attempts fail due to simple, easily correctable typos, such as capitalization errors. We show that correcting a few of these typos would reduce login delays for a significant fraction of users and enable an additional 3% of users to log in successfully.

We introduce a framework for reasoning about typo-tolerance and investigate the inherent tension between security and usability. Using this framework, we demonstrate that there exist typo-tolerant authentication schemes that can provide corrections without degrading security. We detail practical strategies for securely implementing typo-tolerance.

## I. Introduction

Despite repeated calls for their demise, human-chosen passwords remain the primary form of user authentication on the Internet. Research has shown that passwords are often predictable, strength meters offer limited improvements, expiration does not enhance security, and users struggle to remember complex passwords.

A few studies have noted that complex, user-chosen passwords are not only difficult to remember but also challenging to type. However, these studies do not explore the prevalence or nature of typos across a wide user base. Some web services, like Facebook, allow certain typos, such as ignoring the case of the first letter or caps lock, but the reasons and security implications are unclear.

We provide the first detailed treatment of password typos. We start by measuring the rates and nature of typos made by users. We conduct preliminary experiments with Amazon Mechanical Turk (MTurk) and instrument Dropbox's production login infrastructure to measure typo prevalence at scale. Our findings suggest that easily-correctable typos represent a significant burden on users and businesses.

## II. Background and Related Work

### Password Checking and Threats
Traditional password-based authentication systems work by comparing a submitted password to a stored representation (e.g., a salted hash). Two main threats arise: online guessing attacks, where attackers submit guesses via the standard interface, and offline brute-force attacks, where attackers attempt to crack passwords from leaked databases. Our focus is on online attacks, as our typo-tolerant checkers are compatible with existing password storage schemes and do not alter security with respect to offline attacks.

### Typos in User-Selected Passwords
Several studies have shown that users tend to choose weak passwords with highly skewed distributions. Ease of memorability often guides users to simple, common passwords. The problem is exacerbated by various input devices, such as mobile phone touch keyboards. Few works have measured the difficulty of correctly entering user-chosen passwords. Small-scale studies have shown that the rate of typos increases with password complexity, but they do not generalize to other settings and do not analyze the types of errors.

### Server-Side Hashing Changes
Secure sketches and controlled collisions in password hashing have been proposed to correct typos, but these approaches are not backward-compatible with existing password storage and may degrade offline attack security.

### Typos in Passphrase Systems
Studies of system-generated passphrases have investigated typo-tolerance strategies, such as ignoring case and using dictionary-based error correction. These approaches do not apply to arbitrary user-chosen passwords, which is our focus.

### Typo-Tolerant Checking in Industry
Some major websites, like Facebook, accept slightly incorrect versions of user-chosen passwords, such as ignoring case or accepting minor variations. These practices have faced criticism, with the assumption being that accepting any variant will speed up online guessing attacks.

### Open Questions
Before our work, there was no information available about the kinds of typos that burden users typing user-selected passwords and whether typo-tolerant password checking systems are achievable without degrading security. We aim to answer these questions.

## III. Understanding Typos Empirically

We begin with experiments using Amazon Mechanical Turk (MTurk) to measure the kinds of typos people make when typing passwords. The goal is to discover the most frequent typos across a population for typical user-chosen passwords. We follow up these MTurk experiments with real user data using instrumentation of the Dropbox operational environment.

### Experiment Design
MTurk allows custom-designed human-intelligence tasks (HITs) to be submitted to workers over the web. We created a password-typing HIT that asks a worker to type k passwords within a given time limit. Each typed character shows up as a dot, and copy-paste functionality is disabled. We recorded all key presses to filter out copy-paste attempts.

Our MTurk experiment design aims to gather data efficiently to identify common typos and trends. The typos found in transcribing passwords in MTurk may not be truly representative of the typos users make when typing their own passwords. A longitudinal study using MTurk would be interesting but logistically complicated. We use the two-phase investigative approach: first, prospecting for common typos via MTurk, and then presenting a measurement of real-world Dropbox user typos.

In our MTurk experiments, we ask workers to type passwords sourced from the RockYou password leak, the largest plaintext password leak to date, with passwords from over 32 million users. This dataset has been widely used for password-related studies and provides a representative distribution of user-chosen passwords.