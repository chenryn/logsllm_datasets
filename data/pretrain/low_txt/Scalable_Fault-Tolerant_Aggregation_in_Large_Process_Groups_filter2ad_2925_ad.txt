### 6. 完整性分析

在本节中，我们探讨了低流言速率、显式消息和成员故障对协议完整性的影响。接下来的部分将展示我们的协议在具有故障倾向的机器（成员）的模拟损失网络中的性能结果。这些实验旨在更好地量化组大小、消息传递率、成员故障率以及流言速率对协议完整性的影响。

#### 7. 模拟结果

在本节中，我们将展示分层流言方法在大型组中计算全局可组合函数的性能结果。第6.3节的分析表明，在相当高的流言速率下（例如624），协议的完整性是令人满意的。在本节中，我们将研究低流言速率对协议完整性的影响。这些模拟展示了组大小、消息传递率、成员故障率和流言速率变化对保证的完整性概率的影响。此外，它们还考虑了不同成员之间的异步性，即它们处于不同的阶段。这与早期分析中假设所有成员同步地从一个阶段过渡到另一个阶段有所不同。

图6-11展示了不同协议参数和网络特性对分层流言协议实现的完整性的影响。这些图表中的每个点都是在具有N个初始成员的组中多次运行协议的平均值，该组通过具有独立单播（点对点）消息丢失概率ucastl的损失异步网络进行通信。成员在每轮流言中以概率pf发生崩溃（无恢复）。每轮流言由尝试与M个随机选择的成员进行流言组成。每阶段的流言轮数为LC . logdlv]。使用的哈希函数H是一个公平的哈希函数，并且不具有拓扑感知能力。协议在所有组成员中同时启动，但此后，成员们异步地从一个阶段过渡到另一个阶段（如第6.3节步骤2(b)所述）。除非另有说明，图6-11中的默认参数为：N = 200, ucastl = 0.25, pf = 0.001, K = 4, M = 2, C = 1.0。y轴上测量的指标是协议的平均测得的不完备性 = 1 - 完整性。图6-10以对数尺度绘制了不完备性。

图6显示了不完备性随组大小N的变化。随着N的增加，协议阶段的数量和每个阶段的持续时间也相应增加。这条曲线表明，随着N增加到1000以上，算法的平均完整性保证略有提高。需要注意的是，定理1的结果在此并不适用（因为参数b约为0.75），然而，随着组成员数量增加到1000以上，完整性保证有所改善。

图7显示，随着网络消息可靠性的提高，不完备性呈指数下降。图8展示了协议阶段持续时间（以流言轮数表示）对平均完整性保证的影响。由于M = 2固定不变，增加阶段持续时间相当于增加流言速率。随着协议阶段持续时间的增加，不完备性呈指数下降，因此流言速率也随之增加。

图9显示了一个实验结果，其中具有N个成员的组被分成两半，跨分区的消息以独立的概率partl被丢弃。每个分区内的消息则以独立的概率ucastl被丢弃。该实验旨在测量分层流言协议在网络分区情况下的性能，这是广域网中拥塞和相关消息传递故障的主要症状。图9显示，随着分区或相关故障率的恶化，协议的完整性逐渐退化。

图10表明，随着成员故障率的降低，协议的不完备性迅速下降（比指数更快）。最后，图11比较了协议运行所保证的平均不完备性与定理1施加的限制。使用C = 1.4, ucastl = pf = 0.0，使得b约为1.0。尽管这不满足定理1的条件，但图11显示，不完备性受到k的限制。这反映了定理1施加的界限的悲观性，并结合图8，建议对我们的协议进行更严格的分析，将显示不完备性与流言速率之间的指数变化关系。

### 8. 结论

在本文中，我们讨论了几种解决方案，用于在大规模传感器网络、自组织网络和互联网上的进程组中，可扩展且准确地计算全局（可组合）聚合函数的问题。我们论证了为什么传统的解决方法在这种大规模组中无法扩展，并且在易出故障的网络中表现不佳。然后，我们提出了一种技术来在这样的大规模进程组上构建抽象层次结构，并提出了一种利用该层次结构中的流言来评估组中的可组合全局聚合函数的解决方案。我们的数学分析和模拟结果表明，提出的分层流言协议在时间和消息复杂度方面是次优的多项式对数级，并且保证了良好的完整性概率，即成员投票被纳入最终全局估计的概率。这些完整性保证对随机消息丢失、组成员崩溃甚至网络中的相关消息故障都相当稳健。此外，即使在低流言速率下，随着组规模的增加，完整性保证也会得到改善。

### 致谢

我们要感谢AI Demers、Johannes Gehrke、Kate Jenkins、Jon Kleinberg以及审稿人对主题和论文提出的宝贵建议。

### 参考文献

[1] N. T. J. Bailey. Epidemic Theory of Infectious Diseases and its Applications. Hafner Press, second edition, 1975.

[2] Z. Bar-Joseph and M. Ben-Or. A tight lower bound for Randomized Consensus. In Proc. ACM Symp. Principles of Distributed Computing, pages 193-199, 1998.

[3] K. P. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M. Budiu, and Y. Minsky. Bimodal multicast. ACM Trans. Computer Systems, 17(2):41-88, May 1999.

[4] R. W. D. Coore, R. Nagpal. Paradigms for structure in an Amorphous Computer. A.I. Memo 1614, Massachusetts Institute of Technology, October 1997.

[5] A. Demers, J. Gehrke, and K. Jenkins. Private communication. 2000.

[6] D. Estrin, R. Govindan, J. Heidermann, and S. Kumar. Next century challenges: scalable coordination in sensor networks. In Proc. 6th Intnl Conf. Mobile Computing and Networking, pages 263-270, Aug 2000.

[7] M. J. Fischer, N. A. Lynch, and M. S. Paterson. Impossibility of distributed Consensus with one faulty process. Journ. ACM, 32(2):374-382, Apr 1985.

[8] V. K. Garg. Methods for observing global properties in distributed systems. IEEE Concurrency, 5(4):69-77, Oct-Dec 1997.

[9] W. R. Heinzelman, J. Kulik, and H. Balakrishnan. Adaptive protocols for information dissemination in wireless sensor networks. In Proc. 5th Intnl. Conf. Mobile Computing and Networking, pages 174-185, 1999.

[10] J. M. Hellerstein, P. J. Haas, and H. J. Wang. Online aggregation. In Proc. ACMSIGMOD Intnl. Conf. on Management of Data, pages 171-182, May 1997.

[11] J. M. Kahn, R. H. Katz, and K. S. J. Pister. Next century challenges: mobile networking for smart dust. In Proc. 5th Intnl. Conf. Mobile Computing and Networking, pages 271-28, Aug 2000.

[12] J. Li, J. Jannotti, D. S. J. De Couto, D. R. Karger, and R. Morris. A scalable location service for geographic ad-hoc routing. In Proc. 6th Intnl. Conf. Mobile Computing and Networking, pages 120-130, Aug 2000.

[13] M. Pease, R. Shostak, and L. Lamport. Reaching agreement in the presence of faults. Journ. ACM, 27(2):228-234, Apr 1980.

[14] P. F. Tsuchiya. The Landmark hierarchy: a new hierarchy for routing in very large networks. In Proc. Symp. Communications Architectures and Protocols, pages 35-42, Aug 1988.

[15] R. van Renesse. Scalable management with Astrolabe. Technical report, Dept. of Computer Science, Cornell University, 2000.

[16] R. van Renesse, Y. Minsky, and M. Hayden. A gossip-style failure detection service. In Proc. Middleware '98 (IFIP), pages 55-70, Sep 1998.