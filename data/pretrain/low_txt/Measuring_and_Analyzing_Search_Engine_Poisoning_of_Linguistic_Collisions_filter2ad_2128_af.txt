### IX. CONCLUSION

In this paper, we present the first large-scale analysis of search engine poisoning, evaluating over 1.77 million searches on Google and Baidu. By integrating linguistic and measurement techniques, we systematically analyze linguistic-collision misspelling attacks in both English and Chinese. We also develop a deep learning model to more efficiently identify non-auto-corrected misspelled keywords.

Our findings reveal that linguistic-collision misspellings are prevalent in search engines, with 1.19% of first-page search results leading to blacklisted websites. The primary targets for these attacks are terms related to drugs, gambling, and adult content. Additionally, we observe that mobile users are more likely to search for misspellings. Although search engine providers have implemented auto-correction to reduce the attack surface of typosquatting, linguistic-collision misspellings remain a significant vulnerability that attackers can exploit to promote malicious links. Our study highlights this new threat and provides insights to help mitigate the problem.

### ACKNOWLEDGMENTS

We thank the anonymous reviewers for their valuable comments, which helped improve the paper. We also thank Christian Kreibich and the International Computer Science Institute for providing Spamhaus data. Minhui Xue is supported by the Optus Macquarie University Cyber Security Hub.

### REFERENCES

[1] Internet World Stats. Number of Internet Users by Language. http://www.internetworldstats.com/stats7.htm. June 2017.

[2] Amy Gesenhues. Organic Search Drives 51% Of Traffic, Social Only 5%. http://searchengineland.com/study-organic-search-drives-51-traffic-social-5-202063. Aug. 2014.

[3] Google. Search Engine Optimization Starter Guide. https://www.google.com/webmasters/docs/search-engine-optimization-starter-guide.pdf. Sept. 2017.

[4] Alexandros Ntoulas, Marc Najork, Mark Manasse, and Dennis Fetterly. "Detecting Spam Web Pages through Content Analysis." In: 15th International Conference on World Wide Web (WWW). May 2006.

[5] Baoning Wu and Brian D. Davison. "Identifying Link Farm Spam Pages." In: 14th International World Wide Web Conference (WWW). May 2005.

[6] Jennifer Slegg. Targeting Keyword Variations for Increased Search & Pay per Click Traffic. http://www.jenniferslegg.com/2007/04/06/targeting-keyword-variations-for-increased-search-pay-per-click-traffic/. Apr. 2007.

[7] David Z. Morris. German Court Orders Amazon to Stop ‘Typo-Targeting’ Ads for Birkenstocks. http://fortune.com/2017/12/30/amazon-typo-targeting-birkenstock-advertising/. Dec. 2017.

[8] Shubham Grover. Snickers Misspelling Search Keyword Campaign Reached 50K People In 3 Days. http://www.digitalvidya.com/blog/snickers-misspelling-search-keyword-campaign-reached-50k-people-in-3-days/. Oct. 2015.

[9] Greg Sterling. Nearly 60 Percent of Searches Now from Mobile Devices. http://searchengineland.com/report-nearly-60-percent-searches-now-mobile-devices-255025. Aug. 2016.

[10] Chen Yuan. Chinese Language Processing. Shanghai Education Publishing Company, 1997.

[11] Min Du, Feifei Li, Guineng Zheng, and Vivek Srikumar. "DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning." In: 24th ACM Conference on Computer and Communications Security (CCS). Oct. 2017.

[12] Yuanshun Yao, Bimal Viswanath, Jenna Cryan, Haitao Zheng, and Ben Y. Zhao. "Automated Crowdturfing Attacks and Defenses in Online Review Systems." In: 24th ACM Conference on Computer and Communications Security (CCS). Oct. 2017.

[13] Sepp Hochreiter and Jürgen Schmidhuber. "Long Short-Term Memory." In: Neural Computation 9.8 (Nov. 1997).

[14] Jennifer Valentino-DeVries. What Words Get Misspelled in Web Searches? https://blogs.wsj.com/digits/2010/06/04/what-words-get-misspelled-in-web-searches/. June 2010.

[15] Christopher Mele. Is Wisconsin Really That Hard to Spell? https://www.nytimes.com/2017/05/31/us/misspelled-words-states.html. May 2017.

[16] Marjory Meechan. Google’s Algorithm Update for Misspelled Words: A Big Change for SEO. https://www.morevisibility.com/blogs/seo/googles-algorithm-update-for-misspelled-words-a-big-change-for-seo.html. Dec. 2008.

[17] Xiaoqing Hu. "The Examples Analysis of Chinese-Error Correction Function in Search Engines." In: Library and Information Service Online (2008).

[18] Kirill Levchenko, Neha Chachra, Brandon Enright, Mark Felegyhazi, Chris Grier, Tristan Halvorson, Chris Kanich, Christian Kreibich, He Liu, Damon McCoy, Andreas Pitsillidis, Nicholas Weaver, Vern Paxson, Geoffrey M. Voelker, and Stefan Savage. "Click Trajectories: End-to-End Analysis of the Spam Value Chain." In: 32nd IEEE Symposium on Security and Privacy. May 2011.

[19] VirusTotal. VirusTotal. https://www.virustotal.com. Mar. 2018.

[20] FDA. Public Notification: “Clalis” Contains Hidden Drug Ingredient. https://www.fda.gov/Drugs/ResourcesForYou/Consumers/BuyingUsingMedicineSafely/MedicationHealthFraud/ucm359070.htm. 2015.

[21] Search Engine Market Share. https://netmarketshare.com/search-engine-market-share.aspx. 2018.

[22] Philip Petrescu. Google Organic Click-Through Rates in 2014. https://moz.com/blog/google-organic-click-through-rates-in-2014. 2014.

[23] Eric Sharp. The First Page of Google’s Search Results Is the Holy Grail for Marketers. https://www.protofuse.com/blog/details/first-page-of-google-by-the-numbers/. Apr. 2014.

[24] Fred J. Damerau. "A Technique for Computer Detection and Correction of Spelling Errors." In: Communications of the ACM 7.3 (Mar. 1964).

[25] V. I. Levenshtein. "Binary Codes Capable of Correcting Deletions, Insertions and Reversals." In: Soviet Physics Doklady 10 (Feb. 1966).

[26] Tyler Moore and Benjamin Edelman. "Measuring the Perpetrators and Funders of Typosquatting." In: 14th International Conference on Financial Cryptography and Data Security. Feb. 2010.

[27] Kazuya Kawakami, Chris Dyer, and Phil Blunsom. "Learning to Create and Reuse Words in Open-Vocabulary Neural Language Modeling." In: Annual Meeting of the Association for Computational Linguistics (ACL). July 2017.

[28] Yoon Kim, Yacine Jernite, David Sontag, and Alexander M. Rush. "Character-Aware Neural Language Models." In: 13th AAAI Conference on Artificial Intelligence (AAAI). Feb. 2016.

[29] Martin Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg, Dan Mane, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda Viegas, Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. TensorFlow: Large-Scale Machine Learning on Heterogeneous Systems. 2015. URL: https://www.tensorflow.org/.

[30] Diederik P. Kingma and Jimmy Ba. "Adam: A Method for Stochastic Optimization." In: CoRR abs/1412.6980 (2014). URL: http://arxiv.org/abs/1412.6980.

[31] Sogou Pinyin Input Dictionaries. https://pinyin.sogou.com/dict/. 2018.

[32] Baidu Index. https://zhishu.baidu.com/. Jan. 2018.

[33] Google. Google AdWords. https://adwords.google.com/home/. Jan. 2018.

[34] Google. Google Translate API. https://cloud.google.com/translate. Mar. 2018.

[35] Google. Google Safe Browsing API. https://safebrowsing.google.com/. Mar. 2018.

[36] Yandex. Safe Browsing API. https://tech.yandex.com/safebrowsing/. Mar. 2018.

[37] Spamhaus. Spamhaus. http://www.spamhaus.org/. Mar. 2018.

[38] Baidu. Baidu-International Antivirus. http://antivirus.baidu.com/en/. Mar. 2018.

[39] Nektarios Leontiadis, Tyler Moore, and Nicolas Christin. "A Nearly Four-Year Longitudinal Study of Search-Engine Poisoning." In: 21st ACM Conference on Computer and Communications Security (CCS). Oct. 2014.

[40] Ranker. https://www.ranker.com. Mar. 2018.

[41] Defense News. http://people.defensenews.com/top-100/. Nov. 2017.

[42] Pharmaceutical Spam Keywords. http://www.localseoguide.com/the-ultimate-list-of-pharmaceutical-spam-keywords/. Nov. 2017.

[43] Kaggle. Kaggle Datasets. https://www.kaggle.com/datasets. Nov. 2017.

[44] Pieter Agten, Wouter Joosen, Frank Piessens, and Nick Nikiforakis. "Seven Months’ Worth of Mistakes: A Longitudinal Study of Typosquatting Abuse." In: 22nd Annual Network & Distributed System Security Symposium (NDSS). Feb. 2015.

[45] Mohammad Taha Khan, Xiang Huo, Zhou Li, and Chris Kanich. "Every Second Counts: Quantifying the Negative Externalities of Cybercrime via Typosquatting." In: 36th IEEE Symposium on Security and Privacy. May 2015.

[46] Alexa. Alexa List. https://www.alexa.com/topsites. Nov. 2017.

[47] Janos Szurdi, Balazs Kocso, Gabor Cseh, Jonathan Spring, Mark Felegyhazi, and Chris Kanich. "The Long 'Taile' of Typosquatting Domain Names." In: 23rd USENIX Security Symposium. Aug. 2014.

[48] Google. Google AdWords Keyword Planner. https://support.google.com/adwords/answer/2999770?hl=en. Jan. 2018.

[49] Peter Norvig. Peter Norvig N-grams Dataset. http://norvig.com/ngrams/. Jan. 2018.

[50] Open Office Dictionary. https://extensions.openoffice.org/en/project/us-english-spell-checking-dictionary. Jan. 2018.

[51] Assorted English Words List. https://github.com/dwyl/english-words. Jan. 2018.

[52] John Lawler. An English Word List. http://www-personal.umich.edu/~jlawler/wordlist.html. Mar. 1999.

[53] Michael Hodgdon. Value of Organic First-Page Results. https://www.infront.com/blog/the-infront-blog/2015/06/17/value-of-first-page-google-results. June 2015.

[54] Damon McCoy, Andreas Pitsillidis, Jordan Grant, Nicholas Weaver, Christian Kreibich, Brian Krebs, Geoffrey Voelker, Stefan Savage, and Kirill Levchenko. "PharmaLeaks: Understanding the Business of Online Pharmaceutical Affiliate Programs." In: 21st USENIX Security Symposium. Aug. 2012.

[55] Google. Google Autocomplete Policies. https://support.google.com/websearch/answer/7368877. Mar. 2018.

[56] John P. John, Fang Yu, Yinglian Xie, Arvind Krishnamurthy, and Martin Abadi. "deSEO: Combating Search-Result Poisoning." In: 20th USENIX Security Symposium. Aug. 2011.

[57] Long Lu, Roberto Perdisci, and Wenke Lee. "SURF: Detecting and Measuring Search Poisoning." In: 18th ACM Conference on Computer and Communications Security (CCS). Oct. 2011.

[58] Nektarios Leontiadis, Tyler Moore, and Nicolas Christin. "Measuring and Analyzing Search-Redirection Attacks in the Illicit Online Prescription Drug Trade." In: 20th USENIX Security Symposium. Aug. 2011.

[59] Xiaojing Liao, Chang Liu, Damon McCoy, Elaine Shi, Shuang Hao, and Raheem Beyah. "Characterizing Long-tail SEO Spam on Cloud Web Hosting Services." In: 25th International Conference on World Wide Web (WWW). May 2016.

[60] Peng Wang, Xianghang Mi, Xiaojing Liao, XiaoFeng Wang, Kan Yuan, Feng Qian, and Raheem Beyah. "Game of Missuggestions: Semantic Analysis of Search-Autocomplete Manipulations." In: 25th Annual Network & Distributed System Security Symposium (NDSS). Feb. 2018.

[61] Nick Nikiforakis, Steven Van Acker, Wannes Meert, Lieven Desmet, Frank Piessens, and Wouter Joosen. "Bitsquatting: Exploiting Bit-flips for Fun, or Profit?" In: 22nd International Conference on World Wide Web (WWW). May 2013.

[62] Panagiotis Kintis, Najmeh Miramirkhani, Charles Lever, Yizheng Chen, Rosa Romero-Gomez, Nikolaos Pitropakis, Nick Nikiforakis, and Manos Antonakakis. "Hiding in Plain Sight: A Longitudinal Study of Combosquatting Abuse." In: 24th ACM Conference on Computer and Communications Security (CCS). Oct. 2017.

[63] Sumayah Alrwais, Kan Yuan, Eihal Alowaisheq, Zhou Li, and XiaoFeng Wang. "Understanding the Dark Side of Domain Parking." In: 23rd USENIX Security Symposium. Aug. 2014.

[64] Thomas Vissers, Wouter Joosen, and Nick Nikiforakis. "Parking Sensors: Analyzing and Detecting Parked Domains." In: 22nd Annual Network & Distributed System Security Symposium (NDSS). Feb. 2015.

[65] Najmeh Miramirkhani, Oleksii Starov, and Nick Nikiforakis. "Dial One for Scam: A Large-Scale Analysis of Technical Support Scams." In: 24th Annual Network & Distributed System Security Symposium (NDSS). Feb. 2017.

[66] Zhen Li, Deqing Zou, Shouhuai Xu, Xinyu Ou, Hai Jin, Sujuan Wang, Zhijun Deng, and Yuyi Zhong. "VulDeePecker: A Deep Learning-Based System for Vulnerability Detection." In: 25th Annual Network & Distributed System Security Symposium (NDSS). Feb. 2018.

[67] Vera Rimmer, Davy Preuveneers, Marc Juarez, Tom Van Goethem, and Wouter Joosen. "Automated Website Fingerprinting through Deep Learning." In: 25th Annual Network & Distributed System Security Symposium (NDSS). Feb. 2018.

### APPENDIX

#### A. RNN Comparison to Random Forest and Naive Bayes

We compare the accuracy of non-auto-corrected predictions of our RNN model with random forest and naive Bayes algorithms using two approaches for each algorithm.

**Approach 1:** The first approach directly classifies whether a misspelling string is likely to be non-auto-corrected by Google. The brute-force search results of manually selected categories contain both positive and negative cases, which we use as the training dataset. Since both classification algorithms require fixed-length input vectors, we pad the variable-length words with null values. After training, the algorithms estimate the probability that a given misspelling will be auto-corrected. However, because the ground truth data is generated from relatively few original terms (compared to all possible words in use on the Internet), the algorithms struggle to generalize for misspellings generated from other original terms.

**Approach 2:** The second approach is similar to the one we developed in Section IV. In this approach, we generate a training dataset from dictionary words. The classifier learns the future character distribution based on the prefixes. The entropy of a prediction estimates the likelihood that a misspelling candidate will be automatically corrected.

For misspellings from Alexa top 1,001–10,000 terms, our RNN approach achieves a hitting rate of 38.04% (as shown in Table II). At the same hitting rate on the Alexa top 1K ground truth, we need to collect 127,438 searches with the best predictions from the RNN. When crawling the same number of searches, the naive Bayes model with Approach 1 yields a hit rate of 13.6%. We hypothesize that the naive Bayes model's poor performance stems from the strong dependency between adjacent characters. For Approach 2, naive Bayes achieves a hit rate of 15.2% (likely due to the reduced input size). Since random forests can capture dependencies between input features, the random forest classifier outperforms naive Bayes for both Approach 1 and Approach 2. For Approach 1, the random forest exhibits a hit rate of 29.9%, and for Approach 2, the hit rate is 22.8%, both of which are less efficient than the RNN predictions.