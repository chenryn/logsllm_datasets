# Android Universal Root: Exploiting xPU Drivers

## Presenters
- **Jon Bottarini** (@jon_bottarini)
- **Xingyu Jin** (@1ce0ear)
- **Richard Neal** (@ExploitDr0id)

## Overview
This presentation discusses rooting exploits on Android, including both in-the-wild and internal research. We will also cover the Android Partner Vulnerability Initiative (APVI) and specific vulnerabilities in xPU drivers, particularly focusing on PowerVR GPUs.

## Topics
- **Rooting Exploits on Android**
  - In-the-wild exploits
  - Internal research
- **Android Partner Vulnerability Initiative (APVI)**
  - Launched in late 2020 to address security issues outside of AOSP code.
  - 52 security issues publicly disclosed: [APVI Issue Tracker](https://bugs.chromium.org/p/apvi)

## Old Driver Vulnerabilities
- **mtk-su Exploit**
  - Exploited via XDA Developers.
  - Affected device nodes: `/dev/ion`, `/dev/mtk_cmdq`, `/proc/mtk_cmdq`.

### Reverse Engineering the Exploit
- **CMDQ_IOCTL_EXEC_COMMAND**
  - Sends a buffer of opcodes from user space to the kernel.
  - Opcodes: CMDQ_CODE_ENUM
  - CVE-2020-0069: Restrict access via SELinux policy.

### Lessons Learned
- **GPU Driver: Perfect Local Attack Surface**
  - Unprivileged users cannot be restricted from accessing GPU drivers.
  - GPU drivers export extensive functionality to user space.
  - Mobile GPUs:
    - ARM: Mali
    - Qualcomm: Adreno
    - Imagination Technologies: PowerVR
  - Google received numerous security reports, with only one in 2019.

### PowerVR GPU
- **Market Share and Usage**
  - PowerVR has a significant market share, especially in MediaTek and UniSoc devices.
  - PowerVR GPU is widely used in mobile devices.

### Introduction to Bridge APIs
- **Bridge APIs**
  - Unprivileged users can interact with the PowerVR GPU driver.
  - The driver exports hundreds of kernel functions to user space, known as "Bridge functions."
  - Three steps:
    1. Open device
    2. Send ioctl code and arguments
    3. Get response

### Issues in Bridge APIs
- **Heap Overflow**
  - Example: `PVRSRVBridgeSyncPrimOpTake` (Group ID 2, Function ID 9)
  - Input data structure: `PVRSRV_BRIDGE_IN_SYNCPRIMOPTAKE`
  - Integer overflow in calculating kernel buffer size.
  - Sanity checks are often inadequate, leading to multiple CVEs.

- **Race Condition**
  - Steps:
    1. Create internal kernel object
    2 - Use kernel object for computation
    3. Return a handle to the user
  - Another API:
    1. Find kernel object by handle
    2. Decrement reference count

- **Read Uninitialized Heap Memory**
  - Copy result back to user space without proper initialization.
  - Easy leak of kernel heap pointers, bypassing KASLR.

### Summary of Bridge API Issues
- Other issues include:
  - Reference count overflow
  - Arbitrary stack overflow
  - Unlink UAF
- These bugs are exploitable for rooting PowerVR devices.

### PowerVR Memory Management
- **GPU VA to PA Mapping**
  - PMR (Physical Memory Resource)
  - Corrupt GPU VA mapping to map to arbitrary physical memory.
  - Operate ARM64 IOMMU in a non-standard way (e.g., MIPS).

- **CPU VA to PA Mapping**
  - Reserve physical pages and get PMR handle.
  - Map CPU virtual memory using `mmap`.
  - Track the number of memory mappings for security purposes.

### Pinned Memory
- **Pinned Memory**
  - Used for efficient data transfers between the device and host.
  - Allocate and unpin physical pages using `PVRSRVBridgeDevmemIntPin` and `PVRSRVBridgeDevmemIntUnpin`.

- **CVE-2022-20122**
  - Free arbitrary pages at any time via the Unpin API.
  - Security checks are often bypassed in production.

### Bypassing SELinux
- **opencl.so**
  - Implemented by vendor-specific libraries (e.g., PVR + MTK).
  - Reverse engineering these libraries reveals rigorous security checks in user space.

- **PowerRoot: Rooting Devices**
  - Multiple methods to root devices using CVE-2021-39815.
  - Similar to the dirtypipe vulnerability but more powerful.
  - Search for `task_struct` by name, find `cred` by `task_struct->cred`.
  - Spam files for arbitrary R/W, control ashmem file data.
  - Dump kernel image and overwrite `cred` to gain root access.

### Android Partner Vulnerability Initiative (APVI)
- **Disclosure Process**
  - Launched in late 2020 to address security issues outside of AOSP.
  - Public disclosure and patch advisory: [APVI Issue Tracker](https://bugs.chromium.org/p/apvi)

### Recommendations
- **Driver Developers**
  - Conduct security reviews of driver design and purpose.
  - Implement fuzz testing and code reviews.
  - Lock down to minimal required access.

- **Researchers**
  - Focus on xPU memory-visibility issues.
  - Investigate under-researched areas like PowerVR.
  - Vulnerability research is both interesting and challenging.

### Resources
- **Bug Submission**
  - For bugs affecting Pixel devices: [Google Bug Hunters](https://bughunters.google.com/report)
- **NPU Drivers with Memory Mapping Issues**
  - CVE-2021-1940, CVE-2021-1968, CVE-2021-1969
  - CVE-2020-28343, [Blog](https://www.blackhat.com/docs/eu-17/materials/eu-17-Corina-Difuzzing-Android-Kernel-Drivers.pdf)

---

For more information, follow us on Twitter:
- @BlackHatEvents
- #BHUSA