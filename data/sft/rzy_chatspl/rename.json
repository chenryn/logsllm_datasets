{"input": "", "instruction": "查找包含使用量的日志，列出相关组件，字段名重命名为中文", "output": " \"license usage\" | rename component as '组件'"}
{"input": "命令分布", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "tag:rds_cmd | stats max(rds_cmd.summ.calls) as calls by rds_cmd.cmd |rename rds_cmd.cmd as cmd"}
{"input": "日志易Agent离线监控", "instruction": "日志易agent监控数据，编写查询语句实现如下分析场景", "output": "tag:rizhiyi_agent_status|eval time=formatdate(timestamp)|table time,json.ip,json.last_update_timestamp,json.status|dedup json.ip|rename time as \"发生时间\",json.ip as \"Agent地址\",json.last_update_timestamp as \"上次更新时间\",json.status as \"状态\""}
{"input": "windows告警明细，从 monitor 索引中过滤issue_alert为 true 且is_result_detail为 false 的数据，搜索其中 result.name 字段值以 windows 开头的内容，表格展示其中的时间（可读格式）、告警名称、告警等级、告警结果各列，表格改为中文名", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "_index:monitor ((issue_alert:true AND is_result_detail:false) AND result.resource_groups:pf) AND 'result.name':windows*|eval time=formatdate(timestamp)|table time,alert_name,alert_level,result.result.hits|rename time as \"时间\",alert_name as \"告警名称\",alert_level as \"告警等级\",result.result.hits as \"告警结果\""}
{"input": "tomcat告警详情从 monitor 索引中过滤issue_alert为 true 且is_result_detail为 false 的数据，搜索其中 result.name 字段值以 tomcat 开头的内容，表格展示其中的时间（可读格式）、告警名称、告警等级、告警结果各列，表格改为中文名", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "_index:monitor ((issue_alert:true AND is_result_detail:false) AND result.resource_groups:pf) AND 'result.name':tomcat*|eval time=formatdate(timestamp)|table time,alert_name,alert_level,result.result.hits|rename time as \"时间\",alert_name as \"告警名称\",alert_level as \"告警等级\",result.result.hits as \"告警结果\""}
{"input": "RMAN备份信息", "instruction": "oracle_backup数据，编写查询语句实现如下分析场景", "output": "tag:RMAN_BACKUP_JOB_DETAILS|table bak.COMMAND_ID,bak.START_TIME.START_TIME,bak.END_TIME.END_TIME,bak.TIME_TAKEN_DISPLAY,bak.STATUS,bak.OUTPUT_DEVICE_TYPE,bak.INPUT_BYTES_DISPLAY,bak.OUTPUT_BYTES_DISPLAY,bak.OUTPUT_BYTES_PER_SEC_DISPLAY|dedup  bak.COMMAND_ID,bak.START_TIME.START_TIME,bak.END_TIME.END_TIME,bak.TIME_TAKEN_DISPLAY,bak.STATUS,bak.OUTPUT_DEVICE_TYPE,bak.INPUT_BYTES_DISPLAY,bak.OUTPUT_BYTES_DISPLAY,bak.OUTPUT_BYTES_PER_SEC_DISPLAY  |rename bak.COMMAND_ID as '名称',bak.START_TIME.START_TIME as '开始时间',bak.END_TIME.END_TIME as '结束时间',bak.TIME_TAKEN_DISPLAY as '所用时间',bak.STATUS as '状态',bak.OUTPUT_DEVICE_TYPE as '类型',bak.INPUT_BYTES_DISPLAY as '输入大小',bak.OUTPUT_BYTES_DISPLAY as '输出大小',bak.OUTPUT_BYTES_PER_SEC_DISPLAY as '输出速率（每秒）'"}
{"input": "接收字节最多应用事件趋势表格，按字节数排名前 10 个应用，并使用 sparkline 效果绘制各应用的请求数趋势，sparkline 里按 30 分钟统计一个点", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* session end) AND tag:hillstone firewall.receive_byte:*|eval rcv_=tolong(firewall.receive_byte) | stats sparkline(count(),30m) as count_,sum(rcv_) as rcvbyte by firewall.msg.application |sort by rcvbyte  |rename firewall.msg.application as \"应用\",rcvbyte as \"接收字节\",count_ as \"事件数量\"| limit 10"}
{"input": "事件数最多应用接收字节趋势表格，按事件数排名前 10 个应用，并使用 sparkline 效果绘制各应用的接收字节数趋势，sparkline 里按 30 分钟绘制一个点", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* session end) AND tag:hillstone firewall.receive_byte:*|eval rcv_=tolong(firewall.receive_byte) | stats sparkline(sum(rcv_),30m) as rcv_byte_trend,count() as count_ by firewall.msg.application |rename firewall.msg.application as \"应用\",rcv_byte_trend as \"接收字节趋势\",count_ as \"事件数量\"|limit 10"}
{"input": "业务信息汇总表格，从定时任务索引中获取4 天前的 2 个小时级数据，将count_all字段只保留小数点后三位结果，重命名为字段值；ts1字段改为人类可读格式，并重命名为时间。line字段重命名为字段名。保留 4 行结果展示。", "instruction": "机顶盒日志分析_实时数据，编写查询语句实现如下分析场景", "output": "starttime=\"-96h-2h/h\" endtime=\"-96h/h\"\n_index:schedule schedule_name:StbHealthInfoHourly_1h|sort by timestamp|eval ts1=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\") \n|eval aaa=todouble(count_all)\n|eval bbb=format(\"%.3f\",aaa)\n|table ts1,line,bbb\n|rename ts1 as \"时间\"\n|rename line as \"字段名\"\n|rename bbb as \"字段值\"|limit 4"}
{"input": "从 schedule 索引中搜索 Linux 异常时段登录主机任务的数据，表格列出src_ip,ip,os,type,user,cnt,type字段，按 cnt 排序，并改各列名称为中文。", "instruction": "昨天Linux异常时段登录主机清单", "output": "starttime=\"now/d-1d\" endtime=\"now/d\" _index:schedule schedule_name:Linux异常时段登录主机 |table src_ip,ip,os,type,user,cnt,type |sort by cnt |rename src_ip as \"来源IP\",ip as \"目标主机\",os as \"系统类型\",type as \"登陆方式\",user as \"登录用户\",cnt as \"登录次数\""}
{"input": "主要域名访问量变化", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* * AND (DNS.domain.domain:qq.com OR DNS.domain.domain:baidu.com OR DNS.domain.domain:google.com OR DNS.domain.domain:sina.com OR DNS.domain.domain:sogou.com OR DNS.domain.domain:163.com) | stats sparkline(count(),1h) as count_ by DNS.domain.domain |rename DNS.domain.domain as \"主要域名\", count_ as \"访问量变化\""}
{"input": "从定时任务索引里统计来账交易报文最大耗时", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "_index:schedule schedule_name:农信银支付前置来账耗时 | stats max(cost) as _max by msgid,msgcd,msgNa | sort by _max | rename _max as \"最大耗时\" "}
{"input": "从定时任务索引里统计往账交易报文最大耗时", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "_index:schedule schedule_name:农信银支付前置往账耗时 | stats max(cost) as _max by msgid,msgcd,msgNa | sort by _max | rename _max as \"最大耗时\""}
{"input": "攻击事件目的端口", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* IPS) AND tag:hillstone |rename firewall.* as *,msg.* as *|stats count() as total by dst_interface"}
{"input": "攻击事件来源端口", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* IPS) AND tag:hillstone |rename firewall.* as *,msg.* as *|stats count() as total by src_interface"}
{"input": "OUTPUT_DEVICE_TYPE", "instruction": "oracle_backup数据，编写查询语句实现如下分析场景", "output": "tag:RMAN_BACKUP_JOB_DETAILS|stats count() by bak.OUTPUT_DEVICE_TYPE |rename bak.* as *"}
{"input": "新HAC-堡垒机访问详情", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac AND hac.det.class:SESSION_START\n|stats count() as cnt by hac.det.primary_user,hac.devname,hac.det.dst_ip,hac.det.secondary_user,hac.det.protocol\n| rename hac.det.primary_user as \"访问人\",hac.devname as \"设备名\",hac.det.dst_ip as \"被访问ip\",hac.det.secondary_user as \"使用账号\", hac.det.protocol as \"访问方式\",cnt as \"访问次数\""}
{"input": "新HAC审计使用明细", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac AND hac.det.primary_user:* |stats count() as cnt by hac.det.primary_user,hac.det.dst_ip | rename hac.det.primary_user as \"用户\",hac.det.dst_ip as \"被访问ip\",cnt as \"访问次数\""}
{"input": "运维堡垒系统高危命令审计", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac AND (\"chmod -R 777\" OR \"chmod 777\" OR \"chmod u+x\" OR \"chmod a+x\" OR \"chmod +x\" OR \"chmod u+s\")\n| stats count() as cnt by hac.det.primary_user,hac.det.src_ip,hac.det.dst_ip,hac.det.secondary_user,hac.det.content\n|eval desc=\"HAC用户\"+hac.det.primary_user+\"(\"+hac.det.src_ip+\")使用账号\"+hac.det.secondary_user+\"登录\"+hac.det.dst_ip+\"执行指令：\"+hac.det.content\n|rename hac.det.primary_user as \"用户\",hac.det.src_ip as \"源IP\", hac.det.dst_ip as \"目的IP\",hac.det.secondary_user as \"主机账号\",hac.det.content as \"使用指令\""}
{"input": "最近一天VPN登录地点次数TOP10", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "starttime=\"-1d\" (* VPN 登录) AND tag:hillstone |stats count() as count_ by firewall.src_ip.geo.province,firewall.src_ip.geo.city|limit 10 |rename firewall.src_ip.geo.province as \"省份\", firewall.src_ip.geo.city as \"城市\",count_ as \"登录次数\" "}
{"input": "", "instruction": "我想问的是，有没有同事在上海开会或者出差，他们使用的办公软件是什么？他们的登录IP地址是什么？他们使用的浏览器和操作系统是什么？", "output": "tag:hac AND hac.det.class:SESSION_START hac.det.src_ip.geo.city:上海 | stats count() as cnt by hac.det.primary_user,hac.devname,hac.det.dst_ip,hac.det.secondary_user,hac.det.protocol| rename hac.det.primary_user as \"访问人\",hac.devname as \"设备名\",hac.det.dst_ip as \"被访问ip\",hac.det.secondary_user as \"使用账号\", hac.det.protocol as \"访问方式\",cnt as \"访问次数\""}
{"input": "", "instruction": "“从 monitor 索引中搜索所有具有 issue_alert 为 true 和 is_result_detail 为 false 的结果，并且结果中的 resource_groups 字段值为字符串 ‘pf’，name 字段值开头为 windows；然后评估该筛选器下的每一条记录，并将 timestamp 转换为时间格式化显示；最后将生成的表格中的列名重命名为‘时间’、‘告警名称’、‘告警等级’和‘告警结果’。”", "output": "_index:monitor ((issue_alert:true AND is_result_detail:false) AND result.resource_groups:pf) AND'result.name':windows*|eval time=formatdate(timestamp)|table time,alert_name,alert_level,result.result.hits|rename time as \"时间\",alert_name as \"告警名称\",alert_level as \"告警等级\",result.result.hits as \"告警结果\""}
{"input": "", "instruction": "我想问关于RMAN备份作业的详细信息，并统计不同类型的设备上的备份数量。", "output": "tag:RMAN_BACKUP_JOB_DETAILS|stats count() by bak.OUTPUT_DEVICE_TYPE |rename bak.* as *"}
{"input": "", "instruction": "我想问有关某一天的VPN登录情况以及地区分布的信息", "output": "starttime=\"-1d\" (* VPN 登录) AND tag:hillstone |stats count() as count_ by firewall.src_ip.geo.province,firewall.src_ip.geo.city|limit 10 |rename firewall.src_ip.geo.province as \"省份\", firewall.src_ip.geo.city as \"城市\",count_ as \"登录次数\" "}
{"input": "表格展示 100 条恶意 URL事件详情，表格各列为日期、源 IP、目的 IP、URL、等级、事件类型、状态。索引可用字段包括：timestamp,appname,ip,tag,source,hostname,logtype,tda.src_ip,tda.dst_ip,tda.url,tda.level,tda.event_class,tda.status。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls |limit 100|eval time=formatdate(timestamp)|table time,tda.src_ip,tda.dst_ip,tda.url,tda.level,tda.event_class,tda.status\t|rename time as \"日期/时间戳\",tda.src_ip as \"源IP\",tda.dst_ip as \"目的IP\",tda.url as \"url\",tda.level as \"等级\",tda.event_class as \"事件类型\",tda.status as \"状态\""}
{"input": "表格展示 100 条威胁事件详情，表格包括日期、源 IP、目的 IP、等级、事件类型、状态、检测类型等列。索引可用字段包括：timestamp,appname,ip,tag,source,hostname,logtype,tda.src_ip,tda.dst_ip,tda.level,tda.detect_type,tda.status", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats|limit 100|eval time=formatdate(timestamp)|table time,tda.src_ip,tda.dst_ip,tda.level,tda.detect_type,tda.status\t|rename time as \"日期/时间戳\",tda.src_ip as \"源IP\",tda.dst_ip as \"目的IP\",tda.level as \"等级\",tda.event_class as \"事件类型\",tda.status as \"状态\",tda.detect_type as \"检测类型\""}
{"input": "数据库基本信息，以表格形式展示数据库名、创建时间、系统、登录模式、打开方式。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:database oracle.DB_UNIQUE_NAME:* | table oracle.DB_UNIQUE_NAME,oracle.CREATED,oracle.PLATFORM_NAME,oracle.LOG_MODE,oracle.OPEN_MODE\t|rename oracle.DB_UNIQUE_NAME  as \"数据库名\", oracle.CREATED as \"创建时间\",oracle.PLATFORM_NAME as \"系统\",oracle.LOG_MODE as \"登录模式\",oracle.OPEN_MODE as \"打开方式\""}
{"input": "实例基本信息，以表格形式展示域名、实例名、状态、上次启动时间、实例角色。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:instance oracle.INSTANCE_NAME:*| table oracle.INSTANCE_NAME, oracle.HOST_NAME,  oracle.STARTUP_TIME,oracle.STATUS, oracle.INSTANCE_ROLE|rename oracle.HOST_NAME as '域名', oracle.INSTANCE_NAME as '实例名', oracle.STATUS as '状态', oracle.STARTUP_TIME as '上次启动时间',oracle.INSTANCE_ROLE as '实例角色'"}
{"input": "sga基本信息，以表格形式展示名称、内存大小、空闲内存大小。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:sga oracle.NAME:* | table oracle.NAME,oracle.TOTAL,oracle.FREE|rename oracle.NAME as \"名称\",oracle.TOTAL as \"内存大小\",oracle.FREE as \"空闲内存大小\""}
{"input": "Session信息，以表格形式展示实例名、会话ID、动作、状态、系统用户、事件、登录时间。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "(appname:oracle AND tag:session) oracle.SID:*|table oracle.INSTANCE_NAME,oracle.SID,oracle.ACTION,oracle.STATUS,oracle.OSUSER,oracle.EVENT,oracle.LOGON_TIME\t|rename oracle.INSTANCE_NAME as \"实例名\",oracle.SID as \"会话ID\",oracle.ACTION as \"动作\", oracle.STATUS as \"状态\",oracle.OSUSER as \"系统用户\",oracle.EVENT as \"事件\",oracle.LOGON_TIME as \"登录时间\""}
{"input": "数据库文件IO性能指标，以表格形式展示文件名、最大ioRTM、最大ioWTM、最小ioTIM、平均ioTIM。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:dbfile oracle.FILE_NAME:*| table oracle.FILE_NAME,oracle.MAXIORTM,oracle.MAXIOWTM,oracle.MINIOTIM,oracle.AVGIOTIM|rename oracle.FILE_NAME as \"文件名\",oracle.MAXIORTM as \"最大ioRTM\",oracle.MAXIOWTM as \"最大ioWTM\",oracle.MINIOTIM as \"最小ioTIM\",oracle.AVGIOTIM as \"平均ioTIM\""}
{"input": "数据库系统性能指标，以表格形式展示开始时间、结束事件、域名、实例名、指标、单位、值。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:sys oracle.METRIC_NAME:*|table oracle.BEGIN_TIME,oracle.END_TIME,oracle.HOST_NAME,oracle.INSTANCE_NAME,oracle.METRIC_NAME\t,oracle.METRIC_UNIT,oracle.VALUE|rename oracle.BEGIN_TIME as \"开始时间\",oracle.END_TIME as \"结束时间\",oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME as \"实例名\",oracle.METRIC_NAME as \"指标\",oracle.METRIC_UNIT as \"单位\",oracle.VALUE as \"值\""}
{"input": "资源池连接信息，以表格形式展示域名、实例名、资源池连接数、资源池可连接总数。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:pool oracle.INSTANCE_NAME:*|table oracle.HOST_NAME,oracle.INSTANCE_NAME\t,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.TOTAL_POOLED_CONNECTIONS | rename oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME\t as \"实例名\",oracle.ACTIVE_POOLED_CONNECTIONS as \"资源池连接数\",oracle.TOTAL_POOLED_CONNECTIONS as \"资源池可连接总数\""}
{"input": "数据库大小，以表格形式展示域名、实例名、当前大小。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:database_size oracle.CURRENT_SIZE:*|table oracle.HOST_NAME,oracle.INSTANCE_NAME,oracle.CURRENT_SIZE | rename oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME as \"实例名\",oracle.CURRENT_SIZE as \"当前大小\""}
{"input": "数据库连接次数，以表格形式展示域名、实例名、连接次数。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:connections oracle.CONNECTIONS:*|table oracle.HOST_NAME,oracle.INSTANCE_NAME,oracle.CONNECTIONS|rename oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME as \"实例名\",oracle.CONNECTIONS as \"连接次数\""}
{"input": "数据库用户信息，以表格形式展示域名、实例名、用户名、用户id、创建时间。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:users oracle.USERNAME:*|table oracle.HOST_NAME,oracle.INSTANCE_NAME,oracle.USERNAME,oracle.USER_ID,oracle.CREATED|rename oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME as \"实例名\",oracle.USERNAME as \"用户名\",oracle.USER_ID as \"用户id\",oracle.CREATED as \"创建时间\""}
{"input": "数据库表基本信息，以表格形式展示实例名、表名、表空间名、状态、归属、最大长度、最后一次操作时间。索引可用字段包括：oracle.VALUE,oracle.USER_ID,oracle.USERNAME,oracle.TOTAL_POOLED_CONNECTIONS,oracle.TOTAL,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.STARTUP_TIME,oracle.SID,oracle.PLATFORM_NAME,oracle.OWNER,oracle.OSUSER,oracle.OPEN_MODE,oracle.NAME,oracle.MINIOTIM,oracle.METRIC_UNIT,oracle.METRIC_NAME,oracle.MAX_EXTENTS,oracle.MAXIOWTM,oracle.MAXIORTM,oracle.LOG_MODE,oracle.LOGON_TIME,oracle.LAST_ANALYZED,oracle.INSTANCE_ROLE,oracle.INSTANCE_NAME,oracle.HOST_NAME,oracle.FREE,oracle.FILE_NAME,oracle.EVENT,oracle.END_TIME,oracle.DB_UNIQUE_NAME,oracle.CURRENT_SIZE,oracle.CREATED,oracle.CONNECTIONS,oracle.BEGIN_TIME,oracle.AVGIOTIM,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.ACTION。请仅选用必需字段。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:table oracle.TABLESPACE_NAME:*|table oracle.INSTANCE_NAME,oracle.TABLE_NAME,oracle.TABLESPACE_NAME,oracle.STATUS,oracle.OWNER,oracle.MAX_EXTENTS,oracle.LAST_ANALYZED|rename oracle.INSTANCE_NAME as \"实例名\",oracle.TABLE_NAME as \"表名\",oracle.TABLESPACE_NAME as \"表空间名\",oracle.STATUS as \"状态\",oracle.OWNER as \"归属\",oracle.MAX_EXTENTS as \"最大长度\",oracle.LAST_ANALYZED as \"最后一次操作时间\""}
{"input": "用户在线时长，按用户、来源 IP、登录时间和在线时间统计登录时间的独立数，按在线时间排序，并改为中文字段名。索引可用字段包括：linux.user,linux.src_ip,linux.login_time,linux.use_time,timestamp,appname,ip,tag,hostname,linux.command。请仅使用必需字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:last |stats dc(linux.login_time) by linux.user,linux.src_ip,linux.login_time,linux.use_time|sort by linux.use_time|rename linux.user as \"用户\",linux.src_ip as \"源主机\", linux.login_time as \"登录时间\",linux.use_time as \"在线时间(天+时:分)\""}
{"input": "审计明细表格，时间戳采用人类可读格式，并去掉字段名中共同的audit.前缀。索引可用字段有：appname,tag,ip,hostname,timestamp,audit.OSUSER,audit.USERNAME,audit.PROGRAM,audit.SQL_TEXT,audit.SQL_ID等。请仅使用必需字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit | composite count() by timestamp,audit.OSUSER,audit.USERNAME,audit.PROGRAM,audit.SQL_TEXT,audit.SQL_ID|eval timestamp=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\")|rename audit.* as *"}
{"input": "Oracle_SGA信息", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:sga |eval Time=formatdate(timestamp,\"HH:mm\")|table Time,json.DATAMEMMZL ,json.RZMEMSBL,json.SGA_MEM,json.SJZDKCSBL |eval json.DATAMEMMZL=json.DATAMEMMZL+\"%\" |eval json.SJZDKCSBL=json.SJZDKCSBL+\"%\"|rename json.DATAMEMMZL as \"数据缓存命中率\", json.RZMEMSBL as \"日志缓存命中失败率\", json.SGA_MEM as \"SGA空闲内存大小\", json.SJZDKCSBL as \"数据字典快存失败率\""}
{"input": "Oracle_PGA信息", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle  AND tag:pga |eval Time=formatdate(timestamp,\"HH:mm:ss\")|table Time,json.ALLOC_MEM,json.MAX_MEM,json.PROCESS_COUNT,json.USED_MEM|rename  Time as \"采集时间\", json.ALLOC_MEM as \"PGA的分配量\" , json.MAX_MEM\t as \"PGA的最大量\", json.USED_MEM as \"PGA的使用量\", json.PROCESS_COUNT as  \"PGA的进程数\""}
{"input": "宿主机_虚拟机分布", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:app2 source:VirtualMachine*  | stats dc(json.name) as virt_sum by json.hostname | rename json.hostname as \"esxi宿主机\",virt_sum as \"已创建的创建机\""}
{"input": "虚拟机所在宿主机分布", "instruction": "主中心Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:dmz_master source:VirtualMachine*  | stats dc(json.name) as virt_sum by json.hostname | rename json.hostname as \"esxi宿主机\",virt_sum as \"已创建的创建机\""}
{"input": "宿主机_虚拟机分布[虚拟机数量]", "instruction": "Esxi性能监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:dmz_backup  source:VirtualMachine*  | stats dc(json.name) as virt_sum by json.hostname | rename json.hostname as \"esxi宿主机\",virt_sum as \"已创建的创建机\""}
{"input": "192.168.1.2上administrator用户的 4624 事件详情，最多 200 条，时间用人类可读格式", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "administrator appname:windows tag:security json.event_id:4624 AND 192.168.1.2\n| limit 200\n|eval time=formatdate(timestamp)\n| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event\n|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "223.43.32.31上administrator用户的 4625 事件详情，最多 20 条，时间用人类可读格式", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "administrator appname:windows tag:security json.event_id:4625 AND 223.43.32.31\n| limit 20\n|eval time=formatdate(timestamp)\n| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event\n|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "123.06.123.45上administrator用户的 4626 事件详情，最多 10 条，时间用人类可读格式", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "administrator appname:windows tag:security json.event_id:4626 AND 123.06.123.45\n| limit 10\n|eval time=formatdate(timestamp)\n| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event\n|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "110.120.119.122上administrator用户的 4627 事件详情，最多 5 条，时间用人类可读格式", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "administrator appname:windows tag:security json.event_id:4627 AND 110.120.119.122\n| limit 5\n|eval time=formatdate(timestamp)\n| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event\n|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "202.106.0.20上administrator用户的 4648 事件详情，最多 50 条，时间用人类可读格式", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "administrator appname:windows tag:security json.event_id:4648 AND 202.106.0.20\n| limit 50\n|eval time=formatdate(timestamp)\n| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event\n|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "用户登录详情", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "(* AND appname:yottaweb_audit_log) AND json.action:login|stats sparkline(count(),1h)  as count_ by json.user_name|rename json.user_name as \"用户名\",count_ as \"次数\""}
{"input": "最近系统负荷", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:top_info_system_stats | limit 1 | table json.Load.load1,json.Load.load5,json.Load.load15|rename json.Load.load1 as load1,json.Load.load5 as load5,json.Load.load15 as load15"}
{"input": "磁盘使用情况", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:top_info_disk_stats |dedup 1 json.disk.path | stats max(json.disk.total) as total1,max(json.disk.used) as used1,max(json.disk.used_percent) as percent1 by json.disk.path|eval free1=total1-used1|eval total=format(\"%.2fG\",total1/1024/1024/1024)|eval used=format(\"%.2fG\",used1/1024/1024/1024)|eval free=format(\"%.2fG\",free1/1024/1024/1024)|eval percent=format(\"%.2f\",percent1)|rename json.disk.path as path"}
{"input": "最耗cpu进程top10", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:top_info_proc_stats  | dedup 1 json.cmdline | table json.create_time,json.pid,json.cmdline,json.cpu_percent,json.mem.rss,json.state,json.username|rename json.create_time as create_time,json.pid as pid,json.cmdline as cmd,json.cpu_percent as cpu_percent,json.mem.rss as mem,json.state as state,json.username as user|sort by cpu_percent |limit 10"}
{"input": "", "instruction": "我要找关于Oracle数据库的性能监控数据。", "output": "appname:oracle  AND tag:pga |eval Time=formatdate(timestamp,\"HH:mm:ss\")|table Time,json.ALLOC_MEM,json.MAX_MEM,json.PROCESS_COUNT,json.USED_MEM|rename  Time as \"采集时间\", json.ALLOC_MEM as \"PGA的分配量\", json.MAX_MEM  as \"PGA的最大量\", json.USED_MEM as \"PGA的使用量\", json.PROCESS_COUNT as  \"PGA的进程数\""}
{"input": "", "instruction": "我想问关于 vSphere 中 appname 为 vsphere、tag 为 dmz_master 源自 VirtualMachine* 的数据，并统计各个虚拟机所在的数据中心数量和汇总结果，最后将 esxi 宿主名改为 “esxi 宿主” 和 已创建的虚拟机数改为“已创建的虚拟机”。", "output": "appname:vsphere tag:dmz_master source:VirtualMachine*  | stats dc(json.name) as virt_sum by json.hostname | rename json.hostname as \"esxi宿主机\",virt_sum as \"已创建的创建机\""}
{"input": "", "instruction": "我想问的是，上周六凌晨两点多的时候，我的电脑屏幕突然亮起了一行字：“应用已被锁定”。然后系统自动地把我导向了一个登录界面，要求输入密码。这个时候我就不知道该怎么办了，因为我并没有弄清楚这是为什么或者谁做的这件事情。我很担心自己的资料安全，所以我打算咨询一下您能不能帮忙找出最近一次对我的这种行为的记录，以便于我检查是否有必要担心。", "output": "administrator appname:windows tag:security json.event_id:4626 AND 123.06.123.45| limit 10|eval time=formatdate(timestamp)| table time,json.computer_name,json.event_id,json.event_data.IpAddress,json.event_data.SourceAddress,json.event_data.DestAddress,datetime, json.username,json.event_data.SubjectUserName,json.message.event|rename time as \"时间\",json.event_data.TargetUserName as \"登陆用户\",json.computer_name as \"计算机名\",json.level as \"日志级别\",json.event_id as \"事件id\",json.message.event as \"详细信息\",json.event_data.SourceAddress as ip_addr,json.event_data.SubjectUserName as json.username,json.event_data.IpAddress as ip_addr,json.event_data.DestAddress as dst_ip"}
{"input": "", "instruction": "我想询问有关某些应用的登录活动情况，并且希望通过使用 Sparklines 生成图表以更好地了解数据趋势。", "output": "(* AND appname:yottaweb_audit_log) AND json.action:login|stats sparkline(count(),1h)  as count_ by json.user_name|rename json.user_name as \"用户名\",count_ as \"次数\""}
{"input": "", "instruction": "我想知道你的磁盘空间使用情况。你能告诉我吗？", "output": "* AND appname:top_info_disk_stats |dedup 1 json.disk.path | stats max(json.disk.total) as total1,max(json.disk.used) as used1,max(json.disk.used_percent) as percent1 by json.disk.path|eval free1=total1-used1|eval total=format(\"%.2fG\",total1/1024/1024/1024)|eval used=format(\"%.2fG\",used1/1024/1024/1024)|eval free=format(\"%.2fG\",free1/1024/1024/1024)|eval percent=format(\"%.2f\",percent1)|rename json.disk.path as path"}
{"input": "", "instruction": "我想要知道我的电话状态和余额，你能帮我查一下吗？我想知道最近的十条流水记录。我怀疑有人偷拍了我，所以希望能够看到所有的交易信息。", "output": "appname:top_info_proc_stats  | dedup 1 json.cmdline | table json.create_time,json.pid,json.cmdline,json.cpu_percent,json.mem.rss,json.state,json.username|rename json.create_time as create_time,json.pid as pid,json.cmdline as cmd,json.cpu_percent as cpu_percent,json.mem.rss as mem,json.state as state,json.username as user|sort by cpu_percent |limit 10"}
{"input": "P2P流媒体使用次数前 10 名。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析需求", "output": "appname:ac tag:sangfor ac.msg.serv:P2P\n|stats count() by ac.msg.user\n \n|limit 20 \n|rename ac.msg.user as user"}
{"input": "审计_访问资源最频繁用户top10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |stats count() by user | limit 10"}
{"input": "聊天工具使用次数top20。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:IM OR ac.msg.app:移动QQ OR ac.msg.app:微信\n|stats count() by ac.msg.user\n \n|limit 20 \n|rename ac.msg.user as user"}
{"input": "购物理财社交top20。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:*购物* OR ac.msg.app:*购物* OR ac.msg.serv:金融行情 OR ac.msg.serv:社交网络 OR ac.msg.serv:微博 OR ac.msg.serv:金融交易 OR ac.msg.serv:互联网金融\n|stats count() by ac.msg.user\n \n|limit 20 \n|rename ac.msg.user as user"}
{"input": "游戏top20用户。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:游戏\n|stats count() by ac.msg.user\n \n|limit 20 \n|rename ac.msg.user as user"}
{"input": "审计_访问资源源地址TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |stats count() by src_ip | limit 10"}
{"input": "操作堡垒机最频繁用户TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * |stats count() by user | limit 10"}
{"input": "频繁操作失败用户TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) fortress.request_msg:* fortress.result:*失败*\n| rename fortress.* as * \n|stats count() by user | limit 10"}
{"input": "堡垒机操作行为TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * |stats count() by action | limit 10"}
{"input": "目的端口-TOP10。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.event_type:session\n|rename a10.* as *\n| stats count() by dst_port\n \n|limit 10"}
{"input": "会话源IP-TOP10。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.event_type:session\n|rename a10.* as *\n| stats count() by src_ip\n \n|limit 10"}
{"input": "被访问失败TOP20的IP。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399\n|rename loadblancing.* as *\n| stats count() by dst_ip\n\n|limit 20"}
{"input": "访问失败次数TOP20源IP。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399\n|rename loadblancing.* as *\n| stats count() by src_ip\n\n|limit 20"}
{"input": "手机应用使用次数TOP20。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:移动终端应用\n|stats count() by ac.msg.user\n \n|limit 20 \n|rename ac.msg.user as user"}
{"input": "邮件监控_阻断发送收件人TOP10。索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \n| stats count() by dlp.recv_mail |rename dlp.recv_mail as \"收件人\"|limit 10"}
{"input": "存在威胁uri_TOP10。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" \n| stats count() by atv.uri\n |rename atv.uri as \"uri\",cnt as \"次数\"\n|limit 10"}
{"input": "最常发生威胁时机TOP10。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" \n| stats count() by atv.circumstances\n |rename atv.circumstances as \"威胁发生原由\",cnt as \"次数\"\n|limit 10"}
{"input": "来源IP请求量TOP10。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware |stats count() by middleware.clientip  |limit 10|rename middleware.clientip as src_ip"}
{"input": "前台正在发出的SQL语句。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:session_status|stats count() as ct  by oracle.SQL_ID,oracle.MACHINE,oracle.USERNAME,oracle.SQL_TEXT,oracle.WAIT_TIME|sort by ct\n|rename oracle.USERNAME as \"用户名\",oracle.MACHINE as \"hostname\",oracle.SQL_TEXT as \"SQL详情\",oracle.SQL_ID as SQL_id,ct as \"次数\",oracle.WAIT_TIME \tas wait_time"}
{"input": "使用频率最高的10个查询。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:sql_exec_rank | stats count() as ct  by oracle.SQL_ID,oracle.EXECUTIONS,oracle.SQL_TEXT|sort by ct|limit 10\n|rename oracle.CHILD_NUMBER as CHILD_NUMBER,oracle.CPU_TIME as \"CPU使用时长\",oracle.DISK_READS as \"磁盘读取\",oracle.ELAPSED_RANK as \"运行级别\",oracle.SQL_TEXT as \"SQL详情\",oracle.SQL_ID as SQL_id,ct as \"次数\",oracle.ELAPSED_TIME as \"运行时长\""}
{"input": "审计_被访问最频繁资源TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |stats count() as cnt by dst_ip,sys_name|sort by cnt | limit 10"}
{"input": "操作堡垒机TOP10用户_账号_次数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * |stats count() as cnt by user,login_user|sort by cnt | limit 10"}
{"input": "会话目的IP_服务器IP-TOP10。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.event_type:session\n|rename a10.* as *\n| stats count() as cnt by dst_ip,server_ip\n|sort by cnt \n|limit 10"}
{"input": "使用最频繁的SQL语句TOP20。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.sql | sort by cnt | limit 20 | rename db.sql as \"SQL语句\",cnt as \"使用次数\""}
{"input": "最近一天发现病毒一览表。索引中可用字段有：appname,tag,logtype,hostname,ip,source,timestamp,antivirus.action,antivirus.dst,antivirus.virus,antivirus.path,antivirus.result,antivirus.host,antivirus.threat,antivirus.file,antivirus.domain,antivirus.os等。请按需选择字段使用。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "starttime=\"-1d\" appname:antivirus tag:ruixing | eval time=formatdate(timestamp,\"MMM-dd HH:mm\") | table time,antivirus.dst_ip,antivirus.dst_host,antivirus.virus_type,antivirus.virus_name,antivirus.action,antivirus.file_path,antivirus.file_name|rename antivirus.dst_ip as \"感染主机ip\",antivirus.dst_host as \"感染主机名\",antivirus.virus_type as \"威胁类型\",antivirus.virus_name as \"威胁名称\",antivirus.action as \"操作\",antivirus.file_path as \"文件路径\",antivirus.file_name as \"文件名称\""}
{"input": "登陆详情。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,TDX.TDX_ID_XT_LOGINID,TDX.TDX_ID_XT_CLIENT,TDX.CLIENT_IP,TDX.DEPARTMENT,TDX.REQUEST_TYPE,TDX.TDX_ID_XT_AUTH_INFO | rename TDX.TDX_ID_XT_LOGINID as \"登录ID\",TDX.TDX_ID_XT_CLIENT as \"登录用户\",TDX.CLIENT_IP as \"客户IP\",TDX.DEPARTMENT as \"营业部\",TDX.REQUEST_TYPE as \"处理结果\",TDX.TDX_ID_XT_AUTH_INFO as \"认证信息\""}
{"input": "报盘详情。索引可用字段有：uf.log_type, uf.message, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   uf.log_type:调试  营业部|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table  time,'uf.kv.营业部','uf.kv.申报营业部',uf.message | rename uf.* as *,kv.* as *"}
{"input": "错误事件详情。索引可用字段有：uf.log_type, uf.message, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   uf.log_type:错误\n|eval time=formatdate(timestamp,\"MM-dd HH:mm\") \n| table  time,uf.message \n| rename uf.* as *,kv.* as *"}
{"input": "获取席位详情。索引可用字段有：uf.log_type, uf.message, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   uf.log_type:调试 席位\n|eval time=formatdate(timestamp,\"MM-dd HH:mm\") \n| table  time,'uf.kv.席位号','uf.kv.席位属性','uf.kv.申报号获取模式',uf.message \n| rename uf.* as *,kv.* as *"}
{"input": "操作命令审计。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.user:${user}* fortress.input:*${comm}* fortress.log_type:session_command_log \n|eval time=formatdate(timestamp,\"HH:mm\")\n|rename fortress.* as * \n| table time,user,system_user,input,risk_level,session"}
{"input": "kernel告警详情。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "(appname:esxi AND tag:vmkwarning)  |rename esxi.* as * | table time,cpu,kernel_module,message"}
{"input": "操作审计。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  fortress.action:*${action}*\n|eval tt=formatdate(timestamp,\"HH:mm\") \n|rename fortress.* as *\n|rename kv.* as *\n| table tt,'操作类型',user,src_ip,host_ip,host_user,action\n|rename tt as \"时间\",user as \"运维用户\",src_ip as \"源IP\",host_ip as \"操作主机IP\",host_user as \"主机用户\",action as \"操作\""}
{"input": "区域访问详情。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei)  ('firewall.msg.source-zone':* OR 'firewall.msg.源域':* OR firewall.src_zone:*)\n|rename firewall.* as *\n|rename msg.* as *\n|rename time as \"时间\",'源域' as '源安全区域','目的域' as '目的安全区域',src.geo.city as '源地区',dst.geo.city as '目的地区',src_ip as '源地址',dst_ip as '目的地址',user as '用户',src_port as '源端口',dst_port as '目的端口','application-name' as '应用','destination-zone' as '目的安全区域','source-zone' as '源安全区域',dst_zone as '目的安全区域',src_zone as '源安全区域'\n| table '时间','源安全区域','目的安全区域','源地区','目的地区','源地址','目的地址','用户','源端口','目的端口','应用'"}
{"input": "警告事件详情。索引可用字段有：emc.login_detail.Username, emc.result, emc.severity, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DellEMC数据，编写查询语句实现如下分析场景", "output": "appname:emc tag:dell  emc.severity:alert\n| eval t=formatdate(timestamp,\"MM-dd HH:mm:ss\")\n|rename emc.* as *\n|table t,severity,event_id,user,message\n| rename t as \"时间\",severity as \"事件等级\",log_type as \"事件类型\",source as \"源\",event_id as \"事件ID\",src_sp as \"源sp\",message as \"事件详情\",user as \"用户名\""}
{"input": "100 条关联事件详情，用表格展示日期、严重性、威胁描述、威胁类型、主机、受控网络、协议和 ICID 字段。索引中可用字段有：timestamp,appname,ip,tag,source,hostname,logtype,tda.level,tda.threats_desc,tda.threats_type,tda.host,tda.net,tda.proto,tda.ICID等。。索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':correlated_incidents|limit 100|eval time=formatdate(timestamp)|table time,tda.level,tda.threats_desc,tda.threats_type,tda.host,tda.net,tda.proto,tda.ICID|rename time as \"日期/时间戳\",tda.level as \"检测严重性\",tda.threats_desc as \"威胁描述\",tda.threats_type as \"威胁类型\",tda.host as \"感兴趣的主机\",tda.net as \"受监控网络\",tda.proto as \"协议\",tda.ICID as \"ICID\""}
{"input": "前 100 条风险详情，只展示时间的分钟和秒。索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "HIDS_安全狗数据，编写查询语句实现如下分析场景", "output": "appname:hids tag:safedog  hids.event_type:*Risk  \n|limit 100 \n| eval time=formatdate(timestamp,\"HH:mm\")\n|table time,hids.localIp,hids.level,hids.kbname,hids.desc\n|rename hids.localIp as \"风险IP\",hids.level as \"风险等级\",hids.kbname as kbname,hids.desc as \"风险描述\""}
{"input": "堡垒机登陆列表xwin。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec ) \"BLJPri xwin\" sessiontype=login|eval timestamp=formatdate(timestamp,\"yyyy/MM/dd HH:mm:ss\")|table timestamp,fortress.user,fortress.src_ip,fortress.msg.mode,fortress.system_user,fortress.msg.srvaddr|rename  fortress.user as \"堡垒机用户\",fortress.src_ip as \"堡垒机地址\",fortress.msg.mode as  \"登陆方式\",fortress.system_user as \"登陆用户\",fortress.msg.srvaddr as \"服务器地址\""}
{"input": "ArrayVpn访问明细，列出时间、用户名、源地址、目的地之、协议和msg详细信息。时间采用人类可读格式。。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|eval time = formatdate(timestamp)|table time,vpn.kv.user,vpn.src_ip,vpn.dst_ip,vpn.kv.proto,vpn.kv.msg| rename time as \"时间\",vpn.kv.user as \"用户名\",vpn.src_ip as \"源地址\",vpn.dst_ip as \"目的地址\",vpn.kv.proto as \"协议\",vpn.kv.msg as \"详细信息\""}
{"input": "事件描述。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:fortinet | eval ts=formatdate(timestamp,\"MM-dd HH:mm:ss\")|table ts,waf.kv.status,waf.kv.msg \t| rename ts as  \"时间\",waf.kv.status as \"状态\",waf.kv.msg as \"描述\""}
{"input": "攻击事件来源系统及浏览器分析。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:fortinet | eval ts=formatdate(timestamp,\"MM-dd HH:mm:ss\")|table ts,waf.kv.status,waf.kv.msg \t| rename ts as  \"时间\",waf.kv.status as \"状态\",waf.kv.msg as \"描述\""}
{"input": "登录明细。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor_0trust  (vpn.event_name:auth OR vpn.event_name:login OR vpn.event_name:logout)\n|eval tt=formatdate(timestamp)\n|table tt,vpn.user_name,vpn.event_name,vpn.src_ip,vpn.result,vpn.msg\n|sort by +tt\n|rename tt as \"时间\",vpn.user_name as \"账号\",vpn.src_ip as \"用户IP\",vip as \"内网VIP\",vpn.result as \"返回状态\",vpn.event_name as \"操作动作\""}
{"input": "接收字节最多应用事件趋势表格，按接收字节数展示前 5 名，并使用 sparkline 效果绘制各应用的请求数趋势，sparkline 里按 60 分钟统计一个点。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Firewall PaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(count(),60m) as count_,sum(rcv_) as rcvbyte by firewall.application_type |sort by rcvbyte  |rename firewall.application_type as \"应用\",rcvbyte as \"接收字节\",count_ as \"事件数量\"| limit 5"}
{"input": "接收字节最多应用事件趋势表格，按接收字节数展示前 10 名，并使用 sparkline 效果绘制各应用的请求数趋势，sparkline 里按 30 分钟统计一个点。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Firewall PaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(count(),30m) as count_,sum(rcv_) as rcvbyte by firewall.application_type |sort by rcvbyte  |rename firewall.application_type as \"应用\",rcvbyte as \"接收字节\",count_ as \"事件数量\"| limit 10"}
{"input": "事件数最多应用接收字节趋势表格，按事件数展示前 5 名，并使用 sparkline 效果绘制各应用的接收字节数趋势，sparkline 里按 60 分钟统计一个点。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Firewall PaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(sum(rcv_),60m) as rcv_byte_trend,count() as count_ by firewall.application_type |rename firewall.application_type as \"应用\",rcv_byte_trend as \"接收字节趋势\",count_ as \"事件数量\"|limit 5"}
{"input": "事件数最多应用接收字节趋势表格，按事件数展示前 10 名，并使用 sparkline 效果绘制各应用的接收字节数趋势，sparkline 里按 30 分钟统计一个点。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Firewall PaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(sum(rcv_),30m) as rcv_byte_trend,count() as count_ by firewall.application_type |rename firewall.application_type as \"应用\",rcv_byte_trend as \"接收字节趋势\",count_ as \"事件数量\"|limit 10"}
{"input": "访问资源失败详情前 10 条，展示内容为资源名称、失败原因、失败次数、时间、访问用户。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor_0trust  vpn.event_name:access_resource vpn.result:FAILED\n|table  vpn.time,vpn.user_name,vpn.resource_name,vpn.app.web.request.url,vpn.reason|sort by cnt |limit 10|rename vpn.resource_name as \"资源名称\",vpn.app.web.request.url as \"url\",vpn.reason as \"失败原因\",cnt as \"失败次数\",vpn.time as \"时间\",vpn.user_name as \"访问用户\""}
{"input": "DNS请求状态统计，取前四名，并为统计结果各字段重命名为数量、查询状态、占百分比。。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS |top 4 DNS.status | rename count as \"数量\",DNS.status as \"查询状态\",percent as \"占百分比\""}
{"input": "PaloAlto_策略拒绝源IP_top10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:deny |top 10 firewall.src_ip |rename firewall.src_ip as \"策略拒绝源IP\""}
{"input": "PaloAlto_策略拒绝访问目的城市TOP10百分比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:deny |top 10 firewall.dst.geo.city | rename firewall.dst.geo.city as \"目的城市\""}
{"input": "飞塔日志等级统计前 10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall tag:fortinet | top 5 firewall.level|rename firewall.level as level "}
{"input": "飞塔应用分析-风险级别top10 分布。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl| top 10 firewall.apprisk |rename firewall.apprisk as firewall.kv.apprisk "}
{"input": "飞塔应用控制-大类别top10 分布。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall tag:fortinet  AND firewall.subtype:app-ctrl|top 10  firewall.appcat|rename firewall.appcat as firewall.kv.appcat"}
{"input": "飞塔应用控制-低级类别top10 分布。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl|top 10 firewall.kv.app|rename firewall.app as firewall.kv.app"}
{"input": "来源IP访问流量TOP10。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware|stats sum(middleware.resp_len) as len by middleware.clientip|sort by len|limit 10 |rename middleware.clientip as src_ip"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "VPN数据经纬度统计", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other  NOT vpn.result:failure  | table vpn.src.geo.ip,vpn.src.geo.longitude,vpn.src.geo.latitude,vpn.dst.geo.ip,vpn.dst.geo.longitude,vpn.dst.geo.latitude,vpn.src.geo.city  |rename vpn.src.geo.ip as \"源ip\",vpn.src.geo.longitude as \"源地址经度\",vpn.src.geo.latitude as \"源地址纬度\",vpn.dst.geo.ip as \"目的ip\",vpn.dst.geo.longitude as \"目的地址经度\",vpn.dst.geo.latitude as \"目的地址纬度\",vpn.src.geo.city as \"源城市\",cnt as \"次数\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux安全事件详情", "output": "appname:linux tag:secure|table linux.event_name,linux.type,linux.pid,linux.src_ip,linux.user|rename linux.event_name as \"linux事件\",linux.type as \"操作类型\",linux.pid as \"进程号\",linux.src_ip as \"源ip\",linux.user as \"用户\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux最新十分钟在线用户明细", "output": "appname:linux tag:who |table linux.user,linux.terminal,linux.src_ip,linux.login_time|rename linux.user as \"用户\",linux.terminal as \"终端\",linux.src_ip as \"源IP\",linux.login_time as \"登录时间\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录成功详情，使用人类可读格式展示时间，时间正序排序。除时间外，表格内还展示 IP地址、主机名、认证方式、用户、来源地址等列。表头使用中文名称", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |eval time=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\") |sort by +time |table time,ip,hostname,type,user,src_ip |rename time as \"时间\",ip as \"IP地址\",hostname as \"主机名\",type as \"认证方式\",user as \"用户\",src_ip as \"来源地址\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录失败详情，使用人类可读格式展示时间，时间正序排序。除时间外，表格内还展示 IP地址、主机名、认证方式、用户、来源地址等列。将英文列名重命名为中文", "output": "appname:linux tag:secure AND event_name:登录失败事件 (\"Failed password for\"  OR \"authentication failure\") |eval time=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\") |sort by +time |table time,ip,hostname,type,user,src_ip |rename time as \"时间\",ip as \"IP地址\",hostname as \"主机名\",type as \"认证方式\",user as \"用户\",src_ip as \"来源地址\""}
{"input": "", "instruction": "从rizhiyi中查询主机磁盘最大IO时间占比", "output": "appname:rizhiyi tag:manager_metrics  |stats max('os_io_utils./') as max_os_io_utils_root,max('os_io_utils./data') as max_os_io_utils_data by hosts |sort by +hosts |rename hosts as \"IP地址\",max_os_io_utils_root as \"/目录IO时间占比\",max_os_io_utils_data as \"/data目录IO时间占比\""}
{"input": "节点过期提醒。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.message:* | eval time=formatdate(timestamp,\"MM-dd HH:mm\")|table time,fortress.message|rename fortress.message as \"消息详情\""}
{"input": "入侵事件表格，展示时间、来源地址端口、动作、事件类型、URL、状态码和日志级别。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status |rename time as \"时间\", waf.message.src_ip.geo.ip as \"源ip\", waf.message.src_port as \"源端口\", waf.message.action as \"动作\", waf.message.event as \"事件类型\", waf.url as \"url地址\", waf.message.threaten as \"日志级别\", waf.message.status as \"状态码\""}
{"input": "入侵事件报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status|rename time as \"时间\"|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.src_port as \"源端口\"|rename waf.message.action as \"动作\"|rename waf.message.event as \"事件类型\"|rename waf.url as \"url地址\"|rename waf.message.threaten as \"日志级别\"\t|rename waf.message.status as \"状态码\"\t\t\t\t\t"}
{"input": "安全事件提交的关键指标，时间采用人类可读格式。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat\n|table timestamp,waf.src_ip,waf.src_port,waf.dst_ip,waf.dst_port,waf.method,waf.uri | eval timestamp=formatdate(timestamp,\"yyyy/MM/dd HH:mm:ss\")| rename timestamp as \"时间\",waf.src_ip as \"源IP\",waf.src_port as \"源端口\",waf.dst_ip as \"目标IP\",waf.dst_port as \"目标端口\",waf.method as \"请求方式\",waf.uri as \"请求URL\""}
{"input": "安全事件提交的关键指标，字段名改为中文。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat\n|table timestamp,waf.src_ip,waf.src_port,waf.dst_ip,waf.dst_port,waf.method,waf.uri | eval timestamp=formatdate(timestamp,\"yyyy/MM/dd HH:mm:ss\")| rename timestamp as \"时间\",waf.src_ip as \"源IP\",waf.src_port as \"源端口\",waf.dst_ip as \"目标IP\",waf.dst_port as \"目标端口\",waf.method as \"请求方式\",waf.uri as \"请求URL\""}
{"input": "数据库_mssql_性能计数器详情。索引可用字段有：sqlserver.DBName, sqlserver.HostName, sqlserver.LastBatch, sqlserver.Login, sqlserver.Status, sqlserver.cntr_type, sqlserver.cntr_value, sqlserver.counter_name, sqlserver.cpu_count, sqlserver.hyperthread_ratio, sqlserver.instance_name, sqlserver.num_of_statment, sqlserver.object_name, sqlserver.objectid, sqlserver.physical_memory, sqlserver.text, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "数据库_mssql_数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:perf sqlserver.object_name:*|table sqlserver.object_name,sqlserver.instance_name,sqlserver.counter_name,sqlserver.cntr_value,sqlserver.cntr_type|rename sqlserver.object_name as \"计数器类别\",sqlserver.instance_name as \"计数器实例名\",sqlserver.counter_name as \"计数项目\",sqlserver.cntr_value as \"值\",sqlserver.cntr_type as \"类型\""}
{"input": "数据库_mssql_高消耗sql。索引可用字段有：sqlserver.DBName, sqlserver.HostName, sqlserver.LastBatch, sqlserver.Login, sqlserver.Status, sqlserver.cntr_type, sqlserver.cntr_value, sqlserver.counter_name, sqlserver.cpu_count, sqlserver.hyperthread_ratio, sqlserver.instance_name, sqlserver.num_of_statment, sqlserver.object_name, sqlserver.objectid, sqlserver.physical_memory, sqlserver.text, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "数据库_mssql_数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:perf sqlserver.objectid:*|eval avg_=sqlserver.total_cpu_time/sqlserver.num_of_statment|table sqlserver.text,sqlserver.num_of_statment ,avg_|rename sqlserver.text as \"sql语句\",sqlserver.num_of_statment as \"请求次数\" ,avg_ as \"平均耗时\""}
{"input": "数据库_mssql_可用资源及其已占用资源的有用杂项信息。索引可用字段有：sqlserver.DBName, sqlserver.HostName, sqlserver.LastBatch, sqlserver.Login, sqlserver.Status, sqlserver.cntr_type, sqlserver.cntr_value, sqlserver.counter_name, sqlserver.cpu_count, sqlserver.hyperthread_ratio, sqlserver.instance_name, sqlserver.num_of_statment, sqlserver.object_name, sqlserver.objectid, sqlserver.physical_memory, sqlserver.text, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "数据库_mssql_数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:perf sqlserver.cpu_count:*|table sqlserver.cpu_count,sqlserver.hyperthread_ratio,sqlserver.physical_memory, sqlserver.virtual_memory , sqlserver.committed_kb,sqlserver.committed_target_kb,sqlserver.visible_target_kb,sqlserver.max_workers_count,sqlserver.sqlserver_start_time|rename sqlserver.cpu_count as \"系统的逻辑CPU数\",sqlserver.hyperthread_ratio as \"逻辑内核数与物理内核数的比\",sqlserver.physical_memory as \"物理内存\",sqlserver.virtual_memory as \"虚拟内存\",sqlserver.committed_kb as \"缓存池已提交内存页数\",sqlserver.committed_target_kb as \"缓存池目标内存页数\",sqlserver.visible_target_kb as \"进程虚拟地址空间可用内存页数\",sqlserver.max_workers_count as \"最大工作线程数\",sqlserver.sqlserver_start_time as \"启动时间\"  "}
{"input": "数据库_mssql_数据库连接情况。索引可用字段有：sqlserver.DBName, sqlserver.HostName, sqlserver.LastBatch, sqlserver.Login, sqlserver.Status, sqlserver.cntr_type, sqlserver.cntr_value, sqlserver.counter_name, sqlserver.cpu_count, sqlserver.hyperthread_ratio, sqlserver.instance_name, sqlserver.num_of_statment, sqlserver.object_name, sqlserver.objectid, sqlserver.physical_memory, sqlserver.text, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "数据库_mssql_数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:connect | table sqlserver.Login,sqlserver.DBName,sqlserver.HostName,sqlserver.Status,sqlserver.LastBatch |rename sqlserver.Login as \"登录名\",sqlserver.DBName as \"连接数据库名\",sqlserver.HostName as \"用户主机名\",sqlserver.Status as \"连接状态\",sqlserver.LastBatch as \"最后一次操作时间\""}
{"input": "catalina。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_tomcat_数据，编写查询语句实现如下分析场景", "output": "appname:middleware tag:tomcat  middleware.event_type:*|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,middleware.event_type,middleware.thread,middleware.message|rename middleware.event_type as \"等级\", middleware.thread  as \"进程\",middleware.message as \"详情\""}
{"input": "同个源地址针对不同目的地址的同一端口进行扫描。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa| stats dc(firewall.dst_ip) as a by firewall.src_ip,firewall.dst_port |rename firewall.src_ip as \"源地址\",firewall.dst_port as \"目的端口号\",a as \"同个源地址针对不同目的地址的同一端口次数\""}
{"input": "某一目的地址的某一端口被扫描次数。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa| stats dc(firewall.src_ip) as a by firewall.dst_ip,firewall.dst_port | rename a as \"多个源地址对这一目的地址的这一端口进行扫描的次数\",firewall.dst_ip as \"目的地址\",firewall.dst_port as \"目的端口\""}
{"input": "事件详情。索引可用字段有：router.action, router.auth_result, router.device_name, router.error_msg, router.event_type, router.intf, router.intf_status, router.log_message, router.log_type, router.message, router.module, router.module_name, router.severity, router.src_ip, router.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "cisco_router_数据，编写查询语句实现如下分析场景", "output": "appname:router tag:cisco|eval time=formatdate(timestamp,\"MMM-dd HH:mm\")|table time,router.log_message,router.log_type|rename router.log_message as \"时间详情\",router.log_type as \"事件等级\""}
{"input": "微投线程号关联流水号。索引可用字段有：glory.exectime, glory.gluri, glory.orderno, glory.printno, glory.senduri, glory.servicename, glory.threadnum, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "appname:glory AND  glory.orderno:* |table glory.threadnum, glory.orderno |rename glory.orderno as \"第三方流水号\",glory.threadnum as \"线程号\""}
{"input": "web各接口执行时间列表，以 middleware.action字段值为结束准，获取middleware.latency字段值为执行时间，单位为 ms。并将时间戳转换为 yyyy-MM-dd HH:mm:ss,SSS 格式，保留毫秒部分。最后表格列出时间、接口、执行时间三列，字段重命名为中文名。", "instruction": "Thinkbus接口访问数据，编写查询语句实现如下分析场景", "output": "appname:thinkive_works_web_log AND middleware.action: \"结束\" |table timestamp, middleware.func_no, middleware.latency |eval time = formatdate(timestamp, \"yyyy-MM-dd HH:mm:ss,SSS\") | table time, middleware.func_no, middleware.latency |rename time as '时间', middleware.func_no as '接口', middleware.latency as '执行时间(ms)'"}
{"input": "应用事件详情。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "(appname:weblogic tag:app)  ${msg}\n|eval time=formatdate(timestamp,\"HH:mm\") \n| table time,middleware.severity,middleware.thread,middleware.msg\n|rename middleware.severity as \"事件等级\",middleware.thread as \"线程\",middleware.msg as \"消息详情\""}
{"input": "事件详情。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:secure) OR (appname:linux linux.log_type:auth)  linux.event_name:${event}|table linux.event_name,linux.type,linux.pid,linux.src_ip,linux.user|rename linux.event_name as \"linux事件\",linux.type as \"操作类型\",linux.pid as \"进程号\",linux.src_ip as \"源ip\",linux.user as \"用户\""}
{"input": "最新十分钟在线用户明细。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"-10m\" appname:linux tag:who |table linux.user,linux.terminal,linux.src_ip,linux.login_time|rename linux.user as \"用户\",linux.terminal \tas \"终端\",linux.src_ip \tas \"源IP\",linux.login_time as \"登录时间\""}
{"input": "h_非工作时间异常登录。", "instruction": "hw_企业bg数据，编写查询语句实现如下分析场景", "output": "appname:h_1  h_1.action:login| eval time_=formatdate(timestamp)| table time_,h_1.user_name,h_1.action,h_1.result,h_1.loacl_ip|rename time_ as \"时间\",h_1.user_name as \"账户\",h_1.action as \"动作\",h_1.result \tas \"登录结果\",h_1.loacl_ip as \"登录系统ip\""}
{"input": "攻击详情，列出时间、源 IP、源端口、动作、攻击类型、URL 地址、日志级别和状态码。。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:* |table time,waf.src_ip,waf.src_port,waf.action,waf.attack_type,waf.url,waf.risk_level,waf.status|rename time as \"时间\"|rename waf.src_ip as \"源ip\"|rename waf.src_port as \"源端口\"|rename waf.action as \"动作\"|rename waf.attack_type as \"攻击类型\"|rename waf.url as \"url地址\"|rename waf.risk_level as \"日志级别\"\t|rename waf.status as \"状态码\""}
{"input": "攻击url。索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech ips.dst_ip:* | table ips.attack_type,ips.url | rename ips.attack_type as \"攻击类型\",ips.url as URL"}
{"input": "攻击详情。索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech ips.dst_ip:*|rename ips.msg.attack_period as attack_p,ips.msg.attack_k_period as attack_p| table ips.src_ip,ips.dst_ip,ips.dst_port,ips.event_name,ips.attack_type,attack_p,ips.url,ips.action,ips.block_reason|rename ips.src_ip as \"源地址\",ips.dst_ip as \"被攻击地址\",ips.dst_port as \"被攻击端口\",ips.event_name as \"攻击事件\",ips.attack_type as \"攻击类型\",attack_p as \"攻击阶段\",ips.url as URL,ips.aciton as \"ips操作\" ,ips.block_reason as \"阻断理由\",ips.action as \"动作\""}
{"input": "各地区卡顿占比。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag | stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.UserId.area_code_dec|sort by count_ | rename stb.kvmsg.UserId.area_code_dec as \"地区\",count_ as \"卡顿人数\""}
{"input": "各地区卡顿人数。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag | stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.UserId.area_code_dec|sort by count_ | rename stb.kvmsg.UserId.area_code_dec as \"地区\",count_ as \"卡顿人数\""}
{"input": "监控主机的操作系统。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng | stats values(hp.msg.agent_ip) as name by hp.msg.os|rename name as \"主机地址\",hp.msg.os as \"操作系统\""}
{"input": "攻击事件详情表格，时间采用MMM-dd HH:mm格式，并展示事件类型，事件详情，监控主机 IP 和攻击源地址。。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng hp.msg.event_content:*| eval time=formatdate(timestamp,\"MMM-dd HH:mm\")|table  time,hp.msg.agent_ip,hp.msg.detail_src_ip,hp.msg.datatype,hp.msg.event_content|rename time as \"触发时间\",hp.msg.datatype as \"事件类型\",hp.msg.event_content as \"事件详情\",hp.msg.agent_ip as \"监控主机IP\",hp.msg.detail_src_ip as \"攻击源地址\""}
{"input": "攻击详情。索引可用字段有：tdp.net.dest_ip, tdp.net.dest_port, tdp.net.http.method, tdp.net.http.url, tdp.net.proto, tdp.net.src_ip, tdp.threat.name, tdp.threat.severity, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook| eval time=formatdate(timestamp,\"HH:mm\")|table time,tdp.threat.name,tdp.net.src_ip,tdp.net.dest_ip,tdp.net.dest_port,tdp.threat.severity|rename tdp.threat.severity as \"威胁等级\",tdp.threat.name as \"威胁名称\",tdp.net.src_ip as \"攻击地址\",tdp.net.dest_ip as \"目的地址\",tdp.net.dest_port as \"目的端口\""}
{"input": "登录操作审计。", "instruction": "CitrixNetscaler日志数据，编写查询语句实现如下分析场景", "output": "((* AND appname:citrix) AND tag:netscaler) AND 'netscaler.action':CMD_EXECUTED | table netscaler.time\t\n,netscaler.content.User,netscaler.content.Remote_ip,netscaler.content.Command\t,netscaler.content.Status\n| rename  netscaler.time as \"操作时间\"\n,netscaler.content.User as \"操作用户\",netscaler.content.Remote_ip as \"登陆IP地址\",netscaler.content.Command as \"执行命令\",netscaler.content.Status as \"执行结果\""}
{"input": "文件操作详情。索引可用字段有：uninxg.iopttype, uninxg.iresulttype, uninxg.log_type, uninxg.srcfile, uninxg.targetfile, uninxg.termip, uninxg.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:fileExchangeDetail) |eval time=formatdate(timestamp,\"MMM-dd HH:mm:ss\") | table  time,uninxg.username,uninxg.termip,uninxg.srcfile,uninxg.targetfile,uninxg.iopttype|rename uninxg.username as \"用户名\", uninxg.termip as \"操作终端IP\",uninxg.srcfile as \"操作源文件\",uninxg.targetfile as \"操作目标文件\",uninxg.iopttype as \"操作动作\""}
{"input": "用户执行定时任务次数。", "instruction": "symantec_mail_gateway数据，编写查询语句实现如下分析场景", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:cron* OR mg.module:CRON* |stats dc(mg.command) as cnt by mg.user,mg.command|rename mg.user as \"用户\",mg.command as \"定时任务\",cnt as \"次数\""}
{"input": "拦截事件详情。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro dsm.action:Quarantine|eval time=formatdate(timestamp,\"MMM-dd HH:mm\")\n  |table time,dsm.level,dsm.event_name,dsm.msg.filePath,dsm.msg.dvchost,dsm.msg.dvc\t|rename dsm.level as \"事件等级\",dsm.event_name as \"事件名称\",dsm.msg.filePath as \"拦截文件路径\",dsm.msg.dvc as \"受感染主机\",dsm.msg.dvchost as \"受感染主机\""}
{"input": "邮件收发详情。索引可用字段有：bb.message_id, bb.msg, bb.reason, bb.receiver, bb.result, bb.sender, bb.src_ip, bb.time, bb.ua.os, bb.user_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:mail bb.sender:* |eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,bb.sender,bb.receiver,bb.msg,bb.result,bb.message_id|rename bb.sender as \"发件人\",bb.receiver as \"收件人\",bb.result as \"结果\",bb.message_id as message_id"}
{"input": "错误详情。索引可用字段有：bb.message_id, bb.msg, bb.reason, bb.receiver, bb.result, bb.sender, bb.src_ip, bb.time, bb.ua.os, bb.user_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:services|table bb.time,bb.msg|rename bb.time as time,bb.msg as \"错误消息\""}
{"input": "sql错误信息详情。索引可用字段有：bb.message_id, bb.msg, bb.reason, bb.receiver, bb.result, bb.sender, bb.src_ip, bb.time, bb.ua.os, bb.user_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:sqlerror|table bb.time,bb.msg,bb.reason|rename bb.time as time,bb.msg as \"错误消息\",bb.reason as \"错误原因\""}
{"input": "被锁定账号详情。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:user_lock\n|table  oracle.USERNAME,oracle.ACCOUNT_STATUS,oracle.LOCK_DATE,oracle.EXPIRY_DATE,oracle.CREATED\n|rename oracle.USERNAME as \"用户名\",oracle.ACCOUNT_STATUS as \"账号状态\",oracle.LOCK_DATE as \"锁定日期\",oracle.EXPIRY_DATE as \"到期日期\",oracle.CREATED as \"创建日期\""}
{"input": "oracle_job明细。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:job|table oracle.JOB,oracle.LOG_USER,oracle.LAST_DATE,oracle.NEXT_DATE,oracle.WHAT |rename oracle.*  as *"}
{"input": "威胁详情。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | eval time=formatdate(timestamp,\"MM-dd HH:mm\")|rename ids.* as * | table time,src_ip,dst_ip,dst_port,proto,attack_name"}
{"input": "命令操作记录。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei  ids.module:SHELL | eval time=formatdate(timestamp,\"MM-dd HH:mm\")|rename ids.* as *,msg.* as *|table time,user,src_ip,'命令','VPN实例名'"}
{"input": "邮件监控。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter  ac.event_type:mail | table ac.kv.send_addr,ac.kv.receive_addr,ac.kv.subject,ac.action\t| rename ac.* as *,kv.* as *"}
{"input": "资源访问详情_上方可过滤。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG \n| rename fortress.* as * \n|eval time=formatdate(timestamp,\"HH:mm\") \n|table time,user,login_user,src_ip,dst_ip,user_name,proto,sys_name,sys_type | rename user as \"用户姓名\",login_user as \"登录账号\",src_ip as \"源地址\",dst_ip as \"目的地址\",proto as \"访问资源登录方式\",user_name as \"访问资源使用的用户名\",sys_name as \"资源/系统名称\",sys_type as \"资源/系统l类型\""}
{"input": "堡垒机操作详情。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "圣博润堡垒机日志数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) \n${ac}\n|eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n| rename fortress.* as * \n|table time,user,login_user,src_ip,action,result,request_msg \n| rename user as \"用户姓名\",login_user as \"登录账号\",src_ip as \"操作源地址\",action as \"操作\",result as \"操作结果\",request_msg as \"操作失败返回信息\""}
{"input": "各个服务器详情。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.status:*|eval time=formatdate(timestamp,\"HH:mm\")|rename a10.* as *|table time,server,port,group,message,status"}
{"input": "会话详情查询。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.event_type:session\n|rename a10.* as *\n|eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n|table time,src_ip,src_port,dst_ip,dst_port,v_ip,v_port,server_ip,server_port\n|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目的IP\",dst_port as \"目的端口\",v_ip as \"虚拟IP\",v_port as \"虚拟端口\",server_ip as \"服务器IP\",server_port as \"服务器端口\""}
{"input": "安恒waf入侵事件报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status|rename time as \"时间\"|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.src_port as \"源端口\"|rename waf.message.action as \"动作\"|rename waf.message.event as \"事件类型\"|rename waf.url as \"url地址\"|rename waf.message.threaten as \"日志级别\"\t|rename waf.message.status as \"状态码\"\t\t\t\t\t"}
{"input": "接口状态变更详情。索引可用字段有：router.action, router.auth_result, router.device_name, router.error_msg, router.event_type, router.intf, router.intf_status, router.log_message, router.log_type, router.message, router.module, router.module_name, router.severity, router.src_ip, router.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie router.module:LINEPROTO \n| eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n|table time,router.intf,router.intf_status,router.message\n|rename router.intf as \"状态变更接口\",router.intf_status as \"状态变更为\",router.message as \"消息详情\""}
{"input": "系统配置变更详情。索引可用字段有：router.action, router.auth_result, router.device_name, router.error_msg, router.event_type, router.intf, router.intf_status, router.log_message, router.log_type, router.message, router.module, router.module_name, router.severity, router.src_ip, router.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie router.action:CONFIG*\n|eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n|table time,router.user,router.src_ip,router.message \n|rename router.user as \"变更操作用户\",router.src_ip as \"变更操作IP地址\",router.message as \"变更消息详情\""}
{"input": "阻断危险SQL详情。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  (NOT db.msg.block:no OR db.msg.level:high)\n| eval time=formatdate(timestamp,\"MM-dd HH:mm\") \n| table time,db.src_ip,db.dst_ip,db.msg.client_host,db.msg.client_user,db.msg.client_software,db.msg.library,db.sql\n|rename db.src_ip as \"客户端IP\",db.dst_ip as \"目的IP\",db.msg.client_host as \"客户端主机\",db.msg.client_user as \"客户端用户\",db.msg.client_software as  \"访问软件\",db.msg.library as \"连接方式\",db.sql as \"SQL\""}
{"input": "威胁详情。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus anti.name:* *${name}*\n| eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n|rename anti.* as * \n| table time,src_ip,client_name,login_user,type,name,task,virus_path,action,desc|rename src_ip as host"}
{"input": "发帖审计详情。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:post \n|eval time=formatdate(timestamp,\"HH:mm\") \n| table time,ac.client,ac.src_ip,ac.app,ac.operation,ac.user_agent,ac.action \n| rename ac.* as *"}
{"input": "搜索引擎审计详情。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:search_engine\n|eval time=formatdate(timestamp,\"HH:mm\") \n| table time,ac.client,ac.src_ip,ac.resource,ac.resource_type,ac.user_agent,ac.action \n| rename ac.* as *"}
{"input": "应用控制详情。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:*  ac.dst_ip:${src_ip}\n| eval time=formatdate(timestamp,\"HH:mm\") \n| table time,ac.client,ac.dst_ip,ac.mac_addr,ac.app,ac.user_agent,ac.action \n| rename ac.* as * \n| rename dst_ip as IP"}
{"input": "登录详情。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:h3c *_LOG* ac.src_ip:*| rename ac.* as * | table time,user,src_ip,src_port,mnemonic"}
{"input": "登录详情。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd esxi.action:logged* \n| eval logged_time=formatdate(timestamp,\"MM-dd HH:mm\")\n|rename esxi.* as *\n|rename msg.* as *\n|table logged_time,src_ip,user,user_agent,action,login_time"}
{"input": "邮件监控详情。索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \ndlp.user:*${user|e}*\ndlp.recv_mail:*${recv}*\n|eval time=formatdate(timestamp,\"HH:mm\")\n|table time,dlp.user,dlp.src_ip,dlp.hostname,dlp.send_mail,dlp.recv_mail,dlp.details,dlp.file_name,dlp.policyNames,dlp.severityType\n|rename dlp.user as \"用户\",dlp.hostname as \"主机名\",dlp.send_mail as \"发件人\",dlp.recv_mail as \"收件人\",dlp.details as \"邮件主题\",dlp.policyNames as \"触发策略\",dlp.severityType as \"事件等级\",dlp.src_ip as \"源IP\""}
{"input": "威胁事件详情。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" atv.user:*${user|e}*\n|eval time=formatdate(timestamp,\"HH:mm\")\n|table time,atv.threatName,atv.threatType,atv.user,atv.src_ip,atv.uri,atv.processName,atv.action,atv.circumstances\n|rename atv.threatName as \"威胁名称\",atv.threatType as \"威胁类型\",atv.user as \"用户名\",atv.src_ip as \"源IP\",atv.uri as \"uri\",atv.processName as \"程序/进程名\",atv.action as \"操作\",atv.circumstances as \"发生原由\""}
{"input": "攻击详情。索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational ips.src_ip:*${srcip}* ips.dst_ip:*${dstip}* ips.src_port:*${srcp}* ips.dst_port:*${dstp}* ips.event_name:*${attack}*\n|rename ips.* as *\n| table time,src_ip,src_port,dst_ip,dst_port,event_name,level,proto\n|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目标IP\",dst_port as \"目标端口\",event_name as \"事件\",level as \"等级\",proto as \"协议\",time as \"时间\""}
{"input": "威胁事件详情。索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin nta.src_ip:*${srcip}* nta.dst_ip:*${dstip}* nta.src_port:*${srcp}* nta.dst_port:*${dstp}* nta.attack_name:*${attack}*\n|rename nta.* as *\n| table time,src_ip,src_port,dst_ip,dst_port,attack_name,target,kill_chain,http.uri\n|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目标IP\",dst_port as \"目标端口\",attack_name as \"事件\",time as \"时间\",target as \"事件详情\",kill_chain as \"攻击阶段\",http.uri as URI"}
{"input": "威胁详情。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:nx nx.src_ip:*${srcip}* \n|rename nx.* as *\n| table time,src_ip,src_port,dst_ip,dst_port,sname,message,action,link\n|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目标IP\",dst_port as \"目标端口\",sname as \"事件\",time as \"时间\",message as \"事件详情\",action as \"处理动作\",link as URI"}
{"input": "ex_邮件网关__威胁邮件详情。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | rename ex.* as *,kv.* as * , rt.* as * | table time,src_user,dst_user,src_dns_domain,subject,file_name,file_type,action,sname|rename src_user as \"发件人\",dst_user as \"收件人\",src_dns_domain as \"来源DNS\",subject as \"邮件主题\",file_name as \"文件名\",file_type as \"附件类型\",action as \"动作\",sname as \"威胁类型\""}
{"input": "主机威胁详情。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:smart |eval time=formatdate(timestamp,\"MM-dd HH:mm\")|rename sm.* as *| table time,sname,src_ip,dst_ip,os,file_name,file_type,file_path,uri|rename sname as \"威胁名称\",src_ip as \"威胁来源\",dst_ip as \"受威胁主机\",file_name as \"文件名称\",file_type as \"文件类型\",file_path as \"文件路径\",uri as uri"}
{"input": "入侵详情。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin\nhp.source:honeypot NOT hp.event_level:无*\nhp.src_ip:*${srcip|e}*\nhp.dst_ip:*${dstip|e}*\nhp.honeypot_name:*${name}*\nhp.event_name:*${event}*\n|eval ts=formatdate(timestamp,\"MM-dd HH:mm\")\n|rename hp.* as *\n| table ts,src_ip,dst_ip,dst_port,honeypot_name,event_name,event_level,extra.payload.value\n|rename ts as \"时间\",src_ip as \"入侵源IP\",dst_ip as \"受威胁IP\",dst_port as \"受威胁端口\",honeypot_name as \"受威胁系统\",event_level as \"威胁等级\",event_name as \"威胁名称\",extra.payload.value as \"Payload\""}
{"input": "威胁详情。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析场景", "output": "appname:leon tag:tjym\niocs.event_type:*${type}*\niocs.ecent_name:*${name}*\n| rename iocs.* as *\n|table e_time,src_ip,src_port,dst_ip,event_type,event_name,dire,action,e_lev\n|rename e_time as \"触发时间\",src_ip as \"威胁地址\",src_port as \"威胁端口\",dst_ip as \"受影响地址\",event_type as \"事件类型\",event_name as \"事件名称\",dire as \"事件方向\",action as \"执行操作\",e_lev as \"事件等级\""}
{"input": "审计事件详情。", "instruction": "NetApp数据，编写查询语句实现如下分析场景", "output": "appname:netapp\n| rename na.* as *\n| table time,application_name,username,src_ip,proto,message"}
{"input": "告警错误详情。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Switch_Brocade数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:brocade NOT switch.severity:INFO|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | rename switch.* as * | table time,host,severity,message"}
{"input": "DHCP请求详情。索引可用字段有：dx.dhcp_ip, dx.dhcp_mac, dx.dhcp_req_type, dx.gateway, dx.hostname, dx.moudule, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": "appname:dx tag:dhcp dx.dhcp_req_type:* \ndx.dhcp_mac:*${mac|e}*\ndx.gateway:*${gateway|e}*\n|eval time=formatdate(timestamp,\"HH:mm\")\n|table time,dx.dhcp_req_type,dx.dhcp_ip,dx.dhcp_mac,dx.hostname,dx.gateway\n|rename dx.dhcp_req_type as \"请求报文类型\",dx.dhcp_ip as \"被请求IP\",dx.dhcp_mac as \"请求MAC\",dx.gateway as  \"请求网关\",dx.hostname as \"客户端主机名\""}
{"input": "境外IP登录详情。索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "HIDS_安全狗数据，编写查询语句实现如下分析场景", "output": "appname:hids tag:safedog  hids.event_type:remoteLogin NOT hids.country:中国 |table hids.datetime,hids.loginIp,hids.country,hids.hostName,hids.userName|rename hids.* as *"}
{"input": "ESTABLISHED 状态的最近 20 个进程连接明细。索引可用字段有：process.foreign_addr, process.foreign_port, process.local_addr, process.local_port, process.pid, process.program_name, process.proto, process.state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED |limit 20 | table process.foreign_addr,process.foreign_port,process.local_addr,process.local_port,process.pid,process.program_name|rename process.foreign_addr as foreign_addr,process.foreign_port as foreign_port,process.local_addr as local_addr,process.local_port as local_port,process.pid as pid,process.program_name as program_name"}
{"input": "ESTABLISHED 状态的最近 10 个进程连接明细。索引可用字段有：process.foreign_addr, process.foreign_port, process.local_addr, process.local_port, process.pid, process.program_name, process.proto, process.state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED |limit 10 | table process.foreign_addr,process.foreign_port,process.local_addr,process.local_port,process.pid,process.program_name|rename process.foreign_addr as foreign_addr,process.foreign_port as foreign_port,process.local_addr as local_addr,process.local_port as local_port,process.pid as pid,process.program_name as program_name"}
{"input": "ESTABLISHED 状态的最近 50 个进程连接明细，将字段名里的process.前缀去掉。索引可用字段有：process.foreign_addr, process.foreign_port, process.local_addr, process.local_port, process.pid, process.program_name, process.proto, process.state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED |limit 50 | table process.foreign_addr,process.foreign_port,process.local_addr,process.local_port,process.pid,process.program_name|rename process.foreign_addr as foreign_addr,process.foreign_port as foreign_port,process.local_addr as local_addr,process.local_port as local_port,process.pid as pid,process.program_name as program_name"}
{"input": "ESTABLISHED 状态的最近 5 个进程连接明细，将字段名里的process.前缀去掉。索引可用字段有：process.foreign_addr, process.foreign_port, process.local_addr, process.local_port, process.pid, process.program_name, process.proto, process.state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED |limit 5 | table process.foreign_addr,process.foreign_port,process.local_addr,process.local_port,process.pid,process.program_name|rename process.* as *"}
{"input": "TCP监控信息明细，时间戳按月/日 时:分:秒展示，取最近 100 条。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "F5数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 AND (loadbalancing.level:alert) AND (Monitor instance state)|eval time=formatdate(timestamp,\"MM/dd  HH:mm:ss\")|table time,loadbalancing.src_ip,loadbalancing.dst_ip,loadbalancing.msg,loadbalancing.status|limit 100|rename loadbalancing.src_ip as  src_ip,loadbalancing.dst_ip as dst_ip,loadbalancing.msg as msg,loadbalancing.status as \"状态\""}
{"input": "最新 1条服务器总内存指标。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:rds_info| limit 1 | table redis.total_system_memory_human | rename redis.total_system_memory_human as '服务器总内存'"}
{"input": "最新1条Redis峰值内存占用指标。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:rds_info | limit 1 | table redis.used_memory_peak_human  | rename redis.used_memory_peak_human as 'Redis峰值内存使用'"}
{"input": "最新1条Redis当前内存碎片率。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:rds_info| limit 1 | table redis.mem_fragmentation_ratio |eval p=todouble(redis.mem_fragmentation_ratio)/100 |rename  p as 'Redis当前内存碎片比率'"}
{"input": "最新1条Redis集群基本信息。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:rds_info| limit 1 | eval cluster=if(redis.cluster_enabled==\"1\", \"是\", \"否\")| table redis.redis_version, cluster, redis.uptime_in_seconds, redis.tcp_port| rename redis.redis_version as 'Redis版本', redis.redis_mode as 'Redis运行模式', redis.tcp_port as '运行端口', cluster as '集群启用', redis.uptime_in_seconds as '已运行秒数'"}
{"input": "最新10条Redis持久化基本信息。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis | limit 10| eval savedate=formatdate(tolong(redis.rdb_last_save_time)*1000)|table savedate, redis.rdb_last_bgsave_status, redis.rdb_changes_since_last_save | rename savedate as '上次后台持久化时间', redis.rdb_last_bgsave_status as '上次后台持久化状态', redis.rdb_changes_since_last_save as '上次持久化后的数据变化次数'"}
{"input": "最新 1 条Oracle实例基本信息。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:meta |sort by timestamp|limit 1|table hostname, oracle.INSTANCE_NAME, oracle.STATUS, oracle.STARTUP_TIME|rename hostname as '域名', oracle.INSTANCE_NAME as '实例名', oracle.STATUS as '状态', oracle.STARTUP_TIME as '上次启动时间'"}
{"input": "五元组明细查询，展示前 10 名。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell\n|eval ts1=formatdate(timestamp)\n|table  ts1,firewall.src.geo.ip,firewall.src_port,firewall.dst.geo.ip,firewall.dst_port,firewall.proto,firewall.msg\n|limit 10\n|rename  ts1 as \"时间\"\n|rename  firewall.src.geo.ip as \"源ip\"\n|rename  firewall.src_port as \"源端口\"\n|rename  firewall.dst.geo.ip as \"目的ip\"\n|rename  firewall.dst_port as \"目的端口\"\n|rename  firewall.proto as \"协议\"\n|rename  firewall.msg as \"处理信息\""}
{"input": "五元组明细查询，展示 10 条。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|eval ts1=formatdate(timestamp)|table ts1,firewall.dst.geo.city,firewall.src_ip,firewall.src_port,firewall.dst_ip,firewall.dst_port,firewall.app_name,firewall.action\n|rename ts1 as \"时间\"\n|rename firewall.dst.geo.city as \"源城市\"\n|rename firewall.src_ip as \"源地址\"\n|rename firewall.src_port as \"源端口\"\n|rename firewall.dst_ip as \"目的地址\"\n|rename firewall.dst_port as \"目的端口\"\n|rename firewall.app_name as \"应用名称\"\n|rename firewall.action as \"系统动作\"\n|sort by ts1\n|limit 10"}
{"input": "最近 10 条ADS设备状态。索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.load_per:*| eval time=formatdate(timestamp,\"HH:mm:ss\")| table time,ddos.load_per,ddos.men_per | rename time as \"时间\",ddos.load_per as \"Collapsar负荷\", ddos.men_per as \"内存使用率\" | limit 10"}
{"input": "最近 1 条微投投保单号关联线程号。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:glory) glory.printno:* |table glory.printno,glory.threadnum |limit 1 |rename glory.printno as \"投保单号\",glory.threadnum as \"线程号\""}
{"input": "最新20条事件明细。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:messages) OR (appname:linux linux.log_type:messages)  |eval time=formatdate(timestamp)|table time,ip,linux.type,linux.msg,linux.pid|rename time as \"时间\",ip as \"主机\" linux.pid as \"进程号\",linux.type as \"操作类型\",linux.msg as \"事件详情\"|sort by time|limit 20"}
{"input": "最近 5 条事件详情，表格展示源地址、源端口、目标地址、目标端口、事件 ID、事件类型、事件等级、访问协议、本地地址等。。索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech| eval time = formatdate(timestamp,\"HH:mm:ss\") | table time,ips.src.geo.ip,ips.src_port,ips.dst.geo.ip,ips.dst_port,ips.event_id,ips.event_name,ips.level,ips.proto,ips.local | limit 5 | rename time as \"事件\",ips.src.geo.ip as \"源IP地址\",ips.src_port as \"源地址端口\" ,ips.dst.geo.ip as \"目标IP地址\",ips.dst_port as \"目标端口\",ips.event_id as \"事件ID\",ips.event_name as \"事件类型\",ips.level as \"事件等级\",ips.proto as \"访问协议\",ips.local as \"本地地址\""}
{"input": "数据文件总大小及个数，只看 1 条。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:size_count|table oracle.USED_SIZE,oracle.FILE_SIZE,oracle.TS_COUNTS,oracle.FILE_COUNTS|dedup 1 oracle.USED_SIZE,oracle.FILE_SIZE,oracle.TS_COUNTS,oracle.FILE_COUNTS|rename oracle.* as * |limit 1"}
{"input": "前 50 条文件操作详情，使用人类可读时间格式。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | rename ac.* as *,as.kv.* as *|eval time=formatdate(timestamp,\"MM-dd HH:mm\")|  table time,src_ip,user,app_name,app_cat_name,action,file_name|sort by cnt|limit 50"}
{"input": "访问时长最多的IP地址前 10 名。访问时长用 firewall.start_time 和 firewall.end_time 字段计算。需要先根据年月日时分秒做时间戳解析。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | eval stime=parsedate(firewall.start_time,\"yyyy/M/d HH:mm:ss\")|eval etime=parsedate(firewall.end_time    ,\"yyyy/M/d HH:mm:ss\") | eval period=etime-stime |sort by period | table firewall.src_ip,period |rename firewall.src_ip as \"IP地址\", period as \"访问时长(毫秒)\" | limit 10"}
{"input": "耗时最高20句SQL语句。", "instruction": "数据库_达梦数据，编写查询语句实现如下分析场景", "output": "appname:dm tag:sql\n| stats max(database.cost) as cost by database.sql_context\n|sort by cost\n|limit 20\n|rename database.sql_context as \"SQL语句\",cost as \"耗时(ms)\""}
{"input": "", "instruction": "从rizhiyi中查询最近一天最高流量", "output": "starttime=\"-1d\" appname:rizhiyi tag:manager_metrics  |stats max(os_net_in_KBps) as max_os_net_in_KBps,max(os_net_out_KBps) as max_os_net_out_KBps by hosts  |sort by +hosts |rename hosts as \"主机\",max_os_net_in_KBps as \"近1天最高入向网络流量KBps\",max_os_net_out_KBps as \"近1天最高出向网络流量KBps\""}
{"input": "数据库_oracle_表空间基本信息。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "数据库_oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:tablespace oracle.TABLESPACE_NAME:*|eval pre = oracle.FREE_BYTES/oracle.TOTAL_BYTES*100|table oracle.TABLESPACE_NAME,oracle.FREE_BYTES,oracle.TOTAL_BLOCKS,oracle.TOTAL_BYTES,oracle.USED_BYTES,pre|rename oracle.TABLESPACE_NAME as \"表名\",oracle.FREE_BYTES as \"空闲字节\",oracle.TOTAL_BLOCKS as \"块大小\",oracle.TOTAL_BYTES as \"字节大小\",oracle.USED_BYTES as \"用户字节\",pre as \"空闲率\""}
{"input": "fortress_leadsec_堡垒机登录列表。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "fortress_leadsec仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type\t:1 |table fortress.msg.begin_time\t,fortress.msg.user_name,fortress.src_ip,fortress.msg.account,fortress.dst_ip,fortress.msg.protocol_name| rename fortress.msg.begin_time as \"登录时间\",fortress.msg.user_name as \"堡垒机用户\",fortress.src_ip as \"源ip\",fortress.msg.account as \"登录用户\",fortress.dst_ip as \"服务器ip\",fortress.msg.protocol_name as \"登录方式\""}
{"input": "分级别5分钟粒度事件数趋势。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic |stats sparkline(count(), 5m) as '分级别5分钟粒度事件数趋势' by middleware.severity |rename middleware.severity as '严重级别'"}
{"input": "用户搜索频度。", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "appname:frontend_frontend_log AND frontend.message.category:search |stats sparkline(count(),1h) as count_ by frontend.message.user_id|rename frontend.message.user_id as \"用户id\",count_ as \"次数\""}
{"input": "设备接入详情。", "instruction": "联软终端控制数据，编写查询语句实现如下分析场景", "output": "appname:leagsoft tag:tc \n|eval time=formatdate(timestamp,\"MM-dd HH:mm\")\n|eval result=if(tc.msg.kv.straccessfailedcode==\"0\",\"接入成功\",\"接入失败\")\n| rename tc.msg.kv.strdevip as devip,tc.msg.kv.strDevIP as devip\n|table time,result,devip,tc.msg.kv.strusername,tc.msg.kv.strswitchip,tc.msg.kv.strvlan,tc.msg.kv.strpolicyname,tc.msg.kv.straccessfailedreason\n|rename result as \"接入状态\",devip as \"设备IP\",tc.msg.kv.strusername as \"接入用户\",tc.msg.kv.strswitchip as \"接入连接交换机\",tc.msg.kv.strvlan as \"接入vlan\",tc.msg.kv.strpolicyname as \"接入场景\",tc.msg.kv.straccessfailedreason as \"接入失败原因\""}
{"input": "断线详情。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "cisco无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:cisco ac.event_id:445 OR ac.event_id:35160|eval time=formatdate(timestamp,\"MM-dd HH:mm\")|table time,ac.src_mac,ac.event_id,raw_message|rename ac.src_mac as \"断线主机\",ac.event_id as \"事件ID\",raw_message as \"事件详情\""}
{"input": "非攻击事件，去掉waf.或kv.等字段名共同前缀。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) | rename waf.* as *,kv.* as * "}
{"input": "低级事件，去掉waf.或kv.等字段名共同前缀。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:低级事件 OR waf.kv.Evt_level:20) | rename waf.* as *,kv.* as * "}
{"input": "中级事件，去掉waf.或kv.等字段名共同前缀。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:中级事件 OR waf.kv.Evt_level:30) | rename waf.* as *,kv.* as * "}
{"input": "高级事件，去掉waf.或kv.等字段名共同前缀。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:高级事件 OR waf.kv.Evt_level:40) | rename waf.* as *,kv.* as * "}
{"input": "非攻击事件详情。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) \n| rename waf.* as *,kv.* as *  | eval time=formatdate(timestamp,\"HH:mm\")\n| table time,Evt_type,Module,src_ip,src_port,dst_ip,dst_ip,Host,URL"}
{"input": "非攻击事件详情。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec (ids.event_level:非攻击事件 OR ids.level:10) \n| rename ids.* as *,kv.* as *  | eval time=formatdate(timestamp,\"HH:mm\")\n| table time,event_name,Module,src_ip,src_port,dst_ip,dst_port"}
{"input": "访问失败详情。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399\n|rename loadblancing.* as * |eval time=formatdate(timestamp,\"MM-dd HH:mm:ss\")\n| table time,src_ip,dst_ip,uri,status"}
{"input": "感染详情。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:*\n|eval time=formatdate(timestamp,\"MMM-dd HH:mm\")\n|eval result=if(antivirus.result==\"1\",\"清除成功\",\"未清除\") \n|table time,antivirus.host,antivirus.threat_name,antivirus.file,antivirus.path,result\n|rename antivirus.host as \"感染机器\",antivirus.threat_name as \"威胁名称\",antivirus.file as \"感染对象\",antivirus.path as \"感染路径\""}
{"input": "表空间使用情况。", "instruction": "数据库_达梦数据，编写查询语句实现如下分析场景", "output": "appname:dm tag:instance\n|stats last(database.total_space) as total_space,last(database.free_space) as free_space by database.instance\n|eval used_space=tolong(total_space)-tolong(free_space),used_percent=format(\"%.4f\",used_space/tolong(total_space)*100)+\"%\"\n|rename database.instance as \"实例名称\",total_space as \"表空间总量\",used_space as \"表空间使用大小\",free_space as \"表空空闲大小\",used_percent as \"表空间使用率\""}
{"input": "邮件发送字节大小top5。索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats sum(exchange.total_bytes) as sum_ by exchange.sender_address|sort by sum_|limit 5|rename \nexchange.sender_address \tas \"发件人\"|rename sum_ as \"接收总大小\""}
{"input": "邮件接收字节大小top5。索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking|stats sum(exchange.total_bytes) as sum_ by exchange.recipient_address|sort by sum_|limit 5|rename \nexchange.recipient_address  as \"收件人\"|rename sum_ as \"接收总大小\""}
{"input": "邮件发送字节大小top10。索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats sum(exchange.total_bytes) as sum_ by exchange.sender_address|sort by sum_|limit 10|rename \nexchange.sender_address \tas \"发件人\"|rename sum_ as \"接收总大小\""}
{"input": "邮件接收字节大小top10。索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking|stats sum(exchange.total_bytes) as sum_ by exchange.recipient_address|sort by sum_|limit 10|rename \nexchange.recipient_address  as \"收件人\"|rename sum_ as \"接收总大小\""}
{"input": "主机请求TOP10。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx |top 10 middleware.http_hostname |rename middleware.http_hostname as hostname,count as '数量'"}
{"input": "请求路径TOP10。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx NOT middleware.request:*service=PriceInfo&method=Realprice&op=queryRealPriceByIndexcode&indexcode*|top 10 middleware.request |rename middleware.request as request,count as '数量'"}
{"input": "IP请求TOP10。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 10 middleware.clientip |rename middleware.clientip as ip,count as '数量'"}
{"input": "被策略拒绝源IP_TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny|top 10 firewall.src_ip |rename firewall.src_ip as \"被策略拒绝源IP\""}
{"input": "策略拒绝访问目的城市TOP10百分比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny|top 10 firewall.dst.geo.city |rename firewall.dst.geo.city as \"目的城市\""}
{"input": "策略拒绝源IP_top10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_novel数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel AND firewall.action:deny |top 10 firewall.src_ip |rename firewall.src_ip as \"策略拒绝源IP\""}
{"input": "策略拒绝访问目的城市TOP10百分比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_novel数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel AND firewall.action:deny | top 10 firewall.dst.geo.city | rename firewall.dst.geo.city as \"目的城市\""}
{"input": "top20搜索耗时语句。", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "appname:frontend_frontend_log  frontend.message.category:search |stats avg(frontend.span) as avg_ by frontend.message.pipe_command.pipe_command |sort by avg_ |limit 20| rename frontend.message.pipe_command.pipe_command as \"搜索命令\",avg_ as \"搜索耗时\""}
{"input": "各敏感文件被访问情况。索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hw_企业bg数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|rename dlp.src_ip as src_ip | top 10 dlp.file_name"}
{"input": "频繁连接详情。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  \n|rename fortress.* as *\n|stats count() as cnt by user,src_ip,host_ip,host_user\n|rename user as \"运维用户\",src_ip as \"源IP\",host_ip as \"操作主机IP\", host_user as \"主机用户\",cnt as \"连接次数\""}
{"input": "NSFOCUS_访问轨迹图，展示前 20 条。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus |stats count() by firewall.src_ip,firewall.dst_ip |rename firewall.src_ip as from |rename firewall.dst_ip as to |limit 20"}
{"input": "校内各区域的访问量。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.locaiton |rename DNS.locaiton as \"地点\", count_ as \"访问量\""}
{"input": "事件总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto |stats count() as ct by logtype |rename ct as \"事件总量\""}
{"input": "系统事件日志总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:SYSTEM |stats count() as ct by firewall.type |rename firewalltype as \"系统事件\", ct as \"日志量\""}
{"input": "系统事件总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:SYSTEM |stats count() as ct by firewall.type |rename firewalltype as \"系统事件\", ct as \"事件量\""}
{"input": "Traffic事件日志量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:TRAFFIC |stats count() as ct by firewall.type |rename pa.type as \"流量事件\",ct as \"日志量\""}
{"input": "Traffic事件总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:TRAFFIC |stats count() as ct by firewall.type |rename firewall.type as \"流量事件\",ct as \"事件量\""}
{"input": "威胁事件日志总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:THREAT |stats count() as ct by firewall.type |rename firewall.type as \"威胁事件\",ct as \"事件数\""}
{"input": "威胁事件总量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:THREAT |stats count() as ct by firewall.type |rename firewalltype as \"威胁事件\",ct as \"事件量\""}
{"input": "策略拒绝连接协议占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:deny |stats count() as ct by firewall.proto |rename ct as \"事件数量\""}
{"input": "拒绝策略应用占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:deny |stats count() as ct by firewall.application_type |rename ct as \"事件数量\",firewall.application_type as \"应用类型\""}
{"input": "策略拒绝连接接口占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.action:deny |stats count() as ct by firewall.ingress_if | rename ct as \"事件数量\",firewall.ingress_if as \"接口\""}
{"input": "攻击类型统计。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() as ct by waf.attack_type |rename ct as \"发生次数\",waf.attack_type as \"攻击类型\""}
{"input": "事件等级分布统计。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() as tally by waf.severity |rename tally as \"次数\",waf.severity as \"攻击级别\""}
{"input": "服务器受攻击统计。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() as ct by waf.dst_ip |rename waf.dst_ip as \"服务器IP\",ct as \"受攻击数量\""}
{"input": "飞塔应用控制-高_低级类别分布。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl|stats count() by firewall.appcat,firewall.app\n|rename firewall.appcat as firewall.kv.appcat,firewall.app as firewall.kv.appcat"}
{"input": "飞塔-高风险违规应用访问统计。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl) AND firewall.apprisk:high| stats count() as cnt by firewall.src_ip,firewall.appcat,firewall.app | rename firewall.src_ip as \"违规IP\",firewall.appcat as \"违规类别\",firewall.app as \"违规应用\",cnt as \"总计\""}
{"input": "PaloAlto_连接应用top10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:paloalto AND firewall.action:allow |stats count() as ct by firewall.application_type |limit 10 |rename ct as \"数量\",firewall.application_type as \"应用名称\""}
{"input": "PaloAlto_连接应用top20。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto  AND firewall.action:allow |stats count() as ct by firewall.application_type |limit 20 |rename ct as \"数量\",firewallapplication_type as \"应用名称\""}
{"input": "攻击来源_Top10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() as ct by waf.src_ip |limit 10 |rename ct as \"数量\",waf.src_ip as \"来源IP\""}
{"input": "攻击名称_Top10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() as tally by waf.attack_name |limit 10 |rename waf.attack_name as \"攻击名称\",tally as \"发生次数\""}
{"input": "受影响URL_Top10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "(appname:waf  tag:imperva AND waf.msg.cs3.url:URL*) NOT waf.msg.cs3.url:*IP* NOT waf.msg.cs3.url:偏移* NOT waf.msg.cs3.url:*140.207*  |stats count() as ct by waf.msg.cs3.url |limit 10 |rename ct as \"数量\",waf.msg.cs3.url as \"受影响URL\""}
{"input": "", "instruction": "对 sdc 数据，按 pipeline 字段值分类型统计累计上报条数。重命名 pipeline 为上报类型，ct 为上报数量", "output": "appname:sdc  msg:*  |stats count() as ct by pipeline  |rename pipeline as \"上报类型\",ct as \"上报数量\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux非登录安全事件数", "output": " (appname:linux tag:secure NOT linux.event_name:登录*) |stats count() as ct by linux.event_name|rename linux.event_name as \"linux事件\" ,ct as \"数量\""}
{"input": "", "instruction": "从rizhiyi中查询客户公司名称", "output": "appname:rizhiyi tag:license_info |stats count() as cnt by mes.company |rename mes.company as company"}
{"input": "直播业务运营商TOP10。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。索引可用字段有：cdn.cdn_status, cdn.clientip.geo.city, cdn.clientip.geo.isp, cdn.domain, cdn.event_name, cdn.finished_body_response, cdn.geo.city, cdn.geo.country, cdn.geo.province, cdn.http_status, cdn.prefix_url, cdn.proto, cdn.remote_addr, cdn.request_domain, cdn.request_url, cdn.src_outside_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  AND  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com)  |stats count() as _count by cdn.clientip.geo.isp | rename _count as \"总数\""}
{"input": "cisco_nexus错误日志统计。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault) |stats count() as count_ by switch.log_type,switch.describe|rename switch.time as \"时间\",switch.log_type as \"日志类型\",switch.describe as \"等级\",count_ as \"日志数量\""}
{"input": "请求路径与主机关系。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx NOT middleware.request:*service=PriceInfo&method=Realprice&op=queryRealPriceByIndexcode&indexcode* |stats count() as c by middleware.request,middleware.http_hostname|rename  middleware.request as request,middleware.http_hostname as hostname,c as '数量'"}
{"input": "请求路径与主机关系图。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx NOT middleware.request:*service=PriceInfo&method=Realprice&op=queryRealPriceByIndexcode&indexcode* |stats count() as c by middleware.request,middleware.http_hostname|rename  middleware.request as request,middleware.http_hostname as hostname"}
{"input": "防火墙_hillstone不同级别日志数量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone| stats count() as total by firewall.event_type | rename firewall.event_type as \"级别\",total as\"数量\""}
{"input": "防火墙_hillstone不同模块日志数量。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone | stats count() as total by firewall.module | rename firewall.module as \"模块\",total as\"数量\""}
{"input": "拒绝策略事件占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny | stats count() as total by firewall.policy| rename total as \"事件数量\",firewall.policy as \"拒绝策略\""}
{"input": "策略拒绝连接协议占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny |stats count() as total by firewall.proto | rename total as \"事件数量\",firewall.proto as \"协议\""}
{"input": "策略拒绝连接接口占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny|stats count() as total by firewall.interface | rename total as \"事件数量\",firewall.interface as \"接口\""}
{"input": "放行策略命中数排名。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.policy | rename total as \"命中数量\""}
{"input": "源ip入侵事件分布报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity| stats count() as count_ by waf.message.src_ip.geo.ip,waf.message.event|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.event as \"事件类型\""}
{"input": "源ip入侵事件分布，表头改为中文名。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity| stats count() as count_ by waf.message.src_ip.geo.ip,waf.message.event|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.event as \"事件类型\""}
{"input": "每台服务器遭入侵事件分布报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "( appname:waf tag:nsfocus ) AND ( waf.log_category:\"waf_log_websec\" )\n* | stats count() as count_ by waf.dst_ip,waf.event_type|rename waf.dst_ip as \"目的ip\"|rename waf.event_type as \"事件类型\""}
{"input": "根据提交类型、端口、URI 分组统计GET请求的访问量。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat waf.method:GET \n|stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "事件类型分布。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus | stats count() as cnt by waf.event_type | rename waf.event_type as \"日志类型\", cnt as \"本周触发的类型\""}
{"input": "来源IP和省份访问请求数统计。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat NOT waf.src.geo.city:other NOT waf.src.geo.city:private |stats count() as cnt by waf.src.geo.province,waf.src.geo.ip |rename waf.src.geo.province as \"来源省份\",waf.src.geo.ip as \"来源IP\",cnt as \"访问次数\""}
{"input": "根据提交类型、访问端口、访问的 URL 计算非 POST 的访问量。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat NOT waf.method:POST \n|stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问量\""}
{"input": "事件类型占比。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus | stats count() as cnt by waf.event_type | rename waf.event_type as \"日志类型\", cnt as \"本周触发的类型\""}
{"input": "检测到攻击类型占比分布。索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| stats count() as cnt by attack_type"}
{"input": "ads_m事件类型分布。索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| stats count() as cnt by event"}
{"input": "策略拒绝连接协议占比。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel AND firewall.action:deny |stats count() as ct by firewall.proto |rename ct as \"事件数量\""}
{"input": "查询语句频度。", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "(* AND appname:frontend_frontend_log) frontend.message.category:search  \"\\/spl\\/jobs\\/submit\"|stats count() as count_ by frontend.message.pipe_command.query|rename frontend.message.pipe_command.query as \"查询语句\",count_ as \"次数\""}
{"input": "csa_不同事件类型日志数量。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone | stats count() as total by csa.event_type | rename csa.event_type as \"事件类型\",total as\"数量\""}
{"input": "csa_各类协议占比。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.proto | rename total as \"事件数量\",csa.proto as \"协议\""}
{"input": "csa_威胁响应行为。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.action | rename total as \"事件数量\""}
{"input": "csa_各类威胁占比。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.threat_subtype | rename total as \"事件数量\""}
{"input": "csa_不同模块日志数量。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone | stats count() as total by csa.module | rename csa.module as \"模块\",total as\"数量\""}
{"input": "csa_严重威胁事件数。索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone csa.threat_severity:High| stats count() as total | rename total as\"数量\""}
{"input": "tda事件处理详情。索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda tag:yaxin | stats count() as cnt by tda.type,tda.act,tda.level | rename tda.type as \"事件类型\", tda.act as \"执行操作\", tda.level as \"事件等级\" ,cnt as \"发生次数\""}
{"input": "USG6650_禁止访问详情。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_huawei_USG6650_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 firewall.brief:/.*DENY.*/| eval time=formatdate(timestamp,\"MM-dd HH:mm:ss\") |stats count() as cnt  by time,firewall.src_ip,firewall.dst_ip,firewall.dst_port,firewall.host,firewall.rule_name| rename firewall.src_ip as \"源IP\", firewall.dst_ip as \"目的IP\", firewall.dst_port as \"目的端口\" ,firewall.rule_name as \"命中规则\", firewall.host as \"主机名称\""}
{"input": "linux非登录安全事件数量分组统计。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:secure NOT linux.event_name:登录*) OR (appname:linux linux.log_type:auth  NOT linux.event_name:登录*) |stats count() as ct by linux.event_name|rename linux.event_name as \"linux事件\" ,ct as \"数量\""}
{"input": "存储路径故障。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:esxi  \"riggering path evaluation\" OR \"Device is permanently unavailable\" |stats count()as _ct  by hostname|rename _ct as \"异常数\""}
{"input": "esxi进程详情。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "${start} ${end} appname:esxi hrSWRunPath ${pid}| stats count() as cou by tag,esxi.run_cmd | rename cou as \"数量\""}
{"input": "源IP攻击事件分布报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag:chatin|stats count() as count_ by waf.src_ip,waf.attack_type|rename waf.src_ip as \"源ip\"|rename waf.attack_type as \"事件类型\""}
{"input": "命令审计。索引可用字段有：ssl.action, ssl.command, ssl.level, ssl.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "信安世纪ssl数据，编写查询语句实现如下分析场景", "output": "appname:ssl tag:infosec|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | stats count() as cnt by time,ssl.user,ssl.command | rename ssl.user as \"用户\",ssl.command as \"命令\""}
{"input": "威胁详情。索引可用字段有：bds.action, bds.dst_ip, bds.dst_port, bds.event_type, bds.proto, bds.severity, bds.src.geo.city, bds.src.geo.country, bds.src.geo.province, bds.src_ip, bds.threat_name, bds.threat_type, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.event_type:Threat|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | stats count() as cnt by time,bds.src_ip,bds.dst_ip,bds.dst_port,bds.threat_type,bds.threat_name|rename bds.src_ip as \"源地址\",bds.dst_ip as \"目的地址\",bds.dst_port as \"目的端口\",bds.threat_type as \"威胁类型\",bds.threat_name as \"威胁名称\",cnt as \"攻击次数\""}
{"input": "waf访问详情。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网神数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() as cnt  by waf.src_ip,waf.dst_domain,waf.dst_ip,waf.url | rename waf.src_ip as \"源地址\",dst_domain as \"目的域名/IP\",waf.dst_ip as \"目的IP\",waf.url as url ,cnt as \"访问次数\""}
{"input": "操作命令审计详情。", "instruction": "symantec_mail_gateway数据，编写查询语句实现如下分析场景", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:sudo* |stats count() as cnt by mg.msg.TTY,mg.msg.USER,mg.msg.PWD,mg.msg.COMMAND|rename mg.msg.USER as \"用户名\",mg.msg.TTY as \"终端\",mg.msg.PWD as \"当前路径\",mg.msg.COMMAND as \"操作命令\", cnt as \"次数\""}
{"input": "riil事件详情。索引可用字段有：riil.message, riil.thread, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "锐捷_RIIL数据，编写查询语句实现如下分析场景", "output": "appname:riil |eval time=formatdate(timestamp,\"MMM-dd HH:mm:ss\") |stats count() as cnt by time,tag,riil.thread,riil.message|rename riil.thread as \"线程\",riil.message as \"详情\""}
{"input": "会话详情。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:session_status| stats count() as ct by oracle.USERNAME,oracle.SID,oracle.MACHINE,oracle.PROGRAM,oracle.SQL_TEXT,oracle.SQL_ID|rename oracle.USERNAME as \"用户名\",oracle.SID as SID,oracle.MACHINE as \"设备名\",oracle.PROGRAM as \"进程名\",oracle.SQL_TEXT as \"SQL详情\",oracle.SQL_ID as SQL_id,ct as \"次数\""}
{"input": "数据库访问量统计。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener HOST= | stats count() as ct by oracle.host_addr,oracle.src_ip | rename oracle.src_ip as \"访问IP\",oracle.host_addr as \"数据库IP\",ct as \"数量\""}
{"input": "数据库访问情况。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener HOST= | stats count() as ct by oracle.host_addr,oracle.src_ip | rename oracle.src_ip as \"访问IP\",oracle.host_addr as \"数据库IP\",ct as \"数量\""}
{"input": "独立访客数UV。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.host_addr,oracle.src_ip | rename oracle.src_ip as \"访问IP\",oracle.host_addr as \"数据库IP\",ct as \"数量\""}
{"input": "dba权限用户。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:user_dba|stats count() by oracle.GRANTEE,oracle.GRANTED_ROLE|table oracle.GRANTEE,oracle.GRANTED_ROLE|rename oracle.GRANTEE as \"受让人\",oracle.GRANTED_ROLE as \"被授予的权限角色\""}
{"input": "表空间用量。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:tablespace |stats count() by oracle.Name,'oracle.Used_(M)'|rename 'oracle.Used_(M)' as \"表空间用量\""}
{"input": "安恒waf源ip入侵事件分布报表，去掉 waf.message. 字段名前缀，按 src_ip.geo.ip 和 event 统计次数。。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": "* AND appname:waf tag: dbappsecurity | rename waf.message.* as * | stats count() as count_ by src_ip.geo.ip,event"}
{"input": "本周事件类型占比。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/w\" appname:waf tag:nsfocus | stats count() as cnt by waf.event_type | rename waf.event_type as \"日志类型\", cnt as \"本周触发的类型\""}
{"input": "根据提交类型、端口和 URL 统计 POST请求的数量。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat NOT waf.method:POST\n|stats count() as cnt by waf.method,waf.dst_port,waf.uri \n| rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "文件访问_被阻断文件详情。索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" dlp.user:*${user|e}*\n| stats count() as cnt by dlp.user,dlp.login_user,dlp.src_ip,dlp.hostname,dlp.dst_user,dlp.file_name,dlp.details,dlp.corporateType\n|rename dlp.user as \"用户\",dlp.login_user as \"登录用户名\",dlp.src_ip as \"源IP\",dlp.hostname as \"源主机名\",dlp.dst_user as \"应用名称\",dlp.file_name as \"阻止文件名\",dlp.details as \"文件路径\",dlp.corporateType as \"账号类型\",cnt as \"次数\""}
{"input": "安恒waf根据提交类型、端口和 URL 分组计算，非 POST 请求的数量。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) NOT waf.method:POST  |stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "安恒waf每台服务器遭攻击事件分布报表。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  | stats count() by waf.dst_ip,waf.event_name|rename waf.dst_ip as \"目的ip\"|rename waf.event_name as \"事件类型\""}
{"input": "安恒waf根据提交类型、端口和 URL 分组统计次数-GET请求。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) waf.method:GET  |stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "请求来源分布前 10 名。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中间件_nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access NOT middleware.http_referer:\"-\"|stats count() as cnt by middleware.http_referer|rename middleware.http_referer as \"请求来源\", cnt as \"访问次数\"|limit 10"}
{"input": "攻击源地理分布，展示国家省份城市结果，取前 20 名。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT (ids.event_level:非攻击事件 OR ids.level:10) AND (NOT \"黑名单\" ) AND (ids.event_name:* OR ids.kv.event_name:*)\n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by src.geo.country,src.geo.province,src.geo.city | limit 20"}
{"input": "访问状态分布前 10 名。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) \n|rename loadblancing.* as * \n| stats count() as cnt by status\n|limit 10"}
{"input": "中间件_kingdee_请求来源分布前 10 名。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access NOT middleware.http_referer:\"-\"|stats count() as cnt by middleware.http_referer|rename middleware.http_referer as \"请求来源\", cnt as \"访问次数\"|limit 10"}
{"input": "", "instruction": "查询来自 172.16.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属省份，表头改为中文", "output": "appname:nginx_log AND source:\"172.16.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "查询来自 172.16.42.6 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属省份，表头改为中文", "output": "appname:nginx_log AND source:\"172.16.42.6\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "查询来自 172.16.43.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属省份，表头改为中文", "output": "appname:nginx_log AND source:\"172.16.43.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "查询来自 172.17.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属省份，表头改为中文", "output": "appname:nginx_log AND source:\"172.17.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "查询来自 173.16.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属省份，表头改为中文", "output": "appname:nginx_log AND source:\"173.16.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "查询来自 173.17.43.6 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属运营商，表头改为中文", "output": "appname:nginx_log AND source:\"173.17.43.6\" | stats count() as ct by nginx.real_ip.last,nginx.geo.isp|rename ct as \"访问总数\"|rename nginx.geo.isp as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux主机账号密码更改或重置事件在昨天发生的日志，按时间(时分秒格式)、IP、用户名统计。重命名为密码修改时间、主机 IP、被修改用户、密码修改次数", "output": "starttime=\"now/d-1d\" endtime=\"now/d\" appname:linux event_name:密码修改事件 \"password changed for\"  |eval time=formatdate(timestamp,\"HH:mm:ss\") |stats count() as cnt by time,ip,user |rename time as \"密码修改时间\",ip as \"主机IP\",user as \"被修改用户\",cnt as \"密码修改次数\""}
{"input": "图片业务1s超时域名与节点对应表。图片业务域名包括：wapx.example.cn,img.example.cn,tv.example.cn。索引可用字段有：cdn.cdn_status, cdn.clientip.geo.city, cdn.clientip.geo.isp, cdn.domain, cdn.event_name, cdn.finished_body_response, cdn.geo.city, cdn.geo.country, cdn.geo.province, cdn.http_status, cdn.prefix_url, cdn.proto, cdn.remote_addr, cdn.request_domain, cdn.request_url, cdn.src_outside_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华为CDN数据数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  AND cdn.finished_body_response:>1 AND (cdn.domain:wapx.example.cn OR cdn.domain:img.example.cn OR  cdn.domain:tv.example.cn)|  stats count() as count_ by cdn.domain,tag | rename cdn.domain as \"域名\", tag as \"节点名称\",count_ as \"访问次数\""}
{"input": "错误日志统计。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios  AND switch.level:<5|stats count() as count_ by switch.log_type,switch.describe|rename switch.time as \"时间\",switch.log_type as \"日志类型\",switch.describe as \"等级\",count_ as \"日志数量\""}
{"input": "fortress_leadsec_源ip用户登录服务器ip用户。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "fortress_leadsec仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | eval src_ip_user = fortress.src_ip+\"_\"+fortress.msg.user_name | eval dst_ip_user =  fortress.src_ip+\"_\"+fortress.msg.account | stats count() as total by src_ip_user,dst_ip_user |rename src_ip_user as from ,dst_ip_user as to "}
{"input": "登录失败原因。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen 登录失败 | stats count() as cnt by firewall.reason|rename firewall.reason as \"原因\",cnt as \"次数\""}
{"input": "源ip目的ip端口攻击轨迹图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall (firewall.pri:1  OR firewall.pri:0) \"dropped\"\n|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)\n|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)\n|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)\n|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)\n|eval proto=if(empty(firewall.proto),0,firewall.proto)\n|eval msg=if(empty(firewall.msg),0,firewall.msg)\n|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb\n|rename aaa as from\n|rename bbb as to"}
{"input": "端口扫描轨迹图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall (firewall.pri:1  OR firewall.pri:0) \"scan detected\"\n|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)\n|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)\n|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)\n|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)\n|eval proto=if(empty(firewall.proto),0,firewall.proto)\n|eval msg=if(empty(firewall.msg),0,firewall.msg)\n|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb\n|rename aaa as from\n|rename bbb as to"}
{"input": "拒绝事件轨迹图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall  \"denied\"\n|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)\n|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)\n|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)\n|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)\n|eval proto=if(empty(firewall.proto),0,firewall.proto)\n|eval msg=if(empty(firewall.msg),0,firewall.msg)\n|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb\n|rename aaa as from\n|rename bbb as to"}
{"input": "非攻击事件数，按事件级别统计。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) | rename waf.* as *,kv.* as * | stats count() as cnt by Evt_level"}
{"input": "waf对攻击事件动作占比。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT(waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) \n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by action"}
{"input": "攻击类型分布。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT(waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) \n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by Evt_type"}
{"input": "攻击源地理分布。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by src.geo.country,src.geo.province,src.geo.city"}
{"input": "非攻击事件数。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec (ids.event_level:非攻击事件 OR ids.level:10) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "中级事件数。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec (ids.event_level:中级事件 OR ids.level:30) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "低级事件数。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec (ids.event_level:低级事件 OR ids.level:20) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "高级事件数。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec (ids.event_level:高级事件 OR ids.level:40) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "攻击类型分布。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT(ids.event_level:非攻击事件 OR ids.level:10) \n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by event_name"}
{"input": "用户登陆失败详情。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sangfor_vpn_new数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)NOT vpn.src.geo.city:other \n| stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city \n| table vpn.src.geo.ip,vpn.dst.geo.ip,cnt,vpn.src.geo.city,vpn.dst.geo.city \n| rename vpn.src.geo.ip as src_addr, vpn.dst.geo.ip as dst_addr,vpn.state as \"动作\" \n| eval desc = \"在10分钟内，\" + src_addr + \"登陆\" + dst_addr + \"错误\" + cnt + \"次\" \n| rename src_addr as \"源IP\",dst_addr as \"目标IP\",vpn.src.geo.city as \"源IP地址\", vpn.dst.geo.city as \"目标IP地址\",cnt as \"登陆失败次数\",desc as \"描述\""}
{"input": "访问失败事件数。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399\n|rename loadblancing.* as * \n| stats count() as cnt "}
{"input": "sangfor_cdn_ad_NAT外网地址top10。索引可用字段有：cdn.cdn_status, cdn.clientip.geo.city, cdn.clientip.geo.isp, cdn.domain, cdn.event_name, cdn.finished_body_response, cdn.geo.city, cdn.geo.country, cdn.geo.province, cdn.http_status, cdn.prefix_url, cdn.proto, cdn.remote_addr, cdn.request_domain, cdn.request_url, cdn.src_outside_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服负载均衡ad数据，编写查询语句实现如下分析场景", "output": "(appname:cdn AND tag:sangfor) | stats count() as cnt by cdn.src_outside_ip |rename cdn.src_outside_ip as \"NAT外网地址\",cnt as \"使用次数\"|limit 10"}
{"input": "攻击事件top10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT(waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) \n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by Module | limit 10"}
{"input": "攻击事件top5。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT(waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) \n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by Module | limit 5"}
{"input": "攻击源地理位置top20。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by src.geo.province,src.geo.city | limit 20"}
{"input": "攻击事件top10。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT(ids.event_level:非攻击事件 OR ids.level:10) \n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by event_name | limit 10"}
{"input": "攻击源地理位置top20。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.event_level:非攻击事件 OR waf.level:10) AND (NOT \"黑名单\" ) AND (waf.event_name:* OR waf.kv.event_name:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by src.geo.province,src.geo.city | limit 20"}
{"input": "点播业务运营商TOP10。点播域名包括：vod.hcs.yottabyte.cn, hlsspvod.rizhiyi.com, sp.vod.rizhiyi.com, hlszbvod.rizhiyi.com。索引可用字段有：cdn.cdn_status, cdn.clientip.geo.city, cdn.clientip.geo.isp, cdn.domain, cdn.event_name, cdn.finished_body_response, cdn.geo.city, cdn.geo.country, cdn.geo.province, cdn.http_status, cdn.prefix_url, cdn.proto, cdn.remote_addr, cdn.request_domain, cdn.request_url, cdn.src_outside_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  AND (cdn.domain:vod.hcs.yottabyte.cn OR cdn.domain:hlsspvod.rizhiyi.com OR  cdn.domain:sp.vod.rizhiyi.com OR cdn.domain:hlszbvod.rizhiyi.com)  |stats count() as _count by cdn.clientip.geo.isp | limit 10 | rename _count as \"总数\""}
{"input": "连接应用事件数量TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.application |limit 10 |rename firewall.flow.application as \"应用\",total as \"事件数量\""}
{"input": "受到攻击机器TOP20。索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus_m|rename ddos.* as *,msg.* as * | stats count() as cnt by dst_ip | limit 20"}
{"input": "访问数据库地址TOP10，重命名 oracle.src_ip 为访问 IP，oracle.host_addr为数据库 IP，统计结果 ct 为数量。。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.src_ip | rename oracle.src_ip as \"访问IP\",oracle.host_addr as \"数据库IP\",ct as \"数量\"|limit 10"}
{"input": "受攻击目的地址TOP10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by dst_ip | limit 10"}
{"input": "攻击源地址TOP10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by src_ip | limit 10"}
{"input": "受攻击主机TOP10。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)\n| rename waf.* as *,kv.* as *  \n| stats count() as cnt by Host | limit 10"}
{"input": "攻击源地址TOP10。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT (ids.event_level:非攻击事件 OR ids.level:10) AND (NOT \"黑名单\" ) AND (ids.event_name:*)\n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by src_ip | limit 10"}
{"input": "受攻击目的地址TOP10。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT (ids.event_level:非攻击事件 OR ids.level:10) AND (NOT \"黑名单\" ) AND (ids.event_name:* OR ids.kv.event_name:*)\n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by dst_ip | limit 10"}
{"input": "受攻击主机TOP10。索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云ids日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:leadsec NOT (ids.event_level:非攻击事件 OR ids.level:10) AND (NOT \"黑名单\" ) AND (ids.event_name:* OR ids.kv.event_name:*)\n| rename ids.* as *,kv.* as *  \n| stats count() as cnt by host | limit 10"}
{"input": "访问源IP_TOP10。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) \n|rename loadblancing.* as * \n| stats count() as cnt by src_ip\n|limit 10"}
{"input": "被访问IP_TOP10。索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "loadbalancing_array数据，编写查询语句实现如下分析场景", "output": "(appname:loadbalancing AND tag:array ) \n|rename loadblancing.* as * \n| stats count() as cnt by dst_ip\n|limit 10"}
{"input": "THREAT事件审计。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto AND firewall.type:THREAT |eval ts=formatdate(timestamp) |sort by timestamp |stats count() as ct by ts,firewall.type,firewall.session_type,firewall.src_zone,firewall.dst_zone,firewall.src_ip,firewall.dst_ip,firewall.dst_port,firewall.application_type,firewall.action |rename ts as \"时间\",firewall.type as \"事件类型\",firewall.session_type as \"会话类型\",firewall.src_zone as \"源域\",firewall.dst_zone as \"目标域\",firewall.src_ip as \"源IP\",firewall.dst_ip as \"目标IP\",firewall.dst_port as \"目标端口\",firewall.application_type as \"应用名称\",firewall.action as \"动作\",ct as \"次数\""}
{"input": "高风险事件查询。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:imperva AND waf.severity:高 |eval ts=formatdate(timestamp) |sort by timestamp |stats count() as ct by waf.attack_type,waf.attack_name,waf.src_ip,waf.dst_ip,waf.dst_port,waf.msg.act,waf.msg.cs3.attackname,waf.msg.cs3.url |rename waf.attack_type as \"事件类型\",waf.attack_name as \"事件名称\",waf.src_ip as \"攻击来源\",waf.dst_ip as \"攻击目标\",waf.dst_port as \"目标端口\",waf.msg.act as \"动作\",waf.msg.cs3.attackname as \"攻击描述\",waf.msg.cs3.URL as \"受影响URL\",ct as \"次数\""}
{"input": "受影响URL详细展现。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:imperva  AND waf.msg.cs3.url:URL*) NOT waf.msg.cs3.url:*IP* NOT waf.msg.cs3.url:偏移* NOT waf.msg.cs3.url:*140.207*  |eval ts=formatdate(timestamp) |sort by timestamp |stats count() as ct by  waf.msg.cs3.url,waf.dst_ip,waf.dst_port,waf.severity,waf.alerttype,waf.alertname,waf.msg.act |rename waf.msg.cs3.url as \"受影响URL\",waf.dst_ip as \"服务器IP\",waf.dst_port as \"端口\",waf.severity as \"等级\",waf.alerttype as \"攻击类型\",waf.alertname as \"攻击名称\",waf.msg.act as \"动作\",ct as \"次数\""}
{"input": "DNS访问源地址TOP10。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS |stats count() as count_ by DNS.src_ip | sort by count_ | rename DNS.src_ip as \"DNS访问源IP\"| limit 10"}
{"input": "DNS域名请求TOP10。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.domain |sort by count_ | rename DNS.domain as \"域名\",count_ as \"数量\" | limit 10"}
{"input": "DNS域访问TOP10。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS |  stats count() as count_ by DNS.domain.domain | sort by count_ | rename DNS.domain.domain as \"域\", count_ as \"访问数量\" | limit 10"}
{"input": "某一源地址进行扫描次数。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa| stats count(firewall.dst_ip) as a by firewall.src_ip| sort by a|rename a as \"同一源地址对多个目的地址进行扫描次数\",firewall.src_ip as \"源地址\""}
{"input": "jboss本周请求量趋势对比。", "instruction": "jboss日志数据，编写查询语句实现如下分析场景", "output": "appname:jboss|eval date=formatdate(timestamp,\"MM-dd\")|eval time=formatdate(timestamp,\"HH\")|stats count() as count_ by time,date|rename count_ as \"请求数量\"|sort by +time"}
{"input": "日志级别与类型占比。索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda  | stats count() as count_1 by tda.level,tda.type| sort by count_1|rename tda.level  as \"日志级别\"|rename tda.type \t as \"类型\"|rename count_1 as \"数量\""}
{"input": "waf_venus事件详情。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| stats count() as cnt by waf.module,waf.event_log_level,waf.uri,waf.src_ip,waf.dst_ip \n| sort by +waf.event_log_level \n| rename  waf.module as \"事件详情\",waf.event_log_level as \"事件安全等级\", waf.uri as \"URL\",cnt as \"次数\",waf.src_ip as \"源地址\",waf.dst_ip as \"目标地址\""}
{"input": "使用CPU多的用户session详情。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:session_max_session | stats count() as ct by oracle.OSUSER,oracle.PROG,oracle.SID,oracle.SPID,oracle.STATUS,oracle.TERMINAL,oracle.VALUE | sort by oracle.VALUE |rename oracle.* as *"}
{"input": "io较大的正在运行的session。索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:session_max_io | stats count() as cnt by oracle.SID,oracle.SPID,oracle.USERNAME,oracle.STATUS,oracle.PROGRAM,oracle.PHYSICAL_READS,oracle.BLOCK_CHANGES | sort by oracle.PHYSICAL_READS|rename oracle.SID as SID,oracle.SPID as SPID,oracle.USERNAME as USERNAME,oracle.STATUS as \"状态\",oracle.PROGRAM as \"进程名\",oracle.PHYSICAL_READS as physical_reads,oracle.BLOCK_CHANGES as block_changes,cnt as \"次数\""}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 20 条，加上所属城市名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 20"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 5 条，加上所属城市名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 5"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 3 条，加上所属运营商名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.isp:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.isp,vpn.dst.geo.ip,vpn.dst.geo.isp | table vpn.src.geo.isp,vpn.dst.geo.isp,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.isp as \"源IP城市\",vpn.dst.geo.isp as \"目标IP城市\" |limit 3"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 10 条，加上所属城市名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 10"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 100 条，加上所属省份名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.province:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.province,vpn.dst.geo.ip,vpn.dst.geo.province | table vpn.src.geo.province,vpn.dst.geo.province,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.province as \"源IP城市\",vpn.dst.geo.province as \"目标IP城市\" |limit 100"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服 VPN数据中统计访问来源和目的访问次数最高的 50 条，加上所属国家名称", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.country:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.country,vpn.dst.geo.ip,vpn.dst.geo.country | table vpn.src.geo.country,vpn.dst.geo.country,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.country as \"源IP城市\",vpn.dst.geo.country as \"目标IP城市\" |limit 50"}
{"input": "展示前 20 条失败访问的源城市和目的城市，以及失败次数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sangfor_vpn数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 20"}
{"input": "jboss近7天错误日志分布。", "instruction": "jboss日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"-7d\" appname:jboss AND (failed OR err OR error OR errors  OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR *exception )|eval date=formatdate(timestamp,\"MM-dd\")|eval time=formatdate(timestamp,\"HH\")|stats count() as count_ by time,date|rename count_ as \"错误日志数量\"|sort by +time"}
{"input": "mongodb慢语句top50明细。索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb mongodb.cost:*\nmongodb.action:* mongodb.namespace:* mongodb.msg:*\n|eval aaa=formatdate(timestamp)  \n| stats count() by aaa,mongodb.action,mongodb.namespace,mongodb.msg,mongodb.cost |sort by mongodb.cost|limit 50\n|rename aaa as \"时间\"\n|rename mongodb.action as \"操作类型\"\n|rename mongodb.namespace as \"表\"\n|rename mongodb.msg as \"sql语句\"\n|rename mongodb.cost as \"耗时\""}
{"input": "dns客户端解析iptop10。索引可用字段有：dns.dhcp_ip, dns.dhcp_mac, dns.dhcp_req_type, dns.domain, dns.gateway, dns.level, dns.query, dns.rcode, dns.search_type, dns.src_ip, dns.type, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns |stats count() as count_ by dns.src_ip| sort by count_ |limit 10 |rename dns.src_ip as \"查询源ip\""}
{"input": "dns解析域名统计top10。索引可用字段有：dns.dhcp_ip, dns.dhcp_mac, dns.dhcp_req_type, dns.domain, dns.gateway, dns.level, dns.query, dns.rcode, dns.search_type, dns.src_ip, dns.type, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns  | stats count() as count_ by dns.domain | sort by count_ |limit 10 |rename dns.domain as \"查询域名\" "}
{"input": "esxicpu占用top10进展，占用量指标重命名为use_cpu/Mhz。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:esxi hrSWRunPerfCPU | stats count() by esxi.pid,esxi.valude| sort by -esxi.valude |limit 10|rename esxi.valude as \"use_cpu/Mhz\""}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少人在玩《堡垒之夜》这个游戏，并且排名前十的用户是谁。", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * |stats count() by user | limit 10"}
{"input": "", "instruction": "我想问的是：A10 有多少个不同的端口被访问到了？", "output": "appname:a10 tag:a10 a10.event_type:session|rename a10.* as *| stats count() by dst_port|limit 10"}
{"input": "", "instruction": "我想问的是，我的 app 在哪些地方有人访问过呢？请帮我找出前十个 IP 地址和访问次数。", "output": "appname:a10 tag:a10 a10.event_type:session|rename a10.* as *| stats count() by src_ip|limit 10"}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道有多少人在使用 SANGFOR 这个应用的移动设备上访问过我们的服务。", "output": "appname:ac tag:sangfor ac.msg.serv:移动终端应用|stats count() by ac.msg.user|limit 20 |rename ac.msg.user as user"}
{"input": "", "instruction": "我想要知道在一段时间内（比如一天）有多少个不同的设备访问了我们的网站，并且按访问量从大到小排序。", "output": "appname:a10 tag:a10 a10.event_type:session|rename a10.* as *| stats count() as cnt by dst_ip,server_ip|sort by cnt |limit 10"}
{"input": "", "instruction": "我想问的是，有没有人从公司的东门进入系统呢？如果有的话，他们使用了什么方式进行身份验证？", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,TDX.TDX_ID_XT_LOGINID,TDX.TDX_ID_XT_CLIENT,TDX.CLIENT_IP,TDX.DEPARTMENT,TDX.REQUEST_TYPE,TDX.TDX_ID_XT_AUTH_INFO | rename TDX.TDX_ID_XT_LOGINID as \"登录ID\",TDX.TDX_ID_XT_CLIENT as \"登录用户\",TDX.CLIENT_IP as \"客户IP\",TDX.DEPARTMENT as \"营业部\",TDX.REQUEST_TYPE as \"处理结果\",TDX.TDX_ID_XT_AUTH_INFO as \"认证信息\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我需要知道某天 Linux 服务器上有哪些安全性较高的登录活动，这些登录活动中是否包含使用错误或被拒绝的登录尝试，以及发生的时间、 IP 地址、主机名称、认证类型（如密码、密钥等）、用户名和访问源地址等信息。我希望能够以易于阅读和理解的方式显示该信息。", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |eval time=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\") |sort by +time |table time,ip,hostname,type,user,src_ip |rename time as \"时间\",ip as \"IP地址\",hostname as \"主机名\",type as \"认证方式\",user as \"用户\",src_ip as \"来源地址\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道发生的服务器安全问题，比如被黑客入侵、数据泄露等情况。你能帮我查一下吗？", "output": "appname:linux tag:secure AND event_name:登录失败事件 (\"Failed password for\"  OR \"authentication failure\") |eval time=formatdate(timestamp,\"yyyy-MM-dd HH:mm:ss\") |sort by +time |table time,ip,hostname,type,user,src_ip |rename time as \"时间\",ip as \"IP地址\",hostname as \"主机名\",type as \"认证方式\",user as \"用户\",src_ip as \"来源地址\""}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在哪些应用中有异常的情况，并且希望能看到详细的信息。", "output": "appname:middleware tag:tomcat  middleware.event_type:*|eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,middleware.event_type,middleware.thread,middleware.message|rename middleware.event_type as \"等级\", middleware.thread  as \"进程\",middleware.message as \"详情\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问的是 Linux 操作系统的登录信息", "output": "appname:linux tag:last |stats dc(linux.login_time) by linux.user,linux.src_ip,linux.login_time,linux.use_time|sort by linux.use_time|rename linux.user as \"用户\",linux.src_ip as \"源主机\", linux.login_time as \"登录时间\",linux.use_time as \"在线时间(天+时:分)\""}
{"input": "索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道某一天的应用有哪些访问IP地址和对应的URL，并且显示出具体的攻击方式。", "output": "appname:ips  tag:dptech ips.dst_ip:* | table ips.attack_type,ips.url | rename ips.attack_type as \"攻击类型\",ips.url as URL"}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道最近三天有没有和Trend Micro AV有关的病毒被查杀或者隔离了吗？请告诉我这些病毒的文件名、时间、等级以及隔离或删除它们的操作员信息。", "output": "appname:antivirus tag:trendmicro dsm.action:Quarantine|eval time=formatdate(timestamp,\"MMM-dd HH:mm\")  |table time,dsm.level,dsm.event_name,dsm.msg.filePath,dsm.msg.dvchost,dsm.msg.dvc |rename dsm.level as \"事件等级\",dsm.event_name as \"事件名称\",dsm.msg.filePath as \"拦截文件路径\",dsm.msg.dvc as \"受感染主机\",dsm.msg.dvchost as \"受感染主机\""}
{"input": "索引可用字段有：router.action, router.auth_result, router.device_name, router.error_msg, router.event_type, router.intf, router.intf_status, router.log_message, router.log_type, router.message, router.module, router.module_name, router.severity, router.src_ip, router.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要查询某一天的路由器配置信息，你能帮我把这些信息表格化吗？？", "output": "appname:router tag:ruijie router.action:CONFIG*|eval time=formatdate(timestamp,\"MM-dd HH:mm\")|table time,router.user,router.src_ip,router.message |rename router.user as \"变更操作用户\",router.src_ip as \"变更操作IP地址\",router.message as \"变更消息详情\""}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道有哪些搜索引擎的访问记录，包括客户端、源IP地址、资源、资源类型、用户代理和操作等信息。", "output": "appname:ac tag:qianxin ac.log_type:search_engine|eval time=formatdate(timestamp,\"HH:mm\") | table time,ac.client,ac.src_ip,ac.resource,ac.resource_type,ac.user_agent,ac.action | rename ac.* as *"}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道你们公司的 antivirus 产品有没有发现 norton atv.cat:\"ESET Threat Event\" atv.user:*${user|e}*这个问题，并且把这些信息列在表格中，并按时间排序。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" atv.user:*${user|e}*|eval time=formatdate(timestamp,\"HH:mm\")|table time,atv.threatName,atv.threatType,atv.user,atv.src_ip,atv.uri,atv.processName,atv.action,atv.circumstances|rename atv.threatName as \"威胁名称\",atv.threatType as \"威胁类型\",atv.user as \"用户名\",atv.src_ip as \"源IP\",atv.uri as \"uri\",atv.processName as \"程序/进程名\",atv.action as \"操作\",atv.circumstances as \"发生原由\""}
{"input": "", "instruction": "我想要知道发生的所有网络攻击事件，包括但不限于DDOS、Ransomware、SQL注入和其他类似的活动。", "output": "appname:honeypot tag:chaitinhp.source:honeypot NOT hp.event_level:无*hp.src_ip:*${srcip|e}*hp.dst_ip:*${dstip|e}*hp.honeypot_name:*${name}*hp.event_name:*${event}*|eval ts=formatdate(timestamp,\"MM-dd HH:mm\")|rename hp.* as *| table ts,src_ip,dst_ip,dst_port,honeypot_name,event_name,event_level,extra.payload.value|rename ts as \"时间\",src_ip as \"入侵源IP\",dst_ip as \"受威胁IP\",dst_port as \"受威胁端口\",honeypot_name as \"受威胁系统\",event_level as \"威胁等级\",event_name as \"威胁名称\",extra.payload.value as \"Payload\""}
{"input": "", "instruction": "我想问的是有没有人在使用 NetApp 的应用 appname：netapp? 你能否帮忙把这些记录重命名为包含列名的形式呢？", "output": "appname:netapp| rename na.* as *| table time,application_name,username,src_ip,proto,message"}
{"input": "", "instruction": "我想询问在Windows上发生的任何故障或错误情况。请告诉我发生的时间、IP地址和错误消息。", "output": "appname:pf_windows tag:system (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR \"错误\" OR \"失败\") |eval time=formatdate(timestamp)|table time,ip,windows.EventData.Data[].text|rename time as \"时间\",windows.EventData.Data[].text as \"错误事件\""}
{"input": "", "instruction": "通过日志易查询获取华为防火墙被访问次数最多的 IP 地址及其访问时间长度分布图表。", "output": "(* AND appname:firewall) AND tag:huawei | eval stime=parsedate(firewall.start_time,\"yyyy/M/d HH:mm:ss\")|eval etime=parsedate(firewall.end_time   ,\"yyyy/M/d HH:mm:ss\") | eval period=etime-stime |sort by period | table firewall.src_ip,period |rename firewall.src_ip as \"IP地址\", period as \"访问时长(毫秒)\" | limit 10"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问的是最近三天内的堡垒机系统中发生的所有登录事件的信息，具体包括：1. 用户名2. IP地址3. 登陆时间4. 登陆方式（例如SSH、RDP等）5. 访问的服务或应用名称（如Fortress）", "output": "starttime=\"-3d\" appname:fortress tag:leadsec fortress.msg.adlg_type:1 |table fortress.msg.begin_time ,fortress.msg.user_name,fortress.src_ip,fortress.msg.account,fortress.dst_ip,fortress.msg.protocol_name| rename fortress.msg.begin_time as \"登录时间\",fortress.msg.user_name as \"堡垒机用户\",fortress.src_ip as \"源ip\",fortress.msg.account as \"登录用户\",fortress.dst_ip as \"服务器ip\",fortress.msg.protocol_name as \"登录方式\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有多少个不同的服务器 IP 地址被 Imperva WAF 防火墙攻击了一次或多次？", "output": "appname:waf  tag:imperva |stats count() as ct by waf.dst_ip |rename waf.dst_ip as \"服务器IP\",ct as \"受攻击数量\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有多少次访问来自于 Imperva WAF 的 IP 地址？", "output": "appname:waf  tag:imperva |stats count() as ct by waf.src_ip |limit 10 |rename ct as \"数量\",waf.src_ip as \"来源IP\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道某一天的nsfocus防火墙日志中有多少条记录涉及到某些关键词或分类的信息。", "output": "( appname:waf tag:nsfocus ) AND ( waf.log_category:\"waf_log_websec\" )* | stats count() as count_ by waf.dst_ip,waf.event_type|rename waf.dst_ip as \"目的ip\"|rename waf.event_type as \"事件类型\""}
{"input": "索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少条 DDOS 消息被 nsfocus_m 分配的标签，并将它们的消息内容复制到新的字段中。", "output": "appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| stats count() as cnt by event"}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在公司的防火墙上发现了一个异常访问，具体表现为源IP地址为192.168.3.11且请求URI中包含了/chatin和/stats两个字符串，并且HTTP方法为GET。你能告诉我这个访问是否属于正常业务活动吗？", "output": "* AND appname:waf tag:chatin|stats count() as count_ by waf.src_ip,waf.attack_type|rename waf.src_ip as \"源ip\"|rename waf.attack_type as \"事件类型\""}
{"input": "索引可用字段有：riil.message, riil.thread, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在哪个应用中产生了异常数量最多的线程和消息，可以这样做：1. 使用 `appname` 过滤器获取名为“riil”的所有日志事件；2. 使用 `eval` 转换器将时间戳格式化为人类可读形式；3. 使用 `stats` 聚合器计算每个时间段内异常数量最多的线程和消息，并使用 `rename` 重命名字段以匹配用户期望的列名称；4. 查询结果中应该有一行显示出现异常数量最多的线程和消息。", "output": "appname:riil |eval time=formatdate(timestamp,\"MMM-dd HH:mm:ss\") |stats count() as cnt by time,tag,riil.thread,riil.message|rename riil.thread as \"线程\",riil.message as \"详情\""}
{"input": "索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道的是有没有人在使用 skygurad 这个软件进行非法活动，并且能够看到他们的操作记录和信息。", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" dlp.user:*${user|e}*| stats count() as cnt by dlp.user,dlp.login_user,dlp.src_ip,dlp.hostname,dlp.dst_user,dlp.file_name,dlp.details,dlp.corporateType|rename dlp.user as \"用户\",dlp.login_user as \"登录用户名\",dlp.src_ip as \"源IP\",dlp.hostname as \"源主机名\",dlp.dst_user as \"应用名称\",dlp.file_name as \"阻止文件名\",dlp.details as \"文件路径\",dlp.corporateType as \"账号类型\",cnt as \"次数\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有多少个请求是通过 POST 方法发送到端口为 80 和 443 的网站上的，并且没有包含 'waf.event_name:*状态*' 或方法为 POST 的 WAF 事件的信息。", "output": "(appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) NOT waf.method:POST  |stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是有没有发现有哪些异常的行为呢？你能不能把这些信息列出来吗？我会根据它们来判断是否需要进行调查。", "output": "appname:ids tag:leadsec (ids.event_level:非攻击事件 OR ids.level:10) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有没有发生过高级事件的leadsec漏洞扫描呢？如果有的话，数量有多少个？", "output": "appname:ids tag:leadsec (ids.event_level:高级事件 OR ids.level:40) | rename ids.* as *,kv.* as * | stats count() as cnt"}
{"input": "索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道leadsec的访问IP地址和数量，并且过滤掉一些不符合条件的数据。但是我不确定具体的字段名，所以我使用了rename命令重命名了一些列名。然后使用stats命令统计出满足要求的数据条数和各个字段的值分布情况，最后使用limit命令限制返回结果集中只显示前十行数据。", "output": "appname:ids tag:leadsec NOT (ids.event_level:非攻击事件 OR ids.level:10) AND (NOT \"黑名单\" ) AND (ids.event_name:* OR ids.kv.event_name:*)| rename ids.* as *,kv.* as *  | stats count() as cnt by dst_ip | limit 10"}
{"input": "", "instruction": "首先从 jboss 应用 log 中提取出包含 timestamp 字段的数据。然后使用 formatdate 函数将该字段转换为字符串格式的日期和时间。接着，它使用 stats 命令计算每个小时内的访问次数并按时间排序。最后，它使用 rename 命令重命名 count（）列为“请求数量”，并以递增顺序排列 time 列。", "output": "appname:jboss|eval date=formatdate(timestamp,\"MM-dd\")|eval time=formatdate(timestamp,\"HH\")|stats count() as count_ by time,date|rename count_ as \"请求数量\"|sort by +time"}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "I want to query the number of messages sent from each app, filtered by sangfor with P2P service.", "output": "appname:ac tag:sangfor ac.msg.serv:P2P|stats count() by ac.msg.user|limit 20 |rename ac.msg.user as user"}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在使用企业微信时发现有一些同事私信我，但是这些私信并没有推送到我的手机上，导致我无法及时回复他人。请你帮忙看一下原因和解决方法吗？", "output": "appname:ac tag:sangfor ac.msg.serv:IM OR ac.msg.app:移动QQ OR ac.msg.app:微信|stats count() by ac.msg.user|limit 20 |rename ac.msg.user as user"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我查找某些关于 Fortress 应用的审计记录，它使用 SBR（安全边界路由器）标记和源 IP 地址进行筛选，并返回前 10 个最常见的源 IP 地址。", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |stats count() by src_ip | limit 10"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在你们公司的系统中，有哪些应用使用了 sbr（Search By Request）这个功能？并且这些应用的请求消息中包含了“*失败*”这几个字样？", "output": "appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) fortress.request_msg:* fortress.result:*失败*| rename fortress.* as * |stats count() by user | limit 10"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在应用名为“loadbalancing”并且标签中包含“array”的情况下，状态码大于等于399的所有请求数量以及每个目的IP地址的数量排名前20的记录。", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399|rename loadblancing.* as *| stats count() by dst_ip|limit 20"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 appname 中包含 \"loadbalancing\"并且 tag 中包含 \"array\"的请求中，状态码大于等于 399 的数量以及每个源 IP 的数量排名从高到低。最多返回 20 个结果。", "output": "(appname:loadbalancing AND tag:array ) loadblancing.status:>399|rename loadblancing.* as *| stats count() by src_ip|limit 20"}
{"input": "索引可用字段有：dlp.action, dlp.actionType, dlp.channelType, dlp.corporateType, dlp.details, dlp.dst_user, dlp.file_name, dlp.hostname, dlp.login_user, dlp.msg, dlp.policyNames, dlp.recv_mail, dlp.send_mail, dlp.service, dlp.severityType, dlp.src.geo.country, dlp.src_ip, dlp.src_user, dlp.user, dlp.workModeType, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问有关 DLP（数据分类和保护）应用的一些信息，特别是在与其他应用通信时使用的端口、协议等方面。", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" | stats count() by dlp.recv_mail |rename dlp.recv_mail as \"收件人\"|limit 10"}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问关于Norton AntiVirus的应用和ESET威胁事件的统计信息。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" | stats count() by atv.uri |rename atv.uri as \"uri\",cnt as \"次数\"|limit 10"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问fortress审计记录中源自哪些IP地址的访问数量以及这些访问所属系统的信息？", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |stats count() as cnt by dst_ip,sys_name|sort by cnt | limit 10"}
{"input": "索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关数据库审计的相关信息，回答应该包括以下几个方面：1. appname:dbaudit 表示这是关于名为 dbaudit 的应用的数据库审计信息；2. db.LogType:* 表示该审计记录中涉及的所有操作类型（operation types）都以 * 结尾，表示不限制具体操作类型；3. stats count() as cnt by db.sql 表示对包含 SQL 语句的列进行统计，并将结果保存在 cnt 字段中；4. sort by cnt 表示根据 cnt 字段的值从大到小排序；5. limit 20 表示只显示前 20 个最常见的 SQL 语句；6. rename db.sql as “SQL 语句”、cnt as “使用次数” 表示重命名第 3 和第 4 步生成的两个列，使它们更容易理解和阅读。因此，根据以上分析，用户在执行数据库审计时可能正在寻找最常使用的 SQL 语句，这可能反映了系统中的性能瓶颈或潜在的问题区域。", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.sql | sort by cnt | limit 20 | rename db.sql as \"SQL语句\",cnt as \"使用次数\""}
{"input": "索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问关于 ESXi 主机的一些警告信息，并希望通过对CPU、内核模块和消息数据进行分析可以找出问题所在。", "output": "(appname:esxi AND tag:vmkwarning)  |rename esxi.* as * | table time,cpu,kernel_module,message"}
{"input": "索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要查看 Huawei 交换机的错误日志，并按时间、模块、级别和原始日志列出结果。请帮忙完成这个任务。", "output": "appname:switch tag:huawei AND (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault)|table timestamp,switch.module,switch.describe,raw_message|rename time as \"时间\",switch.module as \"模块\",switch.describe as \"等级\",raw_message as \"原始日志\""}
{"input": "索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "寻找恶意URL的访问记录。", "output": "appname:tda AND 'tag':malicious_urls |limit 100|eval time=formatdate(timestamp)|table time,tda.src_ip,tda.dst_ip,tda.url,tda.level,tda.event_class,tda.status |rename time as \"日期/时间戳\",tda.src_ip as \"源IP\",tda.dst_ip as \"目的IP\",tda.url as \"url\",tda.level as \"等级\",tda.event_class as \"事件类型\",tda.status as \"状态\""}
{"input": "索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问的是以下内容：这段代码的功能是从某安全产品（TDA）中检索最近100条带有威胁或恶意标签的记录，并将结果以表格形式显示，包括时间、源IP地址、目标IP地址、级别、事件类别、状态和检测类型。其中，time列被重命名为“日期/时间戳”，其他列也进行了相应的重命名。", "output": "appname:tda AND 'tag':threats|limit 100|eval time=formatdate(timestamp)|table time,tda.src_ip,tda.dst_ip,tda.level,tda.detect_type,tda.status |rename time as \"日期/时间戳\",tda.src_ip as \"源IP\",tda.dst_ip as \"目的IP\",tda.level as \"等级\",tda.event_class as \"事件类型\",tda.status as \"状态\",tda.detect_type as \"检测类型\""}
{"input": "索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问一下最近有没有和`safedog`这个关键词相关的安全事件发生过吗？如果有的话，可以告诉我具体的时间、地点以及影响范围么？", "output": "appname:hids tag:safedog  hids.event_type:*Risk  |limit 100 | eval time=formatdate(timestamp,\"HH:mm\")|table time,hids.localIp,hids.level,hids.kbname,hids.desc|rename hids.localIp as \"风险IP\",hids.level as \"风险等级\",hids.kbname as kbname,hids.desc as \"风险描述\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "找关于Palo Alto防火墙、允许流量并按应用类型进行汇总和排序的答案。", "output": "appname:firewall tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(count(),30m) as count_,sum(rcv_) as rcvbyte by firewall.application_type |sort by rcvbyte  |rename firewall.application_type as \"应用\",rcvbyte as \"接收字节\",count_ as \"事件数量\"| limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "搜索来自 Palo Alto Networks Firewall 的应用为“防火墙”且操作为“允许”的日志，并计算每种应用类型的总收发流量和事件数量的趋势图。", "output": "appname:firewall  tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(sum(rcv_),60m) as rcv_byte_trend,count() as count_ by firewall.application_type |rename firewall.application_type as \"应用\",rcv_byte_trend as \"接收字节趋势\",count_ as \"事件数量\"|limit 5"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "查询以下内容：1. Palo Alto Networks Firewall 应用的使用情况；2. Palo Alto Networks Firewall 允许流量的类型、目的地等详细信息；3. Palo Alto Networks Firewall 处理的数据包总数以及相应的发送和接受字节数趋势图表。", "output": "appname:firewall  tag:paloalto AND firewall.action:allow |eval rcv_=tolong(firewall.bytes_received) | stats sparkline(sum(rcv_),30m) as rcv_byte_trend,count() as count_ by firewall.application_type |rename firewall.application_type as \"应用\",rcv_byte_trend as \"接收字节趋势\",count_ as \"事件数量\"|limit 10"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 SANGFOR VPN 服务的一些信息，比如最近发生过哪些异常情况、影响范围最大的服务等等。", "output": "appname:vpn tag:sangfor_0trust  vpn.event_name:access_resource vpn.result:FAILED|table  vpn.time,vpn.user_name,vpn.resource_name,vpn.app.web.request.url,vpn.reason|sort by cnt |limit 10|rename vpn.resource_name as \"资源名称\",vpn.app.web.request.url as \"url\",vpn.reason as \"失败原因\",cnt as \"失败次数\",vpn.time as \"时间\",vpn.user_name as \"访问用户\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问通过 Palo Alto Firewall 拒绝访问的应用和用户", "output": "appname:firewall tag:paloalto AND firewall.action:deny |top 10 firewall.src_ip |rename firewall.src_ip as \"策略拒绝源IP\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 Palo Alto Networks Firewall 的一些信息，并且希望我能列出最近十个拒绝访问的 IP 地址及其对应的地理位置（City）。", "output": "appname:firewall tag:paloalto AND firewall.action:deny |top 10 firewall.dst.geo.city | rename firewall.dst.geo.city as \"目的城市\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道最近几个月发生的网络安全事件中，最危险的应用有哪些？请列出前十名。具体的说，先从包含“firewall”应用名称、标记为“fortinet”且子类型为“app-ctrl”的所有记录开始；对这些记录进行排序，根据“firewall.apprisk”字段的值由高到低排列；然后返回前十个结果，并将“firewall.apprisk”字段重命名为“firewall.kv.apprisk”。", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl| top 10 firewall.apprisk |rename firewall.apprisk as firewall.kv.apprisk "}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问一些网络安全审计相关的信息，首先从 SecurityEvent 表中选择具有 EventID 为 4625（即“成功登录”事件）的记录，并将结果中的字段目标用户名称、帐户域、工作站名称、登入类型以及目标会话标识符", "output": "* AND appname:firewall tag:fortinet  AND firewall.subtype:app-ctrl|top 10  firewall.appcat|rename firewall.appcat as firewall.kv.appcat"}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我需要了解dbappsecurity waf日志中每个威胁或攻击所涉及到的 IP 地址、端口号、URL、事件类型、日志级别以及状态代码等方面的信息。", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status |rename time as \"时间\", waf.message.src_ip.geo.ip as \"源ip\", waf.message.src_port as \"源端口\", waf.message.action as \"动作\", waf.message.event as \"事件类型\", waf.url as \"url地址\", waf.message.threaten as \"日志级别\", waf.message.status as \"状态码\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我做出一张表格，其中包含以下列：时间、源IP、源端口、操作、事件类型、URL地址、日志级别和状态码。", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status|rename time as \"时间\"|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.src_port as \"源端口\"|rename waf.message.action as \"动作\"|rename waf.message.event as \"事件类型\"|rename waf.url as \"url地址\"|rename waf.message.threaten as \"日志级别\" |rename waf.message.status as \"状态码\"     "}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有没有访问过包含 'nsfocus' 和不包含 'waf.log_category:waf_log_wafstat' 的记录的 WAF 实例？", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat|table timestamp,waf.src_ip,waf.src_port,waf.dst_ip,waf.dst_port,waf.method,waf.uri | eval timestamp=formatdate(timestamp,\"yyyy/MM/dd HH:mm:ss\")| rename timestamp as \"时间\",waf.src_ip as \"源IP\",waf.src_port as \"源端口\",waf.dst_ip as \"目标IP\",waf.dst_port as \"目标端口\",waf.method as \"请求方式\",waf.uri as \"请求URL\""}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问Oracle数据库不同域名、实例、实例角色的运行状态和上次启动时间。将对应字段表格列出并改为中文名表头", "output": "appname:oracle AND tag:instance oracle.INSTANCE_NAME:*| table oracle.INSTANCE_NAME, oracle.HOST_NAME,  oracle.STARTUP_TIME,oracle.STATUS, oracle.INSTANCE_ROLE|rename oracle.HOST_NAME as '域名', oracle.INSTANCE_NAME as '实例名', oracle.STATUS as '状态', oracle.STARTUP_TIME as '上次启动时间',oracle.INSTANCE_ROLE as '实例角色'"}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道关于Oracle数据库的连接池的信息，比如连接数量、使用情况等。", "output": "appname:oracle AND tag:pool oracle.INSTANCE_NAME:*|table oracle.HOST_NAME,oracle.INSTANCE_NAME ,oracle.ACTIVE_POOLED_CONNECTIONS,oracle.TOTAL_POOLED_CONNECTIONS | rename oracle.HOST_NAME as \"域名\",oracle.INSTANCE_NAME  as \"实例名\",oracle.ACTIVE_POOLED_CONNECTIONS as \"资源池连接数\",oracle.TOTAL_POOLED_CONNECTIONS as \"资源池可连接总数\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问Cisco ASA防火墙的访问记录，并统计出每个IP地址和端口对之间的通信频率。", "output": "appname:firewall tag:cisco_asa| stats dc(firewall.dst_ip) as a by firewall.src_ip,firewall.dst_port |rename firewall.src_ip as \"源地址\",firewall.dst_port as \"目的端口号\",a as \"同个源地址针对不同目的地址的同一端口次数\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问 Cisco ASA在处理网络流量时，如何统计出不同 IP 源地址对同一目标地址和端口的扫描次数？", "output": "appname:firewall tag:cisco_asa| stats dc(firewall.src_ip) as a by firewall.dst_ip,firewall.dst_port | rename a as \"多个源地址对这一目的地址的这一端口进行扫描的次数\",firewall.dst_ip as \"目的地址\",firewall.dst_port as \"目的端口\""}
{"input": "", "instruction": "帮我列出 WebLogic 应用每行日志的时间(时分)、事件等级、线程和消息详情。表格用中文列名。", "output": "(appname:weblogic tag:app) |eval time=formatdate(timestamp,\"HH:mm\") | table time,middleware.severity,middleware.thread,middleware.msg|rename middleware.severity as \"事件等级\",middleware.thread as \"线程\",middleware.msg as \"消息详情\""}
{"input": "索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想跟踪DDoS攻击的情况，IP地址、端口和URL等信息。", "output": "appname:ips  tag:dptech ips.dst_ip:*|rename ips.msg.attack_period as attack_p,ips.msg.attack_k_period as attack_p| table ips.src_ip,ips.dst_ip,ips.dst_port,ips.event_name,ips.attack_type,attack_p,ips.url,ips.action,ips.block_reason|rename ips.src_ip as \"源地址\",ips.dst_ip as \"被攻击地址\",ips.dst_port as \"被攻击端口\",ips.event_name as \"攻击事件\",ips.attack_type as \"攻击类型\",attack_p as \"攻击阶段\",ips.url as URL,ips.aciton as \"ips操作\",ips.block_reason as \"阻断理由\",ips.action as \"动作\""}
{"input": "索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，最近有没有哪些用户在使用 STB 播放视频时出现卡顿的情况吗？请告诉我这些信息，并以表格的形式给出：", "output": "appname:stb stb.kvmsg.cmd:lag | stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.UserId.area_code_dec|sort by count_ | rename stb.kvmsg.UserId.area_code_dec as \"地区\",count_ as \"卡顿人数\""}
{"input": "索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "最近各个地区的直播间卡顿次数以及数量最多的地区是哪里。", "output": "appname:stb stb.kvmsg.cmd:lag | stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.UserId.area_code_dec|sort by count_ | rename stb.kvmsg.UserId.area_code_dec as \"地区\",count_ as \"卡顿人数\""}
{"input": "", "instruction": "我想问有没有在 Citrix NetScaler 上执行过名为 CMD_EXECUTED 的命令。", "output": "((* AND appname:citrix) AND tag:netscaler) AND 'netscaler.action':CMD_EXECUTED | table netscaler.time ,netscaler.content.User,netscaler.content.Remote_ip,netscaler.content.Command ,netscaler.content.Status| rename  netscaler.time as \"操作时间\",netscaler.content.User as \"操作用户\",netscaler.content.Remote_ip as \"登陆IP地址\",netscaler.content.Command as \"执行命令\",netscaler.content.Status as \"执行结果\""}
{"input": "索引可用字段有：uninxg.iopttype, uninxg.iresulttype, uninxg.log_type, uninxg.srcfile, uninxg.targetfile, uninxg.termip, uninxg.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在寻找关于“Unilog”应用、标记为“LeagSoft”的文件交换的详细信息，并将时间格式化为“MM-DD HH: mm: ss”。然后，用`eval`运算符将时间列转换为可视化的时间戳。最后，只显示六个字段：时间、用户名称、操作终端 IP、操作源文件、操作目标文件和操作类型。", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:fileExchangeDetail) |eval time=formatdate(timestamp,\"MMM-dd HH:mm:ss\") | table  time,uninxg.username,uninxg.termip,uninxg.srcfile,uninxg.targetfile,uninxg.iopttype|rename uninxg.username as \"用户名\", uninxg.termip as \"操作终端IP\",uninxg.srcfile as \"操作源文件\",uninxg.targetfile as \"操作目标文件\",uninxg.iopttype as \"操作动作\""}
{"input": "", "instruction": "查一下赛门铁克邮件网关的相关 cron 任务的次数，按用户分组统计。", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:cron* OR mg.module:CRON* |stats dc(mg.command) as cnt by mg.user,mg.command|rename mg.user as \"用户\",mg.command as \"定时任务\",cnt as \"次数\""}
{"input": "", "instruction": "appname:bb、包含特定标签（tag：mail）的邮件发送记录，进行以下操作：1. 使用 eval 转换器将时间戳格式化为更易读的字符串。2. 将查询结果表格化并重命名列名以清晰地显示信息。", "output": "appname:bb tag:mail bb.sender:* |eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,bb.sender,bb.receiver,bb.msg,bb.result,bb.message_id|rename bb.sender as \"发件人\",bb.receiver as \"收件人\",bb.result as \"结果\",bb.message_id as message_id"}
{"input": "", "instruction": "我正在寻找关于appname:bb、包含特定标签（tag：mail）的邮件发送记录的时间、发送方和接收方以及相关消息内容等详细信息。", "output": "appname:bb tag:mail bb.sender:* |eval time=formatdate(timestamp,\"MM-dd HH:mm\") | table time,bb.sender,bb.receiver,bb.msg,bb.result,bb.message_id|rename bb.sender as \"发件人\",bb.receiver as \"收件人\",bb.result as \"结果\",bb.message_id as message_id"}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "oracle用户列表，包括他们的姓名、账户状态、是否被锁定、到期日期、创建日期等信息", "output": "appname:oracle tag:user_lock|table  oracle.USERNAME,oracle.ACCOUNT_STATUS,oracle.LOCK_DATE,oracle.EXPIRY_DATE,oracle.CREATED|rename oracle.USERNAME as \"用户名\",oracle.ACCOUNT_STATUS as \"账号状态\",oracle.LOCK_DATE as \"锁定日期\",oracle.EXPIRY_DATE as \"到期日期\",oracle.CREATED as \"创建日期\""}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Oracle 这个数据库的哪个表有关于 job、用户、最后修改时间、下次计划修改时间以及具体操作的信息？", "output": "appname:oracle tag:job|table oracle.JOB,oracle.LOG_USER,oracle.LAST_DATE,oracle.NEXT_DATE,oracle.WHAT |rename oracle.*  as *"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，使用哪些应用进行审计操作，并且这些审计记录中包含的标签为 sbr（安全和合规），同时这些审计记录存储在文件 fortress.log_type 中。", "output": "appname:fortress tag:sbr fortress.log_type:AUDIT_LOG | rename fortress.* as * |eval time=formatdate(timestamp,\"HH:mm\") |table time,user,login_user,src_ip,dst_ip,user_name,proto,sys_name,sys_type | rename user as \"用户姓名\",login_user as \"登录账号\",src_ip as \"源地址\",dst_ip as \"目的地址\",proto as \"访问资源登录方式\",user_name as \"访问资源使用的用户名\",sys_name as \"资源/系统名称\",sys_type as \"资源/系统l类型\""}
{"input": "", "instruction": "我正在寻找关于应用“a10”的所有错误消息以及它们发生的时间、服务器、端口、组和状态的信息。", "output": "appname:a10 tag:a10 a10.status:*|eval time=formatdate(timestamp,\"HH:mm\")|rename a10.* as *|table time,server,port,group,message,status"}
{"input": "", "instruction": "我想要知道在 appname 为 a10、tag 为 a10 的情况下，发生过 session 事件的详细信息，包括时间、源 IP、源端口、目的 IP、目的端口、虚拟 IP、虚拟端口、服务器 IP 和服务器端口等。", "output": "appname:a10 tag:a10 a10.event_type:session|rename a10.* as *|eval time=formatdate(timestamp,\"MM-dd HH:mm\")|table time,src_ip,src_port,dst_ip,dst_port,v_ip,v_port,server_ip,server_port|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目的IP\",dst_port as \"目的端口\",v_ip as \"虚拟IP\",v_port as \"虚拟端口\",server_ip as \"服务器IP\",server_port as \"服务器端口\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问一下你最近有没有做任何与安全相关的工作？如果可以的话，能否告诉我一些关于你的经历和技能吗？", "output": "* AND appname:waf tag: dbappsecurity|eval time = formatdate(timestamp)|table time,waf.message.src_ip.geo.ip,waf.message.src_port,waf.message.action,waf.message.event,waf.url,waf.message.threaten,waf.message.status|rename time as \"时间\"|rename waf.message.src_ip.geo.ip as \"源ip\"|rename waf.message.src_port as \"源端口\"|rename waf.message.action as \"动作\"|rename waf.message.event as \"事件类型\"|rename waf.url as \"url地址\"|rename waf.message.threaten as \"日志级别\" |rename waf.message.status as \"状态码\"     "}
{"input": "索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问关于 ESXi 主机上最近的登录信息：1. 用户名、IP地址和时间戳（以易于阅读的方式显示）2. 来自用户代理字符串的应用名称3. 执行的操作4. 登录的时间", "output": "appname:esxi AND 'tag':hostd esxi.action:logged* | eval logged_time=formatdate(timestamp,\"MM-dd HH:mm\")|rename esxi.* as *|rename msg.* as *|table logged_time,src_ip,user,user_agent,action,login_time"}
{"input": "", "instruction": "我想要知道在 FireEye 应用中，关于某个 IP 源地址的访问情况，包括时间、源和目的 IP 和端口、服务名称、消息、操作以及相关链接。", "output": "appname:fireeye tag:nx nx.src_ip:*${srcip}* |rename nx.* as *| table time,src_ip,src_port,dst_ip,dst_port,sname,message,action,link|rename src_ip as \"源IP\",src_port as \"源端口\",dst_ip as \"目标IP\",dst_port as \"目标端口\",sname as \"事件\",time as \"时间\",message as \"事件详情\",action as \"处理动作\",link as URI"}
{"input": "", "instruction": "我想要知道最近有哪些恶意软件被发现，并且可以看到它们的详细信息。你能帮我吗？我需要知道它们发生的时间、它们的名字、他们的来源、目标以及其他一些相关的信息。", "output": "appname:fireeye tag:smart |eval time=formatdate(timestamp,\"MM-dd HH:mm\")|rename sm.* as *| table time,sname,src_ip,dst_ip,os,file_name,file_type,file_path,uri|rename sname as \"威胁名称\",src_ip as \"威胁来源\",dst_ip as \"受威胁主机\",file_name as \"文件名称\",file_type as \"文件类型\",file_path as \"文件路径\",uri as uri"}
{"input": "", "instruction": "我想知道最近leon iocs记录过哪些日志，详细信息包括发生的时间、攻击源 IP、攻击源端口、被攻击目标 IP、事件类型、事件名称、事件方向、执行操作和事件级别。", "output": "appname:iocs tag:leon | rename iocs.* as *|table e_time,src_ip,src_port,dst_ip,event_type,event_name,dire,action,e_lev|rename e_time as \"触发时间\",src_ip as \"威胁地址\",src_port as \"威胁端口\",dst_ip as \"受影响地址\",event_type as \"事件类型\",event_name as \"事件名称\",dire as \"事件方向\",action as \"执行操作\",e_lev as \"事件等级\""}
{"input": "索引可用字段有：dx.dhcp_ip, dx.dhcp_mac, dx.dhcp_req_type, dx.gateway, dx.hostname, dx.moudule, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道我的公网和私网 IP 是什么，以及它们分别绑定到哪个 MAC 地址上。同时也想知道最近一次 DHCP 请求的时刻、类型、分配到的 IP 和 MAC 地址等信息。", "output": "appname:dx tag:dhcp dx.dhcp_req_type:* dx.dhcp_mac:*${mac|e}*dx.gateway:*${gateway|e}*|eval time=formatdate(timestamp,\"HH:mm\")|table time,dx.dhcp_req_type,dx.dhcp_ip,dx.dhcp_mac,dx.hostname,dx.gateway|rename dx.dhcp_req_type as \"请求报文类型\",dx.dhcp_ip as \"被请求IP\",dx.dhcp_mac as \"请求MAC\",dx.gateway as  \"请求网关\",dx.hostname as \"客户端主机名\""}
{"input": "索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我正在寻找与其应用名称为“HIDS”、标记为“safeDog”的安全事件有关的信息；此外，希望排除来自中国的所有信息", "output": "appname:hids tag:safedog  hids.event_type:remoteLogin NOT hids.country:中国 |table hids.datetime,hids.loginIp,hids.country,hids.hostName,hids.userName|rename hids.* as *"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问在处理用户的日志时，遇到过这些问题吗？1. 从 F5 BIG-IP 设备中检索最近的应用负载平衡警报。2. 查看这些警报中的源 IP、目的 IP、消息和状态等详细信息。3. 只要看到最近的 100 个警报记录。", "output": "appname:loadbalancing tag:f5 AND (loadbalancing.level:alert) AND (Monitor instance state)|eval time=formatdate(timestamp,\"MM/dd  HH:mm:ss\")|table time,loadbalancing.src_ip,loadbalancing.dst_ip,loadbalancing.msg,loadbalancing.status|limit 100|rename loadbalancing.src_ip as  src_ip,loadbalancing.dst_ip as dst_ip,loadbalancing.msg as msg,loadbalancing.status as \"状态\""}
{"input": "索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Redis 服务的一些信息，比如 CPU 使用率、内存使用量等。你能帮我把这些数据拉取下来吗？", "output": "appname:redis tag:rds_info| limit 1 | table redis.total_system_memory_human | rename redis.total_system_memory_human as '服务器总内存'"}
{"input": "索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Redis 系统的内存使用情况？", "output": "appname:redis tag:rds_info | limit 1 | table redis.used_memory_peak_human  | rename redis.used_memory_peak_human as 'Redis峰值内存使用'"}
{"input": "索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Redis 服务的当前内存碎片比例是多少呢？这个值有多大？这么大的内存碎片会对系统的性能造成影响吗？", "output": "appname:redis tag:rds_info| limit 1 | table redis.mem_fragmentation_ratio |eval p=todouble(redis.mem_fragmentation_ratio)/100 |rename  p as 'Redis当前内存碎片比率'"}
{"input": "索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是关于 Redis 的一些信息，比如版本、运行模式、是否为集群等。你能告诉我这些吗？", "output": "appname:redis tag:rds_info| limit 1 | eval cluster=if(redis.cluster_enabled==\"1\", \"是\", \"否\")| table redis.redis_version, cluster, redis.uptime_in_seconds, redis.tcp_port| rename redis.redis_version as 'Redis版本', redis.redis_mode as 'Redis运行模式', redis.tcp_port as '运行端口', cluster as '集群启用', redis.uptime_in_seconds as '已运行秒数'"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某一台 Dell 服务器的防火墙日志中发生的所有流量记录。", "output": "appname:firewall tag:dell|eval ts1=formatdate(timestamp)|table  ts1,firewall.src.geo.ip,firewall.src_port,firewall.dst.geo.ip,firewall.dst_port,firewall.proto,firewall.msg|limit 10|rename  ts1 as \"时间\"|rename  firewall.src.geo.ip as \"源ip\"|rename  firewall.src_port as \"源端口\"|rename  firewall.dst.geo.ip as \"目的ip\"|rename  firewall.dst_port as \"目的端口\"|rename  firewall.proto as \"协议\"|rename  firewall.msg as \"处理信息\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，哪些主机访问了 SANGFOR 安全产品的防火墙服务？请列出 IP、端口、地区、时间等信息，并按时间排序，最多显示 10 条记录。", "output": "appname:firewall tag:sangfor|eval ts1=formatdate(timestamp)|table ts1,firewall.dst.geo.city,firewall.src_ip,firewall.src_port,firewall.dst_ip,firewall.dst_port,firewall.app_name,firewall.action|rename ts1 as \"时间\"|rename firewall.dst.geo.city as \"源城市\"|rename firewall.src_ip as \"源地址\"|rename firewall.src_port as \"源端口\"|rename firewall.dst_ip as \"目的地址\"|rename firewall.dst_port as \"目的端口\"|rename firewall.app_name as \"应用名称\"|rename firewall.action as \"系统动作\"|sort by ts1|limit 10"}
{"input": "索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问最近一小时内的 DDoS 攻击情况，寻找带有 `nsfocus` 和 `ddos.load_per` 或 `ddos.men_per` 标签的应用数据。", "output": "appname:ddos tag:nsfocus ddos.load_per:*| eval time=formatdate(timestamp,\"HH:mm:ss\")| table time,ddos.load_per,ddos.men_per | rename time as \"时间\",ddos.load_per as \"Collapsar负荷\", ddos.men_per as \"内存使用率\" | limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某 Linux 系统的消息记录的信息，具体包括：1. 消息的时间；2. 消息发送方或接收方的 IP 地址；3. 消息所属的程序名称和 ID（进程号）；4. 消息的类型和内容；5. 消息的生成时间。", "output": "(appname:linux tag:messages) OR (appname:linux linux.log_type:messages)  |eval time=formatdate(timestamp)|table time,ip,linux.type,linux.msg,linux.pid|rename time as \"时间\",ip as \"主机\" linux.pid as \"进程号\",linux.type as \"操作类型\",linux.msg as \"事件详情\"|sort by time|limit 20"}
{"input": "", "instruction": "我想要知道有哪些用户在搜索页面做了多少次操作？", "output": "appname:frontend_frontend_log AND frontend.message.category:search |stats sparkline(count(),1h) as count_ by frontend.message.user_id|rename frontend.message.user_id as \"用户id\",count_ as \"次数\""}
{"input": "", "instruction": "软件的名称为“LeagSoft”，并且带有标签“tc”。检索出该软件的所有访问记录中包含以下信息：时间、接入状态（是否成功）、设备 IP、接入用户、接入连接交换机、接入 vlan、接入场景和接入失败原因。", "output": "appname:leagsoft tag:tc |eval time=formatdate(timestamp,\"MM-dd HH:mm\")|eval result=if(tc.msg.kv.straccessfailedcode==\"0\",\"接入成功\",\"接入失败\")| rename tc.msg.kv.strdevip as devip,tc.msg.kv.strDevIP as devip|table time,result,devip,tc.msg.kv.strusername,tc.msg.kv.strswitchip,tc.msg.kv.strvlan,tc.msg.kv.strpolicyname,tc.msg.kv.straccessfailedreason|rename result as \"接入状态\",devip as \"设备IP\",tc.msg.kv.strusername as \"接入用户\",tc.msg.kv.strswitchip as \"接入连接交换机\",tc.msg.kv.strvlan as \"接入vlan\",tc.msg.kv.strpolicyname as \"接入场景\",tc.msg.kv.straccessfailedreason as \"接入失败原因\""}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想跟踪Cisco设备的网络活动，并寻找与其关联的任何安全问题或故障。寻找与特定应用（“ac”）、标记（“cisco”）和两个事件 ID （445 和 35160）相关的任何记录。此外，使用 eval 函数将时间戳转换为适当的格式，并在表格中显示该信息，以及重命名列标题以更清楚地表示数据内容", "output": "appname:ac tag:cisco ac.event_id:445 OR ac.event_id:35160|eval time=formatdate(timestamp,\"MM-dd HH:mm\")|table time,ac.src_mac,ac.event_id,raw_message|rename ac.src_mac as \"断线主机\",ac.event_id as \"事件ID\",raw_message as \"事件详情\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我创建一段 WAF 查询语句。具体来说，找出所有带有 \"leadsec\" 标记且级别为非攻击事件或严重等级 10（即警告）的记录。", "output": "appname:waf tag:leadsec (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) | rename waf.* as *,kv.* as * "}
{"input": "索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问最近一小时内发生的非攻击性质或严重等级为 10 的安全事件的信息。", "output": "appname:ids tag:leadsec (ids.event_level:非攻击事件 OR ids.level:10) | rename ids.* as *,kv.* as *  | eval time=formatdate(timestamp,\"HH:mm\")| table time,event_name,Module,src_ip,src_port,dst_ip,dst_port"}
{"input": "", "instruction": "我想问的是数据库的磁盘空间使用情况，你能否告诉我各个数据库实例的磁盘空间使用状况和百分比吗？", "output": "appname:dm tag:instance|stats last(database.total_space) as total_space,last(database.free_space) as free_space by database.instance|eval used_space=tolong(total_space)-tolong(free_space),used_percent=format(\"%.4f\",used_space/tolong(total_space)*100)+\"%\"|rename database.instance as \"实例名称\",total_space as \"表空间总量\",used_space as \"表空间使用大小\",free_space as \"表空空闲大小\",used_percent as \"表空间使用率\""}
{"input": "索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道哪些应用发送了最多的数据量，并按发送数据量从大到小排列。", "output": "appname:exchange tag:tracking |stats sum(exchange.total_bytes) as sum_ by exchange.sender_address|sort by sum_|limit 5|rename exchange.sender_address  as \"发件人\"|rename sum_ as \"接收总大小\""}
{"input": "索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问 Nginx 应用的访问量排名情况", "output": "appname:nginx |top 10 middleware.http_hostname |rename middleware.http_hostname as hostname,count as '数量'"}
{"input": "索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想跟踪一场黑客攻击，并询问有关该事件的信息。我已经注意到，在某些请求中存在不寻常的语法或词汇，这些都是黑客使用的潜在指标。此外，我还看到了一个名为“middleware”的组件，这是一种用于处理HTTP请求和响应的软件技术。根据我的描述，这似乎是一个涉及到应用名称为“Nginx”且未经过中间件（即没有通过反向代理服务器）进行访问的黑客攻击。此外，我还提供了一些其他信息，例如要显示的Top 10结果以及要重命名的字段等等。", "output": "appname:nginx NOT middleware.request:*service=PriceInfo&method=Realprice&op=queryRealPriceByIndexcode&indexcode*|top 10 middleware.request |rename middleware.request as request,count as '数量'"}
{"input": "", "instruction": "我想问 Nginx 访问排名 TOP 10 的客户端 IP 和数量的相关信息。", "output": "appname:nginx|top 10 middleware.clientip |rename middleware.clientip as ip,count as '数量'"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问的是以下内容：检索Hillstone应用的防火墙事件，并按策略拒绝的源IP排序，将其重命名为“被策略拒绝源IP”。", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny|top 10 firewall.src_ip |rename firewall.src_ip as \"被策略拒绝源IP\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，公司的防火墙有哪些异常行为？？这些拒绝访问发生在那些地区？", "output": "appname:firewall tag:novel AND firewall.action:deny | top 10 firewall.dst.geo.city | rename firewall.dst.geo.city as \"目的城市\""}
{"input": "", "instruction": "我想跟踪某些应用的性能问题，并寻找导致该问题发生的原因。通过分析应用名为“frontend_frontend_log”和消息类别为“search”的日志条目来获取有关搜索功能的性能信息。此外，您还要求计算每个搜索命令的平均处理时间（Avg）以及按顺序排列这些数据，然后仅显示前 twenty 个结果。", "output": "appname:frontend_frontend_log  frontend.message.category:search |stats avg(frontend.span) as avg_ by frontend.message.pipe_command.pipe_command |sort by avg_ |limit 20| rename frontend.message.pipe_command.pipe_command as \"搜索命令\",avg_ as \"搜索耗时\""}
{"input": "", "instruction": "在我的应用中，哪些搜索命令花费了最长的时间进行处理？", "output": "appname:frontend_frontend_log  frontend.message.category:search |stats avg(frontend.span) as avg_ by frontend.message.pipe_command.pipe_command |sort by avg_ |limit 20| rename frontend.message.pipe_command.pipe_command as \"搜索命令\",avg_ as \"搜索耗时\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道过去两小时内，哪些 IP 对方和我的服务器进行了通信。这个统计结果最多显示前二十条数据。", "output": "appname:firewall  |stats count() by firewall.src_ip,firewall.dst_ip |rename firewall.src_ip as from |rename firewall.dst_ip as to |limit 20"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Palo Alto Networks Firewall 日志的分类型事件量统计。", "output": "appname:firewall tag:paloalto |stats count() as ct by logtype |rename ct as \"事件总量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在寻找关于 Palo Alto Networks Firewall 应用中发生的系统事件的数量统计数据。", "output": "appname:firewall tag:paloalto AND firewall.type:SYSTEM |stats count() as ct by firewall.type |rename firewalltype as \"系统事件\", ct as \"日志量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，最近我们的公司有没有发生过任何的安全事故或者漏洞吗？如果有的话，可以告诉我一些详细的信息么？", "output": "appname:firewall tag:paloalto AND firewall.type:THREAT |stats count() as ct by firewall.type |rename firewalltype as \"威胁事件\",ct as \"事件量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 Palo Alto Firewall 上，有多少条记录是拒绝访问的？", "output": "appname:firewall tag:paloalto AND firewall.action:deny |stats count() as ct by firewall.proto |rename ct as \"事件数量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Palo Alto Firewall 中拒绝访问的日志，按应用类型统计事件数，表格采用中文表头。", "output": "appname:firewall tag:paloalto AND firewall.action:deny |stats count() as ct by firewall.application_type |rename ct as \"事件数量\",firewall.application_type as \"应用类型\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：这意味着在`waf`表中按`attack_type`列进行统计，并将结果重命名为“发生次数”和“攻击类型”。", "output": "appname:waf  tag:imperva |stats count() as ct by waf.attack_type |rename ct as \"发生次数\",waf.attack_type as \"攻击类型\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道网站的防火墙是否有漏洞，以及这些漏洞被利用了多少次，并且根据漏洞的严重程度进行统计。", "output": "appname:waf  tag:imperva |stats count() as tally by waf.severity |rename tally as \"次数\",waf.severity as \"攻击级别\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问我有关 Palo Alto Networks Firewall 的访问记录和应用类型分布情况。", "output": "appname:firewall tag:paloalto  AND firewall.action:allow |stats count() as ct by firewall.application_type |limit 20 |rename ct as \"数量\",firewallapplication_type as \"应用名称\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "imperva WAF每个防火墙规则（WAF）攻击的数量以及它们的名称。", "output": "appname:waf  tag:imperva |stats count() as tally by waf.attack_name |limit 10 |rename waf.attack_name as \"攻击名称\",tally as \"发生次数\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 Linux 中有哪些安全相关的事件呢？你能列举出它们吗？并给出每种事件发生次数的信息吗？", "output": " (appname:linux tag:secure NOT linux.event_name:登录*) |stats count() as ct by linux.event_name|rename linux.event_name as \"linux事件\",ct as \"数量\""}
{"input": "索引可用字段有：cdn.cdn_status, cdn.clientip.geo.city, cdn.clientip.geo.isp, cdn.domain, cdn.event_name, cdn.finished_body_response, cdn.geo.city, cdn.geo.country, cdn.geo.province, cdn.http_status, cdn.prefix_url, cdn.proto, cdn.remote_addr, cdn.request_domain, cdn.request_url, cdn.src_outside_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某些视频流的访问量情况，这些视频流被托管在 CDN 服务商的节点上：1. 用户使用的是华为CDN；2. 流媒体内容的来源站点包括 `live1.video.cn`、`live2.video.com` 和 `live3.video.com`。", "output": "appname:cdn tag:huawei  AND  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com)  |stats count() as _count by cdn.clientip.geo.isp | rename _count as \"总数\""}
{"input": "索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问 Nginx 服务器的访问记录中是否存在与之相关联的服务名称为 PriceInfo、方法名为 Realprice、操作类型为 queryRealPriceByIndexcode 和索引代码（indexcode）有关的信息。", "output": "appname:nginx NOT middleware.request:*service=PriceInfo&method=Realprice&op=queryRealPriceByIndexcode&indexcode* |stats count() as c by middleware.request,middleware.http_hostname|rename  middleware.request as request,middleware.http_hostname as hostname,c as '数量'"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少条记录匹配 appname:firewall 和 tag:hillstone,并按 firewall.event_type 分组,统计每个分组的总数,然后将 firewall.event_type 重命名为 \"级别\",total 重命名为 \"数量\".", "output": "appname:firewall AND tag:hillstone| stats count() as total by firewall.event_type | rename firewall.event_type as \"级别\",total as\"数量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，公司的防火墙有哪些模块？它们分别在做什么工作？总共有多少个？这些信息能否告诉我公司网络的安全状况呢？", "output": "appname:firewall AND tag:hillstone | stats count() as total by firewall.module | rename firewall.module as \"模块\",total as\"数量\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问hillstone防火墙的访问记录中， 不同策略拒绝了多少次网络请求？", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny | stats count() as total by firewall.policy| rename total as \"事件数量\",firewall.policy as \"拒绝策略\""}
{"input": "", "instruction": "我想询问以下信息：其中，`appname:firewall`表示搜索关键字为“firewall”的应用；`tag:hillstone`表示搜索标签中包含“hillstone”的信息；`firewall.policy:deny`表示搜索策略字段的值为“deny”的信息；`|stats count() as total by firewall.proto`表示对结果进行统计并将结果按`firewall.proto`分组显示；`|rename total as “事件数量”，firewall.proto as “协议”`表示将列名`total`改为“事件数量”和将列名`firewall.proto`改为“协议”。", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny |stats count() as total by firewall.proto | rename total as \"事件数量\",firewall.proto as \"协议\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少个应用名为“防火墙”并且标签包含“希尔斯顿”的流量被拒绝了，并按接口分组统计总数。", "output": "appname:firewall AND tag:hillstone AND firewall.policy:deny|stats count() as total by firewall.interface | rename total as \"事件数量\",firewall.interface as \"接口\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少条记录匹配上述条件，并且统计每个防火墙策略下的命中数量。", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.policy | rename total as \"命中数量\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "在寻找关于 WAF 应用中 HTTP GET 请求的访问数量、目的地端口和 URL 的统计数据。", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat waf.method:GET |stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "有哪些 WAF 报告中包含了关于 nsfocus 的信息？并且统计出了这些报告中每种类型的数量。", "output": "appname:waf tag:nsfocus | stats count() as cnt by waf.event_type | rename waf.event_type as \"日志类型\", cnt as \"本周触发的类型\""}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在有多少条记录的协议为“防火墙”，动作为“拒绝”并且带上了“小说”这个标签？", "output": "appname:firewall tag:novel AND firewall.action:deny |stats count() as ct by firewall.proto |rename ct as \"事件数量\""}
{"input": "索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，你们有没有处理过类似于“csa AND tag:hillstone”这样的搜索词或关键词吗？", "output": "appname:csa AND tag:hillstone | stats count() as total by csa.event_type | rename csa.event_type as \"事件类型\",total as\"数量\""}
{"input": "索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少个 appname 是 csa, tag 是 hillstone 的数据。你能帮我把这些信息列出吗？", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.proto | rename total as \"事件数量\",csa.proto as \"协议\""}
{"input": "索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，CSA这个App有哪些行为呢？而且这些行为发生的次数分别是多少？总共有几个不同的行为吗？", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.action | rename total as \"事件数量\""}
{"input": "索引可用字段有：csa.action, csa.event_type, csa.module, csa.proto, csa.severity, csa.threat_severity, csa.threat_subtype, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关“山石”CSA的所有威胁子类型以及发生这些威胁类型的总次数。", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.threat_subtype | rename total as \"事件数量\""}
{"input": "", "instruction": "我想问有关赛门铁克邮件网关产品的使用情况和用户行为分析报告，并希望通过日志易查询获得相关数据。具体来说，您需要获取所有涉及到该产品的系统调用记录，然后统计每个终端（即登录主机名），每个用户名称，每个密码，以及每个执行的命令的数量。最后将这些字段重命名为相应的标题，例如“用户名”，“终端”等，同时也保留每条数据的计数值（即出现次数）。最终生成的数据表中应该包含以下列：“用户名”，“终端”，“当前路径”，“操作命令”，“次数”。", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:sudo* |stats count() as cnt by mg.msg.TTY,mg.msg.USER,mg.msg.PWD,mg.msg.COMMAND|rename mg.msg.USER as \"用户名\",mg.msg.TTY as \"终端\",mg.msg.PWD as \"当前路径\",mg.msg.COMMAND as \"操作命令\", cnt as \"次数\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有没有在某些 WAF（web application firewall）应用中搜索包含“dbappsecurity”标签且不包括事件名称中带有“状态”字符串的所有记录，并将结果按方法、目的端口和 URL 分组，然后重命名列名为“提交类型”，“访问端口”，“访问的 URL”和“访问次数”。", "output": "(appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) waf.method:GET  |stats count() as cnt by waf.method,waf.dst_port,waf.uri | rename waf.method as \"提交类型\",waf.dst_port as \"访问端口\",waf.uri as \"访问的URL\",cnt as \"访问次数\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想了解以下内容：1. WAF（Web Application Firewall）防火墙记录；2. 来源地域、省份和城市的信息；3. 不在黑名单中的访问请求数量；4. EVT_TYPE列中包含的所有类型。", "output": "appname:waf tag:leadsec NOT (waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) AND (NOT \"黑名单\" ) AND (waf.Evt_type:* OR waf.kv.Evt_type:*)| rename waf.* as *,kv.* as *  | stats count() as cnt by src.geo.country,src.geo.province,src.geo.city"}
{"input": "索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问 Nginx 服务器的访问记录中，排名前十的请求来源和访问次数有哪些信息。", "output": "appname:nginx tag:access NOT middleware.http_referer:\"-\"|stats count() as cnt by middleware.http_referer|rename middleware.http_referer as \"请求来源\", cnt as \"访问次数\"|limit 10"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道应用名为“loadbalancing”并且带有“array”标签的服务在最近一小时内的请求状态分布情况。", "output": "(appname:loadbalancing AND tag:array ) |rename loadblancing.* as * | stats count() as cnt by status|limit 10"}
{"input": "", "instruction": "我想询问的是：在 kingdee 应用中，通过 access 方式获取数据，并且没有使用中间件 http_referer 来过滤数据，然后统计每个不同的值的数量并返回前 10 个结果。", "output": "appname:kingdee tag:access NOT middleware.http_referer:\"-\"|stats count() as cnt by middleware.http_referer|rename middleware.http_referer as \"请求来源\", cnt as \"访问次数\"|limit 10"}
{"input": "", "instruction": "我想询问的是 Nginx 服务器的访问记录，并希望通过对这些访问进行统计和分析来获取有关网站用户行为的信息。", "output": "appname:nginx_log AND source:\"172.16.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "帮我分析 Nginx 服务器的访问日志，并寻找访问来源和地区信息。", "output": "appname:nginx_log AND source:\"172.16.42.6\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "我想要知道网站的访问情况和地区分布，所以我想看一下 Nginx 服务器上的 access log，并按 IP 和地区进行统计。我的查询语句应该是：`appname:nginx_log AND source:\"172.17.42.5\"`然后使用 `stats` 命令计算访问次数，并将结果保存为 `ct`，同时根据 `nginx.real_ip.last`（最后访问IP）和 `nginx.geo.province` （用户所在地）分组，再将各个字段重新命名以便于理解", "output": "appname:nginx_log AND source:\"172.17.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "我想问 Nginx 服务器的访问日志中，有多少条记录符合以下条件：- 来自 IP 地址为 `173.16.42.5` 的用户请求；- 请求路径包含 `/` 和 `nginx_log`。此外，将结果按访问 IP、地区和访问次数进行分组并生成相应的列标题。最后，将访问数量列重命名为“访问总数”，地区列重命名为“省份”以及访问来源列重命名为“访问来源”。如果我的理解不对或您还有其他需要帮助的信息，欢迎您随时告诉我。", "output": "appname:nginx_log AND source:\"173.16.42.5\" | stats count() as ct by nginx.real_ip.last,nginx.geo.province|rename ct as \"访问总数\"|rename nginx.geo.province as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "", "instruction": "我在询问的是以下内容：这意味着寻找来自 IP 地址为 `173.17.43.6` 的 Nginx 用户的访问数据，并按地区和访问次数进行汇总。", "output": "appname:nginx_log AND source:\"173.17.43.6\" | stats count() as ct by nginx.real_ip.last,nginx.geo.isp|rename ct as \"访问总数\"|rename nginx.geo.isp as \"省份\"|rename nginx.real_ip.last as \"访问来源\""}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问的是以下内容：这段代码的功能是对数据集进行分组和汇总，并将结果重命名为“from”和“to”。", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | eval src_ip_user = fortress.src_ip+\"_\"+fortress.msg.user_name | eval dst_ip_user =  fortress.src_ip+\"_\"+fortress.msg.account | stats count() as total by src_ip_user,dst_ip_user |rename src_ip_user as from,dst_ip_user as to "}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道在 SonicWall 上有哪些应用名为“Firewall”且包含标签 sonicwall 的流量，并按源 IP、目的 IP 和消息进行分组统计。", "output": "appname:firewall tag:sonicwall (firewall.pri:1  OR firewall.pri:0) \"dropped\"|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)|eval proto=if(empty(firewall.proto),0,firewall.proto)|eval msg=if(empty(firewall.msg),0,firewall.msg)|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb|rename aaa as from|rename bbb as to"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我分析一份网络安全审计报告中的数据。这份报告可能涉及到 SonicWall 防火墙和一些扫描活动。在这个过程中，我发现了一个非常有趣的现象：同样的源 IP 和目的 IP 地址之间可能会发送不同类型的协议消息（例如 HTTP、SSH 或 DNS），但是它们之间的端口号却总是相同的。为了更好地理解这一点，你可以尝试将上面的查询结果可视化为关系图或树状图，以便于快速识别出任何异常或潜在的问题。", "output": "appname:firewall tag:sonicwall (firewall.pri:1  OR firewall.pri:0) \"scan detected\"|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)|eval proto=if(empty(firewall.proto),0,firewall.proto)|eval msg=if(empty(firewall.msg),0,firewall.msg)|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb|rename aaa as from|rename bbb as to"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道的是发生了多少次拒绝访问的情况，并且根据不同的原因进行分组统计。你可以把结果以表格的形式展示给我吗？", "output": "appname:firewall tag:sonicwall  \"denied\"|eval src_port=if(empty(firewall.src_port),0,firewall.src_port)|eval src_ip=if(empty(firewall.src.geo.ip),0,firewall.src.geo.ip)|eval dst_ip=if(empty(firewall.dst.geo.ip),0,firewall.dst.geo.ip)|eval dst_port=if(empty(firewall.dst_port),0,firewall.dst_port)|eval proto=if(empty(firewall.proto),0,firewall.proto)|eval msg=if(empty(firewall.msg),0,firewall.msg)|eval aaa=src_ip+\"_\"+src_port+\"_\"+proto|eval bbb=dst_ip+\"_\"+dst_port+\"_\"+msg| stats count()  as count_1 by aaa,bbb|rename aaa as from|rename bbb as to"}
{"input": "索引可用字段有：ids.action, ids.attack_name, ids.attack_type, ids.brief, ids.dst_ip, ids.dst_port, ids.event_level, ids.event_name, ids.kv.event_name, ids.level, ids.login_user, ids.module, ids.msg, ids.proto, ids.severity_id, ids.signature, ids.src.geo.city, ids.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道leadsec IDS 的漏洞数量和类型，并且排除掉非攻击事件。", "output": "appname:ids tag:leadsec NOT(ids.event_level:非攻击事件 OR ids.level:10) | rename ids.* as *,kv.* as *  | stats count() as cnt by event_name"}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道网站的防火墙是否存在漏洞，并且要求你只告诉我最常见的十个漏洞的信息。", "output": "appname:waf tag:leadsec NOT(waf.Evt_level:非攻击事件 OR waf.kv.Evt_level:10) | rename waf.* as *,kv.* as *  | stats count() as cnt by Module | limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在有多少个应用的流量中包含了“session end”这个关键词？你能再把结果重命名一下吗？比如将“事件数量”这列改名为“访问次数”。", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.application |limit 10 |rename firewall.flow.application as \"应用\",total as \"事件数量\""}
{"input": "索引可用字段有：ddos.attack_type, ddos.category, ddos.direction, ddos.dst.geo.latitude, ddos.dst.geo.longitude, ddos.dst_ip, ddos.event_type, ddos.load_per, ddos.men_per, ddos.portinfo, ddos.protected_ip, ddos.src.geo.city, ddos.src.geo.latitude, ddos.src.geo.longitude, ddos.src_ip, ddos.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问最近的两十条 DDoS 洪水攻击事件中目的 IP 和数量最多的前二十个IP地址和数量。", "output": "appname:ddos tag:nsfocus_m|rename ddos.* as *,msg.* as * | stats count() as cnt by dst_ip | limit 20"}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在一段时间内，同一个Oracle实例的不同主机上的监听端口有哪些被访问过。", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.src_ip | rename oracle.src_ip as \"访问IP\",oracle.host_addr as \"数据库IP\",ct as \"数量\"|limit 10"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 appname 中包含 \"loadbalancing\" 和 tag 中包含 \"array\" 的数据中，源 IP 最多有多少条记录。", "output": "(appname:loadbalancing AND tag:array ) |rename loadblancing.* as * | stats count() as cnt by src_ip|limit 10"}
{"input": "索引可用字段有：loadbalancing.dst_ip, loadbalancing.level, loadbalancing.listenervs_ip, loadbalancing.msg, loadbalancing.querytype, loadbalancing.responsecode, loadbalancing.severity, loadbalancing.src.geo.province, loadbalancing.src_ip, loadbalancing.status, loadbalancing.type, loadbalancing.user, loadbalancing.username, loadblancing.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 appname 为 loadbalacing 下，tag 是 array 的情况下，dst_ip 有多少条数据。", "output": "(appname:loadbalancing AND tag:array ) |rename loadblancing.* as * | stats count() as cnt by dst_ip|limit 10"}
{"input": "索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道哪些应用最常访问我的DNS服务器，并按访问次数排序，只显示前十个结果。请帮我完成这个任务。", "output": "* appname:DNS |stats count() as count_ by DNS.src_ip | sort by count_ | rename DNS.src_ip as \"DNS访问源IP\"| limit 10"}
{"input": "索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：- 查询最近十大域名的访问量排名；- 根据域名进行排序；- 将结果重命名为“域”和“访问数量”。", "output": "* appname:DNS |  stats count() as count_ by DNS.domain.domain | sort by count_ | rename DNS.domain.domain as \"域\", count_ as \"访问数量\" | limit 10"}
{"input": "索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问tda日志中不同类型的请求数目和频率的信息。", "output": "appname:tda  | stats count() as count_1 by tda.level,tda.type| sort by count_1|rename tda.level  as \"日志级别\"|rename tda.type   as \"类型\"|rename count_1 as \"数量\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道网站访问的用户数量、访问的页面数量以及每个页面的访问人数分布情况。请帮我把这些数据以表格的形式展示给我。", "output": "appname:waf tag:venustech | stats count() as cnt by waf.module,waf.event_log_level,waf.uri,waf.src_ip,waf.dst_ip | sort by +waf.event_log_level | rename  waf.module as \"事件详情\",waf.event_log_level as \"事件安全等级\", waf.uri as \"URL\",cnt as \"次数\",waf.src_ip as \"源地址\",waf.dst_ip as \"目标地址\""}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问关于 Oracle 应用的用户登录信息、会话数量以及其他相关统计数据。您可以根据需要对这些数据进行筛选和排序以获取更具体的信息。", "output": "appname:oracle tag:session_max_session | stats count() as ct by oracle.OSUSER,oracle.PROG,oracle.SID,oracle.SPID,oracle.STATUS,oracle.TERMINAL,oracle.VALUE | sort by oracle.VALUE |rename oracle.* as *"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：- SANGFOR VPN 服务的使用情况；- 源 IP 和目的地之间的连接数以及失败率；- 前 20 个最常见的源和目的地之间的连接数量及其失败率。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 20"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问 VPN 服务的访问量和地区分布情况，以下是我的理解：通过 Sangfor VPNs 来获取关于用户访问量、VPN 源 IP 和目的 IP 所在城市的信息，并按失败次数从高到低排序，同时只显示前五名结果。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 5"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：- sangfor VPNs that are not used by other users of the same app (app name: VPN)- The number of failed connections for each source IP address and destination IP address in different ISP regions- Sorting them based on the failure rate from highest to lowest, with only the top three results displayed", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.isp:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.isp,vpn.dst.geo.ip,vpn.dst.geo.isp | table vpn.src.geo.isp,vpn.dst.geo.isp,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.isp as \"源IP城市\",vpn.dst.geo.isp as \"目标IP城市\" |limit 3"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：- SANGFOR VPN 服务的访问量和地区分布情况；- 源 IP 和目的 IP 在哪些城市，以及这两个城市之间是否有大量的数据传输；- 数据传输失败的原因及数量。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 10"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，你们公司的产品在国外有没有大量用户吗？如果有的话，那他们都使用哪些地区的服务器呢？", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.province:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.province,vpn.dst.geo.ip,vpn.dst.geo.province | table vpn.src.geo.province,vpn.dst.geo.province,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.province as \"源IP城市\",vpn.dst.geo.province as \"目标IP城市\" |limit 100"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是：从Sangfor的VPN流量中筛选出来的其他国家之间的访问情况有哪些？具体来说，统计这些流量中的“失败次数”最多的前五十个对端国家和它们之间相互访问的频次有多少。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.country:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.country,vpn.dst.geo.ip,vpn.dst.geo.country | table vpn.src.geo.country,vpn.dst.geo.country,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.country as \"源IP城市\",vpn.dst.geo.country as \"目标IP城市\" |limit 50"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：检索所有使用 Sangfor VPNs 的应用的日志，但不包括来自其他城市的连接。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city | table vpn.src.geo.city,vpn.dst.geo.city,cnt|sort by -cnt| rename cnt as \"失败次数\",vpn.src.geo.city as \"源IP城市\",vpn.dst.geo.city as \"目标IP城市\" |limit 20"}
{"input": "索引可用字段有：dns.dhcp_ip, dns.dhcp_mac, dns.dhcp_req_type, dns.domain, dns.gateway, dns.level, dns.query, dns.rcode, dns.search_type, dns.src_ip, dns.type, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：- appname:dns tag:zdns 表示该条日志的应用名为“dns”且标签中包含“zdns”。- stats count() as count_ by dns.src_ip 表示对字段“dns.src_ip”进行计数并将结果保存在变量count_中。- sort by count_ 对上一步的结果进行排序，根据count_的值进行升序排列。- limit 10 将前10个结果返回。- rename dns.src_ip as “查询源IP”表示将字段“dns.src_ip”重命名为“查询源IP”，以便于后续处理。", "output": "appname:dns tag:zdns |stats count() as count_ by dns.src_ip| sort by count_ |limit 10 |rename dns.src_ip as \"查询源ip\""}
{"input": "索引可用字段有：dns.dhcp_ip, dns.dhcp_mac, dns.dhcp_req_type, dns.domain, dns.gateway, dns.level, dns.query, dns.rcode, dns.search_type, dns.src_ip, dns.type, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 DNS 查询的一些信息和统计数据？通过 Zeek 分析工具获取 appname 为“dns”并且带有标签为 “zdns”的所有记录，并使用 stats 活动函数计算每个域名出现的次数，然后按计数从高到低排序，最后只显示前 10 个结果中的域名。", "output": "appname:dns tag:zdns  | stats count() as count_ by dns.domain | sort by count_ |limit 10 |rename dns.domain as \"查询域名\" "}
{"input": "索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问关于 ESXi 主机上运行的进程的 CPU 使用率信息。", "output": "appname:esxi hrSWRunPerfCPU | stats count() by esxi.pid,esxi.valude| sort by -esxi.valude |limit 10|rename esxi.valude as \"use_cpu/Mhz\""}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我正在寻找过去一天内 AntiVirus 应用产生的所有警报，并显示以下列出的字段：时间、感染主机 IP、感染主机名、威胁类型、威胁名称、操作、文件路径和文件名称。", "output": "starttime=\"-1d\" appname:antivirus tag:ruixing | eval time=formatdate(timestamp,\"MMM-dd HH:mm\") | table time,antivirus.dst_ip,antivirus.dst_host,antivirus.virus_type,antivirus.virus_name,antivirus.action,antivirus.file_path,antivirus.file_name|rename antivirus.dst_ip as \"感染主机ip\",antivirus.dst_host as \"感染主机名\",antivirus.virus_type as \"威胁类型\",antivirus.virus_name as \"威胁名称\",antivirus.action as \"操作\",antivirus.file_path as \"文件路径\",antivirus.file_name as \"文件名称\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "获取在过去十分钟内发生在 Linux 系统上的所有用户登录活动的信息，包括用户名称、登录终端、访问 IP 和登录时间等详细信息", "output": "starttime=\"-10m\" appname:linux tag:who |table linux.user,linux.terminal,linux.src_ip,linux.login_time|rename linux.user as \"用户\",linux.terminal  as \"终端\",linux.src_ip  as \"源IP\",linux.login_time as \"登录时间\""}
{"input": "", "instruction": "我想问的是，最近一天（-1d）哪些应用在哪些机器上产生了最大的输入和输出网速？", "output": "starttime=\"-1d\" appname:rizhiyi tag:manager_metrics  |stats max(os_net_in_KBps) as max_os_net_in_KBps,max(os_net_out_KBps) as max_os_net_out_KBps by hosts  |sort by +hosts |rename hosts as \"主机\",max_os_net_in_KBps as \"近1天最高入向网络流量KBps\",max_os_net_out_KBps as \"近1天最高出向网络流量KBps\""}
{"input": "索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，你在这段时间里，有哪些 WAF 报警事件被标记为 `nsfocus` 标签？", "output": "starttime=\"now/w\" appname:waf tag:nsfocus | stats count() as cnt by waf.event_type | rename waf.event_type as \"日志类型\", cnt as \"本周触发的类型\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道昨天和今天有多少台服务器的root账户密码被修改过，并且显示出修改的时间、主机IP地址、被修改的用户名称以及修改次数", "output": "starttime=\"now/d-1d\" endtime=\"now/d\" appname:linux event_name:密码修改事件 \"password changed for\"  |eval time=formatdate(timestamp,\"HH:mm:ss\") |stats count() as cnt by time,ip,user |rename time as \"密码修改时间\",ip as \"主机IP\",user as \"被修改用户\",cnt as \"密码修改次数\""}
