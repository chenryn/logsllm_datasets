{"input": "", "instruction": "linux定时任务执行次数前十，包括用户名和命令", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 10"}
{"input": "", "instruction": "linux定时任务执行次数前10个命令", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 10"}
{"input": "", "instruction": "linux定时任务执行次数前5个命令", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 5"}
{"input": "", "instruction": "linux定时任务执行次数前100个命令", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 100"}
{"input": "", "instruction": "linux定时任务执行次数前20个命令", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 20"}
{"input": "", "instruction": "查询包含 sshd 关键字，且包含 Accepted 或 Failed 子关键字的日志记录，并按照时间排序", "output": "sshd (Accepted OR Failed) | sort by timestamp"}
{"input": "", "instruction": "查询包含 java 或 python 关键字的日志，并按照时间排序", "output": "(java OR python) | sort by timestamp"}
{"input": "", "instruction": "linux用户在线时长", "output": "tag:last |stats dc(linux.login_time) by linux.user,linux.src_ip,linux.use_time,linux.login_time|sort by linux.use_time "}
{"input": "日志易Agent采集日志量监控", "instruction": "日志易agent监控数据，编写查询语句实现如下分析场景", "output": "source:*|stats sum(raw_message_length) as sum_ by ip|sort by sum_"}
{"input": "", "instruction": "查找最近一小时内应用性能最差的服务", "output": " starttime=\"now-1h\" _index:app_performance| stats avg(latency) as avg_latency by service | sort by avg_latency"}
{"input": "", "instruction": "从最近 7 天的用户登录次数的定时任务结果中统计TOP10用户", "output": "starttime=\"-7d/d\" endtime=\"now\" _index:schedule schedule_name:用户登录次数  |stats sum(cnt) as value by user_name  |sort by value |limit 10"}
{"input": "", "instruction": "从最近七天的用户使用情况的定时任务结果中统计除了登录以外其他功能使用的TOP10", "output": "starttime=\"-7d/d\" endtime=\"now\" _index:schedule schedule_name:用户使用情况 NOT module_cn:登录 |stats sum(ct) as value by module_cn |sort by value |limit 10"}
{"input": "", "instruction": "两个小时内访问次数最多的IP地址", "output": "starttime=\"now-2h/h\" endtime=\"now\" * | stats count(apache.clientip) as counts by apache.clientip| sort by -counts| head 1"}
{"input": "", "instruction": "Nginx访问量TOP5", "output": "tag:\"nginx_access\"  | stats count ()  as cnt by clientip.geo.ip | sort by -cnt |limit 5"}
{"input": "借记来帐渠道TOP10。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 | stats count() as cnt by sendBankNa | sort 10 by cnt"}
{"input": "贷记来帐渠道TOP10。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 | stats count() as cnt by sendBankNa | sort 10 by cnt"}
{"input": "", "instruction": "我想问的是，有哪些用户使用了 crontab 命令进行了操作？这些操作中最常用的命令是什么？", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 10"}
{"input": "", "instruction": "我想问的是，有哪些用户使用了 crontab 命令进行了操作？这些操作中，前 20 个最常用的命令是什么？", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 20"}
{"input": "", "instruction": "我想问有关 crontab 定时任务事件的统计信息和用户名、命令的排名情况？", "output": "tag:crond event_name:定时任务事件 |stats count() as ct by user,command  |sort by ct  |limit 5"}
{"input": "", "instruction": "最近一次SSH连接状态是否正常并按时间戳从大到小排列。", "output": "sshd (Accepted OR Failed) | sort by timestamp"}
{"input": "", "instruction": "帮我搜索关于 Java 和 Python 的日志，并按时间排序！", "output": "(java OR python) | sort by timestamp"}
{"input": "", "instruction": "从哪些 IP 源发送过最多的日志数据？", "output": "source:*|stats sum(raw_message_length) as sum_ by ip|sort by sum_"}
{"input": "", "instruction": "我想问的是 nginx 访问日志中，按 IP 分组统计访问次数并排序，只显示前五个IP的访问数量和总数。", "output": "tag:\"nginx_access\"  | stats count ()  as cnt by clientip.geo.ip | sort by -cnt |limit 5"}
{"input": "", "instruction": "我想要知道在过去一周里，有哪些用户最常进行了登录操作。。", "output": "starttime=\"-7d/d\" endtime=\"now\" _index:schedule schedule_name:用户登录次数  |stats sum(cnt) as value by user_name  |sort by value |limit 10"}
{"input": "", "instruction": "我想询问最近两小时内访问网站的数量排名第一的IP地址。", "output": "starttime=\"now-2h/h\" endtime=\"now\" * | stats count(apache.clientip) as counts by apache.clientip| sort by -counts| head 1"}
{"input": "", "instruction": "我想问有关 Windows 应用的登录和注销事件的信息。其中 `json.event_id` 表示事件 ID（4624 和 4625），`json.src_ip` 表示源 IP地址（`-`表示任何值）以及 `json.username` 表示用户名（`SYSTEM`表示系统用户）。该查询使用布尔运算符 `NOT` 来排除某些结果，即不包括来自未知IP地址或系统用户的登录", "output": "appname:windows (json.event_id:4624 OR json.event_id:4625) NOT (json.src_ip:\"-\" OR json.username:SYSTEM)| stats count() as cnt by json.username| sort by cnt |limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux用户执行定时任务次数统计，包括用户名和命令，展示前 10 条", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux用户执行定时任务次数，展示前 20 条", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 20"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux用户执行定时任务次数，包括用户名和执行的命令，展示前 100 条", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 100"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux用户执行定时任务次数，展示占比最多的前 5 条命令历史", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 5"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux上不同用户执行的定时任务命令数据，按次数展示前 50 条", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 50"}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix各主机操作类型比例前 10 名", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 10 "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix各主机操作类型比例前 100 名", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 100 "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix各主机操作类型比例前 5 名", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 5 "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix各主机操作类型比例前 50 名", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 50 "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix各主机操作类型比例前 20 名", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 20 "}
{"input": "排除日志原文中带有 syslog: 和 godmd 字样的数据以外，统计aix各主机操作类型比例前 10 名。索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix  NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 10"}
{"input": "用户执行定时任务次数前 10 名。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:crond) OR (appname:linux \"CROND\")  |stats count() as ct by linux.user,linux.command |sort by ct |limit 10"}
{"input": "内网访问外网目的地址_端口TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.src.geo.city:private |stats count() as cnt by firewall.dst_ip,firewall.dst_port|sort by cnt |limit 10"}
{"input": "内网访问外网目的IP地址TOP20。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.src.geo.city:private \n|stats count() as cnt by firewall.dst.geo.province,firewall.dst.geo.city\n|sort by cnt\n|limit 20"}
{"input": "内网访问外网源地址_端口TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.src.geo.city:private |stats count() as cnt by firewall.src_ip,firewall.src_port|sort by cnt |limit 10"}
{"input": "非内网会话源地址_端口TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   NOT firewall.src.geo.city:private |stats count() as cnt by firewall.src_ip,firewall.src_port|sort by cnt |limit 10"}
{"input": "非内网会话目的地址_端口TOP10。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   NOT firewall.src.geo.city:private |stats count() as cnt by firewall.dst_ip,firewall.dst_port|sort by cnt |limit 10"}
{"input": "非内网会话源IP地址TOP20。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   NOT firewall.src.geo.city:private \n|stats count() as cnt by firewall.src.geo.province,firewall.src.geo.city\n|sort by cnt\n|limit 20"}
{"input": "访问资源最频繁TOP10。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log\n| stats count() as cnt by fortress.user| sort by cnt\t|limit 10"}
{"input": "目标IP跟目标端口关系图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.dst_ip,firewall.dst_port |sort by cnt"}
{"input": "源端口和目标端口的关系图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.src_port,firewall.dst_port |sort by cnt"}
{"input": "源IP和目标IP的关系图。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.src_ip,firewall.dst_ip |sort by cnt"}
{"input": "防火墙访问IP关系图，按请求量取前 20 对。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa |stats count() as cnt by firewall.src.geo.ip,firewall.dst.geo.ip | sort by cnt |limit 20"}
{"input": "防火墙拒绝事件访问次数分布前 10 名。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa deny | stats count() as cnt by  firewall.src.geo.ip,firewall.dst.geo.ip,firewall.dst_port | sort by cnt |limit 20"}
{"input": "连接数据库方式分布前 10 名。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.msg.library | sort by cnt | limit 20"}
{"input": "触发审计规则分布占比前 10 名。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.msg.rule_name | sort by cnt | limit 20 "}
{"input": "境外攻击源地理分布前 10 名。索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational NOT ips.src.geo.city:private NOT ips.src.geo.country:中国\n| stats count() as cnt by ips.src.geo.country,ips.src.geo.province|sort by cnt |limit 10"}
{"input": "威胁事件目标地理分布前 10 名。索引可用字段有：nx.dst.geo.city, nx.dst.geo.province, nx.dst_ip, nx.dst_port, nx.level, nx.sname, nx.src.geo.city, nx.src.geo.country, nx.src.geo.province, nx.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.dst.geo.province,nx.dst.geo.city|sort by cnt |limit 10"}
{"input": "邮件网关__威胁邮件类型前 10 名。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.sname | sort by cnt | limit 10"}
{"input": "邮件网关__威胁邮件附件类型占比分布前 10 名。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.file_type | sort by cnt | limit 10"}
{"input": "访问数据库源地址TOP20。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.src_ip | sort by cnt | limit 20"}
{"input": "访问数据库客户端软件TOP20。索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.msg.client_software | sort by cnt | limit 20"}
{"input": "应用控制阻塞应用TOP10。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:阻塞| stats count() as cnt by ac.policy,ac.app|sort by cnt | limit 10"}
{"input": "所有客户端和目标 IP 的TOP10。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:*| stats count() as cnt by ac.client,ac.dst_ip|sort by cnt | limit 10"}
{"input": "应用控制阻塞用户TOP10。索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:阻塞| stats count() as cnt by ac.client,ac.dst_ip|sort by cnt | limit 10"}
{"input": "网络拦截目的地址和省份TOP10。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" \n| stats count() as cnt by atv.dst_ip,atv.dst.geo.province\n|sort by cnt \n|limit 10"}
{"input": "防火墙拦截源地址和省份TOP10。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Firewall Event\" \n| stats count() as cnt by atv.src_ip,atv.src.geo.province\n|sort by cnt \n|limit 10"}
{"input": "受攻击地址TOP10。索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin |stats count() as cnt by nta.dst_ip,nta.dst_ip_city|sort by cnt |limit 10"}
{"input": "攻击源TOP10。索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin |stats count() as cnt by nta.src_ip,nta.src_ip_city|sort by cnt |limit 10"}
{"input": "境外威胁源TOP10。索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin  NOT nta.src.geo.city:private NOT nta.src.geo.country:中国\n| stats count() as cnt by nta.src_ip,nta.src_ip_city|sort by cnt |limit 10"}
{"input": "威胁事件源地理位置TOP10。索引可用字段有：nx.dst.geo.city, nx.dst.geo.province, nx.dst_ip, nx.dst_port, nx.level, nx.sname, nx.src.geo.city, nx.src.geo.country, nx.src.geo.province, nx.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.src.geo.province,nx.src.geo.city|sort by cnt |limit 10"}
{"input": "ex_邮件网关__威胁邮件发件人TOP10。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.src_user | sort by cnt | limit 10"}
{"input": "ex_邮件网关__威胁邮件来源DNS_TOP10。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.src_dns_domain | sort by cnt | limit 10"}
{"input": "ex_邮件网关__威胁邮件收件人TOP10。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.dst_user | sort by cnt | limit 10"}
{"input": "被扫描主机及端口TOP10。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() as cnt by hp.dst_ip,hp.dst_port|sort by cnt |limit 10"}
{"input": "受威胁主机及威胁事件TOP10。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot NOT hp.event_level:无* |stats count() as cnt by hp.dst_ip,hp.event_name|sort by cnt | limit 10"}
{"input": "各类操作会话数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  \n| stats dc('fortress.kv.会话标识') as cnt by 'fortress.kv.日志类型'\n|sort by cnt "}
{"input": "受威胁操作系统类型分布前 10 名。索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "HIDS_安全狗数据，编写查询语句实现如下分析场景", "output": "appname:hids tag:safedog  hids.event_type:risk | stats dc(hids.localIp)as cnt by hids.osType|sort by cnt |limit 15"}
{"input": "索引可用字段有：syslog.resp_time, syslog.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "查询 syslog 日志中包含 error, fail 或 fatal 关键字的记录，并按照时间排序", "output": "appname:syslog (error OR fail OR fatal) | sort by timestamp"}
{"input": "用户耗时排名前 20。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats max(stb.maxtime) as max_ by stb.user_account | sort   by max_ | limit 20"}
{"input": "城市平均耗时排名前 20。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats avg(stb.maxtime) as avg_ by stb.area_code_dec | sort   by avg_ | limit 20"}
{"input": "", "instruction": "查询 nginx 日志中真实用户 IP 的总流量分布，按流量排序", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm"}
{"input": "", "instruction": "vsphere_esxi各宿主机上虚拟机数量", "output": "appname:vsphere tag:vsphere source:VirtualMachine* |stats dc(name) as cnt by host |sort by cnt"}
{"input": "mongodb平均cost最慢的表排名前 50。索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb mongodb.cost:*\nmongodb.action:* mongodb.namespace:* mongodb.msg:*\n| stats avg(mongodb.cost) as avg_cost by mongodb.namespace|sort by avg_cost|limit 50"}
{"input": "应用协议占比前 10 名。", "instruction": "lingcloud流量数据，编写查询语句实现如下分析场景", "output": "appname:lingcloud AND tag:kpi_list_all utc AND [[appname:lingcloud AND tag:kpi_permin_site utc |stats avg(lingcloud.data.totalBytes) as cnt by lingcloud.siteid|sort by cnt|limit 1|fields lingcloud.siteid]] |stats sum(lingcloud.totalbytes) as cnt by lingcloud.rulename"}
{"input": "middleware_tomcat_来源IP发送流量TOP10。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_tomcat数据，编写查询语句实现如下分析场景", "output": "(appname:middleware tag:tomcat)  |stats sum(middleware.bytes_sent) as len by middleware.src_ip|sort by len|limit 10"}
{"input": "来源IP发送流量TOP10。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats sum(tomcat.bytes_sent) as len by tomcat.src_ip|sort by len|limit 10"}
{"input": "", "instruction": "用户访问深度分布", "output": "appname:apache| stats count(apache.domain) as counts by depth| sort by -counts"}
{"input": "登录成功帐号分布。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei  (switch.brief:LOGIN_OK OR \"succeeded in logging in\" OR switch.brief:LOGINOK) |stats count() as count_ by switch.kvmsg.UserName|sort by count_ "}
{"input": "登录失败帐号分布。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL)|stats count() as count_ by switch.kvmsg.UserName|sort by count_ "}
{"input": "linux账户属性变更。索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:audit AND (audit.msg.ser:userdel OR audit.msg.ser:useradd OR audit.msg.ser:passwd OR audit.msg.ser:usermod OR audit.msg.ser:gpasswd OR audit.msg.ser:groupadd OR audit.msg.ser:groupdel OR audit.msg.ser:groupmod) | stats count() as change by ip,hostname,audit.msg.ser,audit.msg.info,timestamp | sort by timestamp"}
{"input": "发生错误最大的20个卡号。索引可用字段有：epay.module, epay.response.customerId, epay.response.responseTextMessage, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "支付聚合_epay数据，编写查询语句实现如下分析场景", "output": "appname:epay AND NOT epay.response.responseTextMessage:交易成功 |stats count() as tally by epay.response.customerId |sort by tally |limit 20"}
{"input": "发生错误最多的20个模块。索引可用字段有：epay.module, epay.response.customerId, epay.response.responseTextMessage, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "支付聚合_epay数据，编写查询语句实现如下分析场景", "output": "appname:epay AND NOT epay.response.responseTextMessage:交易成功 |stats count() as tally by epay.module |sort by tally |limit 20"}
{"input": "", "instruction": "从web服务收到的连接请求最高的源IP", "output": "_index:tcp appname:conn | stats count(src_ip) as counts by src_ip| sort by -counts | head 1"}
{"input": "", "instruction": "查询网络中SYN flood攻击", "output": "_index:tcp appname:conn  action:syn | stats count(src_ip) as counts by src_ip| sort by -counts | head 10"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "前10个国家的访问数量", "output": "appname:apache | stats count(apache.clientip) as counts by geoip2_investigate.country_name| sort by -counts | head 10"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "获取访问深度等于3的页面URL及其访问量", "output": "appname:apache depth:3 | stats count(apache.request_path) as counts by apache.request_path, apache.domain| sort by -counts"}
{"input": "访问忙碌运营商TOP10。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.isp | sort by count_ | limit 10"}
{"input": "DNS解析结果分布地域TOP10。索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.city | sort by count_ | limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux命令审计", "output": "appname:linux AND audit.msg.ser:shell_cmd | stats count() as cmd by ip,hostname,audit.msg.user,audit.msg.path,audit.msg.command,audit.msg.exec_time,audit.msg.src_ip | sort by audit.msg.exec_time "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_linux账户属性变更", "output": "appname:linux tag:secure AND (type:userdel OR type:useradd OR type:passwd OR type:usermod OR type:gpasswd OR type:groupadd OR type:groupdel OR type:groupmod)  |stats count() as cnt by ip,hostname,type,timestamp,event_name,user | sort by timestamp "}
{"input": "linux命令审计。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:linux AND audit.msg.ser:shell_cmd | stats count() as cmd by ip,hostname,audit.msg.user,audit.msg.path,audit.msg.command,audit.msg.exec_time,audit.msg.src_ip | sort by audit.msg.exec_time "}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url占比，展示前 10 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url占比，展示前 20 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 20"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url占比，展示前 50 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 50"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器访问成功的url占比，展示前 100 条", "output": "(appname:middleware AND tag:iis) middleware.status:<400 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 100"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器访问成功的url占比，展示前 5 条", "output": "(appname:middleware AND tag:iis) middleware.status:<400 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 5"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url参数占比，展示前 20 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 20"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url参数占比，展示前 10 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url参数占比，展示前 100 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 100"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的访问失败url参数占比，展示前 5 条", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 5"}
{"input": "postgresql数据库错误返回内容前 20 条。索引可用字段有：postgresql.command_tag, postgresql.database, postgresql.duration, postgresql.error_severity, postgresql.ip, postgresql.sql_state_code, postgresql.stringmess, postgresql.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql NOT postgresql.error_severity:LOG | stats count() as count_1 by postgresql.stringmess|sort by count_1|limit 20"}
{"input": "mongodb操作类型与表占比前 10 名。索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb | stats count()  as count1 by mongodb.action,mongodb.namespace|sort by count1|limit 10"}
{"input": "命中rule占比前 10 名。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() as count_1 by firewall.kv.rule|sort by count_1|limit 10"}
{"input": "访问失败url占比前 10 名。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_microsoft_iis数据，编写查询语句实现如下分析场景", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 10"}
{"input": "访问失败url参数占比前 10 名。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_microsoft_iis数据，编写查询语句实现如下分析场景", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 10"}
{"input": "tda事件类型占比前 10 名。索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda | stats count() as count_1 by tda.type|sort by count_1| limit 10"}
{"input": "丢弃事件协议占比前 10 名。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "\nappname:firewall AND tag:sonicwall \"dropped\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "请求类型与失败返回占比前 10 名。索引可用字段有：ths_all.ANSTYPE, ths_all.GDZH, ths_all.funccn, ths_all.msg, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "appname:ths_all  (ths_all.ANSTYPE:0 ) NOT ths_all.msg:*.*  NOT ths_all.msg:*;*  NOT ths_all.msg:\"-\" NOT ths_all.msg:\":\"|stats count() as count_1 by ths_all.funccn,ths_all.msg|sort by count_1|limit 10"}
{"input": "", "instruction": "Check Point 防火墙查询被阻止的连接请求IP", "output": "appname:firewall tag:check_point blocked:true | stats count(remote_ip) as counts by remote_ip| sort by -counts | head 10 "}
{"input": "", "instruction": "SonicWALL防火墙日志查询被拒绝的连接请求IP", "output": "appname:firewall tag:sonicwall proto:TCP AND action:rejected | stats count(src_ip) as counts by src_ip | sort by -counts | head 10"}
{"input": "", "instruction": "最近一小时内浪潮云incloud_sphere数据按 host 分组统计数据量", "output": "starttime=\"now-1h\" endtime=\"now\" appname:incloud_sphere tag:host |stats count() as cnt by host |sort by +host "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "errpt错误TOP10", "output": "appname:aix tag:errpt|stats count(hostname) as count_1 by  hostname,aix.type_dec| sort by count_1 |limit 10"}
{"input": "errpt错误TOP10。索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:errpt|stats count(hostname) as count_1 by  hostname,aix.type_dec| sort by count_1 |limit 10"}
{"input": "华三VPN访问目的端口TOP20占比。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华三VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn AND tag:h3c |stats count(vpn.dst_port)  as _ct by vpn.dst_port |sort by _ct |limit 20"}
{"input": "华三VPN源端口TOP20统计。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "华三VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn AND tag:h3c |stats count(vpn.src_port)  as _ct by vpn.src_port|sort by _ct |limit 20"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在某一天的有多少个访问了某些应用名和标签为“dc”的主机的防火墙，并按访问量从大到小排序，只显示前十个IP地址和端口号对。", "output": "appname:firewall tag:dc   firewall.src.geo.city:private |stats count() as cnt by firewall.dst_ip,firewall.dst_port|sort by cnt |limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道哪些IP地址最常与我的公网IP进行通信，并按数量排序，只显示前二十个结果。", "output": "appname:firewall tag:cisco_asa |stats count() as cnt by firewall.src.geo.ip,firewall.dst.geo.ip | sort by cnt |limit 20"}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，我的电脑上出现了一道红色的横线，上面有一串字符：“您的计算机可能已被勒索软件感染”。我不知道这是怎么回事，你能告诉我吗？", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Firewall Event\" | stats count() as cnt by atv.src_ip,atv.src.geo.province|sort by cnt |limit 10"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是有没有大量的用户在使用公交App叫“乘客”进行跨城市旅行，并且他们的目的地都是哪些城市？", "output": "appname:nta tag:chaitin |stats count() as cnt by nta.dst_ip,nta.dst_ip_city|sort by cnt |limit 10"}
{"input": "索引可用字段有：nx.dst.geo.city, nx.dst.geo.province, nx.dst_ip, nx.dst_port, nx.level, nx.sname, nx.src.geo.city, nx.src.geo.country, nx.src.geo.province, nx.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在过去三天内，从哪些省份和城市发送了最多的恶意软件攻击请求？", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.src.geo.province,nx.src.geo.city|sort by cnt |limit 10"}
{"input": "", "instruction": "我想问的是，有多少次访问了名为“honeypot”的应用，并且带有标签“chaitin”，同时没有记录任何事件级别为“无”的访问？并按访问次数从高到低排序，然后只显示前十个IP地址和相应的访问数量。", "output": "appname:honeypot tag:chaitin   hp.source:honeypot NOT hp.event_level:无* |stats count() as cnt by hp.dst_ip,hp.event_name|sort by cnt | limit 10"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是最近十天内哪个IP地址下载最多数据", "output": "appname:nta AND tag:eve  nta.flow.bytes_toserver:*|stats sum(nta.flow.bytes_toserver) as cnt by nta.src_ip |sort by cnt |limit 10"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是最近十天哪些IP下载了最多的数据？可以把结果按下载量排名展示给我吗？谢谢！", "output": "appname:nta AND tag:eve  nta.flow.bytes_toclient:*|stats sum(nta.flow.bytes_toclient) as cnt by nta.src_ip |sort by cnt |limit 10"}
{"input": "", "instruction": "我想问的是，哪个 IP 地址发送了最多的数据量？可以把结果按数据大小排序，并只显示前 10 个IP地址和他们的下载总量。", "output": "appname:pf_tomcat |stats sum(tomcat.bytes_sent) as len by tomcat.src_ip|sort by len|limit 10"}
{"input": "索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，哪些域名的IP地址最多出现在用户访问网站的请求头中的？并按数量从大到小排列。", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.city | sort by count_ | limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，soninwall防火墙哪些协议最多地丢弃数据包？你能给出十个吗？", "output": "appname:firewall AND tag:sonicwall \"dropped\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，我们的sonicwall 防火墙有多少次检测到病毒扫描行为呢？你能帮我把这些数据从日志易中拉出来吗？", "output": "appname:firewall AND tag:sonicwall \"scan detected\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道 AIX 发生过多少错误的次数以及各个主机出现的次数，并且只显示前十名。", "output": "appname:aix tag:errpt|stats count(hostname) as count_1 by  hostname,aix.type_dec| sort by count_1 |limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 Linux 下面，哪些用户最常用的命令是 crontab？你能帮我列出前二十个吗？", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 20"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在系统中有哪些用户正在运行 crond 服务的进程？并且按数量排序，并只显示前五个最高数量的进程。", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 5"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我正在寻找关于在 Linux 系统上使用 crontab 命令管理任务计划器的信息。", "output": " (appname:linux tag:crond)  |stats count() as ct by linux.user,linux.command |sort by ct |limit 50"}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问最近发生在 appname=aix 和 syslog 或 godmd 没有同时出现的 10 个事件中，每种类型的数量统计和排序后的结果。", "output": "appname:aix   NOT (\"syslog:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 10 "}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某款应用的访问统计信息，希望您能为我提供前五名最常用的功能模块及其数量。", "output": "appname:aix   NOT (\"syslog:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host|sort by ct|limit 5 "}
{"input": "索引可用字段有：oracle.ACCOUNT_STATUS, oracle.ACTION, oracle.ACTION_NAME, oracle.BLOCK_CHANGES, oracle.CREATED, oracle.EVENT, oracle.EXECUTIONS, oracle.EXPIRY_DATE, oracle.FILE_COUNTS, oracle.FILE_SIZE, oracle.FREE_BYTES, oracle.GRANTED_ROLE, oracle.GRANTEE, oracle.HOST_NAME, oracle.INSTANCE_NAME, oracle.JOB, oracle.LAST_DATE, oracle.LIMIT, oracle.LOCK_DATE, oracle.LOGON_TIME, oracle.LOG_USER, oracle.MACHINE, oracle.NEXT_DATE, oracle.Name, oracle.ORACODE, oracle.OSUSER, oracle.PHYSICAL_READS, oracle.PROFILE, oracle.PROG, oracle.PROGRAM, oracle.RESOURCE_NAME, oracle.RESOURCE_TYPE, oracle.SID, oracle.SPID, oracle.SQL_ID, oracle.SQL_TEXT, oracle.STATUS, oracle.TABLESPACE_NAME, oracle.TERMINAL, oracle.TOTAL_BLOCKS, oracle.TOTAL_BYTES, oracle.TS_COUNTS, oracle.USED_BYTES, oracle.USED_SIZE, oracle.USERNAME, oracle.VALUE, oracle.WAIT_TIME, oracle.WHAT, oracle.action, oracle.conn_str.HOST, oracle.conn_str.SID, oracle.description, oracle.event, oracle.host, oracle.host_addr, oracle.logical_reads_M, oracle.login_user, oracle.msg, oracle.ora_code, oracle.osprivilege, oracle.physical_reads_M, oracle.policy, oracle.src_ip, oracle.status, oracle.tns_error, oracle.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道Oracle服务器上执行时间最长的十个SQL", "output": "appname:oracle tag:sql_exec_rank | stats count() as ct  by oracle.SQL_ID,oracle.EXECUTIONS,oracle.SQL_TEXT|sort by ct|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问dc防火墙的使用情况和流量分布情况，其中包括源地、目的地等信息。", "output": "appname:firewall tag:dc   firewall.src.geo.city:private |stats count() as cnt by firewall.dst.geo.province,firewall.dst.geo.city|sort by cnt|limit 20"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "希望检索所有标记为“dc”且不包含源地城市为“私人”的防火墙应用日志中的 IP 和端口信息，并按数量排序，只显示前 10 个结果。", "output": "appname:firewall tag:dc   NOT firewall.src.geo.city:private |stats count() as cnt by firewall.src_ip,firewall.src_port|sort by cnt |limit 10"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问fortress“堡垒机”的用户活动情况", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log| stats count() as cnt by fortress.user| sort by cnt |limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少个不同的目的 IP 和端口对在leadsec防火墙中被访问过？", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.dst_ip,firewall.dst_port |sort by cnt"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想对leadsec防火墙系统中的IP地址进行统计和排序。", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.src_ip,firewall.dst_ip |sort by cnt"}
{"input": "索引可用字段有：ips.action, ips.application, ips.attack_name, ips.attack_type, ips.block_reason, ips.cve, ips.dst.geo.city, ips.dst.geo.ip, ips.dst.geo.latitude, ips.dst.geo.longitude, ips.dst_ip, ips.dst_port, ips.event, ips.event_id, ips.event_level, ips.event_name, ips.inbound_interface, ips.inbound_zone, ips.level, ips.local, ips.msg.seclevel, ips.outbound_interface, ips.outbound_zone, ips.policy, ips.proto, ips.service, ips.severity, ips.src.geo.city, ips.src.geo.country, ips.src.geo.ip, ips.src.geo.latitude, ips.src.geo.longitude, ips.src.geo.province, ips.src_ip, ips.src_port, ips.url, ips.vendor_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道哪些国家的用户使用了 McAffe 应用，并且他们的 IP 源地址不在中国，而且没有标记为信息性等级，以及这些 IP 源地址所在地区不是私人网络（如家庭、学校或公司），并按数量排序，显示前十个结果。", "output": "appname:ips tag:mcafee NOT ips.level:Informational NOT ips.src.geo.city:private NOT ips.src.geo.country:中国| stats count() as cnt by ips.src.geo.country,ips.src.geo.province|sort by cnt |limit 10"}
{"input": "索引可用字段有：nx.dst.geo.city, nx.dst.geo.province, nx.dst_ip, nx.dst_port, nx.level, nx.sname, nx.src.geo.city, nx.src.geo.country, nx.src.geo.province, nx.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 FireEye 漏洞数据库中，哪些国家和地区出现的漏洞最多？", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.dst.geo.province,nx.dst.geo.city|sort by cnt |limit 10"}
{"input": "", "instruction": "我想问以下信息：这意味着寻找在 FireEye 应用中标记为“ex”的事件的数量统计信息，并根据该计数对结果进行排序，只显示前十个结果。", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.sname | sort by cnt | limit 10"}
{"input": "", "instruction": "我想问 FireEye 应用中出现的异常类型（tag）为“ex”的文件类型的数量以及它们的数量分布情况，并按数量从高到低排序，然后只显示前十个文件类型。", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.file_type | sort by cnt | limit 10"}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问qianxin AC中事件类型为搜索引擎的访问记录，并希望提供来源 IP 的数据分析结果。", "output": "appname:ac tag:qianxin ac.log_type:search_engine | stats count() as cnt by ac.client,ac.src_ip|sort by cnt | limit 10"}
{"input": "索引可用字段有：dbaudit.alert_type, dbaudit.app_name, dbaudit.dataSubType, dbaudit.databaseName, dbaudit.dst_ip, dbaudit.dst_port, dbaudit.level, dbaudit.payload, dbaudit.rule, dbaudit.ruleName, dbaudit.rule_name, dbaudit.src_ip, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道哪些 IP 在访问数据库的过程中产生了最多的请求。", "output": "appname:dbaudit db.Logtype:*  | stats count() as cnt by db.src_ip | sort by cnt | limit 20"}
{"input": "索引可用字段有：ac.ac_ip, ac.action, ac.ap_ip, ac.ap_name, ac.app, ac.app_name, ac.band, ac.client, ac.command, ac.dst_ip, ac.dst_port, ac.event_id, ac.event_name, ac.event_type, ac.kv.app_cat_name, ac.kv.log_level, ac.kv.receive_addr, ac.kv.send_addr, ac.kv.subject, ac.kv.term_device, ac.log_type, ac.mac_addr, ac.mnemonic, ac.msg.app, ac.msg.serv, ac.msg.tm_type, ac.msg.user, ac.operation, ac.policy, ac.request_url, ac.resource, ac.resource_type, ac.result, ac.src_ip, ac.src_mac, ac.ssid, ac.status, ac.time, ac.user, ac.user_agent, ac.user_name, ac.web_app, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下内容：搜索`appname为ac、tag为qianxin、ac.log_type为trc、ac.action包含\"阻塞\"的访问记录`，并按访问次数从大到小排序，取前10条结果。", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:阻塞| stats count() as cnt by ac.client,ac.dst_ip|sort by cnt | limit 10"}
{"input": "索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问诺顿杀毒软件的使用情况和地区分布的信息，并且希望能获得前十大用户数量最多的IP地址及其所在省份信息。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" | stats count() as cnt by atv.dst_ip,atv.dst.geo.province|sort by cnt |limit 10"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，从哪些 IP 源地址下载的软件包数量最多？并且按数量排序，前 10 个结果展示给我看。", "output": "appname:nta tag:chaitin |stats count() as cnt by nta.src_ip,nta.src_ip_city|sort by cnt |limit 10"}
{"input": "", "instruction": "我想问的是，在 FireEye 这个应用中，哪些用户最常使用 Exposed 漏洞扫描工具进行漏洞扫描呢？并按数量排序，只显示前 10 个结果。", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.src_user | sort by cnt | limit 10"}
{"input": "", "instruction": "我想问 FireEye 漏洞分析系统中，根据源 DNS 域名进行统计并按数量排序的前 10 个漏洞的相关信息。", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.src_dns_domain | sort by cnt | limit 10"}
{"input": "", "instruction": "我想要知道 chaitin 标签下，最常扫描到的目标 IP 和端口有哪些。", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() as cnt by hp.dst_ip,hp.dst_port|sort by cnt |limit 10"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 fortress 中 safety 这个标签下有哪些类型的会话最多。请帮我把这些信息以表格的形式展示给我。", "output": "appname:fortress tag:safety  | stats dc('fortress.kv.会话标识') as cnt by 'fortress.kv.日志类型'|sort by cnt "}
{"input": "索引可用字段有：hids.country, hids.datetime, hids.desc, hids.event_type, hids.hostName, hids.kbname, hids.level, hids.localIp, hids.loginIp, hids.osType, hids.userName, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问：HIDS存在安全隐患的机型数量排名前十五的操作系统类型有哪些？", "output": "appname:hids tag:safedog  hids.event_type:risk | stats dc(hids.localIp)as cnt by hids.osType|sort by cnt |limit 15"}
{"input": "", "instruction": "我想问 Nginx 服务器的访问量和最终IP地址分布情况", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm"}
{"input": "", "instruction": "我想要知道有哪些虚拟机正在运行在 vCenter Server 中，并且它们所在的主机名和它们所属的数据中心是怎样的。", "output": "appname:vsphere tag:vsphere source:VirtualMachine* |stats dc(name) as cnt by host |sort by cnt"}
{"input": "索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 MongoDB 有哪些慢的 query，你可以帮我找出其中最消耗性能的五十个吗？你能不能把它们按花费时间从高到低排序呢？", "output": "appname:mongodb mongodb.cost:*mongodb.action:* mongodb.namespace:* mongodb.msg:*| stats avg(mongodb.cost) as avg_cost by mongodb.namespace|sort by avg_cost|limit 50"}
{"input": "", "instruction": "我想问有关 LingCloud 的一些关键性能指标的信息，比如 CPU 使用率、内存使用量等等。", "output": "appname:lingcloud AND tag:kpi_list_all utc AND [[appname:lingcloud AND tag:kpi_permin_site utc |stats avg(lingcloud.data.totalBytes) as cnt by lingcloud.siteid|sort by cnt|limit 1|fields lingcloud.siteid]] |stats sum(lingcloud.totalbytes) as cnt by lingcloud.rulename"}
{"input": "", "instruction": "我想跟踪某些流量的来源地址和字节数，并返回前十个最高的数据。", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 10"}
{"input": "", "instruction": "首先从名为`cdn_log`的应用中选择所有记录，然后使用`sum()`函数计算`cdn.request_length`字段中的总和，并将结果存储在新变量`bytes`中。接着，它使用`by`子句对结果进行分组，并根据`bytes`字段排序。最后，它使用`limit`子句限制返回的结果数量为10个。", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 10"}
{"input": "", "instruction": "我想询问CDN服务器的访问量排名和流量使用情况，具体来说：1. 查询字段为`cdn.request_length`，即请求大小（字节）；2. 分组依据为`cdn.remote_addr`，即源站IP地址；3. 对分组结果进行排序，根据`sum(cdn.request_length)`的值从大到小；4. 返回前20行数据。希望这能满足你的需求！", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 20"}
{"input": "", "instruction": "我想询问CDN（内容分发网络）服务器的访问量和流量情况。这条查询会计算所有带有`appname`字段中包含字符串“cdn_”开头的指标名`cdn_log_total`在过去一分钟内的平均速率，并将结果按实例和作业进行聚合。", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 20"}
{"input": "", "instruction": "我想询问CDN（内容分发网络）的访问量排名和总流量情况，具体来说：1、根据字段`cdn.request_length`，计算每个客户端IP地址的请求数据总大小；2、使用`sort by bytes`对结果进行排序，从大到小；3、取前50个记录作为答案返回给用户。", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 50"}
{"input": "", "instruction": "我想询问CDN（内容分发网络）服务器的访问量和流量情况，这是对不对？如果我的理解有误或您需要其他帮助，欢迎您随时向我提出。", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 50"}
{"input": "", "instruction": "我想询问 Nginx 服务器的访问量排名，以及每个 IP 源地址的总请求长度之和。", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 50"}
{"input": "", "instruction": "我想要知道网站访问量排名前十的IP地址和总流量大小。", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 10"}
{"input": "", "instruction": "我想要知道网站访问量排名前十的IP地址和总共请求大小。请帮我把这些信息打印出来。", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 20"}
{"input": "", "instruction": "我想询问 Nginx 服务器的访问量排名，并显示 IP 和总请求长度之和。", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 100"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道从哪些 IP 地址下载了最多的数据。", "output": "appname:nta AND tag:eve  nta.flow.bytes_toclient:*|stats sum(nta.flow.bytes_toclient) as cnt by nta.dst_ip |sort by cnt |limit 10"}
{"input": "索引可用字段有：nta.Service_Name, nta.alert.action, nta.alert.category, nta.alert.metadata.former_category, nta.alert.severity, nta.alert.signature, nta.attack_name, nta.attack_type, nta.dest_ip, nta.dest_port, nta.dst.geo.city, nta.dst_ip, nta.dst_ip_city, nta.dst_port, nta.event_level, nta.event_name, nta.event_type, nta.flow.bytes_toclient, nta.flow.bytes_toserver, nta.kill_chain, nta.level, nta.login_user, nta.proto, nta.src.geo.city, nta.src.geo.country, nta.src.geo.province, nta.src_ip, nta.src_ip_city, nta.src_port, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问最近十个发送流量最大的 IP 地址和它们所发出的总字节数。这与您之前说的“NTA 应用名为 'Neta' 和标签包含 'EVE'”有关。", "output": "appname:nta AND tag:eve  nta.flow.bytes_toserver:*|stats sum(nta.flow.bytes_toserver) as cnt by nta.dst_ip |sort by cnt |limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道tomcat哪些源地址IP发送了最多的数据量，并按发送数据的 IP 地址排序，只显示前 10 个结果。", "output": "(appname:middleware tag:tomcat)  |stats sum(middleware.bytes_sent) as len by middleware.src_ip|sort by len|limit 10"}
{"input": "", "instruction": "我想要知道网站访问深度分布情况，并按访问量从高到低排序。", "output": "appname:apache| stats count(apache.domain) as counts by depth| sort by -counts"}
{"input": "索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问有关华为设备的登录失败情况。", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL)|stats count() as count_ by switch.kvmsg.UserName|sort by count_ "}
{"input": "索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道用户在哪些主机上进行了删除、添加、修改密码、更改用户信息或增加/删除/修改组的操作，并按时间排序。", "output": "appname:audit AND (audit.msg.ser:userdel OR audit.msg.ser:useradd OR audit.msg.ser:passwd OR audit.msg.ser:usermod OR audit.msg.ser:gpasswd OR audit.msg.ser:groupadd OR audit.msg.ser:groupdel OR audit.msg.ser:groupmod) | stats count() as change by ip,hostname,audit.msg.ser,audit.msg.info,timestamp | sort by timestamp"}
{"input": "索引可用字段有：epay.module, epay.response.customerId, epay.response.responseTextMessage, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在“epay”应用中，有多少用户购买了商品后就出现了交易失败或者交易成功的信息？", "output": "appname:epay AND NOT epay.response.responseTextMessage:交易成功 |stats count() as tally by epay.response.customerId |sort by tally |limit 20"}
{"input": "索引可用字段有：epay.module, epay.response.customerId, epay.response.responseTextMessage, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在哪些模块中发生了失败的交易，并且只显示前二十条结果。", "output": "appname:epay AND NOT epay.response.responseTextMessage:交易成功 |stats count() as tally by epay.module |sort by tally |limit 20"}
{"input": "", "instruction": "我想问有关某一台服务器的TCP连接数、源IP地址数量和排序后的前十个源IP地址的信息。", "output": "_index:tcp appname:conn  action:syn | stats count(src_ip) as counts by src_ip| sort by -counts | head 10"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 apache 服务的访问量从高到低排名的前十个国家是哪些？", "output": "appname:apache | stats count(apache.clientip) as counts by geoip2_investigate.country_name| sort by -counts | head 10"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道网站访问量最多的前三条记录，并按降序排列。", "output": "appname:apache depth:3 | stats count(apache.request_path) as counts by apache.request_path, apache.domain| sort by -counts"}
{"input": "索引可用字段有：DNS.domain, DNS.domain.domain, DNS.dst_ip.geo.city, DNS.dst_ip.geo.isp, DNS.locaiton, DNS.src_ip, DNS.status, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，从哪些ISP的用户访问量最高的网站中，取前十个。这个结果应该以表格的形式呈现给我看。", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.isp | sort by count_ | limit 10"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问在处理用户“linux”的审计记录时，是否只显示执行命令为 shell_cmd 的条目，并按执行时间排序。", "output": "appname:linux AND audit.msg.ser:shell_cmd | stats count() as cmd by ip,hostname,audit.msg.user,audit.msg.path,audit.msg.command,audit.msg.exec_time,audit.msg.src_ip | sort by audit.msg.exec_time "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "统计 Linux 系统中通过 Shell 命令执行的命令数量、用户、主机名、路径、命令、执行时间等信息，并按执行时间排序。", "output": "appname:linux AND audit.msg.ser:shell_cmd | stats count() as cmd by ip,hostname,audit.msg.user,audit.msg.path,audit.msg.command,audit.msg.exec_time,audit.msg.src_ip | sort by audit.msg.exec_time "}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关应用“中间件”和标记为“IIS”的HTTP状态代码大于或等于400的请求数以及它们对应的URI最多有多少个吗？", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问关于某一应用的错误信息以及该应用访问过哪些网址的信息。", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 20"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在应用名为“middleware”且标签中包含“IIS”的HTTP状态码小于等于400的请求中，哪个URI最常出现？并只显示前百条结果。", "output": "(appname:middleware AND tag:iis) middleware.status:<400 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 100"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在应用名为“middleware”且标签中包含“IIS”的HTTP响应状态码小于等于400时，访问最多的URI是哪些？", "output": "(appname:middleware AND tag:iis) middleware.status:<400 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 5"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在应用名为“中间件”的服务器中，HTTP状态码大于等于400的请求数最多有多少个？", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 20"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某应用的 IIS 错误日志中，在出现过的最多的 URL 查询字符串是哪些？并按数量从高到低排列显示前 10 个结果吗？", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问最近一周内，在应用名为“middleware”且标记包含“IIS”的HTTP状态码大于等于400的请求数量最多的前100个URI查询字符串。", "output": "starttime=\"now-1W\" (appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 100"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问 IIS 中间件应用，399 以上错误状态码，最常见的 URI 查询字符串的统计信息。", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 5"}
{"input": "索引可用字段有：postgresql.command_tag, postgresql.database, postgresql.duration, postgresql.error_severity, postgresql.ip, postgresql.sql_state_code, postgresql.stringmess, postgresql.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道发生了多少错误的类型，并且排名前十的错误信息。", "output": "appname:postgresql NOT postgresql.error_severity:LOG | stats count() as count_1 by postgresql.stringmess|sort by count_1|limit 20"}
{"input": "索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 MongoDB 应用的访问统计信息？可以使用以下日志易查询来实现：首先通过 `appname` 字段过滤出所有与 MongoDB 应用相关的条目，然后使用 `stats` 子句计算每个操作和命名空间的计数器数量（即访问次数），并根据计数器数量进行排序。最后，它仅返回前 10 个最高访问量的项。", "output": "appname:mongodb | stats count()  as count1 by mongodb.action,mongodb.namespace|sort by count1|limit 10"}
{"input": "", "instruction": "我想询问关于 Check Point Firewall 的一些信息：首先从索引中检索所有包含 cpfw: 前缀且不包含主机名称为 firewall 的消息或通知记录。然后，它通过统计每个防火墙规则出现的次数并按计数降序对结果进行排序，最终只返回前 10 个结果。", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() as count_1 by firewall.kv.rule|sort by count_1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在有多少个请求的响应状态码大于等于 400，并且根据 uri_stem 分组后，每个分组中数量最多的前 10 个 uri 是什么？", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_stem | sort by c1|limit 10"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问有关某些应用的 IIS（Internet Information Services）错误报告数量以及它们对应的 URI 查询字符串的信息。", "output": "(appname:middleware AND tag:iis) middleware.status:>399 | stats count()  as c1 by middleware.uri_query | sort by c1|limit 10"}
{"input": "索引可用字段有：tda.ICID, tda.act, tda.category, tda.detect_type, tda.dst_ip, tda.dst_port, tda.event_class, tda.host, tda.level, tda.net, tda.proto, tda.src.geo.city, tda.src_ip, tda.src_port, tda.status, tda.threats_desc, tda.threats_type, tda.threats_type_group, tda.type, tda.url, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问以下信息：其中 `appname` 表示应用名称为 `tda`，`stats` 表示使用统计函数计算，`count()` 函数表示计算总数，`as` 表示将结果命名为 `count_1`，`by` 表示根据字段类型进行分组，`tda.type` 表示要分组的字段名，`sort by count_1` 表示按计数排序，最后 `limit 10` 表示返回前 10 个记录。", "output": "appname:tda | stats count() as count_1 by tda.type|sort by count_1| limit 10"}
{"input": "", "instruction": "我想询问的是 SonicWall 防火墙的访问记录中，action 为 rejected（拒绝）的 TCP 活动数量和 IP 地址分布情况，并返回前 10 个IP地址最多的活动数量。", "output": "appname:firewall tag:sonicwall proto:TCP AND action:rejected | stats count(src_ip) as counts by src_ip | sort by -counts | head 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道防火墙中每条规则的目的地IP和源地址IP分别有多少条记录，并按数量从大到小排序，只显示前十个结果。", "output": "appname:firewall tag:dell \"blocked\" |stats count() as count_ by firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 Dell Firewall 的一些信息，比如最近出现的漏洞数量、攻击源地分布等等。", "output": "appname:firewall tag:dell \"scan detected\"  |stats count() as count_ by firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 Dell Firewall 消息的数量、源 IP 和目的 IP 的统计信息以及它们按数量排序后的前 10 个结果吗？", "output": "appname:firewall tag:dell|stats count() as count_1 by firewall.msg,firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_1|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 Dell Firewall 的一些统计信息，例如消息数、目的地 IP 和源地址 IP 等字段的数量以及它们之间的排序方式和限制数量。", "output": "appname:firewall tag:dell|stats count() as count_1 by firewall.msg,firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_1| limit 20"}
{"input": "", "instruction": "我想要知道访问 myapp 服务的 IP 地址最多的前十个用户是谁，并且按访问次数排序。", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() as count_1 by firewall.src_ip |sort by count_1|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "应用名称为“防火墙”并且包含 sangfor 标签的所有记录数分布统计结果", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.app_name|sort by count_ |limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "统计所有包含 `sangfor` 标签且按目的 IP 分组并排序后的前 10 个记录的查询。", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.dst.geo.ip|sort by count_|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我设计一个对 Sangfor Firewall 审计数据的查询语句：1. 根据 log 中 appname 为 \"firewall\"、tag 包含字符串 \"sangfor\" 的记录；2. 对这些记录进行聚合统计，计算每个 firewall.src.geo.ip 出现的次数并排序；3. 返回前 10 个结果。", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "", "instruction": "我想问以下信息：- hundsun 应用的错误数量- 通过中间件 Error_Info 分组后，按数量排序并返回前 10 个记录。", "output": "appname:hundsun tag:error  appname:hundsun|stats count() as count_1 by middleware.Error_info|sort by count_1 |limit 10"}
{"input": "", "instruction": "我想问以下信息：在 hundsun 应用中出现错误的次数最多的十个系统错误信息是什么？", "output": "appname:hundsun tag:error  appname:hundsun |stats count() as count_1 by middleware.System_errinfo|sort by count_1|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在有多少条记录的 appname 是 firewall 和 tag 是 sonicwall 的同时，message 中包含了 denied 这个词。并按 message 次数排序，取前 10 个结果返回。", "output": "appname:firewall AND tag:sonicwall \"denied\"  |stats count() as count_1 by firewall.msg|sort by count_1|limit 10"}
{"input": "索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在有多少条记录的协议为“firewall”且带有标签“sonicwall”，并且包含关键字“denied”。并按数量降序排列前十个结果。", "output": "appname:firewall AND tag:sonicwall  \"denied\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "索引可用字段有：aix.class_dec, aix.dst_host, aix.facility, aix.login_time, aix.login_way, aix.net, aix.resource_name, aix.severity, aix.span_h, aix.span_m, aix.src_ip, aix.src_port, aix.type, aix.type_dec, aix.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在一段时间内（比如最近24小时）出现次数最多的10个错误报告中，每个错误报告对应的主机数量和类型。", "output": "appname:aix tag:errpt|stats count(hostname) as count_1 by  hostname,aix.type_dec| sort by count_1 |limit 10"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问 VPN 服务的应用名为“VPN”且标签包含“H3C”的流量统计信息，并按源端口进行排序并限制数量到20个。", "output": "appname:vpn AND tag:h3c |stats count(vpn.src_port)  as _ct by vpn.src_port|sort by _ct |limit 20"}
