{"input": "", "instruction": "查询包含 403 或 404 状态码，且请求路径为 /admin 的日志记录，并计算请求量最大的前 10 个状态码的百分比", "output": "(apache.status:403 OR apache.status:404) apache.request_path:\"/admin\" | top 10 apache.status"}
{"input": "", "instruction": "top 10 用户", "output": "* | top 10 user"}
{"input": "", "instruction": "Nginx访问TOP5", "output": "tag:\"nginx_access\" |top 5 ip"}
{"input": "锐捷交换机模块统计，展示前 10 条", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie | top 10 switch.module"}
{"input": "锐捷交换机类型分布，展示前 10 条", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie | top 10 switch.type"}
{"input": "锐捷交换机日志级别统计，展示前 10 条", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie | top 10 switch.severity"}
{"input": "告警次数TOP10", "instruction": "monitor索引数据，编写查询语句实现如下分析场景", "output": "_index:monitor issue_alert:true|top 10 alert_name"}
{"input": "告警事件等级top10分布", "instruction": "monitor索引数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true |top 10 alert_level"}
{"input": "告警分组占比top10", "instruction": "monitor索引数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true|top 10 result.resource_groups"}
{"input": "招聘网站访问排名前 15", "instruction": "深信服上网行为审计数据，编写查询语句实现如下分析场景", "output": "access_control.result.x.urltype:求职招聘|top 15 access_control.result.x.host"}
{"input": "求职使用终端类型前 10 名占比", "instruction": "深信服上网行为审计数据，编写查询语句实现如下分析场景", "output": "access_control.result.x.urltype:求职招聘|top 10 access_control.result.x.termtype"}
{"input": "告警次数TOP10", "instruction": "日志易告警监控-查询分析实现如下场景", "output": "_index:monitor * NOT issue_alert:false|top 10 alert_name"}
{"input": "威胁top10", "instruction": "HW_威胁数据，编写查询语句实现如下分析场景", "output": "_index:monitor   extend_map.group:HW   issue_alert:true|top 10 alert_name"}
{"input": "日志事件大类组成分析，计算日志数量前 10 名", "instruction": "网关_koal_ssl数据，编写查询语句实现如下分析场景", "output": "tag:koal_ssl |top 10 ssl.alertgroup"}
{"input": "来帐交互行TOP10", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "trantype:来帐 | top 10 sendBankNa"}
{"input": "往账交互行TOP10", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "type:请求 sender:402191009992 | top 10 recvBankNa"}
{"input": "交易类型top10占比", "instruction": "查询银联前置(cupp)系统数据，进行如下统计", "output": "sourcetype:cupp |top 10 SUMMARY"}
{"input": "借记来帐渠道TOP10。tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志。sendBankNa字段表示渠道。", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:*  | top 10 sendBankNa"}
{"input": "", "instruction": "列出出现频率最高的前十个返回状态码为 `403 Forbidden` 或 `404 Not Found` 的 HTTP 请求路径中包含 `/admin` 的记录，并且按降序排列。", "output": "(apache.status:403 OR apache.status:404) apache.request_path:\"/admin\" | top 10 apache.status"}
{"input": "", "instruction": "我想知道前十名用户有哪些。", "output": "* | top 10 user"}
{"input": "", "instruction": "希望在名为“监控”的索引中检索具有名称为“问题警报”且值为“真”的文档，并按“警报级别”对结果进行排序，返回前十个结果。", "output": "_index:monitor  issue_alert:true |top 10 alert_level"}
{"input": "", "instruction": "主机组 HW 下发生的告警事件中，最多显示前 10 个告警名称的信息。", "output": "_index:monitor   extend_map.group:HW   issue_alert:true|top 10 alert_name"}
{"input": "Top10堡垒机登陆用户。索引可用字段有：fortress.src_ip，fortress.msg.srvaddr，fortress.user，fortress.server等。请仅选用必需字段。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.user"}
{"input": "事件产生主机占比分析前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router |top 10 router.hostname"}
{"input": "各事件级别的占比分析前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router | top 10 router.severity"}
{"input": "各事件类别的占比分析前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router |top 10 router.mnemonic"}
{"input": "各类型事件的数量排名前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router | top 10 router.mnemonic"}
{"input": "各主机事件的数量排名前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router | top 10 router.hostname"}
{"input": "各模块事件的数量排名前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router | top 10 router.module"}
{"input": "各级别事件的数量排名前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router | top 10 router.severity"}
{"input": "Top20堡垒机登陆用户。索引可用字段有：fortress.src_ip，fortress.msg.srvaddr，fortress.primary_user，fortress.server等。请仅选用必需字段", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.primary_user"}
{"input": "登录用户top10。索引可用字段有：fortress.username,fortress.session,fortress.system,fortress.action,fortress.dst,fortress.log,fortress.node,fortress.kv,fortress.status,fortress.message,fortress.input,fortress.result,fortress.severity,fortress.server,fortress.protocol,fortress.level,fortress.src,fortress.primary,fortress.secondary,fortress.facility,fortress.user,fortress.type,fortress.remote,fortress.ip,fortress.host,fortress.msg,fortress.request,fortress.login,fortress.reason。请选用实际需要字段", "instruction": "fortress_leadsec仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type\t:1 | top 10 fortress.msg.user_name"}
{"input": "登录失败IP_top10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4625 NOT (json.username:*$ OR json.username:SYSTEM) | stats count() by json.src_ip |limit 10"}
{"input": "登录最频繁user_top10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4624 OR json.event_id:4625) NOT (json.src_ip:\"-\" OR json.username:SYSTEM)| stats count() as cnt by json.username| sort by cnt |limit 10"}
{"input": "登录失败user_top10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows  (json.event_id:4625 ) NOT (json.username:*$ OR json.username:SYSTEM)| stats count() as cnt by json.username| sort by cnt |limit 10"}
{"input": "windows日志等级分布前 20 名", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows|top 20 json.level"}
{"input": "windows日志来源分布前 20 名", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows|top 20 json.source_name"}
{"input": "windows各类事件分布前 20 名", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows|top 20 json.message.event"}
{"input": "windows登录失败源IP分布前 10 名", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_name:登录失败* \n json.source_name:Microsoft-Windows-Security-Auditing|top 10 json.event_data.IpAddress"}
{"input": "登录失败帐户名top10", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_name:登录失败* |top 10 json.username"}
{"input": "数据库_mssql_登录失败用户top10", "instruction": "数据库_mssql数据，编写查询语句实现如下分析场景", "output": "appname:windows json.source_name:MSSQLSERVER json.message.event:*登录失败 |top 10 json.event_data.param1"}
{"input": "windows登录失败原因top10", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4625| top 10 json.event_data.FailureReason"}
{"input": "AD登录成功次数TOP10用户", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4624 json.keywords:审核成功  NOT json.event_data.TargetUserName:*$\n| top 10 json.event_data.TargetUserName"}
{"input": "AD登录失败次数TOP10用户", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4625 json.keywords:审核失败 NOT json.event_data.TargetUserName:*$\n| top 10 json.event_data.TargetUserName"}
{"input": "AD登录成功次数TOP10主机IP", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4624 json.keywords:审核成功 NOT json.event_data.TargetUserName:*$ \n| top 10 json.event_data.IpAddress"}
{"input": "AD登录失败次数TOP10主机IP", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4625 json.keywords:审核失败 NOT json.event_data.TargetUserName:*$ \n| top 10 json.event_data.IpAddress"}
{"input": "windows登录事件top10源地址", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows 登录| stats count() as cnt by json.event_data.IpAddress|limit 10"}
{"input": "AD登陆失败主机top10", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security (json.event_id:4771 AND json.keywords:\"审核失败\") NOT json.event_data.TargetUserName:*$\n| stats count() by json.event_data.IpAddress\n| limit 10"}
{"input": "AD登陆失败用户top10", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security (json.event_id:4771 AND json.keywords:\"审核失败\") NOT json.event_data.TargetUserName:*$\n| stats count() by json.event_data.TargetUserName\n| limit 10"}
{"input": "登录最频繁IP_top10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4624 OR json.event_id:4625) NOT (json.src_ip:\"-\" OR json.username:SYSTEM)| stats count() as cnt by json.src_ip | limit 10"}
{"input": "", "instruction": "我想跟踪Windows用户的登录和注销事件来自哪些IP，并排除系统进程或匿名IP地址的登录活动。", "output": "appname:windows (json.event_id:4624 OR json.event_id:4625) NOT (json.src_ip:\"-\" OR json.username:SYSTEM)| top 10 json.src_ip"}
{"input": "", "instruction": "我想知道 Windows 应用产生的 JSON 消息中的前二十个 message.event。", "output": "appname:windows|top 20 json.message.event"}
{"input": "", "instruction": "我想问的是 windows 系统上发生的登录失败安全审计事件中，最常用的 IP 是？可以列举前十个吗？", "output": "appname:windows json.event_name:登录失败*  json.source_name:Microsoft-Windows-Security-Auditing|top 10 json.event_data.IpAddress"}
{"input": "", "instruction": "我想问的是最多十条登录失败的用户是谁？", "output": "appname:windows json.event_name:登录失败* |top 10 json.username"}
{"input": "", "instruction": "我想询问最近十条 Windows 系统的 MSSQL 服务出现的登录失败事件的信息。", "output": "appname:windows json.source_name:MSSQLSERVER json.message.event:*登录失败 |top 10 json.event_data.param1"}
{"input": "", "instruction": "我想要知道 Windows 4625 事件中出现过的错误原因有多少个，并且只显示前 10 个。请帮我完成这个任务。", "output": "appname:windows json.event_id:4625| top 10 json.event_data.FailureReason"}
{"input": "", "instruction": "我想询问有关 Windows 系统安全事件的相关信息，具体包括：1、发生时间最早的前十个 IP 地址；2、关键字为“审计成功”且不包含 TargetUserName 中含有星号（*）字符的所有记录。", "output": "appname:windows tag:security json.event_id:4624 json.keywords:审核成功 NOT json.event_data.TargetUserName:*$ | top 10 json.event_data.IpAddress"}
{"input": "", "instruction": "帮我查找 Windows 系统中发生的4625安全事件，其中包含关键字“审查失败”，并且不包括用户名为*的所有记录。您需要返回前十个 IP地址相关的信息。", "output": "appname:windows tag:security json.event_id:4625 json.keywords:审核失败 NOT json.event_data.TargetUserName:*$ | top 10 json.event_data.IpAddress"}
{"input": "dns_bind9_top10查询源IP。", "instruction": "dns_bind9数据，编写查询语句实现如下分析需求", "output": "appname:dns tag:bind9 |stats count() by dns.src_ip |limit 10"}
{"input": "dns_bind9_dns查询top10。", "instruction": "dns_bind9数据，编写查询语句实现如下分析需求", "output": "appname:dns tag:bind9 |stats count() by dns.query |limit 10"}
{"input": "认证成功nasIP地址top10。", "instruction": "cisco_acs数据，编写查询语句实现如下分析需求", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() by acs.nas_ip_address\t |limit 10"}
{"input": "nasIP地址top10。", "instruction": "cisco_acs数据，编写查询语句实现如下分析需求", "output": "appname:acs tag:account|stats count() by acs.nas_ip_address |limit 10"}
{"input": "nasIP地址分布top10。", "instruction": "cisco_acs数据，编写查询语句实现如下分析需求", "output": "appname:acs tag:admin|stats count() by acs.nas_ip_address |limit 10"}
{"input": "cmd命令top10。", "instruction": "cisco_acs数据，编写查询语句实现如下分析需求", "output": "appname:acs tag:admin|stats count() by acs.cmd |limit 10"}
{"input": "访问源ip地址top10。", "instruction": "firewall_netscreen数据，编写查询语句实现如下分析需求", "output": "appname:firewall tag:netscreen |stats count() by firewall.src_ip |limit 10"}
{"input": "访问目的ip地址top10。", "instruction": "firewall_netscreen数据，编写查询语句实现如下分析需求", "output": "appname:firewall tag:netscreen |stats count() by firewall.dst_ip\t |limit 10"}
{"input": "移动设备top10。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析需求", "output": "appname:pf_tomcat |stats count() by tomcat.ua.device |limit 10\t"}
{"input": "移动设备top20。", "instruction": "pf_nginx数据，编写查询语句实现如下分析需求", "output": "appname:pf_nginx |stats count() by nginx.user_agent.device |limit 20"}
{"input": "订单失败原因top10。", "instruction": "pf_gateway数据，编写查询语句实现如下分析需求", "output": "appname:pf_gateway NOT gateway.result:result=true|stats count() by gateway.event_name  |limit 10"}
{"input": "支付模块top10。", "instruction": "pf_gateway数据，编写查询语句实现如下分析需求", "output": "appname:pf_gateway |stats count() by gateway.module\t |limit 10"}
{"input": "源ip访问top20。", "instruction": "pf_gateway数据，编写查询语句实现如下分析需求", "output": "appname:pf_gateway |stats count() by gateway.src_ip |limit 20"}
{"input": "告警事件源ip地址top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.event_type:alert |stats count() by nta.src_ip |limit 10"}
{"input": "告警事件目的ip地址top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.event_type:alert |stats count() by nta.dst_ip |limit 10"}
{"input": "被攻击主机top10。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':correlated_incidents |stats count() by tda.host |limit 10"}
{"input": "受监控网络top10。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':correlated_incidents |stats count() by tda.net |limit 10"}
{"input": "威胁详情top10。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats |stats count() by tda.threats_desc |limit 10"}
{"input": "连接次数最多客户端top10。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:h3c ac.status:online | stats count() by ac.client|limit 10"}
{"input": "威胁事件源IP_top10。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() by nx.src_ip |limit 10"}
{"input": "威胁事件目标IP_top10。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() by nx.dst_ip |limit 10"}
{"input": "阻断事件类型分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "(( appname:waf tag:nsfocus)  AND ( waf.log_category:waf_log_websec) AND ( waf.action:Block))  |stats count() by waf.event_type  |limit 10"}
{"input": "阻断策略分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "(( appname:waf tag:nsfocus) AND ( waf.log_category:waf_log_websec) AND ( waf.action:Block))  |stats count() by waf.msg.policy_id  |limit 10"}
{"input": "响应状态码分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() by waf.message.status  |limit 20"}
{"input": "告警级别事件分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:nsfocus)  |stats count() by waf.event_level  |limit 5"}
{"input": "攻击目的地地址分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "( appname:waf tag:nsfocus  ) AND ( waf.log_category:waf_log_websec) | stats count() by waf.dst_ip  |limit 20"}
{"input": "攻击源ip分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  |stats count() by waf.src_ip  |limit 20"}
{"input": "不同类型访问日志分布前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:nsfocus)  |stats count() by waf.log_category  |limit 10"}
{"input": "攻击url排行前 10 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "(( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec))  |stats count() by waf.uri  |limit 10"}
{"input": "响应状态码分布前 10 名。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() by waf.message.status  |limit 20"}
{"input": "告警级别事件分布前 10 名。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() by waf.message.threaten  |limit 20"}
{"input": "阻断事件，按严重级别分组统计事件数量前 5 名。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count() by waf.message.threaten  |limit 5"}
{"input": "阻断ip访问分布前 10 名。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count() by waf.message.src_ip.geo.ip  |limit 10"}
{"input": "攻击SQL注入url分布前 10 名。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " ((appname:waf tag:dbappsecurity) AND waf.message.event:SQL注入攻击)  |stats count() by waf.url  |limit 10"}
{"input": "不同类型访问日志分布前 15 名。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:nsfocus)  |stats count() by waf.log_category  |limit 15"}
{"input": "攻击源ip分布前 10 名。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  |stats count() by waf.src_ip  |limit 20"}
{"input": "攻击url排行前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  |stats count() by waf.url  |limit 10"}
{"input": "不同事件类型分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() by waf.event_name  |limit 5"}
{"input": "事件类型前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() by waf.event_name  |limit 5"}
{"input": "攻击目的地地址分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  | stats count() by waf.dst_ip  |limit 10"}
{"input": "攻击url排行前 20 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  |stats count() by waf.url  |limit 20"}
{"input": "阻断事件类型分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "( appname:waf tag:dbappsecurity )AND (waf.event_name:*攻击*) AND ( waf.action:Block)|stats count() by waf.event_name  |limit 10"}
{"input": "阻断策略分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "( appname:waf tag:dbappsecurity )AND (waf.event_name:*攻击*) AND ( waf.action:Block)   |stats count() by waf.message.policy  |limit 10"}
{"input": "状态码分布前 10 名。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:river  |stats count() by waf.status_code  |limit 10"}
{"input": "运营商访问次数前 10 名。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " appname:waf tag:river  |stats count() by waf.src.geo.isp  |limit 10"}
{"input": "状态码分布前 50 名。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "  (appname:waf tag:river)   |stats count() by waf.status_code  |limit 50"}
{"input": "", "instruction": "linux登录成功源IPtop10", "output": " (appname:linux linux.event_name:登录成功事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "", "instruction": "Linux操作系统审计_linux登录成功源IPtop10", "output": "appname:linux tag:secure Accepted |stats count() by src_ip    |limit 10"}
{"input": "", "instruction": "Linux操作系统审计_linux登录失败源IPtop10", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by rhost    |limit 10"}
{"input": "邮件接收量top5用户。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() by exchange.recipient_address |limit 5"}
{"input": "邮件发送量top5用户。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() by 'exchange.sender_address'  |limit 5"}
{"input": "邮件接收量top10用户。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() by exchange.recipient_address |limit 10"}
{"input": "邮件发送量top10用户。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() by 'exchange.sender_address'  |limit 10"}
{"input": "请求错误资源top20。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": " (appname:pf_tomcat tag:access tomcat.status:>399)  |stats count() by tomcat.uri  |limit 20"}
{"input": "请求错误资源top20。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": " (appname:pf_nginx nginx.status:>399)  |stats count() by nginx.uri  |limit 20"}
{"input": "登录成功源IPtop10。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux linux.event_name:登录成功事件) OR (appname:linux linux.log_type:auth linux.event_name:登录成功事件) |stats count() by linux.src_ip |limit 10"}
{"input": "登录失败源IPtop10。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "操作系统TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:river)   |stats count() by waf.ua_os  |limit 10"}
{"input": "移动设备TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:river)  |stats count() by waf.ua_device  |limit 10"}
{"input": "浏览器TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river)  |stats count() by waf.ua_browser |limit 10"}
{"input": "请求错误资源TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river waf.status_code:>399)  |stats count() by waf.uri  |limit 10"}
{"input": "来源IP请求量TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river)  |stats count() by waf.src_ip  |limit 10"}
{"input": "请求路径TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river)   |stats count() by waf.uri  |limit 10"}
{"input": "请求refererTOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river)  |stats count() by waf.referer  |limit 10"}
{"input": "邮件按发送者事件类型统计top5。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() as ct by exchange.event_id,exchange.sender_address\t\t|sort by ct |limit 5"}
{"input": "邮件按发送者事件类型统计top10。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:tracking)  |stats count() as ct by exchange.event_id,exchange.sender_address\t\t|sort by ct |limit 10"}
{"input": "被阻断IP_top10。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 waf.is_truncated:truncated  \n|stats count() as cnt by waf.src_ip \n| sort by cnt \n|limit 10"}
{"input": "搜索引擎审计top10。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:search_engine | stats count() as cnt by ac.client,ac.src_ip|sort by cnt | limit 10"}
{"input": "直播业务访客城市TOP10排名。直播域名包括：live.hcs.yottabyte.cn,livelimit.lovev.com,hlssplive.rizhiyi.com,hlszblive.rizhiyi.com,sp.live.rizhiyi.com,,yy.live.rizhiyi.com,zb.live.rizhiyi.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei AND (cdn.domain:live.hcs.yottabyte.cn OR cdn.domain:livelimit.lovev.com OR cdn.domain:hlssplive.rizhiyi.com OR  cdn.domain:hlszblive.rizhiyi.com OR cdn.domain:sp.live.rizhiyi.com  OR cdn.domain:yy.live.rizhiyi.com OR cdn.domain:zb.live.rizhiyi.com)  | top 10 cdn.clientip.geo.city"}
{"input": "点播业务访客城市TOP10排名。点播域名包括：vod.hcs.yottabyte.cn, hlsspvod.rizhiyi.com, sp.vod.rizhiyi.com, hlszbvod.rizhiyi.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei AND (cdn.domain:vod.hcs.yottabyte.cn OR cdn.domain:hlsspvod.rizhiyi.com OR  cdn.domain:sp.vod.rizhiyi.com OR cdn.domain:hlszbvod.rizhiyi.com)  |  top 10 cdn.clientip.geo.city"}
{"input": "图片业务访客城市TOP10排名。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei AND (cdn.domain:wapx.yottabyte.cn OR cdn.domain:img.yottabyte.cn OR  cdn.domain:yy0.tv.yottabyte.cn OR cdn.domain:yy1.tv.yottabyte.cn OR cdn.domain:yy2.tv.yottabyte.cn)  | top 10 cdn.clientip.geo.city"}
{"input": "h3c_imc_错误事件， 按次数统计前十个来源 IP。", "instruction": "h3c_imc数据，编写查询语句实现如下分析场景", "output": "appname:imc  AND (imc.level:\"错误\" OR imc.event_level:3) | top 10 imc.src_ip"}
{"input": "h3c_imc_各设备 IP 的错误事件数。", "instruction": "h3c_imc数据，编写查询语句实现如下分析场景", "output": "appname:imc  AND imc.level:\"错误\" | top 10 imc.src_ip"}
{"input": "coremail_源地址top10。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "(appname:core )  | top 10 mail.src_ip"}
{"input": "", "instruction": "404 错误数量最多的站点", "output": "appname:apache apache.status:404 | top 1 apache.domain"}
{"input": "", "instruction": "top 10 页面", "output": "appname:apache | top 10 apache.request_path"}
{"input": "", "instruction": "top 10 搜索引擎引荐网站", "output": "appname:apache | top 10 apache.referer"}
{"input": "", "instruction": "Linux 审核日志查询删除文件最频繁的用户", "output": "appname:linux_auditd  eventtype:DELETE  | top 1 UserName"}
{"input": "", "instruction": "TOP 10搜索引荐链接", "output": "appname:apache NOT apache.referer:\"-\" | top 10 apache.referer "}
{"input": "", "instruction": "TOP 10 iOS 访问设备", "output": "appname:apache apache.ua:*iPhone* | top 10 apache.ua"}
{"input": "", "instruction": "登录失败用户top10", "output": "appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| top 10 vpn.login_user"}
{"input": "", "instruction": "访客采用的top10运营商", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.src.geo.isp"}
{"input": "", "instruction": "登录结果占比top10", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.result"}
{"input": "", "instruction": "被访问设备TOP10", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "", "instruction": "登录用户TOP10", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.login_user"}
{"input": "", "instruction": "被访问端口TOP10", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_port"}
{"input": "", "instruction": "访问位置TOP10", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.province"}
{"input": "DNS查询成功率，取 DNS.result 字段数量占比第一名的 successpercent 值。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | top 1 DNS.result percentfield=successpercent | fields successpercent"}
{"input": "各模块高级事件数，展示前 10 条。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei switch.severity:<4 | top 10 switch.module"}
{"input": "登录成功方式分布，展示前 10 条。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei  (switch.brief:LOGIN_OK OR \"succeeded in logging in\" OR switch.brief:LOGINOK) |top 10 switch.module"}
{"input": "登录失败方式分布，展示前 10 条。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.module"}
{"input": "登录失败最多的源主机，展示前 10 条。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.kvmsg.IpAddress"}
{"input": "事件模块占比分析，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch |top 10 switch.module"}
{"input": "主机事件占比分析，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch |top 10 switch.hostname"}
{"input": "事件级别占比分析，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | top 10 switch.severity"}
{"input": "事件类别占比分析，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch |top 10 switch.mnemonic"}
{"input": "各类型事件的数量排名，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | top 10 switch.mnemonic"}
{"input": "各主机事件的数量排名，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | top 10 switch.hostname"}
{"input": "各模块事件的数量排名，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | top 10 switch.module"}
{"input": "各级别事件的数量排名，展示前 10 条。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | top 10 switch.severity"}
{"input": "firewall_h3c_事件不同模块占比分析，展示前 10 条。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c |top 10 firewall.module"}
{"input": "firewall_h3c_事件不同模块排名分析，展示前 10 条。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c |top 10 firewall.module"}
{"input": "firewall_h3c_事件不同类别排名分析，展示前 10 条。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c |top 10 firewall.mnemonic"}
{"input": "firewall_h3c_事件不同类别占比分析，展示前 10 条。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c |top 10 firewall.mnemonic"}
{"input": "启明星辰防火墙访问不同源IP占比分析，展示前 10 条。", "instruction": "启明星辰防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:venustech | top 10 firewall.src_ip"}
{"input": "启明星辰防火墙不同协议访问占比，展示前 10 条。", "instruction": "启明星辰防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:venustech | top 10 firewall.proto"}
{"input": "启明星辰防火墙访问目标IP占比分析，展示前 10 条。", "instruction": "启明星辰防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:venustech | top 10 firewall.dst_ip"}
{"input": "启明星辰防火墙源端口占比分析，展示前 10 条。", "instruction": "启明星辰防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:venustech | top 10 firewall.src_port"}
{"input": "启明星辰防火墙不同目标端口占比分析，展示前 10 条。", "instruction": "启明星辰防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:venustech | top 10 firewall.dst_port"}
{"input": "收发邮件量前5名占比。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  | top 5 exchange.login_user"}
{"input": "收发邮件前5名排名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  | top 5 exchange.login_user"}
{"input": "收发邮件按方法排名前5名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.method"}
{"input": "收发邮件方法占比前5名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.method"}
{"input": "收发邮件前五名url占比。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.url"}
{"input": "收发邮件前五名url排名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.url"}
{"input": "收发邮件操作系统占比前五名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.ua.os"}
{"input": "收发邮件浏览器占比前五名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 5 exchange.ua.browser"}
{"input": "收发邮件操作系统版本前10名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front   |top 10 exchange.ua.os_v"}
{"input": "收发邮件操作系统前10名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 10 exchange.ua.os"}
{"input": "收发邮件浏览器版本前10名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front   |top 10 exchange.ua.browser_v"}
{"input": "收发邮件浏览器前10名。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |top 10 exchange.ua.browser"}
{"input": "Top10登陆IP。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.src_ip"}
{"input": "Top10登陆目标IP。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.msg.srvaddr"}
{"input": "启明星辰入侵防御系统日志类型占比分析-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.log_type"}
{"input": "启明星辰入侵防御系统日志类型占比分析，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.log_type"}
{"input": "启明星辰入侵防御系统日志安全类型分类占比-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.security_type"}
{"input": "启明星辰入侵防御系统日志安全类型占比分析，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.security_type"}
{"input": "启明星辰入侵防御系统action占比分析-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.action"}
{"input": "启明星辰入侵防御系统acion占比分析，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.action"}
{"input": "启明星辰入侵防御系统事件名称分类占比-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.event_name"}
{"input": "启明星辰入侵防御系统事件名称占比分析，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.event_name"}
{"input": "启明星辰入侵防御系统协议占比-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.proto"}
{"input": "启明星辰入侵防御系统协议占比，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 10 ips.proto"}
{"input": "启明星辰入侵防御系统源地址排名-表格，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 30 ips.src_ip"}
{"input": "启明星辰入侵防御系统源地址排名，展示前 10 条。", "instruction": "启明星辰入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:venustech | top 30 ips.src_ip"}
{"input": "访问位置TOP10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.province"}
{"input": "登录结果占比。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.result"}
{"input": "登录用户TOP10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.login_user"}
{"input": "访客采用的前 10 名运营商。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.src.geo.isp"}
{"input": "登录失败用户top10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| top 10 vpn.login_user"}
{"input": "被访问端口TOP10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_port"}
{"input": "被访问设备TOP10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "ArrayVPN日志程序模块前10名分布。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.facility"}
{"input": "ArrayVPN日志等级前10名分布。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.kv.pri"}
{"input": "ArrayVPN日志严重性前10名分布。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.severity"}
{"input": "ArrayVPN访问目的地址排名前10。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.dst_ip"}
{"input": "ArrayVPN访问源地址排名前10。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.src_ip"}
{"input": "ArrayVPN访问目的端口排名前10。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.kv.dport"}
{"input": "ArrayVPN访问协议前10名分布。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.kv.proto"}
{"input": "ArrayVpn访问用户前10名统计。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|top 10 vpn.kv.user"}
{"input": "启明星辰IDS协议访问排名前10表。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech|top 10 ids.proto |sort by count"}
{"input": "启明星辰IDS协议访问前10名占比分析。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech|top 10 ids.proto"}
{"input": "启明星辰源IP前10名占比分析。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech|top 10 ids.src_ip"}
{"input": "源地址排名前10。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech|top 10 ids.src_ip |sort by count"}
{"input": "目的IP前10名占比。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech |top 10 ids.dst_ip"}
{"input": "目的IP地址前10名。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech |top 10 ids.dst_ip "}
{"input": "IDS攻击主题排名前10。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech |top 10 ids.event_name"}
{"input": "IDS发现攻击主题前10名占比。", "instruction": "启明星辰入侵检测系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:venustech |top 10 ids.event_name"}
{"input": "被访问IP地址top10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco NOT \"authentication\"|top 10 vpn.dst_ip"}
{"input": "被访问端口TOP10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco NOT \"authentication\" |top 10 vpn.dst_port"}
{"input": "攻击远端IP_TOP10。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec  SID| top 10 antivirus_gateway.remoteip"}
{"input": "攻击本地IP_TOP10。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec  SID| top 10 antivirus_gateway.localip"}
{"input": "协议占比前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.proto"}
{"input": "协议排名前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.proto"}
{"input": "目标ip占比前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.dst_ip"}
{"input": "目标ip排名前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.dst_ip"}
{"input": "源端口占比前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.src_port"}
{"input": "源端口排名前 5 名。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |top 5 firewall.src_port"}
{"input": "天融信防火墙日志op排名分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.op"}
{"input": "天融信防火墙日recorder排名分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.recorder"}
{"input": "天融信防火墙日志op占比分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.op"}
{"input": "天融信防火墙操日志recorder占比分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.recorder"}
{"input": "天融信防火墙日志type占比分析。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.type"}
{"input": "天融信防火墙_by_fw占比分析。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.fw"}
{"input": "天融信防火墙日志type排名分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.type"}
{"input": "天融信防火墙_by_fw_排名分析_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |top 10 firewall.msg.fw"}
{"input": "天融信防火墙配置变更用户排名。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec config |top 10 firewall.msg.user"}
{"input": "天融信防火墙登陆错误的用户名排名。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec (AUTH AND \"user login faild,name or password error\") OR (firewall.msg.method:* AND firewall.msg.result:失败) |top 10 firewall.msg.user"}
{"input": "天融信防火墙登陆错误的源地址排名。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec (AUTH AND \"user login faild,name or password error\") OR (firewall.msg.method:* AND firewall.msg.result:失败)|top 10 firewall.src_ip"}
{"input": "日志级别top5排名。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.level"}
{"input": "日志级别top5占比分析。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.level"}
{"input": "db2数据库日志TID排名前5。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.tid"}
{"input": "db2数据库TID占比top5分析。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.tid"}
{"input": "db2日志PROC占比top5分析。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.proc"}
{"input": "db2日志PROC排名top5。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 5 db2.proc"}
{"input": "db2数据库MESSAGE排名top5。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |top 10 db2.message"}
{"input": "飞塔事件类型top10 分布图。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet |top 10 firewall.type"}
{"input": "飞塔UTM事件类型top10 分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.type:utm| top 10 firewall.subtype"}
{"input": "飞塔traffic事件类型top10 分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.type:traffic| top 10 firewall.subtype"}
{"input": "飞塔Event事件类型top10 分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.type:event| top 10 firewall.subtype"}
{"input": "飞塔IPS攻击类型统计前 10。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet | top 10 firewall.attack"}
{"input": "飞塔IPS攻击源IP统计前 10。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall tag:fortinet  AND firewall.subtype:ips| top 10 firewall.src_ip"}
{"input": "飞塔IPS受攻击IP统计前 10。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:ips| top 10 firewall.dst_ip"}
{"input": "飞塔应用控制-高触发源IP统计前 10。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl|top 10  firewall.src_ip"}
{"input": "飞塔流量信息动作统计前 10。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet firewall.type:traffic | top 10 firewall.action"}
{"input": "waf_fortinet_攻击源地址TOP10。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet  |top 10 waf.src_ip"}
{"input": "用户上报前二十名。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|top 20 stb.user_account"}
{"input": "城市报障前二十名。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|top 20 stb.area_code_dec"}
{"input": "问题类型前二十名。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|top 20 stb.reporttype_dec"}
{"input": "热门点播剧场_top10。", "instruction": "机顶盒分析_数据，编写查询语句实现如下分析场景", "output": "appname:stb_vixtel_sotthas NOT stb_vixtel_sotthas.programName:未知 |top 10 stb_vixtel_sotthas.programName"}
{"input": "热门点播剧场top10。", "instruction": "机顶盒日志分析_实时数据，编写查询语句实现如下分析场景", "output": "appname:stb_vixtel_sotthas NOT stb_vixtel_sotthas.programName:未知 |top 10 stb_vixtel_sotthas.programName"}
{"input": "交易结果top10分布。", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "appname:gaps gaps.pub.respmsg:* | top 10 gaps.pub.respmsg"}
{"input": "交易类型top20分布。", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "appname:gaps gaps.pub.respmsg:* | top 20 gaps.pub.jydm"}
{"input": "各事件模块的占比分析前十。", "instruction": "华三路由器日志数据，编写查询语句实现如下分析场景", "output": "appname:router |top 10 router.module"}
{"input": "登录用户TOP10。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor_0trust vpn.event_name:login |top 10 vpn.user_name"}
{"input": "访问位置TOP10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login|top 10 vpn.src.geo.province"}
{"input": "登录结果占比前十名。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login|top 10 vpn.result"}
{"input": "登录用户TOP10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login |top 10 vpn.login_user"}
{"input": "访客采用最多的前十名运营商。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login |top 10 vpn.src.geo.isp"}
{"input": "登录失败用户top10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| top 10 vpn.login_user"}
{"input": "被访问端口TOP10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:access* |top 10 vpn.dst_port"}
{"input": "被访问设备TOP10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "", "instruction": "CDN 日志中，查询 top50 的 IP 流量", "output": "appname:cdn_log|stats sum(cdn.request_length) as bandwidth by cdn.remote_addr | sort by bandwidth | limit 50"}
{"input": "运营商访问流量。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:river NOT waf.src.geo.isp:\"*\" |stats sum(waf.resp_len) as len by waf.src.geo.isp"}
{"input": "", "instruction": "CDN 日志中，统计流量 top 10 的 IP", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 10"}
{"input": "", "instruction": "CDN 日志中，top 10 的 IP 流量查询", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 10"}
{"input": "", "instruction": "CDN 日志中，统计流量 top 20 的 IP", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 20"}
{"input": "", "instruction": "CDN 日志中，top 20 的 IP 流量查询", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 20"}
{"input": "", "instruction": "CDN 日志统计流量 top 100 的 IP", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 100"}
{"input": "", "instruction": "CDN 日志top 100 的 IP 流量查询", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 100"}
{"input": "", "instruction": "CDN 日志top 50 的 IP 流量查询", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 50"}
{"input": "", "instruction": "CDN 日志统计流量 top 50 的 IP", "output": "appname:cdn_log|stats sum(cdn.request_length) as bytes by cdn.remote_addr | sort by bytes | limit 50"}
{"input": "live.rizhiyi.com。", "instruction": "CDN 日志中，查询指定域名 top10 的 IP 请求次数", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 10 cdn.remote_addr"}
{"input": "live.rizhiyi.com。", "instruction": "CDN 日志中，查询指定域名 top20 的 IP 请求次数", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 20 cdn.remote_addr"}
{"input": "live.rizhiyi.com。", "instruction": "CDN 日志查询指定域名 top100 的 IP 请求次数", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 100 cdn.remote_addr"}
{"input": "live.rizhiyi.com。", "instruction": "CDN 日志查询指定域名 top50 的 IP 请求次数", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 50 cdn.remote_addr"}
{"input": "122.32.67.13。", "instruction": "CDN 日志中，查询指定IP的 top10 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:122.32.67.13|top 10 cdn.request_url"}
{"input": "119.32.67.14。", "instruction": "CDN 日志中，查询指定IP的 top5 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:119.32.67.14|top 5 cdn.request_url"}
{"input": "119.32.67.13。", "instruction": "CDN 日志中，查询指定IP的 top10 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:119.32.67.13|top 10 cdn.request_url"}
{"input": "119.32.68.13。", "instruction": "CDN 日志中，查询指定IP的 top50 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:119.32.68.13|top 50 cdn.request_url"}
{"input": "123.32.67.13。", "instruction": "CDN 日志中，查询指定IP的 top10 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:123.32.67.13|top 10 cdn.request_url"}
{"input": "119.33.67.13。", "instruction": "CDN 日志中，查询指定IP的 top100 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:119.33.67.13|top 100 cdn.request_url"}
{"input": "119.32.206.13。", "instruction": "CDN 日志中，查询指定IP的 top10 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:119.32.206.13|top 10 cdn.request_url"}
{"input": "120.32.67.13。", "instruction": "CDN 日志中，查询指定IP的 top20 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:120.32.67.13|top 20 cdn.request_url"}
{"input": "223.32.67.13。", "instruction": "CDN 日志中，查询指定IP的 top10 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:223.32.67.13|top 10 cdn.request_url"}
{"input": "120.33.68.14。", "instruction": "CDN 日志中，查询指定IP的 top3 URL 请求次数", "output": "appname:cdn_log AND cdn.remote_addr:120.33.68.14|top 3 cdn.request_url"}
{"input": "", "instruction": "查询 nginx 日志中 top50 的真实用户 IP 的总流量分布", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 50"}
{"input": "", "instruction": "查询 nginx 日志中 top5 的真实用户 IP 的总流量分布", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 5"}
{"input": "", "instruction": "查询 nginx 日志中 top10 的实际用户 IP 的总流量分布", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 10"}
{"input": "", "instruction": "查询 nginx 日志中 top20 的实际用户 IP 的总流量分布", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 20"}
{"input": "", "instruction": "查询 nginx 日志中 top100 的最终用户 IP 的总流量分布", "output": "appname:nginx_log| stats sum(nginx.request_length) as sm by nginx.real_ip.last | sort by sm | limit 100"}
{"input": "", "instruction": "查询 nginx 日志中请求次数 top50 的真实用户 IP", "output": "appname:nginx_log |top 50 nginx.real_ip.last"}
{"input": "", "instruction": "查询 nginx 日志中请求次数 top100 的 URL", "output": "appname:nginx_log |top 100 nginx.request_raw.request_url"}
{"input": "", "instruction": "Windows 安全日志查询失败登录次数最多的用户", "output": "appname = win:security  EventCode:4625 | top 1 UserName"}
{"input": "", "instruction": "访问者TOP10", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.ip"}
{"input": "", "instruction": "vsftp下载服务器TOP10", "output": "appname:linux AND tag:linux_secure AND audit.msg.ser:vsftpd | top 10 ip"}
{"input": "", "instruction": "虚拟机_vmware_top10用户登录", "output": "appname:vmware AND tag:*  AND ('vmware.msg.user':*)|top 10 vmware.msg.user"}
{"input": "", "instruction": "虚拟机_vmware_top10系统操作", "output": "appname:vmware AND tag:*  AND ('vmware.action':*)|top 10 vmware.action"}
{"input": "最近内存使用情况。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:top_info_system_stats | limit 1 "}
{"input": "aofei_cdn访客城市TOP10。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei | top 10  cdn.geo.city"}
{"input": "aofei_cdn热门资源TOP10。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei | top 10 cdn.prefix_url"}
{"input": "aofei_直播业务访客城市TOP10排名。直播业务域名包括：live.hcs.yottabyte.cn,livelimit.lovev.com,hlssplive.rizhiyi.com,hlszblive.rizhiyi.com,sp.live.rizhiyi.com,,yy.live.rizhiyi.com,zb.live.rizhiyi.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND (cdn.domain:live.hcs.yottabyte.cn OR cdn.domain:livelimit.lovev.com OR cdn.domain:hlssplive.rizhiyi.com OR  cdn.domain:hlszblive.rizhiyi.com OR cdn.domain:sp.live.rizhiyi.com  OR cdn.domain:yy.live.rizhiyi.com OR cdn.domain:zb.live.rizhiyi.com)  | top 10  cdn.geo.city"}
{"input": "aofei_直播业务错误状态TOP10。直播业务域名包括：live.hcs.yottabyte.cn,livelimit.lovev.com,hlssplive.rizhiyi.com,hlszblive.rizhiyi.com,sp.live.rizhiyi.com,,yy.live.rizhiyi.com,zb.live.rizhiyi.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND (cdn.http_status:40? OR cdn.http_status:5??) AND  （live.hcs.yottabyte.cn OR cdn.domain:livelimit.lovev.com OR cdn.domain:hlssplive.rizhiyi.com OR  cdn.domain:hlszblive.rizhiyi.com OR cdn.domain:sp.live.rizhiyi.com  OR cdn.domain:yy.live.rizhiyi.com OR cdn.domain:zb.live.rizhiyi.com）|top 10 cdn.http_status"}
{"input": "aofei_点播业务访客城市TOP10排名。点播域名包括：vod.hcs.yottabyte.cn, hlsspvod.rizhiyi.com, sp.vod.rizhiyi.com, hlszbvod.rizhiyi.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND (cdn.domain:vod.hcs.yottabyte.cn OR cdn.domain:hlsspvod.rizhiyi.com OR  cdn.domain:sp.vod.rizhiyi.com OR cdn.domain:hlszbvod.rizhiyi.com) | top 10 cdn.geo.city"}
{"input": "aofei_点播业务错误状态节点TOP10。点播域名包括：vod.hcs.yottabyte.cn, hlsspvod.rizhiyi.com, sp.vod.rizhiyi.com, hlszbvod.rizhiyi.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND (cdn.http_status:40? OR cdn.http_status:5??) AND  (cdn.domain:vod.hcs.yottabyte.cn OR cdn.domain:hlsspvod.rizhiyi.com OR  cdn.domain:sp.vod.rizhiyi.com OR cdn.domain:hlszbvod.rizhiyi.com) | top 10 cdn.http_status"}
{"input": "CDN各主机节点业务3秒3秒3秒超时占比情况，看前 10 名。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei cdn.finished_body_response:>3  |top 10 hostname"}
{"input": "CDN访客城市TOP10排名。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  | top 10 cdn.clientip.geo.city"}
{"input": "CDN热门资源TOP10排名。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  | top 10 cdn.prefix_url"}
{"input": "CDN运营商TOP10排名。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  |top 10 cdn.clientip.geo.isp"}
{"input": "图片业务_用户终端类型TOP10。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei (cdn.domain:wapx.yottabyte.cn OR cdn.domain:img.yottabyte.cn OR  cdn.domain:yy0.tv.yottabyte.cn OR cdn.domain:yy1.tv.yottabyte.cn OR cdn.domain:yy2.tv.yottabyte.cn)| top 10 cdn.client"}
{"input": "图片业务超时域名TOP10。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei AND cdn.finished_body_response:>1 AND (cdn.domain:wapx.yottabyte.cn OR cdn.domain:img.yottabyte.cn OR  cdn.domain:yy0.tv.yottabyte.cn OR cdn.domain:yy1.tv.yottabyte.cn OR cdn.domain:yy2.tv.yottabyte.cn)|  top 10 cdn.domain"}
{"input": "防火墙事件等级分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa | top 10 firewall.severity_level"}
{"input": "防火墙事件ID数分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa | top 10 firewall.message_id"}
{"input": "防火墙动作分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa | top 10 firewall.action"}
{"input": "防火墙事件种类分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa | top 10 firewall.vendor_action"}
{"input": "防火墙源IP请求量分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa |top 10 firewall.src.geo.ip"}
{"input": "防火墙目的IP请求量分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa |top 10 firewall.dst_ip"}
{"input": "防火墙访问国家分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa NOT firewall.src.geo.country: private | top 20 firewall.src.geo.country"}
{"input": "防火墙丢弃事件源IP分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa  firewall.action:teardown | top 10 firewall.src.geo.ip"}
{"input": "防火墙阻断事件源IP分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa  firewall.action:blocked | top 10 firewall.src.geo.ip"}
{"input": "防火墙访问失败源IP分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa firewall.action:failure | top 10 firewall.src.geo.ip"}
{"input": "防火墙访问失败源IP分布，展示前 20 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa firewall.action:failure | top 20 firewall.src.geo.ip"}
{"input": "防火墙丢弃事件目的IP分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa  firewall.action:teardown | top 10 firewall.dst.geo.ip"}
{"input": "防火墙阻断事件目的IP分布，展示前 10 条。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa  firewall.action:blocked | top 10 firewall.dst.geo.ip"}
{"input": "请求前10的客户端ip，展示前 10 条。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 from|top 10 loadbalancing.src_ip.geo.ip"}
{"input": "响应域名_top10。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:loadbalancing tag:f5 )  NOT \"default send string\" NOT info  \"to\" NOT \"empty\"  | top 10 loadbalancing.domain"}
{"input": "客户端来源城市前 10 名。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5  loadbalancing.responsecode:* to | top 10 loadbalancing.src_ip.geo.city"}
{"input": "F5_Top访问URL前 10 名。", "instruction": "F5数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 AND loadbalancing.type:logger|top 10 loadbalancing.url"}
{"input": "前 50 个城市的请求热力图。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 50 middleware.geo.city"}
{"input": "访问目的地址TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.dst_ip"}
{"input": "访问源IP地址TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.src_ip"}
{"input": "访问运营商TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.src.geo.isp"}
{"input": "访问国家TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.src.geo.country"}
{"input": "访问城市TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.src.geo.city"}
{"input": "服务TOP10。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.uri"}
{"input": "firewall_h3c_登陆IP排名，展示前 10 条。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c NOT Duplicate |top 10 firewall.src_ip"}
{"input": "源IP事件数排名，展示前 10 条。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* IPS) appname:firewall AND tag:hillstone | top 10 firewall.src_ip"}
{"input": "目的IP事件数排名，展示前 10 条。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* IPS) AND appname:firewall tag:hillstone | top 10 firewall.dst.geo.ip"}
{"input": "Juniper目的IP地址TOP10。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper |top 10 firewall.dst.geo.ip\t"}
{"input": "juniper源IP_top10。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper|top 10 firewall.src.geo.ip\t"}
{"input": "Top20登陆IP。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.src_ip"}
{"input": "Top20登陆目标IP。", "instruction": "帕拉迪堡垒机数据，编写查询语句实现如下分析场景", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.msg.srvaddr"}
{"input": "堡垒机_qizhi_堡垒机账号登录top10。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm (NOT fortress.type:*) AND (login)  |top 10 fortress.user"}
{"input": "堡垒机_qizhi_堡垒机账号使用TOP10。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm  fortress.type:* |top 10 fortress.user"}
{"input": "堡垒机_qizhi_登录源IP_TOP10。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:* |top 10 fortress.src_ip"}
{"input": "IPS_目标IP地址TOP10。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus | top 10 ips.dst.geo.ip"}
{"input": "IPS_源IP地址TOP10。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:nsfocus  | top 10 ips.src.geo.ip"}
{"input": "日志类型分布top10。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|top 10 firewall.log_type"}
{"input": "攻击类型top10。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor |top 10 firewall.attack_type"}
{"input": "攻击次数源IP_TOP10。", "instruction": "ips数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.src.geo.ip:* | top 10 ips.src.geo.ip"}
{"input": "攻击次数目的IP_TOP10。", "instruction": "ips数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.dst.geo.ip:* | top 10 ips.dst.geo.ip"}
{"input": "攻击次数源地区_TOP10。", "instruction": "ips数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.src.geo.province:* | top 10 ips.src.geo.province"}
{"input": "访问者TOP10。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.ip"}
{"input": "登陆IP地址TOP10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |top 10 vpn.src_ip"}
{"input": "登录者位置TOP10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |top 10 vpn.src.geo.province"}
{"input": "登录用户top10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |top 10 vpn.user"}
{"input": "登录失败的用户TOP10。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\" |top 10 vpn.user"}
{"input": "top10登录IP。", "instruction": "fortress_leadsec仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | top 10 fortress.src_ip"}
{"input": "top10服务器ip。", "instruction": "fortress_leadsec仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | top 10 fortress.dst_ip"}
{"input": "数据库_mssql_用户连接成功用户top10。", "instruction": "数据库_mssql数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:connect | top 10 sqlserver.Login\t"}
{"input": "数据库_mssql_连接成功用户主机top10。", "instruction": "数据库_mssql数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:connect | top 10 sqlserver.HostName"}
{"input": "数据库_mssql_用户连接数据库top10。", "instruction": "数据库_mssql数据，编写查询语句实现如下分析场景", "output": "appname:sqlserver tag:connect | top 10 sqlserver.DBName"}
{"input": "攻击来源城市TOP10。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | top 10 ddos.src.geo.city"}
{"input": "被攻击城市TOP10。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | top 10 ddos.dst.geo.city"}
{"input": "被攻击目标IP地址TOP10。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.src_ip:*| top 10 ddos.dst_ip"}
{"input": "攻击源IP地址TOP10。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.src_ip:*| top 10 ddos.src_ip"}
{"input": "waf_imperva_攻击类型top10。", "instruction": "waf_imperva数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |top 10 waf.alertType"}
{"input": "waf_imperva_受攻击服务器IP地址top10。", "instruction": "waf_imperva数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |top 10 waf.dst_ip"}
{"input": "waf_imperva_攻击源IP地址top10。", "instruction": "waf_imperva数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |top 10 waf.src_ip"}
{"input": "firewall_juniper_目的地址top10。", "instruction": "firewall_juniper数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:juniper|top 10 firewall.dst.geo.ip"}
{"input": "firewall_juniper_来源地址top10。", "instruction": "firewall_juniper数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:juniper|top 10 firewall.src.geo.ip"}
{"input": "梭子鱼_waf_源地址top20。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 20 waf.src_ip"}
{"input": "梭子鱼_waf_目的地址top20。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 20 waf.dst_ip"}
{"input": "梭子鱼_waf_被访问urlTOP20。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 20 waf.url"}
{"input": "ips_juniper_目的ip地址top20。", "instruction": "ips_juniper数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:juniper|top 20 ips.dst_ip"}
{"input": "ips_juniper_源IP地址top10。", "instruction": "ips_juniper数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:juniper|top 10 ips.src_ip"}
{"input": "中间件_nginx_请求路径top10。", "instruction": "中间件_nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access|top 10 middleware.access_request"}
{"input": "中间件_nginx_请求ip地址top10。", "instruction": "中间件_nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access |top 10  middleware.src.geo.ip"}
{"input": "ids_snort_源ip地址top10。", "instruction": "ids_snort数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|top 10 ids.src_ip\t"}
{"input": "ids_snort_目的ip地址top10。", "instruction": "ids_snort数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|top 10 ids.dst_ip\t"}
{"input": "waf_yxlink_源IP地址top10。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |top 10 waf.src_ip"}
{"input": "waf_yxlink_攻击类型top10。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |top 10 waf.event_name"}
{"input": "waf_yxlink_目的IP地址top10。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |top 10 waf.dst_ip"}
{"input": "操作类型top10。", "instruction": "middle_ibm_was数据，编写查询语句实现如下分析场景", "output": "appname:was tag:sysout|top 10 was.wasShortName"}
{"input": "错误top10。", "instruction": "middle_ibm_was数据，编写查询语句实现如下分析场景", "output": "appname:was tag:syserr  | top 10 was.wasErrReason"}
{"input": "日志类型占比。", "instruction": "middle_ibm_was数据，编写查询语句实现如下分析场景", "output": "appname:was |top 10 was.wasEventLogType"}
{"input": "ips_topsec_各类动作前 10 名占比。", "instruction": "ips_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:topsec |top 10 ips.action"}
{"input": "目的地址top10。", "instruction": "ips_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:topsec | top 10 ips.dst_ip"}
{"input": "ips_topsec_协议占比。", "instruction": "ips_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:topsec |top 10 ips.proto"}
{"input": "源地址top10。", "instruction": "ips_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:topsec | top 10 ips.src.geo.ip"}
{"input": "访问目标地址top10。", "instruction": "firewall_novel数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel | top 10 firewall.dst.geo.city"}
{"input": "源ip地址top10。", "instruction": "ips_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:fortinet | top 10 ips.src_ip"}
{"input": "被攻击城市top10。", "instruction": "ips_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:fortinet | top 10 ips.dst.geo.city"}
{"input": "攻击来源城市top10。", "instruction": "ips_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:fortinet | top 10 ips.src.geo.city"}
{"input": "目的ip地址top10。", "instruction": "ips_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:fortinet | top 10 ips.dst_ip"}
{"input": "登陆用户top10。", "instruction": "vpn_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:fortinet | top 10 vpn.login_user"}
{"input": "访客采用运营商top10。", "instruction": "vpn_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:fortinet | top 10 vpn.src.geo.isp"}
{"input": "访问源ip地址top10。", "instruction": "vpn_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:fortinet | top 10 vpn.src_ip"}
{"input": "访问位置top10。", "instruction": "vpn_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:fortinet | top 10 vpn.src.geo.province"}
{"input": "收件邮箱top10。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.recv_mail"}
{"input": "主机top10。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.hostname"}
{"input": "URLtop10。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.uri"}
{"input": "发件邮箱top10。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.send_mail"}
{"input": "安全等级top10分布。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.event_level"}
{"input": "协议top5分布。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 5 dlp.proto"}
{"input": "策略top10。", "instruction": "symantec_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:symantec |top 10 dlp.rule_name"}
{"input": "源用户top10。", "instruction": "websense_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|top 10 dlp.src_user"}
{"input": "类型分布top10。", "instruction": "websense_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|top 10 dlp.category"}
{"input": "目标用户top10。", "instruction": "websense_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|top 10 dlp.dst_user"}
{"input": "源ip地址top10。", "instruction": "websense_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|top 10 dlp.src_ip"}
{"input": "服务top10分布。", "instruction": "websense_dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|top 10 dlp.service"}
{"input": "top10系统操作。", "instruction": "虚拟机_vmware数据，编写查询语句实现如下分析场景", "output": "appname:vmware AND tag:*  AND ('vmware.action':*)|top 10 vmware.action"}
{"input": "top10用户登录。", "instruction": "虚拟机_vmware数据，编写查询语句实现如下分析场景", "output": "appname:vmware AND tag:*  AND ('vmware.msg.user':*)|top 10 vmware.msg.user"}
{"input": "vpn登录事件Top10源IP。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log in|top 10 vpn.src_ip"}
{"input": "vpn登出事件TOP10源IP。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log out|top 10 vpn.src_ip"}
{"input": "登录失败源IP地址top10。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen login fail| top 10  firewall.src_ip"}
{"input": "waf_hillstone受影响URLtop10。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|top 10 waf.HTTP_URL"}
{"input": "waf_hillstone攻击源城市top10。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|top 10 waf.src.geo.city"}
{"input": "waf_hillstone攻击动作top10。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|top 10 waf.attack_name"}
{"input": "waf_hilstone攻击源地址top10。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|top 10 waf.src_ip"}
{"input": "sangfor_cdn_ad_访问目的IP地址top。", "instruction": "深信服负载均衡ad数据，编写查询语句实现如下分析场景", "output": "(appname:cdn AND tag:sangfor) |top 10 cdn.dst_outside_ip"}
{"input": "目标地址访问TOP10。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:sonicwall |top 10 firewall.dst_ip"}
{"input": "源地址访问TOP10。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:sonicwall |top 10 firewall.src_ip"}
{"input": "提示信息TOP10。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:sonicwall | top  10   firewall.msg.msg"}
{"input": "防火墙访问协议TOP10。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:sonicwall | top  10   firewall.proto"}
{"input": "访问内容说明top10。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:sonicwall  | top 10 firewall.msg.note"}
{"input": "NSFOCUS_目标地址Top10。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus  | top 10 firewall.dst_ip"}
{"input": "NSFOCUS_源地址Top10。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall   tag:nsfocus | top 10 firewall.src_ip"}
{"input": "微投各服务次数top10。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:glory) |top 10 glory.servicename"}
{"input": "vpn_juniper_登录失败用户top10。", "instruction": "vpn_juniper数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action:failed|top 10 vpn.login_user"}
{"input": "vpn_juniper_登录失败源地址top10。", "instruction": "vpn_juniper数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action:failed|top 10 vpn.src_ip"}
{"input": "不同级别事件数top10。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:system|top 10 firewall.pri_cn"}
{"input": "前五十名的模块事件数。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:system|top 50 firewall.recorder"}
{"input": "前 200 名操作数量统计。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:system|top 200 firewall.op"}
{"input": "前 500 条执行结果消息。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:system|top 500 firewall.msg"}
{"input": "前50名用户登录登出。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:system|top 50 firewall.op by firewall.user"}
{"input": "前十名被拒绝的策略号。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:pf firewall.msg:Reject | top 10 firewall.policyid"}
{"input": "前十名ac被拒绝的策略号。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:ac firewall.rule:deny|top 10 firewall.policyid"}
{"input": "前十名对连接模块的操作。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:conn|top 10 firewall.op"}
{"input": "前十名协议类型。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:conn|top 10 firewall.proto"}
{"input": "目的地址top10。", "instruction": "nsfocus_nids数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus|top 10 ids.dst_ip\t"}
{"input": "源地址top10。", "instruction": "nsfocus_nids数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus|top 10 ids.src_ip\t"}
{"input": "toserver源ip流量top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve  nta.flow.bytes_toserver:*|stats sum(nta.flow.bytes_toserver) as cnt by nta.src_ip |sort by cnt |limit 10"}
{"input": "toclient目的ip流量top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve  nta.flow.bytes_toclient:*|stats sum(nta.flow.bytes_toclient) as cnt by nta.dst_ip |sort by cnt |limit 10"}
{"input": "toclient源ip流量top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve  nta.flow.bytes_toclient:*|stats sum(nta.flow.bytes_toclient) as cnt by nta.src_ip |sort by cnt |limit 10"}
{"input": "toserver目的ip流量top10。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve  nta.flow.bytes_toserver:*|stats sum(nta.flow.bytes_toserver) as cnt by nta.dst_ip |sort by cnt |limit 10"}
{"input": "leader节点，取前 10 个节点 IP 地址。", "instruction": "zookeeper日志数据，编写查询语句实现如下分析场景", "output": "appname:zookeeper tag:zookeeper_health middleware.zkmsg.zk_server_state:leader|top 10 ip"}
{"input": "mall_bus前10名业务类型排名表。", "instruction": "mall_bus中间件业务数据，编写查询语句实现如下分析场景", "output": "appname:xdtx_mall_bus |top 10 middleware.type"}
{"input": "mall_bus前10名的业务类型占比分析。", "instruction": "mall_bus中间件业务数据，编写查询语句实现如下分析场景", "output": "appname:xdtx_mall_bus |top 10 middleware.type"}
{"input": "mall_bus调用接口描述 top10占比分析。", "instruction": "mall_bus中间件业务数据，编写查询语句实现如下分析场景", "output": "appname:xdtx_mall_bus | top 10 middleware.desc"}
{"input": "mall_bus调用接口描述top10排名表。", "instruction": "mall_bus中间件业务数据，编写查询语句实现如下分析场景", "output": "appname:xdtx_mall_bus | top 10 middleware.desc"}
{"input": "mall_bus调用接口错误的top10统计。", "instruction": "mall_bus中间件业务数据，编写查询语句实现如下分析场景", "output": "appname:xdtx_mall_bus NOT middleware.status:0 | top 10 middleware.status"}
{"input": "用户来源分布前 50 名。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 50 middleware.src_ip.geo.city"}
{"input": "网站热门 top10资源统计。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 10 middleware.path"}
{"input": "top10访问来源ISP统计。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname: nginx|top 10 middleware.src_ip.geo.isp\t"}
{"input": "用户访问top10终端统计。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 10 middleware.agent.os"}
{"input": "用户浏览器top10分布。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|top 10 middleware.agent.browser"}
{"input": "请求量排名。", "instruction": "haproxy日志数据，编写查询语句实现如下分析场景", "output": "appname:haproxy|top 20 middleware.srcip"}
{"input": "tomcat_stdout_源ip地址top10。", "instruction": "tomcat_stdout数据，编写查询语句实现如下分析场景", "output": "appname:tomcat tag:stdout |top 10 middleware.src_ip"}
{"input": "csa_威胁源地址TOP10。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone csa.event_type:Threat|top 10 csa.src_ip"}
{"input": "csa_受到威胁目的地址TOP10。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone csa.event_type:Threat|top 10 csa.dst_ip"}
{"input": "waf_venus受威胁目的端口top10。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| top 10 waf.dst_port"}
{"input": "waf_venus受威胁目的地址top10。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| top 10 waf.dst_ip"}
{"input": "waf_venus威胁源地址top10。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| top 10 waf.src_ip"}
{"input": "USG6650_访问源地址TOP10。", "instruction": "firewall_huawei_USG6650数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 |top 10 firewall.src_ip"}
{"input": "USG6650_受访问目的地址TOP10。", "instruction": "firewall_huawei_USG6650数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 |top 10 firewall.dst_ip"}
{"input": "USG6650_高频受访的 Top10 目的端口。", "instruction": "firewall_huawei_USG6650数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 |top 10 firewall.dst_port"}
{"input": "h3c_switch_源地址top10。", "instruction": "h3c_switch_S10508仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:switch  tag:h3c |top 10 switch.src_ip"}
{"input": "h3c_switch_事件类型事件模块top10。", "instruction": "h3c_switch_S10508仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:switch  tag:h3c |top 10 switch.event_type"}
{"input": "vpn_leadsec_vpn访问top10用户。", "instruction": "vpn_leadsec数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec |top 10 'vpn.用户'"}
{"input": "topsec_被攻击目的地址TOP10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.dst_ip"}
{"input": "topsec_攻击源地址TOP10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.src_ip"}
{"input": "topsec_命中策略top10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.policy"}
{"input": "topsec_refer的TOP10统计。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.http_refer "}
{"input": "事件级别分布top10。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba|top 10 access_point.severity"}
{"input": "模块事件数分布top10。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba|top 10 access_point.error_location"}
{"input": "事件ID分布top10。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba|top 10 access_point.error_number"}
{"input": "卡顿最多的用户。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag | top 1 stb.kvmsg.UserId.user_account"}
{"input": "源IP地址TOP10。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec  | top 10 ips.src.geo.ip"}
{"input": "目标IP地址TOP10。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec | top 10 ips.dst.geo.ip"}
{"input": "认证终端机器地址TOP10。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft uninxg.log_type:userAuthInfo| top 10 uninxg.termip "}
{"input": "认证用户名TOP10。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft uninxg.log_type:userAuthInfo| top 10 uninxg.identname "}
{"input": "操作频率TOP10文件。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:fileExchangeDetail) | top 10 uninxg.targetfile"}
{"input": "文件操作类型top10。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:fileExchangeDetail) | top 10 uninxg.iopttype"}
{"input": "目的地址TOP10。", "instruction": "ids_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ids  tag:topsec | top 10 ids.dst_ip"}
{"input": "源地址TOP10。", "instruction": "ids_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ids  tag:topsec | top 10 ids.src_ip"}
{"input": "用户主要请求类型THS.FUNC的前 20 名。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.ANSTYPE:\" \"| top 20 THS.FUNC"}
{"input": "搜索 THS.REQTYPE 为 1，THS.ANSTYPE 为\" \"的日志里，用户运营商分布的top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths AND THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | top 10 THS.geo.isp"}
{"input": "搜索 THS.REQTYPE 为 1，THS.ANSTYPE 为\" \"的日志里，用户地市分布top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths AND THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | top 10 THS.geo.city"}
{"input": "搜索 THS.REQTYPE 为 1，THS.ANSTYPE 为\" \"的日志里，用户省份分布top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths AND THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | top 10 THS.geo.province"}
{"input": "搜索 THS.REQTYPE 为 3，THS.ANSTYPE 为\" \"的日志里，委托买卖量对比top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:3 THS.ANSTYPE:\" \"| top 10 THS.MMLB"}
{"input": "搜索 THS.REQTYPE 为 3，THS.ANSTYPE 为\" \"的日志里，市场分类占比top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:3 THS.ANSTYPE:\" \"| top 10 THS.SETCODECN"}
{"input": "搜索 THS.REQTYPE 为 3，THS.ANSTYPE 为 0，THS.MMLB 为 B 的日志里，委买失败原因分析top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:3 THS.ANSTYPE:0 THS.MMLB:B | top 10 THS.CWXX"}
{"input": "搜索 THS.REQTYPE 为 3，THS.ANSTYPE 为 0，THS.MMLB 为 S 的日志里委卖失败原因分析top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:3 THS.ANSTYPE:0 THS.MMLB:S | top 10 THS.CWXX"}
{"input": "搜索 THS.REQTYPE 为 4，THS.ANSTYPE 为 0 的日志撤单失败原因分析top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:4 THS.ANSTYPE:0  | top 10 THS.CWXX"}
{"input": "搜索 THS.REQTYPE 包含 E 或 F，THS.ANSTYPE 为\" \"的银证转账日志，THS.REQTYPE 前 3 名。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:/[EF]/ THS.ANSTYPE:\" \"  | top 3 THS.REQTYPE"}
{"input": "搜索 THS.REQTYPE 为 E，THS.ANSTYPE 为0的银转证错误日志，统计 THS.CWXX 的top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:E THS.ANSTYPE:0  | top 10 THS.CWXX"}
{"input": "搜索 THS.REQTYPE 为 F，THS.ANSTYPE 为0的证转银错误日志，统计 THS.CWXX 字段值的top10。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:F THS.ANSTYPE:0  | top 10 THS.CWXX"}
{"input": "除\"连接信息\"以外的业务类型分布top10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx  NOT 连接信息 | top 10 TDX.BUSINESS_TYPE"}
{"input": "除\"连接信息\"以外调用失败的原因分布top10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx  NOT 连接信息 \"调用失败\" | top 10 TDX.TDX_ID_RESULT"}
{"input": "用户访问请求运营商来源占比top10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx NOT 连接信息 | top 10 TDX.geo.isp"}
{"input": "梭子鱼_waf_源地址top10。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 10 waf.src_ip"}
{"input": "梭子鱼_waf_目的地址top10。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 10 waf.dst_ip"}
{"input": "梭子鱼_waf_被访问urlTOP10。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |top 10 waf.url"}
{"input": "top10协议类型。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon   firewall.type:conn  OR firewall.type:traffic|top 10 firewall.proto"}
{"input": "对连接模块的操作状态的top10。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon   firewall.type:conn  OR firewall.type:traffic|top 10 firewall.status"}
{"input": "top10不同级别事件数。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 10 firewall.pri|sort by firewall.pri"}
{"input": "top20各模块事件数。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 20 firewall.recorder"}
{"input": "top200操作。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 200 firewall.action"}
{"input": "top500执行结果消息。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 500 firewall.msg"}
{"input": "top10用户登录登出。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 50 firewall.action by firewall.user"}
{"input": "ac被拒绝的top10策略号。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:ac firewall.status:deny|top 10 firewall.policyid"}
{"input": "pf被拒绝的top10策略号。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:pf firewall.msg:Reject | top 10 firewall.policyid"}
{"input": "攻击方式top10的firewall.msg。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:secure|top 10 firewall.msg"}
{"input": "用户审计动作top10分布。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:auth|top 10 ac.action"}
{"input": "用户上线/下线源地址TOP10。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:auth NOT ac.action:\"更新\"|top 10 ac.src_ip"}
{"input": "频繁下线源地址TOP10。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:auth ac.action:\"下线\" | top 10 ac.src_ip"}
{"input": "访问者TOP10。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login|top 10 vpn.src.geo.ip"}
{"input": "TOP5源IP访问。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.src_ip"}
{"input": "目的IPtop5访问。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.dst_ip"}
{"input": "TOP5访问源端口。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.src_port"}
{"input": "目的端口访问TOP5占比。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.dst_port"}
{"input": "中间件_kingdee_请求路径top10。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access|top 10 middleware.path"}
{"input": "中间件_kingdee_请求ip地址top10。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access |top 10  middleware.src.geo.ip"}
{"input": "错误进程前十名统计。", "instruction": "zsns 应用的tomcat业务数据，编写查询语句实现如下分析场景", "output": "appname:zsns tomcat.level:ERROR | top 10  tomcat.thread "}
{"input": "来源IP访问流量TOP10。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river) |stats sum(waf.resp_len) as len by waf.src_ip|sort by len|limit 10"}
{"input": "协议分布占比。", "instruction": "ids_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:topsec  | stats count() by ids.proto"}
{"input": "访问协议占比。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5  | stats count() as cnt by waf.proto"}
{"input": "各类事件等级分布占比。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 | stats count() as cnt by waf.event_level"}
{"input": "http状态码分布占比。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5   | stats count() as cnt by waf.status"}
{"input": "coremail_登入登出用户top10。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "(appname:core tag:imap)  mail.action:*log* |stats count() as cnt by mail.user|limit 10"}
{"input": "已阻断数量。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec) AND ( waf.action:Block)|stats count()"}
{"input": "攻击来源热力图。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "(appname:waf tag:imperva )  |stats count(waf.msg.src.geo.country) as count_ by waf.msg.src.geo.country"}
{"input": "本月低风险事件总数。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:imperva AND waf.severity:低 |stats count() as tally by waf.severity"}
{"input": "本月中风险事件总数。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva AND waf.severity:中 |stats count() as tally by waf.severity"}
{"input": "本月高风险事件总数。", "instruction": "Imperva_waf数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva AND waf.severity:高 |stats count() as tally by waf.severity"}
{"input": "防火墙总的事件量_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec |stats count() as cnt"}
{"input": "告警warning事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet waf.kv.pri:warning |stats count() as cnt "}
{"input": "waf_fortinet_日志等级分布。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet  |stats count() as cnt by waf.kv.pri"}
{"input": "告警alert事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet waf.kv.pri:alert |stats count() as cnt "}
{"input": "waf_fortinet_事件类型占比。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet | stats count() as cnt by waf.kv.type"}
{"input": "waf_fortinet_总事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet | stats count() as cnt "}
{"input": "waf_fortinet_攻击事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet waf.kv.type:attack | stats count() as cnt by waf.kv.type"}
{"input": "waf_fortinet_中等级事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet AND waf.kv.severity_level:Medium | stats count() as cnt"}
{"input": "waf_fortinet_高等级事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet AND waf.kv.severity_level:High | stats count() as cnt"}
{"input": "waf_fortinet_低等级事件数。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet AND waf.kv.severity_level:Low | stats count() as cnt"}
{"input": "防火墙非常严重事件数量_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:<3 |stats count() as cnt"}
{"input": "防火墙严重事件数量_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:<5 AND firewall.msg.pri:>2 |stats count() as cnt"}
{"input": "防火墙普通事件数量_firewall_topsec。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:>4 |stats count() as cnt"}
{"input": "waf_fortinet_收到攻击地址TOP10。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet  |stats count() as cnt by  waf.dst_ip|limit 10"}
{"input": "按邮件主题top10统计。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats count() by exchange.message_subject | limit 10"}
{"input": "阻断攻击的源ip所属省份分布。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  AND (waf.message.src_ip.geo.country:\"中国\") |stats count(waf.message.src_ip.geo.province) as count_ by waf.message.src_ip.geo.province"}
{"input": "入侵轨迹展示。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " appname:waf tag:dbappsecurity |stats count() as count_ by waf.message.src_ip.geo.ip,waf.url"}
{"input": "被阻断的攻击源ip地理位置分布。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  AND (waf.message.src_ip.geo.country:\"中国\") |stats count(waf.message.src_ip.geo.province) as count_ by waf.message.src_ip.geo.province"}
{"input": "国内攻击源ip省份分布。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  AND (waf.src.geo.country:\"中国\") |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "入侵轨迹展示。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus AND  waf.log_category:waf_log_websec|stats count() as count_ by waf.src_ip,waf.dst_ip"}
{"input": "来源IP访问请求数。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat NOT waf.src.geo.city:other NOT waf.src.geo.city:private |stats count() as cnt by waf.src.geo.province,waf.src.geo.ip "}
{"input": "国内攻击源ip地理位置分布。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  AND (waf.src.geo.country:\"中国\") |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "事件等级分布。", "instruction": "waf_imperva_数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva |stats count() by waf.level"}
{"input": "waf告警事件总数。", "instruction": "waf_imperva_数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:imperva waf.action:alert|stats count() as cn by waf.action"}
{"input": "梭子鱼_waf_浏览器分布。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |stats count() by waf.user_agent.browser"}
{"input": "梭子鱼_waf_操作系统分布。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda|stats count() by waf.user_agent.os"}
{"input": "waf_yxlink_http请求方法分布。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |stats count() by waf.method"}
{"input": "waf_yxlink_waf拦截情况分布。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |stats count() by waf.action"}
{"input": "waf_yxlink_waf事件等级分布。", "instruction": "WAF_铱迅数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:yxlink |stats count() by waf.event_level"}
{"input": "访问协议分布。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.proto"}
{"input": "防火墙动作分布。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.msg.rule"}
{"input": "was_full_gc总次数。", "instruction": "middle_ibm_was_数据，编写查询语句实现如下分析场景", "output": "appname:gc tag:ibm_was middleware.type:global|stats count()"}
{"input": "was_gc总次数。", "instruction": "middle_ibm_was_数据，编写查询语句实现如下分析场景", "output": "appname:gc tag:ibm_was  |stats count()"}
{"input": "攻击访问城市占比。", "instruction": "ips_topsec_数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:topsec |stats count() by ips.src.geo.city"}
{"input": "目的ip地址top5。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.dst_ip | limit 5"}
{"input": "登陆用户top5。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.login_user | limit 5"}
{"input": "客户源ip地址top5。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.src_ip | limit 5"}
{"input": "waf高危事件数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:waf waf.level:High| stats count() as cnt"}
{"input": "imperva waf高危事件数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:imperva waf.level:High| stats count() as cnt"}
{"input": "waf事件类型分布。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:waf | stats count() as cnt by waf.event_name"}
{"input": "kafka_错误事件数。", "instruction": "kafka_数据，编写查询语句实现如下分析场景", "output": "appname:kafka kafka.event_type:ERROR| stats count() as total"}
{"input": "kafka_事件类型分布。", "instruction": "kafka_数据，编写查询语句实现如下分析场景", "output": "appname:kafka |stats count() by kafka.event_type"}
{"input": "waf_hilston国内攻击来源热力图。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count(waf.src.geo.city) as cnt by waf.src.geo.city"}
{"input": "waf_hillstone世界攻击来源热力图。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count(waf.src.geo.country) as cnt by waf.src.geo.country"}
{"input": "waf_hillstone各类站点分布。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone | stats count() as cnt by waf.website_name"}
{"input": "waf_hillstone危险事件数。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！| stats count() as cnt "}
{"input": "waf_hillstone告警级别分布。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count() as cnt by waf.level"}
{"input": "waf_hilstone被攻击服务器地址top10。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count() as cnt by waf.dst_ip | limit 10"}
{"input": "waf_hillstone漏洞id分布。", "instruction": "WAF_山石数据，编写查询语句实现如下分析场景", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count() as cnt by waf.cve_id"}
{"input": "ac登录top10地址。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei ac.event_name:\"登录事件\"| stats count() as cnt by ac.ac_ip | limit 10"}
{"input": "ac登录名top10。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei ac.event_name:\"登录事件\"| stats count() as cnt by ac.user_name | limit 10"}
{"input": "was_gc总次数。", "instruction": "ibmjdk7_was_gc数据，编写查询语句实现如下分析场景", "output": "appname:gc tag:ibm_was  |stats count() "}
{"input": "was_full_gc总次数。", "instruction": "ibmjdk7_was_gc数据，编写查询语句实现如下分析场景", "output": "appname:gc tag:ibm_was jvm_gc.type:global|stats count() "}
{"input": "waf_venus各类事件占比。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech | stats count() as cnt by waf.event_type"}
{"input": "waf_venus攻击地址国内分布。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| stats count() as cnt by waf.src.geo.province"}
{"input": "waf_venus攻击地址世界分布图。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech \n| stats count() as cnt by waf.src.geo.country"}
{"input": "waf_fortinet_命中的top10_OWASP。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet | stats count() as cnt by waf.kv.owasp_top10\t"}
{"input": "waf_fortinet_http详情。", "instruction": "WAF_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:fortinet | stats count() as cnt by waf.time,waf.kv.http_method,waf.kv.http_url,waf.kv.http_refer"}
{"input": "waf_topsec_事件等级分布。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec| stats count() as cnt by waf.severity"}
{"input": "waf_topsec_攻击事件数。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack| stats count() as cnt "}
{"input": "waf_topsec_事件类型分布。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec | stats count() as cnt by waf.event_type"}
{"input": "waf_topsec_高风险攻击事件数量。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack AND waf.threat_level:High|stats count() as cnt "}
{"input": "waf_topsec_低风险攻击事件数量。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack AND waf.threat_level:Low|stats count() as cnt "}
{"input": "waf_topsec_中风险攻击事件数量。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack AND waf.threat_level:Medium|stats count() as cnt "}
{"input": "waf_topsec_攻击源地址热力图。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.src.geo.city "}
{"input": "waf_topsec_攻击请求方式占比。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.http_method"}
{"input": "waf_topsec_攻击详情。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.http_refer,waf.attack_name,waf.error_msg,waf.message"}
{"input": "waf_topsec_被攻击端口top10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.dst_port"}
{"input": "低风险事件数。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:chatin waf.risk_level:low|stats count() as cnt "}
{"input": "攻击事件数。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:chatin|stats count() as cnt "}
{"input": "响应状态码分布。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) |stats count() as cnt by waf.status_code"}
{"input": "中等风险事件数。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:chatin waf.risk_level:medium|stats count() as cnt "}
{"input": "高风险事件数。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:chatin waf.risk_level:high|stats count() as cnt "}
{"input": "请求方式分布。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) |stats count() as cnt by waf.method"}
{"input": "阻断事件等级分布。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.risk_level"}
{"input": "攻击源地理分布_可下钻。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.src.geo.country,waf.src.geo.province,waf.src.geo.city"}
{"input": "waf事件请求方式分布占比。", "instruction": "WAF_网神数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() by waf.method\t"}
{"input": "收件人top10。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:mail | stats count() as cnt by bb.receiver | limit 10"}
{"input": "阻断事件数。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 waf.is_truncated:truncated  |stats count() as cnt"}
{"input": "触发阻断策略。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 waf.is_truncated:truncated  |stats count() as cnt by waf.policy_name"}
{"input": "没有阻断的攻击事件数。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 NOT waf.is_truncated:truncated NOT waf.attack_type:\"\" |stats count() as cnt "}
{"input": "阻断事件日志量。", "instruction": "WAF_F5数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:f5 waf.is_truncated:truncated  |stats count()"}
{"input": "招聘网站top10。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac (ac.event_type:app_filter OR ac.event_type:other_app) AND ac.kv.app_cat_name:招聘资讯\n | stats count() as cnt by ac.app_name | limit 10"}
{"input": "安恒waf攻击源ip地理位置分布。", "instruction": "WAF_安恒数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  AND (waf.message.src_ip.geo.country:\"中国\") |stats count(waf.message.src_ip.geo.province) as count_ by waf.message.src_ip.geo.province"}
{"input": "浏览器占比。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda |stats count() by waf.user_agent.browser"}
{"input": "操作系统占比。", "instruction": "WAF_梭子鱼数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:barracuda|stats count() by waf.user_agent.os"}
{"input": "中国的攻击来源ip地理位置分布。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  AND (waf.src.geo.country:\"中国\") |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "来源IP访问请求统计，搜索waf.log_category 不是waf_log_wafstat，waf.src.geo.city不是 other也不是 private 的日志，按waf.src.geo.province, waf.src.geo.ip分组统计。。", "instruction": "WAF_绿盟数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:nsfocus NOT waf.log_category:waf_log_wafstat NOT waf.src.geo.city:other NOT waf.src.geo.city:private |stats count() as cnt by waf.src.geo.province,waf.src.geo.ip "}
{"input": "安恒waf攻击源ip地理位置省份分布。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "  (appname:waf tag:dbappsecurity)  AND (waf.message.国家:*) |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "安恒waf攻击源ip地理位置城市分布。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  AND (waf.message.国家:*) |stats count(waf.src.geo.province) as count_ by waf.src.geo.city"}
{"input": "安恒waf来源IP访问请求-判断扫描行为。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "  (appname:waf tag:dbappsecurity) NOT waf.log_category:waf_log_wafstat NOT waf.src.geo.city:other NOT waf.src.geo.city:private |stats count() as cnt by waf.src.geo.province,waf.src_ip "}
{"input": "安恒waf入侵轨迹展示。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*) |stats count() as count_ by waf.src_ip,waf.dst_ip"}
{"input": "页面浏览量PV。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:river |stats count() as count_"}
{"input": "访客分布_地图。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:river NOT waf.src.geo.city:\"*\")  AND (waf.src.geo.country:\"中国\") |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "不同事件类型分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.event) as ct by waf.message.event |limit 20"}
{"input": "告警级别事件分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.threaten) as ct by waf.message.threaten |limit 20"}
{"input": "请求方式占比前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.status) as ct by waf.message.status |limit 20"}
{"input": "触发策略分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.policy) as ct by waf.message.policy |limit 5"}
{"input": "阻断事件的严重级别分布统计，取前 3 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.message.threaten) as ct by waf.message.threaten |limit 3"}
{"input": "阻断ip访问分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.message.src_ip.geo.ip) as ct by waf.message.src_ip.geo.ip |limit 25"}
{"input": " 目的url分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.url) as ct by waf.url |limit 25"}
{"input": "攻击目的url分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.url) as ct by waf.url |limit 25"}
{"input": "攻击SQL注入url分布前 25 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " ((appname:waf tag:dbappsecurity) AND waf.message.event:SQL注入攻击)  |stats count(waf.url) as ct by waf.url |limit 25"}
{"input": "攻击源ip分布前 20 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count() as ct by waf.message.src_ip.geo.ip |limit 20"}
{"input": "攻击源ip分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  |stats count() as ct by waf.src_ip |limit 10"}
{"input": "响应状态码分布前 20 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.status) as ct by waf.message.status |limit 20"}
{"input": "告警级别事件分布前 20 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.threaten) as ct by waf.message.threaten |limit 20"}
{"input": "告警级别事件分布前 5 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.event_name) as ct by waf.event_name |limit 5"}
{"input": "阻断ip访问分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.message.src_ip.geo.ip) as ct by waf.message.src_ip.geo.ip |limit 10"}
{"input": "阻断事件严重级别占比分布。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.message.threaten) as ct by waf.message.threaten "}
{"input": "攻击SQL注入url分布前 10 名。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " ((appname:waf tag:dbappsecurity) AND waf.message.event:SQL注入攻击)  |stats count(waf.url) as ct by waf.url |limit 10"}
{"input": "不同类型访问日志分布前 5 名。", "instruction": "绿盟waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:nsfocus)  |stats count(waf.log_category) as ct by waf.log_category |limit 5"}
{"input": "阻断受攻击URL最多的 10 条。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.url|limit 10"}
{"input": "waf_imperva_攻击路径，按攻击来源和目标的城市、经纬度分组统计。", "instruction": "waf_imperva数据，编写查询语句实现如下分析场景", "output": "appname:waf  tag:imperva | stats count() by waf.src.geo.city ,waf.src.geo.longitude,waf.src.geo.latitude,waf.dst_city ,waf.dst_longitude,waf.dst_latitude"}
{"input": "waf_venus低级安全事件数。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech waf.event_log_level:>6| stats count() as cnt "}
{"input": "waf_venus中级安全事件数。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech waf.event_log_level:<7 AND waf.event_log_level:>4| stats count() as cnt by waf.event_log_level"}
{"input": "waf_venus高级安全事件数。", "instruction": "WAF_启明星辰数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:venustech waf.event_log_level:<5| stats count() as cnt by waf.event_log_level"}
{"input": "低级事件数。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:低级事件 OR waf.kv.Evt_level:20) | stats count() as cnt"}
{"input": "中级事件数。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:中级事件 OR waf.kv.Evt_level:30) | stats count() as cnt"}
{"input": "高级事件数。", "instruction": "WAF_网御星云数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:leadsec (waf.Evt_level:高级事件 OR waf.kv.Evt_level:40) | stats count() as cnt"}
{"input": "搜索 dbappsecurity 标签数据中，waf.event_name不包含状态二字，waf.src.geo.city不为 other 和 private 的日志，做来源城市、经纬度地区统计。。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": " (appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) NOT waf.src.geo.city:other NOT waf.src.geo.city:private | stats count() as cnt by waf.src.geo.city ,waf.src.geo.latitude,waf.src.geo.longitude "}
{"input": "访问失败次数。", "instruction": "瑞数waf数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:river waf.status_code:>399|stats count() as count_"}
{"input": "f5_登录VPN源地址top10。", "instruction": "F5数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.src_ip:* *vpn*  |stats count() as cnt by loadbalancing.src_ip|limit 10"}
{"input": "TOP10源IP攻击情况。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone IPS [[appname:firewall AND tag:hillstone IPS | top 10 firewall.src_ip| fields firewall.src_ip]] |stats count() as total by firewall.src_ip,firewall.dst.geo.ip"}
{"input": "被登录主机_应用top10。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm  (NOT fortress.type:*) AND (login)  |stats count() as cnt by fortress.dst_ip,fortress.server|limit 10"}
{"input": "ips_h3c受攻击地址top10。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:h3c | stats count() as cnt by ips.dst_ip | limit 10"}
{"input": "ips_h3c攻击源地址top10。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:h3c | stats count() as cnt by ips.src_ip | limit 10"}
{"input": "nginx错误日志请求地址top10。", "instruction": "中间件_nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:error |stats count() as cnt by middleware.src_ip | limit 10"}
{"input": "源地址TOP10。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.src_ip|limit 10"}
{"input": "目的端口分布占比。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.dst_port|limit 10"}
{"input": "目的地址TOP10。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.dst_ip|limit 10"}
{"input": "目的city_top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst.geo.city|limit 10"}
{"input": "目的IP_top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst_ip|limit 10"}
{"input": "源IP_top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.src_ip|limit 10"}
{"input": "源city_top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.src.geo.city|limit 10"}
{"input": "源端口top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.src_port|limit 10"}
{"input": "目标端口号top10。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst_port|limit 10"}
{"input": "各模块事件分布top10。", "instruction": "虚拟机_vmware数据，编写查询语句实现如下分析场景", "output": "appname:vmware | stats count() as cnt by vmware.module|limit 10"}
{"input": "登录用户top10。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:vpn |stats count() as cnt by vpn.user | limit 10"}
{"input": "vpn登录失败用户top10。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:vpn vpn.msg:\"Log in unsuccessfully!\" AND vpn.actype:login |stats count() as cnt by vpn.user,vpn.actype|limit 10"}
{"input": "被攻击IP地址top10。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.alarm_ip|limit 10"}
{"input": "ac连接ap的ip地址top10。", "instruction": "huawei_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  |stats count() as cnt by ac.ap_ip |limit 10"}
{"input": "ac登录操作命令top10。", "instruction": "huawei_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei ac.event_name:\"登录事件\" | stats count() as cnt by ac.command | limit 10"}
{"input": "ac连接用户名top10占比分布。", "instruction": "huawei_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  |stats count() as cnt by ac.user_name|limit 10"}
{"input": "huawei_router访问用户top10。", "instruction": "huawei_router数据，编写查询语句实现如下分析场景", "output": "appname:router tag:huawei | stats count() as cnt by router.device_name |limit 10"}
{"input": "audit登录源地址top10。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit)) AND (USER_AUTH OR USER_LOGIN)|stats count() as cnt by linux.src_ip | limit 10"}
{"input": "topsec_攻击类型top10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.attack_name|limit 10"}
{"input": "topsec_攻击源城市TOP10。", "instruction": "WAF_天融信数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.src.geo.city | limit 10"}
{"input": "阻断攻击top10。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.attack_type|limit 10"}
{"input": "攻击事件top10。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.event_name |limit 10"}
{"input": "攻击源地址top10。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.src_ip | limit 10"}
{"input": "url访问top10。", "instruction": "WAF_网神数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() by waf.url|limit 10"}
{"input": "收到攻击地址top10。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.dest_ip|limit 10"}
{"input": "事件来源主机top10。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro|stats count() as cnt by dsm.src_ip|limit 10"}
{"input": "被攻击地址top10。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro \n  |stats count() as cnt by dsm.dst_ip|limit 10"}
{"input": "攻击事件top10。", "instruction": "ids_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:topsec |stats count() by ids.msg|limit 10"}
{"input": "攻击源城市top10。", "instruction": "ids_topsec数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:topsec |stats count() by ids.src.geo.city|limit 10"}
{"input": "发件人top10。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:mail | stats count() as cnt by bb.sender |limit 10"}
{"input": "访问用户top10。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:session|stats count() as cnt by bb.user_name|limit 10"}
{"input": "wait_event_top10。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:wait_event_top10 | stats count() by oracle.EVENT|limit 10"}
{"input": "服务器down原因top10。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.status:down\n|stats count() as ct by a10.message | limit 10"}
{"input": "匹配规则top20。", "instruction": "nas_forescout数据，编写查询语句实现如下分析场景", "output": "appname:nas tag:forescout|stats count() as cnt by nas.kv.Rule |limit 20"}
{"input": "受到威胁top10。数据中可用字段包括：antivirus.action,antivirus.dst,antivirus.virus,antivirus.path,antivirus.result,antivirus.host,antivirus.threat,antivirus.file,antivirus.domain,antivirus.os。请按实际需要选用字段。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* | stats count() as cnt by antivirus.threat_name | limit 10"}
{"input": "感染对象top10。数据中可用字段有：antivirus.action,antivirus.dst,antivirus.virus,antivirus.path,antivirus.result,antivirus.host,antivirus.threat,antivirus.file,antivirus.domain,antivirus.os。请按实际需要选用字段。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* | stats count() as cnt by antivirus.file | limit 10"}
{"input": "攻击事件目的地址top10。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   |stats count() as cnt by firewall.dst_ip|limit 10"}
{"input": "攻击事件源地址top10。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*) |stats count() as cnt by firewall.src_ip|limit 10"}
{"input": "攻击事件用户top10。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei)(firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   |stats count() as cnt by firewall.user|limit 10"}
{"input": "coremail_发件人top10。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent | stats count() as cnt by mail.from|limit 10"}
{"input": "coremail_扫描到的源地址top10。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent | stats count() as cnt by mail.src_ip|limit 10"}
{"input": "kingdee源isp统计top10。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": " appnamekingdee tag:access |  stats count() by middleware.src.geo.isp | limit 10"}
{"input": "kingdee错误日志请求地址top10。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.src_ip | limit 10"}
{"input": "执行sql频率top10源IP。", "instruction": "数据库_达梦数据，编写查询语句实现如下分析场景", "output": "appname:dm tag:sql | stats count() as cnt by database.src_ip|limit 10"}
{"input": "执行sql频率top10用户。", "instruction": "数据库_达梦数据，编写查询语句实现如下分析场景", "output": "appname:dm tag:sql | stats count() as cnt by database.user|limit 10"}
{"input": "阻断源地址TOP20。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.src_ip|limit 20"}
{"input": "攻击源地址TOP10。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.src_ip|limit 10"}
{"input": "受攻击地址TOP10。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.dst_ip|limit 10"}
{"input": "受攻击地址TOP30。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.dst_ip|limit 30"}
{"input": "收到攻击url_TOP10。", "instruction": "WAF_长亭数据，编写查询语句实现如下分析场景", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.url|limit 10"}
{"input": "waf事件访问源地址TOP10。", "instruction": "WAF_网神数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() by waf.src_ip | limit 10"}
{"input": "waf访问目的地址TOP10。", "instruction": "WAF_网神数据，编写查询语句实现如下分析场景", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() by waf.dst_ip | limit 10"}
{"input": "丢弃信息或包_源ip目的ip_top10。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell \"packet dropped\" \n|stats count() as count_ by firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "阻断信息或包_源ip目的ip_top10。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell \"blocked\" \n|stats count() as count_ by firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "疑似端口扫描_源ip目的ip_top10。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell \"scan detected\"  \n|stats count() as count_ by firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "防火墙处理结果_源ip目的ip_top10。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell\n|stats count() as count_1 by firewall.msg,firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_1|limit 10"}
{"input": "防火墙处理结果_源ip目的ip_查询_top20。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dell|stats count() as count_1 by firewall.msg,firewall.dst.geo.ip,firewall.src.geo.ip|sort by count_1\n| limit 20"}
{"input": "checkpoint_源ip_top10。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() as count_1 by firewall.src_ip\t|sort by count_1|limit 10"}
{"input": "checkpoint_目的ip_top10。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() as count_1 by firewall.dst_ip\t|sort by count_1|limit 10"}
{"input": "应用名称_top10。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.app_name|sort by count_ |limit 10"}
{"input": "目的ip访问_top10。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.dst.geo.ip|sort by count_|limit 10"}
{"input": "源ip请求_top10。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|stats count() as count_ by firewall.src.geo.ip|sort by count_|limit 10"}
{"input": "接收过滤模式失败原因_top10。", "instruction": "梭子鱼邮件网关日志数据，编写查询语句实现如下分析场景", "output": "appname:security_gateway tag:barracuda security_gateway.event_name:RECV| stats count() as count_1 by  security_gateway.message,security_gateway.Meaning|sort by count_1|limit 10"}
{"input": "同一时间内发出包数top5。", "instruction": "cnaps数据，编写查询语句实现如下分析场景", "output": "appname:cnaps | stats count() by agent_send_timestamp |limit 5"}
{"input": "错误信息占比_top10。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun|stats count() as count_1 by middleware.Error_info|sort by count_1 |limit 10"}
{"input": "系统错误信息占比_top10。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun |stats count() as count_1 by middleware.System_errinfo|sort by count_1|limit 10"}
{"input": "源ip源端口_top10。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda | stats count() as count_1 by tda.src_ip,tda.src_port| sort by count_1|limit 10"}
{"input": "目的ip目的端口_top10。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda | stats count() as count_1 by tda.dst_ip,tda.dst_port| sort by count_1|limit 10"}
{"input": "丢弃事件msg_top10。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"dropped\" |stats count() as count_1 by firewall.msg|sort by count_1|limit 10"}
{"input": "端口扫描协议占比_top10。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"scan detected\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "端口扫描事件msg_top10。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"scan detected\" |stats count() as count_1 by firewall.msg|sort by count_1|limit 10"}
{"input": "拒绝事件msg_top10。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"denied\"  |stats count() as count_1 by firewall.msg|sort by count_1|limit 10"}
{"input": "拒绝协议占比_top10。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall  \"denied\" |stats count() as count_1 by firewall.proto|sort by count_1|limit 10"}
{"input": "", "instruction": "我想要知道在某一天绿盟 WAF的访问量最高的前二十个目标 IP 是哪些？", "output": "( appname:waf tag:nsfocus  ) AND ( waf.log_category:waf_log_websec) | stats count() by waf.dst_ip  |limit 20"}
{"input": "", "instruction": "我想问的是公司的深信服VPN登录失败的人员有哪些？最多显示前十个。", "output": "appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| top 10 vpn.login_user"}
{"input": "", "instruction": "我想问的是 深信服 VPN 登录来自哪些ISP? 最多显示十条记录", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.src.geo.isp"}
{"input": "", "instruction": "我想知道最近三天有多少人使用 SangFor VPNs 进行登录或者排名第十的情况。", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.result"}
{"input": "", "instruction": "我想问的是有没有人在使用华为的交换机登录失败啊，或者 SNMP、SSH 都失败了吗？", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.module"}
{"input": "", "instruction": "我想问有关华为交换机登录失败的设备 IP 统计，这些设备位于以下IP地址范围之一：192.168.3.11/24、172.16.58.3/24、172.16.17.32/24、172.16.58.3/24和192.168.127.12/24。", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.kvmsg.IpAddress"}
{"input": "", "instruction": "我想要知道 Venus Tech 发表的安全漏洞排名最高的前十个 IP 是哪些。", "output": "appname:ips AND tag:venustech | top 10 ips.security_type"}
{"input": "", "instruction": "我想要知道 Venus Tech 报告的前三十名 IP 是什么。", "output": "appname:ips AND tag:venustech | top 30 ips.src_ip"}
{"input": "", "instruction": "我想问的是最近三天的 SANGFOR VPN 用户登录地区分布情况，按省份排序，并显示前十个。", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.province"}
{"input": "", "instruction": "我想问的是最近三天的 SANGFOR VPNs 在哪些地区被用户登录过？可以按登录时间排序，前十名", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.src.geo.isp"}
{"input": "", "instruction": "我想问的是：有哪些用户使用了 Array VPN 服务？", "output": "appname:vpn tag:array|top 10 vpn.kv.user"}
{"input": "", "instruction": "我想问的是有哪些用户在使用 Venus Tech 和 Top 10 源 IP 访问过我们的网站，并按访问次数排序。", "output": "appname:ids tag:venustech|top 10 ids.src_ip |sort by count"}
{"input": "", "instruction": "我想问的是的网御星云防火墙日志中，最常出现的协议有哪五个？", "output": "appname:firewall tag:leadsec |top 5 firewall.proto"}
{"input": "", "instruction": "我想问的是飞塔 IPS 有没有发现一些被入侵的IP地址，并不是所有的IP都要查，只需要前十个就行了。", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:ips| top 10 firewall.dst_ip"}
{"input": "", "instruction": "我想知道我公司的思科 VPN 用户登录排名前十的用户有哪些。", "output": "appname:vpn tag:cisco vpn.actype:login|top 10 vpn.result"}
{"input": "", "instruction": "我想问的是，有没有人访问过live.rizhiyi.com呢？如果有的话，那他们大概从哪里连到我们的CDN服务器？", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 100 cdn.remote_addr"}
{"input": "", "instruction": "我想问的是最近的 CDN 访问记录中有没有出现过 appname 为 cdn_log, remote_addr 为 120.33.68.14 的请求吗?", "output": "appname:cdn_log AND cdn.remote_addr:120.33.68.14|top 3 cdn.request_url"}
{"input": "", "instruction": "我想问的是最近三天 VPN 登录的 IP 是哪些？可以按登录时间排序，前十个 IP 地址吗？谢谢！", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.ip"}
{"input": "", "instruction": "告诉我公司的 dptech 防火墙前十个最常见的攻击源IP地址。", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.src_ip"}
{"input": "", "instruction": "我想问的是发生的攻击事件中，有哪些 ISP 在受到影响之列？", "output": "(* AND appname:firewall) | top 10 firewall.src.geo.isp"}
{"input": "", "instruction": "我想问的是发生的攻击有哪些，要求返回前十个来源地址城市。", "output": "(* AND appname:firewall) | top 10 firewall.src.geo.city"}
{"input": "", "instruction": "我想从所有IPS事件中筛选出属于 hillstone 应用的记录，并按请求量排名第 1-10 个目标 IP 地址。", "output": "(* IPS) AND appname:firewall tag:hillstone | top 10 firewall.dst.geo.ip"}
{"input": "", "instruction": "我想询问以下信息：- 名为“Fortress”的应用发送了至少十条包含“pldsec”标签且源 IP 为任意值的消息，只留下前 10 条。", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.msg.srvaddr"}
{"input": "", "instruction": "我想问的是有没有人使用过 SANGFOR VPN 登录的，并且可以提供源 IP 地址信息。", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.ip"}
{"input": "", "instruction": "我想要知道在绿盟防 D 设备抓到的大流量攻击中，攻击方最常用的IP地址是哪些。", "output": "appname:ddos tag:nsfocus ddos.src_ip:*| top 10 ddos.src_ip"}
{"input": "", "instruction": "我想问的是的juniper防火墙审计报告中，最常出现的被攻击 IP有哪些？可以按数量排序。", "output": "appname:firewall AND tag:juniper|top 10 firewall.dst.geo.ip"}
{"input": "", "instruction": "我想问的是，有没有人在访问网站时被铱迅 WAF 拦截了呢？如果有的话，那他们的 IP 是多少？", "output": "appname:waf tag:yxlink |top 10 waf.src_ip"}
{"input": "", "instruction": "我想问的是“fortinet”这个IPS的拦截的流量里，排名前十个的访问所在地的城市信息", "output": "appname:ips tag:fortinet | top 10 ips.dst.geo.city"}
{"input": "", "instruction": "我想问的是有哪些个用户被 websense 的 DLP 抓住了。", "output": "appname:dlp tag:websense|top 10 dlp.src_user"}
{"input": "", "instruction": "我想知道websense DLP日志里的前十大类型有哪些？请帮我把这些攻击类型列举出来。", "output": "appname:dlp tag:websense|top 10 dlp.category"}
{"input": "", "instruction": "我想问的是哪些人在使用 VMware，有哪些操作比较多的用户呢？可以给我列出前十名吗？", "output": "appname:vmware AND tag:*  AND ('vmware.msg.user':*)|top 10 vmware.msg.user"}
{"input": "", "instruction": "我想问的是，有没有发生过大规模的网络攻击或者黑客行为？如果360 网神防火墙有记录的话，能否告诉我一些具体的来源 IP信息？", "output": "appname:firewall tag:360wangshen login fail| top 10  firewall.src_ip"}
{"input": "", "instruction": "我想问的是有没有出现过类似于 SonicWall 这类的防火墙的漏洞或者攻击事件吗？", "output": "(* AND appname:firewall) AND tag:sonicwall |top 10 firewall.dst_ip"}
{"input": "", "instruction": "我想问sonicwall 防火墙日志里是否发生过一些网络安全事件，比如DDOS攻击、SQL注入等，能否帮忙列出前十大事件的信息吗？", "output": "(* AND appname:firewall) AND tag:sonicwall  | top 10 firewall.msg.note"}
{"input": "", "instruction": "帮我查找haproxy中间件的访问量最多的前 20 个 IP 地址的信息。", "output": "appname:haproxy|top 20 middleware.srcip"}
{"input": "", "instruction": "我想知道 H3C 交换机上来源 IP 是哪些，并按数量排序。", "output": "appname:switch  tag:h3c |top 10 switch.src_ip"}
{"input": "", "instruction": "我想问的是奇安信 AC 设备认证日志里的前 10 类操作是什么？", "output": "appname:ac tag:qianxin ac.log_type:auth|top 10 ac.action"}
{"input": "", "instruction": "我想要知道有哪些用户使用了“奇安信”这个应用，并进行了认证的操作，但是没有进行任何数据更新的操作，并且只显示前十个IP地址的信息。", "output": "appname:ac tag:qianxin ac.log_type:auth NOT ac.action:\"更新\"|top 10 ac.src_ip"}
{"input": "", "instruction": "我想问的是，公司有没有人登录奇安信 AC 然后又下线了吗？如果有的话，那他们的 IP 是多少呢？", "output": "appname:ac tag:qianxin ac.log_type:auth ac.action:\"下线\" | top 10 ac.src_ip"}
{"input": "", "instruction": "我想问的是公司的哪些服务器IP地址对华为防火墙发起了大量访问。", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.src_ip"}
{"input": "", "instruction": "我想问的是有没有发现和华为防火墙相关的网络异常或者攻击行为？如果可以的话，能否给出具体的攻击目标地址？", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.dst_ip"}
{"input": "", "instruction": "我想询问的是以下内容：华为防火墙端口排名前五的访问记录。", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.src_port"}
{"input": "", "instruction": "我想问的是华为防火墙日志里发生的一些网络安全事件，比如DDOS攻击、SQL注入等，你能帮我列出目标端口的统计么？", "output": "(* AND appname:firewall) AND tag:huawei | top 5 firewall.dst_port"}
{"input": "", "instruction": "我想要知道过去一天内有多少条关于 topsec firewall 级别低于 3 级的严重错误或警告消息。请帮我把这些数据汇总并返回数量。", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:<3 |stats count() as cnt"}
{"input": "", "instruction": "我想要知道过去一天中有多少条具有高于等于四级的系统消息记录在 firewall 和 topsec 标签下。请帮我完成这次查询。", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:>4 |stats count() as cnt"}
{"input": "", "instruction": "我想问的是，Imperva WAF的系统有多少次发出警报或者统计信息？", "output": "appname:waf AND tag:imperva waf.action:alert|stats count() as cn by waf.action"}
{"input": "", "instruction": "我想问的是，有多少个攻击事件发生在不同端口上，被天融信的 WAF 记录到日志里了？", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.dst_port"}
{"input": "", "instruction": "我想问的是，有多少用户使用了哪些浏览器访问了 WAF 服务，并且带上了 barracuda 标签。", "output": "appname:waf tag:barracuda |stats count() by waf.user_agent.browser"}
{"input": "", "instruction": "我想问的是，有多少用户使用了哪些操作系统访问了我们的barracuda waf。", "output": "appname:waf tag:barracuda|stats count() by waf.user_agent.os"}
{"input": "", "instruction": "我想问的是，在过去一天内，有多少个访问了包含安恒标签的网站，按城市分组统计用户的访问量", "output": " (appname:waf tag:dbappsecurity)  AND (waf.message.国家:*) |stats count(waf.src.geo.province) as count_ by waf.src.geo.city"}
{"input": "", "instruction": "我想问有没有相关的WAF防火墙事件（tag：dbappsecurity），并且这些防火墙事件中是否存在包含“攻击”这个词（waf.event_name:*攻击*）。此外，还要求统计出这些攻击事件发生时的源IP和目的IP以及数量（|stats count() as count_ by waf.src_ip,waf.dst_ip）。", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*) |stats count() as count_ by waf.src_ip,waf.dst_ip"}
{"input": "", "instruction": "我想问的是，有多少次攻击被安恒 WAF拦截，请返回按状态分组统计的情况", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.status) as ct by waf.message.status |limit 20"}
{"input": "", "instruction": "我想问的是，从哪些国家的用户访问了 Imperva WAF 服务，并且他们访问的目标地点又是在哪里呢？", "output": "appname:waf  tag:imperva | stats count() by waf.src.geo.city,waf.src.geo.longitude,waf.src.geo.latitude,waf.dst_city,waf.dst_longitude,waf.dst_latitude"}
{"input": "", "instruction": "我想问的是，有没有发现网御星云WAF的高级事件(对应级别是 40)？如果有的话，数量是多少？", "output": "appname:waf tag:leadsec (waf.Evt_level:高级事件 OR waf.kv.Evt_level:40) | stats count() as cnt"}
{"input": "", "instruction": "我想问的是长亭 WAF 记录有多少日志？并且显示他们的 IP 地址和访问次数排名从高到低。", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.src_ip|limit 10"}
{"input": "", "instruction": "我想问的是，有多少次访问了长亭 WAF，并且按 URL 统计？", "output": "(appname:waf AND tag:chatin) waf.action:* |stats count() as cnt by waf.url|limit 10"}
{"input": "", "instruction": "我想问有关某款应用的登录失败次数最多的端口号是哪些吗？这款应用的名称为“aix”。在我的数据库中，关于这个应用的登录失败次数最多的前二十个端口分别是：53 (DNS)80 (HTTP)443 (HTTPS)161 (SNMP)22 (SSH)23 (TELNET)3306 (MySQL)3389 (Remote Desktop)5432 (PostgreSQL)5900 (VNC)7777 (TeamViewer)8080 (HTTP)8443 (HTTPS)10000 (VNC)111 (RPCBIND/PORTMAP)123 (NTP)这些结果显示出该应用在最近一段时间内尝试连接到Internet上的主机时，大部分失败的原因都是由于密码错误导致的。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 20 "}
{"input": "", "instruction": "我想要知道在 appname 为 \"waf\" 和 tag 为 \"nsfocus\" 的请求中，各个事件级别的数量分布情况。", "output": "(appname:waf tag:nsfocus)  |stats count() by waf.event_level  |limit 5"}
{"input": "", "instruction": "我在询问绿盟的网络安全防火墙（WAF）访问日志中源 IP地址的统计信息。", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  |stats count() by waf.src_ip  |limit 20"}
{"input": "", "instruction": "我想问有关绿盟 WAF（Web Application Firewall）产品的使用情况和访问统计数据。", "output": " (appname:waf tag:nsfocus)  |stats count() by waf.log_category  |limit 10"}
{"input": "", "instruction": "我在寻找关于某些应用和名称中包含“waf”或“nsfocus”的网站的访问统计信息。", "output": "(( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec))  |stats count() by waf.uri  |limit 10"}
{"input": "", "instruction": "我想问的是：安恒 waf 阻断请求的源 IP 来自哪里？你能再把这个统计结果以表格的形式展示给我吗？", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count() by waf.message.src_ip.geo.ip  |limit 10"}
{"input": "", "instruction": "帮我编写日志易的查询语句。安恒 WAF进行安全审计时是否发现存在SQL注入漏洞？希望通过日志易可以找到具体的请求链接和数量。", "output": " ((appname:waf tag:dbappsecurity) AND waf.message.event:SQL注入攻击)  |stats count() by waf.url  |limit 10"}
{"input": "", "instruction": "寻找绿盟应用防火墙（WAF）的访问日志中的所有 IP 地址以及它们发出的请求数目。", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  |stats count() by waf.src_ip "}
{"input": "", "instruction": "寻找关于安恒Web应用防火墙（WAF）事件：`appname:waf tag:dbappsecurity`。此外，我还要求结果中的所有记录都必须与关键词“waf.event_name”匹配，并且以通配符“*”开头，表示任何长度的字符串都是有效的。最后，我要求将结果限制为前十个结果，并按“waf.url”进行分组并计算数量。", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  |stats count() by waf.url  |limit 10"}
{"input": "", "instruction": "查询涉及到几个关键词：`应用名称为“WAF”并且标记为“DBAppSecurity”`、“WAF事件”以及“Dst IP”。在这个搜索中，首先会查找包含这些关键字的文档；然后，它将统计每个 WAF 目标 IP 在所有相关事件中的数量并返回前 10 个最高的结果。", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  | stats count() by waf.dst_ip  |limit 10"}
{"input": "", "instruction": "根据应用名称为 `waf`、标签为 `dbappsecurity` 的记录 WAF 防火墙的事件（即告警信息），并统计出其中包含关键字“攻击”且操作为“阻断”的次数最多的前十条记录。", "output": "( appname:waf tag:dbappsecurity )AND (waf.event_name:*攻击*) AND ( waf.action:Block)|stats count() by waf.event_name  |limit 10"}
{"input": "", "instruction": "我想询问以下内容：- 查询 river waf 应用的访问量和每个运营商的用户数- 对结果进行排序并显示前 10 个ISP", "output": " appname:waf tag:river  |stats count() by waf.src.geo.isp  |limit 10"}
{"input": "", "instruction": "我想问有关某款网络安全产品的访问量和用户操作系统分布情况？这款产品的名称应该叫做 WAF（Web Application Firewall），并且使用了“river”这个标签进行标记。", "output": "(appname:waf tag:river)   |stats count() by waf.ua_os  |limit 10"}
{"input": "", "instruction": "我想问防火墙Web应用防火墙（WAF）流量中tag：river的信息，并要求提供前十名访问设备类型。", "output": "(appname:waf tag:river)  |stats count() by waf.ua_device  |limit 10"}
{"input": "", "instruction": "我想要知道在F5 WAF的应用中，最常出现的源IP地址是哪些，并只显示前十个。请帮我完成这个任务。", "output": "appname:waf tag:f5 waf.is_truncated:truncated  |stats count() as cnt by waf.src_ip | sort by cnt |limit 10"}
{"input": "", "instruction": "我想问的是，你们公司的CDN节点分别在哪里？你可以把这些城市信息列举出来吗？", "output": "appname:cdn tag:huawei AND (cdn.domain:vod.hcs.yottabyte.cn OR cdn.domain:hlsspvod.rizhiyi.com OR  cdn.domain:sp.vod.rizhiyi.com OR cdn.domain:hlszbvod.rizhiyi.com)  |  top 10 cdn.clientip.geo.city"}
{"input": "", "instruction": "我想问的是，有多少个用户的 IMC 级别为“错误”或者事件等级为三的 IP？", "output": "appname:imc  AND (imc.level:\"错误\" OR imc.event_level:3) | top 10 imc.src_ip"}
{"input": "", "instruction": "我想要知道发送邮件的IP地址排名前十的10个", "output": "(appname:core )  | top 10 mail.src_ip"}
{"input": "", "instruction": "华为交换机数据，编写查询语句实现如下分析场景：登录成功方式TOP10分布", "output": "appname:switch tag:huawei  (switch.brief:LOGIN_OK OR \"succeeded in logging in\" OR switch.brief:LOGINOK) |top 10 switch.module"}
{"input": "", "instruction": "帮我创建一段用于查询 Huawei 交换机登录失败的语句。", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.module"}
{"input": "", "instruction": "华为交换机数据，编写查询语句实现如下分析场景：登录失败方式top10分布", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.module"}
{"input": "", "instruction": "在Apache服务器上，前十大访问量的来源 referer 页面统计。", "output": "appname:apache | top 10 apache.referer"}
{"input": "", "instruction": "我想要知道系统中删除操作最多的用户是谁。你能告诉我吗？", "output": "appname:linux_auditd  eventtype:DELETE  | top 1 UserName"}
{"input": "", "instruction": "我想问以下信息：从日志中筛选出`appname=vpn`，并且包含`tag=sangfor`和`vpn.actype=access*`的记录，并按`vpn.dst_ip`字段排序，取前十条结果。", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "", "instruction": "我想跟踪深信服 VPN 的用户登录信息，并返回前十个登录用户的信息。", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.login_user"}
{"input": "", "instruction": "帮我设计一个以 Sangfor VPNs 为主题的 Top 10 活跃端口的 SPL 查询语句。", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_port"}
{"input": "", "instruction": "我想问有关 SANGFOR VPN 服务的登录的前十个省份用户数量的信息。", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.src.geo.province"}
{"input": "", "instruction": "帮我进行系统异常排查，找出在 Huawei 交换机中，最常出现的前 10 个严重级别小于等于 4 的模块名称和数量。", "output": "appname:switch tag:huawei switch.severity:<4 | top 10 switch.module"}
{"input": "", "instruction": "我想要查一下交换机日志里十个使用量最高的应用是哪些，你能帮我把这些信息打印出来吗？", "output": "appname:switch |top 10 switch.module"}
{"input": "", "instruction": "我想知道最近十条关于“switch”应用的主机名排行榜。", "output": "appname:switch | top 10 switch.hostname"}
{"input": "", "instruction": "从应用名称为“防火墙”且标记包含“VenusTech”的流量中选择前十个源 IP地址。", "output": "appname:firewall AND tag:venustech | top 10 firewall.src_ip"}
{"input": "", "instruction": "我想生成以下内容：这条日志查询语句中包含两个条件：`appname:firewall`和`tag:venustech`，并且使用竖线（|）将它们连接起来，最后再通过`top 10`指令获取前十个结果。", "output": "appname:firewall AND tag:venustech | top 10 firewall.proto"}
{"input": "", "instruction": "我想问的是启明星辰防火墙日志里最近发生的安全事件有哪些？可以列举前三条攻击目标地址。", "output": "appname:firewall AND tag:venustech | top 3 firewall.dst_ip"}
{"input": "", "instruction": "我想问的是，最近公司的启明防火墙有哪些日志，返回前十个最常见的来源端口。", "output": "appname:firewall AND tag:venustech | top 10 firewall.src_port"}
{"input": "", "instruction": "我想问的是，在 appname 为 \"exchange\"、tag 为 \"front\" 的项目中，最热门的前 5 个项目是哪些？", "output": "appname:exchange tag:front  |top 5 exchange.url"}
{"input": "", "instruction": "我想问的是，在 appname 为 \"exchange\"、tag 为 \"front\" 的项目中，按访问量从大到小排序的前五个 URL 是哪些？", "output": "appname:exchange tag:front  |top 5 exchange.url"}
{"input": "", "instruction": "我想问你有关应用名为“exchange”并且标签包含“front”的前五个用户浏览器的信息。", "output": "appname:exchange tag:front  |top 5 exchange.ua.browser"}
{"input": "", "instruction": "帮我进行网络安全审计，意思是从日志易中检索出所有使用Fortress应用、标记为“PLDSec”且源IP地址不为空的记录，并按访问次数排序，返回前十个结果。", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.src_ip"}
{"input": "", "instruction": "我想问有关 Fortress 应用的一些信息，包括源 IP、标记为 pldsec 的记录以及前十名用户等等。", "output": "( appname:fortress tag:pldsec  fortress.src_ip:* AND xwin)|top 10 fortress.user"}
{"input": "", "instruction": "我想问的是启明星辰 IPS 里前十个事件类型是哪些呢？你可以帮我把这些信息找出来吗？", "output": "appname:ips AND tag:venustech | top 10 ips.log_type"}
{"input": "", "instruction": "我想问应用名称为“ips”且标记包含“venustech”的日志，返回前 10 个安全类型。", "output": "appname:ips AND tag:venustech | top 10 ips.security_type"}
{"input": "", "instruction": "从包含`appname:ips`和`tag:venustech`的日志中统计前十个操作。", "output": "appname:ips AND tag:venustech | top 10 ips.action"}
{"input": "", "instruction": "我想问有关 SANGFOR VPNs 的登录结果排名的情况。", "output": "appname:vpn tag:sangfor vpn.actype:login|top 10 vpn.result"}
{"input": "", "instruction": "我想问的是，最近有人使用 Sangfor VPN 登录成功并进行了操作呢？前十名用户的姓名告诉我？", "output": "appname:vpn tag:sangfor vpn.actype:login |top 10 vpn.login_user"}
{"input": "", "instruction": "帮我寻找 VPN 登录失败的用户列表，最多显示 10 个结果。", "output": "appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| top 10 vpn.login_user"}
{"input": "", "instruction": "我想寻找与SANGFOR VPN有关的访问记录，并且只显示前十个目的地端口。", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_port"}
{"input": "", "instruction": "我想询问的是深信服 VPN 服务的访问记录中目标 IP 地址排名前十的情况。", "output": "appname:vpn tag:sangfor vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "", "instruction": "我想问的是：在 appname 为 \"vpn\"、tag 中包含字符串 \"array\" 的数据中，前 10 个 vpn.kv.pri 字段的值是多少？", "output": "appname:vpn tag:array|top 10 vpn.kv.pri"}
{"input": "", "instruction": "我想知道Array VPN应用的严重程度排名。请帮我把这些信息打印出来。", "output": "appname:vpn tag:array|top 10 vpn.severity"}
{"input": "", "instruction": "我想知道最近十条关于 Array VPN 的排名最高的目的 IP 地址的信息。。", "output": "appname:vpn tag:array|top 10 vpn.dst_ip"}
{"input": "", "instruction": "我想知道最近十个使用 Array VPN 访问来源 IP 是哪些。请帮我把这些信息找出来并告诉我。", "output": "appname:vpn tag:array|top 10 vpn.src_ip"}
{"input": "", "instruction": "我想知道最近array vpn 十大流量最高的端口有哪些？请告诉我详细的信息。", "output": "appname:vpn tag:array|top 10 vpn.kv.dport"}
{"input": "", "instruction": "我想问的是启明星辰 IDS 的漏洞扫描日志中，量最大的十个源 IP地址是哪些？你能帮我把它列出来吗？", "output": "appname:ids tag:venustech|top 10 ids.src_ip"}
{"input": "", "instruction": "从`appname:ids`标签中搜索`venustech`的记录并返回前十个字段为`ids.dst_ip`的值。", "output": "appname:ids tag:venustech |top 10 ids.dst_ip "}
{"input": "", "instruction": "我想问的是，在这个时间段内，启明星辰的IDS 触发了哪些错误事件呢？给出前十名的事件名称", "output": "appname:ids tag:venustech |top 10 ids.event_name"}
{"input": "", "instruction": "帮我设计一个 Cisco VPN 用户登录失败的 Top 10 IP 查询语句，排除掉 authentication 的相关信息。", "output": "appname:vpn tag:cisco NOT \"authentication\"|top 10 vpn.dst_ip"}
{"input": "", "instruction": "我想跟踪 Cisco VPN 服务器端口被扫描到的情况，但排除有关身份验证的信息。", "output": "appname:vpn tag:cisco NOT \"authentication\" |top 10 vpn.dst_port"}
{"input": "", "instruction": "我想询问关于 Symantec AntiVirus Gateway 的最新 Top 10 IP 活跃用户的信息。", "output": "appname:antivirus_gateway tag:symantec  SID| top 10 antivirus_gateway.remoteip"}
{"input": "", "instruction": "我想知道量最大的五个网御星云防火墙日志记录的目的IP地址。请帮我把这些信息打印出来。", "output": "appname:firewall tag:leadsec |top 5 firewall.dst_ip"}
{"input": "", "instruction": "我想知道网御星云防火墙的前五名来源 IP。请告诉我这些信息。", "output": "appname:firewall tag:leadsec |top 5 firewall.src_port"}
{"input": "", "instruction": "我正在寻找topsec所有登录失败的记录以及来源 IP 的情况。", "output": "appname:firewall AND tag:topsec (AUTH AND \"user login faild,name or password error\") OR (firewall.msg.method:* AND firewall.msg.result:失败)|top 10 firewall.src_ip"}
{"input": "", "instruction": "我想要知道数据库 DB2 中最近的五条记录的详细信息，包括应用名称、级别等。请告诉我如何实现这个功能。", "output": "appname:db2  |top 5 db2.level"}
{"input": "", "instruction": "我想要知道数据库 DB2 中最近的五条记录的等级信息。请告诉我如何获取这些信息。", "output": "appname:db2  |top 5 db2.level"}
{"input": "", "instruction": "我想要知道数据库 DB2 中最近最常用的五个事务 ID（TID）。。", "output": "appname:db2  |top 5 db2.tid"}
{"input": "", "instruction": "我想问的是最近飞塔防火墙审计有多少日志？如果可以的话，能否按类型统计一下？", "output": "appname:firewall tag:fortinet |top 10 firewall.type"}
{"input": "", "instruction": "我想问的是 firewall 这个应用的流量统计信息，并且只显示前十种类型的流量。", "output": "appname:firewall  tag:fortinet AND firewall.type:traffic| top 10 firewall.subtype"}
{"input": "", "instruction": "我想问的是公司的飞塔防火墙有哪些异常事件和类型呢？并按发生次数从高到低排列前十个。", "output": "appname:firewall  tag:fortinet AND firewall.type:event| top 10 firewall.subtype"}
{"input": "", "instruction": "我想在“firewall”应用中使用“fortinet”标记的日志里统计攻击名称并返回前十个结果。", "output": "appname:firewall tag:fortinet | top 10 firewall.attack"}
{"input": "", "instruction": "我想询问的是关于某款防火墙的一些信息，具体来说就是：- 使用该产品的应用名称为“firewall”并且标记包含“fortinet”。- “firewall.subtype”字段的值中包含“ips”，并按“firewall.src_ip”进行排序，取前十个结果。", "output": "* AND appname:firewall tag:fortinet  AND firewall.subtype:ips| top 10 firewall.src_ip"}
{"input": "", "instruction": "我想问的是最近几个月内，公司的飞塔防火墙有哪些应用控制记录？并且这些行为中最常见的IP地址是什么？", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl|top 10  firewall.src_ip"}
{"input": "", "instruction": "我想问的是最近有没有发现使用 fortinet 产品的网站被黑客攻击过吗？如果有的话，那他们的源 IP 是哪些呢？", "output": "appname:waf tag:fortinet  |top 10 waf.src_ip"}
{"input": "", "instruction": "我想知道stb应用有多少用户报告事件，并且排名前二十的都是什么类型的。", "output": "appname:stb tag:userreport|top 20 stb.reporttype_dec"}
{"input": "", "instruction": "我想知道十条“appname:router”的路由模块，最常用的前五个路由模块是哪些？。", "output": "appname:router |top 10 router.module"}
{"input": "", "instruction": "我想知道十条“appname:router”的路由主机，并按访问次数降序排列。", "output": "appname:router |top 10 router.hostname"}
{"input": "", "instruction": "我想知道最近十条关于“应用名称为 'router' 的错误或警告的Top 10严重程度”的信息。", "output": "appname:router | top 10 router.severity"}
{"input": "", "instruction": "我想要知道最近十条关于“应用名称为 'router' 的 top 10 水果类别的路由器”的信息。", "output": "appname:router |top 10 router.mnemonic"}
{"input": "", "instruction": "我想问路由器的访问量排名，并按 hostname 分组。", "output": "appname:router | top 10 router.hostname"}
{"input": "", "instruction": "我想要知道最近十大热门的路由器模块，可以这样做：1. 使用SPL查询语言搜索 `appname:router` 这个关键词，并按访问次数排序；2. 从结果中选出前 10 个最热门的模块（即 router.module）。", "output": "appname:router | top 10 router.module"}
{"input": "", "instruction": "我想知道最近发生的事件数量最多的前十个路由器severity。", "output": "appname:router | top 10 router.severity"}
{"input": "", "instruction": "我想寻找Cisco VPN应用的登录用户列表，并且只显示前十个结果。", "output": "appname:vpn tag:cisco vpn.actype:login |top 10 vpn.login_user"}
{"input": "", "instruction": "我想问的是 VPN 访问行为中使用 Cisco 产品的目标 IP 地址数量排名前十的情况。请帮忙修改一下查询语句。", "output": "appname:vpn tag:cisco vpn.actype:access* |top 10 vpn.dst_ip"}
{"input": "", "instruction": "根据以下直播域名计算 CDN 日志中直播业务的访客城市 top10 排名：live1.video.com, live2.video.com, live3.video.com", "output": "appname:cdn AND (cdn.http_status:404 OR cdn.http_status:5?? OR cdn.http_status:403 OR cdn.http_status:200 OR cdn.http_status:206 )  AND (cdn.domain:live1.video.com OR cdn.domain:live2.video.com OR cdn.domain:live3.video.com) | top 10 cdn.geo.city"}
{"input": "", "instruction": "我想问的是，从哪些CDN节点下载的流量中，出现了HTTP状态码为404、5xx或403或200或206错误的请求数最多的前十个城市是什么呢？", "output": "appname:cdn AND (cdn.http_status:404 OR cdn.http_status:5?? OR cdn.http_status:403 OR cdn.http_status:200 OR cdn.http_status:206 )  AND (cdn.domain:live1.video.com OR cdn.domain:live2.video.com OR cdn.domain:live3.video.com) | top 10 cdn.geo.city"}
{"input": "", "instruction": "帮我查找某些关于 live.rizhiyi.com 的 CDN 访问记录中 IP 地址最多的前 10 个用户的信息。", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 10 cdn.remote_addr"}
{"input": "", "instruction": "我想问的是，在过去的两小时里，有多少人从 rizhiyi.com 下发起了对 CDN 服务商的请求？", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 20 cdn.remote_addr"}
{"input": "", "instruction": "搜索关键字“cdn_log”、访问域名为“live.rizhiyi.com”的CDN服务器上的所有请求记录，并且只显示前50个IP地址。", "output": "appname:cdn_log AND cdn.request_domain:live.rizhiyi.com | top 50 cdn.remote_addr"}
{"input": "", "instruction": "检索包含 `appname` 为 `cdn_log`、且 `cdn.remote_addr` 为 `122.32.67.13` 的前 10 个 `cdn.request_url`。", "output": "appname:cdn_log AND cdn.remote_addr:122.32.67.13|top 10 cdn.request_url"}
{"input": "", "instruction": "我想跟踪 CDN 服务商，并询问其访问量排名前五的 IP 地址和请求 URL。", "output": "appname:cdn_log AND cdn.remote_addr:119.32.67.14|top 5 cdn.request_url"}
{"input": "", "instruction": "我想跟踪 CDN 服务商的访问记录，并要求排名最高的前十个 URL？", "output": "appname:cdn_log AND cdn.remote_addr:119.32.67.13|top 10 cdn.request_url"}
{"input": "", "instruction": "我希望获得CDN上最受欢迎的URL列表。", "output": "appname:cdn_log AND cdn.remote_addr:123.32.67.13|top 10 cdn.request_url"}
{"input": "", "instruction": "从`cdn_log`应用中检索出包含`119.33.67.13`的IP地址的前一百条记录中的`cdn.request_url`。", "output": "appname:cdn_log AND cdn.remote_addr:119.33.67.13|top 100 cdn.request_url"}
{"input": "", "instruction": "我想要知道网站的访问量排名，你能帮我查一下吗？你的结果中应该只显示前十个最高的访问量的 URL 地址。", "output": "appname:cdn_log AND cdn.remote_addr:119.32.206.13|top 10 cdn.request_url"}
{"input": "", "instruction": "我想寻找最近的IP地址访问过你的网站排名前五十名的用户。", "output": "appname:nginx_log |top 50 nginx.real_ip.last"}
{"input": "", "instruction": "我想问的是 Nginx 访问量排名前十的 URL 是啥呀？", "output": "appname:nginx_log |top 100 nginx.request_raw.request_url"}
{"input": "", "instruction": "我想问的是，在 VMware 中，哪些操作员最常发送消息？", "output": "appname:vmware AND tag:*  AND ('vmware.msg.user':*)|top 10 vmware.msg.user"}
{"input": "", "instruction": "我想问的是系统的cpu、内存和磁盘使用率怎么样？而且只查一次最新的一条数据就行。你能帮忙修改一下吗？", "output": "* AND appname:top_info_system_stats | limit 1 "}
{"input": "", "instruction": "使用华为CDN的请求，并按访问IP归属地进行排序，返回前十名ISP", "output": "appname:cdn tag:huawei  |top 10 cdn.clientip.geo.isp"}
{"input": "", "instruction": "我想知道最近十条 Cisco ASA 防火墙的告警信息，并按严重级别排序！", "output": "appname:firewall tag:cisco_asa | top 10 firewall.severity_level"}
{"input": "", "instruction": "我想询问最近发生在 Cisco ASA 安全设备上的十大事件的消息 ID。", "output": "appname:firewall tag:cisco_asa | top 10 firewall.message_id"}
{"input": "", "instruction": "我想要知道最多的十条 Cisco ASA 防火墙的操作字段值。请告诉我怎么做。", "output": "appname:firewall tag:cisco_asa | top 10 firewall.action"}
{"input": "", "instruction": "源地址为哪些IP的Cisco ASA安全设备的访问日志最多？", "output": "appname:firewall tag:cisco_asa |top 10 firewall.src.geo.ip"}
{"input": "", "instruction": "我想要知道记录最多的十条源IP是哪些。", "output": "appname:firewall tag:cisco_asa |top 10 firewall.dst_ip"}
{"input": "", "instruction": "我想要查询应用名为“firewall”且标记中包含“cisco_asa”的日志中的源 IP 地址最多的 10 个连接信息。", "output": "appname:firewall tag:cisco_asa  firewall.action:teardown | top 10 firewall.src.geo.ip"}
{"input": "", "instruction": "我想问的是，最近几个月内，在公司的防火墙上有多少次被 Cisco ASA 阻断了访问，并且可以看到源 IP 是哪些呢？", "output": "appname:firewall tag:cisco_asa  firewall.action:blocked | top 10 firewall.src.geo.ip"}
{"input": "", "instruction": "我想问有关 Cisco ASA 防火墙的失败事件前十名源 IP 地址的信息吗？", "output": "appname:firewall tag:cisco_asa firewall.action:failure | top 10 firewall.src.geo.ip"}
{"input": "", "instruction": "我正在寻找 Cisco ASA 防火墙失败事件并按源 IP 地址排序的前 20 个结果。", "output": "appname:firewall tag:cisco_asa firewall.action:failure | top 20 firewall.src.geo.ip"}
{"input": "", "instruction": "我想询问 Cisco ASA Firewall logs 中，应用名称为 \"firewall\"、标签为 \"cisco_asa\"、动作为 \"teardown\" 的记录数最多的前 10 个目的 IP 地址。", "output": "appname:firewall tag:cisco_asa  firewall.action:teardown | top 10 firewall.dst.geo.ip"}
{"input": "", "instruction": "我想询问的是以下内容：查询最近十个被 Cisco ASA 防火墙阻断的连接信息，并按国家/地区进行排序。", "output": "appname:firewall tag:cisco_asa  firewall.action:blocked | top 10 firewall.dst.geo.country"}
{"input": "", "instruction": "我想问有关 F5 Big-IP LTM 模块的应用性能分析报告中，如何使用 搜索语言（SPL）编写搜索语句来检索最近 10 个月内发生在应用 \"loadbalancing\" 下且包含标签 \"F5\" 的所有源 IP 的地理位置信息？", "output": "appname:loadbalancing tag:f5 from|top 10 loadbalancing.src_ip.geo.ip"}
{"input": "", "instruction": "我想问的是关于F5的负载均衡器的信息，而且要求返回访问量最大的10条域名记录。", "output": "(* AND appname:loadbalancing tag:f5 )  NOT \"default send string\" NOT info  \"to\" NOT \"empty\"  | top 10 loadbalancing.domain"}
{"input": "", "instruction": "我想要知道网站 nginx 在全球哪些城市的访问量最高。请帮我把这些信息找出来并列出前 50 个城市的排名。", "output": "appname:nginx|top 50 middleware.geo.city"}
{"input": "", "instruction": "帮我进行一些网络安全审计工作，并为我提供相关的访问链接记录和统计信息。我的搜索条件应该是：`(\"firewall\" OR \"IDS\") AND dptech`", "output": "(* AND appname:firewall) AND tag:dptech | top 10 firewall.uri"}
{"input": "", "instruction": "我想问的是，哪些用户登录了 fortress，搜索包含 shterm 的标签，然后排除有 fortress.type 字段的记录，并只显示前 10 个结果。", "output": "appname:fortress tag:shterm (NOT fortress.type:*) AND (login)  |top 10 fortress.user"}
{"input": "", "instruction": "我想问的是：在 appname 为 \"fortress\"、tag 为 \"shterm\" 和 type 以 \"*\" 结尾的前 10 个源 IP？", "output": "appname:fortress tag:shterm fortress.type:* |top 10 fortress.src_ip"}
{"input": "", "instruction": "我想知道最近的深信服防火墙审计日志中审计记录类型的排序。", "output": "appname:firewall tag:sangfor|top 10 firewall.log_type"}
{"input": "", "instruction": "我想寻找IPS的访问来源所属省份的信息？", "output": "appname:ips ips.src.geo.province:* | top 10 ips.src.geo.province"}
{"input": "", "instruction": "我想要知道关于 Cisco VPN 用户身份验证的信息，并且只显示前 10 个源地省份的信息。", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |top 10 vpn.src.geo.province"}
{"input": "", "instruction": "我想知道使用 Cisco VPN 登录最多的前十个用户信息。", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |top 10 vpn.user"}
{"input": "", "instruction": "我想知道cisco VPN登录失败数最大的十个用户是谁。", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\" |top 10 vpn.user"}
{"input": "", "instruction": "我想知道有多少条fortress消息的标签包含“leadsec”且内容类型为“1”，并且按发送 从大到小排序后显示前十个用户是谁。", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | top 10 fortress.msg.user_name"}
{"input": "", "instruction": "我想问的是有多少条 fortress消息的标签为 leadsec, 消息类型是 adlg_type=1，并且源 IP 是哪些呢？", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | top 10 fortress.src_ip"}
{"input": "", "instruction": "我想要知道leadsec fortress发送的最多的目标IP地址是什么。请帮我把这些信息列出来。", "output": "appname:fortress tag:leadsec fortress.msg.adlg_type:1 | top 10 fortress.dst_ip"}
{"input": "", "instruction": "我想要知道最近连接SQLserver的前十名用户的信息，", "output": "appname:sqlserver tag:connect | top 10 sqlserver.Login "}
{"input": "", "instruction": "我想问的是，在最近的一次 DDoS 洪水攻击中，绿盟记录下来的源 IP 主要来自哪些城市？", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | top 10 ddos.src.geo.city"}
{"input": "", "instruction": "我想要知道绿盟抗 D 设备日志里最多十个国家/地区发生过最多 DDoS 暴力攻击的情况。", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | top 10 ddos.dst.geo.country"}
{"input": "", "instruction": "我想问的是最近有没有大流量攻击的情况，在绿盟日志里源IP和目的IP分别是什么，共计出现了几次。", "output": "appname:ddos tag:nsfocus ddos.src_ip:*| top 10 ddos.dst_ip"}
{"input": "", "instruction": "我想问的是Imperva WAF访问量按告警类型排序？", "output": "appname:waf  tag:imperva |top 10 waf.alertType"}
{"input": "", "instruction": "我想要知道在 Imperva WAF 上，前十个 IP 来源的攻击情况。请告诉我如何获取这些信息。", "output": "appname:waf  tag:imperva |top 10 waf.src_ip"}
{"input": "", "instruction": "我想问的是有哪些访问了 waf 应用的用户使用了 barracuda 标签，并按 IP 排序后显示前 20 个用户呢？", "output": "appname:waf tag:barracuda |top 20 waf.src_ip"}
{"input": "", "instruction": "我想问的是，有哪些请求使用了 WAF 产品，并且带上了 barracuda 标签，最多返回前 20 个 URL。", "output": "appname:waf tag:barracuda |top 20 waf.url"}
{"input": "", "instruction": "我想问以下信息：1、用户使用的应用名称为 ips；2、该用户的访问记录中包含有关 IP 地址的信息（tag: juniper | top 20 ips）；3、需要获取前 20 个目的地 IP 地址的信息。", "output": "appname:ips tag:juniper|top 20 ips.dst_ip"}
{"input": "", "instruction": "我想要知道网站 nginx 的访问记录中，最常用的 IP 是哪些？请帮我把这些数据列出前十名。", "output": "appname:nginx tag:access |top 10  middleware.src.geo.ip"}
{"input": "", "instruction": "我想问一下WAS系统错误发生的原因是什么，你能告诉我吗？", "output": "appname:was tag:syserr  | top 10 was.wasErrReason"}
{"input": "", "instruction": "我想问以下信息：topsec IPS 按照访问次数从高到低排名的前十个 IP地址？", "output": "appname:ips  tag:topsec | top 10 ips.dst_ip"}
{"input": "", "instruction": "我想要知道novel Firewall 应用的用户在哪些城市中访问，并返回前 10 个最常用的城市。", "output": "appname:firewall tag:novel | top 10 firewall.dst.geo.city"}
{"input": "", "instruction": "我想知道有哪些使用 FortiGate VPN 服务的应用和来源ISP的前十名。请提供结果。", "output": "appname:vpn tag:fortinet | top 10 vpn.src.geo.isp"}
{"input": "", "instruction": "我想知道有哪些 app 使用的是 fortinet 安全产品的 VPN 服务，并按用户所在地分组显示前 10 个省份使用量排名的信息。", "output": "appname:vpn tag:fortinet | top 10 vpn.src.geo.province"}
{"input": "", "instruction": "我想询问的是以下内容：检索DLP应用的Symantec日志，按事件等级分组统计前十名日志量。", "output": "appname:dlp tag:symantec |top 10 dlp.event_level"}
{"input": "", "instruction": "我想要知道在DLP中使用Symantec的Top 5协议有哪些。请告诉我如何实现这个功能。", "output": "appname:dlp tag:symantec |top 5 dlp.proto"}
{"input": "", "instruction": "我想知道赛门铁克DLP触发数量最多的十条规则的信息。", "output": "appname:dlp tag:symantec |top 10 dlp.rule_name"}
{"input": "", "instruction": "我想要知道websense DLP 检测到的活动发生在哪些IP地址上。", "output": "appname:dlp tag:websense|top 10 dlp.src_ip"}
{"input": "", "instruction": "我想知道日志量最大的十条 websense dlp 相关的服务运行情况。", "output": "appname:dlp tag:websense|top 10 dlp.service"}
{"input": "", "instruction": "我想问VMware是什么的操作记录最多？", "output": "appname:vmware AND tag:*  AND ('vmware.action':*)|top 10 vmware.action"}
{"input": "", "instruction": "我想知道最近十个使用 VPN（虚拟私人网络）登录的来源 IP 地址。", "output": "appname:vpn Log in|top 10 vpn.src_ip"}
{"input": "", "instruction": "我想知道的是最近十条关于VPN的退出登录记录", "output": "appname:vpn Log out|top 10 vpn.src_ip"}
{"input": "", "instruction": "我想要知道有哪些应用名叫“waf”并且包含标签“hillstone”，同时又有事件等级为“危险”的源 IP记录，并按访问量排序，只显示前十条。", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|top 10 waf.src_ip"}
{"input": "", "instruction": "我想询问最近使用 SANGFOR CDN 服务的前十名用户所访问的网站域名和 IP 地址。", "output": "(appname:cdn AND tag:sangfor) |top 10 cdn.dst_outside_ip"}
{"input": "", "instruction": "帮我查找 SonicWall Firewall 的源 IP 地址排名最高的十个记录。", "output": "(* AND appname:firewall) AND tag:sonicwall |top 10 firewall.src_ip"}
{"input": "", "instruction": "我想问的是 VPN 服务商 Juniper 上的登录失败事件的前十名用户是谁。", "output": "appname:vpn tag:juniper vpn.action:failed|top 10 vpn.login_user"}
{"input": "", "instruction": "我想问的是 juniper VPN 连接失败的 top 10 源 IP 是哪些？", "output": "appname:vpn tag:juniper vpn.action:failed|top 10 vpn.src_ip"}
{"input": "", "instruction": "我想知道最近五十条系统和入侵防御的防火墙记录。", "output": "appname:firewall tag:tos firewall.type:system|top 50 firewall.recorder"}
{"input": "", "instruction": "我想询问 Firewall 服务的访问控制策略信息", "output": "appname:firewall tag:tos firewall.type:ac firewall.rule:deny|top 10 firewall.policyid"}
{"input": "", "instruction": "我需要查看最近十条与防火墙有关的所有连接或访问事件", "output": "appname:firewall tag:tos firewall.type:conn|top 10 firewall.op"}
{"input": "", "instruction": "我想要知道在nsfocus IDS，访问量最高的十个 IP 是哪些？", "output": "appname:ids tag:nsfocus|top 10 ids.dst_ip "}
{"input": "", "instruction": "我想问的是，在 xdtx_mall_bus 这个应用中，top 10 次的中间件是什么？", "output": "appname:xdtx_mall_bus | top 10 middleware.desc"}
{"input": "", "instruction": "我想问的是 nginx 访问的前 50 个请求的源 IP 地址所在地区是哪些？", "output": "appname:nginx|top 50 middleware.src_ip.geo.city"}
{"input": "", "instruction": "我想要知道网站 nginx 上前十的请求路径是哪些。请帮我把这些信息输入到搜索框中进行查询。谢谢！", "output": "appname:nginx|top 10 middleware.path"}
{"input": "", "instruction": "我想问 Nginx 网站的前十个访问地区和 ISP 是什么。这是一个合理且可行的查询方式。", "output": "appname: nginx|top 10 middleware.src_ip.geo.isp "}
{"input": "", "instruction": "我想知道 nginx 在上周的 top 10 中最常用的中间件有哪些，并且根据用户操作系统分组统计。", "output": "appname:nginx|top 10 middleware.agent.os"}
{"input": "", "instruction": "我想问的是 nginx 访问排名 top 10 的用户使用了哪些浏览器。", "output": "appname:nginx|top 10 middleware.agent.browser"}
{"input": "", "instruction": "我想要知道包含“tomcat middleware”的“stdout”记录，最多出现在哪十个IP地址上。", "output": "appname:tomcat tag:stdout |top 10 middleware.src_ip"}
{"input": "", "instruction": "我想问的是最近有没有 山石网科 CSA 日志里有威胁事件，给出Top 10的攻击目标IP", "output": "appname:csa AND tag:hillstone csa.event_type:Threat|top 10 csa.dst_ip"}
{"input": "", "instruction": "我想知道在 appname 为 \"waf\",tag为 \"venustech\"的主机中,最常用的目的端口有哪些?", "output": "appname:waf tag:venustech | top 10 waf.dst_port"}
{"input": "", "instruction": "我想问关于venustech WAF产品的访问量和目的 IP分布情况。", "output": "appname:waf tag:venustech | top 10 waf.dst_ip"}
{"input": "", "instruction": "我想知道venustech waf记录的源 IP 是谁，并按数量排序，最多显示十条记录。", "output": "appname:waf tag:venustech | top 10 waf.src_ip"}
{"input": "", "instruction": "我想问的是天融信 waf有多少个攻击事件发生了，目标 IP 是哪些？", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.dst_ip"}
{"input": "", "instruction": "我想问天融信 waf 上有多少个攻击事件发生源自于某些 IP 地址？", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |top 10 waf.src_ip"}
{"input": "", "instruction": "我想要知道在legendsec用户访问了哪些 IP 地址和地理位置信息，并按发生次数从高到低排序，前十个IP地址", "output": "appname:ips tag:legendsec  | top 10 ips.src.geo.ip"}
{"input": "", "instruction": "我想询问的是以下内容：检索日志中包含 `legendsec` 标签且来自于应用名为 `appname` 的主机的前十个 IP 地址。", "output": "appname:ips tag:legendsec | top 10 ips.dst.geo.ip"}
{"input": "", "instruction": "我想问的是， 天融信 IDS 访问量最高的十个 IP 是哪些呢？", "output": "appname:ids  tag:topsec | top 10 ids.dst_ip"}
{"input": "", "instruction": "我想问的是，有哪些请求的 URL 是以 `waf` 和 `barracuda` 为标签的前 10 个的 URL 访问记录。", "output": "appname:waf tag:barracuda |top 10 waf.url"}
{"input": "", "instruction": "我需要查看系统和安全事件类型的 newdon 防火墙日志中的最常见的 500 个消息。", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 500 firewall.msg"}
{"input": "", "instruction": "我想问有关newdon防火墙应用的最新动态和用户操作情况，具体包括：1、系统级和事件型防火墙的数量排名；2、每个防火墙的操作（如添加、删除等）及其执行人姓名？", "output": "appname:firewall tag:newdon firewall.type:system OR firewall.type:event|top 50 firewall.action by firewall.user"}
{"input": "", "instruction": "我想询问 Firewall 应用的最新动态，并且要求返回最高优先级为“拒绝”且类型为 AC 状态的top10策略 ID。", "output": "appname:firewall tag:newdon firewall.type:ac firewall.status:deny|top 10 firewall.policyid"}
{"input": "", "instruction": "我想询问关于newdon防火墙应用的新消息、类型为PF（包过滤器）和包含“Reject”的消息的政策ID排名前十的情况。", "output": "appname:firewall tag:newdon firewall.type:pf firewall.msg:Reject | top 10 firewall.policyid"}
{"input": "", "instruction": "我想知道kingdee访问日志中访问量最高的前十个中间件路径。", "output": "appname:kingdee tag:access|top 10 middleware.path"}
{"input": "", "instruction": "在ZSNS应用的 tomcat 日志中，发生级别为ERROR的前十个线程号。", "output": "appname:zsns tomcat.level:ERROR | top 10  tomcat.thread "}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：`appname:waf tag:f5`，并且统计每种 `waf.event_level` 的数量。", "output": "appname:waf tag:f5 | stats count() as cnt by waf.event_level"}
{"input": "", "instruction": "我想要知道在 appname 为 \"waf\" 和 tag 为 \"f5\" 的请求中，HTTP status code 分别有多少个不同的值。", "output": "appname:waf tag:f5   | stats count() as cnt by waf.status"}
{"input": "", "instruction": "华为交换机数据，编写查询语句实现如下分析场景：登录失败方式otop10分布", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 10 switch.module"}
{"input": "", "instruction": "登录失败最多的源主机", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) |top 1 switch.kvmsg.IpAddress"}
{"input": "", "instruction": "我想问的是，在 Imperva WAF 中，有多少条记录的严重性为“低”？请帮忙把这个统计结果打印出来。", "output": "appname:waf tag:imperva AND waf.severity:低 |stats count()"}
{"input": "", "instruction": "我想询问关于某些应用的 Web 应用防火墙 (WAF) 报告中的一些信息：筛选出包含 `\"waf\"` 和 `\"imperva\"` 标记且其 WAF 严重性为 `\"中\"` 的所有记录，并使用 `stats` 子句计算每个严重级别的计数。", "output": "appname:waf  tag:imperva AND waf.severity:中 |stats count() as tally by waf.severity"}
{"input": "", "instruction": "我想询问以下内容：- 查询 appname=waf 和 tag=fortinet 下的警告级别为 waf.kv.pri=warning 的条数", "output": "appname:waf tag:fortinet waf.kv.pri:warning |stats count() as cnt "}
{"input": "", "instruction": "我想问以下信息：在 appname 为 \"waf\"、tag为 \"fortinet\" 和 waf.kv.type为 \"attack\" 的数据中，统计出 waf.kv.type列出现的次数以及每个不同的值所对应的数量", "output": "appname:waf tag:fortinet waf.kv.type:attack | stats count() as cnt by waf.kv.type"}
{"input": "", "instruction": "我想问的是关于fortinet WAF的信息，并且要求返回严重等级为中等的数量。", "output": "appname:waf tag:fortinet AND waf.kv.severity_level:Medium | stats count() as cnt"}
{"input": "", "instruction": "fortinet WAF 日志里有多少高严重性漏洞。", "output": "appname:waf tag:fortinet AND waf.kv.severity_level:High | stats count() as cnt"}
{"input": "", "instruction": "我想知道的是天融信防火墙有多少条记录的严重程度在2-4之间。", "output": "appname:firewall AND tag:topsec AND firewall.msg.pri:<5 AND firewall.msg.pri:>2 |stats count() as cnt"}
{"input": "", "instruction": "我想问的是，在有多少用户使用了哪些浏览器访问了 WAF 服务的入口地址，并带上了“tag=barracuda”这个标签。", "output": "appname:waf tag:barracuda |stats count() by waf.user_agent.browser"}
{"input": "", "instruction": "帮我分析 Nginx 服务的错误访问记录，并统计出每个中间件 referrer 中出现过 error 次数最多的那个。", "output": "appname:nginx tag:error | top 1 middleware.referrer"}
{"input": "", "instruction": "我想询问topsec防火墙的访问记录数量？此外，要求将结果按规则进行汇总。", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.msg.rule"}
{"input": "", "instruction": "我想要知道topsec ips在不同地区的访问量和用户分布情况。", "output": "appname:ips tag:topsec |stats count() by ips.src.geo.city"}
{"input": "", "instruction": "我想问的是 Kafka 服务的错误信息数量统计。", "output": "appname:kafka kafka.event_type:ERROR| stats count() as total"}
{"input": "", "instruction": "我想要知道 Kafka 服务的各类事件发生次数。请告诉我这些信息。", "output": "appname:kafka |stats count() by kafka.event_type"}
{"input": "", "instruction": "我想询问关于“Hillstone”标记和“危险”事件级别的访问来源国家的记录。", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count(waf.src.geo.country) as cnt by waf.src.geo.country"}
{"input": "", "instruction": "我想问的是，在这个时间段内，有多少个网站使用了 HillStone WAF 产品？", "output": "appname:waf AND tag:hillstone | stats count() as cnt by waf.website_name"}
{"input": "", "instruction": "正在寻找在 HillStone 漏洞扫描中标记为“危险”的 WAF 应用的十个最常见目的 IP 地址。", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count() as cnt by waf.dst_ip | limit 10"}
{"input": "", "instruction": "应用名为“GC”，IBM WebSphere Application Server（WAS）的所有相关日志消息并对它们进行计数。", "output": "appname:gc tag:ibm_was  |stats count() "}
{"input": "", "instruction": "我想问 IBM WebSphere Application Server (WAS) 中，使用 JVM Garbage Collection（GC）统计信息的情况如何？请提供详细数据和分析结果。", "output": "appname:gc tag:ibm_was jvm_gc.type:global|stats count() "}
{"input": "", "instruction": "我想要知道venustech 网站防火墙的访问情况，以及每个事件类型发生的次数。请帮我把这些信息列出。", "output": "appname:waf tag:venustech | stats count() as cnt by waf.event_type"}
{"input": "", "instruction": "我想要知道网站 appname:waf 中带有 topsec 和 waf.event_type:waf_attack 和 waf.threat_level:Medium|High 标签的攻击事件数量统计为多少条。", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack AND waf.threat_level:Medium|stats count() as cnt "}
{"input": "", "instruction": "我想问的是，在长亭 WAF 日志里有多少条记录的 risk level 是 medium 或 high？", "output": "appname:waf tag:chatin waf.risk_level:medium|stats count() as cnt "}
{"input": "", "instruction": "我想问的是，有多少条记录的应用名称中包含“waf”且标签为“chatin”并且风险等级高于等于“high”。", "output": "appname:waf tag:chatin waf.risk_level:high|stats count() as cnt "}
{"input": "", "instruction": "我想问的是：在 waf 中有哪些 policy 是以 f5 为标记的？它们是否被截断了？请列出所有这些 policy 。", "output": "appname:waf tag:f5 waf.is_truncated:truncated  |stats count() as cnt by waf.policy_name"}
{"input": "", "instruction": "统计某个 WAF（Web Application Firewall）防火墙中所有来自中国IP地址的访问量。它首先通过 `appname` 和 `tag` 字段过滤出含有 `waf` 和 `nsfocus` 标记的记录；然后再根据 `waf.log_category` 字段筛选出属于 WebSec 安全审计的记录；最后使用 `stats` 命令计算 `waf.src.geo.province` 列出现次数的分布情况。", "output": "((( appname:waf tag:nsfocus ) AND ( waf.log_category:waf_log_websec)))  AND (waf.src.geo.country:\"中国\") |stats count(waf.src.geo.province) as count_ by waf.src.geo.province"}
{"input": "", "instruction": "我想要知道有多少条记录满足 appname=waf 和 tag=river 。请帮我完成这次查询。", "output": "appname:waf tag:river |stats count() as count_"}
{"input": "", "instruction": "我想询问关于安恒 WAF的问题，通过分析Web Application Firewall（WAF）日志中的数据来获取有关威胁的数量和top20分布的信息。", "output": " (appname:waf tag:dbappsecurity)  |stats count(waf.message.threaten) as ct by waf.message.threaten |limit 20"}
{"input": "", "instruction": "我想寻找关于“WAF”（Web Application Firewall）标记包含安恒的记录以及消息中包含“阻断”字符串的访问记录等信息。", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.message.src_ip.geo.ip) as ct by waf.message.src_ip.geo.ip |limit 25"}
{"input": "", "instruction": "我想问的是，在这个时间段内，有多少个请求被安恒 WAF标记为“阻断”的情况呢？而且，这些“阻断”的情况对应的 URL 是哪些呢？", "output": " (appname:waf tag:dbappsecurity waf.message.action:\"阻断\")  |stats count(waf.url) as ct by waf.url |limit 25"}
{"input": "", "instruction": "我想询问关于“WAF”（Web应用防火墙）、标记为安恒的记录以及包含关键字“攻击”的事件名称的所有条目。此外，您还要求统计每个源IP地址上的条目的数量并返回前十个结果。", "output": " (appname:waf tag:dbappsecurity) AND (waf.event_name:*攻击*)  |stats count() as ct by waf.src_ip |limit 10"}
{"input": "", "instruction": "我想问有关绿盟 WAF 产品的访问日志中，各类请求数目最多的前五种类型是哪些？", "output": " (appname:waf tag:nsfocus)  |stats count(waf.log_category) as ct by waf.log_category |limit 5"}
{"input": "", "instruction": "我想问的是，有多少次访问了 appname 为 waf 和 tag 为长亭的url，并且返回状态码为 deny 的 HTTP 请求。", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.url|limit 10"}
{"input": "", "instruction": "我想问有没有在venustech WAF（Web Application Firewall）产品的审计日志中搜索到至少六级或更高级别的事件。", "output": "appname:waf tag:venustech waf.event_log_level:>6| stats count() as cnt "}
{"input": "", "instruction": "我想问的是，在近期的启明 WAF 访问日志里，有多少次的日志级别低于七级或者高于四级吗？", "output": "appname:waf tag:venustech waf.event_log_level:<7 AND waf.event_log_level:>4| stats count() as cnt by waf.event_log_level"}
{"input": "", "instruction": "我想问的是，在有多少条启明 WAF记录的级别低于五级的信息", "output": "appname:waf tag:venustech waf.event_log_level:<5| stats count() as cnt by waf.event_log_level"}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：- appname 为 waf- tag 为 leadsec- Evt_level 是低级事件或 Evt_level=20（二选一）统计数量并返回结果。", "output": "appname:waf tag:leadsec (waf.Evt_level:低级事件 OR waf.kv.Evt_level:20) | stats count() as cnt"}
{"input": "", "instruction": "我想询问 Firewall 应用的源 IP 和目的地 IP（使用 Hillstone IPS）的数量以及它们之间的关系。", "output": "appname:firewall AND tag:hillstone IPS [[appname:firewall AND tag:hillstone IPS | top 10 firewall.src_ip| fields firewall.src_ip]] |stats count() as total by firewall.src_ip,firewall.dst.geo.ip"}
{"input": "", "instruction": "我想问的是，有多少条记录符合以下两个条件：- 来源 IP 是防火墙的- 有 topsec 这个标签然后按数量排序，并只返回前 10 个结果。", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.src_ip|limit 10"}
{"input": "", "instruction": "我想要知道有哪些端口被 topsec app 使用过。请帮我把这些信息统计并排名前十。", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.dst_port|limit 10"}
{"input": "", "instruction": "我想询问的是以下内容：查询最近十个访问过 topsec 标签的应用名称中包含 \"firewall\" 的 IP 源地址和访问次数。", "output": "appname:firewall AND tag:topsec  | stats count() as cnt by firewall.dst_ip|limit 10"}
{"input": "", "instruction": "我想询问以下内容：What are the top ten cities visited from my company's internal network using PIX firewalls?", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst.geo.city|limit 10"}
{"input": "", "instruction": "我想问以下信息：- 查询 topsec 标记的 WAF 攻击事件数量；- 以每种攻击类型为维度，返回前 10 大类型的总数。", "output": "appname:waf tag:topsec AND waf.event_type:waf_attack |stats count() as cnt by waf.attack_name|limit 10"}
{"input": "", "instruction": "我想问的是，长亭 WAF 日志里有多少次被 deny的请求？按攻击类型分组统计前 10 名", "output": "(appname:waf AND tag:chatin) waf.action:deny |stats count() as cnt by waf.attack_type|limit 10"}
{"input": "", "instruction": "我想询问 Oracle 应用的等待事件列表，并仅显示前 10 个最常见的事件。", "output": "appname:oracle tag:wait_event_top10 | stats count() by oracle.EVENT|limit 10"}
{"input": "", "instruction": "统计 waf 应用中包含 legendsec 标记且来自不同源 IP 的访问次数并返回前 10 个结果。", "output": "appname:waf tag:legendsec waf.module:WAF  |stats count() by waf.src_ip | limit 10"}
