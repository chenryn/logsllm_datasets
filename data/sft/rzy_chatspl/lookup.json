{"input": "", "instruction": "查询包含 Query 关键字，且查询语句中包含 SELECT 或 INSERT 子关键字的日志记录，并将结果保存为报表文件report.csv", "output": "Query (SELECT OR INSERT) | outputlookup report.csv"}
{"input": "", "instruction": "查询包含 Query 关键字，且查询语句中包含 UPDATE 或 DELETE 子关键字的日志记录，并将结果保存为query.csv字典", "output": "Query (UPDATE OR DELETE) | outputlookup query.csv"}
{"input": "", "instruction": "从 tHostInfo 字典表里查询 IP 地址或主机名", "output": "| inputlookup tHostInfo | search src_ip=$IPADDRESS$ OR src_host=$HOSTNAME$"}
{"input": "从 monitor 索引中读取 result.resource_groups为rizhiy_agent_Alert的数据，列出 timestamp 和 alert_name 字段，然后和rizhiyi_aerlt_knowledge.csv字典按 alert_name 字段关联查找，扩展字典表中的 reason 和 solusion 字段。", "instruction": "日志易agent监控数据，编写查询语句实现如下分析场景", "output": "_index:monitor result.resource_groups:rizhiyi_agent_Alert |table timestamp,alert_name|lookup reason,solusion rizhiyi_alert_knowledge.csv on alert_name=alert_name"}
{"input": "读取 tracing.csv 字典，转换 elapsedTime 字段为长整型数值字段并命名为 duration，分别按 startTime 正序、duration 倒序、pid 正序排列。", "instruction": "业务链分析数据，编写查询语句实现如下分析场景", "output": "|inputlookup tracing.csv | eval duration=tolong(elapsedTime) | sort by +startTime,-duration,+pid "}
{"input": "读取 tracing.csv 字典，转换 elapsedTime 字段为长整型数值字段并命名为 duration，分别按 startTime 正序、duration 倒序排序，只保留 startTime、serviceName、pid、id、indicators_n、duration 字段。", "instruction": "业务链分析数据，编写查询语句实现如下分析场景", "output": "|inputlookup tracing.csv | eval duration=tolong(elapsedTime) | sort by +startTime,-duration | fields startTime,serviceName,pid,id,indicators_n,duration"}
{"input": "读取 cron_list.csv 字典，统计总行数。", "instruction": "linux_昨天定时任务总数量", "output": "|inputlookup cron_list.csv |stats count() as ct"}
{"input": "", "instruction": "我想问的是有没有人提交过更新或者删除数据的行为记录？可以把这些信息存到表格中，每行是一个数据行为的详细描述。", "output": "Query (UPDATE OR DELETE) | outputlookup report.csv"}
{"input": "BI用户操作和对象关系统计。从appname:bi和tag:execute数据中，按csv.tname和csv.type分组统计数量，然后以csv.type 为关联字段，从type2.csv字典中对应的 type1 字段值扩展得到type字段", "instruction": "BI数据，编写查询语句实现如下分析场景", "output": "appname:bi AND 'tag':execute | stats count() as ct by csv.tname,csv.type | lookup type type2.csv on csv.type = type1 "}
{"input": "接口访问分布，统计接口访问量后，对应api_list.csv字段中的 api 字段，扩展获取到接口描述 desc 字段。索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "apache access数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access\n|stats count() as cnt1 by apache.request_path \n|lookup desc api_list.csv on apache.request_path=api"}
{"input": "访问来源页面分布，将 referer 页面重命名为 uri，然后从h_url.csv字典中根据 uri 字段值对应的 url 列，扩展得到 desc 列内容。索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "apache访问日志，编写查询语句实现如下分析场景", "output": "appname:apache tag:access\n\t|stats count() as cnt1 by apache.referer\n\t| rename  apache.referer as uri |lookup desc h_url.csv on uri=url "}
{"input": "按dbzq.type字段分组统计，然后和 dbzq_type.csv字典做查找扩展，查找字段是dbzq.type=type1，扩展字段是type。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:dbzq | stats count() by dbzq.type | lookup type dbzq_type.csv on dbzq.type = type1"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道 apache 服务的访问路径和对应的接口描述信息。首先统计请求数量并按请求路径分组，然后使用 lookup 命令从另一张表(api_list.csv)中查找相应的信息。表中包含有关每个 API 的详细信息，包括接口描述 desc 列、接口地址 api 列。访问日志中的请求路径就对应 api 列的内容。", "output": "appname:apache tag:access|stats count() as cnt1 by apache.request_path |lookup desc api_list.csv on apache.request_path=api"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道 apache 访问者来自哪些页面，把访问量统计出来，并且跟 h_url.csv 字典表中的 url 列关联起来增加一列 desc 描述的内容。你能帮我完成这个任务吗？", "output": "appname:apache tag:access |stats count() as cnt1 by apache.referer | rename  apache.referer as uri |lookup desc h_url.csv on uri=url "}
{"input": "", "instruction": "我想询问如何查找应用名称为“bi”且标记为execute的日志，统计其bi.type的访问数。然后按bi.type=type1的关系读取 type2.csv里的type 列内容，并添加到统计表格中。", "output": "appname:bi AND 'tag':execute | stats count() by bi.type | lookup type type2.csv on bi.type = type1"}
