{"input": "", "instruction": "rizhiyi系统接入数据的主机数", "output": "tag:rizhiyi  |stats dc(ip) as value"}
{"input": "新HAC审计使用人数", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac AND hac.det.primary_user:* |stats dc(hac.det.primary_user)"}
{"input": "银联前置交易失败量(今天)", "instruction": "查询银联前置(cupp)系统数据，进行如下统计", "output": "sourcetype:cupp retcode:* NOT retcode:0000000 | stats dc(tranceno) as _dc"}
{"input": "mps交易量", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "msgid:* | stats dc(msgid) as ct"}
{"input": "网络付款贷记来账(tranCode 为BUP03059)交易量mps", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "trancode:* type:开始交易 tranCode:BUP03059 | stats dc(seqNo) as cnt "}
{"input": "网络付款借记来账交易量，交易代码 BUP03058", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "trancode:* type:开始交易 tranCode:BUP03058 | stats dc(seqNo) as cnt "}
{"input": "在 type 为开始交易的日志中，按 tranCode 分组统计 seqNo 的去重数，", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "trancode:* type:开始交易 | stats dc(seqNo) as cnt by tranCode"}
{"input": "", "instruction": "我想要知道BUP03058交易码下有多少笔开始交易的。", "output": " type:开始交易 tranCode:BUP03058 | stats dc(seqNo) as cnt "}
{"input": "", "instruction": "如何统计uid独立数", "output": "* | stats dc(uid)"}
{"input": "索引可用字段包括：linux.command,linux.user,linux.event_name,linux.terminal,appname,tag,ip,hostname,timestamp。请仅选用必需字段。", "instruction": "linux用户拥有定时任务数量", "output": "appname:linux tag:crond|stats dc(linux.command) as cnt by linux.user"}
{"input": "索引可用字段包括：linux.cmd,linux.user,linux.event_name,linux.terminal,appname,tag,ip,hostname,timestamp。请仅选用必需字段。", "instruction": "linux每个用户拥有的定时任务独立数", "output": "appname:linux CROND |stats dc(linux.cmd) as count_ by linux.user "}
{"input": "独立用户登录次数", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "(* AND appname:yottaweb_audit_log) AND json.action:login|stats dc(json.user_name)"}
{"input": "esxi虚拟机数量", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:app2 source:VirtualMachine* | stats dc(json.name)"}
{"input": "esxi虚拟机数量", "instruction": "主中心Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:dmz_master source:VirtualMachine* | stats dc(json.name)"}
{"input": "esxi虚拟机数量", "instruction": "Esxi性能监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:dmz_backup source:VirtualMachine* | stats dc(json.name)"}
{"input": "在线主机数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:rzy tag:agent_status json.os:windows json.status:Running|stats dc(json.ip) as dct"}
{"input": "离线主机", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:rzy tag:agent_status  json.os:windows(NOT json.status:Running)|stats dc(json.ip) as dct "}
{"input": "新建账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4720 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "删除账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4726 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "锁定账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4740 json.keywords:审核成功 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "解锁账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4767 json.keywords:审核成功 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "禁用账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4725\n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "启用账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4722  \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "重置账户密码用户数-管理员操作", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security \n json.event_id:4724 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "更改账户密码用户数-用户操作", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security  json.event_id:4723 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "已更改用户账户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security  json.event_id:4738 \n| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "AD登录成功用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows ( json.event_id:4624 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as cnt "}
{"input": "AD登录失败用户数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows ( json.event_id:4625 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as cnt "}
{"input": "AD新建用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4720 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD删除用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4726 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD锁定用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4740 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD解锁用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4767 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD禁用用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4725 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD启用用户数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4722 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD密码重置用户数-管理员操作", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4724 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD密码更改用户数-用户操作", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4723 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "AD用户变更数量", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4738 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "", "instruction": "帮我编写日志易的查询语句，我的问题是：我需要知道某台电脑上每天都有哪些用户登录和注销事件。", "output": "appname:windows ( json.event_id:4625 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as cnt "}
{"input": "", "instruction": "我想要知道在我的电脑上安装了哪些软件。你能帮我把这些信息找出来吗？你可以使用 Event ID 为 4723 和用户名不包含星号或系统的记录进行统计，并计算每个用户的数量。", "output": "appname:windows (json.event_id:4723 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "", "instruction": "我想要知道在 vSphere 中有哪些应用名为 app2 源自 VirtualMachine 的实例的信息。请告诉我这些虚拟机的名称和所在的数据中心。", "output": "appname:vsphere tag:app2 source:VirtualMachine* | stats dc(json.name)"}
{"input": "", "instruction": "我想要知道哪些虚拟机属于 dmz 区域的 master 服务。请告诉我这些虚拟机的名称和数量。", "output": "appname:vsphere tag:dmz_master source:VirtualMachine* | stats dc(json.name)"}
{"input": "", "instruction": "我想跟踪一名使用 Windows 操作系统的运行中的 RZY 应用的用户，并按 IP 地址进行分组统计。", "output": "appname:rzy tag:agent_status json.os:windows json.status:Running|stats dc(json.ip) as dct"}
{"input": "", "instruction": "我想要知道有哪些用户在使用 Windows 系统的电脑上正在运行你的应用，并且他们的 IP 是什么样的？", "output": "appname:rzy tag:agent_status  json.os:windows(NOT json.status:Running)|stats dc(json.ip) as dct "}
{"input": "", "instruction": "我想要知道有哪些用户被锁定了。", "output": "appname:windows tag:security json.event_id:4726 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想问的是 windows 系统上 security 标签下，关键字为 \"审批通过\" 的事件 ID 发生在多少用户账号上？", "output": "appname:windows tag:security json.event_id:4740 json.keywords:审核成功 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "寻找与Windows安全相关的事件4725，其中包括目标用户名称的数据聚合统计信息。", "output": "appname:windows tag:security json.event_id:4725| stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想询问 Windows 安全事件中发生的第 4722 次 Security-Auditing 事件的目标用户数量分布情况。", "output": "appname:windows tag:security json.event_id:4722  | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想知道的是发生了多少次安全事件，以及这些事件中有没有涉及到某个用户的登录信息。", "output": "appname:windows tag:security  json.event_id:4724 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想问的是 windows 系统上 security 标签下的所有事件 id 为 4723 的 log，并统计出 TargetUserName 次数最多的那个用户。", "output": "appname:windows tag:security  json.event_id:4723 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想问的是 windows 系统的安全事件中，有没有发生过 event id 为 4738 的情况？如果有的话，那具体多少用户被攻击了呢？", "output": "appname:windows tag:security  json.event_id:4738 | stats dc(json.event_data.TargetUserName) by json.event_id"}
{"input": "", "instruction": "我想要知道有哪些用户在使用 Windows 应用时出现了错误 4624 。", "output": "appname:windows ( json.event_id:4624 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as cnt "}
{"input": "", "instruction": "帮我设计一个 Windows 用户登录事件的查询语句。我需要统计所有以 windows 开头的应用（应用）的用户数量。", "output": "appname:windows (json.event_id:4720 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "", "instruction": "我想问在处理用户 windows 应用的事件 ID 为 4726 时是否需要排除用户名中包含特殊字符 $ 或 SYSTEM 的情况。", "output": "appname:windows (json.event_id:4726 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "", "instruction": "从`winsecurity`索引中检索出发生了代码为`4722`（即“对象被删除”）且应用名称为`windows`的所有事件记录，并排除用户名包含`*$`或`SYSTEM`字符串的记录。然后，它会计算每个用户帐户出现的次数，并生成一个名为`dc_uname`的直方图统计结果。", "output": "appname:windows (json.event_id:4722 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "", "instruction": "我想要知道有哪些用户在使用 Windows 系统登录过。这条查询的意思是：从 windows 应用事件 log 中找出 event id 为 4724（Windows 登陆事件）并且 username 不为 *$ （表示当前用户）或者 SYSTEM（系统账户）的所有记录，并统计每个用户名出现的次数。", "output": "appname:windows (json.event_id:4724 ) NOT (json.username:*$ OR json.username:SYSTEM)|stats dc(json.username) as dc_uname "}
{"input": "总session数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.log_type:session_command_log \n| stats dc(fortress.session) as cnt "}
{"input": "定时任务数。索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "(appname:esxi AND tag:syslog)  crond | stats dc(esxi.command) as dct"}
{"input": "当前会话数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  | stats dc('fortress.kv.会话标识') as cnt"}
{"input": "今日会话数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:fortress tag:safety  | stats dc('fortress.kv.会话标识') as cnt"}
{"input": "当前活跃用户数。索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  | stats dc('fortress.user') as cnt"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "统计每个站点的PV和UV", "output": "appname:apache   |stats dc(apache.clientip) as UV, count(apache.domain) as PV by apache.domain "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "今日登录失败用户数", "output": "starttime=\"now/d\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "今日登录用户数量", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "今日登录用户数", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux_登录失败主机总数", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats dc(ip) as ct"}
{"input": "索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux_登录成功主机总数", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats dc(ip) as ct"}
{"input": "邮件账户数量。索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front   |stats dc(exchange.login_user) as cnt "}
{"input": "今日登录失败用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "今日登录用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "ArrayVPN连接用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array | stats dc(vpn.kv.user)"}
{"input": "用户上报数统计。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats dc(stb.user_account) as count_ by stb.area_code_dec,stb.reporttype_dec"}
{"input": "报障用户数。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats dc(stb.user_account) as count_"}
{"input": "今日登录失败用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sangfor_vpn_new数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "今日登录用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sangfor_vpn_new数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "今日登录失败用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor_0trust vpn.event_name:login vpn.result:FAILED| stats dc(vpn.user_name) as cnt "}
{"input": "今日登录用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:sangfor_0trust vpn.event_name:login| stats dc(vpn.user_name) as cnt "}
{"input": "今日登录失败用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "今日登录用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:cisco vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "活跃股东数。索引可用字段有：THS.ANSTYPE, THS.MMLB, THS.REQTYPE, THS.geo.province, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | stats dc(THS.GDZH) as cnt "}
{"input": "根据 THS.GDZH 去重数统计活跃股东数。索引可用字段有：THS.ANSTYPE, THS.MMLB, THS.REQTYPE, THS.geo.province, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | stats dc(THS.GDZH)"}
{"input": "核心系统。", "instruction": "查询某系统的交易量", "output": "appname:cbv7 tag:tuxedo cbv7.reqSeq:* | stats dc(cbv7.reqSeq) as _dc"}
{"input": "柜面前端系统。", "instruction": "查询某系统的交易量", "output": "appname:ntfs tag:abs | stats dc(ntfs.id) as _dc"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "IIS 服务器的独立访客数UV", "output": "appname:middleware tag:iis |stats dc(middleware.src_ip) as count_"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux最近十分钟在线用户去重数", "output": "appname:linux tag:who|stats dc(linux.terminal) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux_用户拥有定时任务数量", "output": "(appname:linux tag:crond)  |stats dc(command) as ct by user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_设备数量", "output": "appname:linux  |stats dc(ip) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录成功用户分布", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |stats dc(pid) as cnt by user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录失败用户分布", "output": "appname:linux tag:secure AND event_name:登录失败事件 (\"Failed password for\"  OR \"authentication failure\") |stats dc(pid) as cnt by user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_系统账号添加事件数", "output": "appname:linux tag:secure (type:useradd OR type:passwd OR type:usermod OR type:groupadd OR type:gpasswd OR type:groupmod) |stats dc(pid) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_系统账号删除事件数", "output": "appname:linux tag:secure (type:userdel OR type:passwd OR type:usermod OR type:groupdel OR type:gpasswd OR type:groupmod) |stats dc(pid) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录成功用户数", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |stats dc(pid) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_登录失败用户数", "output": "appname:linux tag:secure AND event_name:登录失败事件 (\"Failed password for\"  OR \"authentication failure\") |stats dc(pid) as cnt "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux操作系统审计_各个用户拥有的定时任务独立数", "output": "appname:linux tag:cron CROND  |stats dc(command) as count_ by user  "}
{"input": "索引可用字段有：vmware.level, vmware.module, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "虚拟机_vmware_主机数", "output": "appname:vmware | stats dc(vmware.host) as cnt"}
{"input": "", "instruction": "vsphere_esxi存储数量", "output": "appname:vsphere tag:vsphere source:Datastore* |stats dc(name) as cnt"}
{"input": "", "instruction": "vsphere_esxi虚拟机数量", "output": "appname:vsphere tag:vsphere source:VirtualMachine* |stats dc(name) as cnt"}
{"input": "", "instruction": "vsphere_esxi宿主机数量", "output": "appname:vsphere tag:vsphere source:HostSystem* |stats dc(host) as cnt"}
{"input": "mongodb客户端连接数_ip去重。索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb \"connection accepted from\"| stats dc(mongodb.src_ip) as count1"}
{"input": "redis服务器数量。索引可用字段有：redis.action, redis.level, redis.mem_fragmentation_ratio, redis.redis_version, redis.role, redis.total_system_memory_human, redis.type, redis.used_memory_peak_human, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:sentinel | stats dc(redis.myid) as cnt"}
{"input": "今日登录用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" |stats dc(vpn.user)"}
{"input": "今日登录失败用户数。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"now/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\" |stats dc(vpn.user)"}
{"input": "middleware_tomcat_独立访客数UV。索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_tomcat_数据，编写查询语句实现如下分析场景", "output": "appname:middleware tag:tomcat |stats dc(middleware.src_ip) as count_"}
{"input": "主机数。索引可用字段有：vmware.level, vmware.module, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "虚拟机_vmware_数据，编写查询语句实现如下分析场景", "output": "appname:vmware | stats dc(vmware.host) as cnt"}
{"input": "保单个数。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:glory) |stats dc(glory.printno) "}
{"input": "独立访客数UV。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "middleware_microsoft_iis_数据，编写查询语句实现如下分析场景", "output": "appname: middleware tag:iis |stats dc(middleware.src_ip) as count_"}
{"input": "独立访客数UV。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats dc(tomcat.src_ip) as cnt"}
{"input": "独立访客数。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx |stats dc(nginx.src_ip) as cnt"}
{"input": "PV。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|stats dc(middleware.src_ip.geo.ip)"}
{"input": "独立访客数UV。索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access |stats dc(middleware.clientip) as count_"}
{"input": "独立访客数UV。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic tag:access |stats dc(middleware.clientip) as count_"}
{"input": "最近十分钟在线用户。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"-10m\" appname:linux tag:who|stats dc(linux.terminal) as cnt"}
{"input": "audit用户删除事件，按 ppid 计算去重数。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) )AND (( linux.event_detail.key:USER_CHANGED AND (linux.event_detail.comm:userdel OR linux.command:userdel)) OR linux.event_type:ADD_USER)| stats dc(linux.event_detail.ppid) as num"}
{"input": "audit创建用户事件，按 ppid 计算去重数。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) ) AND ( linux.event_detail.key:USER_CHANGED AND (linux.event_detail.comm:useradd OR linux.command:useradd) OR linux.event_type:ADD_USER)| stats dc(linux.event_detail.ppid) as num"}
{"input": "用户拥有定时任务数量。索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:crond) OR (appname:linux \"CROND\") |stats dc(linux.command) as cnt by linux.user"}
{"input": "vpn_leadsec_用户数量。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec_user | stats dc('vpn.用户') as cnt"}
{"input": "docker_正在运行容器数量。", "instruction": "docker性能数据，编写查询语句实现如下分析场景", "output": "appname:docker_metric  AND (hostname:* AND ip:*) | stats dc(hostname) as cnt"}
{"input": "各地区卡顿人数占比。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.UserId.area_code_dec"}
{"input": "卡顿人数。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats dc(stb.kvmsg.UserId.user_account) as count_"}
{"input": "网络接入卡顿人数，可以算userid的独立数。索引可用字段有：stb.area_code_dec, stb.kvmsg.UserId.area_code_dec, stb.kvmsg.cmd, stb.kvmsg.logtype_dec, stb.kvmsg.networktype_dec, stb.loss, stb.reporttype_dec, stb.user_account, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats dc(stb.kvmsg.UserId.user_account) as count_ by stb.kvmsg.networktype_dec"}
{"input": "监控主机数。索引可用字段有：uninxg.iopttype, uninxg.iresulttype, uninxg.log_type, uninxg.srcfile, uninxg.targetfile, uninxg.termip, uninxg.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft  | stats dc(uninxg.termip)  as dct"}
{"input": "定时任务数量。", "instruction": "symantec_mail_gateway数据，编写查询语句实现如下分析场景", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:cron* OR mg.module:CRON* |stats dc(mg.command) as cnt "}
{"input": "感染病毒主机数。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:ruixing | stats dc(antivirus.dst_ip) as dct"}
{"input": "定时任务数。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista (NOT switch.severity:*)  crond | stats dc(switch.cmd) as cnt"}
{"input": "受到威胁种类数量。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* |stats dc(antivirus.threat_name) as cnt "}
{"input": "监控主机数量。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats dc(antivirus.dst_ip) as cnt "}
{"input": "BI登录人数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:bi AND 'tag':login | stats dc(csv.username) as ct"}
{"input": "OA登录人数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:oa tag:login | stats dc(csv.FD_OPERATOR) as ct  "}
{"input": "OA操作次数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:oa tag:app | stats dc(csv.FD_OPERATOR) as ct  "}
{"input": "已修复的高危漏洞。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus  anti.type:*高危* anti.action:漏洞修复成功|stats dc(anti.name) as cnt "}
{"input": "未修复或忽略的高危漏洞。索引可用字段有：antivirus.action, antivirus.domain, antivirus.dst_host, antivirus.dst_ip, antivirus.file, antivirus.file_name, antivirus.file_path, antivirus.host, antivirus.os, antivirus.path, antivirus.result, antivirus.threat_name, antivirus.virus_name, antivirus.virus_type, antivirus_gateway.direction, antivirus_gateway.event_level, antivirus_gateway.host_name, antivirus_gateway.proto, antivirus_gateway.risk_name, antivirus_gateway.sid, antivirus_gateway.src_ip, antivirus_gateway.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus  anti.type:*高危* NOT anti.action:漏洞修复成功|stats dc(anti.name) as cnt "}
{"input": "核心系统，名为 cbv7。已知交易唯一流水号字段为cbv7.reqSeq。", "instruction": "查询银行某系统的交易量", "output": "appname:cbv7 cbv7.reqSeq:* | stats dc(cbv7.reqSeq) as _dc"}
{"input": "核心系统，名叫flexcube。已知交易唯一流水号字段为flexcube.reqSeq。", "instruction": "查询银行某系统的交易量", "output": "appname:flexcube flexcube.reqSeq:* | stats dc(flexcube.reqSeq) as _dc"}
{"input": "核心系统，叫做 cbs。已知交易唯一流水号字段为cbs.reqSeq。", "instruction": "查询银行某系统的交易量", "output": "appname:cbs cbs.reqSeq:* | stats dc(cbs.reqSeq) as _dc"}
{"input": "核心系统，名字是 hxxt。已知交易唯一流水号字段为hxxt.reqSeq。", "instruction": "查询银行某系统的交易量", "output": "appname:hxxt hxxt.reqSeq:* | stats dc(hxxt.reqSeq) as _dc"}
{"input": "核心系统，名字是 ncbs。已知交易唯一流水号字段为ncbs.reqSeq。", "instruction": "查询银行某系统的交易量指标", "output": "appname:ncbs ncbs.reqSeq:* | stats dc(ncbs.reqSeq) as _dc"}
{"input": "核心系统，叫 nps。已知交易唯一流水号字段为nps.reqSeq。", "instruction": "查询银行某系统的交易量指标", "output": "appname:nps nps.reqSeq:* | stats dc(nps.reqSeq) as _dc"}
{"input": "核心系统，叫 xhxt。已知交易唯一流水号字段为xhxt.reqSeq。", "instruction": "查询银行某系统的交易量指标", "output": "appname:xhxt xhxt.reqSeq:* | stats dc(xhxt.reqSeq) as _dc"}
{"input": "柜面前端系统。已知交易唯一流水号字段名为ntfs.id。", "instruction": "查询银行某系统的交易量指标", "output": "appname:ntfs tag:abs | stats dc(ntfs.id) as _dc"}
{"input": " 前端柜面系统，系统名 gm。已知交易唯一流水号字段名为gm.id。", "instruction": "查询银行某系统的交易量指标", "output": "appname:gm tag:abs | stats dc(gm.id) as _dc"}
{"input": " 前端柜面系统，系统名 GTS。已知交易唯一流水号字段名为gts.id。", "instruction": "查询银行某系统的交易量指标", "output": "appname:gts tag:abs | stats dc(gts.id) as _dc"}
{"input": " 前端柜面系统，系统名 xgmxt。已知交易唯一流水号字段名为xgmxt.id。", "instruction": "查询银行某系统的交易量", "output": "appname:xgmxt tag:abs | stats dc(xgmxt.id) as _dc"}
{"input": " 前端柜面系统，系统名 nfts。已知交易唯一流水号字段名为nfts.id。", "instruction": "查询银行某系统的交易量", "output": "appname:nfts tag:abs | stats dc(nfts.id) as _dc"}
{"input": "", "instruction": "我想问的是有多少人在使用 tuxedo 这个标签的 CBV7 app? ", "output": "appname:cbv7 tag:tuxedo cbv7.reqSeq:* | stats dc(cbv7.reqSeq) as _dc"}
{"input": "", "instruction": "我想问的是有多少人在使用 NTFS 文件系统，并且标记为 `abs`（绝对路径）的情况吗？", "output": "appname:ntfs tag:abs | stats dc(ntfs.id) as _dc"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有没有人访问过这个 middleware 服务的 tomcat 页面呢？如果有的话，那他们大概从哪些 IP 地址访问过来的？", "output": "appname:middleware tag:tomcat |stats dc(middleware.src_ip) as count_"}
{"input": "", "instruction": "我想问的是的访问量有多高啊，你能不能把这些数据统计一下呀？", "output": "appname:cbv7 cbv7.reqSeq:* | stats dc(cbv7.reqSeq) as _dc"}
{"input": "", "instruction": "我想要知道有多少条请求数据。请帮我把这个统计结果打印出来。", "output": "appname:cbs cbs.reqSeq:* | stats dc(cbs.reqSeq) as _dc"}
{"input": "", "instruction": "我想要知道你们网站的访问量有多少，并且以列表形式展示出来。", "output": "appname:xhxt xhxt.reqSeq:* | stats dc(xhxt.reqSeq) as _dc"}
{"input": "", "instruction": "我想问的是有没有人使用过 gm 这个 app，并且带上了 abs 标签的行为数据吗？你能不能把结果展示给我看一下？", "output": "appname:gm tag:abs | stats dc(gm.id) as _dc"}
{"input": "索引可用字段有：esxi.action, esxi.cpu, esxi.log_level, esxi.metric, esxi.pid, esxi.run_cmd, esxi.src_ip, esxi.sys_time, esxi.tags.host, esxi.user, esxi.user_agent, esxi.valude, esxi.value, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想搜索包含“appname: esxi”和“tag: syslog”两个关键词的日志？", "output": "(appname:esxi AND tag:syslog)  crond | stats dc(esxi.command) as dct"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 fortress 这个应用中，有多少个包含 safety 标签的键值对？你可以把这些结果进行汇总计算，并返回数量最多的一条记录的值。", "output": "appname:fortress tag:safety  | stats dc('fortress.kv.会话标识') as cnt"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 fortress 中 safety 标签下的用户数量有多少。", "output": "appname:fortress tag:safety  | stats dc('fortress.user') as cnt"}
{"input": "索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问关于 Linux sshd 服务的登录失败事件的信息。", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats dc(ip) as ct"}
{"input": "索引可用字段有：audit.MACHINE, audit.OSUSER, audit.PROGRAM, audit.SQL_ID, audit.SQL_TEXT, audit.USERNAME, audit.command, audit.msg.cmd, audit.msg.command, audit.msg.exec_time, audit.msg.info, audit.msg.path, audit.msg.pid, audit.msg.pwd, audit.msg.rhost, audit.msg.ruser, audit.msg.ser, audit.msg.src_ip, audit.msg.src_port, audit.msg.user, audit.up_time, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我查找关于SSH登录成功的审计信息。你可以把这些结果汇总并计算出不同IP地址出现的次数吗？", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats dc(ip) as ct"}
{"input": "索引可用字段有：exchange.client_hostname, exchange.clientip.geo.ip, exchange.dst.geo.city, exchange.dst.geo.country, exchange.dst_ip, exchange.event_id, exchange.message_subject, exchange.recipient_address, exchange.recipient_count, exchange.recipient_status, exchange.sender_address, exchange.server_hostname, exchange.source, exchange.src_ip, exchange.status, exchange.total_bytes, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 appname 为 exchange, tag 为 front 的时候，统计各个用户的登录数量。请问您需要什么样的信息呢？", "output": "appname:exchange tag:front   |stats dc(exchange.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道有哪些用户使用了 VPN 服务并访问了这个应用。", "output": "appname:vpn tag:array | stats dc(vpn.kv.user)"}
{"input": "索引可用字段有：middleware.Error_info, middleware.System_errinfo, middleware.System_errno, middleware.actconn, middleware.action, middleware.backend_queue, middleware.beconn, middleware.clientip, middleware.desc, middleware.dst_ip, middleware.error_level, middleware.error_no, middleware.event_name, middleware.event_type, middleware.feconn, middleware.func_no, middleware.geo.city, middleware.geo.isp, middleware.geo.province, middleware.http_hostname, middleware.http_method, middleware.http_referer, middleware.http_user_agent.browser, middleware.http_user_agent.os, middleware.level, middleware.message, middleware.method, middleware.middleware.nursery_free_after, middleware.module, middleware.msg, middleware.nursery_free_before, middleware.nursery_total, middleware.referer, middleware.referrer, middleware.req_time, middleware.request, middleware.request_method, middleware.request_path, middleware.request_status, middleware.response, middleware.response_code, middleware.retries, middleware.rsp, middleware.server, middleware.severity, middleware.src.geo.country, middleware.src.geo.isp, middleware.src_ip, middleware.src_ip.geo.city, middleware.srv_conn, middleware.srv_queue, middleware.status, middleware.subsystem, middleware.tc, middleware.tenure_free_after, middleware.tenure_free_before, middleware.thread, middleware.tt, middleware.tw, middleware.type, middleware.ua.browser, middleware.ua.device, middleware.ua.os, middleware.uri_query, middleware.uri_stem, middleware.url, middleware.zkmsg.zk_followers, middleware.zkmsg.zk_packets_received, middleware.zkmsg.zk_packets_sent, middleware.zkmsg.zk_server_state, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有多少个请求的源 IP。字段名是 middleware.src_ip", "output": "appname:middleware tag:iis |stats dc(middleware.src_ip) as count_"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道有多少人在使用 Linux 命令行界面。你能告诉我吗？", "output": "appname:linux tag:who|stats dc(linux.terminal) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，系统中有哪些进程每分钟执行次数最多的？可以按用户列出统计结果吗？如果没有找到，那就返回空列表吧。", "output": "appname:linux tag:crond|stats dc(linux.command) as cnt by linux.user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "统计`linux`用户在执行的命令数量分布情况。", "output": "appname:linux CROND |stats dc(linux.cmd) as count_ by linux.user "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是系统中有哪些 crond 服务的用户正在运行哪些命令，可以把结果按 command 分组并计算出各个 command 执行次数最多的那个 command 是什么吗？", "output": "(appname:linux tag:crond)  |stats dc(command) as ct by user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道 Linux 用户在访问网站时，从哪些 IP 地址下载数据。", "output": "appname:linux  |stats dc(ip) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我进行 Linux 系统中关于安全相关的日志分析，并寻找有关某用户在某个时间段内进行了多少次登录成功的情况。", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |stats dc(pid) as cnt by user"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道的是，在 Linux 下，通过命令行添加、修改或删除用户和组的操作，都有哪些呢？你能帮我列出它们吗？", "output": "appname:linux tag:secure (type:useradd OR type:passwd OR type:usermod OR type:groupadd OR type:gpasswd OR type:groupmod) |stats dc(pid) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我分析一段安全审计报告中的一条记录：`appname: linux, tag: secure, event name: 用户登录成功`。 然后计算 Linux 系统中使用 `Accepted password` 命令进行密码验证的进程数量。", "output": "appname:linux tag:secure event_name:登录成功事件 \"Accepted password for\" |stats dc(pid) as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我设计一个查询语句，用于统计在 Linux 系统上发生的安全性问题（如登录失败）的数量。我的理解是：1. 需要从 appname 中筛选出值为 linux 的记录；2. 从标签中筛选出 secure 和 event_name 为 “登录失败事件” 的记录；3. 使用正则表达式“Failed password for\" 或 \"authentication failure\" 来匹配错误信息字段；4. 对符合条件的记录进行计数并将结果保存到变量 cnt 中；5. 使用函数 stats 函数对 cnt 进行直方图计算，得到结果。", "output": "appname:linux tag:secure AND event_name:登录失败事件 (\"Failed password for\"  OR \"authentication failure\") |stats dc(pid) as cnt "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道有多少用户在使用 cron 命令。请帮我把这个统计结果打印出来。", "output": "appname:linux tag:cron CROND  |stats dc(command) as count_ by user  "}
{"input": "索引可用字段有：vmware.level, vmware.module, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问你有关 VMware 虚拟机的主机数量统计信息。请告诉我这些信息。", "output": "appname:vmware | stats dc(vmware.host) as cnt"}
{"input": "", "instruction": "我想要知道有多少台虚拟机在运行VSphere的主机上。请帮我把这些信息统计一下。", "output": "appname:vsphere tag:vsphere source:HostSystem* |stats dc(host) as cnt"}
{"input": "索引可用字段有：mongodb.action, mongodb.component, mongodb.cost, mongodb.desc, mongodb.msg, mongodb.namespace, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关 MongoDB 应用的某些信息，并希望通过分析其源 IP（Internet Protocol）地址的数据来获取有关该应用的信息。", "output": "appname:mongodb \"connection accepted from\"| stats dc(mongodb.src_ip) as count1"}
{"input": "索引可用字段有：vmware.level, vmware.module, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，在 vmware 中有多少台主机？你可以把这个统计结果打印出来吗？", "output": "appname:vmware | stats dc(vmware.host) as cnt"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道，访问中间件服务的 IP 地址数量分布情况。", "output": "appname: middleware tag:iis |stats dc(middleware.src_ip) as count_"}
{"input": "", "instruction": "我想问的是 tomcat 服务的访问量统计？", "output": "appname:pf_tomcat |stats dc(tomcat.src_ip) as cnt"}
{"input": "", "instruction": "我想问的是 nginx 这个服务的访问量分布情况", "output": "appname:pf_nginx |stats dc(nginx.src_ip) as cnt"}
{"input": "", "instruction": "帮我分析访问日志中 middleware.clientip 字段的去重数统计结果吧？", "output": "appname:weblogic tag:access |stats dc(middleware.clientip) as count_"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道用户删除和添加的情况。", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) )AND (( linux.event_detail.key:USER_CHANGED AND (linux.event_detail.comm:userdel OR linux.command:userdel)) OR linux.event_type:ADD_USER)| stats dc(linux.event_detail.ppid) as num"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，系统中有哪些程序属于用户 crond 执行的吗？请列举出所有执行命令最多的前五个。", "output": "(appname:linux tag:crond) OR (appname:linux \"CROND\") |stats dc(linux.command) as cnt by linux.user"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 VPN 用户的数量，所以应该是 `count(distinct vpn.用户)` 吧？这个结果更准确些。", "output": "appname:vpn tag:leadsec_user | stats dc('vpn.用户') as cnt"}
{"input": "", "instruction": "我想问的是 docker_metric 这个应用的主机名和 IP 是什么样的", "output": "appname:docker_metric  AND (hostname:* AND ip:*) | stats dc(hostname) as cnt"}
{"input": "", "instruction": "我想询问以下信息：- 查询 appname=antivirus_gateway 和 tag=officescan 中存在的 antivirus.threat_name 字段的统计数据，并将结果按出现次数降序排列；- 将该数据的 count（即数量）作为每个 threat_name 的值，生成 name、count 对的 JSON 数据。", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* |stats dc(antivirus.threat_name) as cnt "}
{"input": "", "instruction": "我想询问如何在日志易中使用搜索语言进行 IP 活跃度分析。这条 SPL 查询首先从你的 Anti-Virus Gateway 应用和 OfficeScan 报告日志索引中检索数据。然后通过关键字搜索筛选出包含 `appname:\"antivirus gateway\"`、tag=`\"officescan\"` 和 `antivirus.domain:*` 的记录。最后，它使用时间图表将每个 IP address 的活动计数聚合为一小时粒度的数据点。", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats dc(antivirus.dst_ip) as cnt "}
{"input": "", "instruction": "通过 appname: oa 和 tag: login 来统计 csv.FD_OPERATOR 的数量。", "output": "appname:oa tag:login | stats dc(csv.FD_OPERATOR) as ct  "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我在询问的是最近一段时间内，用户添加、修改等相关的安全事件数量。", "output": "appname:linux tag:secure (type:useradd OR type:passwd OR type:usermod OR type:groupadd OR type:gpasswd OR type:groupmod) |stats dc(pid) as cnt"}
{"input": "索引可用字段有：fortress.action, fortress.dst_ip, fortress.facility, fortress.host_ip, fortress.input, fortress.ip, fortress.level, fortress.log_type, fortress.loginOK, fortress.login_user, fortress.message, fortress.msg.action, fortress.msg.adlg_type, fortress.msg.begin_time, fortress.msg.command, fortress.msg.date, fortress.msg.mode, fortress.msg.module, fortress.msg.session_guid, fortress.msg.src_ip, fortress.msg.srcip, fortress.msg.srvaddr, fortress.msg.system_user, fortress.msg.sysuser, fortress.node, fortress.protocol, fortress.reason, fortress.remote_addr, fortress.request_msg, fortress.result, fortress.secondary_user, fortress.server, fortress.severity, fortress.src_ip, fortress.src_port, fortress.status, fortress.system_user, fortress.type, fortress.user, fortress.user_agent, fortress.user_name, fortress.username, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在过去一天内使用 fortress 应用的用户有多少次访问了 safety 标签的页面。", "output": "starttime=\"now/d\" appname:fortress tag:safety  | stats dc('fortress.kv.会话标识') as cnt"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问今天有多少用户在使用 SANGFOR VPN 服务时登录失败了。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某一天的 Sangfor VPN 服务登录用户数量的信息", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问有关某一天的 Sangfor VPN 服务登录用户数量的信息，具体日期为今天（即“now/d”）。此外，您还要求在搜索结果中过滤出使用了“VPN”应用、具有“Sangfor”标记以及执行了“登录”或“连接”操作类型的 VPN 用户。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问的是 VPN（虚拟私人网络）登录失败的用户数量和次数。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是今天有多少人使用Sangfor VPN登录了系统，并不是总共有多少人使用过VPN。所以这条查询语句不符合我的需求。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 VPN 服务商 SANGFOR 有没有出现异常登录的情况，发生在最近一天（从 now-1d 开始到 now）", "output": "starttime=\"now-1d\" endtime=\"now\" appname:vpn tag:sangfor (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道从今天开始到现在，使用SANGFOR的VPN登录的用户数量有多少。请帮我把这些信息统计一下。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor vpn.actype:login| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 VPN 登录失败的用户数量统计在一天内有多少个，并且按用户名进行分组。", "output": "starttime=\"now/d\" appname:vpn tag:sangfor_0trust vpn.event_name:login vpn.result:FAILED| stats dc(vpn.user_name) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问如何编写一个搜索VPN登录用户数量的查询语句。", "output": "starttime=\"now/d\" appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| stats dc(vpn.login_user) as cnt "}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想寻找与 Cisco AnyConnect VPN 有关的登录和认证事件的统计信息。", "output": "starttime=\"now/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" |stats dc(vpn.user)"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是思科 VPN 用户在使用过程中发生的认证失败情况", "output": "starttime=\"now/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\" |stats dc(vpn.user)"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在过去十分钟内使用 Linux 系统的用户在终端中输入了多少条命令。", "output": "starttime=\"-10m\" appname:linux tag:who|stats dc(linux.terminal) as cnt"}
