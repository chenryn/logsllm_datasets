{"input": "以 gaps.processid 作为关联交易 id 做 transaction 查询，每笔交易的开始日志需包含 gaps.line 字段值为 535。", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "tag:gaps |transaction gaps.processid startswith=eval(gaps.line==535) "}
{"input": "以 gaps.processid 作为关联交易 id 做 transaction 查询，每笔交易的开始日志需包含 gaps.line 字段值为 535。最后计算交易步数分布Top10", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "tag:gaps |transaction gaps.processid startswith=eval(gaps.line==535) |top 10 _count "}
{"input": "ths_all.GDZH作为交易流水号，做 transaction 交易查询，设定一笔交易最多包括 2 条日志。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "tag:ths_all | transaction ths_all.GDZH  maxevents=2"}
{"input": "ths_all.GDZH作为交易流水号，做 transaction 交易查询，设定一笔交易最多不超过 1 分钟。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "tag:ths_all | transaction ths_all.GDZH  maxspan=1m"}
{"input": "先过滤登录登出日志，然后使用 transaction 命令，对每个 user 字段值进行串联。每个用户的记录都应该以 user logged in开始，user logged out结束。然后按 user 分组统计耗时的平均值", "instruction": "查找所有包含用户登录登出信息的日志，并计算每个用户的平均会话时长", "output": "\"user logged in\" OR \"user logged out\" | transaction user startswith=\"user logged in\" endswith=\"user logged out\" | stats avg(_duration) as avg_duration by user "}
{"input": "", "instruction": "异步交易日志，每笔交易由多条日志组成，错行打印，可以根据sid识别属于同一次交易，交易起始行有关键字start，结束行关键字end。", "output": "* | transaction sid startswith=\"start\" endswith=\"end\" "}
{"input": "", "instruction": "异步交易日志，每笔交易由多条日志组成，错行打印，可以根据sid识别属于同一次交易，交易起始行有关键字start，结束行关键字end。统计一天的平均交易耗时", "output": "starttime=\"-1d\" start OR end | transaction sid startswith=\"start\" endswith=\"end\" | stats avg(_duration) "}
{"input": "耗时最高的20笔交易。分别过滤 epay.action 为应答和请求的两类日志，使用epay.request.externalRefNumber串联到一起，然后按耗时排序，取前 20 条记录", "instruction": "支付聚合_epay数据，编写查询语句实现如下分析场景", "output": "tag:epay (epay.action:应答 OR epay.action:请求) epay.response.externalRefNumber:* \n| transaction epay.response.externalRefNumber | sort by duration |limit 20 "}
{"input": "", "instruction": "我想知道有关每笔事务的详细信息，它的流水号是SID，事务以“start”关键字开头并以“end”关键字结尾。", "output": "* | transaction sid startswith=\"start\" endswith=\"end\" "}
{"input": "", "instruction": "我想知道最近两周有哪些订单状态为“应答”或者“请求”的，并且返回结果中包含了外部交易号，并按时序排序，最多只显示前二十条记录。", "output": "tag:epay (epay.action:应答 OR epay.action:请求) epay.response.externalRefNumber:* | transaction epay.response.externalRefNumber | sort by duration |limit 20 "}
{"input": "从文件名包含*1226*.log的日志中，使用 transaction 命令串联交易，要求每笔交易的第一条日志中 gaps.line 字段值等于 535。然后过滤耗时最高的10笔交易，展示交易 ID、交易耗时和交易步数。索引可用字段有：gaps.processid,gaps.req,gaps.line,gaps.pub,gaps.duration,gaps.msg,appname,tag,source,hostname,ip,timestamp。请仅使用需要的字段。", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "tag:gaps source:*1226*.log |transaction gaps.processid startswith=eval(gaps.line==535) |eval _duration=tolong(_duration)|sort by -_duration |limit 10 "}
{"input": "最近一小时交易请求耗时趋势。具体方法为：1. 搜索最近1 小时的 ths_all 标签日志；2. 使用唯一流水号ths_all.GDZH串联transaction交易查询，设定 transaction参数为最大时间间隔 1 分钟，最大事件数 2 条；3. 仅保留耗时在 2000 毫秒以下的交易；4. 按每 1 分钟做时间分桶，使用 transaction 命令自动生成的 min_timestamp 字段；5. 按时间分桶计算耗时的平均值", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "starttime=\"-1h\" tag:ths_all | transaction ths_all.GDZH maxspan=1m maxevents=2|where _duration<2000\n|bucket min_timestamp  span=1m as ts\n|stats avg(_duration) as cost by ts"}
{"input": "按每分钟分桶统计所有交易的pct75分位耗时趋势。唯一流水号字段为 ths_all.GDZH，一笔交易最多包括 10 个事件", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "tag:ths_all | transaction ths_all.GDZH maxevents=10\n|bucket min_timestamp  span=1m as ts\n|stats pct(_duration, 75) as cost by ts"}
