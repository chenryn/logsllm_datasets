{"input": "", "instruction": "linux_定时任务清单，表格展示 ip、user 和 command 字段", "output": "tag:crond event_name:定时任务列表 \"*\" |table ip,user,command"}
{"input": "Nginx.url_request.url_Mod:WebPMP  NOT (Nginx.url:/WebPMP/Main.aspx\\?thUrl*) | table Nginx.url_request.Url_Path,Nginx.request_time,Nginx.url", "instruction": "需要过滤掉Nginx.url字段中以“/WebPMP/Main.aspx”开头的数据，以下语句为什么不行？", "output": "该语句虽然对特殊字符/和?都使用\\转义，取消字符的特殊意义，但Nginx.url字段值长度超过512 字节，会触发索引配置模板中的 ignore_above 限制，没有倒排可用于查询。因此无法命中数据"}
{"input": "Nginx.url_request.url_Mod:WebPMP  NOT Nginx.url:*/WebPMP/Main.aspx\\?thUrl* | table Nginx.url_request.Url_Path,Nginx.request_time,Nginx.url", "instruction": "需要过滤掉Nginx.url字段中以“/WebPMP/Main.aspx”开头的数据，以下语句为什么不行？", "output": "该语句虽然前后加*以通配的方式进行过滤，但Nginx.url字段值长度超过512 字节，会触发索引配置模板中的 ignore_above 限制，没有倒排可用于查询。因此无法命中数据"}
{"input": "", "instruction": "我想问的是，最近五天内，有多少人访问了这个网站。请帮我修改一下查询语句，只显示这 5 条结果中的第一列（IP 地址）的数据。", "output": "starttime=\"-5d\" * |stats count() by ip  | limit 5 | table ip"}
{"input": "", "instruction": "我想问的是 crontab 中有哪些定时任务，可以列出所有的IP地址、用户和对应的命令吗？", "output": "tag:crond event_name:定时任务列表 \"*\" |table ip,user,command"}
{"input": "Administrator用户账户管理详情，找到其中 event_id 为 4624 的日志，列出时间，json.username, json.keywords, json.message.event各列", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "Administrator \nappname:windows tag:security json.event_id:4624 \n| table timestamp, json.username, json.keywords, json.message.event"}
{"input": "AD终端服务-本地会话管理记录，列出时间和 json.message.event 字段", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:ts_lsm \n| table timestamp, json.message.event"}
{"input": "", "instruction": "我想知道 Windows 系统的安全事件中有没有与关键字“关键文件”相关的信息。你能告诉我最近三天发生过哪些与此类信息有关的安全事件吗？", "output": "Administrator appname:windows tag:security json.event_id:4624 | table timestamp, json.username, json.keywords, json.message.event"}
{"input": "", "instruction": "我想要知道 Windows 下的系统事件中有关 lsm 的所有信息，包括时间和具体的信息内容。", "output": "appname:windows tag:ts_lsm | table timestamp, json.message.event"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "访问时长大于3s的页面列表", "output": "appname:apache apache.resp_time:>3 | table timestamp, apache.clientip, apache.request_path, apache.resp_time | sort by -apache.resp_time"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "获取web服务一小时内所有的4XX与5XX状态码的URI", "output": "starttime=\"now-1h\" appname:apache AND (apache.status:>=400 AND apache.status:<=599) | table timestamp, apache.request_path, apache.status"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux_定时任务执行明细查询，表格列出时间、IP、用户名和命令字段", "output": "appname:linux tag:crond event_name:定时任务事件 |table timestamp,ip,user,command "}
{"input": "cisco_nexus端口速率变化情况。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND operational speed changed  |table switch.time,switch.log_type,switch.ethernet,switch.speed"}
{"input": "cisco_nexus配置管理人员记录。索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND \"Configured\" |table switch.time,switch.log_type,switch.user,switch.IP,switch.terminal"}
{"input": "实时管理操作监控。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:mgmt|table firewall.time,firewall.pri_cn,firewall.user,firewall.src_ip,firewall.recorder,firewall.msg,firewall.result"}
{"input": "vpn_leadsec_用户使用详情。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec_user \n| table  'vpn.用户','vpn.流量','vpn.在线时间'"}
{"input": "vpn_leadsec_服务详情。索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec_service | table 'vpn.服务名','vpn.访问次数','vpn.上行流量','vpn.下行流量'"}
{"input": "DELINK日志分析。", "instruction": "CitrixNetscaler日志数据，编写查询语句实现如下分析场景", "output": "((* AND appname:citrix) AND tag:netscaler) AND 'netscaler.action':CONN_DELINK \n|table netscaler.content.Delink_Time,netscaler.content.Source\t,netscaler.content.NatIP\t,netscaler.content.Destination\t,netscaler.content.Vserver\t,netscaler.content.Total_bytes_send\t,netscaler.content.Total_bytes_recv\t"}
{"input": "FTPTELNET断链。", "instruction": "CitrixNetscaler日志数据，编写查询语句实现如下分析场景", "output": "((* AND appname:citrix) AND tag:netscaler) AND 'netscaler.action':OTHERCONN_DELINK \n|table netscaler.content.Delink_Time,netscaler.content.Source\t,netscaler.content.NatIP\t,netscaler.content.Destination\t,netscaler.content.Vserver\t,netscaler.content.Total_bytes_send\t,netscaler.content.Total_bytes_recv\t"}
{"input": "证投融资一体化平台用户操作明细表格，展示时间、用户名、模块和csv.remark,csv.flag等列。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:zqtz * | table timestamp,csv.username,csv.remark,csv.module,csv.flag"}
{"input": "实时管理操作监控。索引可用字段有：firewall.action, firewall.alarm_ip, firewall.app, firewall.app_name, firewall.app_type, firewall.appcat, firewall.application_type, firewall.apprisk, firewall.attack, firewall.attack_message, firewall.attack_name, firewall.brief, firewall.dip, firewall.dst.geo.city, firewall.dst.geo.country, firewall.dst.geo.ip, firewall.dst.geo.province, firewall.dst.geo.latitude, firewall.dst.geo.longitude, firewall.dst_ip, firewall.dst_port, firewall.dst_zone, firewall.dup_add, firewall.event_level, firewall.event_name, firewall.event_type, firewall.facility, firewall.flow.application, firewall.flow.dst_ip.geo.city, firewall.flow.policy, firewall.flow.proto, firewall.fw_ip, firewall.grade, firewall.host, firewall.ingress_if, firewall.interface, firewall.kv.proto, firewall.kv.rule, firewall.level, firewall.locip, firewall.log_level, firewall.message, firewall.mod, firewall.module, firewall.msg, firewall.msg.CloseReason, firewall.msg.PolicyName, firewall.msg.RcvBytes, firewall.msg.SendBytes, firewall.msg.action, firewall.msg.command, firewall.msg.description, firewall.msg.dst_addr.geo.city, firewall.msg.dst_addr.geo.latitude, firewall.msg.dst_addr.geo.longitude, firewall.msg.dst_port, firewall.msg.fw, firewall.msg.method, firewall.msg.msg, firewall.msg.op, firewall.msg.pri, firewall.msg.proto, firewall.msg.reason, firewall.msg.result, firewall.msg.rule, firewall.msg.src_addr.geo.city, firewall.msg.src_addr.geo.country, firewall.msg.src_addr.geo.latitude, firewall.msg.src_addr.geo.longitude, firewall.msg.user, firewall.op, firewall.policy, firewall.policy_id, firewall.pri, firewall.pri_cn, firewall.proto, firewall.rcvd_pkt, firewall.reason, firewall.receive_byte, firewall.recorder, firewall.rem_ip.geo.city, firewall.rem_ip.geo.country, firewall.rem_ip.geo.province, firewall.remip, firewall.result, firewall.rule, firewall.rule_name, firewall.send_byte, firewall.sent, firewall.service, firewall.session_type, firewall.severity, firewall.severity_level, firewall.sip, firewall.source, firewall.src.geo.city, firewall.src.geo.country, firewall.src.geo.ip, firewall.src.geo.province, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.src_ip, firewall.src_port, firewall.src_zone, firewall.status, firewall.subtype, firewall.sys_info_id, firewall.sys_notify_traffic, firewall.threat_name, firewall.threat_subtype, firewall.threat_type, firewall.time, firewall.transport, firewall.type, firewall.url, firewall.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:mgmt|table firewall.time,firewall.pri_cn,firewall.user,firewall.src_ip,firewall.recorder,firewall.msg,firewall.result"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "linux最新10条错误事件明细，表格形式展示时间、IP 地址、进程 ID、事件内容，按时间排序", "output": "appname:linux tag:messages |table timestamp,ip,linux.pid,linux.msg|sort by timestamp|limit 10"}
{"input": "", "instruction": "从rzyxt中查询sink队列大小，最近一条", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 1"}
{"input": "", "instruction": "从rzyxt中查询sink队列大小，最近1条", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 1"}
{"input": "", "instruction": "从manager中查询sink队列大小，最近10条", "output": "appname:manager tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 10"}
{"input": "", "instruction": "从rzyxt中查询sink队列大小，最近5条", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 5"}
{"input": "", "instruction": "从promethus中查询sink队列大小，最近50条", "output": "appname:promethus tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 50"}
{"input": "", "instruction": "从influxdb中查询sink队列大小，最近20条", "output": "appname:influxdb tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 20"}
{"input": "", "instruction": "从rzyxt中查询task队列大小，最近一条记录", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 1 "}
{"input": "", "instruction": "从rzyxt中查询task队列大小，最近1条记录", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 1 "}
{"input": "", "instruction": "从rzyxt中查询task队列大小，最近10条记录", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 10 "}
{"input": "", "instruction": "从rzyxt中查询task队列大小，最近50条记录", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 50 "}
{"input": "", "instruction": "从rzyxt中查询Logiver的FGC次数最近一条监控指标", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1"}
{"input": "", "instruction": "从rzyxt中查询Logiver的FGC次数最近1条监控指标", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1"}
{"input": "", "instruction": "从manager中查询Logiver的FGC次数最近50条监控指标", "output": "appname:manager tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 50"}
{"input": "", "instruction": "从promethus中查询Logiver的FGC次数最近10条监控指标", "output": "appname:promethus tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 10"}
{"input": "", "instruction": "从rzyxt中查询Logiver的FGC次数最近30条监控指标", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 30"}
{"input": "", "instruction": "从rzyxt中查询Logiver的FGC时间，最近一条指标", "output": "appname:rzyxt tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1 "}
{"input": "", "instruction": "从promethus中查询Logiver的FGC时间，最近1条指标", "output": "appname:promethus tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1 "}
{"input": "", "instruction": "从promethus中查询Logiver的FGC时间，最近10条指标", "output": "appname:promethus tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 10 "}
{"input": "", "instruction": "从rzyxt中查询splserver的FGC时间，最近一条的数据", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1"}
{"input": "", "instruction": "从rzyxt中查询splserver的FGC时间，最近10条的数据", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 10"}
{"input": "", "instruction": "从promethus中查询splserver的FGC时间，最近50条的数据", "output": "appname:promethus tag:splserver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 50"}
{"input": "", "instruction": "从rzyxt中查询splserver的FGC次数，最近一条记录", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1 "}
{"input": "", "instruction": "从rzyxt中查询splserver的FGC次数，最近1条记录", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1 "}
{"input": "", "instruction": "从promethus中查询splserver的FGC次数，最近50条记录", "output": "appname:promethus tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 50 "}
{"input": "", "instruction": "从manager中查询splserver的FGC次数，最近10条记录", "output": "appname:manager tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 10 "}
{"input": "", "instruction": "从rzyxt中查询splserver的FGC次数，最近100条记录", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 100"}
{"input": "", "instruction": "从rzyxt中查询wsrep_cluster_status指标，最近一次的值", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_cluster_status |limit 1"}
{"input": "", "instruction": "从rzyxt中查询wsrep_cluster_status指标，最近1次的值", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_cluster_status |limit 1"}
{"input": "", "instruction": "从manager中查询wsrep_cluster_status指标，最近10次的值", "output": "appname:manager tag:mysql_metrics *  |table wsrep_cluster_status |limit 10"}
{"input": "", "instruction": "从promethus中查询wsrep_cluster_status指标，最近100次的值", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_cluster_status |limit 100"}
{"input": "", "instruction": "从promethus中查询wsrep_cluster_status指标，最近3次的值", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_cluster_status |limit 3"}
{"input": "", "instruction": "从rzyxt中查询wsrep_incoming_addresses指标，最近一条的值", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 1"}
{"input": "", "instruction": "从rzyxt中查询wsrep_incoming_addresses指标，最近1条的值", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 1"}
{"input": "", "instruction": "从promethus中查询wsrep_incoming_addresses指标，最近2条的值", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 2"}
{"input": "", "instruction": "从promethus中查询wsrep_incoming_addresses指标，最近10条的值", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 10"}
{"input": "", "instruction": "从manager中查询wsrep_incoming_addresses指标，最近20条的值", "output": "appname:manager tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 20"}
{"input": " 最新 20 条请求实时明细。索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx |table middleware.request,middleware.clientip,middleware.status,middleware.http_hostname|limit 20"}
{"input": "最近一条日志，只看其中的子节点数。", "instruction": "zookeeper日志数据，编写查询语句实现如下分析场景", "output": "appname:zookeeper tag:zookeeper_health middleware.zkmsg.zk_followers:*|limit 1| table middleware.zkmsg.zk_followers"}
{"input": "", "instruction": "vsphere_esxi虚拟机CPU使用频率", "output": "appname:vsphere tag:vsphere source:VirtualMachine* |dedup 1 name |table name,cpu.used.mhz |sort by cpu.used.mhz "}
{"input": "", "instruction": "浪潮云宿主机内存使用详情", "output": "appname:incloud_sphere tag:host |dedup 1 host |table host,memTotal,memUsed,memPerf,memScore |sort by +host "}
{"input": "", "instruction": "浪潮云虚拟机内存使用详情", "output": "appname:incloud_sphere tag:vm memoryUsage:>50 |dedup 1 name |table vm_ip,name,memory,memoryUsage"}
{"input": "", "instruction": "浪潮云宿主机CPU使用详情", "output": "appname:incloud_sphere tag:host |dedup 1 host |table host,cpuTotal,cpuUsed,cpuPerf,cpuScore |sort by +host "}
{"input": "微投各服务耗时。索引可用字段有：glory.exectime, glory.gluri, glory.orderno, glory.printno, glory.senduri, glory.servicename, glory.threadnum, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "appname:glory web [[appname:glory 1000000798742288 |dedup 1  glory.threadnum |table glory.threadnum]] |stats count() by glory.senduri,glory.exectime\t"}
{"input": "微投关联出单中心服务。索引可用字段有：glory.exectime, glory.gluri, glory.orderno, glory.printno, glory.senduri, glory.servicename, glory.threadnum, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "appname:glory [[appname:glory 1000000798742288 |dedup 1  glory.threadnum |table glory.threadnum]] |stats count() by glory.gluri,glory.servicename"}
{"input": "微投第三方流水号串联线程号。索引可用字段有：glory.exectime, glory.gluri, glory.orderno, glory.printno, glory.senduri, glory.servicename, glory.threadnum, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "appname:glory web请求开始 [[appname:glory AND ${orderno} |dedup 1  glory.threadnum |table glory.threadnum]] |stats count() by glory.servicename |sort by +timestamp"}
{"input": "微投第三方流水号串联各服务节点。索引可用字段有：glory.exectime, glory.gluri, glory.orderno, glory.printno, glory.senduri, glory.servicename, glory.threadnum, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "微投日志数据，编写查询语句实现如下分析场景", "output": "appname:glory web请求开始 [[appname:glory AND ${orderno}  |dedup 1  glory.threadnum |table glory.threadnum]] |stats count() by glory.senduri |sort by +timestamp"}
{"input": "", "instruction": "我想要知道任务队列大小情况。", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 10 "}
{"input": "", "instruction": "我想询问访问日志中，响应时间大于等于三毫秒的所有请求记录。使用 SPL进行编写，其中包含以下几个部分：1. appname:apache：表示只检索名为“Apache”的应用生成的日志；2. apache.resp_time>:3：表示响应时间字段的值必须大于或等于3个单位的时间（比如毫秒、微妙等），即3ms；3. table timestamp, apache.clientip, apache.request_path, apache.resp_time：将timestamp、apache.clientip、apache.request_path和apache.resp_time四个字段打印到结果表格中；4. sort by -apache.resp_time：以倒序的方式对响应时间字段进行排序。所需要的信息应该包括：访问时间、客户端IP地址、请求路径以及相应时间。", "output": "appname:apache apache.resp_time:>3 | table timestamp, apache.clientip, apache.request_path, apache.resp_time | sort by -apache.resp_time"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问关于某 Linux 系统的 crond 进程产生的相关事件的信息，具体包括时间戳、 IP 地址、 用户名和命令等信息。", "output": "appname:linux tag:crond event_name:定时任务事件 |table timestamp,ip,user,command "}
{"input": "索引可用字段有：switch.IP, switch.action, switch.auth_method, switch.bandwidth, switch.brief, switch.cmd, switch.count, switch.desc, switch.desc.cmd, switch.desc.user, switch.describe, switch.ethernet, switch.event_type, switch.facility, switch.host, switch.host_ip, switch.interface_name, switch.ip, switch.kv.COMMAND, switch.kv.TTY, switch.kv.USER, switch.kvmsg.IpAddress, switch.kvmsg.UserName, switch.level, switch.log_message, switch.log_type, switch.login_method, switch.mode, switch.module, switch.port, switch.port_channel, switch.reason, switch.result, switch.severity, switch.speed, switch.src_ip, switch.src_mac, switch.state, switch.terminal, switch.time, switch.user, switch.vlan, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是，有哪些设备的交换机端口配置了 Cisco Nexus，并且记录了操作人员、登录终端和执行的时间等信息吗？", "output": "appname:switch AND tag:cisco_nexus AND \"Configured\" |table switch.time,switch.log_type,switch.user,switch.IP,switch.terminal"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想知道 VPN 用户的使用情况，包括他们使用的应用、总流量和在线时长等信息？", "output": "appname:vpn tag:leadsec_user | table  'vpn.用户','vpn.流量','vpn.在线时间'"}
{"input": "索引可用字段有：vpn.action, vpn.actor.displayName, vpn.actype, vpn.app.upstream.host, vpn.app.upstream.port, vpn.app.web.request.url, vpn.auth_dst, vpn.dst.geo.city, vpn.dst.geo.country, vpn.dst.geo.ip, vpn.dst.geo.isp, vpn.dst.geo.latitude, vpn.dst.geo.longitude, vpn.dst.geo.province, vpn.dst_ip, vpn.dst_nt_host, vpn.dst_port, vpn.event_level, vpn.event_name, vpn.kv.dst.geo.country, vpn.kv.dst.geo.latitude, vpn.kv.dst.geo.longitude, vpn.kv.msg, vpn.kv.proto, vpn.kv.src.geo.city, vpn.kv.src.geo.country, vpn.kv.src.geo.latitude, vpn.kv.src.geo.longitude, vpn.kv.user, vpn.login_user, vpn.msg, vpn.msg.virtual_ip, vpn.proto, vpn.reason, vpn.resource_name, vpn.result, vpn.seconds, vpn.src._ip, vpn.src.geo.city, vpn.src.geo.country, vpn.src.geo.ip, vpn.src.geo.isp, vpn.src.geo.latitude, vpn.src.geo.longitude, vpn.src.geo.province, vpn.src_ip, vpn.src_ip.geo.city, vpn.src_ip.geo.country, vpn.src_port, vpn.state, vpn.target.displayName, vpn.time, vpn.transport, vpn.user, vpn.user_name, vpn.vpn.login_user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "检索有关VPN应用、带有“leadsec_service”标记的事件以及相应的字段的数据。", "output": "appname:vpn tag:leadsec_service | table 'vpn.服务名','vpn.访问次数','vpn.上行流量','vpn.下行流量'"}
{"input": "", "instruction": "我想问一下最近有没有人从公司的 Citrix NetScaler 服务器中断开其他用户的连接？这类事件发生的时间和 IP 地址分别是多少？", "output": "((* AND appname:citrix) AND tag:netscaler) AND 'netscaler.action':OTHERCONN_DELINK |table netscaler.content.Delink_Time,netscaler.content.Source ,netscaler.content.NatIP ,netscaler.content.Destination ,netscaler.content.Vserver ,netscaler.content.Total_bytes_send ,netscaler.content.Total_bytes_recv "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道在 Linux 下运行的应用中，最近十条信息是什么样子的。请告诉我如何做到这一点。", "output": "appname:linux tag:messages |table timestamp,ip,linux.pid,linux.msg|sort by timestamp|limit 10"}
{"input": "", "instruction": "我想问有关 rzyxt 应用的最新日志中包含 logriver_metrics 标签且其中的 sink_queue_size 消息队列大小为 *（星号）的所有记录数？", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 1"}
{"input": "", "instruction": "帮我编写一个 日志易 查询语句，根据你的提示内容，我需要查询以下信息：1. appname=rzyxt2. tag=logriver_metrics3. sink_queue_size=*4. 以表格形式显示 sink_queue_size 数据，并限制一行数据", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 1"}
{"input": "", "instruction": "我想询问关于 LogRiver 中名为 \"manager\"、带有标签 \"logriver_metrics\" 和 \"sink_queue_size\" 的应用的最新十条记录的信息。", "output": "appname:manager tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 10"}
{"input": "", "instruction": "我想问有关 rzyxt 应用的最新日志中包含 logriver_metrics 和 sink_queue_size 两个标签且限制显示前五条记录的信息。", "output": "appname:rzyxt tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 5"}
{"input": "", "instruction": "我想问以下内容：检索包含`logriver_metrics`标签且名称以`sink_queue_size`开头的数据并只返回前50行数据。", "output": "appname:promethus tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 50"}
{"input": "", "instruction": "我想询问 appname 为 influxdb、tag 为 logriver_metrics 和 sink_queue_size 以 * 结尾的记录数量为条件的表中，sink_queue_size 字段从大到小排序后的前 20 个结果集。", "output": "appname:influxdb tag:logriver_metrics sink_queue_size:*  |table sink_queue_size |limit 20"}
{"input": "", "instruction": "我想询问最近一分钟内的某个应用名为 rzyxt、标签为 logriver_metrics 和指标名称包含 \"task_queue_size\" 的任务队列大小信息。", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 1 "}
{"input": "", "instruction": "我想要知道在 appname 为 rzyxt, tag 为 logriver_metrics 下, task_queue_size 大于等于多少的记录。", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 1 "}
{"input": "", "instruction": "我想要知道最近五十条有关“logriver_metrics”和“task_queue_size”的记录，并且只显示这两个字段的值。", "output": "appname:rzyxt tag:logriver_metrics task_queue_size:*  |table task_queue_size |limit 50 "}
{"input": "", "instruction": "我想问在 rzyxt 应用中使用 logriver 组件发送过 metrics 数据的全垃圾回收次数有多少条数据。", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1"}
{"input": "", "instruction": "我想询问关于 rzyxt 应用的性能数据，其中包含 logriver_metrics 和 gcstat_full_gc_count 两个标签的数据。您可以根据我的提示进行更精准和高效的搜索：1. 使用 appname 过滤器来获取与 rzyxt 应用关联的所有数据：`appname:rzyxt`。2. 使用 tag 过滤器来筛选出包含 logriver_metrics 和 gcstat_full_gc_count 两个标签的数据：`tag:logriver_metrics,gcstat_full_gc_count`。3. 使用 gcstat_full_gc_count 字段来排序并仅显示最新的一条记录：`gcstat_full_gc_count:*| table gcstat_full_gc_count | limit 1`。因此，您的完整查询应该为：`appname:rzyxt tag:logriver_metrics,gcstat_full_gc_count gcstat_full_gc_count:* | table gcstat_full_gc_count | limit 1`。", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1"}
{"input": "", "instruction": "我想问有关 AppName 为“Manager”且标签为 “LogRiverMetrics”的日志中，最新的 50 次 FullGC 的数量统计信息吗？", "output": "appname:manager tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 50"}
{"input": "", "instruction": "我想知道Prometheus监控中，前十条logriver 模块的Full GC指标记录详情？", "output": "appname:promethus tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 10"}
{"input": "", "instruction": "我想询问最近三十次全堆垃圾回收的数量以及它们发生的时间。这个查询涉及到两个表格：`gcstat_full_gc_count`和`table`，并且限制返回结果的条目数为30。", "output": "appname:rzyxt tag:logriver_metrics  gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 30"}
{"input": "", "instruction": "我想问在 rzyxt 应用中包含 logriver_metrics 标签的 GC 消耗时间排名前十的记录。", "output": "appname:rzyxt tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1 "}
{"input": "", "instruction": "我想询问的是关于 Prometheus 和 LogRiver Metrics 应用的 Full GC 消耗时间的信息。因此，我的回答应该是“Prometheus 和 LogRiverMetrics 应用的 Full GC 消耗时间”。", "output": "appname:promethus tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1 "}
{"input": "", "instruction": "我想要知道在 promethus 中关于 logriver_metrics 和 gcstat_full_gc_time 的最近十条数据！", "output": "appname:promethus tag:logriver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 10 "}
{"input": "", "instruction": "我想问的是，在 rzyxt 这个应用中，有没有某个服务的 full GC 消耗时间超过一分钟的情况吗？", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 1"}
{"input": "", "instruction": "我想要知道在 promethus 中关于 splserver_metrics 下的 gcstat_full_gc_time 的最近五十条数据。", "output": "appname:promethus tag:splserver_metrics gcstat_full_gc_time:*  |table gcstat_full_gc_time |limit 50"}
{"input": "", "instruction": "我想询问关于rzyxt的运行状况和性能数据，该应用被标记为“splserver_metrics”并且有关垃圾回收的信息。您可以将此信息限制为仅显示最近一次垃圾回收事件中的总次数。", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1 "}
{"input": "", "instruction": "我想问最近一分钟内 RocketMQ 消息队列的服务端接收到多少次 FullGC（垃圾回收）事件的信息。", "output": "appname:rzyxt tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 1 "}
{"input": "", "instruction": "获取所有包含“gcstat_full_gc_count”字段的记录，并对其进行限制，只显示前50条结果。", "output": "appname:promethus tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 50 "}
{"input": "", "instruction": "我想问有关日志易Manager 中关于 \"splserver_metrics\" 和 \"gcstat_full_gc_count\" 两个关键词的相关信息吗？", "output": "appname:manager tag:splserver_metrics gcstat_full_gc_count:*  |table gcstat_full_gc_count |limit 10 "}
{"input": "", "instruction": "我想问最近一分钟的 MySQL 监控数据中，有没有报告关于 appname 为 rzyxt、tag 中包含 mysql_metrics 并且返回结果只有一条数据的情况吗？", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_cluster_status |limit 1"}
{"input": "", "instruction": "获取 Prometheus 中名为 \"promethus\"、包含 \"mysql_metrics\" 标签的最近 100 行数据中的 MySQL 集群状态信息。", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_cluster_status |limit 100"}
{"input": "", "instruction": "我想问的是 MySQL 中有哪些 metrics 可以用来监控 Galera 集群的运行状况吗？你能帮我列出一些吗？", "output": "appname:rzyxt tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 1"}
{"input": "", "instruction": "我想跟踪一群 MySQL 实例的性能指标，“Prometheus”应用、带有“MySQL metrics”标签的所有时间序列数据以及其中最新的十条记录。", "output": "appname:promethus tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 10"}
{"input": "", "instruction": "我想问manager的 MySQL 性能监控数据，并要求检索最近二十条记录中的 `wsrep_incoming_address` 列的数据。", "output": "appname:manager tag:mysql_metrics *  |table wsrep_incoming_addresses |limit 20"}
{"input": "索引可用字段有：nginx.bytes, nginx.clientip, nginx.event, nginx.geo.city, nginx.geo.isp, nginx.geo.province, nginx.method, nginx.real_ip.last, nginx.request_path, nginx.request_raw.request_url, nginx.request_time, nginx.src_ip, nginx.status, nginx.upstream, nginx.uri, nginx.user_agent.browser, nginx.user_agent.device, nginx.user_agent.os, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想要知道最近的二十条访问记录，包括请求地址、客户端IP、状态码和主机名。", "output": "appname:nginx |table middleware.request,middleware.clientip,middleware.status,middleware.http_hostname|limit 20"}
{"input": "", "instruction": "我想问如何在 vCenter Server 中查询虚拟机的 CPU 使用率最高的前十名。", "output": "appname:vsphere tag:vsphere source:VirtualMachine* |dedup 1 name |table name,cpu.used.mhz |sort by cpu.used.mhz "}
{"input": "", "instruction": "我想问的是，在哪些主机上有这个服务的运行实例？并按内存使用量从大到小排列它们。", "output": "appname:incloud_sphere tag:host |dedup 1 host |table host,memTotal,memUsed,memPerf,memScore |sort by +host "}
{"input": "", "instruction": "我想问的是，最近有没有在云平台上申请过内存超过 50G 的虚拟机？如果有的话，那它们的名称、IP地址和内存使用量分别是多少？", "output": "appname:incloud_sphere tag:vm memoryUsage:>50 |dedup 1 name |table vm_ip,name,memory,memoryUsage"}
{"input": "", "instruction": "我想要知道主机的 CPU 使用率、CPU 性能和 CPU 分数，并按主机名排序。请帮我把这些信息列在一张表中。", "output": "appname:incloud_sphere tag:host |dedup 1 host |table host,cpuTotal,cpuUsed,cpuPerf,cpuScore |sort by +host "}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "帮我分析一段 Apache Web 服务器的访问日志，并寻找出现 HTTP 状态码在 400 和 599 之间（包括这两者）的所有请求路径和时间戳。", "output": "starttime=\"now-1h\" appname:apache AND (apache.status:>=400 AND apache.status:<=599) | table timestamp, apache.request_path, apache.status"}
{"input": "", "instruction": "我想要知道系统事件ID为4625的Windows应用登录失败的信息，但不想看到用户名为“*$”或“SYSTEM”的记录，同时也不想看出源IP地址和用户名称中包含星号（*）的记录，并且只想看该应用在发生该事件时使用的源IP地址以及用户名称。", "output": "appname:windows   json.event_id:4625 NOT (json.username:*$ OR json.username:SYSTEM) NOT json.src_ip:* NOT json.username:* | table json.src_ip, json.username"}
{"input": "kafka_各topic的partition数。索引可用字段有：kafka.count_partition, kafka.count_topic, kafka.event_name, kafka.event_type, kafka.lag, kafka.partition, kafka.reson, kafka.topic, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "kafka_数据，编写查询语句实现如下分析场景", "output": "appname:kafka tag:cnt_topic kafka.count_partition:*|table kafka.topic,kafka.count_partition"}
{"input": "kafka_topic数目。索引可用字段有：kafka.count_partition, kafka.count_topic, kafka.event_name, kafka.event_type, kafka.lag, kafka.partition, kafka.reson, kafka.topic, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "kafka_数据，编写查询语句实现如下分析场景", "output": "appname:kafka tag:cnt_topic There |table kafka.count_topic"}
{"input": "安恒waf安全事件提交的关键信息，表格列出timestamp,waf.src_ip,waf.src_port,waf.dst_ip,waf.dst_port,waf.method,waf.url 字段。。索引可用字段有：waf.action, waf.attack_name, waf.attack_type, waf.bytes_in, waf.cost, waf.cve_id, waf.dst_city, waf.dst_domain, waf.dst_ip, waf.dst_latitude, waf.dst_longitude, waf.dst_port, waf.error_msg, waf.event_level, waf.event_log_level, waf.event_name, waf.event_type, waf.http_method, waf.http_refer, waf.is_truncated, waf.kv.Evt_level, waf.kv.Evt_type, waf.kv.event_name, waf.kv.http_method, waf.kv.http_refer, waf.kv.http_url, waf.kv.msg, waf.kv.owasp_top, waf.kv.pri, waf.kv.severity_level, waf.kv.status, waf.kv.type, waf.level, waf.log_category, waf.message, waf.message.action, waf.message.event, waf.message.method, waf.message.policy, waf.message.src_ip.geo.ip, waf.message.src_ip.geo.province, waf.message.src_port, waf.message.status, waf.message.threaten, waf.method, waf.module, waf.msg.act, waf.msg.cs, waf.msg.policy_id, waf.msg.src.geo.country, waf.policy_name, waf.proto, waf.referer, waf.risk_level, waf.severity, waf.src.geo.city, waf.src.geo.country, waf.src.geo.ip, waf.src.geo.isp, waf.src.geo.latitude, waf.src.geo.longitude, waf.src.geo.province, waf.src_ip, waf.src_port, waf.status, waf.status_code, waf.threat_level, waf.time, waf.ua_browser, waf.ua_device, waf.ua_os, waf.uri, waf.url, waf.user_agent.browser, waf.user_agent.os, waf.website_name, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "安恒waf日志数据，编写查询语句实现如下分析场景", "output": "  (appname:waf tag:dbappsecurity)  NOT (waf.event_name:*状态*) |table timestamp,waf.src_ip,waf.src_port,waf.dst_ip,waf.dst_port,waf.method,waf.url"}
{"input": "索引可用字段有：kafka.count_partition, kafka.count_topic, kafka.event_name, kafka.event_type, kafka.lag, kafka.partition, kafka.reson, kafka.topic, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Kafka 中有哪些 topic 有 cnt_topic 这个标签？", "output": "appname:kafka tag:cnt_topic kafka.count_partition:*|table kafka.topic,kafka.count_partition"}
{"input": "索引可用字段有：kafka.count_partition, kafka.count_topic, kafka.event_name, kafka.event_type, kafka.lag, kafka.partition, kafka.reson, kafka.topic, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想问的是 Kafka 有哪些 topic 是关于用户行为的吗？如果有的话，那这些 topic 有什么特征吗？比如名称、数量、消费者数量等", "output": "appname:kafka tag:cnt_topic There |table kafka.count_topic"}
