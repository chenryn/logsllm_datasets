{"input": "", "instruction": "Nginx访问量最高的前五个IP", "output": " (tag:nginx_access)  |stats count() by 'clientip.geo.ip'  |limit 5"}
{"input": "", "instruction": "Nginx访问量最高的前十个IP", "output": " (tag:nginx_access)  |stats count() by 'clientip.geo.ip'  |limit 10"}
{"input": "", "instruction": "Varnish 访问量最高的前 10 个IP", "output": " (tag:varnish)  |stats count() by 'clientip.geo.ip'  |limit 5"}
{"input": "", "instruction": "按主机 IP 统计日志数量，取前 5 条记录", "output": " (*)  |stats count() by 'ip'  |limit 5"}
{"input": "", "instruction": "linux_定时任务最频繁主机前十", "output": "tag:crond event_name:定时任务事件 command:* |stats count() as ct by ip | limit 10"}
{"input": "", "instruction": "我想询问Nginx服务器的访问记录中，统计每个IP地址的请求次数并返回前五个最多的IP地址。", "output": " (tag:nginx_access)  |stats count() by 'clientip.geo.ip'  |limit 5"}
{"input": "", "instruction": "我想问 Varnish Cache 代理服务器的访问统计信息，并显示前五个最活跃的 IP 地址。", "output": " (tag:varnish)  |stats count() by 'clientip.geo.ip'  |limit 5"}
{"input": "mysql错误日志等级分布前 20 名。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 20"}
{"input": "mysql错误日志等级分布前 8 名。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 8"}
{"input": "mysql错误日志等级分布前 3 名。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 3"}
{"input": "访问主机或应用源IP地址TOP10。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm  (NOT fortress.type:*) AND (login) \n|stats count() as total by fortress.src_ip | limit 10"}
{"input": "AD登录次数主机TOP10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625 OR json.event_id:4624 )NOT (json.username:*$ OR json.username:SYSTEM) |stats count() by json.src_ip\n\n|limit 10"}
{"input": "AD登录失败主机TOP10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625) NOT (json.username:*$ OR json.username:SYSTEM) |stats count() by json.src_ip\n\n|limit 10"}
{"input": "windows应用事件等级分布前 5 名", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": " (appname:windows AND tag:application)  |stats count() by 'json.level'  |limit 5"}
{"input": "windows登录源端口分布前 10 名", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows 登录| stats count() as cnt by json.event_data.IpPort|limit 10"}
{"input": "Kerberos预身份验证失败IP地址前 10 名", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4771  json.keywords:审核失败 \n| stats count() by json.event_data.IpAddress \n| limit 10"}
{"input": "Kerberos预身份验证失败次数前 10 名的用户", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4771  json.keywords:审核失败 \n| stats count() by json.event_data.TargetUserName \n| limit 10"}
{"input": "AD登录次数用户TOP10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625 OR json.event_id:4624 )NOT (json.username:*$ OR json.username:SYSTEM) |stats count() as cnt by json.username | limit 10"}
{"input": "AD登录失败用户TOP10", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625 ) NOT (json.username:*$ OR json.username:SYSTEM) |stats count() as cnt by json.username | limit 10"}
{"input": "", "instruction": "我想询问 Windows 应用的登录事件 ID 为 4625，并且该事件没有由 username 字段的值包含 \"$\" 或 \"SYSTEM\"（不区分大小写）的用户触发的情况，并返回前 10 个源 IP 地址和发生次数。", "output": "appname:windows json.event_id:4625 NOT (json.username:*$ OR json.username:SYSTEM) | stats count() by json.src_ip |limit 10"}
{"input": "", "instruction": "我想要知道你的系统有哪些用户登录过。", "output": "appname:windows (json.event_id:4625 OR json.event_id:4624 )NOT (json.username:*$ OR json.username:SYSTEM) |stats count() by json.src_ip|limit 10"}
{"input": "", "instruction": "我想问的是 windows 应用的登录事件，但是不包括用户名为“*”或“系统”的用户的登录事件，并按源 IP 统计数量，返回前 10 个结果。", "output": "appname:windows (json.event_id:4625) NOT (json.username:*$ OR json.username:SYSTEM) |stats count() by json.src_ip|limit 10"}
{"input": "", "instruction": "我想问有关 Windows 应用的错误和警告数量的信息，并且希望我以表格形式列出这些信息并按严重级别进行排序。", "output": " (appname:windows AND tag:application)  |stats count() by 'json.level'  |limit 5"}
{"input": "", "instruction": "从Windows系统的登陆事件中统计每一台IP地址的数量并返回前十个数据。", "output": "appname:windows 登录| stats count() as cnt by json.event_data.IpAddress|limit 10"}
{"input": "", "instruction": "我想问的是，在 windows 下有哪些应用会产生 security 事件 id 为 4771、包含关键字 audit failure 和不包含目标用户名的情况？并返回前 10 个最常见的目标用户名称和数量。", "output": "appname:windows tag:security (json.event_id:4771 AND json.keywords:\"审核失败\") NOT json.event_data.TargetUserName:*$| stats count() by json.event_data.TargetUserName| limit 10"}
{"input": "多次登录失败用户排名前 10。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false\n| stats count() by fortress.username\n|limit 10"}
{"input": "登录失败原因排名前 10。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false\n| stats count() by fortress.reason\n |limit 10"}
{"input": "登录UA分布前 10 名。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:*\n| stats count() by fortress.user_agent\n |limit 10"}
{"input": "多次登录IP 排名前 10。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false\n| stats count() by fortress.ip\n |limit 10"}
{"input": "访问资源使用最多的系统用户前 10 名。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log\n| stats count() by fortress.system_user | limit 10"}
{"input": "资源访问IP_TOP10。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log\n| stats count() by fortress.remote_addr | limit 10"}
{"input": "使用最多的命令TOP10。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:jumpserver  fortress.log_type:session_command_log \n| stats count() by fortress.input  | limit 20"}
{"input": "kernel告警cpu-Top10。。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析需求", "output": "(appname:esxi AND tag:vmkwarning)  | stats count() by esxi.cpu | limit 10"}
{"input": "操作最频繁TOP10。。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:safety  \n| stats count() by fortress.user_name\n|limit 10"}
{"input": "主机操作TOP10。。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:safety  \n| stats count() by fortress.action\n|limit 10"}
{"input": "操作源地址TOP10。。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:safety  \n| stats count() by fortress.src_ip\n|limit 10"}
{"input": "被访问最多的资源TOP10。。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析需求", "output": "appname:fortress tag:safety  \n| stats count() by fortress.host_ip\n|limit 10"}
{"input": "存在风险TOP15。。", "instruction": "HIDS_安全狗数据，编写查询语句实现如下分析需求", "output": "appname:hids tag:safedog  hids.event_type:*Risk  | stats count() by hids.kbname |limit 15"}
{"input": "访问者TOP10。。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析需求", "output": "appname:vpn tag:sangfor_0trust vpn.event_name:login  |stats count() by  vpn.src_ip  | limit 10"}
{"input": "被访问端口TOP10。。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析需求", "output": "appname:vpn tag:sangfor_0trust  vpn.event_name:access_resource\n|stats count() by vpn.app.upstream.port |limit 10"}
{"input": "windows事件ID分布前 10 名。", "instruction": "pf_windows数据，编写查询语句实现如下分析需求", "output": "appname:pf_windows |stats count() by windows.System.EventID.text|limit 20"}
{"input": "windows日志来源分布前 10 名。", "instruction": "pf_windows数据，编写查询语句实现如下分析需求", "output": "appname:pf_windows |stats count() by windows.System.Provider.Name|limit 20"}
{"input": "web攻击源IP分布前 10 名。。", "instruction": "流量数据数据，编写查询语句实现如下分析需求", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() by nta.src_ip|limit 10"}
{"input": "威胁详情分布前 10 名。。", "instruction": "趋势tda数据，编写查询语句实现如下分析需求", "output": "appname:tda AND 'tag':correlated_incidents |stats count() by tda.threats_desc |limit 10"}
{"input": "来源主机分布前 10 名。。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析需求", "output": "appname:antivirus  \n| stats count() by anti.src_ip\n \n| limit 10"}
{"input": "威胁分布前 10 名。。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析需求", "output": "appname:antivirus  \n| stats count() by anti.type\n \n| limit 10\n"}
{"input": "求职、招聘类访问的前 20 名来源地址。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析需求", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*招聘* OR ac.web_app:*求职*\n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "AP连接次数前 10 名。。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析需求", "output": "appname:ac tag:h3c ac.status:online | stats count() by ac.ap_name|limit 10"}
{"input": "连接次数最多的ssid 前 10 名。。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析需求", "output": "appname:ac tag:h3c ac.status:online | stats count() by ac.ssid|limit 10"}
{"input": "威胁类型分布前 10 名。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析需求", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" \n| stats count() by atv.threatType\n \n|limit 10"}
{"input": "收到威胁主机操作系统前 10 名。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析需求", "output": "appname:fireeye tag:smart | stats count() by sm.os |limit 10"}
{"input": "主机威胁文件名称前 10 名。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析需求", "output": "appname:fireeye tag:smart | stats count() by sm.file_name |limit 10"}
{"input": "主机威胁文件类型前 10 名。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析需求", "output": "appname:fireeye tag:smart | stats count() by sm.file_type |limit 10"}
{"input": "扫描协议分布前 10 名。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析需求", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() by hp.proto |limit 10"}
{"input": "威胁事件方向分布前 10 名。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析需求", "output": "appname:leon tag:tjym | stats count() by iocs.dire | limit 10"}
{"input": "威胁事件类型前 10 名。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析需求", "output": "appname:leon tag:tjym | stats count() by iocs.event_type | limit 10"}
{"input": "威胁事件名称分组统计前 10 名。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析需求", "output": "appname:leon tag:tjym | stats count() by iocs.event_name | limit 10"}
{"input": "DHCP_请求网关_TOP10。。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:*  |stats count() by dns.gateway  | limit 10"}
{"input": "操作最频繁的用户TOP10。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() by ac.user|limit 10"}
{"input": "文件操作最频繁源地址TOP10。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() by ac.src_ip|limit 10"}
{"input": "所有应用访问TOP10。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:*| stats count() by ac.app | limit 10"}
{"input": "使用手机次数TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.user_agent:*Mobile* | stats count() by ac.src_ip | limit 20"}
{"input": "购物消费TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:web ac.web_app:*购物* OR ac.web_app:*消费* \n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "社交平台TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*社交* OR ac.web_app:微博 OR \"微博\"  OR ac.web_app:*博客*\n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "流媒体视频网站TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:娱乐资讯\n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "金融财经TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*金融* OR ac.web_app:*股票*  OR ac.web_app:*财经* OR ac.web_app:*证券*\n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "招聘网站TOP10。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*招聘* OR ac.web_app:*求职* \n| stats count() by ac.request_url\n \n| limit 10"}
{"input": "求职招聘TOP20。。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*招聘* OR ac.web_app:*求职*\n| stats count() by ac.src_ip\n \n| limit 20"}
{"input": "文件访问_被阻断操作源地址TOP20。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.src_ip |limit 20"}
{"input": "文件访问_被阻断操作用户TOP20。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.user |limit 20"}
{"input": "文件访问_被阻断操作文件TOP20。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.file_name |limit 20"}
{"input": "文件访问_被阻断操作应用TOP20。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.dst_user |limit 20"}
{"input": "邮件监控_阻断用户TOP10。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \n| stats count() by dlp.user |limit 10"}
{"input": "邮件监控_阻断源地址TOP10。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \n| stats count() by dlp.src_ip |limit 10"}
{"input": "邮件监控_阻断发送邮箱TOP10。。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \n| stats count() by dlp.send_mail |limit 10"}
{"input": "威胁事件TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" \n| stats count() by atv.threatName\n \n|limit 10"}
{"input": "威胁事件TOP10源IP。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" | stats count() by atv.src_ip |limit 10"}
{"input": "威胁事件TOP10用户。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" \n| stats count() by atv.user\n \n|limit 10"}
{"input": "网络拦击源地址TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" \n| stats count() by atv.src_ip\n \n|limit 10"}
{"input": "网络拦截URI_TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" \n| stats count() by atv.uri\n \n|limit 10"}
{"input": "防火墙拦截目的地址TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Firewall Event\" \n| stats count() by atv.dst_ip \n|limit 10"}
{"input": "网络拦截URI_TOP20。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Firewall Event\" \n| stats count() by atv.event_name\n \n|limit 20"}
{"input": "网络拦截进程TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Filtered Website Event\" \n| stats count() by atv.processName\n \n|limit 10"}
{"input": "防火墙拦截进程TOP10。。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Firewall Event\" \n| stats count() by atv.processName\n \n|limit 10"}
{"input": "攻击源地理位置TOP10。。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.src.geo.province | limit 10"}
{"input": "攻击事件目标IP_TOP10。。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.dst_ip | limit 10"}
{"input": "攻击事件源IP_TOP10。。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.src_ip | limit 10"}
{"input": "攻击事件TOP10。。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.event_name |limit 10"}
{"input": "境外攻击源TOP10。。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational NOT ips.src.geo.city:private NOT ips.src.geo.country:中国\n| stats count() by ips.src_ip |limit 10"}
{"input": "威胁事件TOP10。。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin\n|stats count() by nta.attack_name\n\n|limit 10"}
{"input": "威胁事件TOP10。。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() by nx.sname | limit 10"}
{"input": "主机威胁源IP_TOP10。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:smart | stats count() by sm.src_ip |limit 10"}
{"input": "主机威胁目标主机TOP10。", "instruction": "fireeye_smart数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:smart | stats count() by sm.dst_ip |limit 10"}
{"input": "发起扫描主机TOP10。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() by hp.src_ip |limit 10"}
{"input": "蜜罐入侵源地址TOP10。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot|stats count() by hp.src_ip |limit 10"}
{"input": "蜜罐入侵目标主机TOP10。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot|stats count() by hp.dst_ip |limit 10"}
{"input": "威胁事件攻击地址TOP10。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析场景", "output": "appname:leon tag:tjym | stats count() by iocs.src_ip | limit 10"}
{"input": "威胁事件受影响主机TOP10。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析场景", "output": "appname:leon tag:tjym | stats count() by iocs.dst_ip | limit 10"}
{"input": "DHCP_请求网关_TOP10。。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": "appname:dx tag:dhcp dx.dhcp_req_type:*  |stats count() by dx.gateway  | limit 10"}
{"input": "城市上报故障分布图，展示前 20 条。。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": " (appname:stb tag:userreport)  |stats count() by stb.area_code_dec  |limit 20"}
{"input": "用户上报排行图，展示前 20 条。。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": " (appname:stb tag:userreport)  |stats count() by stb.user_account  |limit 20"}
{"input": "。", "instruction": "linux登录失败事件数量最大的10个来源IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "。", "instruction": "linux登录失败事件数量最大的5个客户端IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 5"}
{"input": "。", "instruction": "linux登录失败事件数量最大的50个客户端IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 50"}
{"input": "。", "instruction": "linux登录失败事件数量最大的20个客户端IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 20"}
{"input": "。", "instruction": "linux登录失败事件数量最大的100个来源IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 100"}
{"input": "。", "instruction": "linux登录失败事件数量最大的100个客户端IP", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 100"}
{"input": "。", "instruction": "linux登录方式分布前 10 名", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 10"}
{"input": "。", "instruction": "linux登录方式分布前 5 名", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 5"}
{"input": "。", "instruction": "linux成功登录方式分布前 50 名", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 50"}
{"input": "。", "instruction": "linux成功登录方式分布前 100 名", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 100"}
{"input": "。", "instruction": "linux登录方式分布前 20 名", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 20"}
{"input": "。", "instruction": "linux定时任务执行次数前十名", "output": " (appname:linux CROND)  |stats count() by linux.cmd  |limit 10"}
{"input": "。", "instruction": "linux定时任务执行次数前五名", "output": " (appname:linux CROND)  |stats count() by linux.cmd  |limit 5"}
{"input": "登录方式分布前十名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND accepted |stats count() by type  |limit 10"}
{"input": "登录方式分布前一百名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND accepted |stats count() by type|limit 100"}
{"input": "登录方式分布前20名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND accepted |stats count() by type  |limit 20"}
{"input": "登录方式分布前五十名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND accepted |stats count() by type |limit 50"}
{"input": "成功登录用户分布，取次数最多的前 10 条。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure Accepted |stats count() by user    |limit 10"}
{"input": "登录失败用户分布，按次数排序后保留前 10 条。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 10"}
{"input": "登录失败用户次数分布前 10 名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 10"}
{"input": "登录失败用户次数分布前 50 名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 50"}
{"input": "登录失败用户次数分布前 20 名。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 20"}
{"input": "定时任务执行次数，按次数排序后保留前 10 条。。", "instruction": "Linux操作系统审计", "output": "appname:linux tag:cron CROND |stats count() by command    |limit 10"}
{"input": "", "instruction": "rizhiyi 应用的nginx状态码统计，展示数量占比前 5 条记录", "output": " (appname:\"rizhiyi\" AND tag:\"nginx_access\")  |stats count() by 'status'  |limit 5"}
{"input": "", "instruction": "yottabyte 应用的nginx状态码统计，展示数量占比前 10 条记录", "output": " (appname:\"yottabyte\" AND tag:\"nginx_access\")  |stats count() by 'status'  |limit 10"}
{"input": "", "instruction": "rizhiyi 应用的nginx状态码统计，展示数量占比前 20 条记录", "output": " (appname:\"rizhiyi\" AND tag:\"nginx_access\")  |stats count() by 'status'  |limit 20"}
{"input": "", "instruction": "yottabyte 应用的apache状态码统计，展示数量占比前 100 条记录", "output": " (appname:\"yottabyte\" AND tag:\"apache_access\")  |stats count() by 'status'  |limit 100"}
{"input": "", "instruction": "rizhiyi 应用的apache状态码统计，展示数量占比前 50 条记录", "output": " (appname:\"rizhiyi\" AND tag:\"apache_access\")  |stats count() by 'status'  |limit 50"}
{"input": "。", "instruction": "aix源IP登录成功次数前 10 名", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "aix源IP登录成功次数前 100 名", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 100 "}
{"input": "。", "instruction": "aix源IP登录成功次数前 50 名", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 50 "}
{"input": "。", "instruction": "aix源IP登录成功次数前 5 名", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 5 "}
{"input": "。", "instruction": "aix源IP登录成功次数", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "aix登录端口失败次数排名前 10 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 10 "}
{"input": "。", "instruction": "aix登录端口失败次数排名前 5 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 5 "}
{"input": "。", "instruction": "aix登录端口失败次数排名前 50 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 50 "}
{"input": "。", "instruction": "aix登录端口失败次数排名前 20 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 20 "}
{"input": "。", "instruction": "aix登录端口失败次数排名前 100 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 100 "}
{"input": "。", "instruction": "aix各等级事件分布前 20 名", "output": " appname:aix |stats count() by aix.severity  |limit 20"}
{"input": "。", "instruction": "aix各等级事件分布前 100 名", "output": " appname:aix |stats count() by aix.severity  |limit 100"}
{"input": "。", "instruction": "aix各等级事件分布前 10 名", "output": " appname:aix |stats count() by aix.severity  |limit 10"}
{"input": "。", "instruction": "aix各等级事件分布前 50 名", "output": " appname:aix |stats count() by aix.severity  |limit 50"}
{"input": "。", "instruction": "aix各等级事件分布前 5 名", "output": " appname:aix |stats count() by aix.severity  |limit 5"}
{"input": "。", "instruction": "aix用户登录成功次数", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "aix用户登录成功次数前 10 名", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "aix用户登录成功次数前 20 名", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 20 "}
{"input": "。", "instruction": "aix用户登录成功次数前 50 名", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 50 "}
{"input": "。", "instruction": "aix用户登录成功次数前 5 名", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 5 "}
{"input": "。", "instruction": "aix用户登录成功次数前 100 名", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 100 "}
{"input": "。", "instruction": "aix源IP登录失败次数", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "aix源IP登录失败次数前 10 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "aix源IP登录失败次数前 20 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 20 "}
{"input": "。", "instruction": "aix源IP登录失败次数前 50 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 50 "}
{"input": "。", "instruction": "aix源IP登录失败次数前 5 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 5 "}
{"input": "。", "instruction": "aix源IP登录失败次数前 100 名", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 100 "}
{"input": "。", "instruction": "aix登录方式比例统计，按登录次数排序，保留前 10 条", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 10 "}
{"input": "。", "instruction": "aix登录方式比例统计，展示占比前 10 名", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 10 "}
{"input": "。", "instruction": "aix登录方式比例统计，展示占比前 20 名", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 20 "}
{"input": "。", "instruction": "aix登录方式比例统计，展示占比前 50 名", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 50 "}
{"input": "。", "instruction": "aix登录方式比例统计，展示占比前 5 名", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 5 "}
{"input": "。", "instruction": "aix登录方式比例统计，展示占比前 100 名", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 100 "}
{"input": "。", "instruction": "aix用户登录失败次数", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "统计aix登录失败次数前 10 名的用户", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "统计aix登录失败次数前 20 名的用户", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 20 "}
{"input": "。", "instruction": "统计aix登录失败次数前 50 名的用户", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 50 "}
{"input": "。", "instruction": "统计aix登录失败次数前 5 名的用户", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 5 "}
{"input": "。", "instruction": "统计aix登录失败次数前 100 名的用户", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 100 "}
{"input": "。", "instruction": "aix各类型事件分布，只看前 10 名", "output": " appname:aix  |stats count() by aix.facility  |limit 10"}
{"input": "。", "instruction": "aix各类型事件分布，只看前 100 名", "output": " appname:aix  |stats count() by aix.facility  |limit 100"}
{"input": "。", "instruction": "aix各类型事件分布，只看前 5 名", "output": " appname:aix  |stats count() by aix.facility  |limit 5"}
{"input": "。", "instruction": "aix各类型事件分布，只看前 20 名", "output": " appname:aix  |stats count() by aix.facility  |limit 20"}
{"input": "。", "instruction": "aix各类型事件分布，只看前 50 名", "output": " appname:aix  |stats count() by aix.facility  |limit 50"}
{"input": "mysql错误日志等级分布前 5 名。。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 5"}
{"input": "mysql错误日志等级分布前 10 名。。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 10"}
{"input": "aix各类型事件分布前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix  |stats count() by aix.facility  |limit 10"}
{"input": "aix各等级事件分布前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix |stats count() by aix.severity  |limit 20"}
{"input": "aix用户登录成功次数前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.user |limit 10"}
{"input": "aix源IP登录成功次数前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 10"}
{"input": "aix源IP登录失败次数前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND \"Failed password for\" |stats count() by aix.src_ip |limit 10"}
{"input": "aix用户登录失败次数前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND \"Failed password for\" |stats count() by aix.user |limit 10"}
{"input": "aix登录端口失败次数前 10 名。。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND \"Failed password for\" |stats count() by aix.src_port |limit 10"}
{"input": "middleware_tomcat_状态码分布前 10 名。。", "instruction": "middleware_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:middleware tag:tomcat|stats count() by middleware.status  |limit 10 "}
{"input": "linux登录方式分布前 10 名。。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": " (appname:linux AND accepted)  |stats count() by linux.type  |limit 10"}
{"input": "状态码分布前 10 名。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats count() by tomcat.status  |limit 10 "}
{"input": "访客分布前 10 名。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat NOT tomcat.src.geo.city:\"*\"  |stats count() by tomcat.src.geo.province  |limit 20"}
{"input": "访客分布前 10 名。", "instruction": "pf_gateway数据，编写查询语句实现如下分析场景", "output": "appname:pf_gateway NOT gateway.src.geo.city:\"*\"  |stats count() by gateway.src.geo.province  |limit 20"}
{"input": "jboss输出类型分布前 10 名。", "instruction": "jboss日志数据，编写查询语句实现如下分析场景", "output": " (appname:jboss)  |stats count() by middleware.type  |limit 10"}
{"input": "jboss日志等级分布前 10 名。", "instruction": "jboss日志数据，编写查询语句实现如下分析场景", "output": " (appname:jboss)  |stats count() by middleware.level  |limit 10"}
{"input": "各级别日志分布前 10 名。", "instruction": "zookeeper日志数据，编写查询语句实现如下分析场景", "output": " (appname:zookeeper tag:zookeeper_log)  |stats count() by middleware.level  |limit 5"}
{"input": "异常请求源地址排名前 10。", "instruction": "haproxy日志数据，编写查询语句实现如下分析场景", "output": " (appname:haproxy (middleware.tw:<0 OR middleware.tc:<0))  |stats count() by 'middleware.srcip'  |limit 20"}
{"input": "状态码占比前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.status  |limit 10"}
{"input": "请求结果占比前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.desc  |limit 10"}
{"input": "运营商访问次数前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.geo.isp  |limit 10"}
{"input": "请求错误原因分布前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access middleware.status:>399)  |stats count() by middleware.desc  |limit 10"}
{"input": "状态码分布前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.status  |limit 10"}
{"input": "请求结果分布前 10 名。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.desc  |limit 10"}
{"input": "状态码分布前 10 名。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "(appname:weblogic tag:access)  |stats count() by middleware.request_status  |limit 10"}
{"input": "登录方式分布前 10 名。。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 10"}
{"input": "。", "instruction": "IIS 服务器的目的IP请求量TOP10", "output": "(appname:middleware tag:iis)  |stats count() by middleware.dst_ip  |limit 10"}
{"input": "。", "instruction": "IIS 服务器的请求路径TOP10", "output": " (appname:rzytv tag:iis)  |stats count() by rzytv.cs_uri_stem  |limit 10  "}
{"input": "。", "instruction": "IIS 服务器的来源IP请求量TOP10", "output": "(appname:middleware tag:iis)  |stats count() by middleware.src_ip |limit 10"}
{"input": "middleware_tomcat_来源IP请求量TOP10。。", "instruction": "middleware_tomcat数据，编写查询语句实现如下分析场景", "output": "(appname:middleware tag:tomcat)  |stats count() by middleware.src_ip |limit 10"}
{"input": "来源IP请求量TOP10。。", "instruction": "middleware_microsoft_iis数据，编写查询语句实现如下分析场景", "output": "(appname:middleware tag:iis)  |stats count() by middleware.src_ip |limit 10"}
{"input": "目的IP请求量TOP10。。", "instruction": "middleware_microsoft_iis数据，编写查询语句实现如下分析场景", "output": "(appname:middleware tag:iis)  |stats count() by middleware.dst_ip  |limit 10"}
{"input": "来源IP请求量TOP10。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat  |stats count() by tomcat.src_ip |limit 10"}
{"input": "操作系统TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count() by middleware.ua.os  |limit 10"}
{"input": "请求错误资源TOP10。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "(appname:weblogic tag:access middleware.request_status:>399)  |stats count() by middleware.url  |limit 20"}
{"input": "查看 100 条dns查询记录。。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.rcode:*| limit 100"}
{"input": "查看最近 10 条攻击详情。。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.src_ip:*| limit 10 "}
{"input": "前 50 条应用明细指标展示。", "instruction": "lingcloud流量数据，编写查询语句实现如下分析场景", "output": "appname:lingcloud AND tag:kpi_list_all|limit 50"}
{"input": "windows系统错误事件明细前 50 条。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows tag:system (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR \"错误\" OR \"失败\") |limit 50"}
{"input": "windows应用事件错误前 50 条明细。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows tag:application (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR \"错误\" OR \"失败\") |limit 50"}
{"input": "用户需要关注的 50 条事件。", "instruction": "Aruba数据数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba AND (access_point.severity:EMERG  OR access_point.severity:ALERT OR access_point.severity:CRIT OR access_point.severity:ERRS)|limit 50"}
{"input": "上报日志查询，展示前 50 条。。", "instruction": "中数通STB数据数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:*|limit 50"}
{"input": "最近 50 条实时委托撤单请求。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:4 | limit 50 "}
{"input": "最近 50 条实时银行转券商请求。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:E | limit 50 "}
{"input": "最近 50 条实时券商转银行请求。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.REQTYPE:F | limit 50 "}
{"input": "来源IP访问流量TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access|stats sum(middleware.resp_len) as len by middleware.clientip|limit 10"}
{"input": "NSFOCUS_访问源_国家_占比前 10 名。。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus |stats count() as count_ by firewall.msg.src_addr.geo.country |limit 20"}
{"input": "NSFOCUS_目标端口分布前 10 名。。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus |stats count() by firewall.msg.dst_port\t|limit 20"}
{"input": "使用命令操作最多的用户前 10 名。。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.log_type:session_command_log \n| stats count() as cnt by fortress.user|limit 10"}
{"input": "NSFOCUS_被拒绝的源IP_Top10。。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus  NOT  firewall.msg.action:accept  | stats count() by firewall.src_ip |limit 20"}
{"input": "NSFOCUS_请求被拒绝目标IP_Top10。。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus NOT  firewall.msg.action:accept  | stats count() by firewall.dst_ip |limit 20"}
{"input": "攻击事件TOP10。。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.event_name |limit 10"}
{"input": "攻击源TOP10地理分布。。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.src.geo.country,firewall.src.geo.province,firewall.src.geo.city |limit 10"}
{"input": "攻击事件源地址TOP10。。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.src_ip |limit 10"}
{"input": "客户登陆运营商TOP10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | stats count() as cnt by TDX.geo.isp| limit 10"}
{"input": "客户登陆城市TOP10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | stats count() as cnt by TDX.geo.city| limit 10"}
{"input": "客户登陆地址TOP10。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:*| stats count() as cnt by TDX.CLIENT_IP | limit 10"}
{"input": "登录用户TOP10占比。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | stats count() as cnt by TDX.TDX_ID_XT_CLIENT| limit 10"}
{"input": "策略拦截触发协议分类，展示最近 10 条。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "* appname:antivirus_gateway tag:symantec  \"规则\" | stats count() as total by antivirus_gateway.proto |limit 10"}
{"input": "。", "instruction": "数据库审计日志中遭到威胁的目的地址TOP10", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_ip|limit 10"}
{"input": "。", "instruction": "数据库审计日志中目标端口TOP10", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "源地址TOP10。。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.src_ip|limit 10"}
{"input": "目标端口TOP10。索引内可用字段包括：dbaudit.payload,dbaudit.level,dbaudit.database,dbaudit.dst,dbaudit.rule,dbaudit.src,dbaudit.data,dbaudit.alert,dbaudit.app等。请按实际需要选用字段。。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "触发规则TOP10。。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.rule|limit 10"}
{"input": "遭到威胁的目的地址TOP10。。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_ip|limit 10"}
{"input": "连接服务对比图，展示前 10 名。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper |stats count() as total  by firewall.service|limit 10"}
{"input": "IPS请求类型占比前 10 名。。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:nsfocus  | stats count() as a by ips.event_name | limit 10"}
{"input": "IPS请求轨迹关系图，取前 10 对。。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:nsfocus  | stats count(ips.src.geo.ip) by ips.src.geo.ip,ips.dst.geo.ip | limit 10"}
{"input": "IPS请求类型占比分析，取前 10 条内容。。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus | stats count() as a by ips.event_name | limit 10"}
{"input": "被攻击目标地址和源地址的最近 200 条分析。。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.src_ip:* | stats count(ddos.dst_ip) by ddos.dst_ip, ddos.src_ip | limit 200"}
{"input": "攻击源地址和目标地址的最近 200 条分析。。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.src_ip:* | stats count(ddos.src_ip) by ddos.src_ip,ddos.dst_ip | limit 200"}
{"input": "协议分布前 10 名。。", "instruction": "firewall_pix数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() by firewall.proto|limit 10"}
{"input": "事件类型占比前 10 名。。", "instruction": "cisco_router数据，编写查询语句实现如下分析场景", "output": "appname:router tag:cisco | stats count() as cnt by router.event_type|limit 10"}
{"input": "huawei_router各类事件占比前 10 名。。", "instruction": "huawei_router数据，编写查询语句实现如下分析场景", "output": "appname:router tag:huawei | stats count() as cnt by router.event_type |limit 10"}
{"input": "huawei_router各类模块占比前 10 名。。", "instruction": "huawei_router数据，编写查询语句实现如下分析场景", "output": "appname:router tag:huawei | stats count() as cnt by router.module_name |limit 10"}
{"input": "WLS报错数前10名类型。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic middleware.severity:\"Error\" OR  middleware.severity:ERROR|stats count() by middleware.msg | limit 10"}
{"input": "被攻击目的地址TOP20。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.dst_ip|limit 20"}
{"input": "请求轨迹关系图，取前 10 条。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count(ips.src.geo.ip) by ips.src.geo.ip,ips.dst.geo.ip | limit 10"}
{"input": "被攻击目的地址TOP10。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.dst_ip|limit 10"}
{"input": "操作类型分布前 10 名。", "instruction": "联软终端控制数据，编写查询语句实现如下分析场景", "output": "appname:leagsoft tag:tc | stats count() as cnt by tc.msg.kv.iOperateType |limit 10"}
{"input": "请求轨迹关系图，展示前 100 条。。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec|  stats count(ips.src.geo.ip) by ips.src.geo.ip,ips.dst.geo.ip | limit 100"}
{"input": "请求状态码分布前 10 名。。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.status |limit 10"}
{"input": "不同服务的日志量对比，展示最多 10 个服务。", "instruction": "CitrixXenserver日志数据，编写查询语句实现如下分析场景", "output": "((* AND tag:xenserver) AND appname:citrix) |stats count() by xenserver.service\t|limit 10\n"}
{"input": "受威胁端口分布占比前 10 名。。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.dst_port|limit 10"}
{"input": "受到攻击端口分布占比前 10 名。。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.dst_port|limit 10"}
{"input": "事件等级分布前 10 名。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:app_filter OR ac.event_type:other_app|stats count() as cnt by ac.kv.log_level |limit 20"}
{"input": "应用访问终端分布前 10 名。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:app_filter OR ac.event_type:other_app|stats count() as cnt by ac.kv.term_device |limit 20"}
{"input": "。", "instruction": "数据库审计日志中目的端口TOP10", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "索引内可用字段有：dbaudit.payload,dbaudit.level,dbaudit.database,dbaudit.dst,dbaudit.rule,dbaudit.src,dbaudit.data,dbaudit.alert,dbaudit.app。请按实际需要选用字段使用。。", "instruction": "数据库审计日志中目的地址_端口TOP10", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_ip,dbaudit.dst_port|limit 10"}
{"input": "。", "instruction": "数据库审计日志中源地址TOP10", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.src_ip|limit 10"}
{"input": "。", "instruction": "Exchange_收件人TOP10", "output": "appname:exchange AND tag:msgtrk |stats count() as ct by msgtrk.recipient_address |limit 10"}
{"input": "。", "instruction": "Exchange_发件人TOP10", "output": "appname:exchange AND tag:msgtrk |stats count() as ct by msgtrk.sender_address |limit 10"}
{"input": "f5_登录VPN源地理位置TOP10。。", "instruction": "F5数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.src_ip:* *vpn* | stats count() as cnt by loadbalancing.src.geo.province|limit 10"}
{"input": "DHCP_ip被请求_TOP10。。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:*  |stats count() as cnt by dns.dhcp_ip|limit 10"}
{"input": "DHCP_请求mac_TOP10。。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:* |stats count() as cnt by dns.dhcp_mac|limit 10"}
{"input": "移动设备TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count(middleware.ua.device) as ct by middleware.ua.device |limit 10"}
{"input": "浏览器TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count(middleware.ua.browser) as ct by middleware.ua.browser |limit 10"}
{"input": "请求错误资源TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access middleware.status:>399)  |stats count(middleware.request_path) as ct by middleware.request_path  |limit 20"}
{"input": "来源IP请求量TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count(middleware.clientip) as ct by middleware.clientip  |limit 10"}
{"input": "请求路径TOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count(middleware.request_path) as ct by middleware.request_path  |limit 10"}
{"input": "请求refererTOP10。。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access)  |stats count(middleware.referer) as ct by middleware.referer |limit 10"}
{"input": "登录源地址TOP10。。", "instruction": "深信服上网行为管理数据，编写查询语句实现如下分析场景", "output": "appname:access_control tag:sangfor access_control.log_type:login* | stats count() as cnt by access_control.src_ip|limit 10"}
{"input": "登录用户名TOP10。。", "instruction": "深信服上网行为管理数据，编写查询语句实现如下分析场景", "output": "appname:access_control tag:sangfor access_control.log_type:login* | stats count() as cnt by access_control.user_name|limit 10"}
{"input": "源ipTop10。。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.src_ip|limit 10"}
{"input": "目的ipTop10。。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.dst_ip|limit 10"}
{"input": "恶意urlTop10。。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.url|limit 10"}
{"input": "threats源ipTop10。。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.src_ip|limit 10"}
{"input": "threats目的ipTop10。。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.dst_ip|limit 10"}
{"input": "飞塔VPN远程登录城市or省份TOP10。。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.rem_ip.geo.province|limit 10"}
{"input": "飞塔VPN远程登录地址TOP10。。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.remip|limit 10"}
{"input": "飞塔VPN被访问地址TOP10。。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.locip|limit 10"}
{"input": "ddos_fortinet_保护IP_TOP10。。", "instruction": "ddos_fortinet数据，编写查询语句实现如下分析场景", "output": "appname:ddos | stats count() as cnt by ddos.protected_ip |limit 10"}
{"input": "攻击源地址TOP50。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.src_ip|limit 50"}
{"input": "攻击源地址TOP20。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.src_ip|limit 20"}
{"input": "被攻击端口TOP10。。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech ips.dst_ip:*| stats count() as cnt by ips.dst_port |limit 10"}
{"input": "攻击源地址TOP10。。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.src_ip |limit 10"}
{"input": "攻击目的地址TOP10。。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.dst_ip |limit 10"}
{"input": "攻击目的端口TOP10。。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.dst_port |limit 10"}
{"input": "受到攻击目的地址TOP10。。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.dst_ip | limit 10"}
{"input": "受到攻击目的端口TOP10。。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.dst_port | limit 10"}
{"input": "源地址TOP10。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng | stats count() as cnt by hp.msg.src_ip |limit 10"}
{"input": "攻击urlTop10。。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.http.url | limit 10"}
{"input": "攻击地址TOP10。。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.src_ip|limit 10"}
{"input": "操作频繁用户TOP20。。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft   | stats count() as cnt by uninxg.username|limit 20"}
{"input": "操作频繁主机TOP10。。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft   | stats count() as cnt by uninxg.termip|limit 10"}
{"input": "受感染主机TOP10。索引中可用字段有：antivirus.action,antivirus.dst,antivirus.virus,antivirus.path,antivirus.result,antivirus.host,antivirus.threat,antivirus.file,antivirus.domain,antivirus.os等。请按实际需要使用字段。。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.dst_ip|limit 10"}
{"input": "感染病毒TOP10。索引中可用字段有：antivirus.action,antivirus.dst,antivirus.virus,antivirus.path,antivirus.result,antivirus.host,antivirus.threat,antivirus.file,antivirus.domain,antivirus.os等。请按实际需要使用字段。。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.virus_name|limit 10"}
{"input": "断线客户端TOP10。。", "instruction": "cisco无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:cisco ac.event_id:445|stats count() as cnt by ac.src_mac|limit 10"}
{"input": "断线AP_TOP10_MAC地址。。", "instruction": "cisco无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:cisco ac.event_id:35160|stats count() as cnt by ac.src_mac|limit 10"}
{"input": "攻击事件TOP10。。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.attack_name|limit 10"}
{"input": "威胁源地址TOP10。。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.src_ip|limit 10"}
{"input": "收到威胁的目的地址TOP10。。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.dst_ip|limit 10"}
{"input": "目的端口TOP10。。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "源地址TOP10。。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.src_ip|limit 10"}
{"input": "目的地址_端口TOP10。索引内可用字段包括：dbaudit.payload,dbaudit.level,dbaudit.database,dbaudit.dst,dbaudit.rule,dbaudit.src,dbaudit.data,dbaudit.alert,dbaudit.app。请按实际需要选用字段。。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_ip,dbaudit.dst_port|limit 10"}
{"input": "攻击者地址TOP10。。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.src_ip|limit 10"}
{"input": "遭受攻击地址TOP10。。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.dst_ip|limit 10"}
{"input": "访问设备TOP10。。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:session|stats count() as cnt by bb.ua.os|limit 10"}
{"input": "访问源TOP10。。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:session|stats count() as cnt by bb.src_ip|limit 10"}
{"input": "访问数据库地址TOP10。。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.src_ip |limit 10"}
{"input": "威胁TOP10。。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.attack_name |limit 10"}
{"input": "使用应用最频繁TOP20。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) \n|stats count() as cnt by ac.src_ip |limit 20"}
{"input": "访问应用源端口TOP20。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:app_filter OR ac.event_type:other_app|stats count() as cnt by ac.dst_port |limit 20"}
{"input": "各个应用使用频次TOP20。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) \n|stats count() as cnt by ac.app_name |limit 20"}
{"input": "移动端使用源地址TOP20。。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:im | stats count() as cnt by ac.src_ip |limit 20"}
{"input": "系统操作TOP10。。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista   (NOT switch.severity:*) switch.module:sudo| stats count() as cnt by switch.kv.COMMAND |limit 10"}
{"input": "访问源IP_TOP20。。", "instruction": "nas_forescout数据，编写查询语句实现如下分析场景", "output": "appname:nas tag:forescout | stats count() as cnt by nas.src_ip|limit 20"}
{"input": "目标主机IP_TOP20。。", "instruction": "nas_forescout数据，编写查询语句实现如下分析场景", "output": "appname:nas tag:forescout | stats count() as cnt by nas.dst_ip|limit 20"}
{"input": "受感染主机TOP20。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* |stats count() as cnt by antivirus.host|limit 20"}
{"input": "DHCP_ip被请求_TOP10。。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": "appname:dx tag:dhcp dx.dhcp_req_type:*  |stats count() as cnt by dx.dhcp_ip|limit 10"}
{"input": "DHCP_请求mac_TOP10。。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": "appname:dx tag:dhcp dx.dhcp_req_type:* |stats count() as cnt by dx.dhcp_mac|limit 10"}
{"input": "。", "instruction": "我想要知道在某一天中使用了哪些系统登录了我们的网站，并且显示前十个最常用的浏览器和操作系统。", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:*| stats count() by fortress.user_agent|limit 10"}
{"input": "", "instruction": "我想问的是，我的电脑上这些软件分别从哪些公司获得支持和维护？", "output": "appname:pf_windows |stats count() by windows.System.Provider.Name|limit 20"}
{"input": "。", "instruction": "我想要知道在线的活跃用户数量最多的前十个应用名和对应的访问次数", "output": "appname:ac tag:h3c ac.status:online | stats count() by ac.ap_name|limit 10"}
{"input": "", "instruction": "我想询问关于某一天的 Nginx 用户代理设备数量统计信息，并且只显示前二十条结果。", "output": "appname:pf_nginx |stats count() by nginx.user_agent.device |limit 20"}
{"input": "。", "instruction": "我想问的是，我的公司服务器有几个文件被转移到了其他部门的服务器上，你能帮我查一下吗？", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() by ac.src_ip|limit 10"}
{"input": "。", "instruction": "我想要知道我在哪些应用上花费了最长时间，并且只显示前十个。我的意思是：你给我列出每个应用的使用时长排名从高到低，但是只取前十大的时间。", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:*| stats count() by ac.app | limit 10"}
{"input": "。", "instruction": "我想询问最近两天中访问网站的手机端用户数量排名前十的IP地址和访问次数。", "output": "appname:ac tag:qianxin ac.log_type:* ac.user_agent:*Mobile* | stats count() by ac.src_ip | limit 20"}
{"input": "。", "instruction": "我想知道的是最近两天有多少人在使用哪些应用进行网上购买或者消费行为，并且可以看到他们的IP地址吗？", "output": "appname:ac tag:qianxin ac.log_type:web ac.web_app:*购物* OR ac.web_app:*消费* | stats count() by ac.src_ip| limit 20"}
{"input": "。", "instruction": "我想知道访问网站的 IP 是多少，并只显示前 20 个结果。", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:娱乐资讯| stats count() by ac.src_ip| limit 20"}
{"input": "。", "instruction": "我想问的是有没有人在使用我们的 APP 来进行网上银行、股票交易或者买卖商品等活动，并且他们的 IP 是从哪些地方访问的呢？", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*金融* OR ac.web_app:*股票*  OR ac.web_app:*财经* OR ac.web_app:*证券*| stats count() by ac.src_ip| limit 20"}
{"input": "。", "instruction": "我想问的是，我的手机屏幕突然亮起一个弹窗，上面显示了一个警告词“SkyGuard”，并要求立即升级系统或恢复出厂设置以防数据泄漏和设备损失。这个弹窗让我很担心自己的信息安全，但我不知道该怎么办。你能帮我查一下这是为什么吗？", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.src_ip |limit 20"}
{"input": "。", "instruction": "我想问的是，我的手机屏幕突然亮起一个蓝色的警告框，上面显示“系统发现有恶意软件”，然后就自动退出了应用。这个时候我很紧张，不知道该怎么办。你能帮忙查一下吗？", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.user |limit 20"}
{"input": "。", "instruction": "我想问的是，有多少个 SkyGuard 用户使用 DLP 功能打开了一个叫做'skyguard' 的程序，并且这个程序的工作模式为 '阻断'（Block），同时将文件的名称记录下来并发送到日志易？", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.file_name |limit 20"}
{"input": "。", "instruction": "我想问的是，有多少用户使用了 SkyGuard 这个应用进行了非法的文件下载？并且这些文件的目的地是哪些用户？", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\" dlp.workModeType:\"阻断\" | stats count() by dlp.dst_user |limit 20"}
{"input": "。", "instruction": "我想要知道使用哪些应用的用户访问了哪些IP地址，这些IP地址来自于哪个地区，并且没有出现任何错误或警告等级为“信息”或更高级别的信息。", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.src.geo.province | limit 10"}
{"input": "。", "instruction": "我想要知道有哪些异常的访问记录，并且只显示前十个。", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.event_name |limit 10"}
{"input": "。", "instruction": "我想问的是，有多少个 IP 源地址使用了 McAffe 应用，并且不是从中国访问的，而且没有被标记为info级别的问题。", "output": "appname:ips tag:mcafee NOT ips.level:Informational NOT ips.src.geo.city:private NOT ips.src.geo.country:中国| stats count() by ips.src_ip |limit 10"}
{"input": "。", "instruction": "我想问的是有没有人在使用 Linux 系统进行了登录操作？请帮我把时间范围限定为最近三天内的登录情况。", "output": "starttime=\"-3d\" appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 20"}
{"input": "。", "instruction": "我想要知道有多少人使用AIX登录成功的应用。", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "我想问有关aix的登录失败和登录成功情况吗？", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 20 "}
{"input": "。", "instruction": "我想问以下信息：统计AIX系统在一天内失败的密码数目最多的前五个用户。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 5 "}
{"input": "。", "instruction": "我想问以下内容：统计AIX系统中在一天内发生过“Failed password for”错误的用户数量并返回前100个用户。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 100 "}
{"input": "。", "instruction": "我想要知道过去一天中出现在我的设备里最多的crash类型和数量是多少。请帮我查一下吧！", "output": "appname:aix |stats count() by aix.severity  |limit 20"}
{"input": "。", "instruction": "我想问的是有没有人在使用AIX系统登录成功的，并且访问了哪些应用？你能不能把结果限制在前十个IP地址上吗？", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 10"}
{"input": "。", "instruction": "我想问的是有没有在服务器上出现过认证失败的情况吗？如果有的话，那应该是在哪些主机上发生的呢？", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by rhost    |limit 10"}
{"input": "。", "instruction": "我想问的是，我的 App 在哪些地方有人下载和使用过吗？他们的 IP 是从哪里来的呢？", "output": "(appname:exchange tag:tracking)  |stats count() by 'exchange.sender_address'  |limit 5"}
{"input": "。", "instruction": "我想问的是的直播间聊天记录，能否查一下吗？我需要知道谁在说话、他们之间发生了哪些互动等信息。", "output": "appname:stb stb.kvmsg.cmd:*|limit 50"}
{"input": "。", "instruction": "我想问的是哪些IP地址访问了哪个应用的首页。你能再把结果限制在前五名吗？", "output": "appname:nta tag:nsfocus | stats count() by nta.dst_ip | limit 5"}
{"input": "。", "instruction": "我想问的是哪些IP地址最常访问你的网站？可以把结果限制在前五名吗？请帮忙修改一下这个查询语句。", "output": "appname:nta tag:nsfocus | stats count() by nta.src_ip | limit 5"}
{"input": "。", "instruction": "我想问的是，有没有人在使用华为的应用登录成功的呢？你能不能把结果限制在前十个IP地址上吗？", "output": "appname:ac tag:huawei ac.event_name:\"登录事件\"| stats count() as cnt by ac.ac_ip | limit 10"}
{"input": "。", "instruction": "我想询问某一天的ips包含“tag”为“nsfocus”的数据量，并按访问事件名称（ips.event_name）进行分组统计，并只显示前十个结果。", "output": "appname:ips  tag:nsfocus | stats count() as a by ips.event_name | limit 10"}
{"input": "。", "instruction": "我想问的是，有没有人在攻击我们的服务器？他们使用了哪些工具和方法？他们从哪些IP地址发起的攻击？这些 IP addresses 有可能属于其他用户吗？", "output": "appname:ddos tag:nsfocus ddos.src_ip:* | stats count(ddos.src_ip) by ddos.src_ip,ddos.dst_ip | limit 200"}
{"input": "。", "instruction": "我想问的是，有多少次 huawei 设备的路由器发生了某种类型的事件？并按类型进行统计，然后只显示前 10 条结果。", "output": "appname:router tag:huawei | stats count() as cnt by router.event_type |limit 10"}
{"input": "", "instruction": "统计IPS访问的IP地址数量最多的十个IP地址及其访问次数。其中`appname:ips`表示输入要筛选的应用名称；`tag:dptech`表示根据指定的标签进行过滤；`stats count() as cnt by ips.dst_ip`表示对数据集执行聚合函数并将结果存储为变量cnt，并按字段ips.dst_ip进行分组；最后`limit 10`限制返回的记录条数为10条。", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.dst_ip|limit 10"}
{"input": "", "instruction": "我想问的是，你们的应用有没有异常？如果有的话，那可能是哪些操作出现的问题呢？你可以帮我把这些问题列举出来吗？", "output": "appname:leagsoft tag:tc | stats count() as cnt by tc.msg.kv.iOperateType |limit 10"}
{"input": "。", "instruction": "我想问的是，有多少台虚拟机使用了哪些模块？请帮我把结果限制为前十名。", "output": "appname:vmware | stats count() as cnt by vmware.module|limit 10"}
{"input": "。", "instruction": "我想问的是，NAS有哪些规则？有多少次被触发？并且按规则名称分组统计数量并返回前20个结果。", "output": "appname:nas tag:forescout|stats count() as cnt by nas.kv.Rule |limit 20"}
{"input": "", "instruction": "我想问的是，有没有人在用达梦数据库？如果有的话，那每个 IP 查到了多少次数据呢？", "output": "appname: database tag:dm | stats count() as cnt by database.src_ip|limit 10"}
{"input": "。", "instruction": "我想问的是公司的哪个应用发送了最多的消息？你可以把这个结果打印出来吗？谢谢！", "output": "appname:exchange AND tag:msgtrk |stats count() as ct by msgtrk.recipient_address |limit 10"}
{"input": "。", "instruction": "我想问的是，访问 Apache 服务的用户使用了哪些浏览器？并按数量排序，只显示前 10 个结果。", "output": " (appname:apache tag:access)  |stats count(middleware.ua.browser) as ct by middleware.ua.browser |limit 10"}
{"input": "。", "instruction": "我想问的是，有几个同学在登录SANGFOR的系统时出错了？你能不能帮我把这些错误的信息找出来吗？", "output": "appname:access_control tag:sangfor access_control.log_type:login* | stats count() as cnt by access_control.user_name|limit 10"}
{"input": "。", "instruction": "我想问的是，有没有发生过ID为 445 的事件呢？如果有的话，那他们每个 MAC 地址各发生了多少次？", "output": "appname:ac tag:cisco ac.event_id:445|stats count() as cnt by ac.src_mac|limit 10"}
{"input": "。", "instruction": "我想要知道过去有多少次使用了360的威胁标签在扫描某个IP地址的情况，并只显示出现次数最多的前十个IP地址", "output": "appname:threat tag:360 | stats count() as cnt by threat.dst_ip|limit 10"}
{"input": "。", "instruction": "我想问的是，在应用列表中，有哪些使用了 surfilter 的应用呢？请帮我列出前 20 个最常用的应用名称和它们所使用的次数", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) |stats count() as cnt by ac.app_name |limit 20"}
{"input": "。", "instruction": "我想问的是，我的电脑上有几个软件使用了 DHCP 协议进行网络通信呢？你可以帮我把这些软件的名称列出来吗？", "output": "appname:dx tag:dhcp dx.dhcp_req_type:*  |stats count() as cnt by dx.dhcp_ip|limit 10"}
{"input": "。", "instruction": "寻找飞塔跳板机登录失败的用户列表。", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false| stats count() by fortress.username|limit 10"}
{"input": "", "instruction": "想知道在`appname:fortress`、`tag:jumpserver`和`fortress.log_type:login_log`条件下，`fortress.status: false`发生的次数最多的是哪个原因。", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false| stats count() by fortress.reason|limit 10"}
{"input": "。", "instruction": "帮我查找飞塔跳板机服务器在某个时间段内的用户数量和登录情况，并且希望得到最常用的前十个用户。", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log| stats count() by fortress.system_user | limit 10"}
{"input": "。", "instruction": "寻找在 Fortress 应用中使用 JumpServer 标签且主机会话日志类型为 host_session_log 的记录数以及最常见的远程 IP 地址。", "output": " appname:fortress tag:jumpserver  fortress.log_type:host_session_log| stats count() by fortress.remote_addr | limit 10"}
{"input": "", "instruction": "有关 ESXi 中 CPU 使用率高的警告数量的信息。请在你的搜索中包含 `appname:esxi` 和 `tag:vmkwarning`，并使用 `stats count()` 命令统计结果中的条目数，并将结果限制为 10 个。", "output": "(appname:esxi AND tag:vmkwarning)  | stats count() by esxi.cpu | limit 10"}
{"input": "。", "instruction": "我想问的是，最近有没有人在使用“fortress”这个应用名称进行登陆，并且失败的原因是什么？前10个失败的理由分别是什么呢？", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false| stats count() by fortress.reason|limit 10"}
{"input": "。", "instruction": "我想问的是，有多少人使用了哪些系统登录了 jumpserver？", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log| stats count() by fortress.system_user | limit 10"}
{"input": "。", "instruction": "我想问的是，在fortress 跳板机上，有哪些指令最常被使用？可以给出具体的指令吗？", "output": "appname:fortress tag:jumpserver  fortress.log_type:session_command_log | stats count() by fortress.input  | limit 20"}
{"input": "。", "instruction": "我想询问关于VMware ESXi主机的CPU利用率过高", "output": "(appname:esxi AND tag:vmkwarning)  | stats count() by esxi.cpu | limit 10"}
{"input": "。", "instruction": "我想问的是：在使用 appname=fortress 和 tag=safety 的情况下，有多少条 action 数据被记录到了日志易中？请帮忙把结果限制为前 10 行。", "output": "appname:fortress tag:safety  | stats count() by fortress.action|limit 10"}
{"input": "。", "instruction": "我想要知道在哪些地方安全性最高。请告诉我有关“堡垒”应用的访问信息，按IP地址排序并显示前十个结果。", "output": "appname:fortress tag:safety  | stats count() by fortress.src_ip|limit 10"}
{"input": "。", "instruction": "我想知道在使用 Fortress 时，哪些主机 IP 是最安全的？请给出前 10 个。", "output": "appname:fortress tag:safety  | stats count() by fortress.host_ip|limit 10"}
{"input": "。", "instruction": "我想要知道在安全狗 HIDS上有哪些高危行为发生了。", "output": "appname:hids tag:safedog  hids.event_type:*Risk  | stats count() by hids.kbname |limit 15"}
{"input": "。", "instruction": "我想问有关 SANGFOR VPN 服务的登录活动情况，并提供相关统计信息。", "output": "appname:vpn tag:sangfor_0trust vpn.event_name:login  |stats count() by  vpn.src_ip  | limit 10"}
{"input": "。", "instruction": "我想知道有多少个应用使用SANGFOR VPN服务的端口号为80,90,443等十几个常见端口的资源访问事件发生过。", "output": "appname:vpn tag:sangfor_0trust  vpn.event_name:access_resource|stats count() by vpn.app.upstream.port |limit 10"}
{"input": "", "instruction": "我想问的是，系统有哪些事件被标记为“pf_windows”应用产生的吗？只显示windows.System.EventId.text的前二十个结果。", "output": "appname:pf_windows |stats count() by windows.System.EventID.text|limit 20"}
{"input": "。", "instruction": "我想问最近有哪些网站访问量最高的IP地址是多少，并只显示前十个。", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() by nta.src_ip|limit 10"}
{"input": "。", "instruction": "我想知道最近有多少台设备从哪些IP地址下载了Antivirus应用。请告诉我前十名的IP地址和数量。", "output": "appname:antivirus  | stats count() by anti.src_ip| limit 10"}
{"input": "。", "instruction": "我想问以下信息：1、应用名称为“ac”的用户数；2、标签为“h3c”的用户数；3、状态为“在线”的“ac”应用的最常使用的 Wi-Fi SSID（无线局域网）数量前十名。", "output": "appname:ac tag:h3c ac.status:online | stats count() by ac.ssid|limit 10"}
{"input": "。", "instruction": "我想问你有关 Norton AntiVirus 的问题，但我不知道如何开始搜索。你能告诉我一些关于该产品的信息吗？", "output": "appname:antivirus tag:norton atv.cat:\"ESET Threat Event\" | stats count() by atv.threatType|limit 10"}
{"input": "", "instruction": "我想问以下信息：在 FireEye 应用中使用智能标签的操作系统数量前十名的信息。", "output": "appname:fireeye tag:smart | stats count() by sm.os |limit 10"}
{"input": "", "instruction": "我想问以下信息：在FireEye安全产品中，使用“tag: smart”过滤器对事件进行筛选时，返回的结果中有哪些文件出现过多次？根据这些文件的数量排序后，前十个是什么样的文件名呢？", "output": "appname:fireeye tag:smart | stats count() by sm.file_name |limit 10"}
{"input": "", "instruction": "我想要知道在FireEye的应用中使用了哪些恶意软件，并按类型进行汇总。首先从`appname`列中筛选出包含“FireEye”字符串的所有行，然后将这些行与标记为“smart”的行组合起来。接着，使用stats命令计算每个文件类型的数量，并根据`sm.file_type`分组。最后，使用`limit`子句限制结果集中的行数为10个。", "output": "appname:fireeye tag:smart | stats count() by sm.file_type |limit 10"}
{"input": "", "instruction": "我想要知道有多少个协议（如HTTP）的流量被标记为“honeypot”和“chaitin”标签的扫描器发送过来。然后，希望按数量对这些流量进行排序并返回前十个。", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() by hp.proto |limit 10"}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：`appname: leon AND tag: tjym`，然后按 `iocs.dire` 分组并返回前 10 行数据。", "output": "appname:leon tag:tjym | stats count() by iocs.dire | limit 10"}
{"input": "。", "instruction": "我想问有关某些应用（appname）的DNS解析请求中使用BIND9服务器（tag：bind9）进行的统计和限制为十个源IP地址的数据。", "output": "appname:dns tag:bind9 |stats count() by dns.src_ip |limit 10"}
{"input": "。", "instruction": "帮我做性能分析，假装是一个专业的运维工程师，追踪每个域名下的 DNS 查询量。", "output": "appname:dns tag:bind9 |stats count() by dns.query |limit 10"}
{"input": "。", "instruction": "我想问有关 Cisco ACS（Adaptive Security Appliance）的一些信息，比如最近发生了多少次“认证成功”事件，并且可以根据这些事件中 NAS IP地址进行统计并返回前十个最高次数的IP地址。", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() by acs.nas_ip_address  |limit 10"}
{"input": "。", "instruction": "我想问的是最近有没有发生过账户异常的情况，并且统计出每个IP地址出现次数最多的前十个。", "output": "appname:acs tag:account|stats count() by acs.nas_ip_address |limit 10"}
{"input": "。", "instruction": "我想问ACS系统的某条日志中，其中包含了应用名为“acs”、标签为“admin|stats”的信息，并按访问IP地址进行统计，并只显示前十个结果。", "output": "appname:acs tag:admin|stats count() by acs.nas_ip_address |limit 10"}
{"input": "。", "instruction": "我想问的是最近有多少用户使用了哪些命令，最多可以展示前十条数据。", "output": "appname:acs tag:admin|stats count() by acs.cmd |limit 10"}
{"input": "。", "instruction": "我想问有关防火墙的网络屏蔽器（NetScreen）标签下的源 IP 次数统计信息，并且只显示前 10 个最高的记录。", "output": "appname:firewall tag:netscreen |stats count() by firewall.src_ip |limit 10"}
{"input": "。", "instruction": "我想询问的是以下内容：这是一个使用日志易SPL（Search Processing Language）语法进行的日志查询。它表示从名为“firewall”且带有“netscreen”标记的应用中检索所有记录，并计算每个防火墙目标 IP 的数量，然后仅显示前 10 个结果。", "output": "appname:firewall tag:netscreen |stats count() by firewall.dst_ip  |limit 10"}
{"input": "", "instruction": "我想问以下信息：根据字段tomcat.ua.device进行分组 返回结果集的前十条记录。", "output": "appname:pf_tomcat |stats count() by tomcat.ua.device |limit 10 "}
{"input": "", "instruction": "我想要知道过去一小时内网关哪个模块访问量最高。", "output": "starttime=\"-1h\" appname:pf_gateway |stats count() by gateway.module  |limit 10"}
{"input": "", "instruction": "我想要知道过去两小时内哪些 IP 地址最多发起了请求。请帮我再优化一下这个查询语句。", "output": "appname:pf_gateway |stats count() by gateway.src_ip |limit 20"}
{"input": "。", "instruction": "我想要知道最近十个 IP 和 NTA 有关的警报数量。", "output": "appname:nta AND tag:eve nta.event_type:alert |stats count() by nta.dst_ip |limit 10"}
{"input": "。", "instruction": "我想要知道最近十条与当前问题相关的异常告警信息。", "output": "appname:tda AND 'tag':correlated_incidents |stats count() by tda.host |limit 10"}
{"input": "。", "instruction": "我想要知道最近十条与相关事故有关的 TDA 数据。请帮我把这些数据打印出来。", "output": "appname:tda AND 'tag':correlated_incidents |stats count() by tda.net |limit 10"}
{"input": "。", "instruction": "我想问有关 FireEye 漏洞管理产品的使用情况和趋势分析，我正在寻找关于某些特定的源 IP 和 Nexpose 扫描器版本之间的漏洞数量的信息。", "output": "(appname:nx AND tag:fireeye) |  stats count() by nx.src_ip |limit 10"}
{"input": "。", "instruction": "我想知道最近有多少用户在使用 Ac App 在做哪些操作，比如浏览社交媒体、发帖子等。你能告诉我这些信息吗？", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*社交* OR ac.web_app:微博 OR \"微博\"  OR ac.web_app:*博客*| stats count() by ac.src_ip| limit 20"}
{"input": "。", "instruction": "我想问的是最近有没有人在面试中提到了公司的招聘信息或者求职信息，并且访问过相关页面，具体来说就是访问了哪些网站和页面。", "output": "appname:ac tag:qianxin ac.log_type:* ac.web_app:*招聘* OR ac.web_app:*求职* | stats count() by ac.request_url| limit 10"}
{"input": "。", "instruction": "我想问的是，你们公司的 DLP 服务中，有哪些用户在使用 SkyGuard 模式下发送 SMTP 协议的电子邮件时被系统误判为违规行为的概率比较高吗？", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" | stats count() by dlp.user |limit 10"}
{"input": "。", "instruction": "我想问的是公司的邮箱服务器被黑客入侵了，怎么办？我需要知道哪些IP地址最多发送垃圾邮件", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" | stats count() by dlp.src_ip |limit 10"}
{"input": "。", "instruction": "我想要知道有多少条消息通过了 skyguard 这个防火墙的 SMTP 通道并被拦截了。", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" | stats count() by dlp.send_mail |limit 10"}
{"input": "。", "instruction": "我想知道诺顿杀毒软件过滤掉的网站访问情况，用 URI 排名。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" | stats count() by atv.uri|limit 10"}
{"input": "。", "instruction": "我想问你有关 Norton AntiVirus 和 Eset 防火墙的一些信息，比如最近这些软件在我的设备上发生了多少次事件，以及其中 IP 地址最多的那些 IP 是哪些。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Firewall Event\" | stats count() by atv.dst_ip |limit 10"}
{"input": "。", "instruction": "我想问你有关 Norton AntiVirus 的一些问题，但我不知道如何开始搜索。你能告诉我关于“Norton”和“anti-virus”的相关信息吗？", "output": "appname:antivirus tag:norton  atv.cat:\"ESET Filtered Website Event\" | stats count() by atv.processName|limit 10"}
{"input": "。", "instruction": "我想询问以下信息：您在查询哪个应用的访问记录中没有发现 Mcafee 消息，并按目的 IP 地址对其进行分组统计，然后仅显示前 10 个最高的结果吗？", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.dst_ip | limit 10"}
{"input": "。", "instruction": "我想询问以下内容：> 查询最近十个访问该应用的 IP 地址和访问次数> appname:ips tag:mcafee NOT ips.level:Informational> 根据访问次数从大到小排序。", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() by ips.src_ip | limit 10"}
{"input": "。", "instruction": "我想知道最近十大攻击类型有哪些？提示：1. appname 表示 App Name（应用名）字段；2. tag 表示 Tag（标签）字段。", "output": "appname:nta tag:chaitin|stats count() by nta.attack_name|limit 10"}
{"input": "", "instruction": "我想要知道有多少台设备的IP地址为xxx.xxx.xx.234访问了FireEye应用并使用了smART标记。", "output": "appname:fireeye tag:smart | stats count() by sm.src_ip |limit 10"}
{"input": "", "instruction": "我想问以下内容：从FireEye安全产品中筛选出使用SmartTag技术的IP地址数量最多的10个；", "output": "appname:fireeye tag:smart | stats count() by sm.dst_ip |limit 10"}
{"input": "。", "instruction": "我在询问我有关一段 Linux 系统的日志文本中包含的登录失败事件的信息。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "。", "instruction": "以下内容：这段代码的功能是对`linux.src_ip`列进行统计并按`src_ip`分组，然后返回前五个最大值。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 5"}
{"input": "。", "instruction": "最近五十次发生的 Linux 系统上的登录失败事件中，每个登录失败事件的源 IP 次数统计情况。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 50"}
{"input": "。", "instruction": "我想问有关某 Linux 系统的登录失败事件的信息，并且希望我能返回前 20 个失败登陆 IP 的数量统计结果。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 20"}
{"input": "。", "instruction": "我在寻找关于 Linux 系统中发生的登录失败事件的信息。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 100"}
{"input": "。", "instruction": "我想问的是，在最近有多少人使用了 Linux 来进行系统登录？可以按不同的类型（如桌面版、服务器等）统计一下数量吗？最多显示前 10 个结果，并以表格的形式展示出来。", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 10"}
{"input": "。", "instruction": "我想问有关 Linux 的登录成功事件类型统计数量以及前五名的功能类型的信息。", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 5"}
{"input": "。", "instruction": "有关用户最近五十次登录是否成功的信息。", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 50"}
{"input": "。", "instruction": "我想要知道系统中有哪些程序正在运行，以及他们的类型和数量。此我需要使用 `stats` 函数进行聚合。但是我只想获取最近一百个结果。", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 100"}
{"input": "。", "instruction": "我想问的是系统启动时会执行哪些命令，并按执行次数排序，前十条。请帮忙把这些命令打印出来。", "output": " (appname:linux CROND)  |stats count() by linux.cmd  |limit 10"}
{"input": "。", "instruction": "我想要知道在 Linux 下使用 secure 标记的应用中，用户接受的次数最多的是哪个类型。请给出答案并解释原因。", "output": "appname:linux tag:secure AND accepted |stats count() by type  |limit 10"}
{"input": "。", "instruction": "我想要知道在 Linux 下使用 secure 模块的应用数量最多的类型有哪些，并只显示前 100 个结果。", "output": "appname:linux tag:secure AND accepted |stats count() by type|limit 100"}
{"input": "。", "instruction": "我想要知道在 Linux 下有哪些安全类型记录，并只显示前 20 个结果。", "output": "appname:linux tag:secure AND accepted |stats count() by type  |limit 20"}
{"input": "。", "instruction": "我想问的是，在 Linux 下有哪些安全事件呢？您能给出具体的五个吗？另外，您是否知道这些分别属于哪些类别？", "output": "appname:linux tag:secure AND accepted |stats count() by type |limit 50"}
{"input": "。", "instruction": "我想要知道在 Linux 下使用 secure 标签的应用中，用户最常用的哪些应用是什么样的。并只显示前 10 个结果。", "output": "appname:linux tag:secure Accepted |stats count() by user    |limit 10"}
{"input": "。", "instruction": "我想询问 Linux 系统的安全性问题，并希望通过分析登录失败事件来获取有关用户的信息。搜索请求中包括以下关键字：`secure`，`authentication failure`和`user`。这些关键词告诉我要寻找与安全相关的问题以及关于用户的信息。", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 50"}
{"input": "。", "instruction": "我想询问 Linux 下的安全相关问题，并且希望得到用户登录失败的信息。", "output": "appname:linux tag:secure AND \"Authentication failure\" |stats count() by user    |limit 20"}
{"input": "。", "instruction": "我想问的是，系统中有哪些 cron 命令正在运行？你能列出前 10 个吗？如果没有这么多的话，就随便几个吧。", "output": "appname:linux tag:cron CROND |stats count() by command    |limit 10"}
{"input": "", "instruction": "帮我分析 Nginx 访问日志中 status 为 200、appname 是 rizhiyi 和 tag 是 nginx_access 的请求数目最多的前五条记录。", "output": " (appname:\"rizhiyi\" AND tag:\"nginx_access\")  |stats count() by'status'  |limit 5"}
{"input": "", "instruction": "我想问 Nginx 服务器的访问记录中，有关 yottabyte 消息的数量和状态分布情况。", "output": " (appname:\"yottabyte\" AND tag:\"nginx_access\")  |stats count() by'status'  |limit 10"}
{"input": "", "instruction": "我想询问 Nginx 服务器的访问日志中，请求路径包含 \"rizhiyi\" 和标签为 \"nginx_access\" 的 HTTP 请求状态码分布情况。", "output": " (appname:\"rizhiyi\" AND tag:\"nginx_access\")  |stats count() by'status'  |limit 20"}
{"input": "", "instruction": "我想要知道网站 rizhiyi 上有哪些 Apache 服务的访问记录，并按状态码分组统计数量，结果限制为 50 个最新的记录。", "output": " (appname:\"rizhiyi\" AND tag:\"apache_access\")  |stats count() by'status'  |limit 50"}
{"input": "。", "instruction": "我想询问aix的登录成功次数以及这些登录请求的IP地址的信息", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "对`appname`和`src_ip`字段进行分组并计算每个组中事件数量的总数，然后按顺序显示前100个最高频率的组合。", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 100 "}
{"input": "。", "instruction": "我想询问以下内容：搜索应用名为 `aix`且包含 `\"Login successful for\"`的登录记录，并按源 IP 进行统计，返回前 50 个结果。", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 50 "}
{"input": "。", "instruction": "我在寻找有关登录成功的应用和源 IP地址的信息。", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.src_ip |limit 5 "}
{"input": "。", "instruction": "我想问关于某一台服务器上发生的登录失败事件数量最多的前十个端口的信息。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 10 "}
{"input": "", "instruction": "我想问有关某款应用的登录失败次数最多的前五个端口的信息。这款应用的名称为“aix”。在我的数据库中，使用以下搜索条件检索到相关信息：1. `appname:aix` - 意味着要查找包含字符串“aix”的所有记录，即该字段的值必须包含“aix”。2. `\"Failed password for\"` - 意味着要查找包含字符串“Failed password for”的所有记录，即该字段的值必须包含“Failed password for”。3. `|stats count() by aix.src_port`- 使用stats子句计算每个源端口（aix.src_port）的登录失败数量，并将结果按数量排序。4. `|limit 5`- 将结果限制为前五条记录。因此，根据提供的信息，寻找关于“aix”应用的登录失败次数最多的前五个端口的信息。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 5 "}
{"input": "。", "instruction": "我想询问关于某台服务器的登录失败数量以及这些失败的源端口的信息。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 50 "}
{"input": "。", "instruction": "我在询问的是最近十分钟内，同一时间段内出现过的失败密码登录请求数量最多的前百个端口。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_port |limit 100 "}
{"input": "。", "instruction": "我想问以下信息：这意味着寻找在我的应用中发生的错误数量以及它们的严重性。", "output": " appname:aix |stats count() by aix.severity  |limit 20"}
{"input": "。", "instruction": "我想要知道过去一小时内发生的错误数量和严重程度分布情况。", "output": " appname:aix |stats count() by aix.severity  |limit 100"}
{"input": "。", "instruction": "我想要知道过去五十次错误的数量和严重性分布情况。", "output": " appname:aix |stats count() by aix.severity  |limit 50"}
{"input": "。", "instruction": "我想要知道过去五分钟内有哪些严重错误的应用信息。", "output": " appname:aix |stats count() by aix.severity  |limit 5"}
{"input": "。", "instruction": "找登录名为`aix`且执行了`Login successful for`操作的用户数量排名前十的结果。", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "我想询问最近五十个登录成功的用户名称和数量的信息。", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 50 "}
{"input": "。", "instruction": "我想问有关aix的登录成功次数以及用户名称的信息", "output": "appname:aix  AND \"Login successful for\" |stats count() by aix.user |limit 5 "}
{"input": "。", "instruction": "我想问使用 SPL（Search Processing Language）语法编写搜索语句，用来统计在AIX系统中“失败密码”错误发生次数最多的IP地址。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "我想询问关于某台服务器的登录失败情况，用户在反馈时提到了名为“aix”的应用和一条包含“Failed password for”的消息。需要帮助进行以下操作：1. 根据日志中提到的应用名称（appname）、错误信息（Failed password for）以及源 IP （aix.src_ip）对系统事件数据进行筛选；2. 使用 stats 命令计算出不同源 IP 下登录失败次数最多的前 10 个记录。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 10 "}
{"input": "。", "instruction": "使用SPL语言（Search Processing Language）编写搜索语句，用于统计最近24小时内由aix应用生成的所有失败密码登录尝试的IP地址数量并返回前20个 IP 地址。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 20 "}
{"input": "。", "instruction": "我想使用 SPL（Search Processing Language）语法编写搜索语句，在AIX系统中查找最近五十次失败密码登录的IP地址。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 50 "}
{"input": "。", "instruction": "我想问有关aix的登录失败次数最多的 IP 是多少以及它们对应的主机名或域名是什么吗？", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 5 "}
{"input": "。", "instruction": "我想询问关于某台服务器的登录失败情况，这位用户希望我能帮忙找出最近十个失败的 IP 地址和次数。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.src_ip |limit 100 "}
{"input": "。", "instruction": "我想询问以下信息：用户在aix登录失败或成功的次数以及具体操作的信息。", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 10 "}
{"input": "。", "instruction": "我想问有关某台AIX服务器的登录失败和登录成功情况吗？", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 10 "}
{"input": "。", "instruction": "我想问有关aix的登录失败和登录成功事件数量的信息。", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 50 "}
{"input": "。", "instruction": "我想询问的是关于AIX服务器的登录失败和登录成功事件数量统计情况", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 5 "}
{"input": "。", "instruction": "我想问“aix”的登录失败和登陆成功事件时，应该如何进行统计分析并返回前100条结果：1. 根据字段`appname`，将数据过滤到`aix`应用中；2. 使用关键字或短语`Failed password for`或`Login successful for`从文本字段中筛选出包含这两个词项的记录；3. 对剩余字段使用聚合函数`count()`计算出现次数，并按字段`aix.type`对结果进行分组排序；4. 返回前100行结果。", "output": " appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count() by aix.type  |limit 100 "}
{"input": "。", "instruction": "我想问的是，有多少人使用了 appname:aix 应用并尝试登录失败了？", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "我想询问的是关于AIX服务器的登录失败次数最多的前十位用户的信息。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 10 "}
{"input": "。", "instruction": "最近两十条记录中用户使用过的应用名称为“aix”并且出现过“Failed Password For”的信息数量统计结果。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 20 "}
{"input": "。", "instruction": "我在询问的是最近用户失败的登录次数最多的五十个人。", "output": "appname:aix  AND \"Failed password for\" |stats count() by aix.user |limit 50 "}
{"input": "。", "instruction": "我想问有关 MySQL 查询错误的统计信息和排名情况，具体来说：1. 使用 `| stats count( ) by mysql.level` 命令对相关错误进行计数并按级别分组；2. 使用 `| limit 5` 命令限制返回结果集中的行数为 5 条", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 5"}
{"input": "。", "instruction": "我想问有关 MySQL 查询错误级别的相关统计和前 20 个结果", "output": " (appname:mysql tag:mysql_error)  |stats count() by mysql.level  |limit 20"}
{"input": "。", "instruction": "我想使用 SPL（Search Processing Language）语法编写查询语句，它表示对 appname 为 \"aix\" 的事件进行统计并按 facility 分组，然后返回前 10 个结果。", "output": "appname:aix  |stats count() by aix.facility  |limit 10"}
{"input": "。", "instruction": "我想表达的是“使用 appname 为 aix 和 '登录成功' 一起检索用户数量最多的前 10 个”。", "output": "appname:aix AND \"Login successful for\" |stats count() by aix.user |limit 10"}
{"input": "。", "instruction": "我想问的是，在过去一小时内，有多少人尝试使用 aix 用户名登录到系统并输入错误的密码？", "output": "appname:aix AND \"Failed password for\" |stats count() by aix.src_ip |limit 10"}
{"input": "。", "instruction": "我想询问最近十个失败的用户密码登录AIX情况。", "output": "appname:aix AND \"Failed password for\" |stats count() by aix.user |limit 10"}
{"input": "。", "instruction": "我想询问关于Tomcat服务状态统计信息，并限制结果数量为十条。。", "output": "appname:middleware tag:tomcat|stats count() by middleware.status  |limit 10 "}
{"input": "", "instruction": "我想问 Tomcat 服务的状态信息以及访问次数最多的前十条记录的信息？", "output": "appname:pf_tomcat |stats count() by tomcat.status  |limit 10 "}
{"input": "", "instruction": "我想问有关某款软件的访问量和地区分布情况，这款软件的名称是“pf_tomcat”，并且它没有在其源代码中包含字符串“tomcat”。此外，我还需要仅显示前二十个地区的访问数量统计信息。", "output": "appname:pf_tomcat NOT tomcat.src.geo.city:\"*\"  |stats count() by tomcat.src.geo.province  |limit 20"}
{"input": "", "instruction": "我想问 JBoss Fuse 的使用情况和性能数据。我正在寻找关于 JBoss Fuse 中间件类型的统计信息以及前十名的结果。", "output": " (appname:jboss)  |stats count() by middleware.type  |limit 10"}
{"input": "", "instruction": "我想要知道在 JBoss 中有哪些最常见的错误或警告消息，并按严重级别进行统计。请提供前 10 个结果。", "output": " (appname:jboss)  |stats count() by middleware.level  |limit 10"}
{"input": "", "instruction": "我想问的是，在 haproxy 中，有哪些请求的响应时间超过了 1s（比如 middleware.tw 和 middleware.tc）？并且只显示前 20 个 IP 地址。", "output": " (appname:haproxy (middleware.tw:<0 OR middleware.tc:<0))  |stats count() by'middleware.srcip'  |limit 20"}
{"input": "。", "instruction": "我想问的是，Apache 服务的哪些状态最多？并只显示前 10 个结果。", "output": " (appname:apache tag:access)  |stats count() by middleware.status  |limit 10"}
{"input": "。", "instruction": "1. 从 Apache 应用中检索包含“访问”标记的所有中间件名称；2. 使用 stats 命令计算每个中间件名称出现次数并按降序排列；3. 返回前 10 个结果。", "output": " (appname:apache tag:access)  |stats count() by middleware.desc  |limit 10"}
{"input": "。", "instruction": "帮我分析访问日志中有关“Apache”应用和具有“标签为‘access’且中间件状态大于等于399”的请求", "output": " (appname:apache tag:access middleware.status:>399)  |stats count() by middleware.desc  |limit 10"}
{"input": "。", "instruction": "我想问的是 apache 服务的访问状态分布情况，并且只显示最近十条记录。", "output": " (appname:apache tag:access)  |stats count() by middleware.status  |limit 10"}
{"input": "", "instruction": "我想问有关 WebLogic 应用的访问状态的信息，并且希望获得最近十条记录的数据统计信息。", "output": "(appname:weblogic tag:access)  |stats count() by middleware.request_status  |limit 10"}
{"input": "。", "instruction": "我想要知道系统中有哪些程序在用户登录后会触发 \"登录成功\" 这个事件，并统计出数量最多的十个类型。", "output": " appname:linux AND  linux.event_name:登录成功事件|stats count() by linux.type  |limit 10"}
{"input": "。", "instruction": "我正在寻找关于 Linux 操作系统中发生的登录成功事件的信息，并且希望了解最常见的源 IP 地址和数量。", "output": " (appname:linux linux.event_name:登录成功事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "。", "instruction": "我想询问如何使用日志易来统计发送给某一邮箱地址的邮件数量以及这些邮件中包含“tracking”这个标签的数量。", "output": "(appname:exchange tag:tracking)  |stats count() by exchange.recipient_address |limit 5"}
{"input": "", "instruction": "我希望检查 Nginx 服务器上的应用名为 pf_nginx、HTTP 返回码大于或等于 399 的请求数量并按 URI 分组统计。", "output": " (appname:pf_nginx nginx.status:>399)  |stats count() by nginx.uri  |limit 20"}
{"input": "。", "instruction": "我在寻找关于某 Linux 系统的登录成功事件的相关信息，并且希望获得最新的十个 IP 地址和它们发生该事件的次数。", "output": "(appname:linux linux.event_name:登录成功事件) OR (appname:linux linux.log_type:auth linux.event_name:登录成功事件) |stats count() by linux.src_ip |limit 10"}
{"input": "。", "instruction": "以下内容：这是一个对`linux`表中`src_ip`列进行分组并计算数量的统计查询，其中`linux.src_ip`表示`linux`表中的`src_ip`列。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count() by linux.src_ip |limit 10"}
{"input": "。", "instruction": "我想问有关某应用的IIS服务器上的IP地址访问数量的信息，我正在寻找与应用名为“appname”、中间件标记（tag）为“iis”相关联的所有IP地址的访问次数统计信息。", "output": "(appname:middleware tag:iis)  |stats count() by middleware.dst_ip  |limit 10"}
{"input": "。", "instruction": "rzytv 应用的IIS服务器访问量统计情况，并要求提供前十名页面的访问数量排行榜。", "output": " (appname:rzytv tag:iis)  |stats count() by rzytv.cs_uri_stem  |limit 10  "}
{"input": "。", "instruction": "我想询问IIS的访问量和来源IP地址的信息。", "output": "(appname:middleware tag:iis)  |stats count() by middleware.src_ip |limit 10"}
{"input": "。", "instruction": "寻找名为“middleware”且带有“IIS”标签的应用的访问量统计信息以及该应用的来源IP地址分布情况。", "output": "(appname:middleware tag:iis)  |stats count() by middleware.src_ip |limit 10"}
{"input": "", "instruction": "我想问的是，有多少个访问来自于哪些 IP 地址的 Tomcat 用户访问了这个应用名为 pf_tomcat 的网站。", "output": "appname:pf_tomcat  |stats count() by tomcat.src_ip |limit 10"}
{"input": "。", "instruction": "我想问Apache Spark在不同操作系统上的访问量情况以及前十名用户的 User-Agent 信息？", "output": " (appname:apache tag:spark)  |stats count() by middleware.ua.os  |limit 10"}
{"input": "", "instruction": "我想问有关 WebLogic 应用的访问日志中，HTTP 状态码大于等于 400 的请求数量统计以及每个 URL 下的计数情况。", "output": "(appname:weblogic tag:access middleware.request_status:>399)  |stats count() by middleware.url  |limit 20"}
{"input": "", "instruction": "我想知道最近五十条关于Aruba的数据访问点的严重错误记录。", "output": "appname:access_point AND tag:aruba AND (access_point.severity:EMERG  OR access_point.severity:ALERT OR access_point.severity:CRIT OR access_point.severity:ERRS) | limit 50"}
{"input": "。", "instruction": "我想问有关zdns产品的DNS解析记录中包含的错误码为*（通配符）且数量不超过100条的信息。", "output": "appname:dns tag:zdns dns.rcode:*| limit 100"}
{"input": "", "instruction": "我想询问关于 Windows 应用的崩溃报告的50条信息。", "output": "appname:pf_windows tag:system (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR \"错误\" OR \"失败\") |limit 50"}
{"input": "", "instruction": "帮我查找应用在 Windows 平台上出现的任何错误或警告的信息？", "output": "appname:pf_windows tag:application (failed OR err OR error OR errors OR warn OR warning OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR \"错误\" OR \"失败\") |limit 50"}
{"input": "", "instruction": "我想问有关 Aruba AP 设备的错误和警告事件的信息。", "output": "appname:access_point AND tag:aruba AND (access_point.severity:EMERG  OR access_point.severity:ALERT OR access_point.severity:CRIT OR access_point.severity:ERRS)|limit 50"}
{"input": "", "instruction": "我想知道最近五十条同花顺的详细日志，请求类型码为 4。", "output": "appname:ths THS.REQTYPE:4 | limit 50 "}
{"input": "", "instruction": "帮我查找最近五十条同花顺系统的日志记录，请求类型码为 E。", "output": "appname:ths THS.REQTYPE:E | limit 50 "}
{"input": "", "instruction": "我想知道最近五十条的同花顺交易记录，请求类型为 F。", "output": "appname:ths THS.REQTYPE:F | limit 50 "}
{"input": "。", "instruction": "我想问的是 apache 这个应用的访问日志中，有关 access 和 stats 标签的请求数和总响应长度（sum(middleware.resp_len)），按中间件的 clientip 分组并返回前 10 个结果。", "output": "appname:apache tag:access|stats sum(middleware.resp_len) as len by middleware.clientip|limit 10"}
{"input": "。", "instruction": "我想问的是，从哪些国家的 IP 活跃访问了我们的防火墙服务？你可以给出前 20 个最活跃的国家和访问数量吗？", "output": "appname:firewall   |stats count() as count_ by firewall.msg.src_addr.geo.country |limit 20"}
{"input": "。", "instruction": "我想询问防火墙的端口统计信息", "output": "appname:firewall   |stats count() by firewall.msg.dst_port |limit 20"}
{"input": "。", "instruction": "我想问的是，fortress有哪些用户使用了跳板机的命令？并且只显示前十个最常用的用户。", "output": "appname:fortress tag:jumpserver  fortress.log_type:session_command_log | stats count() as cnt by fortress.user|limit 10"}
{"input": "。", "instruction": "我想要知道最近dc防火墙发生过哪些安全事件以及数量有多少。", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.event_name |limit 10"}
{"input": "。", "instruction": "寻找最近发生在应用“防火墙”中且标记为“DC”的安全事件数量最多的源 IP地址的前十个结果。", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.src_ip |limit 10"}
{"input": "", "instruction": "我想问的是，最近有没有人在使用 td app 进行登录操作？你能否帮我把这些信息列出來？谢谢！", "output": "appname:tdx TDX \"登陆\" TDX.REQUEST_TYPE:* | stats count() as cnt by TDX.TDX_ID_XT_CLIENT| limit 10"}
{"input": "", "instruction": "我想问以下信息：这个查询语句的含义是：从Symantec AntiVirus Gateway中检索包含“规则”标签且属于appname为antivirus_gateway的所有记录，并统计每个antivirus_gateway.proto字段出现的次数，然后只显示总计最多的前十条结果。", "output": "* appname:antivirus_gateway tag:symantec  \"规则\" | stats count() as total by antivirus_gateway.proto |limit 10"}
{"input": "。", "instruction": "数据库审计功能是否正常工作，提供最近十个访问源IP地址和请求数量排名列表。", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.src_ip|limit 10"}
{"input": "。", "instruction": "我想问有关数据库审计应用的端口统计信息？", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "。", "instruction": "我想问的是，在 appname 为 dbaudit 下，有哪些规则被执行了多少次？并且只显示前 10 个结果。", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.rule|limit 10"}
{"input": "。", "instruction": "我想问有没有在某个时间范围内，每分钟的 IP 次数最多的前十个 IP 是多少？", "output": "appname:dbaudit  | stats count() as cnt by dbaudit.dst_ip|limit 10"}
{"input": "。", "instruction": "我想问以下信息：您需要统计 appname 为 \"bb\"、tag 为 \"mail\" 的所有数据中的 receiver 列的数量并返回前 10 个结果。", "output": "appname:bb tag:mail | stats count() as cnt by bb.receiver | limit 10"}
{"input": "", "instruction": "我想要知道哪些服务的防火墙有问题。", "output": "(* AND appname:firewall) AND tag:juniper |stats count() as total  by firewall.service|limit 10"}
{"input": "。", "instruction": "我想要知道在绿盟 IPS 中，某一类事件各有多少次访问。我需要从以下三个字段中进行筛选：appname，ips.event_name，tag。", "output": "appname:ips tag:nsfocus  | stats count() as a by ips.event_name | limit 10"}
{"input": "。", "instruction": "我想要知道绿盟的 ddos 设备有多少个IP地址被攻击了多少次。我需要知道源IP、目标IP以及总共发生了几次攻击。", "output": "appname:ddos tag:nsfocus ddos.src_ip:* | stats count(ddos.dst_ip) by ddos.dst_ip, ddos.src_ip | limit 200"}
{"input": "。", "instruction": "我想问的是防火墙的流量情况", "output": "appname:firewall AND tag:pix | stats count() by firewall.proto|limit 10"}
{"input": "。", "instruction": "我想问的是，有多少条 Cisco 设备的路由器发生了什么事件？你可以把结果限制为前 10 行。", "output": "appname:router tag:cisco | stats count() as cnt by router.event_type|limit 10"}
{"input": "。", "instruction": "我想问的是，有多少条记录的 appname 是 'router'，并且带上了 'tag:huawei' 的 log?", "output": "appname:router tag:huawei | stats count() as cnt by router.module_name |limit 10"}
{"input": "", "instruction": "我想询问 WebLogic 中间件的错误消息数量排名前十的情况。", "output": "appname:weblogic middleware.severity:\"Error\" OR  middleware.severity:ERROR|stats count() by middleware.msg | limit 10"}
{"input": "。", "instruction": "我想要知道有多少个 IP 是和 dptech 有关的，并且只显示前二十条结果。", "output": "appname:ips  tag:dptech | stats count() as cnt by ips.dst_ip|limit 20"}
{"input": "。", "instruction": "我想问的是，在有多少个 IP 来自同一地区的用户访问了我们的网站？", "output": "appname:ips  tag:dptech | stats count(ips.src.geo.ip) by ips.src.geo.ip,ips.dst.geo.ip | limit 10"}
{"input": "", "instruction": "希望统计`appname:threat`标签为`360`的流量，并按`threat.dst_port`进行分组，然后返回前十个结果。", "output": "appname:threat tag:360 | stats count() as cnt by threat.dst_port|limit 10"}
{"input": "。", "instruction": "这是一个统计分析任务，它使用了分组和排序等操作符来获取指定应用和标签下每个端口的流量总数并按数量从高到低进行排名。", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.dst_port|limit 10"}
{"input": "。", "instruction": "我想询问以下信息：您在使用 AppCenter Analytics SDK 查询应用“Ac”的错误和警告数量，并按级别对结果进行排序，限制为前 20 个记录。", "output": "appname:ac tag:surfilter ac.event_type:app_filter OR ac.event_type:other_app|stats count() as cnt by ac.kv.log_level |limit 20"}
{"input": "。", "instruction": "我想要知道在新华三 IPS中访问某个 IP 的次数最多有多少次，并且只显示前 10 个IP的统计信息。", "output": "appname:ips tag:h3c | stats count() as cnt by ips.dst_ip | limit 10"}
{"input": "。", "instruction": "我想询问 Nginx 应用的错误日志中，源 IP 次数最多的前 10 个记录的信息。", "output": "appname:nginx tag:error |stats count() as cnt by middleware.src_ip | limit 10"}
{"input": "。", "instruction": "我想要知道过去一小时内访问我的服务器的IP地址最多的前十个用户是谁，并且只显示他们的IP地址和访问次数", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst_ip|limit 10"}
{"input": "。", "instruction": "我想问有关 Palo Alto Networks Firewall 的应用名称为“Firewall”且带有标签“Pix”的流量统计信息，并只显示源 IP 地址在该时间段内最多出现过的前 10 个IP地址的信息。", "output": "appname:firewall AND tag:pix | stats count() by firewall.src_ip|limit 10"}
{"input": "。", "instruction": "我想编写查询语句，用在安全审计中查找源端口为`firewall.src_port`且应用名称为`firewall`并且带有标记`tag:pix`的流量数量统计信息。", "output": "appname:firewall AND tag:pix | stats count() by firewall.src_port|limit 10"}
{"input": "。", "instruction": "根据防火墙应用和标记为“ pix ”的流量进行统计，并仅显示最常见的十个端口", "output": "appname:firewall AND tag:pix | stats count() by firewall.dst_port|limit 10"}
{"input": "。", "instruction": "帮我进行 VPN 用户数量统计并返回前十的操作。", "output": "appname:vpn |stats count() as cnt by vpn.user | limit 10"}
{"input": "。", "instruction": "我想问有关 VPNs（虚拟私人网络）的登录失败情况的信息。具体来说：1. appname:vpn 表示只搜索与应用名称为“VPN”的应用相关的数据；2. vpn.msg:\"Log in unsuccessfully!\" AND vpn.actype:login 表示仅包括消息内容包含“Log in unsuccessfully!”且动作类型为“Login”的记录；3. |stats count() as cnt by vpn.user,vpn.actype|表示对结果集执行统计运算并将计数结果按用户和动作类型分组显示；4. limit 10 表示返回结果集中的前 10 个记录。因此，根据上述分析，我在寻找关于某 VPN 应用中用户 xxx 在进行登录操作时发生错误或失败的信息。", "output": "appname:vpn vpn.msg:\"Log in unsuccessfully!\" AND vpn.actype:login |stats count() as cnt by vpn.user,vpn.actype|limit 10"}
{"input": "。", "instruction": "查询`appname=firewall`且`tag=360wangshen`的记录数、按`firewall.alarm_ip`分组并取前十个结果。", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.alarm_ip|limit 10"}
{"input": "。", "instruction": "CDN服务商SANGFOR的访问量排名前十的IP地址和数量统计情况。", "output": "(appname:cdn AND tag:sangfor) | stats count() as cnt by cdn.src_outside_ip |limit 10"}
{"input": "。", "instruction": "我想问的是，有哪些用户使用了华为AC，并且没有进行过登录操作？请返回前十名的用户姓名和数量", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  |stats count() as cnt by ac.user_name|limit 10"}
{"input": "。", "instruction": "我想询问在 Linux 应用中包含 `audit` 标记或具有 `audit` logType 的任何记录。", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit)) AND (USER_AUTH OR USER_LOGIN)|stats count() as cnt by linux.src_ip | limit 10"}
{"input": "。", "instruction": "我想问的是，在上个月中，有多少次发生了数据库安全事件？", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.event_name |limit 10"}
{"input": "。", "instruction": "我想要知道在 hillstone 应用中，发送最多的 threat 消息的 IP 是多少，并且只显示前 10 个结果。", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.src_ip | limit 10"}
{"input": "。", "instruction": "我想问的是，最近有没有发现一些新的恶意软件的传播方式吗？如果有的话，那些方式分别是什么呢？", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.dest_ip|limit 10"}
{"input": "。", "instruction": "我想询问有关反病毒软件应用“Antivirus”的趋势和统计信息，并按数据源 IP 分组进行限制为 10 个结果。", "output": "appname:antivirus tag:trendmicro|stats count() as cnt by dsm.src_ip|limit 10"}
{"input": "。", "instruction": "统计`antivirus`表中带有`tag=TrendMicro`的记录数量并返回前10个IP地址。", "output": "appname:antivirus tag:trendmicro   |stats count() as cnt by dsm.dst_ip|limit 10"}
{"input": "", "instruction": "我想问以下内容：对某应用（`appname:bb`）的邮件记录（`tag:mail`）进行统计并返回发送人数量最多的前十个用户信息。", "output": "appname:bb tag:mail | stats count() as cnt by bb.sender |limit 10"}
{"input": "。", "instruction": "想要查询哪个应用的 session 数据中包含 \"tag\" 为 \"session\"、统计每种用户数量并返回前 10 个结果", "output": "appname:bb tag:session|stats count() as cnt by bb.user_name|limit 10"}
{"input": "", "instruction": "我想询问关于officescan防病毒软件的威胁情报数量和分布情况，具体来说，您所需的数据包括：1、该产品的名称为“Antivirus Gateway”；2、标签为“Officesscan”；3、反病毒模块的字段名为“antivirus.threat_name”。", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* | stats count() as cnt by antivirus.threat_name | limit 10"}
{"input": "", "instruction": "我想问以下信息：- 查询 appname 为 \"antivirus_gateway\"、tag 为 \"officescan\" 和 antivirus.threat_name 以 \"*\" 结尾的记录；- 对这些记录使用 stats 命令进行汇总，并将结果限制为 10 个。", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* | stats count() as cnt by antivirus.file | limit 10"}
{"input": "。", "instruction": "：我想知道有哪些IP地址被标记为“huawei”和“攻击”。", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   |stats count() as cnt by firewall.dst_ip|limit 10"}
{"input": "", "instruction": "我想问以下信息：- appname=dm- tag=sql- 查询的统计结果包括：count(*) as cnt, 分组依据为database.user，并限制返回前10条记录。", "output": "appname:dm tag:sql | stats count() as cnt by database.user|limit 10"}
{"input": "。", "instruction": "我想问的是数据库审计中有哪些安全问题需要注意？你能告诉我吗？我会尽力帮到您。", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_ip,dbaudit.dst_port|limit 10"}
{"input": "。", "instruction": "我想问有关数据库审计和应用安全性的最新信息吗？根据提供的信息，您的搜索条件为“appname：dbaudit 和 tag：dbappsecurity”。我在寻找与数据库审计和应用安全相关的所有数据，并按源 IP 进行统计，然后返回前 10 个结果。。", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.src_ip|limit 10"}
{"input": "。", "instruction": "我想问的是F5在哪些省份有用户使用VPN访问公司的应用服务，并按访问次数排序，返回前十个结果。", "output": "appname:loadbalancing tag:f5 loadbalancing.src_ip:* *vpn* | stats count() as cnt by loadbalancing.src.geo.province|limit 10"}
{"input": "。", "instruction": "我想问的是，在过去一小时内，有多少个设备请求了 DHCP 服务并获得 IP 地址？", "output": "appname:dns tag:zdns dns.dhcp_req_type:* |stats count() as cnt by dns.dhcp_mac|limit 10"}
{"input": "。", "instruction": "我想问的是：在 apache 服务器上，通过访问哪些设备的用户最多？请给出前 10 个设备，并按数量排序", "output": " (appname:apache tag:access)  |stats count(middleware.ua.device) as ct by middleware.ua.device |limit 10"}
{"input": "。", "instruction": "我想询问的是关于 Apache 访问日志中 status 大于等于 399、按请求路径统计数量的结果集中的前 20 个记录的信息。", "output": " (appname:apache tag:access middleware.status:>399)  |stats count(middleware.request_path) as ct by middleware.request_path  |limit 20"}
{"input": "。", "instruction": "我想询问如何使用查询 Apache Web 服务器的访问量和 IP 次数。", "output": " (appname:apache tag:access)  |stats count(middleware.clientip) as ct by middleware.clientip  |limit 10"}
{"input": "。", "instruction": "我想询问最近apache访问量最多的前十个网站的来源吗？", "output": " (appname:apache tag:access)  |stats count(middleware.referer) as ct by middleware.referer |limit 10"}
{"input": "。", "instruction": "我想问的是，最近有没有发现有哪些恶意的链接地址吗？你能不能告诉我这些链接对应的 IP 地址和数量吗？", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.src_ip|limit 10"}
{"input": "。", "instruction": "我想询问以下内容：这意味着在`tda`应用中包含标记为“恶意链接”的IP地址的数量，并按这些IP地址进行分组，然后仅显示每个组中的最大值。", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.dst_ip|limit 10"}
{"input": "。", "instruction": "我想问有关 TDA 威胁情报和来源 IP 地址的信息。", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.src_ip|limit 10"}
{"input": "。", "instruction": "我的问题可能涉及到跨行或跨列的统计分析问题。我希望通过对`firewall`表中的`tag`和`subtype`字段进行筛选，并使用`stats`函数计算不同地区VPN用户数量的分布情况，同时限制返回结果集中最多10条记录。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.rem_ip.geo.province|limit 10"}
{"input": "。", "instruction": "使用了Fortinet的VPN功能并统计出访问次数最多的前十个IP地址的信息。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.remip|limit 10"}
{"input": "。", "instruction": "我在询问 DDOS 漏洞的数量以及它们被保护 IP 分布情况", "output": "appname:ddos | stats count() as cnt by ddos.protected_ip |limit 10"}
{"input": "。", "instruction": "我想问的是，这个应用访问的目标端口有哪些最常见的？", "output": "appname:ips  tag:dptech ips.dst_ip:*| stats count() as cnt by ips.dst_port |limit 10"}
{"input": "。", "instruction": "我想问的是有多少台设备访问了数据库的安全相关接口？请帮忙把结果打印出来。", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.dst_ip |limit 10"}
{"input": "。", "instruction": "从bds应用中检索包含“hillstone”标签且事件类型为“威胁”的所有记录，并统计每个目标IP地址出现的次数，然后只显示前十个最高频率的目标IP地址。", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.dst_ip | limit 10"}
{"input": "。", "instruction": "我想问以下内容：- 查询 appname 为 \"bds\"、tag 为 \"hillstone\" 和 bds.event_type 为 Threat 的条目数- 以 bds.dst_port 分组并统计数量，然后返回前 10 个结果", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.dst_port | limit 10"}
{"input": "", "instruction": "我寻找一种能够根据主机保护消息中的 `tag` 和 `message source IP address`（源IP地址）统计出访问量最多的前十个应用的方法。", "output": "appname:host_protect tag:qingteng | stats count() as cnt by hp.msg.src_ip |limit 10"}
{"input": "。", "instruction": "我想问的是，从 tdpreporter 中读取所有带有 threatbook 标签的应用数据，并按访问量排序，返回前 10 个结果。", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.http.url | limit 10"}
{"input": "。", "instruction": "我想要知道有多少台设备的IP地址为tdp.net.src_ip,并且在tag中包含了\"threatbook\",并只显示前十个结果。", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.src_ip|limit 10"}
{"input": "。", "instruction": "我在寻找关于“Unigine”应用和“LeagSoft”标签的下载量统计信息。", "output": "appname:uninxg tag:leagsoft   | stats count() as cnt by uninxg.termip|limit 10"}
{"input": "。", "instruction": "我想问以下信息：- 查询 appname 为 \"antivirus\"、tag 为 ruixing 的数据；- 对查到的结果进行统计并按 antivirus.dst_ip 分组；- 返回前 10 个分组的数量统计结果。", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.dst_ip|limit 10"}
{"input": "。", "instruction": "我想问以下信息：在 AntiVirus 应用中搜索包含“ruixing”标签的病毒名称并返回前 10 个最常见的病毒。", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.virus_name|limit 10"}
{"input": "。", "instruction": "我想问以下信息：在 appname 为 \"threat\" 和标签为 \"360\" 的安全事件中，统计出攻击名称出现的次数并返回前 10 个结果。", "output": "appname:threat tag:360 | stats count() as cnt by threat.attack_name|limit 10"}
{"input": "", "instruction": "我想表达的是：这个语句的含义是从`main`索引中搜索所有以`access_`开头并且包含`appname:threat`和`tag:360`两个字段的数据，并统计每个源IP出现的次数，然后只显示前十个最高频率的源IP。", "output": "appname:threat tag:360 | stats count() as cnt by threat.src_ip|limit 10"}
{"input": "。", "instruction": "我想问有关数据库审计和应用安全性的最新趋势的信息吗？根据您提供的搜索语法，我将尝试生成以下查询：`appname:dbaudit AND tag:dbappsecurity`。", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.dst_port|limit 10"}
{"input": "。", "instruction": "从`skyeye`这个应用中搜索包含`tag:qianxin`标签的记录数，并按`skyeye.src_ip`进行分组统计，返回前十个结果。", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.src_ip|limit 10"}
{"input": "。", "instruction": "我想要知道在一段时间内，使用 Oracle 应用的用户有哪些 IP 地址访问过我们的服务，并且按访问次数排序，前 10 个IP地址是多少。", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.src_ip |limit 10"}
{"input": "。", "instruction": "我想问的是，在哪些应用中，存在“华为”的漏洞，出现次数最多的一款攻击类型是什么？", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.attack_name |limit 10"}
{"input": "。", "instruction": "我想要知道在使用了哪些应用的用户访问了我们的网站，并且按访问次数排序，前二十个IP地址有多少条数据。", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) |stats count() as cnt by ac.src_ip |limit 20"}
{"input": "。", "instruction": "从 ac 应用中检索包含 surfilter 标记且事件类型为 im 的访问控制事件，并按源 IP 对结果进行分组和排序，以获取前 20 个最高计数的记录。", "output": "appname:ac tag:surfilter ac.event_type:im | stats count() as cnt by ac.src_ip |limit 20"}
{"input": "。", "instruction": "我想问的是NAS系统中有哪些IP地址访问过多少次，并且限制结果集为最近的20条记录。请帮忙修改一下查询语句。", "output": "appname:nas tag:forescout | stats count() as cnt by nas.src_ip|limit 20"}
{"input": "。", "instruction": "我想要知道在 NAS 应用中使用 Forescout 的服务器 IP 地址的数量分布情况，并显示前 20 个最高频率的 IP 地址。", "output": "appname:nas tag:forescout | stats count() as cnt by nas.dst_ip|limit 20"}
{"input": "", "instruction": "我想问以下信息：- appname=antivirus_gateway- tag=officescan- antivirus.threat_name=* 的日志量", "output": "appname:antivirus_gateway tag:officescan antivirus.threat_name:* |stats count() as cnt by antivirus.host|limit 20"}
{"input": "。", "instruction": "我想问的是，在有多少台设备发送过 DHCP 请求并使用了哪些 MAC 地址。", "output": "appname:dx tag:dhcp dx.dhcp_req_type:* |stats count() as cnt by dx.dhcp_mac|limit 10"}
{"input": "", "instruction": "我想要知道最近五分钟有多少条数据被发送过去的应用名叫 cnaps 的信息。", "output": "appname:cnaps | stats count() by agent_send_timestamp |limit 5"}
{"input": "。", "instruction": "我想要知道过去一天发生的异常情况，比如网站崩溃、服务器故障等。你能帮我把这些问题找出来吗？", "output": "starttime=\"-1d\" appname:nta tag:eve nta.alert.category:Web*|stats count() by nta.dst_ip |limit 10"}
{"input": "", "instruction": "查找最近一小时内访问量最高的 10 个网页", "output": " starttime=\"now-1h\" _index:web * | stats count() by apache.request_path | head 10"}
{"input": "", "instruction": "查找最近一周内登录失败次数最多的用户", "output": " starttime=\"now-7d\" _index:auth action:failure | stats count() by user | head 1"}
{"input": "", "instruction": "查找最近一月内访问量最高的国家和城市", "output": " starttime=\"now-1M\" _index:web | iplocation apache.clientip | stats count() by Country, City | head 1"}
{"input": "", "instruction": "查找最近一天内访问量前十的网页，并过滤掉包含 robots.txt 的请求", "output": " starttime=\"now-1d\" _index:web [[ starttime=\"now-1d\" _index:web | stats count() by uri | head 10 | fields uri]] NOT uri:*robots.txt*"}
{"input": "", "instruction": "我想询问最近一小时内 Apache Web 服务的访问路径中最常见的十个请求路径的信息。", "output": " starttime=\"now-1h\" _index:web * | stats count() by apache.request_path | head 10"}
{"input": "", "instruction": "我想问日志易中最近七天中用户登录失败次数最多的前一位用户是谁。", "output": " starttime=\"now-7d\" _index:auth action:failure | stats count() by user | head 1"}
{"input": "", "instruction": "我想问最近一分钟内访问过 Apache 服务的网站用户所在地区的信息吗？", "output": " starttime=\"now-1M\" _index:web | iplocation apache.clientip | stats count() by Country, City | head 1"}
{"input": "", "instruction": "我想寻找最近一天的网站访问数量排名前十的结果，但排除所有以“/robots.txt”结尾的文件。", "output": " starttime=\"now-1d\" _index:web [[ starttime=\"now-1d\" _index:web | stats count() by uri | head 10 | fields uri]] NOT uri:*robots.txt*"}
{"input": "", "instruction": "Palo Alto 下一代防火墙查询被隔离IP", "output": "appname:traffic tag:paloalto vsys_id:* blocked:*true* | dedup remote_addr| head 10 "}
{"input": "", "instruction": "我想问有关 Palo Alto Networks 产品的使用问题。根据提供的信息，我的具体需求为：1. 您需要查看名为 paloalto_traffic 的应用的流量数据；2. 数据属于虚拟系统（vsys）的所有域；3. 流量被阻塞（blocked=True）；4. 需要去重并按远程地址 remote_addr 对结果进行排序；5. 只显示前 10 个结果。", "output": "appname:paloalto_traffic vsys_id:* blocked:*true* | dedup remote_addr| head 10 "}
{"input": "最近内存使用情况。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:top_info_system_stats | limit 1 "}
{"input": "", "instruction": "我想问的是系统的cpu、内存和磁盘使用率怎么样？而且只查一次最新的一条数据就行。你能帮忙修改一下吗？", "output": "* AND appname:top_info_system_stats | limit 1 "}
