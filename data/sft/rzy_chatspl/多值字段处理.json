{"input": "", "instruction": "CPE 字段提取", "output": "... | dedup agent_names| fields 'installed_software{}', agent_names, appname | rename 'installed_software{}' as \"installed_software\" | mvexpand installed_software| eval installed_software1 = split(installed_software,\":\")| eval vendor = mvindex(installed_software1,2)| eval product = mvindex(installed_software1,3)| eval version = mvindex(installed_software1,4)| eval service_pack = mvindex(installed_software1,5)| rename installed_software as \"cpe\" | table agent_names product vendor version service_pack cpe"}
{"input": "新HAC-审批人审批次数_多项量", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac NOT hac.worknoteName:\"值班\" NOT \"禁用\" \n| stats dc(hac.worknote) as cnt by hac.worknotedetail.approver, hac.worknote\n| fields hac.worknotedetail.approver, hac.worknote\n| mvcombine sep=\" & \" hac.worknote\n| eval dst_ = split(hac.worknote,\"&\")\n| eval dst_len=len(dst_)\n| sort by dst_len\n| fields hac.worknotedetail.approver, hac.worknote, dst_len\n| rename hac.worknotedetail.approver as \"审批人\", hac.worknote as \"工单号\", dst_len as \"审批次数\""}
{"input": "新HAC申请人申请多次_多项量", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac NOT hac.worknotedetail.worknotename:\"值班\"  \n| stats dc(hac.worknote) as cnt by hac.applyer, hac.worknote\n| fields hac.applyer, hac.worknote\n| mvcombine sep=\" & \" hac.worknote\n| eval dst_ = split(hac.worknote,\"&\")\n| eval dst_len=len(dst_)\n| sort by dst_len\n| fields hac.applyer, hac.worknote, dst_len\n| rename hac.applyer as \"申请人\", hac.worknote as \"工单号\", dst_len as \"申请次数\""}
{"input": "", "instruction": "我在询问以下内容：- 查询所有包含“hac”标签且不属于“hac.worknoteName:值班”或包含“禁用”的工单；- 对结果进行统计，计算每个审批人的工单数量和总共需要审批的工单数目；- 根据工单数量排序，并显示出各个审批人员、对应的工单号以及需要审批的工单数量。", "output": "tag:hac NOT hac.worknoteName:\"值班\" NOT \"禁用\" | stats dc(hac.worknote) as cnt by hac.worknotedetail.approver, hac.worknote| fields hac.worknotedetail.approver, hac.worknote| mvcombine sep=\" & \" hac.worknote| eval dst_ = split(hac.worknote,\"&\")| eval dst_len=len(dst_)| sort by dst_len| fields hac.worknotedetail.approver, hac.worknote, dst_len| rename hac.worknotedetail.approver as \"审批人\", hac.worknote as \"工单号\", dst_len as \"审批次数\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux服务器执行敏感命令", "output": "appname:linux tag:secure (command:drop\\ * OR command:rm\\ -rf\\ * OR command:*rm\\ * OR command:sudo\\ userdel\\ * OR command:userdel\\ *  OR command:chmod\\ 777* OR command:*cat\\ /etc/shadow*) |stats count() as cnt by  sudouser,user,ip,command |mvcombine sep=\";\" command |eval command = split(command,\";\") |fields -cnt |rename sudouser as \"用户\",user as \"系统用户\",ip as \"目标IP\",command as \"执行高危命令\""}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux服务器执行敏感命令事件数量", "output": "appname:linux tag:secure (command:drop\\ * OR command:rm\\ -rf\\ * OR command:*rm\\ * OR command:sudo\\ userdel\\ * OR command:userdel\\ *  OR command:chmod\\ 777* OR command:*cat\\ /etc/shadow*) |stats count() as cnt by  sudouser,user,ip,command|fields -cnt |mvcombine sep=\";\" command |eval command = split(command,\";\") |stats count() as cnt"}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "Linux服务器执行敏感命令事件，按 sudouser、user、ip、command 拆分多行后展示", "output": "appname:linux tag:secure (command:drop\\ * OR command:rm\\ -rf\\ * OR command:*rm\\ * OR command:sudo\\ userdel\\ * OR command:userdel\\ *  OR command:chmod\\ 777* OR command:*cat\\ /etc/shadow*) |stats count() as cnt by  sudouser,user,ip,command|fields -cnt |mvcombine sep=\";\" command |eval command = split(command,\";\") "}
{"input": "索引可用字段有：linux.cmd, linux.command, linux.event_detail.comm, linux.event_detail.exe, linux.event_detail.key, linux.event_detail.pid, linux.event_detail.ppid, linux.event_id, linux.event_msg.terminal, linux.event_name, linux.event_type, linux.log_type, linux.login_time, linux.msg, linux.pid, linux.result, linux.service_name, linux.src_ip, linux.status, linux.terminal, linux.type, linux.use_time, linux.user, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想询问一些关于服务器安全的情况，所以我的问题内容为：查询最近三天内，有哪些用户使用了`sudo`或其他方式以root权限执行了删除文件、修改文件权限等操作，并且带上了具体的文件名和路径或者被删除用户的信息（如IP地址）？", "output": "appname:linux tag:secure (command:drop\\ * OR command:rm\\ -rf\\ * OR command:*rm\\ * OR command:sudo\\ userdel\\ * OR command:userdel\\ *  OR command:chmod\\ 777* OR command:*cat\\ /etc/shadow*) |stats count() as cnt by  sudouser,user,ip,command |mvcombine sep=\";\" command |eval command = split(command,\";\") |fields -cnt |rename sudouser as \"用户\",user as \"系统用户\",ip as \"目标IP\",command as \"执行高危命令\""}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "检索访问深度超过5的页面", "output": "appname:apache | eval depth=mvcount(split(apache.request_path, \"/\")) | where depth > 5 | stats count() by apache.request_path, apache.domain"}
{"input": "索引可用字段有：apache.clientip, apache.domain, apache.geo.country, apache.geo.isp, apache.method, apache.referer, apache.request_path, apache.request_query, apache.resp_time, apache.status, apache.ua, appname, tag, logtype, ip, hostname, timestamp, source。请仅使用所需要的字段。", "instruction": "我想寻找Apache访问日志中请求路径depth大于5的记录数和各个字段的值分布情况。", "output": "appname:apache | eval depth=mvcount(split(apache.request_path, \"/\")) | where depth > 5 | stats count() by apache.request_path, apache.domain"}
{"input": "每10分钟统计windows登录失败用户趋势。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows windows.System.EventID.text:4625|eval username=mvindex(windows.EventData.Data[].text,5)|bucket timestamp span=10m as ts |stats count() as cnt by ts,username"}
{"input": "按每小时分桶统计windows登录失败用户ip趋势。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows windows.System.EventID.text:4625  [[appname:pf_windows windows.System.EventID.text:4625|eval src_ip=mvindex(windows.EventData.Data[].text,18)|top 10 src_ip|fields src_ip]]| eval src_ip=mvindex(windows.EventData.Data[].text,18)  |eval username=mvindex(windows.EventData.Data[].text,5)  |bucket timestamp span=1h as ts|eval ts=formatdate(ts,\"HH:mm\")|stats count() as count_ by ts,src_ip,username"}
{"input": "", "instruction": "我想跟踪 Windows 系统中的登录和注销事件，并将其聚合为每分钟的计数器。您是否需要任何其他信息吗？", "output": "appname:pf_windows windows.System.EventID.text:4625|eval username=mvindex(windows.EventData.Data[].text,5)|bucket timestamp span=10m as ts |stats count() as cnt by ts,username"}
{"input": "", "instruction": "把某个字段的内容改成 csv 格式", "output": "* | fields mv_foo | eval mf_foo_csv = mvjoin(mv_foo,\", \")"}
{"input": "", "instruction": "通过 Windows EventLog 中身份认证和新进程创建记录，查询所有潜在可疑的本地管理员账号", "output": "appname:wineventlog (EventCode:4688 (Token_Elevation_Type:\"*(2)\" OR Token_Elevation_type:\"*1937\")) OR (EventCode:4624 Elevated_Token:Yes) NOT ( Account_Name:\"system\" OR (Account_Name:\"dwm-*\" Process_Name:\"c:\\\\windows\\\\system32\\\\winlogon.exe\") OR (Security_ID:\"* service\" OR Security_ID:\"nt *\" OR Security_ID:\"iis *\") AND (Process_Name:\"c:\\\\windows\\\\system32\\\\services.exe\" OR Process_Name:\"c:\\\\windows\\\\system32\\\\svchost.exe\")) | eval idx=if(mvindex(Account_Name,1)==\"-\", 0, 1)| eval user=mvindex(Account_Name,idx)| eval idx=if(mvindex(Account_Domain,1)==\"-\", 0, 1)| eval domain=mvindex(Account_Domain,idx)| eval proc=lower(coalesce(New_Process_Name, Process_Name))| where !(user==\"-\" || (proc==\"-\" && match(user,\"\\$$\")))| eval hostname=lower(hostname)| stats values(hostname) as hosts, values(proc) as process, sparkline(count(), 1h), count() as cnt, max(timestamp) as LastSeen by user, domain| eval _comment=\"Consider enriching accounts here and filtering known/expected out (more details below)\"| eval process=if(mvcount(process)>10, mvappend(\"Truncated at 10 entries (\"+mvcount(process)+\" total):\", mvindex(process,0,9)), process)| eval hosts=if(mvcount(hosts)>10, mvappend(\"Truncated at 10 entries (\"+mvcount(hosts)+\" total):\", mvindex(hosts,0,9)), hosts)| eval LastSeen=formatdate(LastSeen, \"yyyy-MM-dd\")| eval user=domain+\"\\\\\"+user| fields - domain| sort by -cnt"}
{"input": "", "instruction": "用 makeresults 伪造数据，验证字符串切分为多值的 SPL 语句是否正确", "output": "| makeresults| eval mvfield=\"this is a multi value field\"| eval mvfield=split(mvfield, \" \")| eval entries=mvcount(mvfield)"}
{"input": "", "instruction": " 查找未签名的 PowerShell 脚本?", "output": "appname:wineventlog EventCode:4104 ScriptBlock_ID:* Path:* | eval Message=replace(Message, \"[\\r\\n]+\", \"\")| eval blocks=replace(Message,\".*Creating Scriptblock text (\\d+ of (\\d+)).*\", \"\\1\")| stats values(Message) as script by Path, ScriptBlock_ID, host, blkcount| eval signed=if(!match(script, \"#\\s+(SIG|Begin signature block)\") && (blkcount==mvcount(script)), 0, 1)| stats values(Path) as script by host, signed"}
{"input": "windows登录失败用户top10分布。", "instruction": "pf_windows数据，编写查询语句实现如下分析需求", "output": "appname:pf_windows windows.System.EventID.text:4625|eval username=mvindex(windows.EventData.Data[].text,5)|stats count() by username|limit 10"}
{"input": "windows登录成功源ip分布。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows windows.System.EventID.text:4624|eval src_ip=mvindex(windows.EventData.Data[].text,18)|stats count() by src_ip"}
{"input": "windows登录失败源ip分布。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows windows.System.EventID.text:4625|eval src_ip=mvindex(windows.EventData.Data[].text,18)|stats count() by src_ip"}
{"input": "", "instruction": "我在询问 Windows 系统中 Event ID 为 4625 和源 IP 情况下的登录失败次数。", "output": "appname:pf_windows windows.System.EventID.text:4625|eval src_ip=mvindex(windows.EventData.Data[].text,18)|stats count() by src_ip"}
