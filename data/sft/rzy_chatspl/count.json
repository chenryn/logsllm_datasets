{"input": "", "instruction": "查询包含 cron 关键字，且主机名为 hostname1 或 hostname2 的日志记录，并按照主机名分组", "output": "cron (hostname:hostname1 OR hostname:hostname2) | stats count() by hostname"}
{"input": "", "instruction": "查询包含 login 或 logout 关键字的日志记录，并统计每个用户的登录次数", "output": "(login OR logout) | stats count() by user"}
{"input": "", "instruction": "查询包含 ping 或 pong 关键字，且主机名为 hostname3 或 hostname4 的日志记录，并按照主机名分组", "output": "(ping OR pong) (hostname:hostname3 OR hostname:hostname4) | stats count() by hostname"}
{"input": "", "instruction": "查询包含 login 或 logout 关键字的日志记录，并按照用户和时间分组", "output": "(login OR logout) | stats count() by user, timestamp"}
{"input": "", "instruction": "查找包含 error 的日志并按照 hostname 分组计数", "output": "error | stats count() by hostname"}
{"input": "", "instruction": "Exchange_垃圾邮件总数", "output": "tag:msgtrk msgtrk.recipient_status:\"垃圾邮件\" |stats count()"}
{"input": "", "instruction": "Exchange_接收邮件总数", "output": "tag:msgtrk AND msgtrk.event_id:RECEIVE |stats count()"}
{"input": "", "instruction": "Exchange_垃圾邮件主题统计", "output": "tag:msgtrk msgtrk.recipient_status:\"垃圾邮件\" |stats count() as ct by msgtrk.message_subject"}
{"input": "", "instruction": "Exchange_事件类别统计", "output": "tag:msgtrk |stats count() as ct by msgtrk.event_id"}
{"input": "", "instruction": "Exchange_垃圾邮件发送邮箱统计", "output": "tag:msgtrk msgtrk.recipient_status:\"垃圾邮件\" |stats count() as ct by msgtrk.sender_address"}
{"input": "", "instruction": "Exchange_发送邮件总数", "output": "tag:msgtrk AND msgtrk.event_id:SEND |stats count()"}
{"input": "", "instruction": "Exchange_垃圾邮件接收邮箱统计", "output": "tag:msgtrk msgtrk.recipient_status:\"垃圾邮件\" |stats count() as ct by msgtrk.recipient_address"}
{"input": "", "instruction": "linux_定时任务总数量", "output": "tag:crond event_name:定时任务列表 \"*\" |stats count() as ct "}
{"input": "", "instruction": "从rizhiyi中查询用户搜索量", "output": " tag:search_history|stats count()"}
{"input": "", "instruction": "Linux操作系统审计_linux定时任务审计", "output": "type:CROND OR type:crond | stats count() as cron by ip,hostname,user,command "}
{"input": "从 schedule 索引里搜索对应任务数据并统计数量", "instruction": "Linux异常时段登录主机次数", "output": "_index:schedule schedule_name:Linux异常时段登录主机 |stats count()"}
{"input": "恶意攻击数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.module:NFPP* AND (switch.type:DOS_DETECTED OR switch.type:SCAN) | stats count()"}
{"input": "ARP_GUARD检测到的ARP攻击事件数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.module:NFPP_ARP_GUARD switch.type:DOS_DETECTED | stats count()"}
{"input": "ARP-GUARD检测到的扫描事件数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.module:NFPP_ARP_GUARD switch.type:SCAN | stats count()"}
{"input": "IP_GUARD检测到的ARP攻击事件数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.module:NFPP_IP_GUARD switch.type:DOS_DETECTED | stats count()"}
{"input": "IP-GUARD检测到的扫描事件数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.module:NFPP_IP_GUARD switch.type:SCAN | stats count()"}
{"input": "ARP攻击源IP与Mac统计", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.type:DOS_DETECTED | stats count() by switch.kv.IP,switch.kv.MAC"}
{"input": "扫描源IP与Mac统计", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie switch.type:SCAN | stats count() by switch.kv.IP,switch.kv.MAC"}
{"input": "事件数", "instruction": "锐捷交换机日志数据，编写查询语句实现如下分析场景", "output": "tag:ruijie |stats count()"}
{"input": "转换目的地址对比", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* NAT) AND tag:hillstone |stats count() by firewall.src_nat_ip"}
{"input": "NAT协议统计", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* NAT) AND tag:hillstone |stats count() as total by firewall.proto"}
{"input": "NAT规则命中数", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "(* NAT) AND tag:hillstone |stats count() as total by firewall.msg.rule"}
{"input": "用户登录异常日志量", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true result.resource_groups:\"用户登录\" |stats count()"}
{"input": "违规操作日志量", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true result.resource_groups:\"违规操作\" |stats count()"}
{"input": "内网渗透日志量", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true result.resource_groups:\"内网渗透\" |stats count()"}
{"input": "外网攻击日志量", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "_index:monitor  issue_alert:true result.resource_groups:\"外网攻击\" |stats count()"}
{"input": "SEPM事件来源主机分布", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "( tag:symantec OR tag:symantec_app_c OR tag:symantec_risk ) |stats count() as total by hostname"}
{"input": "占IO较大的数据库用户", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "tag:session_max_io | stats count()  as  ct by   oracle.USERNAME"}
{"input": "ORA_BAK_STATUS", "instruction": "oracle_backup数据，编写查询语句实现如下分析场景", "output": "tag:RMAN_STATUS|stats count() by bak.STATUS"}
{"input": "ORA_OBJECT_TYPE", "instruction": "oracle_backup数据，编写查询语句实现如下分析场景", "output": "tag:RMAN_STATUS|stats count() by bak.OBJECT_TYPE"}
{"input": "epay_交易结果分布", "instruction": "支付聚合_epay数据，编写查询语句实现如下分析场景", "output": "tag:epay epay.action:应答 epay.response.responseTextMessage:*|stats count() as tally by epay.response.responseTextMessage"}
{"input": "新HAC连接类型", "instruction": "新HAC堡垒机审计数据，编写查询语句实现如下分析场景", "output": "tag:hac AND hac.det.class:SESSION_START | stats count() by hac.det.protocol"}
{"input": "", "instruction": "查询包含 EventCode 为 4624 或 4625 的日志记录，统计其代表的登录成功或失败的次数", "output": "EventCode:4624 OR EventCode:4625 | stats count() by EventCode "}
{"input": "", "instruction": "查询包含 error, fail 或 fatal 关键字，且不包含 404 状态码，或者用户为 admin 的日志记录，并统计每个用户的错误次数", "output": "(error OR fail OR fatal) AND (NOT 404) OR (user:admin) | stats count() by user"}
{"input": "", "instruction": "rsyslog被关闭次数", "output": " tag:rsyslog_status NOT audit.staus:\"running\" | stats count() "}
{"input": "", "instruction": "rsyslog状态事件按 IP 和状态类型统计数量", "output": "tag:rsyslog_status | stats count() by ip,audit.status "}
{"input": "", "instruction": "从搜索历史中查询查询时长大于1分钟的spl数", "output": "tag:search_history   spl.search_cost:>60000 |stats count() "}
{"input": "", "instruction": "从搜索历史中查询查询时长大于3分钟的spl数", "output": "tag:search_history   spl.search_cost:>180000 |stats count() "}
{"input": "", "instruction": "从搜索历史中查询查询时长大于5分钟的次数", "output": "tag:search_history   spl.search_cost:>300000 |stats count() "}
{"input": "中级告警数", "instruction": "从 monitor 索引数据中查询分析实现如下场景", "output": "_index:monitor issue_alert:true  alert_level:mid|stats count() as cnt_high"}
{"input": "高级告警数", "instruction": "从 monitor 索引数据中查询分析实现如下场景", "output": "_index:monitor issue_alert:true alert_level:high|stats count() as cnt_high"}
{"input": "低级告警数", "instruction": "从 monitor 索引数据中查询分析实现如下场景", "output": "_index:monitor issue_alert:true  alert_level:low|stats count() as cnt_high"}
{"input": "来账交易量(1小时)mfe", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "trantype':来帐 type:请求 | stats count()"}
{"input": "往账交易量(1小时)mfe", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "trantype:往账 type:请求 | stats count()"}
{"input": "来账交易报文类型TOP", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "type:请求 recver:402191009992 | stats count() as cnt by msgcd,msgNa "}
{"input": "往账交易报文类型TOP", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "type:请求 sender:402191009992 | stats count() as cnt by msgcd,msgNa"}
{"input": "财付通借记来帐mfe。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账。财付通的 sender 代码为400584020008，400584010002，900584000014", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 (sender:400584020008 OR sender:400584010002 OR sender:900584000014) | stats count()"}
{"input": "支付宝借记来帐mfe。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账，支付宝的 sender 代码是900331000017，400331000005，400331000006", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 (sender:900331000017 OR sender:400331000005 OR sender:400331000006) | stats count()"}
{"input": "京东支付借记来帐mfe。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账，京东支付的 sender 代码是400301010000，400301000004", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 (sender:400301010000 OR sender:400301000004) | stats count()"}
{"input": "钱袋宝借记来帐mfe。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账，钱袋宝 sender 代码900100000124，400100010011", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 (sender:900100000124 OR sender:400100010011) | stats count()"}
{"input": "天翼支付借记来帐mfe。借记来帐数据记录msgcd字段值为NPS.220.001.01，trantype 字段值为来账，天翼支付 sender 代码400100000104，400100000299，900100000069", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.220.001.01 trantype:来帐 (sender:400100000104 OR sender:400100000299 OR sender:900100000069) | stats count()"}
{"input": "财付通贷记来帐mfe。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账。财付通的 sender 代码为400584020008，400584010002，900584000014", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 (sender:400584020008 OR sender:400584010002 OR sender:900584000014) | stats count()"}
{"input": "支付宝贷记来帐mfe。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账，支付宝的 sender 代码是900331000017，400331000005，400331000006", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 (sender:900331000017 OR sender:400331000005 OR sender:400331000006) | stats count()"}
{"input": "天翼支付贷记来帐mfe。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账，天翼支付 sender 代码400100000104，400100000299，900100000069", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 (sender:400100000104 OR sender:400100000299 OR sender:900100000069) | stats count()"}
{"input": "钱袋宝贷记来帐mfe。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账，钱袋宝 sender 代码900100000124，400100010011", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 (sender:900100000124 OR sender:400100010011) | stats count()"}
{"input": "京东支付贷记来帐mfe。贷记来帐数据记录msgcd字段值为NPS.222.001.01，trantype 字段值为来账，京东支付的 sender 代码是400301010000，400301000004", "instruction": "查询农信银支付前置(mfe)系统数据，进行如下统计", "output": "tag:tranlog msgcd:NPS.222.001.01 trantype:来帐 (sender:400301010000 OR sender:400301000004) | stats count()"}
{"input": "贷记来账(tranCode 为BUP03059)异常结束交易量mps", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03059 step:5 info:异常结束| stats count()"}
{"input": "借记来账异常结束交易量(tranCode 为BUP03058)，搜索 step 值为 5，info 值为异常结束的数据进行统计", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 step:5 info:异常结束 | stats count()"}
{"input": "钱袋宝借记来帐交易量，tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志，origsender字段值为90010000124或400100010011表示钱袋宝", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:* (origsender:900100000124 OR origsender:400100010011) | stats count()"}
{"input": "天翼支付借记来帐交易量，tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志，prigsender字段值为 900100000069 表示天翼支付", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:* (origsender:400100000104 OR origsender:400100000299 OR origsender:900100000069) | stats count()"}
{"input": "支付宝借记来帐交易量，tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志。origsender 字段值为900331000017,400331000005,400331000006时表示来自支付宝", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:* (origsender:900331000017 OR origsender:400331000005 OR origsender:400331000006) | stats count()"}
{"input": "财付通借记来帐交易量，tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志。origsender 值为400584020008,400584010002或900584000014时代表交易来自财付通", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:* (origsender:400584020008 OR origsender:400584010002 OR origsender:900584000014) | stats count()"}
{"input": "京东支付借记来帐交易量，tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志。origsender 值为400301010000或400301000004时表示来自京东支付", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:* (origsender:400301010000 OR origsender:400301000004) | stats count()"}
{"input": "借记来账交易量。tranCode 字段值为 BUP03058，origrecver字段值为402191009992表示借记来帐日志。", "instruction": "查询农信银支付清算系统(mps)数据，进行如下统计", "output": "tranCode:BUP03058 origrecver:402191009992 msgid:*  | stats count()"}
{"input": "", "instruction": "我想问的是 Apache 服务在最近三天内的错误状态码为 5xx 和响应时间不超过 3s 的数量有多少条？", "output": "(apache.status:>=500 AND apache.status:<600) AND (apache.resp_time:<3) | stats count()"}
{"input": "", "instruction": "我想问的是哪些主机出现了错误，你能帮我把它们列出来吗？", "output": "error | stats count() by hostname"}
{"input": "", "instruction": "我想问的是，你有没有接到关于“外网攻击”的报警信息呢？如果有的话，那么具体有多少条记录呢？", "output": "_index:monitor  issue_alert:true result.resource_groups:\"外网攻击\" |stats count()"}
{"input": "", "instruction": "我想问的是Oracle数据库的RMAN备份状态数量分布情况？", "output": "tag:RMAN_STATUS|stats count() by bak.STATUS"}
{"input": "", "instruction": "从索引中检索所有包含`appname:ips`的记录，并计算每个源IP地址（ips.src）出现的次数，同时按源地城市、纬度和经度分组，并统计出各个组中的总数。", "output": "'appname':ips | stats count() by ips.src.geo.city,ips.src.geo.latitude, ips.src.geo.longitude, ips.dst.geo.city,ips.dst.geo.latitude,ips.dst.geo.longitude"}
{"input": "", "instruction": "msgtrk 日志有没有“垃圾邮件”状态？如果有的话，那么它们都在哪些话题下呢？", "output": "tag:msgtrk msgtrk.recipient_status:\"垃圾邮件\" |stats count() as ct by msgtrk.message_subject"}
{"input": "", "instruction": "msgtrk 事件 id 为发送的日志数量。", "output": "tag:msgtrk AND msgtrk.event_id:SEND |stats count()"}
{"input": "", "instruction": "我想问每台主机的 ping/pong 消息数量。", "output": "(ping OR pong) | stats count() by hostname"}
{"input": "", "instruction": "查询包含 ping 或 pong 关键字的日志记录，并按照主机名分组统计：", "output": "(ping OR pong) | stats count() by hostname"}
{"input": "", "instruction": "我想询问最近一次系统错误中有多少用户为管理员而产生的错误数量以及他们分别在哪些页面上出现过这些错误。", "output": "(error OR fail OR fatal) AND (NOT 404) OR (user:admin) | stats count() by user"}
{"input": "", "instruction": "我想问最近一段时间内，系统中出现过的错误数量有多少？并且这些错误是否与 rsyslog 服务运行状态无关？", "output": " tag:rsyslog_status NOT audit.staus:\"running\" | stats count() "}
{"input": "", "instruction": "我正在寻找有关 Rsyslog 服务运行状况和 IP 地址统计的信息。", "output": "tag:rsyslog_status | stats count() by ip,audit.status "}
{"input": "", "instruction": "我想问的是高级别告警有几个？", "output": "_index:monitor issue_alert:true alert_level:high|stats count() as cnt_high"}
{"input": "", "instruction": " 根据 `recver` 字段的值（即用户 ID），将数据过滤为仅包含该用户发送或接收到的消息；2. 使用 `stats` 命令计算每个消息类型（`msgcd`）和消息内容（`msgNa`）的数量，并使用 `,` 分隔；3. 以可读格式显示结果。", "output": "type:请求 recver:402191009992 | stats count() as cnt by msgcd,msgNa "}
{"input": "", "instruction": "我在做的是关于 CPU 使用率的统计工作，你可以把这行代码中的 `CPU` 更换成其他硬件设备，比如内存、磁盘等，也可以根据自己的需要进行修改。", "output": "tranCode:BUP03059 step:5 info:异常结束| stats count()"}
{"input": "使用", "instruction": "数据库审计日志中事件等级分布", "output": "appname:dbaudit | stats count() as cnt by dbaudit.level"}
{"input": "使用", "instruction": "数据库审计日志里的高风险事件数", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"高\" |stats count()"}
{"input": "使用", "instruction": "数据库审计日志中发生告警的应用系统分布", "output": "(appname:dbaudit AND tag:dbappsecurity)  | stats count() as cnt by dbaudit.app_name"}
{"input": "使用", "instruction": "数据库审计日志中低风险事件数", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"低\" |stats count()"}
{"input": "ADS攻击路线图，将来源 ip 和目标 ip 的地址经纬度都列出来。索引可用字段有：ddos.src_ip,ddos.src.geo.latitude,ddos.src.geo.longitude,ddos.dst_ip,ddos.dst.geo.latitude,ddos.dst.geo.longitude,ddos.dst.geo.isp,ddos.src.geo.isp,appname,tag,ip,hostname,source,timestamp。请仅使用所需字段。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | stats count() by ddos.src_ip,ddos.src.geo.latitude,ddos.src.geo.longitude,ddos.dst_ip,ddos.dst.geo.latitude,ddos.dst.geo.longitude"}
{"input": "", "instruction": "飞塔防火墙warning日志量统计。", "output": "appname:firewall tag:fortinet firewall.level:warning | stats count()"}
{"input": "windows登录进程", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:windows 登录| stats count() as cnt by json.event_data.LogonProcessName"}
{"input": "windows进程名分布", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:windows | stats count() as cnt by json.event_data.ProcessName"}
{"input": "windows登录域账户名分布", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:windows 登录| stats count() as cnt by json.event_data.SubjectUserName"}
{"input": "windows事件类型分布", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:windows | stats count() as cnt by json.event_name"}
{"input": "用户登录次数", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "(* AND appname:yottaweb_audit_log) AND json.action:login|stats count(json.user_name)"}
{"input": "docker_分配内存平均占用率", "instruction": "docker性能数据，编写查询语句实现如下分析场景", "output": "appname:docker_metric tag:docker_metric_memory AND (hostname:* AND ip:${ip}) | stats count() as cnt by json.rss.pct | stats avg(json.rss.pct) as avgpct"}
{"input": "docker_总内存平均使用率", "instruction": "docker性能数据，编写查询语句实现如下分析场景", "output": "appname:docker_metric tag:docker_metric_memory AND (hostname:* AND ip:${ip}) | stats count() as cnt by json.usage.pct | stats avg(json.usage.pct) as avgpct"}
{"input": "容器读写次数", "instruction": "docker性能数据，编写查询语句实现如下分析场景", "output": "appname:docker_metric tag:docker_metric_diskio AND (hostname:* AND ip:${ip}) | stats count() as cnt by json.summary.ops | stats max(json.summary.ops) as maxops"}
{"input": "高危事件数", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin skyeye.json.level:高危 |stats count()"}
{"input": "低危事件数", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin skyeye.json.level:低危 |stats count()"}
{"input": "中危事件数", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin skyeye.json.level:中危 |stats count()"}
{"input": "危急事件数", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin skyeye.json.level:危急 |stats count()"}
{"input": "攻击http请求方式占比", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.json.method"}
{"input": "攻击HTTP状态码分布", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.json.rsp_status"}
{"input": "各类事件分布", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows  | stats count() as cnt by json.log_name"}
{"input": "严重系统错误事件数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows json.type:error OR json.source_name:\"system error\"| stats count()"}
{"input": "Windows登录失败详情", "instruction": "windows日志数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4625 |stats count() as cnt by json.username,json.event_data.IpAddress,json.failure_reason,json.computer_name "}
{"input": "windows登陆失败事件数", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4625| stats count()"}
{"input": "Windows成功登录用户名分布", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4624| stats count() as cnt by json.event_data.TargetUserName"}
{"input": "Windows用户注销事件数量", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4634|stats count()"}
{"input": "windows注销事件登录ID分布", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4634|stats count() as cnt by json.event_data.TargetLogonId"}
{"input": "windows登录失败次数", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:4625|stats count()"}
{"input": "AD登陆失败总数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security (json.event_id:4771 AND json.keywords:\"Audit Failure\")|stats count()"}
{"input": "NTLM登录失败总数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security (json.event_id:4776 AND json.keywords:\"审核失败\")| stats count()"}
{"input": "RDP登录失败", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4625 | stats count()"}
{"input": "AD新增帐户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:ad json.event_id:4720 | stats count()"}
{"input": "AD锁定帐户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:ad json.event_id:4740 | stats count()"}
{"input": "AD删除帐户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:ad json.event_id:4726 | stats count()"}
{"input": "AD解锁帐户数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:ad json.event_id:4767 | stats count()"}
{"input": "AD账户登录成功次数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4624 json.keywords:审核成功 | stats count()"}
{"input": "AD账户登录失败次数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows  \n json.event_id:4625  json.keywords:审核失败 | stats count()"}
{"input": "Kerberos预身份验证失败", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security json.event_id:4771 json.keywords:审核失败 | stats count()"}
{"input": "ad_NTLM登录失败总数", "instruction": "AD日志数据，编写查询语句实现如下分析场景", "output": "appname:windows tag:security (json.event_id:4776 AND json.keywords:\"审核失败\")| stats count()"}
{"input": "新增帐户数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows   json.event_id:4720 \n| stats count()"}
{"input": "删除用户事件数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows   json.event_id:4726 \n| stats count()"}
{"input": "锁定用户事件数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows   json.event_id:4740 \n| stats count()"}
{"input": "禁用用户事件数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows   json.event_id:4725 \n| stats count()"}
{"input": "意外关机次数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:41| stats count()"}
{"input": "关机或重启次数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows json.event_id:1074| stats count()"}
{"input": "AD账户登录次数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625 OR json.event_id:4624 )NOT (json.username:*$ OR json.username:SYSTEM)|stats count()"}
{"input": "AD登录失败次数", "instruction": "Windows_AD数据，编写查询语句实现如下分析场景", "output": "appname:windows (json.event_id:4625) NOT (json.username:*$ OR json.username:SYSTEM)|stats count()"}
{"input": "", "instruction": "我想知道系统管理员在登录的时候最常用的IP地址是哪些。请帮我把这个查询结果按访问次数从高到低排序并只显示前十个IP地址。", "output": "appname:windows (json.event_id:4624 OR json.event_id:4625) NOT (json.src_ip:\"-\" OR json.username:SYSTEM) AND json.username:root | stats count() as cnt by json.src_ip"}
{"input": "", "instruction": "我想问的是 windows 系统上有哪些应用会在用户登录时产生事件 log，并且 event_data 中包含 LogonProcessName 属性。", "output": "appname:windows 登录| stats count() as cnt by json.event_data.LogonProcessName"}
{"input": "", "instruction": "我想问的是 windows 下有哪些常用的软件，分别在什么时间段内使用量最高呢。", "output": "appname:windows | stats count() as cnt by json.event_data.ProcessName"}
{"input": "", "instruction": "我想问的是 windows 应用的名称为“登录”的事件数目有多少？您能否提供其他任何信息吗？例如，您需要了解哪些用户在使用该应用时进行了登录等等", "output": "appname:windows 登录| stats count() as cnt by json.event_data.SubjectUserName"}
{"input": "", "instruction": "我想问的是 windows 应用的事件数量分布情况，请问您想要了解哪个具体的事件呢？比如系统启动、关闭等常见的操作。", "output": "appname:windows | stats count() as cnt by json.event_name"}
{"input": "", "instruction": "在YottaWeb安全审计日志里，有多少人使用了登录功能？", "output": "(* AND appname:yottaweb_audit_log) AND json.action:login|stats count(json.user_name)"}
{"input": "", "instruction": "我想要知道内存使用率和 CPU 使用率的平均值。请帮我找出最近一小时内这些指标的值。", "output": "appname:docker_metric tag:docker_metric_memory AND (hostname:* AND ip:${ip}) | stats count() as cnt by json.usage.pct | stats avg(json.usage.pct) as avgpct"}
{"input": "", "instruction": "我想问的是，容器的磁盘IO最大值是多少？", "output": "appname:docker_metric tag:docker_metric_diskio AND (hostname:* AND ip:${ip}) | stats count() as cnt by json.summary.ops | stats max(json.summary.ops) as maxops"}
{"input": "", "instruction": "查询`skyeye`应用中的所有带有`\"qianxin\"`标签且其`skyeye.json.level`字段为`\"危急\"`的记录数。", "output": "appname:skyeye tag:qianxin skyeye.json.level:危急 |stats count()"}
{"input": "", "instruction": "如何查找 Windows 应用中来自系统的错误消息并统计它们的数量。", "output": "appname:windows json.type:error OR json.source_name:\"system error\"| stats count()"}
{"input": "", "instruction": "我想询问关于 vSphere 中名为 \"dmz_backup\" 的应用的相关信息，包括其存储空间使用量、名称、容量等方面的统计数据。", "output": "appname:vsphere tag:dmz_backup json.fstype:VMFS| stats count() by json.name,json.capacity.total.bytes,json.capacity.provisioned.bytes,json.capacity.used.bytes,json.capacity.free.bytes"}
{"input": "", "instruction": "我想问有关 Windows 应用的事件 ID 为 4625 的次数。这条事件在 Microsoft Docs 中被称为“帐户锁定”事件，它表示当用户尝试多次输入错误密码时会发生该事件。", "output": "appname:windows json.event_id:4625| stats count()"}
{"input": "", "instruction": "我想问的是 windows 应用的事件 ID 为 4624 的用户数量统计信息。请问您想要了解哪个 Windows 应用的哪些事件的信息呢？", "output": "appname:windows json.event_id:4624| stats count() as cnt by json.event_data.TargetUserName"}
{"input": "", "instruction": "我想问 Windows 应用的名称为 windows 的 JSON 数据中，事件 ID 为 4634 的统计数量为多少。", "output": "appname:windows json.event_id:4634|stats count()"}
{"input": "", "instruction": "我想跟踪 Windows 应用的事件 ID 为 4625 的次数。", "output": "appname:windows json.event_id:4625|stats count()"}
{"input": "", "instruction": "我想询问 Windows 安全事件中有关审核失败的数量。", "output": "appname:windows tag:security (json.event_id:4771 AND json.keywords:\"Audit Failure\")|stats count()"}
{"input": "", "instruction": "我想问的是 windows 系统上 security 标签下的所有事件 id 是多少，并且包含关键字“审核失败”。", "output": "appname:windows tag:security (json.event_id:4776 AND json.keywords:\"审核失败\")| stats count()"}
{"input": "", "instruction": "我想问的是，在 windows 下的安全事件中，有多少条记录是关于 security 的？这条记录的 id 是什么？请帮忙把这些信息填入相应的位置。", "output": "appname:windows tag:security json.event_id:4625|stats count()"}
{"input": "", "instruction": "我想要知道有多少用户在使用 Windows 平台上安装了 AdBlocker 插件。请告诉我这个统计结果。", "output": "appname:windows tag:ad  json.event_id:4720 | stats count()"}
{"input": "", "instruction": "我想要知道有多少用户在使用 Windows 平台上安装了 AdBlocker 插件。你能告诉我这些用户的数量吗？", "output": "appname:windows tag:ad  json.event_id:4740 | stats count()"}
{"input": "", "instruction": "我想问的是 windows 下的应用有哪些在这段时间内打开过 ad 事件的 id 是 4726 的？", "output": "appname:windows tag:ad  json.event_id:4726 | stats count()"}
{"input": "", "instruction": "我想知道你在帮我做什么，因为你的回复让人很困惑。你不是要我模仿你的语法吗？", "output": "appname:windows tag:ad  json.event_id:4726 | stats count()"}
{"input": "", "instruction": "我在询问我有关 Windows 应用“Windows Security”的错误审查事件数量的信息，寻找以下类型的错误审查事件：1. Event ID 4625: An account failed to log on. This event generates when an attempt is made by a user or service to authenticate with the system, but it fails due to incorrect credentials. The failure reasons can be either bad password, locked out account, or other reasons like KDC (Key Distribution Center) errors.2. Keywords “audit failure”, which indicates that the auditing process of the operating system has detected some failures in its normal functioning. These failures may include attempts to access restricted resources, such as files or folders, or denials of access requests.Is this correct? If not, please clarify what information you are looking for regarding Windows application error events.", "output": "appname:windows   json.event_id:4625  json.keywords:审核失败 | stats count()"}
{"input": "", "instruction": "我想询问 Windows 应用的安全审计事件中是否存在关键字“审核失败”的次数。", "output": "appname:windows tag:security json.event_id:4771 json.keywords:审核失败 | stats count()"}
{"input": "", "instruction": "通过分析 Security 事件 ID 为 4776（即帐户已锁定）和 Keywords 中包含“审核失败”的登录事件，并计算出数量最多的事件类型及其次数。", "output": "appname:windows tag:security (json.event_id:4776 AND json.keywords:\"审核失败\")| stats count()"}
{"input": "", "instruction": "我想问的是 windows 应用的崩溃数量统计情况。请帮忙把这个查询结果打印出来。", "output": "appname:windows   json.event_id:4726 | stats count()"}
{"input": "", "instruction": "我想问的是，在 windows 下打开了一个叫做 'windows' 的应用，并产生了 ID 为 '4740' 的事件之后，有多少个这样的事件发生过？", "output": "appname:windows   json.event_id:4740 | stats count()"}
{"input": "", "instruction": "我想问的是，在 windows 下有哪些 json.event_id 为 4725 的事件呢？请帮我把结果统计出来并告诉我数量是多少。", "output": "appname:windows   json.event_id:4725 | stats count()"}
{"input": "", "instruction": "我想问有没有在上一次用户退出时发送了一个名为 \"Windows\"、事件 ID 为 1074 的应用的统计信息。", "output": "appname:windows json.event_id:1074| stats count()"}
{"input": "", "instruction": "我想问在处理用户 windows 下的应用事件 ID 为 4625 时是否需要排除用户名中包含特殊字符 $ 或 SYSTEM 用户名的情况", "output": "appname:windows (json.event_id:4625) NOT (json.username:*$ OR json.username:SYSTEM)|stats count()"}
{"input": "", "instruction": "Esxi性能监控曙光存储空间。列出json.name名称和各种 bytes 字段", "output": "appname:vsphere tag:dmz_backup json.fstype:VMFS| stats count() by json.name,json.capacity.total.bytes,json.capacity.provisioned.bytes,json.capacity.used.bytes,json.capacity.free.bytes"}
{"input": "邮件监控_触发策略。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析需求", "output": "appname:dlp tag:skyguard dlp.channelType:\"(邮件)SMTP\" dlp.workModeType:\"阻断\" \n| stats count() by dlp.policyNames "}
{"input": "", "instruction": "linux定时任务执行次数", "output": " (appname:linux CROND)  |stats count() by linux.cmd "}
{"input": "", "instruction": "linux用户切换", "output": "appname:linux  AND (tag:linux_messages OR tag:linux_secure)  AND audit.msg.ser:su-l | stats count() as su by ip,hostname,audit.msg.ruser,audit.msg.user,audit.msg.ser,timestamp "}
{"input": "", "instruction": "linux敏感命令事件数，按 IP 地址分组统计", "output": "appname:linux  AND audit.msg.ser:shell_cmd AND (audit.msg.command:service* OR audit.msg.command:rm* OR audit.msg.command:export* OR audit.msg.command:kill*) | stats count() as error by ip "}
{"input": "直播业务访客地理分布情况。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei AND  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) | stats count() by  cdn.clientip.geo.city"}
{"input": "点播业务访客地理分布情况。点播域名包括：vod1.video.com,vod2.video.com,vod3.video.com,vod4.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  AND (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com)  | stats count() by  cdn.clientip.geo.city"}
{"input": "图片业务访客地理分布情况。图片业务域名包括：wapx.example.cn,img.example.cn,tv.example.cn。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  AND (cdn.domain:wapx.example.cn OR cdn.domain:img.example.cn OR  cdn.domain:tv.example.cn)  | stats count() by  cdn.clientip.geo.city"}
{"input": "NSFOCUS_访问轨迹。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus |stats count() by firewall.msg.src_addr.geo.city,firewall.msg.src_addr.geo.latitude,firewall.msg.src_addr.geo.longitude,firewall.msg.dst_addr.geo.city,firewall.msg.dst_addr.geo.latitude,firewall.msg.dst_addr.geo.longitude"}
{"input": "NSFOCUS_访问热力图。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall tag:nsfocus )  AND (firewall.msg.src_addr.geo.country:\"中国\") |stats count(firewall.msg.src_addr.geo.country) as count_ by firewall.msg.src_addr.geo.country"}
{"input": "源地址和目的地址关系图。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus  | stats count() by ids.src_ip,ids.dst_ip"}
{"input": "危险等级分布。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus  | stats count() by ids.event_level"}
{"input": "各类协议占比。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus  | stats count() by ids.proto"}
{"input": "源地址区域热力图。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus  | stats count() by ids.src.geo.city"}
{"input": "登陆用户统计。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus  | stats count() by ids.login_user"}
{"input": "h3c_imc_总事件数。", "instruction": "h3c_imc_数据，编写查询语句实现如下分析场景", "output": "appname:imc  | stats count()"}
{"input": "内网访问外网协议占比。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.src.geo.city:private|stats count() as cnt by firewall.proto"}
{"input": "非内网会话协议占比。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   NOT firewall.src.geo.city:private|stats count() as cnt by firewall.proto"}
{"input": "攻击事件防火墙动作占比。", "instruction": "firewall_神州数码数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.action"}
{"input": "警告事件数。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   uf.log_type:警告|stats count()"}
{"input": "错误事件数。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   uf.log_type:错误|stats count()"}
{"input": "事件类型占比分布。", "instruction": "恒生UF报盘程序数据，编写查询语句实现如下分析场景", "output": "appname:uf   |stats count() as cnt by uf.log_type"}
{"input": "登录失败次数。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false| stats count()"}
{"input": "访问资源协议占比。", "instruction": "Jumpserver堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:jumpserver  fortress.log_type:host_session_log\n| stats count() as cnt by fortress.protocol\t"}
{"input": "kernel告警数。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "(appname:esxi AND tag:vmkwarning)  | stats count()"}
{"input": "格式操作日志分布。", "instruction": "思福迪堡垒机数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:safety  | stats count() as cnt by 'fortress.kv.日志类型'"}
{"input": "登录失败事件数。", "instruction": "DellEMC数据，编写查询语句实现如下分析场景", "output": "appname:emc tag:dell  emc.login_detail.Username:* emc.result:fail*| stats count()"}
{"input": "登录事件数。", "instruction": "DellEMC数据，编写查询语句实现如下分析场景", "output": "appname:emc tag:dell  emc.login_detail.Username:* | stats count()"}
{"input": "172.16.11,101,172.16.11.102,172.16.11.103,172.16.11.82,172,20.3.113,172.20.1.127,172.16.11.87,172.16.11.88,172.16.11.89。", "instruction": "linux_绕过堡垒机登录的来源 IP 和用户次数统计。索引包含字段有：audit.msg.src_ip,audit.msg.user,audit.msg.command,audit.msg.ser,raw_message,ip,hostname,appname,tag,source,timestamp，请仅选用必需的字段。堡垒机地址如下", "output": "appname:audit  AND audit.msg.ser:sshd AND \"Accepted password for\" NOT (audit.msg.src_ip:172.16.11.101 OR audit.msg.src_ip:172.16.11.102 OR audit.msg.src_ip:172.16.11.103 OR audit.msg.src_ip:172.16.11.82 OR audit.msg.src_ip:172.20.3.113 OR audit.msg.src_ip:172.20.1.127 OR audit.msg.src_ip:172.16.11.87 OR audit.msg.src_ip:172.16.11.88 OR audit.msg.src_ip:172.16.11.89) | stats count() as login by audit.msg.src_ip,audit.msg.user"}
{"input": "", "instruction": "查询 syslog 日志中包含 error, fail 或 fatal 关键字的记录，并统计每个服务器的错误次数", "output": "appname:syslog (error OR fail OR fatal) | stats count() by hostname"}
{"input": "", "instruction": "查询 syslog 日志中包含 error, fail 或 fatal 关键字的记录，并按照状态码分组", "output": "appname:syslog (error OR fail OR fatal) | stats count() by syslog.status"}
{"input": "", "instruction": "IP地址归属国籍统计", "output": "appname:apache | stats count() by apache.geo.country"}
{"input": "", "instruction": "来访IP的运营商查询", "output": "appname:apache | stats count() by apache.geo.isp"}
{"input": "", "instruction": "查询Chrome和Firefox访问次数", "output": "appname:apache apache.ua:*Chrome* OR apache.ua:*Firefox* | stats count(apache.domain) by apache.ua"}
{"input": "", "instruction": "获取搜索关键字为「rizhiyi」的来访IP及访问次数", "output": "appname:apache apache.request_query:*rizhiyi* | stats count() by apache.clientip "}
{"input": "索引内可用字段有：vpn.dst.geo.city,vpn.dst.geo.country,vpn.dst.geo.ip,vpn.dst.geo.isp,vpn.dst.geo.latitude,vpn.dst.geo.longitude,vpn.dst.geo.province,vpn.dst_ip,vpn.dst_ip.geo.city,vpn.dst_ip.geo.ip,vpn.dst_nt_host,vpn.dst_port,vpn.event_level,vpn.event_name,vpn.facility,vpn.login_user,vpn.msg,vpn.msg.virtual_ip,vpn.neiwang,vpn.proto,vpn.reason,vpn.resource_name,vpn.result,vpn.seconds,vpn.severity,vpn.src.geo.city,vpn.src.geo.country,vpn.src.geo.ip,vpn.src.geo.isp,vpn.src.geo.latitude,vpn.src.geo.longitude,vpn.src.geo.province,vpn.src_ip,vpn.src_ip.geo.country,vpn.src_ip.geo.ip,vpn.src_port,vpn.state,vpn.states,vpn.target.display,vpn.time,vpn.transport。请只使用有需要的字段。", "instruction": "访问成功连接图", "output": "appname:vpn tag:sangfor vpn.actype:access* vpn.result:success|stats count() by vpn.src.geo.ip,vpn.dst_ip"}
{"input": "", "instruction": "连接协议分布", "output": "appname:vpn tag:sangfor vpn.actype:access* |stats count() as cn by vpn.proto"}
{"input": "", "instruction": "数据库审计日志中高风险事件数监控", "output": "appname:dbaudit dbaudit.level:*高*| stats count()"}
{"input": "", "instruction": "linux_登录失败总数", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats count()"}
{"input": "索引内可用字段为：audit.command,audit.staus,audit.dst,audit.status,audit.payload,audit.level,audit.src,audit.app,audit.rule,audit.data,audit.up,audit.msg,audit.rules,audit.alert,audit.database。请选择实际需要的字段使用。", "instruction": "linux账户属性变更", "output": "appname:audit AND (audit.msg.ser:userdel OR audit.msg.ser:useradd OR audit.msg.ser:passwd OR audit.msg.ser:usermod OR audit.msg.ser:gpasswd OR audit.msg.ser:groupadd OR audit.msg.ser:groupdel OR audit.msg.ser:groupmod) | stats count() as change by ip,hostname,audit.msg.ser,audit.msg.info,timestamp "}
{"input": "", "instruction": "linux_敏感操作命令总数", "output": "appname:audit AND audit.msg.ser:shell_cmd AND (audit.msg.command:service* OR audit.msg.command:rm* OR audit.msg.command:export* OR audit.msg.command:kill*)  | stats count()"}
{"input": "", "instruction": "linux_登录成功用户统计", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count() as ct by audit.msg.user"}
{"input": "", "instruction": "linux账户审计事件数", "output": "appname:audit AND (audit.msg.ser:userdel OR audit.msg.ser:useradd OR audit.msg.ser:passwd OR audit.msg.ser:usermod OR audit.msg.ser:gpasswd OR audit.msg.ser:groupadd OR audit.msg.ser:groupdel OR audit.msg.ser:groupmod) | stats count() as account"}
{"input": "", "instruction": "linux_登录成功源IP统计", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count() as ct by audit.msg.src_ip"}
{"input": "", "instruction": "linux_登录成功总数", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count()"}
{"input": "", "instruction": "linux_登录失败源IP和用户统计", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats count() as ct by audit.msg.src_ip,audit.msg.user"}
{"input": "", "instruction": "linux定时任务审计", "output": "appname:audit AND audit.msg.ser:CROND | stats count() as cron by ip,hostname,audit.msg.user,audit.msg.cmd "}
{"input": "", "instruction": "SSH登录事件数", "output": "appname:audit AND audit.msg.ser:sshd AND (\"Accepted password for\" OR \"Failed password for\") | stats count() as login"}
{"input": "", "instruction": "db2数据库各类实例占比", "output": "appname:db2  |stats count() as cnt by db2.instance"}
{"input": "", "instruction": "db2数据库FUNCTION详情", "output": "appname:db2  |stats count() as cnt by db2.function"}
{"input": "DNS访问城市热力图。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.city"}
{"input": "DNS响应状态统计图。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS | stats count() as count_  by DNS.status"}
{"input": "访问百度的地点统计。", "instruction": "DNS_yamu数据，编写查询语句实现如下分析场景", "output": "* appname:DNS  AND DNS.domain.domain:baidu.com |stats count() by DNS.locaiton"}
{"input": "cisco_nexus日志类型。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_nexus |stats count()  by switch.log_type"}
{"input": "cisco_nexus日志级别分类。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_nexus |stats count()  by switch.severity,switch.describe"}
{"input": "事件总数。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei |stats count() as count_"}
{"input": "登录失败帐号与源主机关系图。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei (switch.brief:LOGINFAILED OR switch.brief: LOGINFAIL OR switch.brief:LOGINFAILED OR switch.brief:LOGIN_FAIL OR switch.brief:SNMP_FAIL OR switch.brief:SSH_FAIL) | stats count() as count_ by switch.kvmsg.UserName,switch.kvmsg.IpAddress"}
{"input": "事件数。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch | stats count()"}
{"input": "普通事件数。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch AND switch.severity:info OR switch.severity:notice | stats count()"}
{"input": "非常严重事件数。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch AND switch.severity:error | stats count()"}
{"input": "firewall_h3c_事件数量。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c | stats count()"}
{"input": "外网访问邮件服务器全世界地图。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "(appname:exchange tag:front )  |stats count('exchange.dst.geo.country') as count_ by exchange.dst.geo.country"}
{"input": "外网访问访问邮件服务器热点图。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |stats count()  as cnt by exchange.dst.geo.city"}
{"input": "收发邮件内网ip对应外网ip所在国家的分布图。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |stats count() as cnt by exchange.src_ip,exchange.dst.geo.country"}
{"input": "收发邮件内网ip对应外网ip所在城市的分布图。", "instruction": "exchange前端日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:front  |stats count() as cnt by exchange.src_ip,exchange.dst.geo.city"}
{"input": "华三入侵防御系统普通事件量。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:h3c AND  ips.severity:\"LOW\"| stats count()"}
{"input": "华三入侵防御系统总的事件量。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:h3c | stats count()"}
{"input": "连接协议分布。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:access* |stats count() as cn by vpn.proto"}
{"input": "ArrayVpn访问用户分布。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|stats count() by vpn.kv.src.geo.city"}
{"input": "ArrayVPN访问路线图。", "instruction": "ArrayVPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:array|stats count() by vpn.kv.src.geo.country,vpn.kv.src.geo.longitude,vpn.kv.src.geo.latitude,vpn.kv.dst.geo.country,vpn.kv.dst.geo.longitude,vpn.kv.dst.geo.latitude"}
{"input": "连接协议分布。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco NOT \"authentication\" |stats count() as cn by vpn.transport"}
{"input": "策略拦截方向分类。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec  \"规则\" | stats count() as total by  antivirus_gateway.direction"}
{"input": "攻击SID分布。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec \n SID|stats count() by antivirus_gateway.sid"}
{"input": "不同攻击占比分布。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec SID| stats count() by 'antivirus_gateway.msg'"}
{"input": "针对攻击采取的动作。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:symantec  SID| stats count() by 'antivirus_gateway.action'"}
{"input": "源IP和源端口的关系图。", "instruction": "网御星云防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.src_ip,firewall.src_port"}
{"input": "linux定时任务审计。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:audit AND audit.msg.ser:CROND | stats count() as cron by ip,hostname,audit.msg.user,audit.msg.cmd "}
{"input": "登录日志量。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\" | stats count() as login"}
{"input": "账户审计事件数量统计。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:audit AND (audit.msg.ser:userdel OR audit.msg.ser:useradd OR audit.msg.ser:passwd OR audit.msg.ser:usermod OR audit.msg.ser:gpasswd OR audit.msg.ser:groupadd OR audit.msg.ser:groupdel OR audit.msg.ser:groupmod) | stats count() as account"}
{"input": "各设备事件数分布。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |stats count() as cnt by hostname"}
{"input": "错误事件数是多少？。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2 AND db2.level:Error |stats count()"}
{"input": "db2数据库总事件数。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2 |stats count()"}
{"input": "db2数据库FUNCTION详情。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |stats count() as cnt by db2.function"}
{"input": "db2数据库各类实例占比。", "instruction": "DB2数据库日志数据，编写查询语句实现如下分析场景", "output": "appname:db2  |stats count() as cnt by db2.instance"}
{"input": "飞塔error事件数。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall tag:fortinet firewall.level:error| stats count()"}
{"input": "飞塔warning事件数。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet firewall.level:warning OR firewall.pri:warning OR firewall.pri:emergency| stats count()"}
{"input": "飞塔alert事件数。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet firewall.level:alert OR firewall.pri:alert| stats count()"}
{"input": "飞塔IPS攻击量。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips | stats count()"}
{"input": "飞塔IPS攻击点对点统计。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:ips| stats count() by firewall.src_ip,firewall.dst_ip"}
{"input": "飞塔IPS攻击严重程度统计。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips| stats count() by firewall.severity"}
{"input": "飞塔攻击high程度攻击量。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips firewall.severity:high | stats count()"}
{"input": "飞塔攻击critical程度攻击量。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips firewall.severity:critical | stats count()"}
{"input": "飞塔IPS检测攻击详细查询-钻取。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips| stats count() as _count by firewall.src_ip,firewall.dst_ip,firewall.dst_port,firewall.attack"}
{"input": "飞塔应用分析事件数。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl| stats count()"}
{"input": "飞塔-内网访问外网分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "(appname:firewall  tag:fortinet )AND firewall.type:traffic AND firewall.src.geo.country:private | stats count() by firewall.dst.geo.city"}
{"input": "故障上报数统计。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats count() as count_ by stb.area_code_dec,stb.reporttype_dec"}
{"input": "报障总数。", "instruction": "机顶盒自助服务系统数据，编写查询语句实现如下分析场景", "output": "appname:stb tag:userreport|stats count() as count_"}
{"input": "点播节目地市分布。", "instruction": "机顶盒数据，编写查询语句实现如下分析场景", "output": " (appname:stb_vixtel_sotthas)  AND (stb_vixtel_sotthas.geo.country:\"中国\" AND stb_vixtel_sotthas.geo.province:\"广东\") |stats count(stb_vixtel_sotthas.geo.city) as count_ by stb_vixtel_sotthas.geo.city"}
{"input": "直播用户数。", "instruction": "机顶盒数据，编写查询语句实现如下分析场景", "output": "appname:stb_vixtel_smpegts | stats count() by stb_vixtel_smpegts.stbId|stats count() as  count_1\n"}
{"input": "点播用户数。", "instruction": "机顶盒数据，编写查询语句实现如下分析场景", "output": "appname:stb_vixtel_sotthas | stats count() by stb_vixtel_sotthas.stbId|stats count() as  count_1\n"}
{"input": "事件等级分布。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit | stats count() as cnt by dbaudit.level"}
{"input": "高风险事件数监控。", "instruction": "h3c_dbaudit数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit dbaudit.level:*高*| stats count()"}
{"input": "交易量。", "instruction": "综合前置_gaps数据，编写查询语句实现如下分析场景", "output": "appname:gaps gaps.pub.respmsg:*  |stats count() as total"}
{"input": "异常交易信息热词。", "instruction": "支付聚合_epay数据，编写查询语句实现如下分析场景", "output": "appname:epay AND NOT epay.response.responseTextMessage:交易成功 |stats count() as tally by epay.response.responseTextMessage"}
{"input": "访问源IP地理位置。", "instruction": "深信服零信任VPN数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor_0trust vpn.event_name:login | stats count()  by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "连接协议分布。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:access* |stats count() as cn by vpn.proto"}
{"input": "", "instruction": "定时任务事件数", "output": "appname:audit AND audit.msg.ser:CROND AND NOT (audit.msg.cmd:run\\-parts\\ \\/etc\\/cron.hourly OR audit.msg.cmd:\\/usr\\/lib64\\/sa\\/sa1\\ 1\\ 1  OR audit.msg.cmd:\\/usr\\/sbin\\/raid-check ) | stats count() as crond"}
{"input": "由于客户端mac在交换机某端口上导致违反安全规则分析。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios  AND PORT_SECURITY-2-PSECURE_VIOLATION |stats count() by switch.src_mac,switch.interface_name "}
{"input": "高级事件总数。", "instruction": "交换机_华为数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:huawei switch.severity:<4|stats count() as count_"}
{"input": "严重事件数。", "instruction": "华三交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch AND switch.severity:>2 AND switch.severity:warn | stats count()"}
{"input": "华三防火墙普通事件数量。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c AND firewall.level:>4 | stats count()"}
{"input": "firewall_h3c_严重事件数量。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c AND firewall.level:>2 AND firewall.level:<5 | stats count()"}
{"input": "firewall_h3c_非常严重的事件数量。", "instruction": "华三防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:h3c AND firewall.level<3 | stats count()"}
{"input": "访问目标热力图1。", "instruction": "FirewallPaloAlto数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:paloalto|stats count() as count_ by firewall.dst.geo.country"}
{"input": "华三入侵防御系统严重事件数量。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:h3c  AND (ips.severity:>2 AND ips.severity:<5) OR ips.severity:\"MEDIUM\" | stats count()"}
{"input": "华三入侵防御系统非常严重事件量。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:h3c AND ips.severity:<3 OR ips.severity:\"HIGH\" | stats count()"}
{"input": "最近24小时事件级别分类。", "instruction": "防病毒_SEPM数据，编写查询语句实现如下分析场景", "output": "* appname:antivirus_gateway AND ( tag:symantec OR tag:symantec_app_c OR tag:symantec_risk )|stats count() as total by antivirus_gateway.event_level"}
{"input": "请求错误事件数。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware middleware.status:>399 | stats count()"}
{"input": "中间件客户端错误事件数_40X。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware  middleware.status:>399 AND apache.status:<500|stats count()  as '客户端错误事件'"}
{"input": "中间件服务端错误事件数_50X。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware middleware.status:>499|stats count()  as '服务端错误事件'"}
{"input": "访问失败次数。", "instruction": "安全态势仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:middleware middleware.status:>399|stats count() as count_"}
{"input": "定时任务事件数。", "instruction": "linux审计数据，编写查询语句实现如下分析场景", "output": "appname:audit AND audit.msg.ser:CROND AND NOT (audit.msg.cmd:run\\-parts\\ \\/etc\\/cron.hourly OR audit.msg.cmd:\\/usr\\/lib64\\/sa\\/sa1\\ 1\\ 1  OR audit.msg.cmd:\\/usr\\/sbin\\/raid-check ) | stats count() as crond"}
{"input": "用户校验请求的访问量。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | stats count()"}
{"input": "资产账号记录表不存在。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:0 资产账号记录表不存在 | stats count() "}
{"input": "认证账户被锁定。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:0 认证账户被锁定 | stats count()"}
{"input": "交易密码错误。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:0 交易密码错误 | stats count() "}
{"input": "用户校验请求的次数。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:THS THS.REQTYPE:1 AND THS.ANSTYPE:\" \" | stats count() "}
{"input": "cisco_ios配置到远程主机及端口的路由规则统计。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios  AND SYS-6-LOGGINGHOST_STARTSTOP |stats count() by switch.host_ip,switch.port"}
{"input": "", "instruction": "CDN 日志中，以.m3u8结尾的URL统计访问次数", "output": "appname:cdn_log AND cdn.request_url:*.m3u8|stats count() by cdn.request_url"}
{"input": "", "instruction": "CDN 日志中，以.m3u8结尾的URL统计各省访问次数", "output": "appname:cdn_log AND cdn.request_url:*.m3u8|stats count() by cdn.geo.province"}
{"input": "", "instruction": "CDN 日志中，以.mp4结尾的URL统计访问次数", "output": "appname:cdn_log AND cdn.request_url:*.mp4|stats count() by cdn.request_url"}
{"input": "", "instruction": "CDN 日志中，以.mp4结尾的URL统计各省访问次数", "output": "appname:cdn_log AND cdn.request_url:*.mp4|stats count() by cdn.geo.province"}
{"input": "", "instruction": "查询 nginx 日志中真实用户 IP 地址和所属城市的访问量分布", "output": "appname:nginx_log| stats count() as ct by nginx.real_ip.last,nginx.geo.city"}
{"input": "", "instruction": "查询 nginx 日志中所有真实用户 IP 地址的访问量及其运营商", "output": "appname:nginx_log |stats count(nginx.geo.isp) as total by nginx.real_ip.last,nginx.geo.isp"}
{"input": "", "instruction": "查询 nginx 日志中按请求次数排名的真实用户 IP", "output": "appname:nginx_log |stats count(nginx.real_ip.last) as ct by nginx.real_ip.last"}
{"input": "", "instruction": "查询 nginx 日志中按请求次数排名的 URL", "output": "appname:nginx_log|stats count(nginx.real_ip.last) as ct by nginx.request_raw.request_url"}
{"input": "现代化支付系统。", "instruction": "查询某系统的交易量", "output": "appname:cnap cnap.respSysId:CNAP AND cnap.action:RECEIVED | stats count()"}
{"input": "", "instruction": "IIS 服务的页面浏览量PV", "output": "appname:middleware tag:iis |stats count() as count_"}
{"input": "", "instruction": "IIS 服务器的来源ip与目的ip访问关系", "output": "(appname:middleware tag:iis) | stats count() by middleware.src_ip,middleware.dst_ip"}
{"input": "", "instruction": "访问源IP地理位置", "output": "appname:vpn tag:sangfor vpn.actype:login|stats count()  by vpn.src.geo.country"}
{"input": "", "instruction": "数据库审计日志中中风险事件数", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"中\" |stats count()"}
{"input": "", "instruction": "数据库审计日志中触发告警类型分布", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.alert_type"}
{"input": "", "instruction": "Exchange_发送事件总数", "output": "appname:exchange tag:send |stats count()"}
{"input": "", "instruction": "Exchange_追踪事件总数", "output": "appname:exchange tag:msgtrk |stats count()"}
{"input": "", "instruction": "linux登录成功用户分布", "output": " (appname:linux linux.event_name:登录成功事件)  |stats count(linux.user) as ct by linux.user "}
{"input": "", "instruction": "linux登录失败用户分布", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count(linux.user) as ct by linux.user "}
{"input": "", "instruction": "linux错误事件模块分布", "output": "appname:linux tag:messages|stats count() as cnt by linux.type"}
{"input": "", "instruction": "linux登录失败详情", "output": "appname:linux AND \"authentication failure\" | stats count(audit.msg.user) as ct by ip,audit.msg.user,audit.msg.ser "}
{"input": "", "instruction": "linux历史操作命令事件数", "output": "appname:linux AND audit.msg.ser:shell_cmd | stats count() as cmd"}
{"input": "", "instruction": "linux主机错误关键字事件数", "output": "appname:linux AND (failed OR err OR error OR errors OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR bug OR panic) | stats count()"}
{"input": "", "instruction": "linux各模块日志量", "output": "appname:linux | stats count() by audit.msg.ser"}
{"input": "", "instruction": "vsftpd失败详情", "output": "appname:linux tag:linux_secure AND audit.msg.ser:vsftpd AND \"authentication failure\" | stats count() as vsftpd by ip,hostname,audit.msg.ruser,audit.msg.rhost "}
{"input": "", "instruction": "vsftpd登录失败数量", "output": "appname:linux tag:linux_secure AND audit.msg.ser:vsftpd AND \"authentication failure\" | stats count() as vsftpd "}
{"input": "", "instruction": "vsftp下载服务器统计", "output": "appname:linux AND tag:linux_secure AND audit.msg.ser:vsftpd | stats count() as cnt by ip"}
{"input": "", "instruction": "VSFTP事件数", "output": "appname:linux AND tag:linux_secure AND audit.msg.ser:vsftpd | stats count() as vsftpd "}
{"input": "", "instruction": "按 IP 地址统计认证失败事件数", "output": "appname:linux AND \"authentication failure\"  | stats count(audit.msg.user) as error by ip "}
{"input": "", "instruction": "vsftp登录用户TOP10", "output": "appname:linux tag:linux_secure AND audit.msg.ser:vsftpd | stats count() as cnt by audit.msg.user"}
{"input": "", "instruction": "linux日志采集情况，按 ip、hostname、appname、tag 统计", "output": "appname:linux |stats count() as cnt by ip,hostname,appname,tag"}
{"input": "", "instruction": "Linux操作系统审计_审计策略调整事件数", "output": "appname:linux tag:audit event_type:PATH AND event_detail.name:\"/etc/audit/audit.rules\" | stats count()"}
{"input": "", "instruction": "Linux操作系统审计_权限变更事件数", "output": "appname:linux tag:audit event_type:PROCTITLE (full_cmd:chmod* OR full_cmd:chown* OR full_cmd:chage*) |stats count()"}
{"input": "", "instruction": "Linux操作系统审计_ssh登录事件数", "output": "appname:linux tag:secure AND type:sshd AND (\"Accepted password for\" OR \"Failed password for\")  |stats count() as login"}
{"input": "", "instruction": "Linux操作系统审计，按 IP 地址分组统计认证失败次数", "output": "appname:linux tag:secure AND \"authentication failure\"   |stats count(user) as error by ip "}
{"input": "", "instruction": "Linux操作系统审计，包含错误关键字的日志总量", "output": "appname:linux AND (failed OR err OR error OR errors OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR bug OR panic)  | stats count()"}
{"input": "", "instruction": "Linux操作系统审计_敏感命令事件数", "output": "appname:linux tag:audit AND (command:service* OR command:rm* OR command:export* OR command:kill*)  |stats count()"}
{"input": "", "instruction": "Linux操作系统审计_sudo提权事件数", "output": "appname:linux tag:secure event_name:sudo执行命令事件 |stats count()"}
{"input": "", "instruction": "Linux操作系统审计_sudo提权事件详情", "output": "appname:linux tag:secure event_name:sudo执行命令事件 |stats count() as ct by ip,hostname,user,path,command "}
{"input": "", "instruction": "Linux操作系统审计_linux各模块日志量", "output": "appname:linux  |stats count() as cnt by type"}
{"input": "", "instruction": "Linux操作系统审计_登录失败详情", "output": "appname:linux AND \"authentication failure\"  |stats count(user) as ct by ip,type "}
{"input": "", "instruction": "Linux操作系统审计_主机敏感命令执行统计", "output": "appname:linux tag:audit AND (command:service* OR command:rm* OR command:export* OR command:kill*)  |stats count() as cnt by ip,command"}
{"input": "", "instruction": "Linux多次使用无效用户登录主机日志量", "output": "appname:linux tag:secure AND (\"Invalid user\") | stats count()"}
{"input": "", "instruction": "Linux主机账号密码更改或重置事件的次数", "output": "appname:linux event_name:密码修改事件 \"password changed for\" | stats count()"}
{"input": "", "instruction": "从rizhiyi中查询beaver错误日志数量", "output": "appname:rizhiyi  tag:beaver* level:ERROR|stats count()"}
{"input": "", "instruction": "从rizhiyi中查询mini_core日志检查次数", "output": "appname:rizhiyi  tag:beaver* level:ERROR AND mini_core|stats count()"}
{"input": "", "instruction": "虚拟机_vmware_事件等级占比分布", "output": "appname:vmware | stats count() as cnt by vmware.level"}
{"input": "", "instruction": "虚拟机_vmware_各模块事件分布", "output": "appname:vmware | stats count() as cnt by vmware.module"}
{"input": "", "instruction": "虚拟机_vmware_事件总数", "output": "appname:vmware AND tag:* |stats count()"}
{"input": "", "instruction": "虚拟机_vmware_发生错误次数", "output": "appname:vmware AND tag:* AND ('vmware.level':error)|stats count()"}
{"input": "", "instruction": "虚拟机_vmware_发生警告次数", "output": "appname:vmware AND tag:* AND ('vmware.level':warning)|stats count()"}
{"input": "", "instruction": "aix主机登录失败列表_日报", "output": "tag:failedlogin appname:aix| stats count(hostname) as count_ by hostname,aix.user,aix.type,aix.src_ip,timestamp  "}
{"input": "", "instruction": "errpt报错资源名比例", "output": "appname:aix tag:errpt| stats count(hostname) by aix.resource_name "}
{"input": "", "instruction": "aix账号登录失败比例", "output": "appname:aix tag:failedlogin |stats count() as count_ by hostname,aix.user"}
{"input": "", "instruction": "errpt错误类型比例", "output": "appname:aix tag:errpt| stats count(hostname) by aix.class_dec"}
{"input": "", "instruction": "aix主机登录比例", "output": "appname:aix tag:last | stats count(hostname) as count_ by hostname"}
{"input": "", "instruction": "errpt错误级别比例", "output": "appname:aix tag:errpt| stats count(hostname) by aix.type_dec"}
{"input": "", "instruction": "errpt错误主机分布", "output": "appname:aix tag:errpt| stats count(hostname) by hostname"}
{"input": "", "instruction": "Linux操作系统审计_su越权操作事件数", "output": "appname:linux tag:secure  AND type:su AND \"session opened for\"  |stats count()"}
{"input": "网神会话阻断统计。", "instruction": "网神数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:legendsec) AND 'firewall.mod':policy | stats count() by firewall.action"}
{"input": "网神模块日志分布。", "instruction": "网神数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND 'tag':legendsec | stats count() by firewall.mod"}
{"input": "网神防火墙攻击检测类型分布。", "instruction": "网神数据，编写查询语句实现如下分析场景", "output": "((appname:firewall AND tag:legendsec) AND firewall.mod:ad) | stats count() by firewall.attack_name"}
{"input": "网神deny源地址TOP统计。", "instruction": "网神数据，编写查询语句实现如下分析场景", "output": "((appname:firewall AND tag:legendsec) AND firewall.mod:policy) AND 'firewall.action':deny | stats count() by firewall.sip"}
{"input": "网神防火墙攻击点对点统计。", "instruction": "网神数据，编写查询语句实现如下分析场景", "output": "((appname:firewall AND tag:legendsec) AND firewall.mod:ad)|stats count() by  firewall.attack_name,firewall.sip,firewall.dip"}
{"input": "udp监听数。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:process process.local_addr:* process.proto:udp|stats count()"}
{"input": "tpc_TIME_WAIT数。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:process process.local_addr:* process.proto:tcp process.state:TIME_WAIT|stats count()"}
{"input": "tcp_ESTABLISHED数。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED|stats count()"}
{"input": "tcp_LISTEN数。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "* AND appname:process process.local_addr:* process.proto:tcp process.state:LISTEN|stats count()"}
{"input": "主机连接关系图。", "instruction": "linux性能数据，编写查询语句实现如下分析场景", "output": "appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED|stats count() as cnt by process.local_addr,process.foreign_addr"}
{"input": "postgresql数据库实例占比。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql | stats count() by postgresql.database"}
{"input": "postgresql数据库用户占比。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql | stats count() by postgresql.user"}
{"input": "postgresql数据库ip占比。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql | stats count() by postgresql.ip"}
{"input": "postgresql数据库sql运行返回码占比。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql | stats count() by postgresql.sql_state_code\t"}
{"input": "postgresql数据库日志级别占比。", "instruction": "postgresql日志数据，编写查询语句实现如下分析场景", "output": "appname:postgresql | stats count() by postgresql.error_severity\t"}
{"input": "账号登录失败比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:failedlogin |stats count() as count_ by hostname,aix.user"}
{"input": "使用终端直接登录列表。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:last aix.type:vty*\n | stats count(hostname) as count_ by hostname,aix.user,aix.type,timestamp"}
{"input": "主机登录比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:last | stats count(hostname) as count_ by hostname"}
{"input": "errpt错误主机分布。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:errpt| stats count(hostname) by hostname"}
{"input": "errpt错误类型比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:errpt| stats count(hostname) by aix.class_dec"}
{"input": "errpt错误级别比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:errpt| stats count(hostname) by aix.type_dec"}
{"input": "errpt报错资源名比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix tag:errpt| stats count(hostname) by aix.resource_name"}
{"input": "mongodb连接断开数。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb \"end connection\"| stats count() as count1"}
{"input": "mongodb连接数。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb \"connection accepted from\"| stats count() as count1"}
{"input": "mongodb日志等级别占比。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb | stats count() by mongodb.desc\t"}
{"input": "mongodb日志类型占比。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb | stats count() by mongodb.component"}
{"input": "mongodb日志错误量。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb mongodb.desc:错误| stats count() as count1"}
{"input": "mongodb执行语句操作类型占比。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb | stats count() by mongodb.action"}
{"input": "mongodb表操作占比。", "instruction": "mongodb日志数据，编写查询语句实现如下分析场景", "output": "appname:mongodb | stats count() by mongodb.namespace"}
{"input": "aofei_cdn访客地理信息分布情况。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei | stats count() by  cdn.geo.city"}
{"input": "aofei_各直播平台在线占比分析。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) |stats count() as count_ by cdn.domain"}
{"input": "aofei_直播业务访客地理位置城市分布情况。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) | stats count() by  cdn.geo.city"}
{"input": "aofei_各点播平台在线占比分析。点播域名包括：vod1.video.com,vod2.video.com,vod3.video.com,vod4.video.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() as count_ by cdn.domain"}
{"input": "aofei_点播业务访客地理分布情况。点播域名包括：vod1.video.com,vod2.video.com,vod3.video.com,vod4.video.com。", "instruction": "奥飞CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:aofei AND (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() by  cdn.geo.city"}
{"input": "CDN各节点业务占比分析。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  |  stats count() by hostname"}
{"input": "CDN命中次数。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei   AND cdn.cdn_status:*HIT| stats count() "}
{"input": "CDN分应用统计访问次数。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  | stats count() by appname"}
{"input": "CDN访客地理分布情况。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei | stats count() by  cdn.clientip.geo.city"}
{"input": "各直播平台占比分析。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) |stats count() as count_ by cdn.domain"}
{"input": "直播业务命中次数。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) AND cdn.cdn_status:*HIT | stats count() by appname"}
{"input": "直播业务访问次数。直播平台域名包括：live1.video.cn, live2.video.com, live3.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) | stats count() by appname"}
{"input": "各点播平台在线占比分析。点播域名包括：vod1.video.com,vod2.video.com,vod3.video.com,vod4.video.com。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() as count_ by cdn.domain"}
{"input": "图片业务分组占比分析。图片业务域名包括：wapx.example.cn,img.example.cn,tv.example.cn。", "instruction": "华为CDN数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei (cdn.domain:wapx.example.cn OR cdn.domain:img.example.cn OR  cdn.domain:tv.example.cn) | stats count() as count_ by cdn.domain"}
{"input": "客户端ip地址统计。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats count() by exchange.clientip.geo.ip"}
{"input": "按邮件主题统计占比。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats count() by exchange.message_subject"}
{"input": "客户端ip地址占比排行。", "instruction": "exchange日志数据，编写查询语句实现如下分析场景", "output": "appname:exchange tag:tracking |stats count() by exchange.clientip.geo.ip"}
{"input": "cisco_nexus事件总数。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus |stats count() as count_"}
{"input": "cisco_nexus端口down掉原因分析。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND down |stats count() by switch.reason"}
{"input": "cisco_ios日志级别分类。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios  |stats count()  by switch.severity,switch.describe"}
{"input": "cisco_IOS日志类型。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios  |stats count()  by switch.log_type"}
{"input": "cisco_ios事件总数。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios    |stats count() as count_"}
{"input": "防火墙访问量区域分布。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa firewall.src.geo.country:* | stats count() as cnt by firewall.src.geo.country,firewall.src.geo.province,firewall.src.geo.city"}
{"input": "防火墙访问热力图。", "instruction": "cisco_asa防火墙数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:cisco_asa firewall.src.geo.country:\"中国\" | stats count() as cnt by firewall.src.geo.city"}
{"input": "日志描述分类统计。", "instruction": "交换机_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:switch) AND tag:juniper |stats count() as total by switch.desc\t"}
{"input": "CRON执行用户。", "instruction": "交换机_juniper数据，编写查询语句实现如下分析场景", "output": "((* AND appname:switch) AND tag:juniper) AND switch.module:\\/usr\\/sbin\\/cron  | stats count() as total by switch.desc.user\t"}
{"input": "CRON执行命令统计。", "instruction": "交换机_juniper数据，编写查询语句实现如下分析场景", "output": "((* AND appname:switch) AND tag:juniper) AND switch.module:\\/usr\\/sbin\\/cron  | stats count() as total by switch.desc.cmd"}
{"input": "总响应量。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 to|stats count() as count_1"}
{"input": "总请求量。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 from|stats count() as count_1"}
{"input": "响应失败量。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:loadbalancing tag:f5 )    (loadbalancing.responsecode:REFUSED OR loadbalancing.responsecode:NXDOMAIN)| stats count() as count_1"}
{"input": "每条线路请求占比。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 from | stats count() by loadbalancing.listenervs_ip"}
{"input": "响应状态占比。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5  loadbalancing.responsecode:* to | stats count() by loadbalancing.responsecode"}
{"input": "请求类型。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5   from | stats count() by loadbalancing.querytype"}
{"input": "f5日志级别_emerg。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5  loadbalancing.severity:emerg|stats count() as count_1"}
{"input": "f5日志级别_alert。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:alert|stats count() as count_1"}
{"input": "f5日志级别_error。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:error |stats count() as count_1"}
{"input": "f5日志级别_crit。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:crit |stats count() as count_1"}
{"input": "f5日志级别_warn。", "instruction": "f5_dns日志数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5  loadbalancing.severity:warn |stats count() as count_1"}
{"input": "f5_vpn事件数。", "instruction": "F5数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:f5 loadbalancing.src_ip:* *vpn*|stats count()"}
{"input": "各类操作占比。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:sentinel | stats count() as cnt by redis.action"}
{"input": "事件执行角色分布。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:sentinel | stats count() as cnt by redis.role"}
{"input": "各事件等级分布。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:sentinel | stats count() as cnt by redis.level"}
{"input": "事件类型分布。", "instruction": "Redis数据，编写查询语句实现如下分析场景", "output": "appname:redis tag:sentinel | stats count() as cnt by redis.type"}
{"input": "日志级别占比图。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech |  stats count() as total by firewall.event_level"}
{"input": "访问全球热力图。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "((* AND appname:firewall) AND tag:dptech)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "日志来源模块分布图。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech |  stats count() as total by firewall.event_type"}
{"input": "访问中国热力图。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "((* AND appname:firewall) AND tag:dptech)  AND (firewall.src.geo.country:\"中国\") |stats count('firewall.src.geo.province') as count_ by firewall.src.geo.province"}
{"input": "连接关闭原因占比图。", "instruction": "迪普防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:dptech | stats count() as total by firewall.reason"}
{"input": "ORA-错误码分布。", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:oracle_alert_log |stats count() by oracle.ora_code "}
{"input": "Oracle关键事件分布。", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname: oracle tag:oracle_alert_log |stats count() by oracle.event"}
{"input": "OracleListener_数据库连接按SID分布图。", "instruction": "Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:oracle_listener_log  | stats count() by oracle.conn_str.SID"}
{"input": "日志不同优先级分析。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone |stats count() as total by firewall.severity\t"}
{"input": "连接关闭原因分析。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.msg.reason"}
{"input": "连接协议分析。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.proto"}
{"input": "连接目的城市分布。", "instruction": "防火墙_hillstone数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:hillstone AND \"session end\" |stats count() as total by firewall.flow.dst_ip.geo.city"}
{"input": "日志不同优先级分析。", "instruction": "dell防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:dell |stats count() as total by firewall.severity\t"}
{"input": "访问来源全球热力图。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper  AND (firewall.src.geo.country:\"中国\") |stats count(firewall.src.geo.country) as count_ by firewall.src.geo.country"}
{"input": "访问来源热力图。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper  AND (firewall.src.geo.country:\"中国\") |stats count(firewall.src.geo.province) as count_ by firewall.src.geo.province"}
{"input": "链接关闭原因。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper |stats count() by firewall.reason"}
{"input": "policyid分布情况。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper |stats count() by firewall.policy_id\t"}
{"input": "防火墙各安全区域之间的流量情况。", "instruction": "防火墙_juniper数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:juniper | stats count() as total by firewall.src_zone,firewall.dst_zone"}
{"input": "checkpoint事件量。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint|stats count() as count_1"}
{"input": "checkpoint拒绝事件量。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint (firewall.action:drop OR firewall.action:Drop) |stats count() as count_1"}
{"input": "checkpoint_action占比。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() by firewall.action"}
{"input": "checkpoint_inter占比。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() by firewall.interface"}
{"input": "checkpoint_协议占比。", "instruction": "防火墙checkpoint日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() by firewall.kv.proto"}
{"input": "事件等级分布。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm  (NOT fortress.type:*) AND (login) |stats count() as total by fortress.level"}
{"input": "应用登录成功占比。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm  fortress.type:*|stats count() as total by fortress.loginOK"}
{"input": "日志级别分类统计。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": " appname:fortress tag:shterm  | stats count() as total by fortress.severity"}
{"input": "日志来源模块统计。", "instruction": "堡垒机_qizhi数据，编写查询语句实现如下分析场景", "output": " appname:fortress tag:shterm  | stats count() as total by fortress.facility"}
{"input": "IPS攻击访问分布。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:nsfocus  | stats count() by ips.src.geo.city"}
{"input": "IPS攻击路径分布情况。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus | stats count() by ips.src.geo.city ,ips.src.geo.longitude,ips.src.geo.latitude, ips.dst.geo.city"}
{"input": "IPS事件级别分析。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus | stats count() by ips.level"}
{"input": "IPS请求协议占比分析。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus | stats count()  as a by ips.proto"}
{"input": "ips_h3c漏洞利用TOP10。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:h3c | stats count() as cnt by ips.cve"}
{"input": "ips_h3c各协议占比。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:h3c | stats count() as cnt by ips.proto"}
{"input": "ips_h3c攻击源热力图。", "instruction": "华三入侵防御系统日志数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:h3c | stats count() as cnt by ips.src.geo.city"}
{"input": "严重日志级别占比。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor|stats count() by firewall.grade"}
{"input": "应用类型占比。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor |stats count() by firewall.app_type\t"}
{"input": "防火墙_系统动作占比。", "instruction": "深信服防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sangfor |stats count() by firewall.action"}
{"input": "城市级攻击地图。", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.src.geo.ip:* | stats count() by ips.src.geo.city"}
{"input": "省级攻击地图。", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.src.geo.ip:* | stats count() by ips.src.geo.province"}
{"input": "国家级攻击地图。", "instruction": "综合态势感知数据，编写查询语句实现如下分析场景", "output": "appname:ips ips.src.geo.ip:* | stats count() by ips.src.geo.country"}
{"input": "访问源IP地理位置。", "instruction": "深信服VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login|stats count()  by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "登录源IP地理位置。", "instruction": "sslvpn日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |stats count() as cnt by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "华三VPN访问态势图。", "instruction": "华三VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn AND tag:h3c |stats count(vpn.src_ip) by vpn.src_ip,vpn.src.geo.latitude,vpn.src.geo.longitude,vpn.dst_ip,vpn.dst.geo.latitude,vpn.dst.geo.longitude"}
{"input": "华三VPN外网地址分布。", "instruction": "华三VPN日志数据，编写查询语句实现如下分析场景", "output": "(appname:vpn AND tag:h3c)  |stats count(vpn.src.geo.country) as count_ by vpn.src.geo.country"}
{"input": "华三VPN通过协议占比。", "instruction": "华三VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn AND tag:h3c |stats count(vpn.proto)  by vpn.proto"}
{"input": "dns解析失败次数。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.rcode:NXDOMAIN|stats count() as count_ "}
{"input": "DNS解析成功次数。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.rcode:NOERROR |stats count() as count_ "}
{"input": "DNS故障。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.rcode:SERVFAIL |stats count() as count_ "}
{"input": "DHCP_discover报文数量。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPDISCOVER|stats count()"}
{"input": "DHCP_offer报文数量。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPOFFER|stats count()"}
{"input": "DHCP_ack报文数量。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPACK|stats count()"}
{"input": "DHCP_request报文数量。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPREQUEST|stats count()"}
{"input": "DHCP_release报文数量。", "instruction": "ZDNS日志数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPRELEASE|stats count()"}
{"input": "用户登录次数。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit oracle.login_user:* | stats count() as ct by oracle.login_user"}
{"input": "用户对表对操作。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:audit oracle.policy:*|stats count() as cn by oracle.policy,oracle.login_user"}
{"input": "登录操作系统用户名。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit oracle.user:* | stats count() as cn by oracle.user"}
{"input": "连接失败原因分布。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener oracle.msg:TNS*|stats count() as cn by oracle.msg"}
{"input": "错误事件分布。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:alert |stats count() as cn by oracle.description"}
{"input": "ORA错误码事件分布。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:alert | stats count() as cn by oracle.ORACODE"}
{"input": "发生严重错误次数。", "instruction": "数据库_oracle_数据，编写查询语句实现如下分析场景", "output": "appname:oracle  tag:incident|stats count() as cn "}
{"input": "ADS攻击类型占比分析。", "instruction": "ads_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ddos tag:nsfocus | stats count() by ddos.attack_type"}
{"input": "登录用户名分布。", "instruction": "负载均衡_piolink_数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:piolink loadbalancing.type:login|stats count() by loadbalancing.username"}
{"input": "源区域分布。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:juniper |stats count() by firewall.src_zone"}
{"input": "目的区域分布。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:juniper |stats count() by firewall.dst_zone"}
{"input": "命中策略名分布。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:juniper |stats count() by firewall.policy"}
{"input": "协议id分布。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:juniper |stats count() by firewall.proto"}
{"input": "连接服务对比图。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:juniper |stats count() as total  by firewall.service"}
{"input": "各安全区域之间的流量情况。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:juniper | stats count() as total by firewall.src_zone,firewall.dst_zone"}
{"input": "连接关闭原因分布。", "instruction": "firewall_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:firewall  tag:juniper firewall.reason:*|stats count() by firewall.reason"}
{"input": "出入接口关系图。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.inbound_interface,ips.outbound_interface\t"}
{"input": "被攻击的服务分布。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.service\t"}
{"input": "协议分布。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:juniper|stats count() by ips.proto"}
{"input": "攻击类别分布。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.attack_type"}
{"input": "被攻击的app分布。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.vendor_app"}
{"input": "源ip至目的ip关系图。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.src_ip,ips.dst_ip"}
{"input": "出入边界关系图。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.inbound_zone,ips.outbound_zone"}
{"input": "命中策略分布。", "instruction": "ips_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:ips AND tag:juniper|stats count() by ips.policy"}
{"input": "中间件_nginx_请求操作系统分布。", "instruction": "中间件_nginx_数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access|stats count() by middleware.http_user_agent.os"}
{"input": "中间件_nginx_请求浏览器分布。", "instruction": "中间件_nginx_数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access |stats count() by middleware.http_user_agent.browser"}
{"input": "nginx_request分布占比。", "instruction": "中间件_nginx_数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:error |stats count() as cnt by middleware.request"}
{"input": "nginx错误等级分布。", "instruction": "中间件_nginx_数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:error |stats count() as cnt by middleware.error_level"}
{"input": "nginx错误日志referrer_Top10。", "instruction": "中间件_nginx_数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:error |stats count() as cnt by middleware.referrer"}
{"input": "ids_snort_源ip目的ip关系图。", "instruction": "ids_snort_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|stats count() by ids.src_ip,ids.dst_ip"}
{"input": "ids_snort_攻击类别分布。", "instruction": "ids_snort_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|stats count() by ids.attack_type"}
{"input": "ids_snort_传输协议分布。", "instruction": "ids_snort_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|stats count() by ids.proto"}
{"input": "ids_snort_攻击特征分布。", "instruction": "ids_snort_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort|stats count() by ids.signature\t"}
{"input": "ids_snort_事件等级id分布。", "instruction": "ids_snort_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:snort |stats count() by ids.severity_id"}
{"input": "middleware_tomcat_页面浏览量PV。", "instruction": "middleware_tomcat_数据，编写查询语句实现如下分析场景", "output": "appname:middleware tag:tomcat |stats count() as count_"}
{"input": "单日日志总数。", "instruction": "firewall_pix_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix | stats count() as '总数'"}
{"input": "拒绝访问总数。", "instruction": "firewall_pix_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:pix deny| stats count() as '拒绝访问总数'"}
{"input": "出现错误。", "instruction": "middle_ibm_was_数据，编写查询语句实现如下分析场景", "output": "appname:was tag:syserr | stats count() as '错误总数'"}
{"input": "出现审计内容。", "instruction": "middle_ibm_was_数据，编写查询语句实现如下分析场景", "output": "appname:was tag:sysout was.wasEventLogType:A | stats count() as '审计内容'"}
{"input": "安全等级占比。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.event_level"}
{"input": "事件类型。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.event_name"}
{"input": "目的ip热力图。", "instruction": "nta_nsfocus_数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:nsfocus | stats count() by nta.dst.geo.city"}
{"input": "novel事件总数。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel | stats count() as 'novel事件总数'"}
{"input": "novel_traffic事件总数。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel AND firewall.event_type:traffic | stats count() as 'novel_traffic事件总数'"}
{"input": "访问目标地址热力图。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel | stats count() as total by firewall.dst.geo.city"}
{"input": "各类事件动作占比。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel | stats count() by firewall.action"}
{"input": "各类事件类型占比。", "instruction": "firewall_novel_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:novel | stats count() by firewall.event_type"}
{"input": "ips_fortinet_安全等级分布。", "instruction": "ips_fortinet_数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:fortinet | stats count() by ips.event_level"}
{"input": "vpn_fortinet_威胁等级分布。", "instruction": "vpn_fortinet_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:fortinet | stats count() by vpn.event_level"}
{"input": "websense_dlp_源ip位置分布。", "instruction": "websense_dlp_数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense|stats count() by dlp.src.geo.country"}
{"input": "发生错误次数。", "instruction": "虚拟机_vmware_数据，编写查询语句实现如下分析场景", "output": "appname:vmware AND tag:* AND ('vmware.level':error OR vmware.level:ERROR )|stats count()"}
{"input": "发生警告次数。", "instruction": "虚拟机_vmware_数据，编写查询语句实现如下分析场景", "output": "appname:vmware AND tag:* AND (vmware.level:WARNING OR vmware.level:warning) |stats count()"}
{"input": "事件总数。", "instruction": "虚拟机_vmware_数据，编写查询语句实现如下分析场景", "output": "appname:vmware AND tag:* |stats count()"}
{"input": "事件等级占比分布。", "instruction": "虚拟机_vmware_数据，编写查询语句实现如下分析场景", "output": "appname:vmware | stats count() as cnt by vmware.level"}
{"input": "ips攻击事件等级分布。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:nsfocus ips.event_name:IPS攻击事件 | stats count() by ips.level"}
{"input": "请求方法占比。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access | stats count() as cnt by middleware.method"}
{"input": "linux用户删除事件实时监控。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:linux linux.event_name:用户删除事件 | stats count()"}
{"input": "linux创建用户事件实时监控。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:linux linux.event_name:创建用户事件 | stats count()"}
{"input": "linux系统重启关机事件实时监控。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:linux linux.event_name:系统重启关机事件 | stats count()"}
{"input": "linux密码修改事件实时监控。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:linux linux.event_name:密码修改事件 | stats count()"}
{"input": "防火墙拒绝访问事件总数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:firewall firewall.action:Deny| stats count()"}
{"input": "linux本周认证失败事件数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:linux tag:linux linux.event_name:认证失败事件| stats count()"}
{"input": "vpn登录事件数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log in|stats count()"}
{"input": "vpn登出成功失败占比。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log out|stats count() as cnt by vpn.result"}
{"input": "vpn登出事件数。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log out|stats count()"}
{"input": "vpn登录成功失败占比。", "instruction": "安全态势数据，编写查询语句实现如下分析场景", "output": "appname:vpn Log in|stats count() as cnt by vpn.result"}
{"input": "dns_bind9_dns查询级别。", "instruction": "dns_bind9_数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:bind9 |stats count() as cnt by dns.level"}
{"input": "dns_bind9_请求类型分布。", "instruction": "dns_bind9_数据，编写查询语句实现如下分析场景", "output": "appname:dns tag:bind9 |stats count() as cnt by dns.search_type"}
{"input": "sangfor_cdn_ad_SSL事件数。", "instruction": "深信服负载均衡ad数据，编写查询语句实现如下分析场景", "output": "(appname:cdn AND tag:sangfor) SSL |stats count()"}
{"input": "sangfor_cdn_ad_协议占比。", "instruction": "深信服负载均衡ad数据，编写查询语句实现如下分析场景", "output": "(appname:cdn AND tag:sangfor) |stats count() as cnt by cdn.proto"}
{"input": "sangfor_cdn_ad_事件分布。", "instruction": "深信服负载均衡ad数据，编写查询语句实现如下分析场景", "output": "(appname:cdn AND tag:sangfor) | stats count() as cnt by cdn.event_name"}
{"input": "ac连接失败原因分布。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  NOT ac.result:Success NOT ac.result:Success; NOT ac.result:success|stats count() as cnt by ac.result"}
{"input": "ac_SSID分布。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  |stats count() as cnt by ac.ssid"}
{"input": "ac与ap连接信道占比分布。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei | stats count() as cnt by ac.band"}
{"input": "ac各类事件占比。", "instruction": "huawei_ac_数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:huawei | stats count() as cnt by ac.event_name"}
{"input": "认证失败原因分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:认证失败事件|stats count() as cnt by acs.authen_failure_code"}
{"input": "认证失败nasIP分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:认证失败事件|stats count() as cnt by acs.nas_ip_address"}
{"input": "认证失败用户名分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:认证失败事件|stats count() as cnt by acs.user\t"}
{"input": "写入失败数据。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:写入失败事件|stats count() as cnt by acs.author_data\t"}
{"input": "写入失败用户分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:写入失败事件|stats count() as cnt by acs.user"}
{"input": "写入失败原因分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:写入失败事件|stats count() as cnt by acs.author_failure_code"}
{"input": "写入失败nasIP分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:写入失败事件|stats count() as cnt by acs.nas_ip_address"}
{"input": "认证成功用户组分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() as cnt by acs.group_name\t"}
{"input": "认证成功用户分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() as cnt by acs.user\t "}
{"input": "动作分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:account|stats count() as cnt by acs.acct_flags\t"}
{"input": "使用端口名分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:account|stats count() as cnt by acs.nas_portname"}
{"input": "用户名分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:account|stats count() as cnt by acs.user"}
{"input": "使用服务分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:admin|stats count() as cnt by acs.service"}
{"input": "用户分布。", "instruction": "cisco_acs_数据，编写查询语句实现如下分析场景", "output": "appname:acs tag:admin|stats count() as cnt by acs.user"}
{"input": "事件等级占比分布。", "instruction": "cisco_router_数据，编写查询语句实现如下分析场景", "output": "appname:router tag:cisco | stats count() as cnt by router.log_type"}
{"input": "系统告警事件数。", "instruction": "firewall_netscreen_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:netscreen firewall.sys_notify_traffic:*|stats count()"}
{"input": "系统消息事件数。", "instruction": "firewall_netscreen_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:netscreen firewall.sys_info_id:*|stats count()"}
{"input": "info_id分布。", "instruction": "firewall_netscreen_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:netscreen |stats count() as cnt by firewall.sys_info_id\t"}
{"input": "notify_traffic分布。", "instruction": "firewall_netscreen_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:netscreen |stats count() as cnt by firewall.sys_notify_traffic"}
{"input": "防火墙动作分布。", "instruction": "firewall_netscreen_数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:netscreen |stats count() as cnt by firewall.action"}
{"input": "huawei_router错误详情。", "instruction": "huawei_router_数据，编写查询语句实现如下分析场景", "output": "appname:router tag:huawei | stats count() as cnt by router.error_msg"}
{"input": "user_shared。", "instruction": "user_shared数据，编写查询语句实现如下分析场景", "output": "appname:linux |stats count() as cnt by linux.user,hostname"}
{"input": "访问目标地址全球热力图。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "((* AND appname:firewall) AND tag:sonicwall)  |stats count('firewall.dst.geo.country') as count_ by firewall.dst.geo.country"}
{"input": "访问源地址中国热力图。", "instruction": "Sonic防火墙数据，编写查询语句实现如下分析场景", "output": "((* AND appname:firewall) AND tag:sonicwall)  AND (firewall.src.geo.country:\"中国\") |stats count('firewall.src.geo.province') as count_ by firewall.src.geo.province"}
{"input": "NSFOCUS_请求协议分布。", "instruction": "绿盟防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:nsfocus |stats count() by firewall.msg.proto"}
{"input": "总数。", "instruction": "cnaps_数据，编写查询语句实现如下分析场景", "output": "appname:cnaps | stats count() as count_"}
{"input": "vpn_juniper_登录成功用户分布。", "instruction": "vpn_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action: started|stats count() by vpn.login_user"}
{"input": "vpn_juniper_用户登录主机分布。", "instruction": "vpn_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action:started|stats count() by vpn.dst_nt_host"}
{"input": "vpn_juniper_登录失败认证服务器分布。", "instruction": "vpn_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action: failed |stats count() by vpn.auth_dst"}
{"input": "vpn_juniper_登录成功源ip分布。", "instruction": "vpn_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action:started|stats count() by vpn.src_ip"}
{"input": "vpn_juniper_用户连接服务器ip分布。", "instruction": "vpn_juniper_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:juniper vpn.action:connected|stats count() by vpn.dst_ip"}
{"input": "页面浏览量PV。", "instruction": "middleware_microsoft_iis_数据，编写查询语句实现如下分析场景", "output": "appname: middleware tag:iis |stats count() as count_"}
{"input": "来源ip与目的ip访问关系。", "instruction": "middleware_microsoft_iis_数据，编写查询语句实现如下分析场景", "output": "(appname:middleware tag:iis) | stats count() by middleware.src_ip,middleware.dst_ip"}
{"input": "被拒绝访问的端口与协议。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:pf firewall.msg:Reject | stats count() by firewall.dst_port,firewall.proto"}
{"input": "攻击事件目标与来源。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:secure|stats count() by firewall.src_ip,firewall.dst_ip"}
{"input": "攻击来源地图。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": " (appname:firewall tag:tos firewall.type:secure)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "攻击目标地图。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": " (appname:firewall tag:tos firewall.type:secure)  |stats count('firewall.dst.geo.country') as count_ by firewall.dst.geo.country"}
{"input": "ac被拒绝访问的端口与协议。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:ac firewall.rule:deny|stats count() by firewall.dst_port,firewall.proto"}
{"input": "事件类型占比。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:nsfocus| stats count() by ids.event_name"}
{"input": "成功登陆数。", "instruction": "nsfocus_nids_数据，编写查询语句实现如下分析场景", "output": "appname:ids AND tag:nsfocus AND ids.event_name:登录成功 | stats count() as '成功登陆数'"}
{"input": "堡垒机_shterm_用户登录情况。", "instruction": "堡垒机_shterm_数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:sshd Accepted|stats count() by fortress.username"}
{"input": "堡垒机_shterm_登录成功源ip地址。", "instruction": "堡垒机_shterm_数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:sshd Accepted|stats count() by fortress.src_ip"}
{"input": "堡垒机_shterm_linux操作用户。", "instruction": "堡垒机_shterm_数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:CROND|stats count() as cnt by fortress.user\t"}
{"input": "堡垒机_fortress_堡垒机用户操作情况。", "instruction": "堡垒机_shterm_数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:CROND|stats count() as cnt by fortress.user,fortress.action\t"}
{"input": "堡垒机_shterm_Linux操作命令情况。", "instruction": "堡垒机_shterm_数据，编写查询语句实现如下分析场景", "output": "appname:fortress tag:shterm fortress.type:CROND|stats count() as cnt by fortress.action\t"}
{"input": "windows日志等级分布。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows |stats count() as cnt by windows.System.Level"}
{"input": "windows应用事件等级分布。", "instruction": "pf_windows数据，编写查询语句实现如下分析场景", "output": "appname:pf_windows tag:application|stats count() as cnt by windows.System.Level\t"}
{"input": "页面浏览量PV。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats count() as count_"}
{"input": "操作系统分布。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats count() as cnt by tomcat.ua.os\t"}
{"input": "浏览器分布。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats count() as cnt by tomcat.ua.browser\t"}
{"input": "运营商访问次数。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat |stats count() as cnt by tomcat.src.geo.isp"}
{"input": "中国访客分布地图。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat NOT tomcat.geo.city:\"*\"  AND (tomcat.src.geo.country:\"中国\") |stats count(tomcat.src.geo.province) as count_ by tomcat.src.geo.province"}
{"input": "页面浏览量。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx |stats count()"}
{"input": "状态码分布。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": " (appname:pf_nginx)  |stats count() as ct by nginx.status "}
{"input": "浏览器分布。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx |stats count() as cnt by nginx.user_agent.browser"}
{"input": "操作系统分布。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx |stats count() as cnt by nginx.user_agent.os"}
{"input": "错误事件分布。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx tag:error|stats count() as cnt by nginx.event\t"}
{"input": "发生错误事件源ip分布。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx tag:error|stats count() as cnt by nginx.src_ip"}
{"input": "订单成功总数。", "instruction": "pf_gateway数据，编写查询语句实现如下分析场景", "output": "appname:pf_gateway gateway.result:result=true|stats count()"}
{"input": "订单总数。", "instruction": "pf_gateway数据，编写查询语句实现如下分析场景", "output": "appname:pf_gateway  |stats count()"}
{"input": "访客地图。", "instruction": "pf_gateway数据，编写查询语句实现如下分析场景", "output": "appname:pf_gateway NOT gateway.src.geo.city:\"*\"  AND (gateway.src.geo.country:\"中国\") |stats count(gateway.src.geo.province) as count_ by gateway.src.geo.province"}
{"input": "运营商访问次数。", "instruction": "pf_gateway数据，编写查询语句实现如下分析场景", "output": "appname:pf_gateway|stats count() as cnt by gateway.src.geo.isp"}
{"input": "协议占比分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.src_ip:${src_ip} nta.dst_ip:${dst_ip} nta.dst_port:${dst_port} nta.proto:${proto}|stats count() as cnt by nta.proto"}
{"input": "对指定 src_ip，dst_ip，dst_port 和 proto 的流程数据计算访问服务分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.src_ip:${src_ip} nta.dst_ip:${dst_ip} nta.dst_port:${dst_port} nta.proto:${proto}|stats count() by nta.Service_Name"}
{"input": "访问服务分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.Service_Name:*|stats count() by nta.Service_Name"}
{"input": "告警动作分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.event_type:alert nta.src_ip:${alert_src} nta.dst_ip:${alert_dst} |stats count() as cnt by nta.alert.action"}
{"input": "web攻击特征分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() as cnt by nta.alert.signature"}
{"input": "web攻击类型分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() as cnt by nta.alert.metadata.former_category"}
{"input": "web攻击路径。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() as cnt by nta.src_ip,nta.dst_ip"}
{"input": "访问端口分布。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.dst_port:*|stats count() as cnt by nta.dst_port"}
{"input": "IP访问力图。", "instruction": "流量数据，编写查询语句实现如下分析场景", "output": "appname:nta AND tag:eve nta.src_ip:* nta.dst_ip:*|stats count() as cnt by nta.src_ip,nta.dst_ip"}
{"input": "UV。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|stats count()"}
{"input": "资源与服务器访问关系图。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|stats count() as '访问次数' by middleware.server, middleware.path"}
{"input": "用户来源分布。", "instruction": "Thinkbus_Nginx用户访问数据，编写查询语句实现如下分析场景", "output": "appname:nginx|stats count() as '用户来源分布' by middleware.src_ip.geo.city"}
{"input": "Web接口调用次数统计。appname 为 thinkive_works_web_log，动作为Repsonse。接口字段名为middleware.func_no", "instruction": "Thinkbus接口访问数据，编写查询语句实现如下分析场景", "output": "appname:thinkive_works_web_log AND middleware.action:\"Response\" | stats count() as '调用次数' by middleware.func_no"}
{"input": "错误id占比。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun|stats count() as count_1 by middleware.error_no"}
{"input": "错误总数。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun | stats count()"}
{"input": "系统错误no占比。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun |stats count() by middleware.System_errno"}
{"input": "错误模块占比。", "instruction": "恒生中间件日志数据，编写查询语句实现如下分析场景", "output": "appname:hundsun tag:error  appname:hundsun|stats count() by middleware.module"}
{"input": "请求总量。", "instruction": "haproxy日志数据，编写查询语句实现如下分析场景", "output": "appname:haproxy|stats count()"}
{"input": "页面浏览量PV。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access |stats count() as count_"}
{"input": "访客分布_地图。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": " (appname:apache tag:access NOT middleware.geo.city:\"*\")  AND (middleware.geo.country:\"中国\") |stats count(middleware.geo.province) as count_ by middleware.geo.province"}
{"input": "WLS各组件事件数。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname: weblogic | stats count() by middleware.subsystem"}
{"input": "分级别事件数统计。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic|stats count() by middleware.severity"}
{"input": "页面浏览量PV。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic tag:access |stats count() as count_"}
{"input": "系统用量分布。", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "appname:frontend_frontend_log  AND  (frontend.message.category:search OR frontend.message.category:alert OR frontend.message.category:schedule OR frontend.message.category:report) |stats count() by frontend.message.category"}
{"input": "报错模块分布。", "instruction": "日志易运营视图数据，编写查询语句实现如下分析场景", "output": "tag:rizhiyi_internal error |stats count() by appname"}
{"input": "csa_日志不同优先级分析。", "instruction": "hillstone_态势感知数据，编写查询语句实现如下分析场景", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.severity\t"}
{"input": "威胁描述。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.threats_desc\t"}
{"input": "correlated_incidents标签日志中的协议分布。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':correlated_incidents |stats count() as cnt by tda.proto"}
{"input": "malicious_urls标签日志中的协议分布。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.proto\t"}
{"input": "threats日志里的协议分布。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.proto"}
{"input": "类别分布。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':malicious_urls|stats count() as cnt by tda.category"}
{"input": "威胁类型分组分布。", "instruction": "趋势tda数据，编写查询语句实现如下分析场景", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.threats_type_group"}
{"input": "tda源地址热力图。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda  | stats count() as cnt by tda.src.geo.city"}
{"input": "tda协议占比。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda | stats count() by tda.proto"}
{"input": "tda事件处理结果分布。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda tag:yaxin | stats count() as cnt by tda.act"}
{"input": "h3c负载均衡_目的地址TOP10。", "instruction": "h3c_负载均衡数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:h3c | stats count() as cnt by loadbalancing.dst_ip"}
{"input": "h3c负载均衡_用户TOP10。", "instruction": "h3c_负载均衡数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:h3c | stats count() as cnt by loadbalancing.user"}
{"input": "h3c负载均衡_事件等级分布。", "instruction": "h3c_负载均衡数据，编写查询语句实现如下分析场景", "output": "appname:loadbalancing tag:h3c | stats count() as cnt by loadbalancing.level"}
{"input": "USG6650_允许访问事件数。", "instruction": "firewall_huawei_USG6650_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 firewall.brief:/.*PERMIT.*/| stats count() as cnt  "}
{"input": "USG6650_协议类型占比。", "instruction": "firewall_huawei_USG6650_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 |stats count() as cnt  by firewall.proto"}
{"input": "USG6650_禁止访问事件数。", "instruction": "firewall_huawei_USG6650_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 firewall.brief:/.*DENY.*/| stats count() as cnt  "}
{"input": "USG6650_访问地址热力图。", "instruction": "firewall_huawei_USG6650_数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:huawei_USG6650 |stats count() as cnt by firewall.src.geo.city"}
{"input": "飞塔VPN访问连接事件数。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count()"}
{"input": "飞塔VPN访问关系。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.remip,firewall.locip"}
{"input": "飞塔VPN访问源地理位置分布_可钻取。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.rem_ip.geo.country,firewall.rem_ip.geo.province,firewall.rem_ip.geo.city"}
{"input": "飞塔VPN登录结果分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.status"}
{"input": "飞塔VPN登录用户分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.user"}
{"input": "飞塔VPN事件等级分布。", "instruction": "防火墙_飞塔数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.level"}
{"input": "登录成功用户分布。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": " (appname:linux linux.event_name:登录成功事件)  |stats count(linux.user) as ct by linux.user "}
{"input": "登录失败用户分布。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": " (appname:linux linux.event_name:登录失败事件) |stats count(linux.user) as ct by linux.user "}
{"input": "事件模块分布。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "(appname:linux tag:messages) OR (appname:linux linux.log_type:messages) |stats count() as cnt by linux.type"}
{"input": "audit用户更改密码事件。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) ) AND (linux.event_detail.key:USER_CHANGED AND (linux.event_detail.comm:passwd OR linux.command:passwd)) | stats count()"}
{"input": "audit登录终端分布。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit)) AND (USER_AUTH OR USER_LOGIN)|stats count() as cnt by linux.event_msg.terminal"}
{"input": "audit登录失败次数。", "instruction": "linux日志数据，编写查询语句实现如下分析场景", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) )AND (USER_AUTH OR USER_LOGIN) AND linux.result:failed | stats count()"}
{"input": "esxi用户登录。", "instruction": "VMware_Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:esxi  tag:syslog_app2 login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "esxi用户登录。", "instruction": "主中心Esxi监控数据，编写查询语句实现如下分析场景", "output": "appname:esxi tag:app1 login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "h3c_switch_登录失败事件数。", "instruction": "h3c_switch_S10508数据，编写查询语句实现如下分析场景", "output": "appname:switch  tag:h3c \"failed\"|stats count()"}
{"input": "h3c_switch_用户分布。", "instruction": "h3c_switch_S10508数据，编写查询语句实现如下分析场景", "output": "appname:switch  tag:h3c |stats count() as cnt by switch.user"}
{"input": "h3c_switch_登录类型分布占比。", "instruction": "h3c_switch_S10508数据，编写查询语句实现如下分析场景", "output": "appname:switch  tag:h3c |stats count() as cnt by switch.login_method"}
{"input": "vpn_leadsec_日志类型分布。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec |stats count() as cnt  by 'vpn.日志类型'"}
{"input": "vpn_leadsec_日志详情。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec |stats count() as cnt  by 'vpn.日志类型','vpn.设备名','vpn.用户','vpn.日志消息' "}
{"input": "vpn_leadsec_各个服务被访问次数。", "instruction": "vpn_leadsec_数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:leadsec_service | stats count() as cnt by  'vpn.服务名','vpn.访问次数'"}
{"input": "ddos_fortinet_区域分布占比。", "instruction": "ddos_fortinet_数据，编写查询语句实现如下分析场景", "output": "appname:ddos | stats count() as cnt by ddos.direction"}
{"input": "ddos_fortinet_威胁类型分布。", "instruction": "ddos_fortinet_数据，编写查询语句实现如下分析场景", "output": "appname:ddos | stats count() as cnt by ddos.category"}
{"input": "ddos_fortinet_各类事件数量分布。", "instruction": "ddos_fortinet_数据，编写查询语句实现如下分析场景", "output": "appname:ddos | stats count() as cnt by ddos.event_type"}
{"input": "打印次数。", "instruction": "websense dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Printing\") | stats count()"}
{"input": "web访问敏感信息次数。", "instruction": "websense dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint HTTPS\" OR dlp.service:\"Endpoint Web\") | stats count()"}
{"input": "邮件外发次数。", "instruction": "websense dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Email\") | stats count()"}
{"input": "移动设备访问次数。", "instruction": "websense dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Removable Media\") | stats count()"}
{"input": "web访问次数。", "instruction": "websense dlp数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Web\") | stats count()"}
{"input": "交易量。", "instruction": "网关系统数据，编写查询语句实现如下分析场景", "output": "* AND  'appname':connector connector.info1.seqNo:*|stats count()"}
{"input": "请求协议占比分布。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count()  as a by ips.proto"}
{"input": "各类事件等级分布。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() as a by ips.severity"}
{"input": "攻击源地理分布。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech | stats count() by ips.src.geo.country,ips.src.geo.province,ips.src.geo.city"}
{"input": "攻击类型分布。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech| stats count() as cnt by ips.attack_type"}
{"input": "ips攻击处理动作分布。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech ips.dst_ip:*| stats count() as cnt by ips.action"}
{"input": "协议占比。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.proto"}
{"input": "事件量总数。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall|stats count() "}
{"input": "防火墙事件数占比。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall |stats count() by firewall.fw_ip\t"}
{"input": "丢弃事件数。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"dropped\" | stats count()"}
{"input": "端口扫描事件数。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"scan detected\" |stats count()"}
{"input": "拒绝事件数。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall \"denied\" |stats count()"}
{"input": "命中规则占比。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.rule\t"}
{"input": "防火墙事件等级占比。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.pri_cn,firewall.pri"}
{"input": "世界攻击轨迹_all。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "国内攻击轨迹_all。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "世界攻击轨迹图_deny。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall  \"dropped\"| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "国内攻击轨迹图_deny。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:sonicwall  \"dropped\"| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "ALERT数量。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba access_point.severity:ALERT | stats count()"}
{"input": "CRIT数量。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba access_point.severity:CRIT | stats count()"}
{"input": "ERRS数量。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba access_point.severity:ERRS | stats count()"}
{"input": "EMERG数量。", "instruction": "Aruba数据，编写查询语句实现如下分析场景", "output": "appname:access_point AND tag:aruba access_point.severity:EMERG | stats count()"}
{"input": "卡顿次数。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_"}
{"input": "各地区卡顿次数占比。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_ by stb.kvmsg.UserId.area_code_dec"}
{"input": "接入方式卡顿次数。", "instruction": "中数通STB数据，编写查询语句实现如下分析场景", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_ by stb.kvmsg.networktype_dec"}
{"input": "安全等级分布。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec | stats count() as cnt by ips.msg.seclevel"}
{"input": "攻击事件名称占比。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec | stats count() as cnt by ips.event_name"}
{"input": "请求协议占比分析。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec| stats count()  as a by ips.proto"}
{"input": "安全等级分布占比。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec | stats count() as cnt by ips.msg.seclevel"}
{"input": "攻击访问地理分布。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec|  stats count() by ips.src.geo.city"}
{"input": "攻击事件分布。", "instruction": "ips_legendsec数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:legendsec | stats count() as cnt by ips.event_name"}
{"input": "用户TOP10。", "instruction": "信安世纪ssl数据，编写查询语句实现如下分析场景", "output": "appname:ssl tag:infosec | stats count() as cnt by ssl.user"}
{"input": "事件等级分布。", "instruction": "信安世纪ssl数据，编写查询语句实现如下分析场景", "output": "appname:ssl tag:infosec | stats count() as cnt by ssl.level"}
{"input": "低风险事件数。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity apt.level:\"低\" | stats count()"}
{"input": "中风险事件数。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity apt.level:\"中\" | stats count()"}
{"input": "高风险事件数。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity apt.level:\"高\" | stats count()"}
{"input": "攻击源地理分布_可下钻。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.src.geo.country,apt.src.geo.province,apt.src.geo.city"}
{"input": "攻击类型占比。", "instruction": "安恒APT数据，编写查询语句实现如下分析场景", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.attack_type"}
{"input": "事件类型分布。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone | stats count() as cnt by bds.event_type"}
{"input": "中风险事件的日志量。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.severity:Medium| stats count()"}
{"input": "低风险事件的日志量。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.severity:Low| stats count()"}
{"input": "各事件协议占比。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone | stats count() as cnt by bds.proto"}
{"input": "遭受的攻击类型分布。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone | stats count() as cnt by bds.threat_type"}
{"input": "高风险事件总数。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.severity:High| stats count()"}
{"input": "低风险事件数量。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.severity:Low| stats count()"}
{"input": "中风险事件次数。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.severity:Medium| stats count()"}
{"input": "操作占比分布。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone | stats count() as cnt by bds.action"}
{"input": "攻击源地理分布_可下钻。", "instruction": "hillstone_内网感知数据，编写查询语句实现如下分析场景", "output": "appname:bds tag:hillstone bds.event_type:Threat | stats count() as cnt by bds.src.geo.country,bds.src.geo.province,bds.src.geo.city"}
{"input": "事件类型分布。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng | stats count() as cnt by hp.msg.datatype"}
{"input": "主机类型分布。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng | stats count() as cnt by hp.msg.os"}
{"input": "攻击事件数。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng hp.msg.event_content:*| stats count()"}
{"input": "收到攻击端口占比分布。", "instruction": "青藤云主机防护数据，编写查询语句实现如下分析场景", "output": "appname:host_protect tag:qingteng hp.msg.event_content:*| stats count() as cnt by hp.msg.detail_port"}
{"input": "请求方法分布。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.http.method"}
{"input": "tdp攻击事件数。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count()"}
{"input": "攻击协议分布。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.proto"}
{"input": "威胁等级分布。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.threat.severity"}
{"input": "收到攻击端口分布。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.net.dest_port"}
{"input": "攻击类型分布。", "instruction": "微步在线tdp数据，编写查询语句实现如下分析场景", "output": "appname:tdp tag:threatbook | stats count() as cnt by tdp.threat.name"}
{"input": "Xenserver_不同日志级别对比。", "instruction": "CitrixXenserver日志数据，编写查询语句实现如下分析场景", "output": "((* AND tag:xenserver) AND appname:citrix) |stats count() by xenserver.severity\t\n"}
{"input": "Xenserver_日志来源模块。", "instruction": "CitrixXenserver日志数据，编写查询语句实现如下分析场景", "output": "((* AND tag:xenserver) AND appname:citrix) |stats count() by xenserver.facility\t"}
{"input": "用户认证事件数。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft uninxg.log_type:userAuthInfo|stats count()"}
{"input": "用户认证事件结果占比。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft uninxg.log_type:userAuthInfo|stats count() as cnt by uninxg.iresulttype"}
{"input": "认证失败次数。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:userAuthInfo AND uninxg.iresulttype:\"失败\") | stats count()"}
{"input": "各类事件占比。", "instruction": "uniNXG数据，编写查询语句实现如下分析场景", "output": "appname:uninxg tag:leagsoft|stats count() by uninxg.log_type"}
{"input": "执行操作用户占比。", "instruction": "symantec_mail_gateway数据，编写查询语句实现如下分析场景", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:sudo* |stats count() as cnt by mg.msg.USER"}
{"input": "威胁类型占比分布。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.virus_type"}
{"input": "处理动作or结果占比。", "instruction": "antivirus_ruixing数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:ruixing | stats count() as cnt by antivirus.action"}
{"input": "事件等级分布。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro|stats count() as cnt by dsm.level"}
{"input": "执行操作占比。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro \n  |stats count() as cnt by dsm.action"}
{"input": "各类事件分布占比。", "instruction": "TrendMicro_antivirus数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:trendmicro  | stats count() as cnt by dsm.event_name"}
{"input": "中风险事件数。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"中\" |stats count()"}
{"input": "高风险事件数。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"高\" |stats count()"}
{"input": "低风险事件数。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"低\" |stats count()"}
{"input": "发生告警的数据库名分布。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.dataSubType:alarm | stats count() as cnt by dbaudit.databaseName"}
{"input": "触发告警类型分布。", "instruction": "安恒数据库审计数据，编写查询语句实现如下分析场景", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.alert_type"}
{"input": "事件类型分布。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin |stats count() as cnt by skyeye.event_type"}
{"input": "攻击类型分布。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin |stats count() as cnt by skyeye.attack_name"}
{"input": "攻击URL。", "instruction": "奇安信天眼数据，编写查询语句实现如下分析场景", "output": "appname:skyeye tag:qianxin  |stats count() as cnt by skyeye.url"}
{"input": "邮件事件数。", "instruction": "bb_server数据，编写查询语句实现如下分析场景", "output": "appname:bb tag:mail bb.sender:* | stats count()"}
{"input": "ORA错误码事件分布。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:alert oracle.ORACODE:ORA* | stats count() as cn by oracle.ORACODE"}
{"input": "max_session。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:max_session | stats count() as cnt by oracle.VALUE | stats first(oracle.VALUE) as max_session"}
{"input": "系统用户使用CPU情况分布。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:session_max_session | stats count() as ct by oracle.OSUSER"}
{"input": "SQL执行类型分布。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit|stats count() by audit.command"}
{"input": "数据库访问host分布。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.host"}
{"input": "监听状态。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.status"}
{"input": "访问数据库用户情况。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.user"}
{"input": "数据库_oracle_ORA错误码事件分布。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:alert oracle.ORACODE:ORA* | stats count() as cn by oracle.ORACODE"}
{"input": "操作类型。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit|stats count() by audit.command"}
{"input": "系统用户。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit|stats count() by audit.OSUSER"}
{"input": "计算机名。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit|stats count() by audit.MACHINE"}
{"input": "数据库用户。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit|stats count() by audit.USERNAME"}
{"input": "PROGRAM。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:audit |stats count() by audit.PROGRAM"}
{"input": "USER。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:job|stats count() by  oracle.LOG_USER"}
{"input": "job执行趋势。", "instruction": "Database_Oracle数据，编写查询语句实现如下分析场景", "output": "appname:oracle tag:job|stats count() by  oracle.LOG_USER,timestamp"}
{"input": "当前用户活跃地理位置概况。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": " (appname:ths)  AND (THS.geo.country:\"中国\") |stats count(THS.geo.province) as count_ by THS.geo.province"}
{"input": "股东量。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "appname:ths_all tag:ths_all | stats count() by ths_all.GDZH|stats count() as count_1"}
{"input": "受威胁目的端口分布。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.dst_port"}
{"input": "威胁使用的协议分布。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.proto"}
{"input": "威胁源地址热力图。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.src.geo.city"}
{"input": "各类事件类型分布。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter|stats count() as cnt by ac.event_type"}
{"input": "流媒体应用使用。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:*流媒体 | stats count() as cnt by ac.app_name"}
{"input": "网络游戏使用。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:网络游戏 | stats count() as cnt by ac.app_name"}
{"input": "购物应用使用。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:电子商务 | stats count() as cnt by ac.app_name"}
{"input": "手机应用使用TOP20。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:im | stats count() as cnt by ac.app_name"}
{"input": "文件操作分布占比。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() as cnt by ac.action"}
{"input": "文件操作事件分布。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() as cnt by ac.app_name"}
{"input": "收发邮件占比。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter  ac.event_type:mail | stats count() as cnt by ac.action"}
{"input": "邮件协议使用分布。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:surfilter  ac.event_type:mail | stats count() as cnt by ac.app_name"}
{"input": "查看求职信息用户TOP10。", "instruction": "surfilter_ac数据，编写查询语句实现如下分析场景", "output": "appname:ac (ac.event_type:app_filter OR ac.event_type:other_app) AND ac.kv.app_cat_name:招聘资讯\n | stats count() as cnt by ac.user"}
{"input": "总功能请求量。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "(appname:tdx  NOT 连接信息) \"功能请求\" | stats count()"}
{"input": "调用失败请求量。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "(appname:tdx  NOT 连接信息) \"调用失败\" | stats count()"}
{"input": "客户请求实时地理位置分布。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "((appname:tdx  NOT \"连接信息\"))  AND (TDX.geo.country:\"中国\") |stats count(TDX.geo.province) as count_ by TDX.geo.province"}
{"input": "用户来源地市排名。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx NOT 连接信息 | stats count() as cnt by TDX.geo.city"}
{"input": "arista交换机事件数。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista switch.severity:*| stats count()"}
{"input": "日志级别统计。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista switch.severity:*| stats count() as cnt by switch.severity"}
{"input": "各个模块事件占比。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista switch.severity:* | stats count() as cnt by switch.module"}
{"input": "系统事件数。", "instruction": "arista交换机日志数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:arista (NOT switch.severity:*)  | stats count()"}
{"input": "down次数最多的服务组。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.status:down\n|stats count() as ct by a10.group"}
{"input": "源IP地理分布。", "instruction": "负载均衡_A10数据，编写查询语句实现如下分析场景", "output": "appname:a10 tag:a10 a10.event_type:session\n| stats count() as cnt by a10.src.geo.country,a10.src.geo.province,a10.src.geo.city"}
{"input": "访问源IP地理位置。", "instruction": "sangfor_vpn_new数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:sangfor vpn.actype:login|stats count()  by vpn.src.geo.country"}
{"input": "登录事件数。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows windows.event_type:\"登录审计\"   windows.IpAddress:*  NOT windows.IpAddress:\"-\"| stats count() by  windows.event_type"}
{"input": "特权使用。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows windows.event_type:\"特权使用\" | stats count() by  windows.event_type"}
{"input": "访问对象审计。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows windows.event_type:\"访问对象\" | stats count() by  windows.event_type"}
{"input": "系统策略变更。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows windows.event_type:\"系统策略\" | stats count() by  windows.event_type"}
{"input": "异常事件。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows AND windows.level:\"Error\" | stats count()"}
{"input": "账户变更事件分布统计。", "instruction": "Windows系统日志数据，编写查询语句实现如下分析场景", "output": "appname:windows windows.event_type:\"账户管理\" | stats count() by  windows.event_type"}
{"input": "esxi用户登录次数统计，分组包括用户名、主机名和时间。", "instruction": "Esxi性能监控数据，编写查询语句实现如下分析场景", "output": "appname:vsphere tag:dmz_backup login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "访问分类分布。", "instruction": "nas_forescout数据，编写查询语句实现如下分析场景", "output": "appname:nas tag:forescout | stats count() as cnt by nas.kv.Category\t"}
{"input": "主机所在域分布。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats count() as cnt by antivirus.domain"}
{"input": "与主机连接状态占比。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats count() as cnt by antivirus.result"}
{"input": "主机平台占比。", "instruction": "officescan防毒墙数据，编写查询语句实现如下分析场景", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats count() as cnt by antivirus.os"}
{"input": "求职使用终端类型占比。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:访问网站 ac.msg.app:*招聘*   |stats count() as cnt by ac.msg.tm_type"}
{"input": "招聘网站访问排名。", "instruction": "深信服行为感知数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:sangfor ac.msg.serv:访问网站 ac.msg.app:*招聘* NOT ac.dst_ip:\"::\"  |stats count() as cnt by ac.dst_ip"}
{"input": "BI登录权限及用户统计。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:bi AND 'tag':login | stats count() by csv.username,csv.userrole"}
{"input": "BI登录次数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:bi AND 'tag':login | stats count()"}
{"input": "BI执行次数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:bi AND 'tag':execute | stats count()"}
{"input": "证投融资操作的用户次数分布统计。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:zqtz  | stats count() by csv.username"}
{"input": "证投融资操作统计。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:zqtz AND NOT 'csv.remark':\"\" | stats count() by csv.remark"}
{"input": "OA异常用户登录统计。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:oa AND 'tag':login | stats count() by csv.FD_IP,csv.FD_OPERATOR"}
{"input": "OA系统修改密码用户。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:oa AND 'tag':change_pwd | stats count() by csv.FD_OPERATOR"}
{"input": "OA用户修改密码次数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:oa AND 'tag':change_pwd | stats count()"}
{"input": "登录认证结果分布。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie *AUTH* | stats count() as cnt by router.auth_result"}
{"input": "登录认证源IP。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie *AUTH* | stats count() as cnt by router.src_ip"}
{"input": "系统配置变更操作用户。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie router.action:CONFIG*|stats count() as cnt by router.user"}
{"input": "系统配置变更源IP。", "instruction": "锐捷-路由器数据，编写查询语句实现如下分析场景", "output": "appname:router tag:ruijie router.action:CONFIG*|stats count() as cnt by router.src_ip"}
{"input": "各数据库事件数。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:* | stats count() as cnt by db.db_name"}
{"input": "阻断事件数。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": "appname:dbaudit db.Logtype:*  NOT db.msg.block:no | stats count()"}
{"input": "访问数据库主机。", "instruction": "启明天玥数据库审计数据，编写查询语句实现如下分析场景", "output": " appname:dbaudit db.Logtype:*  | stats count() as cnt by db.msg.client_host"}
{"input": "info 级别以上的威胁事件数，按优先级分组。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon  NOT firewall.pri:information NOT firewall.pri:debug | stats count() as cnt by firewall.pri"}
{"input": "ac被拒绝访问的端口与协议。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:ac firewall.status:deny|stats count() by firewall.dst_port,firewall.proto"}
{"input": "被拒绝访问的端口与协议。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:pf firewall.msg:Reject | stats count() by firewall.dst_port,firewall.proto"}
{"input": "攻击来源地图。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall tag:newdon firewall.type:secure)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "攻击事件目标与来源。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:newdon firewall.type:secure|stats count() by firewall.src_ip,firewall.dst_ip"}
{"input": "攻击目标地图。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall tag:newdon firewall.type:secure)  |stats count('firewall.dst.geo.country') as count_ by firewall.dst.geo.country"}
{"input": "各类病毒木马漏洞分布占比。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus  | stats count() as cnt by anti.type"}
{"input": "未处理事件数。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus   anti.action:未处理\n| stats count()"}
{"input": "发帖审计应用分布占比。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:post  | stats count() as cnt by ac.app"}
{"input": "发帖审计源地址_操作TOP10。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:post | stats count() as cnt by   ac.client,ac.app,ac.operation"}
{"input": "搜索引擎拒绝事件数。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:search_engine ac.action:阻塞| stats count()"}
{"input": "应用控制阻塞事件数。", "instruction": "奇安信AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:qianxin ac.log_type:trc ac.action:阻塞| stats count()"}
{"input": "异常登出用户及原因。", "instruction": "vpn_softether数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:softether vpn.action:logout NOT vpn.reason:认证模块发起 | stats count() as cnt by vpn.user,vpn.reason"}
{"input": "登录失败次数。", "instruction": "vpn_softether数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:softether vpn.action:* vpn.result:Fail |stats count()"}
{"input": "登录AC次数。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:h3c *LOGIN* |stats count()"}
{"input": "ap掉线次数。", "instruction": "h3c无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:h3c ac.mnemonic:*_AP_DOWN* |stats count() as cnt by ac.mnemonic"}
{"input": "用户登录客户端分布。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.user_agent"}
{"input": "主机代理日志等级分布。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd |stats count() as cnt by esxi.log_level"}
{"input": "登录源地址。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.src_ip"}
{"input": "登录用户分布。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.user"}
{"input": "主机代理错误日志数。", "instruction": "esxi宿主机审计数据，编写查询语句实现如下分析场景", "output": "appname:esxi AND 'tag':hostd esxi.log_level:error |stats count()"}
{"input": "文件访问动作分布。", "instruction": "天空卫士DLP数据，编写查询语句实现如下分析场景", "output": "appname:dlp tag:skyguard dlp.channelType:\"应用(文件访问)\"| stats count() as cnt by dlp.actionType"}
{"input": "非威胁事件分布。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton NOT atv.cat:\"ESET Threat Event\"| stats count() as cnt by atv.event_name"}
{"input": "网络拦截触发规则。", "instruction": "诺顿防病毒数据，编写查询语句实现如下分析场景", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" | stats count() as cnt by atv.ruleID"}
{"input": "info事件数。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee ips.level:Informational | stats count()"}
{"input": "低风险事件数。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee ips.level:Low | stats count()"}
{"input": "高风险事件数。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee ips.level:High | stats count()"}
{"input": "中风险事件数。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee ips.level:Medium | stats count()"}
{"input": "攻击源地理分布。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() as cnt by ips.src.geo.country,ips.src.geo.province,ips.src.geo.city"}
{"input": "攻击地图。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational\n| stats count() as cnt by ips.src.geo.city,ips.dst.geo.city,ips.src.geo.latitude,ips.src.geo.longitude,ips.dst.geo.latitude,ips.dst.geo.longitude"}
{"input": "攻击源地图。", "instruction": "ips_mcafee数据，编写查询语句实现如下分析场景", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() as cnt by ips.src.geo.country,ips.src.geo.province,ips.src.geo.city"}
{"input": "各类攻击阶段占比分布。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin|stats count() as cnt by nta.kill_chain"}
{"input": "威胁事件源地理分布。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin| stats count() as cnt by nta.src.geo.country,nta.src.geo.province,nta.src.geo.city"}
{"input": "境外威胁事件数。", "instruction": "长亭NTA数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:chaitin  NOT nta.src.geo.city:private NOT nta.src.geo.country:中国\n| stats count()"}
{"input": "境外威胁事件数。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:nx  NOT nx.src.geo.city:private NOT nx.src.geo.country:中国\n| stats count()"}
{"input": "威胁事件源地理分布。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.src.geo.country,nx.src.geo.province,nx.src.geo.city"}
{"input": "ex_邮件网关__威胁邮件处理类型分布。", "instruction": "fireeye数据，编写查询语句实现如下分析场景", "output": "appname:fireeye tag:ex | stats count() as cnt by ex.action"}
{"input": "访问源IP地理位置。", "instruction": "Cisco_VPN日志数据，编写查询语句实现如下分析场景", "output": "appname:vpn tag:cisco vpn.actype:login|stats count()  by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "扫描类型分布。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin  hp.source:scanner|stats count() as cnt by hp.scan_type"}
{"input": "高危蜜罐入侵事件数。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:高危|stats count()"}
{"input": "低危蜜罐入侵事件数。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:低危|stats count()"}
{"input": "中危蜜罐入侵事件数。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:中危|stats count()"}
{"input": "无威胁蜜罐入侵事件数。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:无威胁*|stats count()"}
{"input": "无威胁蜜罐入侵事件数。", "instruction": "长亭蜜罐数据查询实现如下场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:无威胁* | stats count()"}
{"input": "蜜罐入侵受威胁事件类型。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot NOT hp.event_level:无* |stats count() as cnt by hp.event_name"}
{"input": "蜜罐入侵受威胁系统。", "instruction": "长亭蜜罐数据，编写查询语句实现如下分析场景", "output": "appname:honeypot tag:chaitin   hp.source:honeypot NOT hp.event_level:无* |stats count() as cnt by hp.honeypot_name"}
{"input": "不同来源模块占比。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | stats count() as total by firewall.facility"}
{"input": "不同日志级别占比。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | stats count() as total by firewall.severity"}
{"input": "不同访问协议占比。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei | stats count() as total by firewall.proto"}
{"input": "低风险攻击事件数。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  firewall.level:low| stats count()"}
{"input": "中风险攻击事件数。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  firewall.level:medium| stats count()"}
{"input": "高风险攻击事件数。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  firewall.level:high| stats count()"}
{"input": "攻击事件协议分布。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   | stats count() as cnt by firewall.proto"}
{"input": "攻击事件分布。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   |stats count() as cnt by firewall.attack_name"}
{"input": "攻击事件目的端口分布。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei)(firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)   |stats count() as cnt by firewall.dst_port"}
{"input": "攻击事件操作分布。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(appname:firewall AND tag:huawei)(firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  |stats count() as cnt by firewall.action"}
{"input": "威胁事件等级分布。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析场景", "output": "appname:leon tag:tjym | stats count() as cnt by iocs.e_lev"}
{"input": "威胁事件攻击源地理分布。", "instruction": "天际友盟威胁网关数据，编写查询语句实现如下分析场景", "output": "appname:leon tag:tjym | stats count() as cnt by iocs.src.geo.country,iocs.src.geo.province,iocs.src.geo.city"}
{"input": "触发审计事件源IP。", "instruction": "NetApp数据，编写查询语句实现如下分析场景", "output": "appname:netapp NOT na.src_ip:\"\"| stats count() as cnt by na.src_ip"}
{"input": "审计事件来源。", "instruction": "NetApp数据，编写查询语句实现如下分析场景", "output": "appname:netapp | stats count() as cnt by na.proto"}
{"input": "各等级事件分布。", "instruction": "DellEMC数据，编写查询语句实现如下分析场景", "output": "appname:emc tag:dell|stats count() as cnt by emc.severity"}
{"input": "错误告警主机。", "instruction": "Switch_Brocade数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:brocade NOT switch.severity:INFO|stats count() as cnt by switch.host"}
{"input": "事件等级分布。", "instruction": "Switch_Brocade数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:brocade|stats count() as cnt by switch.severity"}
{"input": "非普通事件数。", "instruction": "Switch_Brocade数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:brocade NOT switch.severity:INFO|stats count()"}
{"input": "DHCP_discover报文数量。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPDISCOVER|stats count()"}
{"input": "DHCP_offer报文数量。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPOFFER|stats count()"}
{"input": "DHCP_ack报文数量。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPACK|stats count()"}
{"input": "DHCP_request报文数量。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPREQUEST|stats count()"}
{"input": "DHCP_release报文数量。", "instruction": "迪讯CNS数据，编写查询语句实现如下分析场景", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPRELEASE|stats count()"}
{"input": "coremail_被退件邮件标题。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent mail.msg.message.subject:* AND mail.msg.message.state:sent| stats count() as cnt by mail.msg.message.subject"}
{"input": "coremail_邮件病毒扫描次数。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent mail.scan_result:* | stats count()"}
{"input": "中间件_kingdee_请求操作系统分布。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access|stats count() by middleware.http_user_agent.os"}
{"input": "中间件_kingdee_请求浏览器分布。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access |stats count() by middleware.http_user_agent.browser"}
{"input": "kingdee源地址城市统计TOP10。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access |  stats count() as cnt by middleware.src.geo.isp"}
{"input": "kingdee源地址国家占比。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access | stats count() by middleware.src.geo.country"}
{"input": "kingdee_request分布占比。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.request"}
{"input": "kingdee错误等级分布。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.error_level"}
{"input": "kingdee错误日志referrer_Top10。", "instruction": "金蝶kingdee数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.referrer"}
{"input": "执行SQL类型分布。", "instruction": "数据库_达梦数据，编写查询语句实现如下分析场景", "output": "appname:dm tag:sql | stats count() as cnt by database.sql_type"}
{"input": "境外登录IP。", "instruction": "HIDS_安全狗数据，编写查询语句实现如下分析场景", "output": "appname:hids tag:safedog  hids.event_type:remoteLogin NOT hids.country:中国| stats count() as cnt by hids.loginIp"}
{"input": "交易总数。", "instruction": "zsns 应用的tomcat业务数据，编写查询语句实现如下分析场景", "output": "appname:zsns tomcat.event_type:*响应报文\ntomcat.event_type:*${type}*\n |stats count()"}
{"input": "异常事件数。", "instruction": "zsns 应用的tomcat业务数据，编写查询语句实现如下分析场景", "output": "appname:zsns tomcat.level:ERROR|stats count()"}
{"input": "", "instruction": "aix各主机操作类型比例", "output": "appname:aix   NOT (\"syslog\\:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host "}
{"input": "", "instruction": "aix各类型事件分布", "output": " appname:aix  |stats count(aix.facility) as ct by aix.facility"}
{"input": "mysql错误日志等级分布。", "instruction": "mysql日志数据，编写查询语句实现如下分析场景", "output": " (appname:mysql tag:mysql_error)  |stats count(mysql.level) as ct by mysql.level "}
{"input": "aix登录方式比例。", "instruction": "aix日志数据，编写查询语句实现如下分析场景", "output": "appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count(aix.type) as ct by aix.type "}
{"input": "直播业务各节点 3 秒超时占比分析。", "instruction": "华为CDN数据数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei cdn.finished_body_response:>3 | stats count() by tag"}
{"input": "源-目的地址关系。", "instruction": "ids_huawei数据，编写查询语句实现如下分析场景", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.src_ip,ids.dst_ip"}
{"input": "收件人统计。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent | stats count() as cnt by mail.to"}
{"input": "", "instruction": "查询来自 172.16.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属城市", "output": "appname:nginx_log AND ip:\"172.16.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "查询来自 172.16.42.6 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属运营商", "output": "appname:nginx_log AND ip:\"172.16.42.6\"| stats count() as ct by nginx.real_ip.last,nginx.geo.isp "}
{"input": "", "instruction": "查询来自 172.16.43.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属城市", "output": "appname:nginx_log AND ip:\"172.16.43.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "查询来自 172.17.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属运营商", "output": "appname:nginx_log AND ip:\"172.17.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.isp "}
{"input": "", "instruction": "查询来自 173.16.42.5 设备的 nginx 日志，统计真实用户 IP 地址访问量及其所属城市", "output": "appname:nginx_log AND ip:\"173.16.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "IIS 服务器的访问失败次数", "output": "appname: middleware tag:iis  middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "用户登陆失败详情", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other  | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city "}
{"input": "", "instruction": "Linux操作系统审计_定时任务事件数", "output": "appname:linux tag:cron AND (type:CROND OR type:crond) NOT (command:run\\-parts\\ \\/etc\\/cron.hourly OR command:\\/usr\\/lib64\\/sa\\/sa1\\ 1\\ 1  OR command:\\/usr\\/sbin\\/raid-check )  |stats count()"}
{"input": "", "instruction": "Linux主机堡垒机绕行登录事件数统计，堡垒机地址为 10.200.0.79 和 10.200.0.80", "output": "appname:linux tag:secure event_name:登录成功事件 AND NOT (src_ip:\"10.200.0.79\" OR src_ip:\"10.200.0.80\") |stats count()"}
{"input": "点播业务各节点超时占比分析。点播域名包括：vod1.video.com,vod2.video.com,vod3.video.com,vod4.video.com。", "instruction": "华为CDN数据数据，编写查询语句实现如下分析场景", "output": "appname:cdn tag:huawei cdn.finished_body_response:>3 (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() by tag"}
{"input": "高级事件总数。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND switch.level:<3 |stats count() as count_"}
{"input": "带宽发生改变。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND ETHPORT-5-IF_BANDWIDTH_CHANGE |stats count() by switch.port_channel,switch.bandwidth"}
{"input": "交换机Link_failure端口统计。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-5-IF_DOWN_LINK_FAILURE |stats count() by switch.ethernet"}
{"input": "调整为全双工模式端口统计。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-5-IF_DUPLEX  |stats count() by switch.port_channel "}
{"input": "中某些端口上被暂停的vlan号。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-3-IF_ERROR_VLANS_SUSPENDED |stats count() by switch.vlan,switch.port_channel"}
{"input": "中某些端口上被恢复的vlan号。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-3-IF_ERROR_VLANS_REMOVED |stats count() by switch.vlan,switch.port_channel"}
{"input": "设备配置人员IP统计。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  VSHD-5-VSHD_SYSLOG_CONFIG_I |stats count() by switch.IP"}
{"input": "设备配置人员统计。", "instruction": "交换机_cisco_nexus数据，编写查询语句实现如下分析场景", "output": "appname:switch AND tag:cisco_nexus AND  VSHD-5-VSHD_SYSLOG_CONFIG_I |stats count() by switch.user"}
{"input": "高级事件总数。", "instruction": "交换机_cisco_ios数据，编写查询语句实现如下分析场景", "output": "appname:switch tag:cisco_ios   AND switch.level:<4 |stats count() as count_"}
{"input": "IPS高危事件监控。", "instruction": "ips_nsfocus数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:nsfocus ips.level:>2   | stats count() as count_ by appname"}
{"input": "中间件_nginx_请求失败状态码分布。", "instruction": "中间件_nginx数据，编写查询语句实现如下分析场景", "output": "appname:nginx tag:access middleware.response_code:>399|stats count() by middleware.response_code"}
{"input": "middleware_tomcat_访问失败次数。", "instruction": "middleware_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:middleware tag:tomcat middleware.status:>399|stats count() as count_"}
{"input": "登录成功事件数量。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen 登录成功| stats count()"}
{"input": "登录失败事件数量。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen 登录失败| stats count()"}
{"input": "威胁分布。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.threat_name"}
{"input": "各类事件分布。", "instruction": "firewall_360wangshen数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.event_name"}
{"input": "访问失败次数。", "instruction": "middleware_microsoft_iis数据，编写查询语句实现如下分析场景", "output": "appname: middleware tag:iis  middleware.status:>399|stats count() as count_"}
{"input": "48小时攻击地理位置图。", "instruction": "天融信防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall tag:tos firewall.type:secure|stats count() by firewall.src.geo.city,firewall.src.geo.latitude,firewall.src.geo.longitude,firewall.dst.geo.city,firewall.dst.geo.latitude,firewall.dst.geo.longitude"}
{"input": "访问失败次数。", "instruction": "pf_tomcat数据，编写查询语句实现如下分析场景", "output": "appname:pf_tomcat tomcat.status:>399|stats count()"}
{"input": "访问失败次数。", "instruction": "pf_nginx数据，编写查询语句实现如下分析场景", "output": "appname:pf_nginx nginx.status:>399|stats count()"}
{"input": "中危告警等级事件数。", "instruction": "流量数据数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.severity:2 nta.src_ip:${alert_src} nta.dst_ip:${alert_dst}|stats count()"}
{"input": "高危告警等级事件数。", "instruction": "流量数据数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.severity:1 nta.src_ip:${alert_src} nta.dst_ip:${alert_dst}|stats count()"}
{"input": "低危告警等级事件数。", "instruction": "流量数据数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.severity:3 nta.src_ip:${alert_src} nta.dst_ip:${alert_dst}|stats count()"}
{"input": "高危告警类型分布。", "instruction": "流量数据数据，编写查询语句实现如下分析场景", "output": "appname:nta tag:eve nta.alert.severity:1 nta.src_ip:${alert_src} nta.dst_ip:${alert_dst}|stats count() as cnt by nta.alert.category"}
{"input": "请求异常数量。", "instruction": "haproxy日志数据，编写查询语句实现如下分析场景", "output": "appname:haproxy (middleware.tw:<0 OR middleware.tc:<0)|stats count()"}
{"input": "访问失败次数。", "instruction": "Apache日志数据，编写查询语句实现如下分析场景", "output": "appname:apache tag:access middleware.status:>399|stats count() as count_"}
{"input": "访问失败次数。", "instruction": "webLogic日志数据，编写查询语句实现如下分析场景", "output": "appname:weblogic tag:access middleware.request_status:>399|stats count() as count_"}
{"input": "tda低级威胁事件数。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda  tda.level:<3| stats count()"}
{"input": "tda高级威胁事件数。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda  tda.level:>4| stats count()"}
{"input": "tda中级威胁事件数。", "instruction": "亚信tda趋势发现日志数据，编写查询语句实现如下分析场景", "output": "appname:tda  tda.level:>2 AND tda.level:<5| stats count()"}
{"input": "核心交易失败对应关系分布。", "instruction": "核心交易系统数据，编写查询语句实现如下分析场景", "output": "* AND  'appname':ensemble NOT ensemble.retCode:000000 |stats count() by  ensemble.retCode,ensemble.retMsg"}
{"input": "网关交易失败分布。", "instruction": "网关系统数据，编写查询语句实现如下分析场景", "output": "* AND  'appname':connector NOT connector.info2.retCode:000000  connector.info2.retCode:* |stats count() by  connector.info2.retCode,connector.info2.retMsg"}
{"input": "低风险事件数。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech ips.severity:>=6| stats count()"}
{"input": "高危事件数。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech (ips.severity:<3 AND  ips.severity:>0) | stats count() as cnt by  ips.severity"}
{"input": "错误事件数。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech (ips.severity:3) | stats count() as cnt by  ips.severity"}
{"input": "中风险事件数。", "instruction": "ips_dptech数据，编写查询语句实现如下分析场景", "output": "appname:ips  tag:dptech (ips.severity:<6 AND  ips.severity:>3) | stats count() as cnt by  ips.severity"}
{"input": "全量事件等级较高msg占比。", "instruction": "sonicwall防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall AND tag:sonicwall  (firewall.pri:1  OR firewall.pri:0 OR firewall.pri:3) |stats count() as count_1 by firewall.msg"}
{"input": "AP掉线事件数。", "instruction": "cisco无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:cisco ac.event_id:35160|stats count()"}
{"input": "客户端断线事件数。", "instruction": "cisco无线AC数据，编写查询语句实现如下分析场景", "output": "appname:ac tag:cisco ac.event_id:445|stats count()"}
{"input": "威胁等级分布。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.threat_level"}
{"input": "威胁事件数。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count()"}
{"input": "威胁类型分布。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.attack_type"}
{"input": "http状态码异常事件数。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 threat.status_code:>400| stats count()"}
{"input": "威胁来源地理分布情况。", "instruction": "奇安信_威胁感知数据，编写查询语句实现如下分析场景", "output": "appname:threat tag:360 | stats count() as cnt by threat.src.geo.country,threat.src.geo.province,threat.src.geo.city"}
{"input": "请求失败数量。", "instruction": "同花顺数据，编写查询语句实现如下分析场景", "output": "appname:ths THS.ANSTYPE:0 | stats count()"}
{"input": "功能类型请求量。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "appname:ths_all tag:ths_all  NOT (ths_all.ANSTYPE:1 OR  ths_all.ANSTYPE:0)| stats count(ths_all.funccn) as count_1"}
{"input": "请求返回失败量。", "instruction": "同花顺日志数据，编写查询语句实现如下分析场景", "output": "appname:ths_all tag:ths_all   (ths_all.ANSTYPE:0)| stats count()"}
{"input": "银证转账-证转银金额。", "instruction": "通达信数据，编写查询语句实现如下分析场景", "output": "appname:tdx TDX.TDX_ID_ZZJE:* TDX.TDX_ID_ZZFX:1 AND [[appname:tdx \"银证\" 成功  |stats count() by TDX.TRANSACTION_ID | fields TDX.TRANSACTION_ID]] | stats sum(TDX.TDX_ID_ZZJE) by TDX.TDX_ID_ZZFX  "}
{"input": "证投融资操作成功次数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:zqtz AND 'csv.flag':1 | stats count()"}
{"input": "证投融资操作执行失败数。", "instruction": "dbzq数据，编写查询语句实现如下分析场景", "output": "appname:zqtz AND NOT 'csv.flag':1 | stats count()"}
{"input": "48小时攻击地理位置图。", "instruction": "冠群防火墙日志数据，编写查询语句实现如下分析场景", "output": "appname:firewall newdon firewall.type:secure|stats count() by firewall.src.geo.city,firewall.src.geo.latitude,firewall.src.geo.longitude,firewall.dst.geo.city,firewall.dst.geo.latitude,firewall.dst.geo.longitude"}
{"input": "防病毒操执行作分布。", "instruction": "奇安信天擎数据，编写查询语句实现如下分析场景", "output": "appname:antivirus NOT anti.action:0 NOT anti.action:1  | stats count() as cnt by anti.action"}
{"input": "低风险事件数。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye)  nx.level:>2| stats count()"}
{"input": "中风险事件数。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye)  nx.level:2| stats count()"}
{"input": "高风险事件数。", "instruction": "fireeye_nx数据，编写查询语句实现如下分析场景", "output": "(appname:nx AND tag:fireeye)  nx.level:<3| stats count()"}
{"input": "最近24小时日志数。", "instruction": "华为防火墙日志数据，编写查询语句实现如下分析场景", "output": "(* AND appname:firewall) AND tag:huawei |stats count() as total "}
{"input": "coremail_扫描命中病毒次数。", "instruction": "coremail数据，编写查询语句实现如下分析场景", "output": "appname:core tag:deliveragent (NOT mail.scan_result:\"0(No Virus)\" )| stats count()"}
{"input": "中间件_kingdee_请求失败状态码分布。", "instruction": "金蝶kingdee仪表盘数据，编写查询语句实现如下分析场景", "output": "appname:kingdee tag:access middleware.rsp:>399|stats count() by middleware.rsp"}
{"input": "现代化支付系统，系统名 cnap，每笔交易记录一次 action 值为 RECEIVED，过滤 RECEIVED 日志量即为交易量。", "instruction": "查询银行某系统的交易量", "output": "appname:cnap cnap.respSysId:CNAP AND cnap.action:RECEIVED | stats count()"}
{"input": "网上跨行支付清算系统，系统名为 ibps。过滤每笔交易的 action 值 RECEIVED 并计数即可。", "instruction": "查询银行某系统的交易量", "output": "appname:ibps ibps.respSysId:IBPS AND ibps.action:RECEIVED | stats count()"}
{"input": "银联前置系统，系统名为 cupp。", "instruction": "查询银行某系统的交易量", "output": "appname:cnap cnap.respSysId:CNAP AND cnap.action:RECEIVED | stats count()"}
{"input": "时间、用户、分组、操作命令统计。", "instruction": "查询银联前置(cupp)系统数据，进行如下统计", "output": "type:UARG appname:cupp | stats count() as cnt by timestamp,ip,USER,GROUP,COMM"}
{"input": "网关交易量。", "instruction": "网关系统数据，编写查询语句实现如下分析场景", "output": "* AND  'appname':connector connector.info1.seqNo:*|stats count()"}
{"input": "", "instruction": "统计appname 为 test 的事件数", "output": "appname:test | stats count()"}
{"input": "", "instruction": "我想问的是，有多少次请求访问了华为的视频流？并且根据用户所在城市进行分组统计。", "output": "appname:cdn tag:huawei  AND (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com)  | stats count() by  cdn.clientip.geo.city"}
{"input": "", "instruction": "我想问的是，在学习编程的时候，他做了一个关于“appname:ids tag:nsfocus”的查询，结果显示有10条数据，你能帮我看一下具体的数据内容吗？", "output": "appname:ids tag:nsfocus  | stats count() by ids.event_level"}
{"input": "", "instruction": "我想问的是有没有发生过系统崩溃或者严重错误吗？如果有的话，那些主机出现的频率和数量分别是多少？", "output": "appname:syslog (error OR fail OR fatal) | stats count() by hostname"}
{"input": "", "instruction": "我想问的是，有多少人使用了Apache这个应用，并且根据他们的IP地址所在地区进行统计，并按国家分组显示结果。", "output": "appname:apache | stats count() by apache.geo.country"}
{"input": "", "instruction": "我想问的是，有多少条 audit 信息被写入到 dbaudit 这个表中？请帮我把这些信息汇总一下，并按级别统计数量。", "output": "appname:dbaudit | stats count() as cnt by dbaudit.level"}
{"input": "", "instruction": "我想问的是，有没有人在使用数据库审计功能呢？你能不能把结果打印出来吗？", "output": "appname:dbaudit dbaudit.level:*高*| stats count()"}
{"input": "", "instruction": "我想问的是，有多少个不同的域名指向到了同一个 IP 地址的服务器？并按地理位置进行分组。", "output": "* appname:DNS | stats count() as count_  by DNS.dst_ip.geo.city"}
{"input": "", "instruction": "我想要知道在哪些主机上有访问量最多的DB2数据库。", "output": "appname:db2  |stats count() as cnt by hostname"}
{"input": "", "instruction": "我想知道有多少个级别出现在应用名为 \"firewall\"、标签中包含 \"fortinet\" 和 \"firewall.subtype\" 为 \"ips\" 的记录？", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips| stats count() by firewall.severity"}
{"input": "", "instruction": "我想问的是，有多少条不同级别的 audit 信息被记录到了数据库中？", "output": "appname:dbaudit | stats count() as cnt by dbaudit.level"}
{"input": "", "instruction": "我想问的是的访问记录有几个大于等于2小于5的严重漏洞。", "output": "appname:firewall AND tag:h3c AND firewall.level:>2 AND firewall.level:<5 | stats count()"}
{"input": "", "instruction": "我想知道最近三十天中有多少次请求状态码大于等于 400 的情况。请帮忙把这个统计结果打印出来。", "output": "appname:middleware middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "我想问的是，我的云存储的流量突然暴增，而且访问地点很多都是中国大陆的省份，你能帮我分析一下吗？", "output": "appname:cdn_log AND cdn.request_url:*.mp4|stats count() by cdn.geo.province"}
{"input": "", "instruction": "我想问的是，在一段时间内（比如一天），有多少人访问过我的网站？然后按他们的 IP 和所在地区进行统计，并列出ISP数量和数量占比。", "output": "appname:nginx_log |stats count(nginx.geo.isp) as total by nginx.real_ip.last,nginx.geo.isp"}
{"input": "", "instruction": "我想问的是有没有人在使用 CNAP 来接收消息的情况吗？", "output": "appname:cnap cnap.respSysId:CNAP AND cnap.action:RECEIVED | stats count()"}
{"input": "", "instruction": "我想问的是交易量有多大？", "output": "appname:exchange tag:msgtrk |stats count()"}
{"input": "", "instruction": "我希望了解AIX在一天内发生了多少次错误报告以及这些错误报告中包含哪些资源名称（aix.resource_name）", "output": "appname:aix tag:errpt| stats count(hostname) by aix.resource_name "}
{"input": "", "instruction": "我想问的是，有多少台AIX服务器的登录失败次数超过3次？并且按用户和主机名分组统计。", "output": "appname:aix tag:failedlogin |stats count() as count_ by hostname,aix.user"}
{"input": "", "instruction": "我想知道发生错误的AIX主机有几个，分别是哪些。", "output": "appname:aix tag:errpt| stats count(hostname) by hostname"}
{"input": "", "instruction": "我想要知道在一天里有多少个不同的AIX主机出现了错误或警告信息。请帮我把这些错误和警告信息列出，并统计每个主机的数量。", "output": "appname:aix tag:errpt| stats count(hostname) by hostname"}
{"input": "", "instruction": "我想问的是，有多少次访问了包含“wapx.example.cn”、“img.example.cn”或“tv.example.cn”的CDN域名？", "output": "appname:cdn tag:huawei (cdn.domain:wapx.example.cn OR cdn.domain:img.example.cn OR  cdn.domain:tv.example.cn) | stats count() as count_ by cdn.domain"}
{"input": "", "instruction": "我想询问以下信息：在某一天中，有多少条记录的 log_type 为 cisco_ios 和 appname 为 switch 的日志被发送到日志易服务器上。", "output": "appname:switch tag:cisco_ios  |stats count()  by switch.log_type"}
{"input": "", "instruction": "我想问的是，有多少次访问来自于中国的用户使用 Cisco ASA 进行了防火墙的操作？", "output": "appname:firewall tag:cisco_asa firewall.src.geo.country:\"中国\" | stats count() as cnt by firewall.src.geo.city"}
{"input": "", "instruction": "我想问的是，F5 Load Balancer的哪个响应码被访问到了最多次？你可以把这个答案解释给我吗？", "output": "appname:loadbalancing tag:f5  loadbalancing.responsecode:* to | stats count() by loadbalancing.responsecode"}
{"input": "", "instruction": "我想问的是，F5 Load Balancer的警告数量有多少次？", "output": "appname:loadbalancing tag:f5  loadbalancing.severity:warn |stats count() as count_1"}
{"input": "", "instruction": "我想问的是，公司的防火墙有点慢，你们知道是为什么吗？你能帮忙分析一下吗？", "output": "(* AND appname:firewall) AND tag:juniper |stats count() by firewall.reason"}
{"input": "", "instruction": "我想问的是，从哪些源地到哪些目的地有最多的流量通过我们的防火墙？", "output": "(* AND appname:firewall) AND tag:juniper | stats count() as total by firewall.src_zone,firewall.dst_zone"}
{"input": "", "instruction": "我想问的是，有多少次我们的防火墙对某个端口进行了检查？而且这个检查的动作是什么呢？", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() by firewall.action"}
{"input": "", "instruction": "我想问的是，有多少个不同的 IP 源地址访问了我们的网站。", "output": "appname:ips ips.src.geo.ip:* | stats count() by ips.src.geo.city"}
{"input": "", "instruction": "我想问的是有没有大量的用户访问过某一地区的网站呢？", "output": "appname:ips ips.src.geo.ip:* | stats count() by ips.src.geo.province"}
{"input": "", "instruction": "我想问的是，有多少人使用了 Oracle 登录系统并进行审计呢？", "output": "appname:oracle tag:audit oracle.login_user:* | stats count() as ct by oracle.login_user"}
{"input": "", "instruction": "我想问的是，有多少人使用了 Oracle 这个应用，并且在操作过程中涉及到 audit 和 oracle.user 这两个关键词或者标签。", "output": "appname:oracle tag:audit oracle.user:* | stats count() as cn by oracle.user"}
{"input": "", "instruction": "我想问的是有没有人在使用 juniper 和 statsd 来做监控，并且他们的流量走向是从哪些区域发出去的，到达目的地时又从那些区域接收到的", "output": "appname:ips AND tag:juniper|stats count() by ips.inbound_zone,ips.outbound_zone"}
{"input": "", "instruction": "我想问的是，有没有人在使用 snort 和 statsd 来做入侵检测和流量分析呢？", "output": "appname:ids tag:snort|stats count() by ids.src_ip,ids.dst_ip"}
{"input": "", "instruction": "我想问的是，有多少次访问了使用 WebSense 安全产品保护的网站？并且按国家分组统计数量，并返回结果。", "output": "appname:dlp tag:websense|stats count() by dlp.src.geo.country"}
{"input": "", "instruction": "我想问的是，你有没有做任何 Linux 系统的认证失败事件？如果有的话，有多少个呢？你可以把这些结果告诉我吗？", "output": "appname:linux tag:linux linux.event_name:认证失败事件| stats count()"}
{"input": "", "instruction": "我想问的是，有没有 CDN 出现问题的事件吗？而且这个事件发生时，有多少台 SANGFOR 设备受到了影响？", "output": "(appname:cdn AND tag:sangfor) | stats count() as cnt by cdn.event_name"}
{"input": "", "instruction": "我想问的是，有多少次 huawei 路由器出现了错误信息为“tag”的情况？", "output": "appname:router tag:huawei | stats count() as cnt by router.error_msg"}
{"input": "", "instruction": "我想问的是，在一天里，有多少人使用了哪些 Linux 桌面系统和程序？你能把结果按用户和主机名分组吗？", "output": "appname:linux |stats count() as cnt by linux.user,hostname"}
{"input": "", "instruction": "我想问的是，我的 app 在哪些页面有崩溃率比较高的用户呢？请帮忙分析一下吧！", "output": "appname:ids tag:nsfocus| stats count() by ids.event_name"}
{"input": "", "instruction": "我想问的是，有没有人使用 nsfocus 这个应用名进行了登录操作？如果有的话，成功的次数有多少？", "output": "appname:ids AND tag:nsfocus AND ids.event_name:登录成功 | stats count() as '成功登陆数'"}
{"input": "", "instruction": "我想问哪个运营商的用户访问量最多？", "output": "appname:pf_gateway|stats count() as cnt by gateway.src.geo.isp"}
{"input": "", "instruction": "我想知道 haproxy 服务的状态信息。或者我想看一下某一天的访问量统计数据。", "output": "appname:haproxy|stats count()"}
{"input": "", "instruction": "我想问的是，哪些应用报错比较多呢？", "output": "tag:rizhiyi_internal error |stats count() by appname"}
{"input": "", "instruction": "我想要知道在过去一天中有多少次出现了不同严重级别的崩溃报告。请帮我把这些数据汇总并按严重等级进行排序。", "output": "appname:csa AND tag:hillstone |stats count() as total by csa.severity "}
{"input": "", "instruction": "我想问的是，有多少次访问来自于华为的 USG6650 防火墙设备？", "output": "appname:firewall AND tag:huawei_USG6650 |stats count() as cnt by firewall.src.geo.city"}
{"input": "", "instruction": "我想问的是，有多少人在使用 Linux 系统进行了登录失败的操作？并且根据用户名称去统计数量。", "output": " (appname:linux linux.event_name:登录失败事件) |stats count(linux.user) as ct by linux.user "}
{"input": "", "instruction": "我想知道的是主机上每天的登录人数和时间分布情况。", "output": "appname:esxi tag:app1 login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "", "instruction": "我想问的是有没有大量的用户在使用直播功能，而且他们所在地区都在哪些呢？可以把结果按时间排序吗？", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_ by stb.kvmsg.UserId.area_code_dec"}
{"input": "", "instruction": "我想问的是有没有大量的用户在使用我们的直播功能。", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_ by stb.kvmsg.networktype_dec"}
{"input": "", "instruction": "我想问的是，在一天的 log 中，有多少条信息包含了 appname=“ssl” 和 tag=“infosec”。", "output": "appname:ssl tag:infosec | stats count() as cnt by ssl.user"}
{"input": "", "instruction": "我想问的是有没有发现 hillstone 报警的情况吗？如果有的话，数量是多少？请帮我把这些结果打印出来。", "output": "appname:bds tag:hillstone bds.severity:Low| stats count()"}
{"input": "", "instruction": "我想问的是有没有发现 hillstone 报警的情况吗？请告诉我具体数目和时间范围。", "output": "appname:bds tag:hillstone bds.severity:Low| stats count()"}
{"input": "", "instruction": "我想问的是，有没有人在使用 appname:host_protect这个应用的主机防护功能，并且发送过包含tag为“qingteng”的信息？", "output": "appname:host_protect tag:qingteng | stats count() as cnt by hp.msg.os"}
{"input": "", "instruction": "我想问的是，有没有人在用这个端口进行攻击或其他恶意行为？如果有的话，有多少次？", "output": "appname:host_protect tag:qingteng hp.msg.event_content:*| stats count() as cnt by hp.msg.detail_port"}
{"input": "", "instruction": "我想问的是有没有发现类似于“TrendMicro”的词出现在哪些设备的报警中，并且统计出数量并按等级分组", "output": "appname:antivirus tag:trendmicro|stats count() as cnt by dsm.level"}
{"input": "", "instruction": "我想问的是，有多少个Oracle的服务状态为Listener的实例数量是多少呢？", "output": "appname:oracle AND tag:listener | stats count() as ct by oracle.status"}
{"input": "", "instruction": "我想问的是，公司里有哪些人在做oracle审计呢？", "output": "appname:oracle tag:audit|stats count() by audit.USERNAME"}
{"input": "", "instruction": "我想问的是，在过去一天里有多少次攻击使用了端口号为 xx 的方式进行的，并且这个攻击使用的漏洞类型是什么", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.dst_port"}
{"input": "", "instruction": "我想问的是，我在使用surfilter AC软件时突然崩溃了，然后就不能打开软件了，这件事情你有没有发生过吗？", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:*流媒体 | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想问的是：在昨天的用户使用哪些应用进行了搜索？请列出名称、数量和占比。", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:网络游戏 | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想问的是，我在使用支付宝APP购买了一款商品，打开支付宝发现没有这个订单，而且我的账户余额也没变，这是为什么呢？", "output": "appname:ac tag:surfilter (ac.event_type:app_filter OR ac.event_type:other_app) ac.kv.app_cat_name:电子商务 | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想问的是，有多少用户使用了哪些应用进行文件传输？", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想问有没有在内搜索过“tdx”的应用名称中包含字符串“连接信息”但不包括字符串“调用失败”的信息量。", "output": "(appname:tdx  NOT 连接信息) \"调用失败\" | stats count()"}
{"input": "", "instruction": "我想问的是有没有人在使用 SANGFOR 这个应用去访问一些招聘类的网站的情况吗？", "output": "appname:ac tag:sangfor ac.msg.serv:访问网站 ac.msg.app:*招聘*   |stats count() as cnt by ac.msg.tm_type"}
{"input": "", "instruction": "我想问的是，有没有人使用了“百度文库”这个App登录过？并且他们的身份是不是管理员或者普通用户呢？", "output": "appname:bi AND 'tag':login | stats count() by csv.username,csv.userrole"}
{"input": "", "instruction": "我想问的是有没有人使用过 zqtz 这个 APP，并按用户统计数量。", "output": "appname:zqtz  | stats count() by csv.username"}
{"input": "", "instruction": "我想要知道哪些同事修改了自己的OA密码。", "output": "appname:oa AND 'tag':change_pwd | stats count() by csv.FD_OPERATOR"}
{"input": "", "instruction": "我想问的是，有没有人在做认证相关的事情？如果有的话，那他们大概都在干啥呢？", "output": "appname:router tag:ruijie *AUTH* | stats count() as cnt by router.auth_result"}
{"input": "", "instruction": "我想问的是，有没有人在做配置修改？如果有的话，那个用户最多做了几个配置修改呢？", "output": "appname:router tag:ruijie router.action:CONFIG*|stats count() as cnt by router.user"}
{"input": "", "instruction": "我想问的是，有多少用户在使用哪些应用的数据库呢？", "output": " appname:dbaudit db.Logtype:*  | stats count() as cnt by db.msg.client_host"}
{"input": "", "instruction": "我想问的是，在过去一天里有多少台手机被感染病毒的情况吗？并且根据不同的病毒类型进行统计", "output": "appname:antivirus  | stats count() as cnt by anti.type"}
{"input": "", "instruction": "我想问的是，有多少用户使用了哪些客户端访问了哪些操作的帖子吗？", "output": "appname:ac tag:qianxin ac.log_type:post | stats count() as cnt by   ac.client,ac.app,ac.operation"}
{"input": "", "instruction": "我想问的是有没有人在搜索引擎上输入“qianxin”这个词，然后点击了“阻塞”这个操作按钮或者链接呢？", "output": "appname:ac tag:qianxin ac.log_type:search_engine ac.action:阻塞| stats count()"}
{"input": "", "instruction": "我想问的是，有几个同学使用了softether进行VPN登出，并不是因为认证失败或者其他原因而退出的。", "output": "appname:vpn tag:softether vpn.action:logout NOT vpn.reason:认证模块发起 | stats count() as cnt by vpn.user,vpn.reason"}
{"input": "", "instruction": "我想问的是访问了哪些网站呢？你能不能把这些网站的名称和链接都列出来吗？", "output": "appname:ac tag:h3c *LOGIN* |stats count()"}
{"input": "", "instruction": "我想问的是，有没有任何应用出现了 _AP_DOWN 这个错误吗？如果有的话，那几个应用分别在哪些时间段内出现了这个问题？", "output": "appname:ac tag:h3c ac.mnemonic:*_AP_DOWN* |stats count() as cnt by ac.mnemonic"}
{"input": "", "instruction": "我想问你有关Norton的反病毒软件的信息，但不包括“Eset Threat Event”。请告诉我在过去一天中有多少个不同的威胁事件发生。", "output": "appname:antivirus tag:norton NOT atv.cat:\"ESET Threat Event\"| stats count() as cnt by atv.event_name"}
{"input": "", "instruction": "我想问的是，有多少个访问了 McAfee 的网站的用户，他们的 IP 来自哪些国家和地区，以及他们所在城市是什么？", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() as cnt by ips.src.geo.country,ips.src.geo.province,ips.src.geo.city"}
{"input": "", "instruction": "我想问以下信息：有多少个级别高于 info 的访问经过了 McAfee IPS，分别属于哪些国家、省份和城市？这样我可以画成内部下钻的区划地图", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() as cnt by ips.src.geo.country,ips.src.geo.province,ips.src.geo.city"}
{"input": "", "instruction": "我想问的是，有多少次由中国的用户发起了一个从 FireEye 应用开始，并且包含了标签为 \"NX\" 的网络流量？", "output": "(appname:nx AND tag:fireeye) |  stats count() as cnt by nx.src.geo.country,nx.src.geo.province,nx.src.geo.city"}
{"input": "", "instruction": "我想问的是发生的网络异常情况有哪些？请告诉我华为设备的防火墙相关的信息。", "output": "(* AND appname:firewall) AND tag:huawei | stats count() as total by firewall.facility"}
{"input": "", "instruction": "我想知道的是在 CDN 上面有没有出现过 HTTP status 为 404、5xx、403、200 或 206 的错误码，并且域名为 live1.video.com、live2.video.com 或 live3.video.com 中的哪个域名出现的次数最多。", "output": "appname:cdn AND (cdn.http_status:404 OR cdn.http_status:5?? OR cdn.http_status:403 OR cdn.http_status:200 OR cdn.http_status:206 )  AND (cdn.domain:live1.video.com OR cdn.domain:live2.video.com OR cdn.domain:live3.video.com) |  stats count() by hostname,cdn.http_status"}
{"input": "", "instruction": "我想知道在 Linux 系统中失败的 audit 事件中有没有人使用了密码或密令进行身份验证。请帮忙把这些信息列举出来并给出数量统计。", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) ) AND (USER_AUTH OR USER_LOGIN) AND linux.result:failed | stats count()"}
{"input": "", "instruction": "我想要知道在一天中出现过多少个不同的错误类型。请帮我把这个统计结果打印出来。", "output": " appname:aix  |stats count(aix.facility) as ct by aix.facility"}
{"input": "", "instruction": "我想询问 VPN 用户在某一天使用 SANGFOR VPNs 情况下，访问的目标地区和 IP 是什么样的统计信息。", "output": "appname:vpn tag:sangfor NOT vpn.src.geo.city:other  | stats count() as cnt by vpn.src.geo.ip,vpn.src.geo.city,vpn.dst.geo.ip,vpn.dst.geo.city "}
{"input": "", "instruction": "我想询问的是，使用“360网神”的用户在防火墙面板中执行了多少次登录操作？", "output": "appname:firewall tag:360wangshen 登录成功| stats count()"}
{"input": "", "instruction": "我想要360网神防火墙日志里有多少条不同的威胁。", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.threat_name"}
{"input": "", "instruction": "我想问的是，有多少次访问了具有特定标记的应用“防火墙”并使用安全连接（Secure）进行通信？您可以根据流量分析器中的统计信息生成相应的结果。此外，还需要将源 IP、目的地 IP 和每个 IP 的所在城市、经度和纬度作为维度进行分组计数。", "output": "appname:firewall tag:tos firewall.type:secure|stats count() by firewall.src.geo.city,firewall.src.geo.latitude,firewall.src.geo.longitude,firewall.dst.geo.city,firewall.dst.geo.latitude,firewall.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是，我在使用 Ensemble App 时遇到了一些问题，具体来说是这个错误：`Failed to execute the job because of an internal error. Please try again later.`（内部错误导致作业执行失败）。我已经重试了好几次，但还是无法解决该问题。你能帮忙看一下原因吗？", "output": "* AND  'appname':ensemble NOT ensemble.retCode:000000 |stats count() by  ensemble.retCode,ensemble.retMsg"}
{"input": "", "instruction": "你能帮我查一下吗？我想知道在 Cisco 应用中发生的所有事件数量统计信息。", "output": "appname:ac tag:cisco ac.event_id:35160|stats count()"}
{"input": "", "instruction": "我想问的是有没有人使用CNP APP购买商品或者服务吗？请告诉我具体的统计数据。", "output": "appname:cnap cnap.respSysId:CNAP AND cnap.action:RECEIVED | stats count()"}
{"input": "", "instruction": "我想问的是，有几个用户反馈说他们无法正常使用我们的系统，并且在应用崩溃时出现 ANR（Application Not Responding），导致其他用户也无法访问我们的服务。我需要你帮忙分析一下原因并给出解决方案。", "output": "* AND  'appname':connector connector.info1.seqNo:*|stats count()"}
{"input": "", "instruction": "我想问有关某款应用的访问和错误日志中，哪些类型的操作最常见？这款软件的名称为“aix”，并且在其访问和错误日志中没有包含关键字“syslog”或“godmd”。", "output": "appname:aix  NOT (\"syslog:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type"}
{"input": "", "instruction": "我想要知道有多少用户使用了 appname 为 linux 的系统，并且在执行了 su 命令的同时也生成了安全审计消息（audit.msg.ser:su-l），并按 IP、主机名、发起操作的用户、被操作的用户、安全审计序列号和时间进行分组统计。这个查询有点长，你能简化一下吗？", "output": "appname:linux  AND (tag:linux_messages OR tag:linux_secure)  AND audit.msg.ser:su-l | stats count() as su by ip,hostname,audit.msg.ruser,audit.msg.user,audit.msg.ser,timestamp "}
{"input": "", "instruction": "我想问有关 Linux 系统的安全审计记录中出现过哪些与服务、删除文件或杀死进程相关的问题：- appname: linux 表示该条目所属应用为 Linux；- audit.msg.ser: shell_cmd 表示消息中的内容包含了 Shell 命令；- audit.msg.command:*service* 或 audit.msg.command:*rm* 或 audit.msg.command:*export* 或 audit.msg.command:*kill* 表示消息中包含了以 service、rm、export 或 kill 为开头的一类命令；|stats count() as error by ip 表示将这些符合条件的记录按 IP 地址进行统计，并计算出错误数量（count）作为每个 IP 地址的结果字段。", "output": "appname:linux  AND audit.msg.ser:shell_cmd AND (audit.msg.command:service* OR audit.msg.command:rm* OR audit.msg.command:export* OR audit.msg.command:kill*) | stats count() as error by ip "}
{"input": "", "instruction": "我想问有关防火墙的访问数据统计情况，具体来说，我根据以下几个维度进行汇总和统计：1. 源 IP 地址所在城市2. 源 IP 地址的纬度3. 源 IP 地址的经度4. 目的 IP 地址所在城市5. 目的 IP 地址的纬度6. 目的 IP 地址的经度", "output": "appname:firewall  |stats count() by firewall.msg.src_addr.geo.city,firewall.msg.src_addr.geo.latitude,firewall.msg.src_addr.geo.longitude,firewall.msg.dst_addr.geo.city,firewall.msg.dst_addr.geo.latitude,firewall.msg.dst_addr.geo.longitude"}
{"input": "", "instruction": "我想问的是，在有多少个 IP 源地址和目的地址组合出现过？", "output": "appname:ids tag:nsfocus  | stats count() by ids.src_ip,ids.dst_ip"}
{"input": "", "instruction": "我想问的是，在 appname=com.tencent.mm 和 tag=\"nsfocus\" 下有多少条数据？请帮忙把这个统计结果打印出来。", "output": "appname:ids tag:nsfocus  | stats count() by ids.proto"}
{"input": "", "instruction": "我想问的是有没有人使用过 imc 这个应用吗？并统计出总共有多少次使用。可以把结果打印出来嘛", "output": "appname:imc  | stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录满足 appname=firewall,tag=dc,并且 source city in (private) ", "output": "appname:firewall tag:dc   firewall.src.geo.city:private|stats count() as cnt by firewall.proto"}
{"input": "", "instruction": "What was the total number of security events with action=dc in appname=firewall?", "output": "appname:firewall tag:dc   firewall.event_level:Security|stats count() as cnt by firewall.action"}
{"input": "", "instruction": "我想要知道有多少条记录的类型为“警告”并且属于某个应用名叫做“uf”的日志文件中。我的查询语句应该是：`SELECT COUNT(*) AS \"cnt\" FROM \"uf\".\"logs\" WHERE (\"log_type\" = 'WARNING') AND (appname='uf');`。", "output": "appname:uf   uf.log_type:警告|stats count()"}
{"input": "", "instruction": "我想问的是，用户在哪些设备上使用了我们的 APP，以及他们的访问频率有多高？你能帮我把这些数据列出吗？", "output": "appname:uf   |stats count() as cnt by uf.log_type"}
{"input": "", "instruction": "我想问有没有在我的日志中找到关于“Fortress”应用、标记为“jumpserver”并且其登录状态为失败的记录的数量的信息。", "output": "appname:fortress tag:jumpserver  fortress.log_type:login_log fortress.status:false| stats count()"}
{"input": "", "instruction": "我想问有没有在处理一类名为 esxi、标签中含有 vmkwarning 的应用的告警数量吗？", "output": "(appname:esxi AND tag:vmkwarning)  | stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录涉及到 Fortress 安全问题以及这些记录所属的具体类型。", "output": "appname:fortress tag:safety  | stats count() as cnt by 'fortress.kv.日志类型'"}
{"input": "", "instruction": "我想问如何编写一个日志易查询以获取 EMC 和 Dell 之间登录详细信息的统计数据。", "output": "appname:emc tag:dell  emc.login_detail.Username:* | stats count()"}
{"input": "", "instruction": "我想问的是，在一段时间内，有多少人使用了哪些账户登录了系统？", "output": "appname:audit  AND audit.msg.ser:sshd AND \"Accepted password for\" NOT (audit.msg.src_ip:172.16.11.101 OR audit.msg.src_ip:172.16.11.102 OR audit.msg.src_ip:172.16.11.103 OR audit.msg.src_ip:172.16.11.82 OR audit.msg.src_ip:172.20.3.113 OR audit.msg.src_ip:172.20.1.127 OR audit.msg.src_ip:172.16.11.87 OR audit.msg.src_ip:172.16.11.88 OR audit.msg.src_ip:172.16.11.89) | stats count() as login by audit.msg.src_ip,audit.msg.user"}
{"input": "", "instruction": "我想问的是最近有没有错误发生", "output": "appname:syslog (error OR fail OR fatal) | stats count() by syslog.status"}
{"input": "", "instruction": "我想问的是apache访问量统计，按运营商分组统计数量。", "output": "appname:apache | stats count() by apache.geo.isp"}
{"input": "", "instruction": "我想问的是，你们公司的网站有哪些使用了 Apache 和 Chrome/FireFox 浏览器的用户呢？你可以把这些数据统计一下呗！", "output": "appname:apache apache.ua:*Chrome* OR apache.ua:*Firefox* | stats count(apache.domain) by apache.ua"}
{"input": "", "instruction": "我想问的是 VPN 服务商 SANGFOR 是否有在某些地区的用户访问成功率很高，而且这些 IP 源地址都是同一地区的情况吗？", "output": "appname:vpn tag:sangfor vpn.actype:access* vpn.result:success|stats count() by vpn.src.geo.ip,vpn.dst_ip"}
{"input": "", "instruction": "我想问的是 sshd 服务的审计信息中有没有出现“Failed password for”这类消息。", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats count()"}
{"input": "", "instruction": "在ssh服务的审计信息中，是否存在失败密码登录的记录？", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats count()"}
{"input": "", "instruction": "我想询问关于 Linux sshd 服务的审计记录中，用户在登录过程中输入密码时是否被接受的信息。", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count() as ct by audit.msg.user"}
{"input": "", "instruction": "我想问的是 sshd 服务的审计信息中有没有 Accepted password for 用户的信息，并统计数量和 IP 地址。", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count() as ct by audit.msg.src_ip"}
{"input": "", "instruction": "我想问有关 SSHD（Secure Shell Daemon）应用的审计消息中是否存在与“接受密码”相关的信息吗？", "output": "appname:audit AND audit.msg.ser:sshd AND \"Accepted password for\"  | stats count()"}
{"input": "", "instruction": "我想问的是 sshd 服务的审计信息中有没有失败密码登录的信息，并统计出来的结果是怎么样的。", "output": "appname:audit AND audit.msg.ser:sshd AND \"Failed password for\"  | stats count() as ct by audit.msg.src_ip,audit.msg.user"}
{"input": "", "instruction": "我正在寻找有关 CROND 命令执行情况的信息。", "output": "appname:audit AND audit.msg.ser:CROND | stats count() as cron by ip,hostname,audit.msg.user,audit.msg.cmd "}
{"input": "", "instruction": "我想要知道系统中有多少次SSH登录成功和失败的情况，并且统计出总共有几条记录。", "output": "appname:audit AND audit.msg.ser:sshd AND (\"Accepted password for\" OR \"Failed password for\") | stats count() as login"}
{"input": "", "instruction": "我想问的是，在 appname=db2 下，有多少个 instance 是不同的呢？可以把结果展示成柱状图或者饼状图吗？", "output": "appname:db2  |stats count() as cnt by db2.instance"}
{"input": "", "instruction": "我想问的是，在数据库 db2 下有哪些函数被调用了多少次？请帮忙修改一下查询语句。", "output": "appname:db2  |stats count() as cnt by db2.function"}
{"input": "", "instruction": "我想要知道有多少条记录的状态为appname:DNS,请帮我把它翻译成SQL吧。", "output": "* appname:DNS | stats count() as count_  by DNS.status"}
{"input": "", "instruction": "我想问的是，在有多少台 Cisco Nexus 发生了严重错误或中等错误，以及这些错误分别出现在哪些交换机上？", "output": "appname:switch tag:cisco_nexus |stats count()  by switch.severity,switch.describe"}
{"input": "", "instruction": "我想问的是，在用户使用了哪些应用、标签为“华为”的设备数量有多大吗？", "output": "appname:switch tag:huawei |stats count() as count_"}
{"input": "", "instruction": "我想问有关 H3C firewall 应用的使用情况和数量的信息。", "output": "appname:firewall AND tag:h3c | stats count()"}
{"input": "", "instruction": "我想要知道在 appname 为 \"exchange\"、tag 为 \"front\" 的日志中，按 exchange.dst.geo.city 分组后统计数量并返回结果。", "output": "appname:exchange tag:front  |stats count()  as cnt by exchange.dst.geo.city"}
{"input": "", "instruction": "我想问的是最近新华三 IPS有没有出现过低等级的安全问题呀。", "output": "appname:ips AND tag:h3c AND  ips.severity:\"LOW\"| stats count()"}
{"input": "", "instruction": "我想问的是最近新华三 IPS 有没有出现过高危漏洞的情况？", "output": "appname:ips AND tag:h3c | stats count()"}
{"input": "", "instruction": "我想问的是：在 appname 为 vpn、tag 为 sangfor、vpn.actype 以 access 开头的所有记录中，统计访问协议为何种类型的次数", "output": "appname:vpn tag:sangfor vpn.actype:access* |stats count() as cn by vpn.proto"}
{"input": "", "instruction": "我想问的是 Array VPN 用户的数量和地理分布情况。", "output": "appname:vpn tag:array|stats count() by vpn.kv.src.geo.city"}
{"input": "", "instruction": "我想问 VPN 服务的 Cisco 设备中发生了多少次不包括 authentication 不相关的流量。", "output": "appname:vpn tag:cisco NOT \"authentication\" |stats count() as cn by vpn.transport"}
{"input": "", "instruction": "我想问的是，公司的防火墙上有多少条记录，按照 src_ip 和 src_port 分组后，统计每个分组中的数量", "output": "appname:firewall tag:leadsec |stats count() as cnt by firewall.src_ip,firewall.src_port"}
{"input": "", "instruction": "我想问的是，在你们公司的服务器上有哪些程序每分钟都会执行一次 `crond` 命令吗？你可以把这些命令和执行时间打印出来，我会根据它们来判断你的答案。", "output": "appname:audit AND audit.msg.ser:CROND | stats count() as cron by ip,hostname,audit.msg.user,audit.msg.cmd "}
{"input": "", "instruction": "我想要知道在 appname=db2 和 db2.level=error 时有多少条记录。", "output": "appname:db2 AND db2.level:Error |stats count()"}
{"input": "", "instruction": "我想问的是，在 appname:db2 下有多少条数据，按db2.function 函数统计？", "output": "appname:db2  |stats count() as cnt by db2.function"}
{"input": "", "instruction": "我想问的是，在 appname=db2 下，有多少个 instance 是不同的呢？把结果打印出来。", "output": "appname:db2  |stats count() as cnt by db2.instance"}
{"input": "", "instruction": "我想询问飞塔防火墙的警告或紧急事件的数量。", "output": "appname:firewall  tag:fortinet firewall.level:warning OR firewall.pri:warning OR firewall.pri:emergency| stats count()"}
{"input": "", "instruction": "我想询问有关飞塔防火墙、标记为\"firewall.subtype:ips\" 并且具有严重性等于 \"firewall.severity:high\" 的事件的数量。", "output": "appname:firewall  tag:fortinet AND firewall.subtype:ips firewall.severity:high | stats count()"}
{"input": "", "instruction": "帮我查找一些飞塔防火墙的审计数据，并按应用分类和子类型汇总数量。统计限于应用控制或应用代理服务。", "output": "* AND appname:firewall  tag:fortinet AND firewall.subtype:app-ctrl|stats count() by firewall.appcat,firewall.app"}
{"input": "", "instruction": "我想问有关应用名为“防火墙”、标记为“Fortinet”的流量的来源地和目的地的信息。", "output": "(appname:firewall  tag:fortinet )AND firewall.type:traffic AND firewall.src.geo.country:private | stats count() by firewall.dst.geo.city"}
{"input": "", "instruction": "从 `appname:vpn` 索引中检索满足条件的记录，然后使用 `STATS` 函数计算每个 VPN 协议类型的访问次数（即 `cn`）。", "output": "appname:vpn tag:cisco vpn.actype:access* |stats count() as cn by vpn.proto"}
{"input": "", "instruction": "我想要知道在有多少台 Cisco IOS 设备发生了端口安全策略违规的情况。请告诉我该如何进行日志查询。", "output": "appname:switch tag:cisco_ios  AND PORT_SECURITY-2-PSECURE_VIOLATION |stats count() by switch.src_mac,switch.interface_name "}
{"input": "", "instruction": "帮我编写一个 AppName 为 \"Switch\"、Severity 大于等于 2（即错误）并且 Severity 小于等于 warn （即警告）的统计结果的查询语句。", "output": "appname:switch AND switch.severity:>2 AND switch.severity:warn | stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：- appname为\"firewall\"且tag包含\"h3c\"- firewall.level小于等于3", "output": "appname:firewall AND tag:h3c AND firewall.level<3 | stats count()"}
{"input": "", "instruction": "我想问的是 palo alto 这款防火墙在哪些国家有用户吗？请帮我把这些国家列出来并统计数量", "output": "appname:firewall tag:paloalto|stats count() as count_ by firewall.dst.geo.country"}
{"input": "", "instruction": "要搜索 appname:ips 和 tag:h3c 这两个标签，并且Ips的严重程度必须大于等于2且小于5或者为“中等”，最后用stats命令统计结果数目。", "output": "appname:ips AND tag:h3c  AND (ips.severity:>2 AND ips.severity:<5) OR ips.severity:\"MEDIUM\" | stats count()"}
{"input": "", "instruction": "我想要知道在 appname 为 \"middleware\"、并且 status 大于等于 399 的请求中有多少条数据。", "output": "appname:middleware middleware.status:>399 | stats count()"}
{"input": "", "instruction": "我想问的是，你们中间件的服务端5xx错误数？", "output": "appname:middleware middleware.status:>499|stats count()  as '服务端错误事件'"}
{"input": "", "instruction": "我想问有关 Cisco IOS 系统中发生的交换机端口开启和关闭事件的信息数量统计情况。", "output": "appname:switch tag:cisco_ios  AND SYS-6-LOGGINGHOST_STARTSTOP |stats count() by switch.host_ip,switch.port"}
{"input": "", "instruction": "vmware虚拟机发生错误次数", "output": "appname:vmware AND tag:* AND ('vmware.level':error OR vmware.level:ERROR )|stats count()"}
{"input": "", "instruction": "帮我分析 CDN 访问日志中哪些字段有价值，并给出相应的统计结果。我需要了解以下几个方面：1. `appname`：应用名称（CDN）2. `cdn.request_url`：请求 URL（M3U8 文件地址）3. `cdn.geo.province`：用户所在省份4. `count()` 函数：计算数量5. `by` 子句：按某一列进行分组因此，您的完整查询应该为：这条查询意味着从名为 `cdn_log` 的应用的访问日志中筛选出所有包含 `.m3u8` 在内的 `cdn.request_url`，然后使用 `stats count()` 函数计算每个用户所属地区的访问次数，最后将结果以 `by` 子句按用户所在地区进行分组显示。", "output": "appname:cdn_log AND cdn.request_url:*.m3u8|stats count() by cdn.geo.province"}
{"input": "", "instruction": "我想跟踪某些流媒体文件被 CDN 分发的情况。", "output": "appname:cdn_log AND cdn.request_url:*.mp4|stats count() by cdn.request_url"}
{"input": "", "instruction": "我想要知道有多少个不同的 IP 地址访问过我的网站。请帮我把这些数据统计一下。", "output": "appname:nginx_log |stats count(nginx.real_ip.last) as ct by nginx.real_ip.last"}
{"input": "", "instruction": "我想要知道网站访问量分布情况，你能帮我把这些数据统计一下吗？", "output": "appname:nginx_log|stats count(nginx.real_ip.last) as ct by nginx.request_raw.request_url"}
{"input": "", "instruction": "我想问的是，在应用为 middleware 的服务器上，有多少个错误的请求被标记为 IIS 错误？请帮忙把这个统计结果打印出来。", "output": "appname:middleware tag:iis |stats count() as count_"}
{"input": "", "instruction": "帮我分析一些 VPN 用户在登录时所携带的信息，比如他们使用的地区、VPN 服务商等信息。", "output": "appname:vpn tag:sangfor vpn.actype:login|stats count()  by vpn.src.geo.country"}
{"input": "", "instruction": "希望了解关于在您的环境中发生的任何高级审核事件的信息，同时也寻找与应用安全相关的所有标记", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"高\" |stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录符合以下条件：`appname:dbaudit AND tag:dbappsecurity`。这是一个关于数据库审计和安全的统计问题。", "output": "(appname:dbaudit AND tag:dbappsecurity)  | stats count() as cnt by dbaudit.app_name"}
{"input": "", "instruction": "我想要知道在 appname 为 exchange, tag 为 send 的事件中有多少条数据。", "output": "appname:exchange tag:send |stats count()"}
{"input": "", "instruction": "正在寻找关于某 Linux 系统中用户登录成功的情况的统计信息。", "output": " (appname:linux linux.event_name:登录成功事件)  |stats count(linux.user) as ct by linux.user "}
{"input": "", "instruction": "我想问：“根据 'appname:linux' 和 'linux.event_name:登录失败事件' 这两个条件，统计出 'linux.user' 这个字段出现的次数以及各自的数量”。", "output": " (appname:linux linux.event_name:登录失败事件)  |stats count(linux.user) as ct by linux.user "}
{"input": "", "instruction": "我想要知道在 Linux 下有哪些程序正在发送或接收信息的数量以及它们属于那种类型。请告诉我这些统计数据。", "output": "appname:linux tag:messages|stats count() as cnt by linux.type"}
{"input": "", "instruction": "从包含“authentication failure”的审计消息中筛选出属于Linux应用的所有登录失败事件，并统计每个IP地址、用户和服务名称出现的次数。", "output": "appname:linux AND \"authentication failure\" | stats count(audit.msg.user) as ct by ip,audit.msg.user,audit.msg.ser "}
{"input": "", "instruction": "我想问的是，在 Linux 下有哪些常见的应用会产生错误或失败的信息吗？请列举出五个。同时也要告诉我这些信息出现时一般都有哪些症状或者影响范围。", "output": "appname:linux AND (failed OR err OR error OR errors OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR bug OR panic) | stats count()"}
{"input": "", "instruction": "我想问的是，在 Linux 下有哪些常用的命令行工具可以用来查看系统的运行状况和性能数据呢？比如内存、CPU 使用率等信息？", "output": "appname:linux | stats count() by audit.msg.ser"}
{"input": "", "instruction": "我想询问的是关于 Linux 安全的一些信息，我在寻找有关 Linux 系统中使用 VSFTPD 服务进行身份验证失败的信息。", "output": "appname:linux tag:linux_secure AND audit.msg.ser:vsftpd AND \"authentication failure\" | stats count() as vsftpd by ip,hostname,audit.msg.ruser,audit.msg.rhost "}
{"input": "", "instruction": "我想要知道有多少次在 Linux 下使用 secure FTP 服务的用户因为身份验证失败而被锁定 out。请告诉我这些事件发生的次数以及时间范围。", "output": "appname:linux tag:linux_secure AND audit.msg.ser:vsftpd AND \"authentication failure\" | stats count() as vsftpd "}
{"input": "", "instruction": "我想询问的是关于 Linux 系统中发生的身份验证失败事件的信息统计情况：- appname: linux 表示该登录事件涉及到的应用名称为 Linux；- authentication failure 表示登录失败的具体原因；- audit.msg.user 表示用户在登录过程中发出的相关信息（如密码、用户名等）。因此，这条查询语句可以用来获取 Linux 系统中所有身份验证失败的事件数量和失败 IP 地址的分布情况。", "output": "appname:linux AND \"authentication failure\"  | stats count(audit.msg.user) as error by ip "}
{"input": "", "instruction": "我想要知道有多少个不同的主机名、IP地址和应用名称的组合出现在系统日志中，以及它们分别出现的次数。请提供这些数据以表格形式返回。", "output": "appname:linux |stats count() as cnt by ip,hostname,appname,tag"}
{"input": "", "instruction": "帮我编写一个 Linux 系统审计的 SPL 查询语句。需要统计在 Linux 系统中使用 chmod、 chown 或 chage 命令时所产生的事件数量。", "output": "appname:linux tag:audit event_type:PROCTITLE (full_cmd:chmod* OR full_cmd:chown* OR full_cmd:chage*) |stats count()"}
{"input": "", "instruction": "我想要知道在 Linux 下使用 secure 标签的记录中，每个 IP 上有多少用户在进行身份验证时失败了。", "output": "appname:linux tag:secure AND \"authentication failure\"   |stats count(user) as error by ip "}
{"input": "", "instruction": "我想问的是，在 Linux 下产生了多少条错误或失败的信息？", "output": "appname:linux AND (failed OR err OR error OR errors OR failure OR wrong OR bad OR critical OR emerg OR emergency OR alert OR crit OR err OR segmentation OR fault OR bug OR panic)  | stats count()"}
{"input": "", "instruction": "我想问的是，在 Linux 系统中，最近有多少次使用 sudo 执行命令的安全事件发生过？你可以把这个统计结果告诉我吗？", "output": "appname:linux tag:secure event_name:sudo执行命令事件 |stats count()"}
{"input": "", "instruction": "我想询问以下内容：统计`Linux`系统中使用`sudo`指令执行的命令数量、IP地址、主机名、用户名称、路径和命令本身，并按这些字段进行聚合计数。", "output": "appname:linux tag:secure event_name:sudo执行命令事件 |stats count() as ct by ip,hostname,user,path,command "}
{"input": "", "instruction": "我想问的是，在 Linux 下面发生的登录失败的次数有多少？并且根据这个结果可以分为两种类型：一种是 IPV4 地址，一种是 IPV6 地址。", "output": "appname:linux AND \"authentication failure\"  |stats count(user) as ct by ip,type "}
{"input": "", "instruction": "我想要知道有多少条记录匹配上述条件，并且按 IP 和命令进行分组。请告诉我这些信息的总和。", "output": "appname:linux tag:audit AND (command:service* OR command:rm* OR command:export* OR command:kill*)  |stats count() as cnt by ip,command"}
{"input": "", "instruction": "我想要知道系统中有多少条关于 Linux 系统和“密码修改”的相关记录？", "output": "appname:linux event_name:密码修改事件 \"password changed for\" | stats count()"}
{"input": "", "instruction": "我想跟踪一名使用 Ritzhyi App 的用户，他们在使用 Beaver SDK 时遇到了一些问题，并且希望通过 Mini Core 和 Stats 来获取有关错误的统计信息。", "output": "appname:rizhiyi  tag:beaver* level:ERROR AND mini_core|stats count()"}
{"input": "", "instruction": "我想问的是，在 VMware 中有多少个级别的应用。", "output": "appname:vmware | stats count() as cnt by vmware.level"}
{"input": "", "instruction": "我想问有关VMWare应用的统计信息，具体来说，我列出在vmwae模块中出现次数最多的条目数以及它们的数量。", "output": "appname:vmware | stats count() as cnt by vmware.module"}
{"input": "", "instruction": "我想问的是vmware虚拟化软件的使用量统计情况。", "output": "appname:vmware AND tag:* |stats count()"}
{"input": "", "instruction": "我想问有关 VMware 应用的错误数量。", "output": "appname:vmware AND tag:* AND ('vmware.level':error)|stats count()"}
{"input": "", "instruction": "我想问有关 VMware 应用的警告数量的信息。", "output": "appname:vmware AND tag:* AND ('vmware.level':warning)|stats count()"}
{"input": "", "instruction": "我在寻找关于某些用户失败登录的统计信息，并按主机名、AIX 用户、AIX 类型（例如 shell 或 sshd）、源 IP 和时间排序。", "output": "tag:failedlogin appname:aix| stats count(hostname) as count_ by hostname,aix.user,aix.type,aix.src_ip,timestamp  "}
{"input": "", "instruction": "我想问有没有在AIX操作系统的主机上发生错误或警告事件的数量统计情况（tag：errpt），并按aix.class_dec进行汇总。", "output": "appname:aix tag:errpt| stats count(hostname) by aix.class_dec"}
{"input": "", "instruction": "我想寻找关于 Linux 系统中安全性方面的问题的答案：有关在 Linux 系统上使用 sudo 命令时发生的“会话打开”事件的数量。", "output": "appname:linux tag:secure  AND type:su AND \"session opened for\"  |stats count()"}
{"input": "", "instruction": "所有在“日志易”应用中含有 “license_info” 标签的数据，计算每个公司出现的次数。", "output": "appname:rizhiyi tag:license_info |stats count() by company "}
{"input": "", "instruction": "我想问的是，我的服务器在上个月遭受到了哪些攻击呢？你能帮我列出奇安信网神防火墙在 AD 模式下涉及到的攻击名称吗？", "output": "((appname:firewall AND tag:legendsec) AND firewall.mod:ad) | stats count() by firewall.attack_name"}
{"input": "", "instruction": "我想要知道有多少条奇安信网神防火墙的拒绝策略日志，按来源 IP 地址分组统计。", "output": "((appname:firewall AND tag:legendsec) AND firewall.mod:policy) AND 'firewall.action':deny | stats count() by firewall.sip"}
{"input": "", "instruction": "我想跟踪进程的网络连接数，它在本地地址上监听 TCP 协议的连接，并且处于 ESTABLISHED 状态。你可以使用 stats 命令统计这些连接数量并将结果保存为一个名为 cnt 的字段。", "output": "* AND appname:process process.local_addr:* process.proto:tcp process.state:ESTABLISHED|stats count()"}
{"input": "", "instruction": "我想问的是 PostgreSQL 使用情况的统计数据，比如总共有多少用户、使用哪些应用等信息。你能否帮忙把这些数据汇总一下并告诉我吗？", "output": "appname:postgresql | stats count() by postgresql.user"}
{"input": "", "instruction": "我想问的是，从哪些服务器发到 pgsql 的访问量最高呢？可以把他们列出来吗？", "output": "appname:postgresql | stats count() by postgresql.ip"}
{"input": "", "instruction": "我想询问 PostgreSQL 应用的错误统计信息，并按 SQLSTATE 分组进行汇总。", "output": "appname:postgresql | stats count() by postgresql.sql_state_code "}
{"input": "", "instruction": "我想问 PostgreSQL 服务的错误级别和数量统计情况。", "output": "appname:postgresql | stats count() by postgresql.error_severity "}
{"input": "", "instruction": "我想寻找关于某台AIX服务器上失败登录事件的统计信息，并且根据用户和主机名进行分组。", "output": "appname:aix tag:failedlogin |stats count() as count_ by hostname,aix.user"}
{"input": "", "instruction": "我想知道在一段时间内，有多少台机器上使用了哪些应用、被标记为“aix”的日志中，出现过哪些用户正在进行哪种类型的交互（即类型为“vty*”）。", "output": "appname:aix tag:last aix.type:vty* | stats count(hostname) as count_ by hostname,aix.user,aix.type,timestamp"}
{"input": "", "instruction": "我想问的是最近使用了 aix 标签的主机数量分布情况。", "output": "appname:aix tag:last | stats count(hostname) as count_ by hostname"}
{"input": "", "instruction": "查询包含关键字“aix”、“errpt”和“stats”的文件中的错误报告数量并按类别对结果进行统计。", "output": "appname:aix tag:errpt| stats count(hostname) by aix.class_dec"}
{"input": "", "instruction": "请为我生成关于AIX系统错误报告和它们所属的AIX类型的统计数据的SPL查询。", "output": "appname:aix tag:errpt| stats count(hostname) by aix.type_dec"}
{"input": "", "instruction": "我想跟踪 MongoDB 服务的性能问题，并希望通过分析组件数量和调用频率来获取MongoDB服务中执行了多少个操作，以及这些操作涉及到的不同组件。", "output": "appname:mongodb | stats count() by mongodb.component"}
{"input": "", "instruction": "我想问有没有搜集到关于 MongoDB 的相关访问记录，并按操作类型进行统计分析。", "output": "appname:mongodb | stats count() by mongodb.action"}
{"input": "", "instruction": "我想要知道各个运营商的用户数量分布情况。我想知道各个城市的 CDN 用户数量分布情况。", "output": "appname:cdn tag:aofei | stats count() by  cdn.geo.city"}
{"input": "", "instruction": "我想问的是，你们CDN有哪些？你可以列出所有的域名和它们所在的城市吗？还有它们在国内外分别部署了几个节点吗？", "output": "appname:cdn tag:aofei AND  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) | stats count() by  cdn.geo.city"}
{"input": "", "instruction": "我想要知道有多少个域名使用了cdn服务，并按使用的cdn服务器进行分组统计。请问您需要我提供哪些信息或数据呢？", "output": "appname:cdn tag:aofei (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() as count_ by cdn.domain"}
{"input": "", "instruction": "帮我设计一个统计 CDN 访问量的查询语句。", "output": "appname:cdn tag:aofei AND (cdn.domain:vod1.video.com OR cdn.domain:vod2.video.com OR  cdn.domain:vod3.video.com OR cdn.domain:vod4.video.com) | stats count() by  cdn.geo.city"}
{"input": "", "instruction": "我想问以下信息：在 appname 为 cdn 和 tag 为 huawei 的情况下，cdn.cdn_status 是不是命中或者失败的情况？", "output": "appname:cdn tag:huawei   AND cdn.cdn_status:*HIT| stats count() "}
{"input": "", "instruction": "我想问的是，过去有多少用户在使用华为的CDN服务，并且根据访问地区进行分组统计，以便于后续分析。", "output": "appname:cdn tag:huawei | stats count() by  cdn.clientip.geo.city"}
{"input": "", "instruction": "寻找与 Huawei CDN 服务有关的流量统计数据。", "output": "appname:cdn tag:huawei  (cdn.domain:live1.video.cn OR cdn:domain:live2.video.com OR live3.video.com) AND cdn.cdn_status:*HIT | stats count() by appname"}
{"input": "", "instruction": "我想要查一下Cisco Nexus交换机的运行状态和数量。", "output": "appname:switch AND tag:cisco_nexus |stats count() as count_"}
{"input": "", "instruction": "我想问以下信息：在 appname 为 \"switch\"、tag 为 \"cisco_nexus\" 和 status 为 \"down\" 的事件中，统计各个 reason 下的数量", "output": "appname:switch AND tag:cisco_nexus AND down |stats count() by switch.reason"}
{"input": "", "instruction": "我想要知道在 appname 为 switch, tag 为 cisco_ios 的所有事件的数量。", "output": "appname:switch tag:cisco_ios    |stats count() as count_"}
{"input": "", "instruction": "Juniper 交换机日志按 desc 分组统计数量。", "output": "(* AND appname:switch) AND tag:juniper |stats count() as total by switch.desc "}
{"input": "", "instruction": "应用名为 loadbalancing、标签为 f5 的日志中，统计每一条包含 from 字样的日志的数量", "output": "appname:loadbalancing tag:f5 from|stats count() as count_1"}
{"input": "", "instruction": "帮我创建查询语句。通过 F5 BIG-IP LTM 设备上的应用名称为“loadbalancing”且带有标签“F5”的请求中返回错误代码 REFUSED 或 NXDOMAIN 的数量进行统计。", "output": "(* AND appname:loadbalancing tag:f5 )    (loadbalancing.responsecode:REFUSED OR loadbalancing.responsecode:NXDOMAIN)| stats count() as count_1"}
{"input": "", "instruction": "我想询问关于F5 Load Balancer的应用性能数据。您是否需要帮助寻找其他信息或进行其他操作？", "output": "appname:loadbalancing tag:f5 from | stats count() by loadbalancing.listenervs_ip"}
{"input": "", "instruction": "我想问最近 F5 设备上的负载均衡器出现紧急情况的数量。", "output": "appname:loadbalancing tag:f5  loadbalancing.severity:emerg|stats count() as count_1"}
{"input": "", "instruction": "我想询问 F5 Load Balancer 报警数量的统计数据。请问这是关于哪个应用的报警信息吗？", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:alert|stats count() as count_1"}
{"input": "", "instruction": "我想问有关 F5 Big-IP LTM 模块的应用 Load Balancer 报告错误时需要执行哪些统计分析。", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:error |stats count() as count_1"}
{"input": "", "instruction": "我想问有没有在 F5 BIG-IP 设备上发现应用名称为 \"loadbalancing\"、标签为 \"f5\"、严重性级别为 \"crit\" 的加载平衡错误的统计信息吗？", "output": "appname:loadbalancing tag:f5 loadbalancing.severity:crit |stats count() as count_1"}
{"input": "", "instruction": "我想问的是 F5 负载均衡器的使用情况，您好像没有提到它。您能再重复一遍吗？", "output": "appname:loadbalancing tag:f5 loadbalancing.src_ip:* *vpn*|stats count()"}
{"input": "", "instruction": "我想询问dptech防火墙产品的用户数量以及他们所在国家分布情况的信息。", "output": "((* AND appname:firewall) AND tag:dptech)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "", "instruction": "应用名称为 `Oracle`，标签为 `oracle_alert_log` 的日志数据进行统计并按 `oracle.ora_code` 分组计算数量。", "output": "appname:oracle tag:oracle_alert_log |stats count() by oracle.ora_code "}
{"input": "", "instruction": "我想要知道有多少条关于 Oracle Listener 的日志，并且根据这些日志中的连接字符串（SID）进行分组并计算数量。", "output": "appname:oracle tag:oracle_listener_log  | stats count() by oracle.conn_str.SID"}
{"input": "", "instruction": "我想询问有关某些应用、标记和会话结束原因的记录数。", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.msg.reason"}
{"input": "", "instruction": "我需要知道hillstone防火墙应用的使用情况和流量特征的信息，包括但不限于以下方面：每个防火墙协议上总共发送或接收了多少字节的数据；从哪些 IP 地址发出或接收到数据等。", "output": "appname:firewall AND tag:hillstone AND \"session end\"  |stats count() as total by firewall.flow.proto"}
{"input": "", "instruction": "我想问的是，在有多少个连接被源自哪些城市的机器访问到了我们的服务器？", "output": "appname:firewall AND tag:hillstone AND \"session end\" |stats count() as total by firewall.flow.dst_ip.geo.city"}
{"input": "", "instruction": "我想根据应用名称为“防火墙”且标记包含“Dell”的事件数进行汇总并按严重性分组的查询。", "output": "appname:firewall AND tag:dell |stats count() as total by firewall.severity "}
{"input": "", "instruction": "我想问的是公司的checkpoint防火墙有哪些接口被攻击最多？请帮忙把这些信息列出來。", "output": "(* AND appname:firewall) AND tag:checkpoint | stats count() by firewall.interface"}
{"input": "", "instruction": "我想问以下信息：在应用名为“fortress”并且标签包含“shterm”的主机中，统计各facility出现的总次数。", "output": " appname:fortress tag:shterm  | stats count() as total by fortress.facility"}
{"input": "", "instruction": "我想要知道在哪些城市有大量的访问我的网站的用户，以及他们所在的经纬度是什么样的。请帮我把这些数据统计一下。", "output": "appname:ips  tag:nsfocus | stats count() by ips.src.geo.city,ips.src.geo.longitude,ips.src.geo.latitude, ips.dst.geo.city"}
{"input": "", "instruction": "我想问的是，在有多少个 IP 消耗了大量流量的用户属于不同等级？", "output": "appname:ips  tag:nsfocus | stats count() by ips.level"}
{"input": "", "instruction": "我想问的是，在有多少个不同的 IP 漏洞被 H3C 这个安全产品所修复？", "output": "appname:ips tag:h3c | stats count() as cnt by ips.cve"}
{"input": "", "instruction": "我想问的是 VPN 用户在使用过程中是否会进行认证，以及如果有的话，用户的地理位置信息是如何被记录和使用的。", "output": "appname:vpn tag:cisco vpn.user:* \"authentication\" |stats count() as cnt by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "", "instruction": "我想询问 VPN 活跃用户的数量以及他们的地理位置分布情况。", "output": "appname:vpn AND tag:h3c |stats count(vpn.src_ip) by vpn.src_ip,vpn.src.geo.latitude,vpn.src.geo.longitude,vpn.dst_ip,vpn.dst.geo.latitude,vpn.dst.geo.longitude"}
{"input": "", "instruction": "我想问有关zdns应用的DNS解析失败情况的信息。", "output": "appname:dns tag:zdns dns.rcode:NXDOMAIN|stats count() as count_ "}
{"input": "", "instruction": "我想问有没有在DNS相关的应用中找到名称解析错误的次数统计信息。这条日志中的信息显示，在某次DNS查询过程中，NAME服务器返回的状态码为NOERROR，因此没有出现任何错误。", "output": "appname:dns tag:zdns dns.rcode:NOERROR |stats count() as count_ "}
{"input": "", "instruction": "我想要知道有多少个DNS请求被标记为DHCPACK的统计数量。", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPACK|stats count()"}
{"input": "", "instruction": "我想要知道有多少个 DNS 查询请求使用 DHCP 请求类型发送过来。请帮我把这个统计结果打印出来。", "output": "appname:dns tag:zdns dns.dhcp_req_type:DHCPREQUEST|stats count()"}
{"input": "", "instruction": "我想统计所有审核策略中用户登录数量的分布情况", "output": "appname:oracle AND tag:audit oracle.policy:*|stats count() as cn by oracle.policy,oracle.login_user"}
{"input": "", "instruction": "我想问的是关于Oracle数据库的一些信息，比如连接数、错误率等。", "output": "appname:oracle AND tag:listener oracle.msg:TNS*|stats count() as cn by oracle.msg"}
{"input": "", "instruction": "我想要知道在 appname 为 oracle, tag 为 incident | stats count() as cn 的问题中，你想表达什么意思吗？你可以先简要概括一下你的需求，然后再和我交流。", "output": "appname:oracle  tag:incident|stats count() as cn "}
{"input": "", "instruction": "我想问的是：从 ddoser 服务中，统计出攻击标记为 `nsfocus` 的次数并以此列出。", "output": "appname:ddos tag:nsfocus | stats count() by ddos.attack_type"}
{"input": "", "instruction": "首先从名为 `nsfocus` 的索引中选择源类型为 `ddos*` 的所有记录，然后使用 `tag=` 过滤器将结果限制为包含 `attack_type` 的记录。接着，它使用 `stats` 命令计算出 `src_ip`, `latitude`，`longitude` 和 `dst_ip` 字段的值出现的次数，并按这些值进行分组。最后，该命令返回一系列统计信息，包括grouped field 的数量以及每个 group 中各个计数器的值。", "output": "appname:ddos tag:nsfocus ddos.attack_type:* | stats count() by ddos.src_ip,ddos.src.geo.latitude,ddos.src.geo.longitude,ddos.dst_ip,ddos.dst.geo.latitude,ddos.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是，在过去一小时里，有多少人使用了哪些应用进行了登录或者统计信息的获取？", "output": "appname:loadbalancing tag:piolink loadbalancing.type:login|stats count() by loadbalancing.username"}
{"input": "", "instruction": "我想问有关 Juniper Firewall 源站（source zone）中流量的统计信息。请问这是关于哪个应用（application）的信息呢？", "output": "appname:firewall  tag:juniper |stats count() by firewall.src_zone"}
{"input": "", "instruction": "我想问的是，公司的防火墙有哪些流量被转发到了国外？可以列出所有的国家吗？如果不能列举所有国家，至少能列举几个比较重要的国家吗？", "output": "appname:firewall  tag:juniper |stats count() by firewall.dst_zone"}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：- 来源于 appname:firewall- 有 tag:juniper- 以 firewall.policy 为维度统计数量", "output": "appname:firewall tag:juniper |stats count() by firewall.policy"}
{"input": "", "instruction": "我想要知道有多少条记录满足条件：`appname: firewall AND tag: juniper`。您能再精炼一点吗？", "output": "appname:firewall  tag:juniper |stats count() by firewall.proto"}
{"input": "", "instruction": "我想要知道有多少台设备的防火墙服务使用的是Juniper软件。请告诉我总共有多少台设备正在运行这个应用和标签组合。", "output": "appname:firewall  tag:juniper |stats count() as total  by firewall.service"}
{"input": "", "instruction": "我想问以下信息：1、应用名称为“firewall”的应用；2、标签（tag）为“juniper”的记录；3、需要统计各源和目的区域（firewall.src_zone 和 firewall.dst_zone）之间的流量数量（count()），并将总数汇总。", "output": "appname:firewall tag:juniper | stats count() as total by firewall.src_zone,firewall.dst_zone"}
{"input": "", "instruction": "我想要知道有哪些应用在使用 juniper 和 statsd 来做监控和数据采集，并且能够按协议分组统计 IP 次数。", "output": "appname:ips tag:juniper|stats count() by ips.proto"}
{"input": "", "instruction": "我想要知道有哪些攻击类型最多的IP地址和数量。请帮我把这些信息打印出来。", "output": "appname:ips AND tag:juniper|stats count() by ips.attack_type"}
{"input": "", "instruction": "我想要知道有哪些IP地址访问过juniper，并且使用了哪些策略。请帮我把这些信息列出。", "output": "appname:ips AND tag:juniper|stats count() by ips.policy"}
{"input": "", "instruction": "我想要知道 nginx 访问统计中，按中间件 http_user_agent.os 分组后，请求数目最多的操作系统是什么。", "output": "appname:nginx tag:access|stats count() by middleware.http_user_agent.os"}
{"input": "", "instruction": "我想跟踪网站的访问量和用户代理信息，所以你的查询应该涉及到以下几个方面：1. nginx 服务器上的应用名为 `nginx`；2. 涵盖的标签包括 `access`；3. 需要计算的统计指标是访问次数（count）；4. 根据字段 `middleware.http_user_agent.browser`，对结果进行分组汇总。因此，根据上述分析，您的问题应该是“在 Nginx 服务器上，从 access 日志中统计所有请求数并按浏览器类型分组”。", "output": "appname:nginx tag:access |stats count() by middleware.http_user_agent.browser"}
{"input": "", "instruction": "我想问的是 nginx 服务的错误日志数量统计，按中间件的请求进行分组。", "output": "appname:nginx tag:error |stats count() as cnt by middleware.request"}
{"input": "", "instruction": "我想问的是 nginx 服务的错误数量统计，按中间件的不同级别进行分组。", "output": "appname:nginx tag:error |stats count() as cnt by middleware.error_level"}
{"input": "", "instruction": "帮我编写日志易查询语句。我需要统计 appname 为 \"ids\"、tag 为 \"snort\" 的事件的严重性 ID 分组后，计算每个分组中的数量。", "output": "appname:ids tag:snort |stats count() by ids.severity_id"}
{"input": "", "instruction": "通过 Firewall 应用筛选出 novel 标签的流量事件并统计数量。", "output": "appname:firewall tag:novel AND firewall.event_type:traffic | stats count() as 'novel_traffic事件总数'"}
{"input": "", "instruction": "请帮忙把 novel 防火墙的日志量统计一下，并按不同的 action 分组显示出来。", "output": "appname:firewall tag:novel | stats count() by firewall.action"}
{"input": "", "instruction": "寻找一种方法来获取名为“ Firewall”、标记为“ novel ”的应用的数据以及发生的事件类型数量的统计结果。", "output": "appname:firewall tag:novel | stats count() by firewall.event_type"}
{"input": "", "instruction": "我想问有关 VPN（虚拟私人网络）应用“FortiClient”的不同事件级别的数量统计信息。", "output": "appname:vpn tag:fortinet | stats count() by vpn.event_level"}
{"input": "", "instruction": "我想问的是，在 VMware 日志中使用了哪些标签？请列出每个标签的数量和名称。并按数量从大到小排序。", "output": "appname:vmware AND tag:* |stats count() as cnt by tag"}
{"input": "", "instruction": "我想问关于 VMware 应用的统计信息，例如错误数量和严重级别。", "output": "appname:vmware | stats count() as cnt by vmware.level"}
{"input": "", "instruction": "我想问有没有在 Linux 日志中发生过“用户删除事件”的相关统计信息：一个以时间为维度、按主机名对结果进行排序并返回每小时内发生的次数的直方图。", "output": "appname:linux tag:linux linux.event_name:用户删除事件 |  timechart span=1h count() by hostname"}
{"input": "", "instruction": "我想要知道有多少人次在使用 Linux 进行了用户创建操作。请告诉我这些操作的数量。", "output": "appname:linux tag:linux linux.event_name:创建用户事件 | stats count()"}
{"input": "", "instruction": "我想问的是，在 Linux 下，有多少触发生成“密码修改事件”的日志呢？", "output": "appname:linux tag:linux linux.event_name:密码修改事件 | stats count()"}
{"input": "", "instruction": "我想问的是 firewall这个应用的 action为 deny的日志有几条吗？请帮忙统计一下。", "output": "appname:firewall firewall.action:Deny| stats count()"}
{"input": "", "instruction": "我想问 VPN 应用的登录次数。", "output": "appname:vpn Log in|stats count()"}
{"input": "", "instruction": "我想问 VPN（虚拟专用网）应用的用户在退出时会产生多少条记录以及这些记录中成功和失败两种结果的统计。", "output": "appname:vpn Log out|stats count() as cnt by vpn.result"}
{"input": "", "instruction": "帮我做 DNS 查询的日志分析吧，统计不同的搜索类型和数量，具体步骤是：\n1. appname:dns tag:bind9 - 此条记录表示BIND9在处理DNS请求\n2. stats count() as cnt by dns.search_type - 此处使用stats命令来统计不同类型的搜索次数。", "output": "appname:dns tag:bind9 |stats count() as cnt by dns.search_type"}
{"input": "", "instruction": "我想问的是：在有多少条记录的事件等级为“危险”并且包含两个标签“hillstone”和“appname:waf”。", "output": "appname:waf AND tag:hillstone waf.event_level:危险！|stats count()"}
{"input": "", "instruction": "我想问的是，思科的ACS系统的认证失败事件中有哪些错误码呢？", "output": "appname:acs tag:cisco acs.event_name:认证失败事件|stats count() as cnt by acs.authen_failure_code"}
{"input": "", "instruction": "我想问有没有遇到过acs应用的写入失败事件，并且统计出数量并按用户进行分组。", "output": "appname:acs tag:cisco acs.event_name:写入失败事件|stats count() as cnt by acs.user"}
{"input": "", "instruction": "寻找与 Cisco ACS（Authentication, Authorization, and Accounting）相关的认证成功事件数量以及这些事件被分组后各自的数量。", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() as cnt by acs.group_name "}
{"input": "", "instruction": "在ACS应用中，通过“认证成功事件”标签筛选出所有记录，并统计每个用户的数量。", "output": "appname:acs tag:cisco acs.event_name:认证成功事件 |stats count() as cnt by acs.user  "}
{"input": "", "instruction": "我想询问ACS应用的日志中，有关账户统计的信息，并按账号标记和状态列出数量。。", "output": "appname:acs tag:account|stats count() as cnt by acs.acct_flags "}
{"input": "", "instruction": "我想要知道有多少条记录符合条件的路由器类型为 Cisco 和 应用名称为 Router 的日志。", "output": "appname:router tag:cisco | stats count() as cnt by router.log_type"}
{"input": "", "instruction": "我正在查看有关防火墙应用、标记为 netscreen 的记录数量以及每个系统信息 ID 的统计数据。", "output": "appname:firewall tag:netscreen |stats count() as cnt by firewall.sys_info_id "}
{"input": "", "instruction": "我想问有关 `appname:firewall tag:netscreen` 消息的网络防火墙流量统计情况。", "output": "appname:firewall tag:netscreen |stats count() as cnt by firewall.sys_notify_traffic"}
{"input": "", "instruction": "我想询问有关防火墙的消息协议统计信息。", "output": "appname:firewall  |stats count() by firewall.msg.proto"}
{"input": "", "instruction": "我想过滤 juniper VPN 的日志中记录的 started 动作，并按登录用户统计其数量。", "output": "appname:vpn tag:juniper vpn.action:started|stats count() by vpn.login_user"}
{"input": "", "instruction": "我想询问 VPN 服务的应用名称为“VPN”且标记为Juniper VPNs的事件中包含的目标主机有哪些？", "output": "appname:vpn tag:juniper vpn.action:started|stats count() by vpn.dst_nt_host"}
{"input": "", "instruction": "我想问的是 VPN 服务端的认证失败情况，只统计不同认证目标地址的失败次数？", "output": "appname:vpn tag:juniper vpn.action:failed |stats count() by vpn.auth_dst"}
{"input": "", "instruction": "我想问的是 VPN 服务的连接启动情况，你能不能告诉我最近有多少个IP 地址使用 JuniperVPN 服务登录到我们的服务器呢？", "output": "appname:vpn tag:juniper vpn.action:started|stats count() by vpn.src_ip"}
{"input": "", "instruction": "寻找有关应用名称为“中间件”且标记包含“IIS”的事件，按目标 IP 地址统计的数量。", "output": "(appname:middleware tag:iis) | stats count() by middleware.src_ip,middleware.dst_ip"}
{"input": "", "instruction": "我需要知道防火墙中有哪些端口被拒绝访问的情况，并且按目的地和协议分别统计数量。", "output": "appname:firewall tag:tos firewall.type:pf firewall.msg:Reject | stats count() by firewall.dst_port,firewall.proto"}
{"input": "", "instruction": "我想询问tos防火墙的统计数据，它根据源 IP 和目的 IP 分组并计算数量。", "output": "appname:firewall tag:tos firewall.type:secure|stats count() by firewall.src_ip,firewall.dst_ip"}
{"input": "", "instruction": "我在寻找有关防火墙应用、标记为“ToS”的条目以及其类型为“安全”的源 IP 地址归属国家的信息。", "output": " (appname:firewall tag:tos firewall.type:secure)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "", "instruction": "我想跟踪某些服务器的安全性问题，所以我可能想要知道有多少fortress日志记录了 sshd 防护类的 Accepted 关键字，并按用户分组进行数量统计。", "output": "appname:fortress tag:shterm fortress.type:sshd Accepted|stats count() by fortress.username"}
{"input": "", "instruction": "名称为“Fortress”，具有标签“shterm”，并且属于类型为“CROND”的日志中，统计按用户和操作的分组数。", "output": "appname:fortress tag:shterm fortress.type:CROND|stats count() as cnt by fortress.user,fortress.action "}
{"input": "", "instruction": "我想要知道windows在哪些级别的系统日志中有多少条记录。", "output": "appname:pf_windows |stats count() as cnt by windows.System.Level"}
{"input": "", "instruction": "我想问以下信息：在应用为 pf_windows 下的日志中，统计每个 Windows 系统级别的信息数量并按数量进行分组。", "output": "appname:pf_windows tag:application|stats count() as cnt by windows.System.Level "}
{"input": "", "instruction": "我想问的是，在这个应用的访问量有多少次？", "output": "appname:pf_tomcat |stats count() as count_"}
{"input": "", "instruction": "我想问以下信息：从`pf_tomcat`索引中统计`tomcat.ua.os`字段出现次数并将结果以`cnt`为别名进行分组统计。", "output": "appname:pf_tomcat |stats count() as cnt by tomcat.ua.os "}
{"input": "", "instruction": "我想问以下信息：统计`pf_tomcat`应用下的所有访问记录中，通过`tomcat.ua.browser`字段进行分组后，计算每个分组内请求数量并返回结果。", "output": "appname:pf_tomcat |stats count() as cnt by tomcat.ua.browser "}
{"input": "", "instruction": "我想问 Nginx 状态码统计信息的数量。", "output": " (appname:pf_nginx)  |stats count() as ct by nginx.status "}
{"input": "", "instruction": "我想问 Nginx 应用的错误统计数量，按 Nginx 事件分组并计算总数。", "output": "appname:pf_nginx tag:error|stats count() as cnt by nginx.event "}
{"input": "", "instruction": "帮我进行 Nginx 服务器的错误和来源IP统计报告的查询。", "output": "appname:pf_nginx tag:error|stats count() as cnt by nginx.src_ip"}
{"input": "", "instruction": "我想要知道有多少次result为 true 的网关访问。请帮我把这个统计结果打印出来。", "output": "appname:pf_gateway gateway.result:true|stats count()"}
{"input": "", "instruction": "我想问的是，最近 NTA 设备日志里有没有人在使用 web 漏洞进行攻击的记录呢？如果有的话，他们可能是在哪些来源和目标IP对上被发现的呢？", "output": "appname:nta tag:eve nta.alert.category:Web*|stats count() as cnt by nta.src_ip,nta.dst_ip"}
{"input": "", "instruction": "我想要知道哪些端口被访问过。请帮我从 NTA 事件日志中把这些信息列出来。", "output": "appname:nta AND tag:eve nta.dst_port:*|stats count() as cnt by nta.dst_port"}
{"input": "", "instruction": "我想要知道服务名为“nta”的应用，并且包含标签为“eve”的日志里，每个源IP和目的IP之间的流量统计情况。", "output": "appname:nta AND tag:eve nta.src_ip:* nta.dst_ip:*|stats count() as cnt by nta.src_ip,nta.dst_ip"}
{"input": "", "instruction": "我想问的是nginx的状态码统计情况。", "output": "appname:nginx|stats count()"}
{"input": "", "instruction": "我想问的是 nginx 服务的统计信息，比如总共有多少次请求、分别访问了哪些页面路径、最常用的服务器等等。", "output": "appname:nginx|stats count() as '访问次数' by middleware.server, middleware.path"}
{"input": "", "instruction": "我想要知道网站的访问人数和地区分布情况。", "output": "appname:nginx|stats count() as '用户来源分布' by middleware.src_ip.geo.city"}
{"input": "", "instruction": "我想问在“hundsun”的应用日志中出现的所有错误，按错误号分组统计数量。", "output": "appname:hundsun tag:error  appname:hundsun|stats count() as count_1 by middleware.error_no"}
{"input": "", "instruction": "我想搜索“hundsun”和“tag：error”这两个关键词，并统计出总共出现的次数。", "output": "appname:hundsun tag:error | stats count()"}
{"input": "", "instruction": "我想问以下信息：在 hundsun 应用中，错误类型为“tag:error”的数量统计结果按中间件系统错误码分组后每种类型的数量。", "output": "appname:hundsun tag:error  appname:hundsun |stats count() by middleware.System_errno "}
{"input": "", "instruction": "我想要知道网站 apache 有多少次访问。", "output": "appname:apache tag:access |stats count() as count_"}
{"input": "", "instruction": "我想问有关 WebLogic 中间件的统计数量的信息。", "output": "appname: weblogic | stats count() by middleware.subsystem"}
{"input": "", "instruction": "帮我查找关于 WebLogic 服务的错误统计数据，并按严重级别分组？", "output": "appname:weblogic|stats count() by middleware.severity"}
{"input": "", "instruction": "我想问的是 weblogic 服务的访问量有多少条记录吗？", "output": "appname:weblogic tag:access |stats count() as count_"}
{"input": "", "instruction": "我想问的是，在这个时间段内，有多少条消息属于搜索、警报、计划和报告这四类吗？", "output": "appname:frontend_frontend_log  AND  (frontend.message.category:search OR frontend.message.category:alert OR frontend.message.category:schedule OR frontend.message.category:report) |stats count() by frontend.message.category"}
{"input": "", "instruction": "我想询问有关 TDA 威胁情况，并希望通过对其协议进行分组和统计来获取相关信息。", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.proto"}
{"input": "", "instruction": "我想问的是，最近有没有发现新的挑战或威胁吗？如果有的话，分别在哪些应用上出现的比较多？", "output": "appname:tda AND 'tag':threats |stats count() as cnt by tda.threats_type_group"}
{"input": "", "instruction": "我想要知道有多少个应用名称为“tda”并且标签包含“yaxin”的行为数据。", "output": "appname:tda tag:yaxin | stats count() as cnt by tda.act"}
{"input": "", "instruction": "在`appname:loadbalancing`中，有多少条记录符合条件`\"tag\"='h3c'`并且以`loadbalancing.dst_ip`为分组依据。", "output": "appname:loadbalancing tag:h3c | stats count() as cnt by loadbalancing.dst_ip"}
{"input": "", "instruction": "我想问的是，在某应用的某条业务线（tag）下，同一用户有几个请求被调度到了不同实例上去。", "output": "appname:loadbalancing tag:h3c | stats count() as cnt by loadbalancing.user"}
{"input": "", "instruction": "我想问有没有在我的 Huawei USG6650 防火墙日志中找到被允许通过的记录，告诉我有多少。", "output": "appname:firewall AND tag:huawei_USG6650 firewall.brief:/.*PERMIT.*/| stats count() as cnt  "}
{"input": "", "instruction": "Huawei USG6650 设备在防火墙audit log 中出现 DENY 规则的次数。", "output": "appname:firewall AND tag:huawei_USG6650 firewall.brief:/.*DENY.*/| stats count() as cnt  "}
{"input": "", "instruction": "我想寻找有关“FortiGate”应用、具有“tag： fortinet”标记且属于VPN子类型的所有记录的统计信息（即计数）。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count()"}
{"input": "", "instruction": "我想问有关fortinet 防火墙产品的用户数、VPN连接数量以及它们的IP地址的信息。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.remip,firewall.locip"}
{"input": "", "instruction": "我想问使用了 Fortinet 安全产品的用户数量以及他们访问网站时使用的 IP 地址和城市位置等信息。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.rem_ip.geo.country,firewall.rem_ip.geo.province,firewall.rem_ip.geo.city"}
{"input": "", "instruction": "我想要知道有多少用户使用了 FortiGate VPN 服务并进行了访问。请提供相关统计信息。", "output": "appname:firewall tag:fortinet  firewall.subtype:vpn | stats count() as cnt by firewall.user"}
{"input": "", "instruction": "我希望通过搜索 syslog_app2 标签的登录事件数量，按 esxi.sys_time、hostname 和 esxi.user 分组并统计数量。", "output": "appname:esxi  tag:syslog_app2 login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "", "instruction": "我想问的是，在有多少人使用了哪些人登录了交换机？", "output": "appname:switch  tag:h3c |stats count() as cnt by switch.user"}
{"input": "", "instruction": "我想要知道有多少条关于 vpn 和 leadsec 标签的日志。", "output": "appname:vpn tag:leadsec |stats count() as cnt  by 'vpn.日志类型'"}
{"input": "", "instruction": "我想要知道有多少条带有 \"vpn\" 和 \"leadsec\" 标签的 VPN 应用的日志，并按 \"VPN 日志类型\", \"设备名称\", \"用户\", \"日志消息\" 分组，然后计算每个分组中的行数。", "output": "appname:vpn tag:leadsec |stats count() as cnt  by 'vpn.日志类型','vpn.设备名','vpn.用户','vpn.日志消息' "}
{"input": "", "instruction": "我想问 VPN 服务的应用名称、标签为 leadsec_service 的应用数量以及每个应用的访问次数。这条查询语句使用了日志易SPL（Search Processing Language）语法并进行了统计分析。", "output": "appname:vpn tag:leadsec_service | stats count() as cnt by  'vpn.服务名','vpn.访问次数'"}
{"input": "", "instruction": "我想问的是：在有多少个攻击流量是从哪里发出的？", "output": "appname:ddos | stats count() as cnt by ddos.direction"}
{"input": "", "instruction": "我想问的是，最近有没有大流量攻击的情况吗？你能不能把这些情况列举出来，并按类型和地区进行统计呢？", "output": "appname:ddos | stats count() as cnt by ddos.category"}
{"input": "", "instruction": "我想问的是：在 ddos 攻击的过程中，有哪些类型的事件会被记录下来呢？请列举出这些类型，并给出相应的统计结果。", "output": "appname:ddos | stats count() as cnt by ddos.event_type"}
{"input": "", "instruction": "我想要知道有多少台设备上安装了 Endpoint Printing 服务的 WebSense 产品。请告诉我这些设备的数量以及它们被检测到的次数。", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Printing\") | stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录符合以下条件：appname:dlp tag:websense AND (dlp.service:\"Endpoint HTTPS\" OR dlp.service:\"Endpoint Web\") | stats count() as cnt", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint HTTPS\" OR dlp.service:\"Endpoint Web\") | stats count()"}
{"input": "", "instruction": "我想要知道有多少条记录满足以下条件：- appname为dlp- tag为websense- dlp.service包含\"Endpoint Email\"可以把它们连接起来使用OR（|）符号，并计算满足所有条件的记录数量。这就是我的查询语句。", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Email\") | stats count()"}
{"input": "", "instruction": "我想问有关 WebSense 和 DLP（数据丢失防护）的功能如何协同工作的信息：寻找与应用名为“Dolphin”和标记为 WebSense 的文件相关的所有事件。此外，您还希望仅包括 Endpoint Removable Media 服务的 DLP 事件。因此，您的完整查询应该类似于以下内容：    appname:dolphin tag:websense dlp.service:\"Endpoint Removable Media\"    |stats count() by _time这将返回在指定时间范围内与给定应用、标记和服务组合匹配的文件数。", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Removable Media\") | stats count()"}
{"input": "", "instruction": "我想要知道有多少台设备上安装了 Endpoint Web 服务的 DLP 应用，并且被标记为 websense。请告诉我这个统计结果。", "output": "appname:dlp tag:websense AND (dlp.service:\"Endpoint Web\") | stats count()"}
{"input": "", "instruction": "我想询问有关 SonicWall Firewall 的应用和协议的数量。", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.proto"}
{"input": "", "instruction": "我想问有关 SonicWall Firewall 的应用和标签为 \"sonicwall\" 的条目数。", "output": "appname:firewall AND tag:sonicwall |stats count() by firewall.fw_ip "}
{"input": "", "instruction": "我想问的是 firewall 这个应用有没有和 sonicwall 有关的Dropped包数量统计信息。请帮忙检查一下吧！", "output": "appname:firewall AND tag:sonicwall \"dropped\" | stats count()"}
{"input": "", "instruction": "帮我编写一个 SonicWall Firewall 的查询语句。有关 SonicWall 防火墙的应用名为 firewall 和标记为 sonicwall 的记录中检测到的扫描活动的数量。", "output": "appname:firewall AND tag:sonicwall \"scan detected\" |stats count()"}
{"input": "", "instruction": "我想问的是最近几个月内，公司的防火墙有没有被入侵或者拒绝服务攻击过吗？", "output": "appname:firewall AND tag:sonicwall \"denied\" |stats count()"}
{"input": "", "instruction": "我想询问 SonicWall Firewall 应用的流量和规则统计信息。请问还有其他需要帮助的信息吗？如果没有，那么你可以在我的回复后跟随提示进行数据查询操作。", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.rule "}
{"input": "", "instruction": "我想问的是，公司有哪些使用 SonicWall 安全产品的应用？请列举三款以上的应用名称。同时，请根据我的要求将结果按优先级排序并返回给我。", "output": "appname:firewall AND tag:sonicwall | stats count() by firewall.pri_cn,firewall.pri"}
{"input": "", "instruction": "我的问题可能涉及到数据分析和可视化方面的问题，我希望通过某种方式将 SonicWall 防火墙的访问记录进行分析并生成相应的统计图表或地图。", "output": "appname:firewall tag:sonicwall| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是，公司的防火墙有哪些漏洞被黑客利用了吗？你能不能告诉我一下具体情况吗？", "output": "appname:firewall tag:sonicwall  \"dropped\"| stats count() by firewall.src.geo.city, firewall.src.geo.latitude, firewall.src.geo.longitude, firewall.dst.geo.city, firewall.dst.geo.latitude, firewall.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是：在过去的24小时里，有多少个来自于“阿鲁巴接入点”并且带有“Aruba访问点”标签的警告级别为“访问点”的应用日志吗？", "output": "appname:access_point AND tag:aruba access_point.severity:ALERT | stats count()"}
{"input": "", "instruction": "帮我查找 Aruba AP 报错的情况数量。你好像在告诉我要使用 `appname:access_point` 和 `tag:aruba`，然后将 `access_point.severity:ERRS` 作为筛选条件并使用 `stats count() as cnt` 来统计结果数量。", "output": "appname:access_point AND tag:aruba access_point.severity:ERRS | stats count()"}
{"input": "", "instruction": "帮我创建一段 SPL 查询语言，用于统计访问点 appname 为 \"access_point\" 和标签为 \"aruba\" 的设备中所有 severity 级别为 EMERG 的日志数量。", "output": "appname:access_point AND tag:aruba access_point.severity:EMERG | stats count()"}
{"input": "", "instruction": "我想问的是最近几分钟有没有流量过大或者异常的情况发生。", "output": "appname:stb stb.kvmsg.cmd:lag|stats count() as count_"}
{"input": "", "instruction": "我想问的是，legendsec有多少个不同的安全等级的日志？", "output": "appname:ips tag:legendsec | stats count() as cnt by ips.msg.seclevel"}
{"input": "", "instruction": "我想要知道legendsec有多少个不同的协议。", "output": "appname:ips tag:legendsec| stats count()  as a by ips.proto"}
{"input": "", "instruction": "我想要知道legendsec IPS在哪个城市的用户访问量最高。请帮我把这些信息列出来。", "output": "appname:ips tag:legendsec|  stats count() by ips.src.geo.city"}
{"input": "", "instruction": "我想问的是，在 appname 是 apt 的时候，tag 是 dbappsecurity 的情况下，安全等级是“低”的事件有多少个？", "output": "appname:apt tag:dbappsecurity apt.level:\"低\" | stats count()"}
{"input": "", "instruction": "我想问的是，在最近一段时间里，有多少次不同类型的APT安全问题发生？", "output": "appname:apt tag:dbappsecurity  | stats count() as cnt by apt.attack_type"}
{"input": "", "instruction": "我想问有关 Hillstone 技术支持部门的一些信息，比如最近处理了多少个严重级别为 Medium 的事件。", "output": "appname:bds tag:hillstone bds.severity:Medium| stats count()"}
{"input": "", "instruction": "我想要知道在 appname 为 \"bds\" 和 tag 为 \"hillstone\" 的请求中，共有多少条数据。请帮我把这些信息统计一下。", "output": "appname:bds tag:hillstone | stats count() as cnt by bds.proto"}
{"input": "", "instruction": "我想问的是，在 appname 是 bds, tag 是 hillstone, severity 为 High 或更高级别的错误时，有多少条数据出现过？", "output": "appname:bds tag:hillstone bds.severity:High| stats count()"}
{"input": "", "instruction": "我想要知道在 appname 为 \"bds\"、tag 为 \"hillstone\" 和 severity 大于等于 Medium 的日志中共有多少条记录。", "output": "appname:bds tag:hillstone bds.severity:Medium| stats count()"}
{"input": "", "instruction": "我想要知道有多少条包含“tdp”和“threatbook”的日志。请帮我把它们统计一下。", "output": "appname:tdp tag:threatbook | stats count()"}
{"input": "", "instruction": "我想问的是 Citrix XenServer 在哪些地方发生错误或者异常的情况，以及这些问题出现的频率有多高。", "output": "((* AND tag:xenserver) AND appname:citrix) |stats count() by xenserver.facility "}
{"input": "", "instruction": "统计一下日志数量，输出日志的软件名称为“UninXG”，并且使用了“LeagSoft”这个标签进行标记。同时，这些错误信息被记录在名为`userAuthInfo`的类型中，并且结果类型为“失败”。", "output": "appname:uninxg tag:leagsoft (uninxg.log_type:userAuthInfo AND uninxg.iresulttype:\"失败\") | stats count()"}
{"input": "", "instruction": "我想问有关 Symantec 消息网关和 sudo 模块的统计信息。", "output": "(appname:mail_gateway AND tag:symantec)  mg.module:sudo* |stats count() as cnt by mg.msg.USER"}
{"input": "", "instruction": "我想问有关在Antiyvirus应用中搜索“Trend Micro”标签的趋势的信息，对吗？", "output": "appname:antivirus tag:trendmicro  | stats count() as cnt by dsm.event_name"}
{"input": "", "instruction": "我想要知道有多少条包含 appname:dbaudit 和 tag:dbappsecurity 这两个关键词的记录，并且它们的 level 是 Info 或 Warn。", "output": "(appname:dbaudit AND tag:dbappsecurity) dbaudit.level:\"中\" |stats count()"}
{"input": "", "instruction": "我想问的是数据库审计是否存在安全漏洞的情况，所以我的问题应该是：（应用名称为“dbaudit”并且标签包含“dbappsecurity”）|stats count() as cnt by dbaudit.alert_type", "output": "(appname:dbaudit AND tag:dbappsecurity) | stats count() as cnt by dbaudit.alert_type"}
{"input": "", "instruction": "我想问的是，在这个时间段内，有哪些应用名称叫做“skyeye”并且打上了“qianxin”标签的攻击类型被统计过次数最多的一条记录是什么？", "output": "appname:skyeye tag:qianxin |stats count() as cnt by skyeye.attack_name"}
{"input": "", "instruction": "我想问如何编写一个查询以获取关于企业应用 \"BB\"、标签为 \"mail\" 和发送方包含 \"*\"（星号）的条目数。", "output": "appname:bb tag:mail bb.sender:* | stats count()"}
{"input": "", "instruction": "我想问的是，在应用名为“oracle”并且标签包含“max_session”的实例中，有多少个会话数最多？", "output": "appname:oracle tag:max_session | stats count() as cnt by oracle.VALUE | stats first(oracle.VALUE) as max_session"}
{"input": "", "instruction": "我想要知道在 oracle 应用中，通过审核和统计命令的数量有多高。", "output": "appname:oracle tag:audit|stats count() by audit.command"}
{"input": "", "instruction": "我想问的是 oracle 这个应用的审计和统计信息，您能告诉我有关哪些命令吗？我会尽力为您提供最准确的信息。", "output": "appname:oracle tag:audit|stats count() by audit.command"}
{"input": "", "instruction": "我想问的是 Oracle 这个应用在上一次安全审计中有没有统计出 OS 用户的数量和他们所做的操作，并且把这些信息记录下来。", "output": "appname:oracle tag:audit|stats count() by audit.OSUSER"}
{"input": "", "instruction": "我想问的是 Oracle 这个应用有没有 Auditing 模块，并且在最近有多少条记录的程序名叫做 audit.PROGRAM。", "output": "appname:oracle tag:audit |stats count() by audit.PROGRAM"}
{"input": "", "instruction": "我想问的是，有多少人使用了哪些应用，并将搜索词“job”或“stats”与它们的用户数量进行计数。", "output": "appname:oracle tag:job|stats count() by  oracle.LOG_USER"}
{"input": "", "instruction": "我想要知道有多少个不同的攻击名称在使用华为系统的设备上发生过。请告诉我这个统计结果。", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.proto"}
{"input": "", "instruction": "我想问的是，在 app name 为“ac”并且标签为 “surfilter”的用户中，有多少人发送过一条包含事件类型为“im”的信息？", "output": "appname:ac tag:surfilter ac.event_type:im | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想要知道有多少个文件被转移了。请帮我把这些信息统计一下。", "output": "appname:ac tag:surfilter ac.event_type:file_transfer | stats count() as cnt by ac.action"}
{"input": "", "instruction": "查询ac的邮件发送行为（ac.event_type:mail），根据操作类型（ac.action）统计数量并按操作类型分组。", "output": "appname:ac tag:surfilter  ac.event_type:mail | stats count() as cnt by ac.action"}
{"input": "", "instruction": "我想问的是，有多少用户使用了某款应用的邮件功能并添加了 surfilter 标签？", "output": "appname:ac tag:surfilter  ac.event_type:mail | stats count() as cnt by ac.app_name"}
{"input": "", "instruction": "我想询问关于应用“a10”的运行状况报告，以及该应用与标记为“a10”的所有其他应用之间的关系。", "output": "appname:a10 tag:a10 a10.status:down|stats count() as ct by a10.group"}
{"input": "", "instruction": "我想问的是，在用户使用哪些地区的设备访问了我们的应用？以及他们分别从那个地区进入和离开应用的时间点是什么样子的？", "output": "appname:a10 tag:a10 a10.event_type:session| stats count() as cnt by a10.src.geo.country,a10.src.geo.province,a10.src.geo.city"}
{"input": "", "instruction": "我想问的是 VPN 是做什么的，所以我的问题不是“登录”而是“使用”。而且我不知道这个 appname 和 tag 有没有意义，我只关心结果里有多少个不同的国家的人在使用 SANGFOR VPN。", "output": "appname:vpn tag:sangfor vpn.actype:login|stats count()  by vpn.src.geo.country"}
{"input": "", "instruction": "我想问的是，在 Windows 系统中，有哪些事件类型可以被视为“登录”？", "output": "appname:windows windows.event_type:\"登录审计\"   windows.IpAddress:*  NOT windows.IpAddress:\"-\"| stats count() by  windows.event_type"}
{"input": "", "instruction": "我想问的是，在 Windows 系统中，有哪些类型的事件会被归类为“特权使用”呢？你能列举出一些例子吗？", "output": "appname:windows windows.event_type:\"特权使用\" | stats count() by  windows.event_type"}
{"input": "", "instruction": "我想问的是，在我的电脑上有哪些软件正在尝试连接互联网？你可以帮我列出它们的名称和版本号吗？", "output": "appname:windows windows.event_type:\"访问对象\" | stats count() by  windows.event_type"}
{"input": "", "instruction": "我想问的是，在 Windows 10 上有哪些系统策略会生成事件类型为“系统策略”的事件？这个统计结果又如何呈现？", "output": "appname:windows windows.event_type:\"系统策略\" | stats count() by  windows.event_type"}
{"input": "", "instruction": "我想要知道有多少用户在使用 Windows 系统时遇到了错误。请告诉我这些错误的数量。appname：windows AND windows.level：\"Error\" 表示只要消息中包含 appname 为 \"Windows\" 和 level（级别）为 Error 的记录即可。stats count() 命令表示计算出满足上述条件的记录数目并返回。", "output": "appname:windows AND windows.level:\"Error\" | stats count()"}
{"input": "", "instruction": "帮我编写 Windows 系统的应用事件类型为“账户管理”并且统计数量的查询语句。", "output": "appname:windows windows.event_type:\"账户管理\" | stats count() by  windows.event_type"}
{"input": "", "instruction": "我想询问关于VMware vSphere的一些信息，比如最近哪些主机、哪些用户做了备份操作、在哪个时间段进行了备份等等。", "output": "appname:vsphere tag:dmz_backup login|stats count() by esxi.sys_time,hostname,esxi.user"}
{"input": "", "instruction": "我想要知道在NAS中使用Forescout的情况有多少台设备，按分类统计。", "output": "appname:nas tag:forescout | stats count() as cnt by nas.kv.Category "}
{"input": "", "instruction": "我想问有关在 AntiVirus Gateway 应用中搜索带有 officescan 和 antivirus.domain 标记的警报数量的信息。", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats count() as cnt by antivirus.result"}
{"input": "", "instruction": "我想问有关 AntiVirus Gateway 应用的 OfficeScan 服务运行状况的信息，并且希望我能够按操作系统（OS）为维度汇总统计结果数量。", "output": "appname:antivirus_gateway tag:officescan antivirus.domain:*  | stats count() as cnt by antivirus.os"}
{"input": "", "instruction": "帮我进行 App 名称为 bi 的登录事件的统计工作。", "output": "appname:bi AND 'tag':login | stats count()"}
{"input": "", "instruction": "我想问的是，在某个BI应用中，执行语句的次数有多高？", "output": "appname:bi AND 'tag':execute | stats count()"}
{"input": "", "instruction": "我想问的是，在你们公司的网站上有没有人使用过名为“zqtz”的应用访问过我们的网站数据？", "output": "appname:zqtz AND NOT 'csv.remark':\"\" | stats count() by csv.remark"}
{"input": "", "instruction": "我想问的是最近有没有同事在改OA密码啊？", "output": "appname:oa AND 'tag':change_pwd | stats count()"}
{"input": "", "instruction": "我想问的是，在有哪些数据库做了哪些操作？可以根据不同的类型进行分组统计吗？", "output": "appname:dbaudit db.Logtype:* | stats count() as cnt by db.db_name"}
{"input": "", "instruction": "我想问的是数据库中有哪些表叫做 LogType, 没有叫 block的字段。 这个查询结果应该是一个统计数量为1的条目。", "output": "appname:dbaudit db.Logtype:*  NOT db.msg.block:no | stats count()"}
{"input": "", "instruction": "我想问有关newdon防火墙应用的新动态和安全事件的信息，并且要求筛选出其中重要且不那么敏感的消息。", "output": "appname:firewall tag:newdon  NOT firewall.pri:information NOT firewall.pri:debug | stats count() as cnt by firewall.pri"}
{"input": "", "instruction": "我想询问有关防火墙的一些信息，比如应用名称为“firewall”且标记为“newdon”，并且类型为AC的防火墙和状态为拒绝的记录数，并按目的端口、协议进行分组统计。", "output": "appname:firewall tag:newdon firewall.type:ac firewall.status:deny|stats count() by firewall.dst_port,firewall.proto"}
{"input": "", "instruction": "我想问有关的防火墙（tag：newdon）的安全性（firewall.type: secure），并希望了解源IP地址（firewall.src.geo.country）的国家分布情况。", "output": "(appname:firewall tag:newdon firewall.type:secure)  |stats count('firewall.src.geo.country') as count_ by firewall.src.geo.country"}
{"input": "", "instruction": "我想问以下信息：在 appname 为 \"firewall\"、tag 为 \"newdon\" 和 firewall.type 以 secure 分隔的字段中，统计 src_ip 和 dst_ip 次数并以 JSON 格式返回结果。", "output": "appname:firewall tag:newdon firewall.type:secure|stats count() by firewall.src_ip,firewall.dst_ip"}
{"input": "", "instruction": "我想问的是，在有多少个 app 是以 ac 为后缀的，并且其对应的 log type 是 post 的？", "output": "appname:ac tag:qianxin ac.log_type:post  | stats count() as cnt by ac.app"}
{"input": "", "instruction": "我想问 VPN 服务的应用名为“VPN”、标签为“SoftEther VPN”、发生操作为*且结果为失败的所有事件数量。", "output": "appname:vpn tag:softether vpn.action:* vpn.result:Fail |stats count()"}
{"input": "", "instruction": "尝试寻找有关 ESXi、VMware vCenter Server 和 VMware Host Client（HC）应用的任何登录或退出活动的信息。", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.user_agent"}
{"input": "", "instruction": "我想问有关VMware ESXi主机上的主机管理程序（Host Daemon）的错误消息数量的信息。", "output": "appname:esxi AND 'tag':hostd |stats count() as cnt by esxi.log_level"}
{"input": "", "instruction": "我想要知道主机上有哪些服务正在运行，所以我想找出所有与 ESXi 有关的应用的登录信息。", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.src_ip"}
{"input": "", "instruction": "想要知道某个应用（appname）为 ESXi 的主机上运行的 hostd 服务生成的登录和退出事件数量以及这些操作发生时的用户名称（esxi.user）。", "output": "appname:esxi AND 'tag':hostd logged esxi.action:\"logged in\"|stats count() as cnt by esxi.user"}
{"input": "", "instruction": "我想问你有关Norton AntiVirus的一些问题。寻找关于Norton AntiVirus规则“ESET Filtered Website Event”的统计信息。这是一个包含在Norton安全软件中使用的默认规则，它用于监视和阻止用户访问可能含有恶意代码或病毒的网站。", "output": "appname:antivirus tag:norton atv.cat:\"ESET Filtered Website Event\" | stats count() as cnt by atv.ruleID"}
{"input": "", "instruction": "我想问以下信息：在 appname 为 ips、tag 为 mcafee 和 ips.level 为 Medium 的事件中，统计数量最多的字段为 cnt（计数）如果我的理解有误或您还有其他需求，请告诉我。", "output": "appname:ips tag:mcafee ips.level:Medium | stats count()"}
{"input": "", "instruction": "我想问的是，有多少个 IP 源地址是从哪里发出的，目的地是在哪里的，源地址的纬度和经度是什么，目的地址的纬度和经度是什么？这些 IP 消息中是否包含了 Mcafee 安全软件的信息？", "output": "appname:ips tag:mcafee NOT ips.level:Informational| stats count() as cnt by ips.src.geo.city,ips.dst.geo.city,ips.src.geo.latitude,ips.src.geo.longitude,ips.dst.geo.latitude,ips.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是，NTA最近有没有杀人犯的案子呀？如果有的话，统计一下他们使用的枪支和手段，还有是否有遗留下来的证据可以追查。", "output": "appname:nta tag:chaitin|stats count() as cnt by nta.kill_chain"}
{"input": "", "instruction": "我想问的是，在哪些国家、省份和城市上网的人最多？你可以把这些数据画成地图或者表格展示给我吗？", "output": "appname:nta tag:chaitin| stats count() as cnt by nta.src.geo.country,nta.src.geo.province,nta.src.geo.city"}
{"input": "", "instruction": "我想要知道公交车从哪些城市到南京图书馆的运行情况，而且不包括私人公司和国内的那些城市。", "output": "appname:nta tag:chaitin  NOT nta.src.geo.city:private NOT nta.src.geo.country:中国| stats count()"}
{"input": "", "instruction": "我正在寻找关于FireEye的NX Logs中包含“tag:nx”但不包括“nx.src.geo.city:private”和“nx.src.geo.country:中国”的条目数。", "output": "appname:fireeye tag:nx  NOT nx.src.geo.city:private NOT nx.src.geo.country:中国| stats count()"}
{"input": "", "instruction": "我想问 VPN 服务的登录行为统计信息，其中包括源地省份和城市、VPN 应用名称以及操作类型（登录）等字段的信息。", "output": "appname:vpn tag:cisco vpn.actype:login|stats count()  by vpn.src.geo.province,vpn.src.geo.city"}
{"input": "", "instruction": "找关于 Honeypot 应用、标记为 ChaItIn 和来自 HoneyPot 的事件级别为“低风险”的统计信息的信息", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:低危|stats count()"}
{"input": "", "instruction": "我想问的是，在你们的系统中，有没有可能存在“漏洞”或其他安全问题？？", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:无威胁*|stats count()"}
{"input": "", "instruction": "我想要知道有多少用户在使用 Honeypot App 想要窥探别人的隐私。你能帮我把这些信息统计一下吗？", "output": "appname:honeypot tag:chaitin   hp.source:honeypot hp.event_level:无威胁* | stats count()"}
{"input": "", "instruction": "我想问的是，在你们公司的服务器上，有没有一款叫做“honeypot”、带有“chaitin”标签的应用？同时，这个应用是否属于“honeypot”，并且它的事件级别不应该是“无”。然后你可以统计一下，同样的应用，有多少台设备上安装了它。", "output": "appname:honeypot tag:chaitin   hp.source:honeypot NOT hp.event_level:无* |stats count() as cnt by hp.honeypot_name"}
{"input": "", "instruction": "我想询问有关华为设备的防火墙安全性的信息。寻找关于“华为”应用和标记（tag）“huawei”以及其简短说明中包含“攻击”或“威胁”词汇的记录，同时也包括具有低级别的防火墙安全性的记录。此外，还要查找带有“firewall”、“Brief”和“Level”字段的记录，其中值包含“low”。最后，需要对结果进行计数并显示数量统计信息。", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  firewall.level:low| stats count()"}
{"input": "", "instruction": "我正在寻找关于“华为防火墙”的应用名称、标签及简介中包含“攻击”或“威胁”等词条的信息；2. 我需要了解该产品在安全级别方面的详细情况，包括高级、中级和低级三种级别，我希望通过对数据的统计分析获得不同安全级别下的数量分布图表；3. 我所提供的查询语句中的括号内分别表示的是两个子查询，第一个子查询中包含了应用名称（`appname:firewall`）和标签（`tag:huawei`），第二个子查询则主要针对简介字段进行筛选，其中包含了关键词“攻击”、“威胁”以及“IPS”，同时也使用通配符`*`将其他可能与之相匹配的词条一同列出。", "output": "(appname:firewall AND tag:huawei) (firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  firewall.level:high| stats count()"}
{"input": "", "instruction": "统计所有与“Huawei Firewall”应用和标记“Huawei”关联的事件数量，并将结果按“Firewall.Action”字段进行分组。", "output": "(appname:firewall AND tag:huawei)(firewall.brief:ATTACK OR \"ATTACK\" OR \"IPS\" OR firewall.brief:*THREAT*)  |stats count() as cnt by firewall.action"}
{"input": "", "instruction": "我想问的是，在有多少个应用名称为“Leon”并且标签包含“ tjym ”的记录呢？", "output": "appname:leon tag:tjym | stats count() as cnt by iocs.e_lev"}
{"input": "", "instruction": "我想问的是，在有多少个不同的应用名称、标签和地区的组合。", "output": "appname:leon tag:tjym | stats count() as cnt by iocs.src.geo.country,iocs.src.geo.province,iocs.src.geo.city"}
{"input": "", "instruction": "我想问的是，从哪些主机访问了网帕的 nas 系统？你能否帮我把这些信息列出吗？", "output": "appname:netapp NOT na.src_ip:\"\"| stats count() as cnt by na.src_ip"}
{"input": "", "instruction": "我想跟踪dx的网络活动，并想要了解它发送了多少 DHCP 查询请求。", "output": " appname:dx dx.moudule:* dx.dhcp_req_type:DHCPDISCOVER|stats count()"}
{"input": "", "instruction": "寻找关于“core”应用中包含“deliveragent”标记且具有特定电子邮件扫描结果的所有条目（即“mail.scan_result:*”）的计数。这将返回一个名为“cnt”的列，该列包含匹配项的数量。", "output": "appname:core tag:deliveragent mail.scan_result:* | stats count()"}
{"input": "", "instruction": "我想问以下信息：- kingdee软件的访问量统计情况；- 根据用户代理（浏览器）进行分组后，统计每个用户代理下的访问数量。如果我的理解有误或您还有其他需要帮助的信息，欢迎随时告诉我。", "output": "appname:kingdee tag:access |stats count() by middleware.http_user_agent.browser"}
{"input": "", "instruction": "我想问 Kingdee 应用的访问记录中，根据来源国家（middleware.src.geo.country）进行统计并计算数量。", "output": "appname:kingdee tag:access | stats count() by middleware.src.geo.country"}
{"input": "", "instruction": "我想问 Kingdee 应用错误的数量，按“middleware.request”的分组统计。", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.request"}
{"input": "", "instruction": "我想问以下信息：在 kingdee 应用中，错误类型的日志数量如何随着 referrer（发送请求的网站）而变化？", "output": "appname:kingdee tag:error |stats count() as cnt by middleware.referrer"}
{"input": "", "instruction": "我想要知道达梦数据库的哪些SQL类型被执行了多少次。请帮我把这些信息列出来。", "output": "appname:dm tag:sql | stats count() as cnt by database.sql_type"}
{"input": "", "instruction": "我想问的是：在有多少人使用了“某App”和“带tag为‘safeDog’的事件”，并且不是从中国登录的？", "output": "appname:hids tag:safedog  hids.event_type:remoteLogin NOT hids.country:中国| stats count() as cnt by hids.loginIp"}
{"input": "", "instruction": "我想知道网站 zsns 下的 Tomcat 服务有哪些类型的响应报文。", "output": "appname:zsns tomcat.event_type:*响应报文tomcat.event_type:*${type}* |stats count()"}
{"input": "", "instruction": "我想问最近一段时间 zsns Tomcat 服务的错误信息数量有多少条。这个查询结果在近期为零条。", "output": "appname:zsns tomcat.level:ERROR|stats count()"}
{"input": "", "instruction": "根据以下直播域名计算 CDN 日志中直播业务节点的状态码和访问量：live1.video.com, live2.video.com, live3.video.com", "output": "appname:cdn AND (cdn.http_status:404 OR cdn.http_status:5?? OR cdn.http_status:403 OR cdn.http_status:200 OR cdn.http_status:206 )  AND (cdn.domain:live1.video.com OR cdn.domain:live2.video.com OR cdn.domain:live3.video.com) |  stats count() by hostname,cdn.http_status"}
{"input": "", "instruction": "我想要知道有多少用户在使用 Linux 客户端登录到 GitLab 服务上。", "output": "appname:linux Authentication OR Accepted | stats count()"}
{"input": "", "instruction": "linux今日登录次数", "output": "appname:linux Authentication OR Accepted | stats count()"}
{"input": "", "instruction": "huawei_ac今日连接成功事件次数", "output": "appname:ac tag:huawei ac.result:success| stats count()"}
{"input": "", "instruction": "在 Linux 审计日志中搜索用户认证或用户登录信息，希望统计日志里并按终端列出。", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit)) AND (USER_AUTH OR USER_LOGIN)|stats count() as cnt by linux.event_msg.terminal"}
{"input": "", "instruction": "Linux审计日志中的用户登录失败总次数", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) ) AND (USER_AUTH OR USER_LOGIN) AND linux.result:failed | stats count()"}
{"input": "", "instruction": "我想要知道在 Linux 系统中使用 auditd 模块进行审计时，Failed 状态下用户登录或认证的 IP 地址数量和频率分布情况。", "output": "((appname:linux tag:audit) OR (appname:linux linux.log_type:audit) ) AND (USER_AUTH OR USER_LOGIN) AND linux.result:failed | stats count() as cnt by ip"}
{"input": "", "instruction": "我想要知道有多少台服务器上运行着AIX操作系统，并且不是通过syslog或者godmd这个关键字进行的记录。", "output": "appname:aix   NOT (\"syslog:\" OR \"godmd\")|stats count(aix.type) as ct by aix.type,aix.dst_host "}
{"input": "", "instruction": "我想问的是 MySQL 有哪些错误级别，分别有多少条数据。", "output": " (appname:mysql tag:mysql_error)  |stats count(mysql.level) as ct by mysql.level "}
{"input": "", "instruction": "我想问发生“登录失败”和“登录成功”这两种事件的次数。", "output": "appname:aix AND  (\"Failed password for\" OR \"Login successful for\") |stats count(aix.type) as ct by aix.type "}
{"input": "", "instruction": "我在询问的是CDN服务商为华为提供的服务的访问量情况", "output": "appname:cdn tag:huawei cdn.finished_body_response:>3 | stats count() by tag"}
{"input": "", "instruction": "我想问的是，在有多少个请求中包含了“huawei”这个tag和攻击名称为*的记录呢？", "output": "appname:ids tag:huawei ids.attack_name:*  | stats count() as cnt by ids.src_ip,ids.dst_ip"}
{"input": "", "instruction": "我想问 Nginx 服务器的访问日志中，从 IP 为 172.16.42.5 的用户访问量分布情况吗？", "output": "appname:nginx_log AND ip:\"172.16.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "我想要知道网站访问量最多的IP地址和ISP，请帮我把这些信息找出来。", "output": "appname:nginx_log AND ip:\"172.16.42.6\"| stats count() as ct by nginx.real_ip.last,nginx.geo.isp "}
{"input": "", "instruction": "我想要知道网站访问量和地区分布情况。请帮我把这些信息列出来。", "output": "appname:nginx_log AND ip:\"172.16.43.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "我想问 Nginx 服务器的访问日志中，根据 IP 和 ISP（互联网服务提供商）进行分组并统计数量的相关信息。", "output": "appname:nginx_log AND ip:\"172.17.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.isp "}
{"input": "", "instruction": "我想问 Nginx 服务器的访问日志中，根据 IP 和地区进行统计，并返回访问次数最多的前十条记录。", "output": "appname:nginx_log AND ip:\"173.16.42.5\"| stats count() as ct by nginx.real_ip.last,nginx.geo.city "}
{"input": "", "instruction": "我想问有关应用名为“中间件”、标记为IIS的服务运行状况是否正常的问题：从最近一小时的数据中检索中间件指标，并计算出状态代码大于或等于399的数量。", "output": "appname: middleware tag:iis  middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "我想要查一下Cisco Nexus交换机的运行状况，看看有没有哪些报警级别为三级以下的错误或告警信息。", "output": "appname:switch AND tag:cisco_nexus AND switch.level:<3 |stats count() as count_"}
{"input": "", "instruction": "我想要知道交换机端口带宽发生变化的情况。请帮我把这些信息统计一下。", "output": "appname:switch AND tag:cisco_nexus AND ETHPORT-5-IF_BANDWIDTH_CHANGE |stats count() by switch.port_channel,switch.bandwidth"}
{"input": "", "instruction": "我想询问交换机端口信息，并按交换机端口频繁更改双工模式的应用和标记为“Cisco Nexus”的应用的数量。", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-5-IF_DUPLEX  |stats count() by switch.port_channel "}
{"input": "", "instruction": "我想要知道在有多少个交换机的某些端口发生了错误，并且导致了一些 vlan 暂停使用。", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-3-IF_ERROR_VLANS_SUSPENDED |stats count() by switch.vlan,switch.port_channel"}
{"input": "", "instruction": "我想要知道在有多少个交换机上的 VLAN 被删除了，并且发生错误。", "output": "appname:switch AND tag:cisco_nexus AND  ETHPORT-3-IF_ERROR_VLANS_REMOVED |stats count() by switch.vlan,switch.port_channel"}
{"input": "", "instruction": "我想问有关 Cisco IOS 应用的崩溃情况的信息，并且希望我能给出相应的统计数据。", "output": "appname:switch tag:cisco_ios   AND switch.level:<4 |stats count() as count_"}
{"input": "", "instruction": "我想问的是 nginx 服务的访问日志中，返回码大于等于 400 的请求数量分布情况。", "output": "appname:nginx tag:access middleware.response_code:>399|stats count() by middleware.response_code"}
{"input": "", "instruction": "帮我做性能分析，所以寻找应用名为“middleware”且有“tag：tomcat”的请求，并且状态码大于等于399的数量。", "output": "appname:middleware tag:tomcat middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "问360网神防火墙产品的登录失败情况和次数，并且使用stats count()函数进行汇总。", "output": "appname:firewall tag:360wangshen 登录失败| stats count()"}
{"input": "", "instruction": "我想问的是，在有多少条记录的 event_name 是 360wangshen? 这个查询结果怎么展示比较好呢？", "output": "appname:firewall tag:360wangshen | stats count() as cnt by firewall.event_name"}
{"input": "", "instruction": "帮我追踪一场错误。有关“中间件”应用的 IIS（Internet Information Services）服务器上的 HTTP 状态代码为大于或等于 400 的请求数目和分布情况。", "output": "appname: middleware tag:iis  middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "我想询问的是关于某一台 Tomcat 服务器的访问状态和数量统计情况，具体内容为：其中 `appname` 表示应用名称（即服务名），`tomcat.status` 表示该 Tomcat 服务的 HTTP 返回码大于等于 399 的请求数，最后使用 `stats count()` 函数进行计数并将结果保存到 `cnt` 字段中。", "output": "appname:pf_tomcat tomcat.status:>399|stats count()"}
{"input": "", "instruction": "帮我分析 Nginx 服务器的访问状态吗？想要知道 Nginx 服务器在最近一段时间内返回 HTTP 状态码大于等于 400 的请求数量有多少个。", "output": "appname:pf_nginx nginx.status:>399|stats count()"}
{"input": "", "instruction": "我想问的是 apache 服务的访问状态码为 4xx 或 5xx 时，有多少个请求失败了。", "output": "appname:apache tag:access middleware.status:>399|stats count() as count_"}
{"input": "", "instruction": "我想问的是 weblogic 服务的访问状态码大于等于 400 时，有多少个请求失败了。", "output": "appname:weblogic tag:access middleware.request_status:>399|stats count() as count_"}
{"input": "", "instruction": "我想问的是，在你们公司的生产环境中，有哪些应用会打印出 level 大于等于 3 的 log 信息吗？", "output": "appname:tda  tda.level:<3| stats count()"}
{"input": "", "instruction": "帮我编写一个 SPL 查询语句，查询 appname 为 \"ips\"、tag 为 \"dptech\"（即业务线）并且 ips.severity 为 3 的日志数量统计结果。", "output": "appname:ips  tag:dptech (ips.severity:3) | stats count() as cnt by  ips.severity"}
{"input": "", "instruction": "帮我创建一段 SIEM 查询语句，用于搜索 appname 为 \"firewall\" 和标签为 sonicwall 的所有记录，并统计这些记录的数量。", "output": "appname:firewall AND tag:sonicwall  (firewall.pri:1  OR firewall.pri:0 OR firewall.pri:3) |stats count() as count_1 by firewall.msg"}
{"input": "", "instruction": "我想问如何编写一个查询以获取 `appname:ac` 和 `tag:cisco` 字段的事件数目并将结果显示为 `cnt` 列。", "output": "appname:ac tag:cisco ac.event_id:445|stats count()"}
{"input": "", "instruction": "我想问的是，公司的防火墙有哪些漏洞，以及这些漏洞出现在那个城市和地区里，以及它们之间相互影响的程度如何。", "output": "appname:firewall newdon firewall.type:secure|stats count() by firewall.src.geo.city,firewall.src.geo.latitude,firewall.src.geo.longitude,firewall.dst.geo.city,firewall.dst.geo.latitude,firewall.dst.geo.longitude"}
{"input": "", "instruction": "我想问的是，在 FireEye 中出现的 NX 漏洞有哪些级别呢？请告诉我数量分布情况。请不要给出具体漏洞名称或链接。", "output": "(appname:nx AND tag:fireeye)  nx.level:2| stats count()"}
{"input": "", "instruction": "我想要知道在 FireEye 应用中出现的严重错误数量，并且严重程度低于 3。这条 SIEM 查询语句意味着：1. 从 ECS 消息字段 appname 中检索值 \"FireEye\"；2. 从 ECS 消息字段 tag 中检索值 \"nx\"（这是一种常见的标记，用于指示网络安全事件）；3. 通过使用 NXLOG 语言中的 \"<=\" 比较器从 ECS 消息字段 nx.level 中检索的值和数字 3，以确定其严重性是否小于或等于 3；4. 使用stats命令计算结果集中记录的事件数目并将其作为计数器cnt返回。因此，根据这个查询，了解在您的环境中由 FireEye 应用生成的严重错误数量以及这些错误的严重级别。", "output": "(appname:nx AND tag:fireeye)  nx.level:<3| stats count()"}
{"input": "", "instruction": "我正在寻找有关“kingdee”应用和具有“tag：access”标签的所有条目，同时还要求在“middleware.rsp”字段中大于或等于399毫秒的记录数。", "output": "appname:kingdee tag:access middleware.rsp:>399|stats count() by middleware.rsp"}
{"input": "", "instruction": "我想问的是，在有多少个用户IP使用了华为的AC应用进行登录操作？分别有多少次。", "output": "appname:ac tag:huawei NOT ac.event_name:登录事件  |stats count() as cnt by ac.ap_ip "}
{"input": "", "instruction": "我想问的是，appname=a10, tag=a10, status=down 时有多少条数据？", "output": "appname:a10 tag:a10 a10.status:down|stats count() "}
{"input": "", "instruction": "帮我分析CUPP应用的访问日志，并统计出每分钟、IP地址、用户、组和命令的请求数量。", "output": "type:UARG appname:cupp | stats count() as cnt by timestamp,ip,USER,GROUP,COMM"}
{"input": "tomcat_stdout_各类事件名。", "instruction": "tomcat_stdout_数据，编写查询语句实现如下分析场景", "output": "appname:tomcat tag:stdout | stats count() by middleware.event_name"}
{"input": "", "instruction": "帮我查找 Tomcat 中所有 stdout tagged log entries，并统计每个中间件事件的数量。", "output": "appname:tomcat tag:stdout | stats count() by middleware.event_name"}
