{"instruction": "List all deployments in all namespaces.", "type": "kubectl", "output": "```bash\nkubectl get deployments --all-namespaces\n```"}
{"instruction": "List all statefulsets in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get statefulsets -n default\n```"}
{"instruction": "List all daemonsets across the cluster.", "type": "kubectl", "output": "```bash\nkubectl get daemonsets --all-namespaces\n```"}
{"instruction": "Describe the daemonset named 'log-agent' in namespace 'logging'.", "type": "kubectl", "output": "```bash\nkubectl describe daemonset log-agent -n logging\n```"}
{"instruction": "Create a namespace called 'monitoring'.", "type": "kubectl", "output": "```bash\nkubectl create namespace monitoring\n```"}
{"instruction": "Set a resource quota named 'compute-quota' in namespace 'dev' limiting pods to 10.", "type": "kubectl", "output": "```bash\nkubectl create quota compute-quota --hard=pods=10 -n dev\n```"}
{"instruction": "Delete the resource quota 'compute-quota' from namespace 'dev'.", "type": "kubectl", "output": "```bash\nkubectl delete quota compute-quota -n dev\n```"}
{"instruction": "List all resource quotas in the current namespace.", "type": "kubectl", "output": "```bash\nkubectl get quota\n```"}
{"instruction": "List all roles in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get roles -n default\n```"}
{"instruction": "List all rolebindings in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get rolebindings -n default\n```"}
{"instruction": "Create a role named 'pod-reader' with permissions to get, list, and watch pods in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl create role pod-reader --verb=get,list,watch --resource=pods -n default\n```"}
{"instruction": "Delete the rolebinding 'read-pods' from the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete rolebinding read-pods -n default\n```"}
{"instruction": "List all available API versions in the cluster.", "type": "kubectl", "output": "```bash\nkubectl api-versions\n```"}
{"instruction": "Retrieve the external IP of the service 'ingress-nginx' in the 'ingress-nginx' namespace.", "type": "kubectl", "output": "```bash\nkubectl get svc ingress-nginx -n ingress-nginx\n```"}
{"instruction": "Run a one-time busybox job interactively and remove it after completion.", "type": "kubectl", "output": "```bash\nkubectl run busybox --image=busybox --rm -it -- /bin/sh\n```"}
{"instruction": "Copy a file from pod 'app-pod' in namespace 'default' to the local machine.", "type": "kubectl", "output": "```bash\nkubectl cp default/app-pod:/path/to/remote/file ./local-file\n```"}
{"instruction": "Copy a file from the local machine to pod 'app-pod' in namespace 'default'.", "type": "kubectl", "output": "```bash\nkubectl cp ./local-file default/app-pod:/path/to/remote/file\n```"}
{"instruction": "Execute an interactive shell inside pod 'app-pod' in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl exec -it app-pod -- /bin/bash\n```"}
{"instruction": "Create a secret named 'file-secret' from a file 'secret.txt'.", "type": "kubectl", "output": "```bash\nkubectl create secret generic file-secret --from-file=secret.txt\n```"}
{"instruction": "Update secret 'file-secret' with a new file 'new-secret.txt' using a dry run and apply.", "type": "kubectl", "output": "```bash\nkubectl create secret generic file-secret --from-file=new-secret.txt --dry-run=client -o yaml | kubectl apply -f -\n```"}
{"instruction": "List all persistent volumes in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get pv\n```"}
{"instruction": "List all persistent volume claims in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pvc -n default\n```"}
{"instruction": "Delete the persistent volume claim named 'data-pvc' in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete pvc data-pvc -n default\n```"}
{"instruction": "Describe the persistent volume 'pv-volume1'.", "type": "kubectl", "output": "```bash\nkubectl describe pv pv-volume1\n```"}
{"instruction": "Show all node labels in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get nodes --show-labels\n```"}
{"instruction": "Patch service 'web-service' to change its type to NodePort using a JSON merge patch.", "type": "kubectl", "output": "```bash\nkubectl patch service web-service -p '{\"spec\":{\"type\":\"NodePort\"}}'\n```"}
{"instruction": "Convert the YAML file 'file.yaml' to JSON format using kubectl.", "type": "kubectl", "output": "```bash\nkubectl convert -f file.yaml --output-version v1\n```"}
{"instruction": "Create a configmap named 'my-config' from literal key-value pairs.", "type": "kubectl", "output": "```bash\nkubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2\n```"}
{"instruction": "Replace the resource defined in 'new-config.yaml'.", "type": "kubectl", "output": "```bash\nkubectl replace -f new-config.yaml\n```"}
{"instruction": "Edit the configmap 'app-config' interactively.", "type": "kubectl", "output": "```bash\nkubectl edit configmap app-config\n```"}
{"instruction": "Display resource usage for pods in the 'kube-system' namespace.", "type": "kubectl", "output": "```bash\nkubectl top pod -n kube-system\n```"}
{"instruction": "Show the rollout status of the daemonset 'node-exporter' in the 'monitoring' namespace.", "type": "kubectl", "output": "```bash\nkubectl rollout status daemonset node-exporter -n monitoring\n```"}
{"instruction": "Force restart pod 'cache-pod' in the 'default' namespace by deleting it.", "type": "kubectl", "output": "```bash\nkubectl delete pod cache-pod -n default\n```"}
{"instruction": "Annotate pod 'frontend-pod' with a backup timestamp.", "type": "kubectl", "output": "```bash\nkubectl annotate pod frontend-pod backup='2025-02-04T12:00:00Z'\n```"}
{"instruction": "Label deployment 'backend-deployment' with version 'v1.2'.", "type": "kubectl", "output": "```bash\nkubectl label deployment backend-deployment version=v1.2\n```"}
{"instruction": "Remove the 'version' label from service 'api-service'.", "type": "kubectl", "output": "```bash\nkubectl label service api-service version-\n```"}
{"instruction": "Create a job named 'backup-job' using the YAML configuration in 'backup-job.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f backup-job.yaml\n```"}
{"instruction": "Suspend the cronjob 'daily-backup' by setting its suspend flag to true.", "type": "kubectl", "output": "```bash\nkubectl patch cronjob daily-backup -p '{\"spec\": {\"suspend\": true}}'\n```"}
{"instruction": "Resume the cronjob 'daily-backup' by setting its suspend flag to false.", "type": "kubectl", "output": "```bash\nkubectl patch cronjob daily-backup -p '{\"spec\": {\"suspend\": false}}'\n```"}
{"instruction": "List all cronjobs in the 'backup' namespace.", "type": "kubectl", "output": "```bash\nkubectl get cronjobs -n backup\n```"}
{"instruction": "Delete the cronjob 'old-backup' from the 'backup' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete cronjob old-backup -n backup\n```"}
{"instruction": "Create a cronjob named 'log-cleanup' from the file 'log-cleanup-cronjob.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f log-cleanup-cronjob.yaml\n```"}
{"instruction": "Describe the cronjob 'db-backup' in the current namespace.", "type": "kubectl", "output": "```bash\nkubectl describe cronjob db-backup\n```"}
{"instruction": "List all endpoints in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get endpoints -n default\n```"}
{"instruction": "Display detailed resource usage for the pod 'api-pod' in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl top pod api-pod -n default\n```"}
{"instruction": "List all custom resource definitions in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get crds\n```"}
{"instruction": "Describe the custom resource definition 'myresources.example.com'.", "type": "kubectl", "output": "```bash\nkubectl describe crd myresources.example.com\n```"}
{"instruction": "View the previous logs of pod 'web-pod' in case of a restart.", "type": "kubectl", "output": "```bash\nkubectl logs web-pod --previous\n```"}
{"instruction": "Fetch events related to the pod 'api-pod'.", "type": "kubectl", "output": "```bash\nkubectl get events --field-selector involvedObject.name=api-pod\n```"}
{"instruction": "Apply a network policy defined in 'network-policy.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply -f network-policy.yaml\n```"}
{"instruction": "Delete the network policy 'deny-all' in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete networkpolicy deny-all -n default\n```"}
{"instruction": "List all network policies in the 'prod' namespace.", "type": "kubectl", "output": "```bash\nkubectl get networkpolicies -n prod\n```"}
{"instruction": "Annotate node 'node-3' with a maintenance window set to '2025-02-05'.", "type": "kubectl", "output": "```bash\nkubectl annotate node node-3 maintenance='2025-02-05'\n```"}
{"instruction": "Set a taint on node 'node-4' with key 'key', value 'value', and effect 'NoSchedule'.", "type": "kubectl", "output": "```bash\nkubectl taint node node-4 key=value:NoSchedule\n```"}
{"instruction": "Remove the taint 'key:NoSchedule' from node 'node-4'.", "type": "kubectl", "output": "```bash\nkubectl taint node node-4 key:NoSchedule-\n```"}
{"instruction": "List all validating webhook configurations.", "type": "kubectl", "output": "```bash\nkubectl get validatingwebhookconfigurations\n```"}
{"instruction": "List all mutating webhook configurations.", "type": "kubectl", "output": "```bash\nkubectl get mutatingwebhookconfigurations\n```"}
{"instruction": "Describe the mutating webhook configuration 'example-mutator'.", "type": "kubectl", "output": "```bash\nkubectl describe mutatingwebhookconfiguration example-mutator\n```"}
{"instruction": "Label the namespace 'dev' with team 'development'.", "type": "kubectl", "output": "```bash\nkubectl label namespace dev team=development\n```"}
{"instruction": "Annotate the namespace 'prod' with owner 'ops-team'.", "type": "kubectl", "output": "```bash\nkubectl annotate namespace prod owner=ops-team\n```"}
{"instruction": "Export the configuration of deployment 'app' to JSON.", "type": "kubectl", "output": "```bash\nkubectl get deployment app -o json\n```"}
{"instruction": "Export the configuration of service 'my-service' to JSON.", "type": "kubectl", "output": "```bash\nkubectl get service my-service -o json\n```"}
{"instruction": "List all secrets across all namespaces.", "type": "kubectl", "output": "```bash\nkubectl get secrets --all-namespaces\n```"}
{"instruction": "Describe the secret 'tls-secret' in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl describe secret tls-secret -n default\n```"}
{"instruction": "Create a TLS secret named 'tls-secret' using certificate and key files.", "type": "kubectl", "output": "```bash\nkubectl create secret tls tls-secret --cert=cert.crt --key=cert.key\n```"}
{"instruction": "Update the image of statefulset 'mongo' to 'mongo:4.2'.", "type": "kubectl", "output": "```bash\nkubectl set image statefulset/mongo mongo=mongo:4.2\n```"}
{"instruction": "Edit the daemonset 'fluentd' in the 'logging' namespace.", "type": "kubectl", "output": "```bash\nkubectl edit daemonset fluentd -n logging\n```"}
{"instruction": "Display the rollout status for statefulset 'redis'.", "type": "kubectl", "output": "```bash\nkubectl rollout status statefulset redis\n```"}
{"instruction": "Annotate statefulset 'redis' with a last-updated timestamp.", "type": "kubectl", "output": "```bash\nkubectl annotate statefulset redis last-updated='2025-02-04T12:00:00Z'\n```"}
{"instruction": "List all jobs in the 'batch' namespace.", "type": "kubectl", "output": "```bash\nkubectl get jobs -n batch\n```"}
{"instruction": "Describe the job 'data-processing' in the 'batch' namespace.", "type": "kubectl", "output": "```bash\nkubectl describe job data-processing -n batch\n```"}
{"instruction": "Run a pod using the busybox image with no restart policy for a one-off task.", "type": "kubectl", "output": "```bash\nkubectl run temp --image=alpine --restart=Never --command -- sleep 3600\n```"}
{"instruction": "Delete the pod named 'temp' from the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete pod temp -n default\n```"}
{"instruction": "Set the environment variable 'ENV=production' on deployment 'webapp'.", "type": "kubectl", "output": "```bash\nkubectl set env deployment/webapp ENV=production\n```"}
{"instruction": "Unset the environment variable 'DEBUG' on deployment 'webapp'.", "type": "kubectl", "output": "```bash\nkubectl set env deployment/webapp DEBUG-\n```"}
{"instruction": "Execute a command in one of the pods labeled 'app=worker' interactively.", "type": "kubectl", "output": "```bash\nkubectl exec -it $(kubectl get pods -l app=worker -o jsonpath='{.items[0].metadata.name}') -- /bin/sh\n```"}
{"instruction": "Port-forward the service 'my-service' so that local port 8080 maps to port 80 on the service.", "type": "kubectl", "output": "```bash\nkubectl port-forward service/my-service 8080:80\n```"}
{"instruction": "Expose the pod 'solo-pod' on port 9090.", "type": "kubectl", "output": "```bash\nkubectl expose pod solo-pod --port=9090\n```"}
{"instruction": "Scale the deployment 'scalable-app' to 10 replicas.", "type": "kubectl", "output": "```bash\nkubectl scale deployment scalable-app --replicas=10\n```"}
{"instruction": "Update resource limits for deployment 'resource-app' using a patch.", "type": "kubectl", "output": "```bash\nkubectl patch deployment resource-app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"resource-app\",\"resources\":{\"limits\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}}}]}}}}'\n```"}
{"instruction": "Create a Horizontal Pod Autoscaler for deployment 'webapp' with min 2, max 10 replicas and target CPU utilization of 80%.", "type": "kubectl", "output": "```bash\nkubectl autoscale deployment webapp --min=2 --max=10 --cpu-percent=80\n```"}
{"instruction": "Retrieve the status of the Horizontal Pod Autoscaler for 'webapp'.", "type": "kubectl", "output": "```bash\nkubectl get hpa webapp\n```"}
{"instruction": "Delete the Horizontal Pod Autoscaler for 'webapp'.", "type": "kubectl", "output": "```bash\nkubectl delete hpa webapp\n```"}
{"instruction": "Create a Pod Disruption Budget from the configuration in 'pdb.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f pdb.yaml\n```"}
{"instruction": "List all Pod Disruption Budgets in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pdb -n default\n```"}
{"instruction": "Delete the Pod Disruption Budget named 'app-pdb' from the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete pdb app-pdb -n default\n```"}
{"instruction": "Annotate deployment 'stateless-app' with 'team=backend'.", "type": "kubectl", "output": "```bash\nkubectl annotate deployment stateless-app team=backend\n```"}
{"instruction": "List all deployments with the label 'tier=backend'.", "type": "kubectl", "output": "```bash\nkubectl get deployments -l tier=backend\n```"}
{"instruction": "Run a privileged pod using the busybox image that stays running.", "type": "kubectl", "output": "```bash\nkubectl run privileged --image=busybox --privileged --restart=Never -- /bin/sh -c 'while true; do sleep 30; done;'\n```"}
{"instruction": "Fetch logs for the container named 'sidecar' in the pod 'multi-container-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs multi-container-pod -c sidecar\n```"}
{"instruction": "Stream logs for the container 'main' in the pod 'multi-container-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs multi-container-pod -c main -f\n```"}
{"instruction": "Expose the deployment 'webapp' as a LoadBalancer service on port 80.", "type": "kubectl", "output": "```bash\nkubectl expose deployment webapp --type=LoadBalancer --port=80\n```"}
{"instruction": "Delete the service 'old-service' from the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete svc old-service -n default\n```"}
{"instruction": "List all namespaces in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get namespaces\n```"}
{"instruction": "Describe the namespace 'default'.", "type": "kubectl", "output": "```bash\nkubectl describe namespace default\n```"}
{"instruction": "Export the configuration of all pods in the 'kube-system' namespace to a JSON file named 'pods.json'.", "type": "kubectl", "output": "```bash\nkubectl get pods -n kube-system -o json > pods.json\n```"}
{"instruction": "Display resource usage for pods in the 'production' namespace.", "type": "kubectl", "output": "```bash\nkubectl top pods -n production\n```"}
{"instruction": "Retrieve events for the 'monitoring' namespace.", "type": "kubectl", "output": "```bash\nkubectl get events -n monitoring\n```"}
{"instruction": "Convert the JSON configuration file 'config.json' to a Kubernetes YAML manifest.", "type": "kubectl", "output": "```bash\nkubectl convert -f config.json -o yaml\n```"}
{"instruction": "List all pods in all namespaces.", "type": "kubectl", "output": "```bash\nkubectl get pods --all-namespaces\n```"}
{"instruction": "Get details of the pod named 'webserver'.", "type": "kubectl", "output": "```bash\nkubectl describe pod webserver\n```"}
{"instruction": "Delete the service 'backend-service'.", "type": "kubectl", "output": "```bash\nkubectl delete service backend-service\n```"}
{"instruction": "Scale the deployment 'frontend' to 5 replicas.", "type": "kubectl", "output": "```bash\nkubectl scale deployment frontend --replicas=5\n```"}
{"instruction": "Show nodes in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get nodes\n```"}
{"instruction": "Create a namespace called 'staging'.", "type": "kubectl", "output": "```bash\nkubectl create namespace staging\n```"}
{"instruction": "Get logs of the pod 'database-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs database-pod\n```"}
{"instruction": "Expose deployment 'myapp' on port 8080.", "type": "kubectl", "output": "```bash\nkubectl expose deployment myapp --port=8080\n```"}
{"instruction": "Apply the configuration in 'config.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply -f config.yaml\n```"}
{"instruction": "Delete namespace 'test-environment'.", "type": "kubectl", "output": "```bash\nkubectl delete namespace test-environment\n```"}
{"instruction": "Get events for the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get events -n default\n```"}
{"instruction": "Describe the service 'web-service'.", "type": "kubectl", "output": "```bash\nkubectl describe service web-service\n```"}
{"instruction": "Update the image of deployment 'api' to 'api:v2'.", "type": "kubectl", "output": "```bash\nkubectl set image deployment/api api=api:v2\n```"}
{"instruction": "Get the current context.", "type": "kubectl", "output": "```bash\nkubectl config current-context\n```"}
{"instruction": "Set the context to 'production'.", "type": "kubectl", "output": "```bash\nkubectl config use-context production\n```"}
{"instruction": "Get resource usage of nodes.", "type": "kubectl", "output": "```bash\nkubectl top nodes\n```"}
{"instruction": "Explain the 'deployment' resource.", "type": "kubectl", "output": "```bash\nkubectl explain deployment\n```"}
{"instruction": "Get all services in the 'dev' namespace.", "type": "kubectl", "output": "```bash\nkubectl get services -n dev\n```"}
{"instruction": "Run a pod with image 'nginx' named 'nginx-test'.", "type": "kubectl", "output": "```bash\nkubectl run nginx-test --image=nginx\n```"}
{"instruction": "Edit the deployment 'frontend'.", "type": "kubectl", "output": "```bash\nkubectl edit deployment frontend\n```"}
{"instruction": "Cordon the node 'node-1'.", "type": "kubectl", "output": "```bash\nkubectl cordon node-1\n```"}
{"instruction": "Drain the node 'node-2'.", "type": "kubectl", "output": "```bash\nkubectl drain node-2\n```"}
{"instruction": "Uncordon the node 'node-1'.", "type": "kubectl", "output": "```bash\nkubectl uncordon node-1\n```"}
{"instruction": "Delete pod 'temp-pod' in namespace 'test'.", "type": "kubectl", "output": "```bash\nkubectl delete pod temp-pod -n test\n```"}
{"instruction": "List configmaps in all namespaces.", "type": "kubectl", "output": "```bash\nkubectl get configmaps --all-namespaces\n```"}
{"instruction": "Get the secret 'db-secret' in namespace 'prod'.", "type": "kubectl", "output": "```bash\nkubectl get secret db-secret -n prod\n```"}
{"instruction": "Describe ingress 'my-ingress'.", "type": "kubectl", "output": "```bash\nkubectl describe ingress my-ingress\n```"}
{"instruction": "Get the status of deployment 'backend'.", "type": "kubectl", "output": "```bash\nkubectl rollout status deployment backend\n```"}
{"instruction": "Restart deployment 'cache'.", "type": "kubectl", "output": "```bash\nkubectl rollout restart deployment cache\n```"}
{"instruction": "View the history of rollout for deployment 'webapp'.", "type": "kubectl", "output": "```bash\nkubectl rollout history deployment webapp\n```"}
{"instruction": "Create a service account named 'deploy' in 'staging' namespace.", "type": "kubectl", "output": "```bash\nkubectl create serviceaccount deploy -n staging\n```"}
{"instruction": "Attach to the pod 'debug-pod'.", "type": "kubectl", "output": "```bash\nkubectl attach debug-pod\n```"}
{"instruction": "Get all resources in namespace 'production'.", "type": "kubectl", "output": "```bash\nkubectl get all -n production\n```"}
{"instruction": "Port-forward pod 'my-pod' port 8080 to local port 8080.", "type": "kubectl", "output": "```bash\nkubectl port-forward pod/my-pod 8080:8080\n```"}
{"instruction": "Scale statefulset 'mysql' to 3 replicas.", "type": "kubectl", "output": "```bash\nkubectl scale statefulset mysql --replicas=3\n```"}
{"instruction": "Patch deployment 'api' with 'patch.yaml'.", "type": "kubectl", "output": "```bash\nkubectl patch deployment api --patch-file=patch.yaml\n```"}
{"instruction": "Delete all pods with label 'app=test'.", "type": "kubectl", "output": "```bash\nkubectl delete pods -l app=test\n```"}
{"instruction": "Get pod IP addresses in 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pods -n default -o wide\n```"}
{"instruction": "Explain the 'service' resource.", "type": "kubectl", "output": "```bash\nkubectl explain service\n```"}
{"instruction": "Apply all YAML files in 'manifests' directory.", "type": "kubectl", "output": "```bash\nkubectl apply -f manifests/\n```"}
{"instruction": "Get the cluster version information.", "type": "kubectl", "output": "```bash\nkubectl version\n```"}
{"instruction": "Create a deployment named 'redis' with image 'redis:6.0'.", "type": "kubectl", "output": "```bash\nkubectl create deployment redis --image=redis:6.0\n```"}
{"instruction": "Describe node 'worker-node-1'.", "type": "kubectl", "output": "```bash\nkubectl describe node worker-node-1\n```"}
{"instruction": "Get events sorted by timestamp.", "type": "kubectl", "output": "```bash\nkubectl get events --sort-by=.metadata.creationTimestamp\n```"}
{"instruction": "Delete job 'batch-job'.", "type": "kubectl", "output": "```bash\nkubectl delete job batch-job\n```"}
{"instruction": "Create configmap 'app-config' from file 'config.properties'.", "type": "kubectl", "output": "```bash\nkubectl create configmap app-config --from-file=config.properties\n```"}
{"instruction": "Explain 'persistentvolumeclaim'.", "type": "kubectl", "output": "```bash\nkubectl explain persistentvolumeclaim\n```"}
{"instruction": "Get services with label 'tier=frontend'.", "type": "kubectl", "output": "```bash\nkubectl get services -l tier=frontend\n```"}
{"instruction": "Delete all pods in 'development' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete pods --all -n development\n```"}
{"instruction": "Get the logs of pod 'app-pod' since 1 hour ago.", "type": "kubectl", "output": "```bash\nkubectl logs app-pod --since=1h\n```"}
{"instruction": "Get pod 'db-pod' logs and follow.", "type": "kubectl", "output": "```bash\nkubectl logs db-pod -f\n```"}
{"instruction": "Get cluster info.", "type": "kubectl", "output": "```bash\nkubectl cluster-info\n```"}
{"instruction": "Show me the cluster details.", "type": "kubectl", "output": "```bash\nkubectl cluster-info\n```"}
{"instruction": "Get the Kubernetes version.", "type": "kubectl", "output": "```bash\nkubectl version\n```"}
{"instruction": "List all nodes in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get nodes\n```"}
{"instruction": "Check the status of cluster components.", "type": "kubectl", "output": "```bash\nkubectl get componentstatuses\n```"}
{"instruction": "Describe the cluster.", "type": "kubectl", "output": "```bash\nkubectl cluster-info dump\n```"}
{"instruction": "Get cluster info.", "type": "kubectl", "output": "```bash\nkubectl cluster-info\n```"}
{"instruction": "Get API resources.", "type": "kubectl", "output": "```bash\nkubectl api-resources\n```"}
{"instruction": "List all services with type ClusterIP in namespace 'dev'.", "type": "kubectl", "output": "```bash\nkubectl get svc -n dev --field-selector spec.type=ClusterIP\n```"}
{"instruction": "Get detailed information of ingress 'app-ingress' in namespace 'prod'.", "type": "kubectl", "output": "```bash\nkubectl describe ingress app-ingress -n prod\n```"}
{"instruction": "Restart pod 'frontend-pod' by deleting it to force a new instance in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete pod frontend-pod -n default\n```"}
{"instruction": "Show rollout status for statefulset 'zookeeper'.", "type": "kubectl", "output": "```bash\nkubectl rollout status statefulset zookeeper\n```"}
{"instruction": "Display endpoints for service 'backend-svc' in namespace 'prod'.", "type": "kubectl", "output": "```bash\nkubectl get endpoints backend-svc -n prod\n```"}
{"instruction": "List all pods with label app=api in the 'staging' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pods -n staging -l app=api\n```"}
{"instruction": "View detailed information of the replication controller 'old-rc'.", "type": "kubectl", "output": "```bash\nkubectl describe rc old-rc\n```"}
{"instruction": "Create a replication controller using the configuration file 'rc.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f rc.yaml\n```"}
{"instruction": "Delete the replication controller 'old-rc'.", "type": "kubectl", "output": "```bash\nkubectl delete rc old-rc\n```"}
{"instruction": "Update the image of replication controller 'rc-example' to 'nginx:1.19'.", "type": "kubectl", "output": "```bash\nkubectl set image rc/rc-example nginx=nginx:1.19\n```"}
{"instruction": "Show all pods in the 'staging' namespace using wide output.", "type": "kubectl", "output": "```bash\nkubectl get pods -n staging -o wide\n```"}
{"instruction": "Stream logs from all containers in pod 'multi-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs multi-pod --all-containers=true -f\n```"}
{"instruction": "Show secrets in the 'kube-system' namespace in a table format.", "type": "kubectl", "output": "```bash\nkubectl get secrets -n kube-system\n```"}
{"instruction": "List all storage classes available in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get storageclasses\n```"}
{"instruction": "Describe the storage class 'standard'.", "type": "kubectl", "output": "```bash\nkubectl describe storageclass standard\n```"}
{"instruction": "Create a persistent volume claim using the file 'pvc.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f pvc.yaml\n```"}
{"instruction": "Replace the persistent volume claim using the configuration in 'pvc-new.yaml'.", "type": "kubectl", "output": "```bash\nkubectl replace -f pvc-new.yaml\n```"}
{"instruction": "Annotate the persistent volume claim 'data-pvc' with a retention policy of 30 days.", "type": "kubectl", "output": "```bash\nkubectl annotate pvc data-pvc retention=30d\n```"}
{"instruction": "Label all pods in the 'test' namespace with the label environment=test.", "type": "kubectl", "output": "```bash\nkubectl label pods --all environment=test -n test\n```"}
{"instruction": "Remove the 'environment' label from all pods in the 'test' namespace.", "type": "kubectl", "output": "```bash\nkubectl label pods --all environment- -n test\n```"}
{"instruction": "Scale the replication controller 'rc-example' to 5 replicas.", "type": "kubectl", "output": "```bash\nkubectl scale rc rc-example --replicas=5\n```"}
{"instruction": "Get the resource version of deployment 'app-deploy'.", "type": "kubectl", "output": "```bash\nkubectl get deployment app-deploy -o=jsonpath='{.metadata.resourceVersion}'\n```"}
{"instruction": "Display only the names of pods in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pods -n default -o custom-columns=NAME:.metadata.name\n```"}
{"instruction": "List nodes with custom columns showing name and ready status.", "type": "kubectl", "output": "```bash\nkubectl get nodes -o custom-columns=NAME:.metadata.name,READY:.status.conditions[?(@.type==\"Ready\")].status\n```"}
{"instruction": "Retrieve the last 100 lines of logs from kube-apiserver pods in the 'kube-system' namespace.", "type": "kubectl", "output": "```bash\nkubectl logs -n kube-system -l component=kube-apiserver --tail=100\n```"}
{"instruction": "Describe the kube-scheduler pods in the 'kube-system' namespace.", "type": "kubectl", "output": "```bash\nkubectl describe pod -n kube-system -l component=kube-scheduler\n```"}
{"instruction": "Retrieve the last 100 lines of logs from kube-controller-manager pods in the 'kube-system' namespace.", "type": "kubectl", "output": "```bash\nkubectl logs -n kube-system -l component=kube-controller-manager --tail=100\n```"}
{"instruction": "List master nodes using the node-role.kubernetes.io/master label.", "type": "kubectl", "output": "```bash\nkubectl get nodes -l node-role.kubernetes.io/master\n```"}
{"instruction": "List worker nodes by excluding the master label.", "type": "kubectl", "output": "```bash\nkubectl get nodes -l '!node-role.kubernetes.io/master'\n```"}
{"instruction": "Show labels for the namespace 'staging'.", "type": "kubectl", "output": "```bash\nkubectl get namespace staging --show-labels\n```"}
{"instruction": "Edit the namespace 'test'.", "type": "kubectl", "output": "```bash\nkubectl edit namespace test\n```"}
{"instruction": "Patch the namespace 'dev' to add a label owner=dev-team.", "type": "kubectl", "output": "```bash\nkubectl patch namespace dev -p '{\"metadata\":{\"labels\":{\"owner\":\"dev-team\"}}}'\n```"}
{"instruction": "Retrieve the full JSON schema for the pod resource.", "type": "kubectl", "output": "```bash\nkubectl explain pod --recursive\n```"}
{"instruction": "Retrieve the full JSON schema for the service resource.", "type": "kubectl", "output": "```bash\nkubectl explain service --recursive\n```"}
{"instruction": "List all installed kubectl plugins.", "type": "kubectl", "output": "```bash\nkubectl plugin list\n```"}
{"instruction": "Apply a multi-document YAML file 'all-resources.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply -f all-resources.yaml\n```"}
{"instruction": "Delete multiple resources defined in the file 'delete-all.yaml'.", "type": "kubectl", "output": "```bash\nkubectl delete -f delete-all.yaml\n```"}
{"instruction": "Display a summary of cluster resource usage using 'kubectl top nodes'.", "type": "kubectl", "output": "```bash\nkubectl top nodes\n```"}
{"instruction": "Display a summary of pod resource usage using 'kubectl top pods'.", "type": "kubectl", "output": "```bash\nkubectl top pods\n```"}
{"instruction": "Roll back the daemonset 'log-agent' to its previous revision.", "type": "kubectl", "output": "```bash\nkubectl rollout undo daemonset log-agent\n```"}
{"instruction": "Roll back the statefulset 'db' to revision 2.", "type": "kubectl", "output": "```bash\nkubectl rollout undo statefulset db --to-revision=2\n```"}
{"instruction": "List all services with custom columns for name, type, and cluster IP.", "type": "kubectl", "output": "```bash\nkubectl get svc -o custom-columns=NAME:.metadata.name,TYPE:.spec.type,CLUSTER-IP:.spec.clusterIP\n```"}
{"instruction": "List all persistent volumes with their capacity.", "type": "kubectl", "output": "```bash\nkubectl get pv -o custom-columns=NAME:.metadata.name,CAPACITY:.spec.capacity.storage\n```"}
{"instruction": "Update the image of container 'app-container' in pod 'app-pod' to 'myimage:latest'.", "type": "kubectl", "output": "```bash\nkubectl set image pod/app-pod app-container=myimage:latest\n```"}
{"instruction": "Debug pod 'debug-pod' by launching an ephemeral container with the busybox image.", "type": "kubectl", "output": "```bash\nkubectl debug pod/debug-pod --image=busybox --target=debug-pod\n```"}
{"instruction": "Debug node 'node-1' by running an ephemeral container with the busybox image.", "type": "kubectl", "output": "```bash\nkubectl debug node/node-1 -it --image=busybox\n```"}
{"instruction": "Create a certificate signing request using the configuration in 'csr.yaml'.", "type": "kubectl", "output": "```bash\nkubectl create -f csr.yaml\n```"}
{"instruction": "Approve the certificate signing request 'my-csr'.", "type": "kubectl", "output": "```bash\nkubectl certificate approve my-csr\n```"}
{"instruction": "Deny the certificate signing request 'old-csr'.", "type": "kubectl", "output": "```bash\nkubectl certificate deny old-csr\n```"}
{"instruction": "List all certificate signing requests in the cluster.", "type": "kubectl", "output": "```bash\nkubectl get csr\n```"}
{"instruction": "Filter kube-apiserver logs for audit entries.", "type": "kubectl", "output": "```bash\nkubectl logs -n kube-system -l component=kube-apiserver | grep audit\n```"}
{"instruction": "Display the configuration of the kube-proxy ConfigMap in the 'kube-system' namespace.", "type": "kubectl", "output": "```bash\nkubectl get configmap kube-proxy -n kube-system -o yaml\n```"}
{"instruction": "Apply changes to the kube-proxy configuration from the file 'kube-proxy.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply -f kube-proxy.yaml -n kube-system\n```"}
{"instruction": "List all endpoints with detailed addresses and ports.", "type": "kubectl", "output": "```bash\nkubectl get endpoints -o wide\n```"}
{"instruction": "Watch for changes in pods in the 'default' namespace.", "type": "kubectl", "output": "```bash\nkubectl get pods -n default --watch\n```"}
{"instruction": "Watch for changes in the node list.", "type": "kubectl", "output": "```bash\nkubectl get nodes --watch\n```"}
{"instruction": "Create a new namespace 'integration-test' and label it with env=testing.", "type": "kubectl", "output": "```bash\nkubectl create namespace integration-test && kubectl label namespace integration-test env=testing\n```"}
{"instruction": "Delete the namespace 'integration-test'.", "type": "kubectl", "output": "```bash\nkubectl delete namespace integration-test\n```"}
{"instruction": "Set the default namespace of the current context to 'default'.", "type": "kubectl", "output": "```bash\nkubectl config set-context --current --namespace=default\n```"}
{"instruction": "Unset the default namespace for the current context.", "type": "kubectl", "output": "```bash\nkubectl config set-context --current --namespace=\n```"}
{"instruction": "Apply updates to deployment 'api-deploy' using server-side apply from 'api.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply --server-side -f api.yaml\n```"}
{"instruction": "Perform a dry-run server-side apply on deployment 'api-deploy' from 'api.yaml'.", "type": "kubectl", "output": "```bash\nkubectl apply --server-side --dry-run=server -f api.yaml\n```"}
{"instruction": "Wait for the rollout of deployment 'worker-deploy' to complete.", "type": "kubectl", "output": "```bash\nkubectl rollout status deployment worker-deploy\n```"}
{"instruction": "Show the rollout history for replication controller 'rc-old'.", "type": "kubectl", "output": "```bash\nkubectl rollout history rc rc-old\n```"}
{"instruction": "Display the rollout history for statefulset 'cache'.", "type": "kubectl", "output": "```bash\nkubectl rollout history statefulset cache\n```"}
{"instruction": "Set the concurrency policy of cronjob 'cleanup' to Forbid new runs.", "type": "kubectl", "output": "```bash\nkubectl patch cronjob cleanup -p '{\"spec\":{\"concurrencyPolicy\": \"Forbid\"}}'\n```"}
{"instruction": "Suspend the cronjob 'cleanup'.", "type": "kubectl", "output": "```bash\nkubectl patch cronjob cleanup -p '{\"spec\": {\"suspend\": true}}'\n```"}
{"instruction": "Resume the cronjob 'cleanup'.", "type": "kubectl", "output": "```bash\nkubectl patch cronjob cleanup -p '{\"spec\": {\"suspend\": false}}'\n```"}
{"instruction": "List all lease objects in the 'kube-node-lease' namespace.", "type": "kubectl", "output": "```bash\nkubectl get lease -n kube-node-lease\n```"}
{"instruction": "Describe the lease 'node-lease' in the 'kube-node-lease' namespace.", "type": "kubectl", "output": "```bash\nkubectl describe lease node-lease -n kube-node-lease\n```"}
{"instruction": "Fetch logs from the init container named 'init-container' in pod 'init-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs init-pod -c init-container\n```"}
{"instruction": "Execute an interactive shell in the init container of pod 'init-pod'.", "type": "kubectl", "output": "```bash\nkubectl exec -it init-pod -c init-container -- /bin/sh\n```"}
{"instruction": "List all jobs with the label batch=true.", "type": "kubectl", "output": "```bash\nkubectl get jobs -l batch=true\n```"}
{"instruction": "Delete the job 'cleanup-job' in the 'batch' namespace.", "type": "kubectl", "output": "```bash\nkubectl delete job cleanup-job -n batch\n```"}
{"instruction": "List all pods with custom columns showing name and restart count.", "type": "kubectl", "output": "```bash\nkubectl get pods -o custom-columns=NAME:.metadata.name,RESTARTS:.status.containerStatuses[*].restartCount\n```"}
{"instruction": "Watch changes for the replication controller 'rc-watch'.", "type": "kubectl", "output": "```bash\nkubectl get rc rc-watch --watch\n```"}
{"instruction": "List all non-namespaced API resources.", "type": "kubectl", "output": "```bash\nkubectl api-resources --namespaced=false\n```"}
{"instruction": "View the kubeconfig details for the current context.", "type": "kubectl", "output": "```bash\nkubectl config view --minify\n```"}
{"instruction": "Add a new cluster 'new-cluster' to your kubeconfig with an insecure connection.", "type": "kubectl", "output": "```bash\nkubectl config set-cluster new-cluster --server=https://new.cluster:6443 --insecure-skip-tls-verify=true\n```"}
{"instruction": "Add a new user 'new-user' to your kubeconfig with basic credentials.", "type": "kubectl", "output": "```bash\nkubectl config set-credentials new-user --username=new-user --password=pass123\n```"}
{"instruction": "Create a new context 'new-context' using cluster 'new-cluster' and user 'new-user'.", "type": "kubectl", "output": "```bash\nkubectl config set-context new-context --cluster=new-cluster --user=new-user\n```"}
{"instruction": "Switch the current context to 'new-context'.", "type": "kubectl", "output": "```bash\nkubectl config use-context new-context\n```"}
{"instruction": "List all contexts in the kubeconfig.", "type": "kubectl", "output": "```bash\nkubectl config get-contexts\n```"}
{"instruction": "Display the entire kubeconfig file in raw YAML format.", "type": "kubectl", "output": "```bash\nkubectl config view --raw\n```"}
{"instruction": "Update deployment 'backend' to set its container 'backend' image pull policy to Always.", "type": "kubectl", "output": "```bash\nkubectl patch deployment backend -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"backend\",\"imagePullPolicy\":\"Always\"}]}}}}'\n```"}
{"instruction": "Retrieve logs from a previously terminated container in pod 'failure-pod'.", "type": "kubectl", "output": "```bash\nkubectl logs failure-pod --previous\n```"}
{"instruction": "Run a pod named 'hello' using the busybox image that prints 'Hello, Kubernetes' and sleeps.", "type": "kubectl", "output": "```bash\nkubectl run hello --image=busybox --restart=Never -- /bin/sh -c 'echo Hello, Kubernetes; sleep 3600'\n```"}
{"instruction": "Delete the pod 'hello' after testing.", "type": "kubectl", "output": "```bash\nkubectl delete pod hello\n```"}
{"instruction": "Create a configmap named 'env-config' from the environment file 'app.env'.", "type": "kubectl", "output": "```bash\nkubectl create configmap env-config --from-env-file=app.env\n```"}
{"instruction": "Mount the configmap 'env-config' into deployment 'app-deploy' at the path /etc/config.", "type": "kubectl", "output": "```bash\nkubectl set volume deployment/app-deploy --add --name=config-volume --configmap-name=env-config --mount-path=/etc/config\n```"}
{"instruction": "Update the configmap 'env-config' from the file 'app.env' using a dry-run and apply.", "type": "kubectl", "output": "```bash\nkubectl create configmap env-config --from-env-file=app.env --dry-run=client -o yaml | kubectl apply -f -\n```"}
{"instruction": "Force delete a pod named 'stuck-pod' without waiting for graceful termination.", "type": "kubectl", "output": "```bash\nkubectl delete pod stuck-pod --grace-period=0 --force\n```"}
{"instruction": "Annotate deployment 'web-deploy' with the commit hash 'abc123'.", "type": "kubectl", "output": "```bash\nkubectl annotate deployment web-deploy commit=abc123\n```"}
{"instruction": "Label the pod 'temp-pod' with the label test=true.", "type": "kubectl", "output": "```bash\nkubectl label pod temp-pod test=true\n```"}
{"instruction": "Remove the 'test' label from pod 'temp-pod'.", "type": "kubectl", "output": "```bash\nkubectl label pod temp-pod test-\n```"}
{"instruction": "Export all deployments in the 'default' namespace to a YAML file named 'deployments.yaml'.", "type": "kubectl", "output": "```bash\nkubectl get deployments -n default -o yaml > deployments.yaml\n```"}
{"instruction": "List all pods in namespace 'custom'", "type": "kubectl", "output": "```bash\nkubectl get pods -n custom\n```"}
{"instruction": "Get detailed information about deployment 'frontend' in JSON format", "type": "kubectl", "output": "```bash\nkubectl get deployment frontend -o json\n```"}
{"instruction": "Watch live updates for statefulsets in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get statefulsets -n default --watch\n```"}
{"instruction": "Display all pods with the label 'env=staging'", "type": "kubectl", "output": "```bash\nkubectl get pods -l env=staging\n```"}
{"instruction": "Describe the service account 'default' in namespace 'kube-system'", "type": "kubectl", "output": "```bash\nkubectl describe serviceaccount default -n kube-system\n```"}
{"instruction": "Set image pull policy for deployment 'app' to Always using patch", "type": "kubectl", "output": "```bash\nkubectl patch deployment app -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"app\",\"imagePullPolicy\":\"Always\"}]}}}}'\n```"}
{"instruction": "Roll back deployment 'app' to a previous revision", "type": "kubectl", "output": "```bash\nkubectl rollout undo deployment app\n```"}
{"instruction": "Get pods in namespace 'default' with their IP addresses", "type": "kubectl", "output": "```bash\nkubectl get pods -n default -o wide\n```"}
{"instruction": "Delete all completed jobs in namespace 'batch'", "type": "kubectl", "output": "```bash\nkubectl delete job --field-selector=status.successful=1 -n batch\n```"}
{"instruction": "Get endpoints for service 'myapp' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get endpoints myapp -n default\n```"}
{"instruction": "Describe configmap 'app-config' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl describe configmap app-config -n default\n```"}
{"instruction": "Apply a configuration from a remote URL 'https://example.com/config.yaml'", "type": "kubectl", "output": "```bash\nkubectl apply -f https://example.com/config.yaml\n```"}
{"instruction": "Show the differences between the live and local configuration of deployment 'api'", "type": "kubectl", "output": "```bash\nkubectl diff -f api.yaml\n```"}
{"instruction": "List all resources of type 'ingress' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get ingress -n default\n```"}
{"instruction": "Describe persistent volume claim 'my-pvc' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl describe pvc my-pvc -n default\n```"}
{"instruction": "Convert a manifest file 'service.yaml' to JSON", "type": "kubectl", "output": "```bash\nkubectl convert -f service.yaml -o json\n```"}
{"instruction": "List pods with custom columns in namespace 'prod' showing name and node", "type": "kubectl", "output": "```bash\nkubectl get pods -n prod -o custom-columns=NAME:.metadata.name,NODE:.spec.nodeName\n```"}
{"instruction": "Set resource limits on deployment 'worker' from file 'resources.yaml'", "type": "kubectl", "output": "```bash\nkubectl set resources deployment worker -f resources.yaml\n```"}
{"instruction": "Get events for a specific pod 'worker-123' in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl get events --field-selector involvedObject.name=worker-123 -n prod\n```"}
{"instruction": "Create a role binding for the 'read-only' role in namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl create rolebinding read-only-binding --role=read-only --serviceaccount=dev:default -n dev\n```"}
{"instruction": "Delete the role 'old-role' from namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl delete role old-role -n default\n```"}
{"instruction": "Show annotations for pod 'test-pod' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get pod test-pod -n default -o jsonpath='{.metadata.annotations}'\n```"}
{"instruction": "Set a label 'priority=high' on deployment 'critical-app' in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl label deployment critical-app priority=high -n prod\n```"}
{"instruction": "Remove the label 'deprecated' from service 'old-service' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl label service old-service deprecated- -n default\n```"}
{"instruction": "Expose a port from pod 'debug-pod' to local machine port 9999", "type": "kubectl", "output": "```bash\nkubectl port-forward pod/debug-pod 9999:80\n```"}
{"instruction": "List all pods in all namespaces with wide output", "type": "kubectl", "output": "```bash\nkubectl get pods --all-namespaces -o wide\n```"}
{"instruction": "Display API resource definitions for 'cronjob'", "type": "kubectl", "output": "```bash\nkubectl explain cronjob\n```"}
{"instruction": "Apply a patch to add a new environment variable to deployment 'worker'", "type": "kubectl", "output": "```bash\nkubectl patch deployment worker -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"worker\",\"env\":[{\"name\":\"DEBUG\",\"value\":\"true\"}]}]}}}}'\n```"}
{"instruction": "List all jobs in all namespaces with wide output", "type": "kubectl", "output": "```bash\nkubectl get jobs --all-namespaces -o wide\n```"}
{"instruction": "Show details of replica set 'frontend-abc123' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl describe rs frontend-abc123 -n default\n```"}
{"instruction": "Scale replica set 'frontend-abc123' to 8 replicas in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl scale rs frontend-abc123 --replicas=8 -n default\n```"}
{"instruction": "Create a new secret from a literal value 'password=secret'", "type": "kubectl", "output": "```bash\nkubectl create secret generic my-secret --from-literal=password=secret\n```"}
{"instruction": "Update secret 'my-secret' with new literal data using dry-run", "type": "kubectl", "output": "```bash\nkubectl create secret generic my-secret --from-literal=password=newsecret --dry-run=client -o yaml | kubectl apply -f -\n```"}
{"instruction": "List all endpoints with the label 'app=backend'", "type": "kubectl", "output": "```bash\nkubectl get endpoints -l app=backend\n```"}
{"instruction": "Show detailed information for service 'db-service' in JSON format", "type": "kubectl", "output": "```bash\nkubectl get svc db-service -o json\n```"}
{"instruction": "Export the configuration of statefulset 'cache' to a YAML file", "type": "kubectl", "output": "```bash\nkubectl get statefulset cache -o yaml > cache-statefulset.yaml\n```"}
{"instruction": "List pods using a custom output format showing name and status", "type": "kubectl", "output": "```bash\nkubectl get pods -o custom-columns=NAME:.metadata.name,STATUS:.status.phase\n```"}
{"instruction": "Show the last 50 log lines for container 'main' in pod 'app-pod'", "type": "kubectl", "output": "```bash\nkubectl logs app-pod -c main --tail=50\n```"}
{"instruction": "Run a temporary pod with image 'alpine' to execute a command", "type": "kubectl", "output": "```bash\nkubectl run temp-alpine --image=alpine --restart=Never -- /bin/sh -c 'echo Temporary Pod'\n```"}
{"instruction": "Create a namespace 'qa' and set a label 'environment=qa'", "type": "kubectl", "output": "```bash\nkubectl create namespace qa && kubectl label namespace qa environment=qa\n```"}
{"instruction": "Annotate namespace 'qa' with 'owner=team-qa'", "type": "kubectl", "output": "```bash\nkubectl annotate namespace qa owner=team-qa\n```"}
{"instruction": "Describe node 'node-5' and display its conditions", "type": "kubectl", "output": "```bash\nkubectl describe node node-5\n```"}
{"instruction": "Get all pods in namespace 'default' with a custom output showing node name", "type": "kubectl", "output": "```bash\nkubectl get pods -n default -o custom-columns=NAME:.metadata.name,NODE:.spec.nodeName\n```"}
{"instruction": "Show the rolling update status for daemonset 'fluent-bit'", "type": "kubectl", "output": "```bash\nkubectl rollout status daemonset fluent-bit\n```"}
{"instruction": "Apply changes in directory 'overlays/dev' recursively", "type": "kubectl", "output": "```bash\nkubectl apply -R -f overlays/dev\n```"}
{"instruction": "List pods with the field 'status.phase=Pending' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get pods -n default --field-selector=status.phase=Pending\n```"}
{"instruction": "Create a secret from a file 'token.txt'", "type": "kubectl", "output": "```bash\nkubectl create secret generic token-secret --from-file=token.txt\n```"}
{"instruction": "Delete a configmap named 'old-config' from namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl delete configmap old-config -n dev\n```"}
{"instruction": "Watch for new events in the 'kube-system' namespace", "type": "kubectl", "output": "```bash\nkubectl get events -n kube-system --watch\n```"}
{"instruction": "Display logs for init container 'init' in pod 'setup-pod'", "type": "kubectl", "output": "```bash\nkubectl logs setup-pod -c init\n```"}
{"instruction": "Label node 'node-10' with 'zone=us-central1-a'", "type": "kubectl", "output": "```bash\nkubectl label node node-10 zone=us-central1-a\n```"}
{"instruction": "Remove label 'zone' from node 'node-10'", "type": "kubectl", "output": "```bash\nkubectl label node node-10 zone-\n```"}
{"instruction": "Patch service 'frontend-svc' to add a new port 8081", "type": "kubectl", "output": "```bash\nkubectl patch service frontend-svc -p '{\"spec\":{\"ports\":[{\"port\":8081,\"targetPort\":8081}]}}'\n```"}
{"instruction": "Get a list of all resources in namespace 'monitoring'", "type": "kubectl", "output": "```bash\nkubectl get all -n monitoring\n```"}
{"instruction": "Export deployment 'backend' configuration to a file 'backend.yaml'", "type": "kubectl", "output": "```bash\nkubectl get deployment backend -o yaml > backend.yaml\n```"}
{"instruction": "Create a new configmap 'game-config' from a directory 'game-settings'", "type": "kubectl", "output": "```bash\nkubectl create configmap game-config --from-file=game-settings\n```"}
{"instruction": "Annotate pod 'game-server' with version 'v2.0'", "type": "kubectl", "output": "```bash\nkubectl annotate pod game-server version=v2.0\n```"}
{"instruction": "Set environment variable 'MODE=debug' on pod 'game-server' using patch", "type": "kubectl", "output": "```bash\nkubectl patch pod game-server -p '{\"spec\":{\"containers\":[{\"name\":\"game-server\",\"env\":[{\"name\":\"MODE\",\"value\":\"debug\"}]}]}}'\n```"}
{"instruction": "Describe the endpoints for the service 'game-svc' in namespace 'games'", "type": "kubectl", "output": "```bash\nkubectl describe endpoints game-svc -n games\n```"}
{"instruction": "List all deployments sorted by creation timestamp in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get deployments -n default --sort-by=.metadata.creationTimestamp\n```"}
{"instruction": "Watch for changes in deployments in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl get deployments -n prod --watch\n```"}
{"instruction": "Scale deployment 'microservice' to zero replicas to pause it", "type": "kubectl", "output": "```bash\nkubectl scale deployment microservice --replicas=0\n```"}
{"instruction": "Restart deployment 'microservice' by rolling update", "type": "kubectl", "output": "```bash\nkubectl rollout restart deployment microservice\n```"}
{"instruction": "Set a new image for container 'service' in statefulset 'db' to 'postgres:13'", "type": "kubectl", "output": "```bash\nkubectl set image statefulset/db service=postgres:13\n```"}
{"instruction": "Display the history of rollouts for statefulset 'db'", "type": "kubectl", "output": "```bash\nkubectl rollout history statefulset db\n```"}
{"instruction": "Force a deployment to restart by patching its annotations", "type": "kubectl", "output": "```bash\nkubectl patch deployment app -p '{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"date\":\"$(date)\"}}}}}'\n```"}
{"instruction": "Retrieve logs from the container 'worker' in pod 'job-runner' since 10 minutes ago", "type": "kubectl", "output": "```bash\nkubectl logs job-runner -c worker --since=10m\n```"}
{"instruction": "List all pods in namespace 'analytics' with label 'tier=backend'", "type": "kubectl", "output": "```bash\nkubectl get pods -n analytics -l tier=backend\n```"}
{"instruction": "Describe service 'analytics-svc' in namespace 'analytics'", "type": "kubectl", "output": "```bash\nkubectl describe service analytics-svc -n analytics\n```"}
{"instruction": "List all statefulsets with label 'role=database' in namespace 'data'", "type": "kubectl", "output": "```bash\nkubectl get statefulsets -n data -l role=database\n```"}
{"instruction": "Create a new secret 'db-credentials' from multiple literal values", "type": "kubectl", "output": "```bash\nkubectl create secret generic db-credentials --from-literal=username=admin --from-literal=password=secret\n```"}
{"instruction": "Delete secret 'old-credentials' from namespace 'data'", "type": "kubectl", "output": "```bash\nkubectl delete secret old-credentials -n data\n```"}
{"instruction": "List all pods with a restart count greater than 0", "type": "kubectl", "output": "```bash\nkubectl get pods -o json | jq '.items[] | select(.status.containerStatuses[].restartCount > 0) | .metadata.name'\n```"}
{"instruction": "Apply a label 'release=stable' to all pods in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl label pods --all release=stable -n prod\n```"}
{"instruction": "Remove the label 'release' from all pods in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl label pods --all release- -n prod\n```"}
{"instruction": "Fetch a list of all container images running in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get pods -n default -o jsonpath='{..image}'\n```"}
{"instruction": "List all replication controllers in namespace 'legacy'", "type": "kubectl", "output": "```bash\nkubectl get rc -n legacy\n```"}
{"instruction": "Describe replication controller 'old-rc' in namespace 'legacy'", "type": "kubectl", "output": "```bash\nkubectl describe rc old-rc -n legacy\n```"}
{"instruction": "Delete replication controller 'old-rc' in namespace 'legacy'", "type": "kubectl", "output": "```bash\nkubectl delete rc old-rc -n legacy\n```"}
{"instruction": "Export replication controller 'old-rc' configuration to a file", "type": "kubectl", "output": "```bash\nkubectl get rc old-rc -n legacy -o yaml > old-rc.yaml\n```"}
{"instruction": "Show node resource usage in a custom table format", "type": "kubectl", "output": "```bash\nkubectl top nodes --no-headers | awk '{print $1, $3, $5}'\n```"}
{"instruction": "List all pods with owner references", "type": "kubectl", "output": "```bash\nkubectl get pods -o jsonpath='{range .items[*]}{@.metadata.name}:{@.metadata.ownerReferences[*].name} {end}'\n```"}
{"instruction": "Create a secret from a directory 'ssl'", "type": "kubectl", "output": "```bash\nkubectl create secret generic ssl-secret --from-file=ssl\n```"}
{"instruction": "Update deployment 'web' to use a new image from a private registry", "type": "kubectl", "output": "```bash\nkubectl set image deployment/web web=private.registry.com/web:latest\n```"}
{"instruction": "Describe the resource quotas in namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl describe quota -n dev\n```"}
{"instruction": "Get all pods using a JSONPath query to display name and node name", "type": "kubectl", "output": "```bash\nkubectl get pods -o jsonpath='{range .items[*]}{.metadata.name} {.spec.nodeName}\\n{end}'\n```"}
{"instruction": "List all configmaps in namespace 'ops' in YAML format", "type": "kubectl", "output": "```bash\nkubectl get configmaps -n ops -o yaml\n```"}
{"instruction": "Annotate deployment 'api-deploy' with 'build=2025-02-04'", "type": "kubectl", "output": "```bash\nkubectl annotate deployment api-deploy build=2025-02-04\n```"}
{"instruction": "Patch statefulset 'cache' to update its updateStrategy to RollingUpdate", "type": "kubectl", "output": "```bash\nkubectl patch statefulset cache -p '{\"spec\":{\"updateStrategy\":{\"type\":\"RollingUpdate\"}}}'\n```"}
{"instruction": "Scale the daemonset 'metrics-agent' to 0 (not normally allowed)", "type": "kubectl", "output": "```bash\nkubectl scale daemonset metrics-agent --replicas=0\n```"}
{"instruction": "List all custom resource objects of type 'MyResource' in all namespaces", "type": "kubectl", "output": "```bash\nkubectl get MyResource --all-namespaces\n```"}
{"instruction": "Get a specific field 'status.phase' for pod 'example-pod' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get pod example-pod -n default -o jsonpath='{.status.phase}'\n```"}
{"instruction": "View details of the node's addresses in JSON", "type": "kubectl", "output": "```bash\nkubectl get node node-1 -o jsonpath='{.status.addresses}'\n```"}
{"instruction": "Display services sorted by their cluster IP", "type": "kubectl", "output": "```bash\nkubectl get svc --sort-by=.spec.clusterIP\n```"}
{"instruction": "Describe the mutating webhook 'sidecar-injector'", "type": "kubectl", "output": "```bash\nkubectl describe mutatingwebhookconfiguration sidecar-injector\n```"}
{"instruction": "Patch a service account 'builder' to add an image pull secret", "type": "kubectl", "output": "```bash\nkubectl patch serviceaccount builder -p '{\"imagePullSecrets\":[{\"name\":\"regcred\"}]}'\n```"}
{"instruction": "List all pods in namespace 'default' that are not ready", "type": "kubectl", "output": "```bash\nkubectl get pods -n default --field-selector=status.phase!=Running\n```"}
{"instruction": "Create a job 'cleanup-temp' from command line to remove temp files", "type": "kubectl", "output": "```bash\nkubectl run cleanup-temp --image=alpine --restart=Never -- /bin/sh -c 'rm -rf /tmp/*'\n```"}
{"instruction": "Delete the job 'cleanup-temp' after completion", "type": "kubectl", "output": "```bash\nkubectl delete job cleanup-temp\n```"}
{"instruction": "Get the list of all pods with their restart counts in JSON format", "type": "kubectl", "output": "```bash\nkubectl get pods -o json | jq '.items[] | {name: .metadata.name, restarts: .status.containerStatuses[0].restartCount}'\n```"}
{"instruction": "View the last 20 events in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get events -n default --sort-by=.metadata.creationTimestamp | tail -n 20\n```"}
{"instruction": "List all roles across all namespaces", "type": "kubectl", "output": "```bash\nkubectl get roles --all-namespaces\n```"}
{"instruction": "List all cluster roles", "type": "kubectl", "output": "```bash\nkubectl get clusterroles\n```"}
{"instruction": "Describe the cluster role 'cluster-admin'", "type": "kubectl", "output": "```bash\nkubectl describe clusterrole cluster-admin\n```"}
{"instruction": "Create a cluster role binding for user 'alice' to cluster-admin", "type": "kubectl", "output": "```bash\nkubectl create clusterrolebinding alice-admin --clusterrole=cluster-admin --user=alice\n```"}
{"instruction": "Delete the cluster role binding 'alice-admin'", "type": "kubectl", "output": "```bash\nkubectl delete clusterrolebinding alice-admin\n```"}
{"instruction": "Export all secrets in namespace 'default' to a JSON file", "type": "kubectl", "output": "```bash\nkubectl get secrets -n default -o json > secrets.json\n```"}
{"instruction": "List all nodes with labels in a custom format", "type": "kubectl", "output": "```bash\nkubectl get nodes -o custom-columns=NAME:.metadata.name,LABELS:.metadata.labels\n```"}
{"instruction": "Set the image for all containers in deployment 'multi-container' to 'busybox:latest'", "type": "kubectl", "output": "```bash\nkubectl set image deployment/multi-container *=busybox:latest\n```"}
{"instruction": "Patch pod 'test-pod' to add an annotation 'debug=true'", "type": "kubectl", "output": "```bash\nkubectl patch pod test-pod -p '{\"metadata\":{\"annotations\":{\"debug\":\"true\"}}}'\n```"}
{"instruction": "Run an ephemeral container in pod 'test-pod' for debugging", "type": "kubectl", "output": "```bash\nkubectl debug pod/test-pod --image=busybox\n```"}
{"instruction": "List all pods with a specific container name 'nginx'", "type": "kubectl", "output": "```bash\nkubectl get pods -o jsonpath='{.items[?(@.spec.containers[*].name==\"nginx\")].metadata.name}'\n```"}
{"instruction": "Create a pod with multiple containers using a multi-document YAML", "type": "kubectl", "output": "```bash\nkubectl apply -f multi-container-pod.yaml\n```"}
{"instruction": "Update deployment 'web' using a strategic merge patch", "type": "kubectl", "output": "```bash\nkubectl patch deployment web -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"web\",\"resources\":{\"limits\":{\"cpu\":\"500m\"}}}]}}}}'\n```"}
{"instruction": "List all available API groups", "type": "kubectl", "output": "```bash\nkubectl api-resources --api-group=''\n```"}
{"instruction": "Display a summary of current contexts from kubeconfig", "type": "kubectl", "output": "```bash\nkubectl config get-contexts\n```"}
{"instruction": "Set the current context to use user 'bob'", "type": "kubectl", "output": "```bash\nkubectl config set-context --current --user=bob\n```"}
{"instruction": "Switch to context 'dev-context'", "type": "kubectl", "output": "```bash\nkubectl config use-context dev-context\n```"}
{"instruction": "Get a list of all pods in namespace 'staging' with their restart counts using custom-columns", "type": "kubectl", "output": "```bash\nkubectl get pods -n staging -o custom-columns=NAME:.metadata.name,RESTARTS:.status.containerStatuses[*].restartCount\n```"}
{"instruction": "Describe persistent volume 'pv-data' in detail", "type": "kubectl", "output": "```bash\nkubectl describe pv pv-data\n```"}
{"instruction": "List all persistent volume claims across all namespaces", "type": "kubectl", "output": "```bash\nkubectl get pvc --all-namespaces\n```"}
{"instruction": "Create a new service from a YAML file 'service.yaml' in namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl create -f service.yaml -n dev\n```"}
{"instruction": "Replace the existing configmap 'app-config' in namespace 'default' using a file", "type": "kubectl", "output": "```bash\nkubectl replace -f app-config.yaml -n default\n```"}
{"instruction": "Run a one-off command in a new pod 'debug-tool' using the image 'ubuntu'", "type": "kubectl", "output": "```bash\nkubectl run debug-tool --rm -it --image=ubuntu -- /bin/bash\n```"}
{"instruction": "Get the list of all namespaces with their status", "type": "kubectl", "output": "```bash\nkubectl get namespaces\n```"}
{"instruction": "View detailed information for node 'master-node' in JSON", "type": "kubectl", "output": "```bash\nkubectl get node master-node -o json\n```"}
{"instruction": "Create a new service account 'build-bot' in namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl create serviceaccount build-bot -n ci\n```"}
{"instruction": "Describe the service account 'build-bot' in namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl describe serviceaccount build-bot -n ci\n```"}
{"instruction": "Patch deployment 'ci-server' to add an environment variable 'CI=true'", "type": "kubectl", "output": "```bash\nkubectl patch deployment ci-server -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"ci-server\",\"env\":[{\"name\":\"CI\",\"value\":\"true\"}]}]}}}}'\n```"}
{"instruction": "List all custom resources of type 'Foo' in namespace 'test'", "type": "kubectl", "output": "```bash\nkubectl get Foo -n test\n```"}
{"instruction": "Get the OpenAPI schema for the 'Pod' resource", "type": "kubectl", "output": "```bash\nkubectl get --raw /openapi/v2 | jq '.definitions.Pod'\n```"}
{"instruction": "Apply a label 'team=dev' to namespace 'development'", "type": "kubectl", "output": "```bash\nkubectl label namespace development team=dev\n```"}
{"instruction": "Remove the label 'team' from namespace 'development'", "type": "kubectl", "output": "```bash\nkubectl label namespace development team-\n```"}
{"instruction": "Show only the names of cluster roles", "type": "kubectl", "output": "```bash\nkubectl get clusterroles -o custom-columns=NAME:.metadata.name\n```"}
{"instruction": "Watch for new cluster role bindings", "type": "kubectl", "output": "```bash\nkubectl get clusterrolebindings --watch\n```"}
{"instruction": "Describe the role binding 'read-only-binding' in namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl describe rolebinding read-only-binding -n dev\n```"}
{"instruction": "Create a new replication controller from 'rc.yaml' in namespace 'legacy'", "type": "kubectl", "output": "```bash\nkubectl create -f rc.yaml -n legacy\n```"}
{"instruction": "List all API versions available in the cluster", "type": "kubectl", "output": "```bash\nkubectl api-versions\n```"}
{"instruction": "Update the image of pod 'single-container' directly (not recommended)", "type": "kubectl", "output": "```bash\nkubectl set image pod/single-container single-container=myimage:latest\n```"}
{"instruction": "Retrieve logs from pod 'stream-pod' and follow them in real time", "type": "kubectl", "output": "```bash\nkubectl logs stream-pod -f\n```"}
{"instruction": "Display detailed container statuses for pod 'status-pod'", "type": "kubectl", "output": "```bash\nkubectl describe pod status-pod\n```"}
{"instruction": "Create a new ingress from file 'ingress.yaml' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl create -f ingress.yaml -n web\n```"}
{"instruction": "Patch ingress 'web-ingress' to update its backend service", "type": "kubectl", "output": "```bash\nkubectl patch ingress web-ingress -n web -p '{\"spec\":{\"rules\":[{\"http\":{\"paths\":[{\"backend\":{\"serviceName\":\"new-service\",\"servicePort\":80}}]}]}]}'\n```"}
{"instruction": "List all endpoints for ingress 'web-ingress' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl get endpoints -n web -l kubernetes.io/ingress-name=web-ingress\n```"}
{"instruction": "Display a summary of resource quotas in namespace 'production'", "type": "kubectl", "output": "```bash\nkubectl get quota -n production\n```"}
{"instruction": "Describe resource quota 'compute-quota' in namespace 'production'", "type": "kubectl", "output": "```bash\nkubectl describe quota compute-quota -n production\n```"}
{"instruction": "Create a new resource quota from file 'quota.yaml' in namespace 'production'", "type": "kubectl", "output": "```bash\nkubectl create -f quota.yaml -n production\n```"}
{"instruction": "Delete resource quota 'temp-quota' from namespace 'temp'", "type": "kubectl", "output": "```bash\nkubectl delete quota temp-quota -n temp\n```"}
{"instruction": "List all persistent volumes with detailed output", "type": "kubectl", "output": "```bash\nkubectl get pv -o wide\n```"}
{"instruction": "Describe persistent volume 'pv-ssd' in detail", "type": "kubectl", "output": "```bash\nkubectl describe pv pv-ssd\n```"}
{"instruction": "Set up port forwarding from service 'db-svc' in namespace 'database' port 5432 to local port 15432", "type": "kubectl", "output": "```bash\nkubectl port-forward service/db-svc 15432:5432 -n database\n```"}
{"instruction": "Execute a command in an init container of pod 'init-example'", "type": "kubectl", "output": "```bash\nkubectl exec -it init-example -c init-container -- /bin/sh\n```"}
{"instruction": "Run a pod 'trace' with image 'jaegertracing/all-in-one:1.21'", "type": "kubectl", "output": "```bash\nkubectl run trace --image=jaegertracing/all-in-one:1.21 --restart=Never\n```"}
{"instruction": "Delete pod 'trace' after troubleshooting", "type": "kubectl", "output": "```bash\nkubectl delete pod trace\n```"}
{"instruction": "List all pods with the annotation 'backup=true'", "type": "kubectl", "output": "```bash\nkubectl get pods -A -o jsonpath='{.items[?(@.metadata.annotations.backup==\"true\")].metadata.name}'\n```"}
{"instruction": "Describe the secret 'tls-cert' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl describe secret tls-cert -n web\n```"}
{"instruction": "Create a TLS secret from files 'tls.crt' and 'tls.key' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl create secret tls tls-cert --cert=tls.crt --key=tls.key -n web\n```"}
{"instruction": "List all jobs in namespace 'ci' with their completions", "type": "kubectl", "output": "```bash\nkubectl get jobs -n ci -o custom-columns=NAME:.metadata.name,COMPLETIONS:.status.succeeded\n```"}
{"instruction": "Describe job 'build-job' in namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl describe job build-job -n ci\n```"}
{"instruction": "Create a cronjob 'nightly-build' from file 'cronjob.yaml' in namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl create -f cronjob.yaml -n ci\n```"}
{"instruction": "Suspend the cronjob 'nightly-build' temporarily", "type": "kubectl", "output": "```bash\nkubectl patch cronjob nightly-build -n ci -p '{\"spec\":{\"suspend\":true}}'\n```"}
{"instruction": "Resume the cronjob 'nightly-build'", "type": "kubectl", "output": "```bash\nkubectl patch cronjob nightly-build -n ci -p '{\"spec\":{\"suspend\":false}}'\n```"}
{"instruction": "Get the status of cronjob 'nightly-build' in namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl get cronjob nightly-build -n ci\n```"}
{"instruction": "Delete cronjob 'nightly-build' from namespace 'ci'", "type": "kubectl", "output": "```bash\nkubectl delete cronjob nightly-build -n ci\n```"}
{"instruction": "Label all deployments in namespace 'marketing' with 'tier=frontend'", "type": "kubectl", "output": "```bash\nkubectl label deployments --all tier=frontend -n marketing\n```"}
{"instruction": "Remove the label 'tier' from all deployments in namespace 'marketing'", "type": "kubectl", "output": "```bash\nkubectl label deployments --all tier- -n marketing\n```"}
{"instruction": "Get detailed rollout history for deployment 'ad-server' in namespace 'ads'", "type": "kubectl", "output": "```bash\nkubectl rollout history deployment ad-server -n ads\n```"}
{"instruction": "Rollback deployment 'ad-server' in namespace 'ads' to a previous revision", "type": "kubectl", "output": "```bash\nkubectl rollout undo deployment ad-server -n ads\n```"}
{"instruction": "Set the default namespace for kubectl commands to 'sandbox'", "type": "kubectl", "output": "```bash\nkubectl config set-context --current --namespace=sandbox\n```"}
{"instruction": "Unset the default namespace in the current context", "type": "kubectl", "output": "```bash\nkubectl config set-context --current --namespace=''\n```"}
{"instruction": "List all pods in namespace 'sandbox' with their restart policy", "type": "kubectl", "output": "```bash\nkubectl get pods -n sandbox -o custom-columns=NAME:.metadata.name,RESTARTPOLICY:.spec.restartPolicy\n```"}
{"instruction": "Display the YAML of the current context from kubeconfig", "type": "kubectl", "output": "```bash\nkubectl config view --minify -o yaml\n```"}
{"instruction": "Create a network policy from file 'netpolicy.yaml' in namespace 'secure'", "type": "kubectl", "output": "```bash\nkubectl create -f netpolicy.yaml -n secure\n```"}
{"instruction": "Describe the network policy 'deny-all' in namespace 'secure'", "type": "kubectl", "output": "```bash\nkubectl describe networkpolicy deny-all -n secure\n```"}
{"instruction": "Patch deployment 'api-gateway' to update its number of replicas to 4", "type": "kubectl", "output": "```bash\nkubectl patch deployment api-gateway -p '{\"spec\":{\"replicas\":4}}'\n```"}
{"instruction": "Set node selector for deployment 'worker' to use nodes with label 'role=worker'", "type": "kubectl", "output": "```bash\nkubectl patch deployment worker -p '{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"role\":\"worker\"}}}}}'\n```"}
{"instruction": "Display logs for pod 'multi-log' for container 'sidecar' with timestamps", "type": "kubectl", "output": "```bash\nkubectl logs multi-log -c sidecar --timestamps\n```"}
{"instruction": "Tail logs for pod 'app-log' for container 'main' with 100 lines", "type": "kubectl", "output": "```bash\nkubectl logs app-log -c main --tail=100\n```"}
{"instruction": "Run a privileged container in pod 'privileged-pod' using the image 'centos'", "type": "kubectl", "output": "```bash\nkubectl run privileged-pod --image=centos --privileged --restart=Never -- /bin/bash\n```"}
{"instruction": "List all deployments with selector 'app=nginx' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl get deployments -n web -l app=nginx\n```"}
{"instruction": "Describe the deployment 'nginx-deploy' in namespace 'web'", "type": "kubectl", "output": "```bash\nkubectl describe deployment nginx-deploy -n web\n```"}
{"instruction": "Delete deployment 'temp-deploy' in namespace 'dev'", "type": "kubectl", "output": "```bash\nkubectl delete deployment temp-deploy -n dev\n```"}
{"instruction": "Get detailed information about pod 'cache-redis' with JSON output", "type": "kubectl", "output": "```bash\nkubectl get pod cache-redis -o json\n```"}
{"instruction": "Apply a label 'version=v2' to service 'api-service' in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl label service api-service version=v2 -n prod\n```"}
{"instruction": "Remove label 'version' from service 'api-service' in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl label service api-service version- -n prod\n```"}
{"instruction": "Patch pod 'db-pod' to add a toleration for key 'database'", "type": "kubectl", "output": "```bash\nkubectl patch pod db-pod -p '{\"spec\":{\"tolerations\":[{\"key\":\"database\",\"operator\":\"Exists\",\"effect\":\"NoSchedule\"}]}}'\n```"}
{"instruction": "List all pods in namespace 'default' sorted by restart count", "type": "kubectl", "output": "```bash\nkubectl get pods -n default --sort-by=.status.containerStatuses[0].restartCount\n```"}
{"instruction": "Set the log level for kubectl to debug", "type": "kubectl", "output": "```bash\nkubectl --v=9 get pods\n```"}
{"instruction": "Get the CPU and memory usage of pods with label 'app=worker' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl top pod -l app=worker -n default\n```"}
{"instruction": "Watch for changes in replica set 'frontend-abc123' in real time", "type": "kubectl", "output": "```bash\nkubectl get rs frontend-abc123 -n default --watch\n```"}
{"instruction": "List all service accounts in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl get serviceaccounts -n default\n```"}
{"instruction": "Describe the role 'view' in namespace 'default'", "type": "kubectl", "output": "```bash\nkubectl describe role view -n default\n```"}
{"instruction": "List all volume attachments in the cluster", "type": "kubectl", "output": "```bash\nkubectl get volumeattachments\n```"}
{"instruction": "Show the endpoints for deployment 'api' in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl get endpoints api -n prod\n```"}
{"instruction": "Watch for changes in persistent volume claims in namespace 'data'", "type": "kubectl", "output": "```bash\nkubectl get pvc -n data --watch\n```"}
{"instruction": "Patch service 'web-svc' to add an external IP using a JSON patch", "type": "kubectl", "output": "```bash\nkubectl patch service web-svc -p '[{\"op\": \"add\", \"path\": \"/spec/externalIPs\", \"value\": [\"192.168.1.100\"]}]'\n```"}
{"instruction": "Apply server-side apply on deployment 'backend' from file 'backend.yaml'", "type": "kubectl", "output": "```bash\nkubectl apply --server-side -f backend.yaml\n```"}
{"instruction": "Perform a dry-run server-side apply on statefulset 'db' from file 'db.yaml'", "type": "kubectl", "output": "```bash\nkubectl apply --server-side --dry-run=server -f db.yaml\n```"}
{"instruction": "Set image pull secrets for deployment 'secure-app' using a patch", "type": "kubectl", "output": "```bash\nkubectl patch deployment secure-app -p '{\"spec\":{\"template\":{\"spec\":{\"imagePullSecrets\":[{\"name\":\"myregistrykey\"}]}}}}'\n```"}
{"instruction": "List all pods with their IP addresses and restart counts in namespace 'prod'", "type": "kubectl", "output": "```bash\nkubectl get pods -n prod -o custom-columns=NAME:.metadata.name,IP:.status.podIP,RESTARTS:.status.containerStatuses[*].restartCount\n```"}
{"instruction": "User: List all namespaces.\nAssistant: Sure, here is the list of all namespaces.\nUser: Great, thanks.", "type": "fewshot", "output": "```bash\nkubectl get namespaces\n```"}
{"instruction": "User: I need to see pods across all namespaces.\nAssistant: Retrieving pods from every namespace.\nUser: Perfect.", "type": "fewshot", "output": "```bash\nkubectl get pods --all-namespaces\n```"}
{"instruction": "User: Show me detailed pod information.\nAssistant: Displaying pods in wide format for more details.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get pods -o wide\n```"}
{"instruction": "User: List all deployments across all namespaces.\nAssistant: Here are the deployments in every namespace.\nUser: Awesome.", "type": "fewshot", "output": "```bash\nkubectl get deployments --all-namespaces\n```"}
{"instruction": "User: I want to view node information in JSON format.\nAssistant: Fetching node details as JSON.\nUser: That’s exactly what I need.", "type": "fewshot", "output": "```bash\nkubectl get nodes -o json\n```"}
{"instruction": "User: Show me my current kubeconfig settings.\nAssistant: Displaying the current configuration view.\nUser: Great.", "type": "fewshot", "output": "```bash\nkubectl config view\n```"}
{"instruction": "User: I need to modify a deployment interactively.\nAssistant: Opening the editor for deployment 'my-deployment'.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl edit deployment my-deployment\n```"}
{"instruction": "User: Scale a replicaset for me.\nAssistant: Which replicaset should be scaled?\nUser: 'my-replicaset' to 3 replicas.", "type": "fewshot", "output": "```bash\nkubectl scale replicaset my-replicaset --replicas=3\n```"}
{"instruction": "User: Update the image for a deployment.\nAssistant: Changing image for container in deployment 'my-deployment'.\nUser: Set it to myimage:latest.", "type": "fewshot", "output": "```bash\nkubectl set image deployment/my-deployment my-container=myimage:latest\n```"}
{"instruction": "User: I want to see the rollout history of my deployment.\nAssistant: Retrieving rollout history for 'my-deployment'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl rollout history deployment/my-deployment\n```"}
{"instruction": "User: Can you revert my deployment to a previous state?\nAssistant: Rolling back 'my-deployment' to its previous revision.\nUser: Please do that.", "type": "fewshot", "output": "```bash\nkubectl rollout undo deployment/my-deployment\n```"}
{"instruction": "User: Show me the persistent volumes available.\nAssistant: Listing all persistent volumes.\nUser: Great.", "type": "fewshot", "output": "```bash\nkubectl get pv\n```"}
{"instruction": "User: I need to list all persistent volume claims.\nAssistant: Fetching all PVCs.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get pvc\n```"}
{"instruction": "User: Create a secret from a file for me.\nAssistant: Which file should be used?\nUser: Use secret.txt for 'my-secret'.", "type": "fewshot", "output": "```bash\nkubectl create secret generic my-secret --from-file=secret.txt\n```"}
{"instruction": "User: I want to create a secret from an environment file.\nAssistant: Creating 'env-secret' from .env file.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl create secret generic env-secret --from-env-file=.env\n```"}
{"instruction": "User: Apply all manifests in the current directory.\nAssistant: Applying manifests from ./manifests.\nUser: Perfect.", "type": "fewshot", "output": "```bash\nkubectl apply -f ./manifests\n```"}
{"instruction": "User: Remove a service from my cluster.\nAssistant: Deleting service 'my-service'.\nUser: Please delete it.", "type": "fewshot", "output": "```bash\nkubectl delete service my-service\n```"}
{"instruction": "User: I need to modify a configmap interactively.\nAssistant: Opening editor for configmap 'my-config'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl edit configmap my-config\n```"}
{"instruction": "User: Describe a service account for me.\nAssistant: Showing details for serviceaccount 'my-sa'.\nUser: Excellent.", "type": "fewshot", "output": "```bash\nkubectl describe serviceaccount my-sa\n```"}
{"instruction": "User: List all roles in a specific namespace.\nAssistant: Retrieving roles in namespace 'my-namespace'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get roles -n my-namespace\n```"}
{"instruction": "User: I need to list the rolebindings in a namespace.\nAssistant: Fetching rolebindings from 'my-namespace'.\nUser: That works.", "type": "fewshot", "output": "```bash\nkubectl get rolebindings -n my-namespace\n```"}
{"instruction": "User: Create a role that allows reading pods.\nAssistant: Creating role 'pod-reader' with get, list, watch permissions in 'my-namespace'.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl create role pod-reader --verb=get,list,watch --resource=pods -n my-namespace\n```"}
{"instruction": "User: Now bind that role to the default service account.\nAssistant: Creating a rolebinding named 'read-pods'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl create rolebinding read-pods --role=pod-reader --serviceaccount=my-namespace:default -n my-namespace\n```"}
{"instruction": "User: I want to check a cluster role called admin.\nAssistant: Retrieving the clusterrole 'admin'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get clusterrole admin\n```"}
{"instruction": "User: List all cluster rolebindings.\nAssistant: Here are the cluster rolebindings.\nUser: Perfect.", "type": "fewshot", "output": "```bash\nkubectl get clusterrolebinding\n```"}
{"instruction": "User: Cordon a node for maintenance.\nAssistant: Cordon node 'node-1' to prevent new pods.\nUser: Please do it.", "type": "fewshot", "output": "```bash\nkubectl cordon node-1\n```"}
{"instruction": "User: I need to drain a node.\nAssistant: Draining node 'node-2' and ignoring daemonsets.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl drain node-2 --ignore-daemonsets\n```"}
{"instruction": "User: Describe node 'node-1' for more details.\nAssistant: Fetching detailed information about node 'node-1'.\nUser: Thank you.", "type": "fewshot", "output": "```bash\nkubectl describe node node-1\n```"}
{"instruction": "User: Add a label to my deployment.\nAssistant: Labeling 'my-deployment' with env=staging.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl label deployment my-deployment env=staging\n```"}
{"instruction": "User: Can you annotate my deployment with a description?\nAssistant: Adding annotation 'description=Staging deployment' to 'my-deployment'.\nUser: Great.", "type": "fewshot", "output": "```bash\nkubectl annotate deployment my-deployment description='Staging deployment'\n```"}
{"instruction": "User: Set resource limits for a pod, please.\nAssistant: Setting limits of cpu=200m and memory=512Mi for 'my-pod'.\nUser: Execute that.", "type": "fewshot", "output": "```bash\nkubectl set resources pod my-pod --limits=cpu=200m,memory=512Mi\n```"}
{"instruction": "User: Show me events in the 'my-namespace' namespace.\nAssistant: Listing events in namespace 'my-namespace'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get events -n my-namespace\n```"}
{"instruction": "User: I need the YAML output for a pod.\nAssistant: Retrieving YAML for 'my-pod'.\nUser: That’s helpful.", "type": "fewshot", "output": "```bash\nkubectl get pod my-pod -o yaml\n```"}
{"instruction": "User: Show me the YAML for a deployment.\nAssistant: Here is the YAML for 'my-deployment'.\nUser: Good.", "type": "fewshot", "output": "```bash\nkubectl get deployment my-deployment -o yaml\n```"}
{"instruction": "User: I want the service YAML details.\nAssistant: Fetching YAML for service 'my-service'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get service my-service -o yaml\n```"}
{"instruction": "User: Patch a pod to add a new label.\nAssistant: Patching 'my-pod' to include label patched=true.\nUser: Do it.", "type": "fewshot", "output": "```bash\nkubectl patch pod my-pod -p '{\"metadata\":{\"labels\":{\"patched\":\"true\"}}}'\n```"}
{"instruction": "User: Run a temporary pod for testing.\nAssistant: Running 'temp-pod' using the alpine image interactively.\nUser: Start it.", "type": "fewshot", "output": "```bash\nkubectl run temp-pod --rm -it --image=alpine -- /bin/sh\n```"}
{"instruction": "User: I need to debug a failing pod.\nAssistant: Launching a debug container from pod 'my-pod' using busybox.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl debug pod/my-pod --image=busybox --copy-to=debug-pod --container=debug\n```"}
{"instruction": "User: Show me the last 50 lines of my pod logs.\nAssistant: Fetching tail of 'my-pod' logs.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod --tail=50\n```"}
{"instruction": "User: Follow the logs of my pod.\nAssistant: Streaming logs for 'my-pod'.\nUser: Alright.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod -f\n```"}
{"instruction": "User: I want to stream logs from a specific container in my pod.\nAssistant: Following logs for container 'my-container' in 'my-pod'.\nUser: Start streaming.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod -c my-container -f\n```"}
{"instruction": "User: Check the rollout status of my deployment.\nAssistant: Monitoring rollout status for 'my-deployment'.\nUser: Waiting.", "type": "fewshot", "output": "```bash\nkubectl rollout status deployment/my-deployment\n```"}
{"instruction": "User: Label my pod with a new version.\nAssistant: Labeling 'my-pod' with version=v2.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl label pod my-pod version=v2\n```"}
{"instruction": "User: Annotate a node for maintenance.\nAssistant: Adding maintenance='scheduled' annotation to node 'node-1'.\nUser: Do it.", "type": "fewshot", "output": "```bash\nkubectl annotate node node-1 maintenance='scheduled'\n```"}
{"instruction": "User: I need to list my custom resources.\nAssistant: Listing all resources of type 'myresource'.\nUser: Great.", "type": "fewshot", "output": "```bash\nkubectl get myresource\n```"}
{"instruction": "User: Provide details about a custom resource instance.\nAssistant: Describing 'my-resource-instance' of type 'myresource'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe myresource my-resource-instance\n```"}
{"instruction": "User: Apply a configuration file.\nAssistant: Applying configuration from 'config.yaml'.\nUser: Please do so.", "type": "fewshot", "output": "```bash\nkubectl apply -f config.yaml\n```"}
{"instruction": "User: Delete a persistent volume claim.\nAssistant: Removing PVC 'my-pvc'.\nUser: Execute that.", "type": "fewshot", "output": "```bash\nkubectl delete pvc my-pvc\n```"}
{"instruction": "User: Delete a persistent volume.\nAssistant: Deleting persistent volume 'my-pv'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete pv my-pv\n```"}
{"instruction": "User: List all secrets in my cluster.\nAssistant: Fetching list of secrets.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get secrets\n```"}
{"instruction": "User: Show me all configmaps in every namespace.\nAssistant: Listing configmaps across all namespaces.\nUser: Good.", "type": "fewshot", "output": "```bash\nkubectl get configmaps -A\n```"}
{"instruction": "User: Restart my daemonset rollout.\nAssistant: Rolling out restart for daemonset 'my-daemonset'.\nUser: Please do that.", "type": "fewshot", "output": "```bash\nkubectl rollout restart daemonset my-daemonset\n```"}
{"instruction": "User: Scale my daemonset.\nAssistant: Scaling daemonset 'my-daemonset' to 2 replicas.\nUser: Execute.", "type": "fewshot", "output": "```bash\nkubectl scale daemonset my-daemonset --replicas=2\n```"}
{"instruction": "User: Remove the daemonset from my cluster.\nAssistant: Deleting daemonset 'my-daemonset'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete daemonset my-daemonset\n```"}
{"instruction": "User: List all custom resource definitions.\nAssistant: Retrieving all CRDs in the cluster.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get crd\n```"}
{"instruction": "User: I want details about a specific CRD.\nAssistant: Describing CRD 'my-crd'.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl describe crd my-crd\n```"}
{"instruction": "User: What resource quotas are set in my namespace?\nAssistant: Listing resource quotas in 'my-namespace'.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl get resourcequotas -n my-namespace\n```"}
{"instruction": "User: I need to modify a resource quota.\nAssistant: Editing resource quota 'my-quota' in 'my-namespace'.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl edit resourcequota my-quota -n my-namespace\n```"}
{"instruction": "User: Apply a secret manifest file.\nAssistant: Applying secret configuration from secret.yaml.\nUser: Do that.", "type": "fewshot", "output": "```bash\nkubectl apply -f secret.yaml\n```"}
{"instruction": "User: Now apply my configmap manifest.\nAssistant: Applying configmap from configmap.yaml.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl apply -f configmap.yaml\n```"}
{"instruction": "User: Show me all nodes with their labels.\nAssistant: Displaying nodes along with their labels.\nUser: Perfect.", "type": "fewshot", "output": "```bash\nkubectl get nodes --show-labels\n```"}
{"instruction": "User: I want to add a tier label to my service.\nAssistant: Labeling service 'my-service' with tier=backend.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl label service my-service tier=backend\n```"}
{"instruction": "User: Please annotate my service with an owner.\nAssistant: Annotating service 'my-service' with owner=teamA.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl annotate service my-service owner='teamA'\n```"}
{"instruction": "User: Describe the replicaset details.\nAssistant: Fetching detailed information for replicaset 'my-replicaset'.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl describe rs my-replicaset\n```"}
{"instruction": "User: List pods created by a replicaset.\nAssistant: Getting pods with label app=my-app.\nUser: That’s fine.", "type": "fewshot", "output": "```bash\nkubectl get pods -l app=my-app\n```"}
{"instruction": "User: Scale my statefulset, please.\nAssistant: Scaling statefulset 'my-statefulset' to 3 replicas.\nUser: Execute.", "type": "fewshot", "output": "```bash\nkubectl scale statefulset my-statefulset --replicas=3\n```"}
{"instruction": "User: Edit my statefulset.\nAssistant: Opening the editor for statefulset 'my-statefulset'.\nUser: Please open.", "type": "fewshot", "output": "```bash\nkubectl edit statefulset my-statefulset\n```"}
{"instruction": "User: Describe my statefulset for details.\nAssistant: Displaying detailed info for statefulset 'my-statefulset'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe statefulset my-statefulset\n```"}
{"instruction": "User: Update the image in my statefulset.\nAssistant: Setting new image 'myimage:1.1' for container 'my-container' in 'my-statefulset'.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl set image statefulset/my-statefulset my-container=myimage:1.1\n```"}
{"instruction": "User: Check the rollout status of my statefulset.\nAssistant: Monitoring statefulset 'my-statefulset'.\nUser: Waiting.", "type": "fewshot", "output": "```bash\nkubectl rollout status statefulset/my-statefulset\n```"}
{"instruction": "User: Create a new cronjob for periodic tasks.\nAssistant: Creating cronjob 'my-cronjob' with a schedule of every 5 minutes.\nUser: Set it up.", "type": "fewshot", "output": "```bash\nkubectl create cronjob my-cronjob --image=busybox --schedule='*/5 * * * *' -- /bin/sh -c 'date'\n```"}
{"instruction": "User: List all cronjobs in the cluster.\nAssistant: Displaying all cronjobs.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl get cronjobs\n```"}
{"instruction": "User: Describe the cronjob in detail.\nAssistant: Describing cronjob 'my-cronjob'.\nUser: Please provide details.", "type": "fewshot", "output": "```bash\nkubectl describe cronjob my-cronjob\n```"}
{"instruction": "User: Delete the cronjob after it's no longer needed.\nAssistant: Deleting cronjob 'my-cronjob'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete cronjob my-cronjob\n```"}
{"instruction": "User: Create a job that runs once.\nAssistant: Creating job 'my-job' with the busybox image.\nUser: Execute the job.", "type": "fewshot", "output": "```bash\nkubectl create job my-job --image=busybox -- /bin/sh -c 'echo Hello'\n```"}
{"instruction": "User: List all jobs.\nAssistant: Fetching the list of jobs.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl get jobs\n```"}
{"instruction": "User: Describe my job.\nAssistant: Providing details for job 'my-job'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe job my-job\n```"}
{"instruction": "User: Remove the job from my cluster.\nAssistant: Deleting job 'my-job'.\nUser: Please delete it.", "type": "fewshot", "output": "```bash\nkubectl delete job my-job\n```"}
{"instruction": "User: What API resources are available?\nAssistant: Listing all API resources.\nUser: That’s useful.", "type": "fewshot", "output": "```bash\nkubectl api-resources\n```"}
{"instruction": "User: List all available API versions.\nAssistant: Here are the API versions.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl api-versions\n```"}
{"instruction": "User: Filter the API versions for v1 resources.\nAssistant: Searching API versions for 'v1'.\nUser: Please show.", "type": "fewshot", "output": "```bash\nkubectl api-versions | grep v1\n```"}
{"instruction": "User: Validate my deployment manifest without applying.\nAssistant: Running a client-side dry run on deployment.yaml.\nUser: Great.", "type": "fewshot", "output": "```bash\nkubectl apply -f deployment.yaml --dry-run=client\n```"}
{"instruction": "User: Show me the differences in my deployment configuration.\nAssistant: Displaying diff for deployment.yaml.\nUser: That’s helpful.", "type": "fewshot", "output": "```bash\nkubectl diff -f deployment.yaml\n```"}
{"instruction": "User: Wait for my pod to become ready.\nAssistant: Waiting until pod 'my-pod' meets the ready condition (timeout 60s).\nUser: Waiting...", "type": "fewshot", "output": "```bash\nkubectl wait --for=condition=ready pod/my-pod --timeout=60s\n```"}
{"instruction": "User: Wait until my deployment is available.\nAssistant: Waiting for 'my-deployment' to become available (timeout 120s).\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl wait --for=condition=available deployment/my-deployment --timeout=120s\n```"}
{"instruction": "User: I need to port-forward a service.\nAssistant: Forwarding local port 8080 to port 80 of service 'my-service'.\nUser: Set it up.", "type": "fewshot", "output": "```bash\nkubectl port-forward service/my-service 8080:80\n```"}
{"instruction": "User: Expose a pod externally.\nAssistant: Exposing pod 'my-pod' on port 80 and targeting container port 8080.\nUser: Do that.", "type": "fewshot", "output": "```bash\nkubectl expose pod my-pod --port=80 --target-port=8080\n```"}
{"instruction": "User: List all ingress resources in my namespace.\nAssistant: Retrieving ingresses in namespace 'my-namespace'.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl get ingress -n my-namespace\n```"}
{"instruction": "User: Describe my ingress details.\nAssistant: Describing ingress 'my-ingress' in 'my-namespace'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe ingress my-ingress -n my-namespace\n```"}
{"instruction": "User: Create an ingress from a manifest.\nAssistant: Applying ingress configuration from ingress.yaml.\nUser: Go ahead.", "type": "fewshot", "output": "```bash\nkubectl apply -f ingress.yaml\n```"}
{"instruction": "User: Delete an ingress in my namespace.\nAssistant: Removing ingress 'my-ingress' from 'my-namespace'.\nUser: Delete it.", "type": "fewshot", "output": "```bash\nkubectl delete ingress my-ingress -n my-namespace\n```"}
{"instruction": "User: Patch my deployment to change replica count using a strategic merge.\nAssistant: Patching 'my-deployment' to set replicas to 2.\nUser: Apply patch.", "type": "fewshot", "output": "```bash\nkubectl patch deployment my-deployment -p '{\"spec\":{\"replicas\":2}}'\n```"}
{"instruction": "User: Add an annotation to my replicaset.\nAssistant: Annotating replicaset 'my-replicaset' with team=devops.\nUser: Do it.", "type": "fewshot", "output": "```bash\nkubectl annotate rs my-replicaset team='devops'\n```"}
{"instruction": "User: Update the selector on my service.\nAssistant: Patching service 'my-service' to use selector app=my-app.\nUser: Please update.", "type": "fewshot", "output": "```bash\nkubectl patch service my-service -p '{\"spec\": {\"selector\": {\"app\": \"my-app\"}}}'\n```"}
{"instruction": "User: List the endpoints for my service.\nAssistant: Displaying endpoints for 'my-service'.\nUser: Show endpoints.", "type": "fewshot", "output": "```bash\nkubectl get endpoints my-service\n```"}
{"instruction": "User: Describe the endpoints of my service.\nAssistant: Providing detailed information for endpoints of 'my-service'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe endpoints my-service\n```"}
{"instruction": "User: Create a new pod using the nginx image.\nAssistant: Running pod 'test-pod' with the nginx image.\nUser: Start it.", "type": "fewshot", "output": "```bash\nkubectl run test-pod --image=nginx\n```"}
{"instruction": "User: Force delete a pod if it is stuck.\nAssistant: Force deleting pod 'test-pod' immediately.\nUser: Delete now.", "type": "fewshot", "output": "```bash\nkubectl delete pod test-pod --grace-period=0 --force\n```"}
{"instruction": "User: I need to evict a misbehaving pod.\nAssistant: Evicting pod 'my-pod' from its node.\nUser: Evict it.", "type": "fewshot", "output": "```bash\nkubectl evict pod my-pod\n```"}
{"instruction": "User: Add a label to all pods in the cluster.\nAssistant: Labeling every pod with env=production.\nUser: Apply label.", "type": "fewshot", "output": "```bash\nkubectl label pods --all env=production\n```"}
{"instruction": "User: Remove a specific label from my pod.\nAssistant: Removing the 'env' label from 'my-pod'.\nUser: Do that.", "type": "fewshot", "output": "```bash\nkubectl label pod my-pod env-\n```"}
{"instruction": "User: Show pod logs with timestamps.\nAssistant: Displaying logs for 'my-pod' with time stamps.\nUser: Show logs.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod --timestamps\n```"}
{"instruction": "User: Run a pod with a restart policy of Never.\nAssistant: Creating a one-time pod 'one-time' using alpine.\nUser: Execute command.", "type": "fewshot", "output": "```bash\nkubectl run one-time --image=alpine --restart=Never -- /bin/sh -c 'echo Hello'\n```"}
{"instruction": "User: I want to see a specific revision's history for my deployment.\nAssistant: Showing rollout history for 'my-deployment' at revision 2.\nUser: Provide details.", "type": "fewshot", "output": "```bash\nkubectl rollout history deployment/my-deployment --revision=2\n```"}
{"instruction": "User: Rollback my deployment to revision 1.\nAssistant: Undoing rollout for 'my-deployment' to revision 1.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl rollout undo deployment/my-deployment --to-revision=1\n```"}
{"instruction": "User: Label the default service account.\nAssistant: Labeling the default serviceaccount with team=backend.\nUser: Apply label.", "type": "fewshot", "output": "```bash\nkubectl label serviceaccount default team=backend\n```"}
{"instruction": "User: Annotate the default service account.\nAssistant: Adding description 'Default SA' to serviceaccount default.\nUser: Do it.", "type": "fewshot", "output": "```bash\nkubectl annotate serviceaccount default description='Default SA'\n```"}
{"instruction": "User: List all secrets in 'my-namespace'.\nAssistant: Fetching secrets from namespace 'my-namespace'.\nUser: Show them.", "type": "fewshot", "output": "```bash\nkubectl get secrets -n my-namespace\n```"}
{"instruction": "User: Provide details for a specific secret.\nAssistant: Describing secret 'my-secret' in namespace 'my-namespace'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe secret my-secret -n my-namespace\n```"}
{"instruction": "User: Create a secret from a literal value.\nAssistant: Creating secret 'token-secret' with token=abc123.\nUser: Please create it.", "type": "fewshot", "output": "```bash\nkubectl create secret generic token-secret --from-literal=token=abc123\n```"}
{"instruction": "User: Set an environment variable for my deployment.\nAssistant: Adding ENV=production to 'my-deployment'.\nUser: Update it.", "type": "fewshot", "output": "```bash\nkubectl set env deployment/my-deployment ENV=production\n```"}
{"instruction": "User: Remove an environment variable from my deployment.\nAssistant: Unsetting ENV variable from 'my-deployment'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl set env deployment/my-deployment ENV-\n```"}
{"instruction": "User: List container images used by my pod.\nAssistant: Fetching image list from 'my-pod'.\nUser: Show images.", "type": "fewshot", "output": "```bash\nkubectl get pod my-pod -o jsonpath='{.spec.containers[*].image}'\n```"}
{"instruction": "User: Retrieve the IP address of my pod.\nAssistant: Displaying pod IP for 'my-pod'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get pod my-pod -o jsonpath='{.status.podIP}'\n```"}
{"instruction": "User: Get the CPU and memory usage for a node.\nAssistant: Displaying resource usage for node 'node-1'.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl top node node-1\n```"}
{"instruction": "User: What is the resource usage of my pod?\nAssistant: Showing resource usage for 'my-pod'.\nUser: Provide details.", "type": "fewshot", "output": "```bash\nkubectl top pod my-pod\n```"}
{"instruction": "User: Describe my statefulset in detail.\nAssistant: Providing a detailed description for 'my-statefulset'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe statefulset my-statefulset\n```"}
{"instruction": "User: Add a new environment variable to my deployment.\nAssistant: Updating 'my-deployment' with NEW_VAR=value.\nUser: Update it.", "type": "fewshot", "output": "```bash\nkubectl set env deployment/my-deployment NEW_VAR=value\n```"}
{"instruction": "User: List every resource in my namespace.\nAssistant: Fetching all resources in 'my-namespace'.\nUser: List them.", "type": "fewshot", "output": "```bash\nkubectl get all -n my-namespace\n```"}
{"instruction": "User: Show me all resource types available in the cluster.\nAssistant: Listing all API resource types.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl api-resources\n```"}
{"instruction": "User: Convert my deployment manifest to JSON.\nAssistant: Converting deployment.yaml to JSON using output version v1.\nUser: Please convert.", "type": "fewshot", "output": "```bash\nkubectl convert -f deployment.yaml --output-version=v1\n```"}
{"instruction": "User: I need help with the apply command.\nAssistant: Displaying help information for 'kubectl apply'.\nUser: Show help.", "type": "fewshot", "output": "```bash\nkubectl apply --help\n```"}
{"instruction": "User: Show me help for the get command.\nAssistant: Here is the help for 'kubectl get'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get --help\n```"}
{"instruction": "User: List pods with specific custom columns.\nAssistant: Displaying pods with columns for name and status.\nUser: Show output.", "type": "fewshot", "output": "```bash\nkubectl get pods -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase\n```"}
{"instruction": "User: I want to watch the pods in my namespace.\nAssistant: Watching pods in 'my-namespace'.\nUser: Start watch.", "type": "fewshot", "output": "```bash\nkubectl get pods -n my-namespace --watch\n```"}
{"instruction": "User: Provide the YAML output for a service account.\nAssistant: Fetching YAML for serviceaccount 'my-sa'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl get serviceaccount my-sa -o yaml\n```"}
{"instruction": "User: Create a configmap using literal values.\nAssistant: Creating configmap 'literal-config' with key1=value1.\nUser: Please create.", "type": "fewshot", "output": "```bash\nkubectl create configmap literal-config --from-literal=key1=value1\n```"}
{"instruction": "User: Delete the literal configmap.\nAssistant: Deleting configmap 'literal-config'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete configmap literal-config\n```"}
{"instruction": "User: Patch my configmap to update a key.\nAssistant: Updating 'my-config' to set key=new-value.\nUser: Apply patch.", "type": "fewshot", "output": "```bash\nkubectl patch configmap my-config -p '{\"data\":{\"key\":\"new-value\"}}'\n```"}
{"instruction": "User: I need to edit a pod interactively.\nAssistant: Opening editor for pod 'my-pod'.\nUser: Please open.", "type": "fewshot", "output": "```bash\nkubectl edit pod my-pod\n```"}
{"instruction": "User: Add a role label to a node.\nAssistant: Labeling node 'node-3' with role=database.\nUser: Apply label.", "type": "fewshot", "output": "```bash\nkubectl label node node-3 role=database\n```"}
{"instruction": "User: Annotate node 'node-3' with a maintenance window.\nAssistant: Annotating node 'node-3' with maintenance='2025-02-05'.\nUser: Proceed.", "type": "fewshot", "output": "```bash\nkubectl annotate node node-3 maintenance='2025-02-05'\n```"}
{"instruction": "User: Watch my deployment rollout status in real time.\nAssistant: Monitoring rollout status for 'my-deployment'.\nUser: Watching.", "type": "fewshot", "output": "```bash\nkubectl rollout status deployment/my-deployment --watch\n```"}
{"instruction": "User: Run a pod with elevated privileges.\nAssistant: Running 'privileged-pod' using busybox with privileged mode.\nUser: Start it.", "type": "fewshot", "output": "```bash\nkubectl run privileged-pod --image=busybox --privileged -it -- /bin/sh\n```"}
{"instruction": "User: Create a new namespace for my project.\nAssistant: Creating namespace 'new-namespace'.\nUser: Please create.", "type": "fewshot", "output": "```bash\nkubectl create namespace new-namespace\n```"}
{"instruction": "User: Change my current context to use the new namespace.\nAssistant: Setting current context's namespace to 'new-namespace'.\nUser: Switch it.", "type": "fewshot", "output": "```bash\nkubectl config set-context --current --namespace=new-namespace\n```"}
{"instruction": "User: Force delete a namespace immediately.\nAssistant: Deleting namespace 'new-namespace' with force and zero grace period.\nUser: Delete it.", "type": "fewshot", "output": "```bash\nkubectl delete namespace new-namespace --force --grace-period=0\n```"}
{"instruction": "User: List API resources for the apps group.\nAssistant: Displaying API resources in the 'apps' group.\nUser: Show them.", "type": "fewshot", "output": "```bash\nkubectl api-resources --api-group=apps\n```"}
{"instruction": "User: Get endpoints from all namespaces.\nAssistant: Listing endpoints across the entire cluster.\nUser: List them.", "type": "fewshot", "output": "```bash\nkubectl get endpoints --all-namespaces\n```"}
{"instruction": "User: Describe a service in a different namespace.\nAssistant: Describing service 'my-service' in namespace 'another-namespace'.\nUser: Provide details.", "type": "fewshot", "output": "```bash\nkubectl describe service my-service -n another-namespace\n```"}
{"instruction": "User: Patch my service to update its port settings.\nAssistant: Changing service 'my-service' port to 8080 with targetPort 80.\nUser: Patch it.", "type": "fewshot", "output": "```bash\nkubectl patch service my-service -p '{\"spec\":{\"ports\":[{\"port\":8080,\"targetPort\":80}]}}'\n```"}
{"instruction": "User: Annotate my deployment with the latest git commit hash.\nAssistant: Adding annotation gitCommit=abcdef1234 to 'my-deployment'.\nUser: Annotate it.", "type": "fewshot", "output": "```bash\nkubectl annotate deployment my-deployment gitCommit=abcdef1234\n```"}
{"instruction": "User: Mark my deployment as stable with a label.\nAssistant: Labeling 'my-deployment' with status=stable (overwrite if exists).\nUser: Label it.", "type": "fewshot", "output": "```bash\nkubectl label deployment my-deployment status=stable --overwrite\n```"}
{"instruction": "User: Run a command in one of the pods of my deployment.\nAssistant: Executing ls /app in a pod from 'my-deployment'.\nUser: Run the command.", "type": "fewshot", "output": "```bash\nkubectl exec deployment/my-deployment -- ls /app\n```"}
{"instruction": "User: Get logs from the previous instance of my pod.\nAssistant: Fetching previous logs for 'my-pod'.\nUser: Retrieve logs.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod --previous\n```"}
{"instruction": "User: Stream logs from the sidecar container in my pod.\nAssistant: Following logs for container 'sidecar' in 'my-pod'.\nUser: Start streaming.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod -c sidecar -f\n```"}
{"instruction": "User: Get the deployment status as raw JSON.\nAssistant: Retrieving 'my-deployment' in JSON format.\nUser: Show JSON.", "type": "fewshot", "output": "```bash\nkubectl get deployment my-deployment -o json\n```"}
{"instruction": "User: I need the secret details in YAML format.\nAssistant: Fetching secret 'my-secret' output as YAML.\nUser: Show YAML.", "type": "fewshot", "output": "```bash\nkubectl get secret my-secret -o yaml\n```"}
{"instruction": "User: Run a one-off command in a new pod and remove it after execution.\nAssistant: Running temporary pod 'temp' with alpine to echo a message.\nUser: Execute command.", "type": "fewshot", "output": "```bash\nkubectl run --rm -i temp --image=alpine -- /bin/sh -c 'echo One-off'\n```"}
{"instruction": "User: Create a configmap from a file input.\nAssistant: Creating configmap 'file-config' from config.txt.\nUser: Create it.", "type": "fewshot", "output": "```bash\nkubectl create configmap file-config --from-file=config.txt\n```"}
{"instruction": "User: Delete the secret I no longer need.\nAssistant: Deleting secret 'token-secret'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete secret token-secret\n```"}
{"instruction": "User: List my custom resources in 'my-namespace'.\nAssistant: Retrieving custom resource 'myresource' from 'my-namespace'.\nUser: Show them.", "type": "fewshot", "output": "```bash\nkubectl get myresource -n my-namespace\n```"}
{"instruction": "User: Describe the CRD details of my custom resource.\nAssistant: Providing a detailed description for CRD 'my-crd'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl describe crd my-crd\n```"}
{"instruction": "User: Apply a new version of my deployment configuration.\nAssistant: Updating deployment using new-deployment.yaml.\nUser: Please apply.", "type": "fewshot", "output": "```bash\nkubectl apply -f new-deployment.yaml\n```"}
{"instruction": "User: Pause the rollout of my deployment temporarily.\nAssistant: Pausing rollout for 'my-deployment'.\nUser: Pause it.", "type": "fewshot", "output": "```bash\nkubectl rollout pause deployment/my-deployment\n```"}
{"instruction": "User: Resume the paused rollout of my deployment.\nAssistant: Resuming rollout for 'my-deployment'.\nUser: Resume it.", "type": "fewshot", "output": "```bash\nkubectl rollout resume deployment/my-deployment\n```"}
{"instruction": "User: Show me resource usage for my pod again.\nAssistant: Displaying current resource usage for 'my-pod'.\nUser: Thanks.", "type": "fewshot", "output": "```bash\nkubectl top pod my-pod\n```"}
{"instruction": "User: List resource usage for all nodes in the cluster.\nAssistant: Fetching top nodes by resource usage.\nUser: Show them.", "type": "fewshot", "output": "```bash\nkubectl top nodes\n```"}
{"instruction": "User: List pods along with the nodes they are running on.\nAssistant: Displaying pods with associated node names.\nUser: Perfect.", "type": "fewshot", "output": "```bash\nkubectl get pods -o=custom-columns=POD:.metadata.name,NODE:.spec.nodeName\n```"}
{"instruction": "User: Execute a command to print environment variables in a specific container.\nAssistant: Running 'printenv' in container 'my-container' of 'my-pod'.\nUser: Execute command.", "type": "fewshot", "output": "```bash\nkubectl exec my-pod -c my-container -- printenv\n```"}
{"instruction": "User: Run a network troubleshooting pod interactively.\nAssistant: Launching 'net-tool' pod using busybox for network diagnostics.\nUser: Start it.", "type": "fewshot", "output": "```bash\nkubectl run net-tool --rm -it --image=busybox -- /bin/sh\n```"}
{"instruction": "User: Expose my deployment using NodePort.\nAssistant: Exposing 'my-deployment' as a NodePort service on port 80.\nUser: Set it up.", "type": "fewshot", "output": "```bash\nkubectl expose deployment my-deployment --type=NodePort --port=80\n```"}
{"instruction": "User: Update the image for my replicaset.\nAssistant: Setting new image 'myimage:2.0' for replicaset 'my-replicaset'.\nUser: Update it.", "type": "fewshot", "output": "```bash\nkubectl set image rs/my-replicaset my-container=myimage:2.0\n```"}
{"instruction": "User: List all pods sorted by their restart count.\nAssistant: Displaying pods sorted by .status.containerStatuses[0].restartCount.\nUser: List them.", "type": "fewshot", "output": "```bash\nkubectl get pods --sort-by=.status.containerStatuses[0].restartCount\n```"}
{"instruction": "User: Delete my replicaset from the cluster.\nAssistant: Deleting replicaset 'my-replicaset'.\nUser: Remove it.", "type": "fewshot", "output": "```bash\nkubectl delete rs my-replicaset\n```"}
{"instruction": "User: Create a job manually from an existing cronjob.\nAssistant: Creating job 'my-manual-job' from cronjob 'my-cronjob'.\nUser: Please create.", "type": "fewshot", "output": "```bash\nkubectl create job --from=cronjob/my-cronjob my-manual-job\n```"}
{"instruction": "User: List pods with label filtering and wide output.\nAssistant: Retrieving pods with label app=my-app in wide format.\nUser: Show results.", "type": "fewshot", "output": "```bash\nkubectl get pods -l app=my-app -o wide\n```"}
{"instruction": "User: Provide detailed information about my namespace.\nAssistant: Describing namespace 'my-namespace'.\nUser: Give details.", "type": "fewshot", "output": "```bash\nkubectl describe namespace my-namespace\n```"}
{"instruction": "User: Patch my namespace to add a production label.\nAssistant: Updating namespace 'my-namespace' with label env=production.\nUser: Patch it.", "type": "fewshot", "output": "```bash\nkubectl patch namespace my-namespace -p '{\"metadata\":{\"labels\":{\"env\":\"production\"}}}'\n```"}
{"instruction": "User: Show logs for a container that failed in my pod.\nAssistant: Retrieving logs for container 'failed-container' in 'my-pod'.\nUser: Fetch logs.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod -c failed-container\n```"}
{"instruction": "User: List deployments sorted by creation timestamp.\nAssistant: Sorting deployments based on creation time.\nUser: List them.", "type": "fewshot", "output": "```bash\nkubectl get deployments --sort-by=.metadata.creationTimestamp\n```"}
{"instruction": "User: I want to modify a service interactively.\nAssistant: Opening editor for service 'my-service'.\nUser: Please edit.", "type": "fewshot", "output": "```bash\nkubectl edit service my-service\n```"}
{"instruction": "User: Run a pod with a privileged container using an override.\nAssistant: Launching 'admin-pod' with alpine in privileged mode using an override.\nUser: Execute command.", "type": "fewshot", "output": "```bash\nkubectl run admin-pod --image=alpine --overrides='{\"spec\": {\"containers\": [{\"name\": \"admin\", \"image\": \"alpine\", \"securityContext\": {\"privileged\": true}}]}}' -it --rm -- /bin/sh\n```"}
{"instruction": "User: Annotate my pod with a checksum value.\nAssistant: Adding annotation checksum=12345abcde to 'my-pod'.\nUser: Annotate it.", "type": "fewshot", "output": "```bash\nkubectl annotate pod my-pod checksum=12345abcde\n```"}
{"instruction": "User: Create a configmap that includes multiple files from a directory.\nAssistant: Creating configmap 'multi-config' from directory 'dir/'.\nUser: Create it.", "type": "fewshot", "output": "```bash\nkubectl create configmap multi-config --from-file=dir/\n```"}
{"instruction": "User: Delete all pods that match a certain label.\nAssistant: Deleting pods with label app=my-app.\nUser: Delete them.", "type": "fewshot", "output": "```bash\nkubectl delete pods -l app=my-app\n```"}
{"instruction": "User: Force delete a node from the cluster.\nAssistant: Forcibly deleting node 'node-5'.\nUser: Delete it now.", "type": "fewshot", "output": "```bash\nkubectl delete node node-5 --force\n```"}
{"instruction": "User: Set resource requests for my deployment.\nAssistant: Updating 'my-deployment' with requests cpu=100m and memory=256Mi.\nUser: Update it.", "type": "fewshot", "output": "```bash\nkubectl set resources deployment my-deployment --requests=cpu=100m,memory=256Mi\n```"}
{"instruction": "User: Remove resource limits from my deployment.\nAssistant: Unsetting limits on 'my-deployment'.\nUser: Remove limits.", "type": "fewshot", "output": "```bash\nkubectl set resources deployment my-deployment --limits=\n```"}
{"instruction": "User: Run a pod with a custom command.\nAssistant: Running 'custom-pod' using ubuntu and executing a custom command.\nUser: Execute it.", "type": "fewshot", "output": "```bash\nkubectl run custom-pod --image=ubuntu -- /bin/bash -c 'echo Custom Command'\n```"}
{"instruction": "User: I need detailed information about my job.\nAssistant: Describing job 'my-job' for full details.\nUser: Show me.", "type": "fewshot", "output": "```bash\nkubectl describe job my-job\n```"}
{"instruction": "User: Annotate my namespace with the owner information.\nAssistant: Adding annotation owner=teamB to 'my-namespace'.\nUser: Annotate it.", "type": "fewshot", "output": "```bash\nkubectl annotate namespace my-namespace owner='teamB'\n```"}
{"instruction": "User: Label my pod with a version, overwriting if necessary.\nAssistant: Labeling 'my-pod' with version=1.0.\nUser: Apply label.", "type": "fewshot", "output": "```bash\nkubectl label pod my-pod version=1.0 --overwrite\n```"}
{"instruction": "User: Patch my service account to include an image pull secret.\nAssistant: Patching the default serviceaccount to add 'my-registry-key'.\nUser: Patch it.", "type": "fewshot", "output": "```bash\nkubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"my-registry-key\"}]}'\n```"}
{"instruction": "User: Get logs from my container with timestamps and limit to 100 lines.\nAssistant: Displaying the last 100 lines of logs with timestamps for container 'my-container' in 'my-pod'.\nUser: Show logs.", "type": "fewshot", "output": "```bash\nkubectl logs my-pod -c my-container --timestamps --tail=100\n```"}
{"instruction": "User: Describe node 'node-1' and output in JSON format.\nAssistant: Fetching node 'node-1' details in JSON.\nUser: Show JSON.", "type": "fewshot", "output": "```bash\nkubectl get node node-1 -o json\n```"}
{"instruction": "User: Set a node selector for my deployment.\nAssistant: Patching 'my-deployment' to add nodeSelector disktype=ssd.\nUser: Update it.", "type": "fewshot", "output": "```bash\nkubectl patch deployment my-deployment -p '{\"spec\": {\"template\": {\"spec\": {\"nodeSelector\": {\"disktype\": \"ssd\"}}}}}'\n```"}
{"instruction": "User: Annotate my statefulset with a version number.\nAssistant: Adding annotation version=2.1 to 'my-statefulset'.\nUser: Annotate it.", "type": "fewshot", "output": "```bash\nkubectl annotate statefulset my-statefulset version=2.1\n```"}
{"instruction": "User: Label my cronjob for easier identification.\nAssistant: Labeling 'my-cronjob' with schedule=frequent.\nUser: Label it.", "type": "fewshot", "output": "```bash\nkubectl label cronjob my-cronjob schedule=frequent\n```"}
{"instruction": "User: Create a secret using a file but override the key name.\nAssistant: Creating secret 'file-secret' using customKey from config.txt.\nUser: Create it.", "type": "fewshot", "output": "```bash\nkubectl create secret generic file-secret --from-file=customKey=config.txt\n```"}
{"instruction": "User: Apply a patch file to update my configmap.\nAssistant: Patching 'my-config' using the file config-patch.yaml.\nUser: Apply patch.", "type": "fewshot", "output": "```bash\nkubectl patch configmap my-config --patch-file=config-patch.yaml\n```"}
{"instruction": "User: I need to open an interactive shell inside my pod.\nAssistant: Executing an interactive shell in 'my-pod'.\nUser: Open shell.", "type": "fewshot", "output": "```bash\nkubectl exec -it my-pod -- /bin/sh\n```"}
{"instruction": "User: Describe the replicaset in full detail.\nAssistant: Providing a detailed description of replicaset 'my-replicaset'.\nUser: Show details.", "type": "fewshot", "output": "```bash\nkubectl describe replicaset my-replicaset\n```"}
{"instruction": "User: List only the running pods using a field selector.\nAssistant: Fetching pods where status.phase equals Running.\nUser: List them.", "type": "fewshot", "output": "```bash\nkubectl get pods --field-selector=status.phase=Running\n```"}
{"instruction": "User: List all services with a specific label.\nAssistant: Retrieving services labeled tier=backend.\nUser: Show me the list.", "type": "fewshot", "output": "```bash\nkubectl get services -l tier=backend\n```"}
{"instruction": "User: Restart my deployment with a specific timeout.\nAssistant: Rolling out restart for 'my-deployment' with a timeout of 60s.\nUser: Restart it.", "type": "fewshot", "output": "```bash\nkubectl rollout restart deployment/my-deployment --timeout=60s\n```"}
{"instruction": "User: Show events related to a specific node.\nAssistant: Fetching events for node 'node-1'.\nUser: Provide events.", "type": "fewshot", "output": "```bash\nkubectl get events --field-selector=involvedObject.kind=Node,involvedObject.name=node-1\n```"}
{"instruction": "User: List pods with their readiness status using custom columns.\nAssistant: Displaying pod name and readiness state.\nUser: Show output.", "type": "fewshot", "output": "```bash\nkubectl get pods -o=custom-columns=NAME:.metadata.name,READY:.status.containerStatuses[*].ready\n```"}
{"instruction": "User: Patch my deployment to add an environment variable for debugging.\nAssistant: Updating 'my-deployment' to include DEBUG=true in container 'my-container'.\nUser: Patch it.", "type": "fewshot", "output": "```bash\nkubectl patch deployment my-deployment -p '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"my-container\", \"env\": [{\"name\": \"DEBUG\", \"value\": \"true\"}]}]}}}}'\n```"}
{"instruction": "User: Delete all resources that are marked temporary.\nAssistant: Removing all resources with label temporary=true.\nUser: Delete them.", "type": "fewshot", "output": "```bash\nkubectl delete all -l temporary=true\n```"}
{"instruction": "User: I want to see the logs.\nAssistant: Which pod's logs would you like to see?\nUser: The 'payment-pod'.", "type": "fewshot", "output": "```bash\nkubectl logs payment-pod\n```"}
{"instruction": "User: Scale a deployment for me.\nAssistant: Sure, which deployment do you want to scale?\nUser: 'analytics-service'.\nAssistant: To how many replicas?\nUser: 4.", "type": "fewshot", "output": "```bash\nkubectl scale deployment analytics-service --replicas=4\n```"}
{"instruction": "User: Delete a pod.\nAssistant: Can you specify the name of the pod?\nUser: Yes, 'temp-pod'.", "type": "fewshot", "output": "```bash\nkubectl delete pod temp-pod\n```"}
{"instruction": "User: Expose my app.\nAssistant: Could you provide the name of the deployment?\nUser: 'web-app'.\nAssistant: What port would you like to expose?\nUser: Port 80.", "type": "fewshot", "output": "```bash\nkubectl expose deployment web-app --port=80\n```"}
{"instruction": "User: Get the configmap.\nAssistant: Please specify the name of the configmap.\nUser: 'app-config'.", "type": "fewshot", "output": "```bash\nkubectl get configmap app-config\n```"}
{"instruction": "User: I need to run a command in a pod.\nAssistant: What's the name of the pod?\nUser: 'utility-pod'.\nAssistant: What command do you want to run?\nUser: 'ls /data'.", "type": "fewshot", "output": "```bash\nkubectl exec utility-pod -- ls /data\n```"}
{"instruction": "User: Show me the services.\nAssistant: Do you want to see services in a specific namespace?\nUser: Yes, in 'prod'.", "type": "fewshot", "output": "```bash\nkubectl get services -n prod\n```"}
{"instruction": "User: Describe the deployment.\nAssistant: Could you specify the name of the deployment?\nUser: 'auth-service'.", "type": "fewshot", "output": "```bash\nkubectl describe deployment auth-service\n```"}
{"instruction": "User: Roll out restart.\nAssistant: Which deployment would you like to restart?\nUser: 'cache'.", "type": "fewshot", "output": "```bash\nkubectl rollout restart deployment cache\n```"}
{"instruction": "User: Delete all pods.\nAssistant: Do you want to delete all pods in a specific namespace?\nUser: Yes, in 'test'.", "type": "fewshot", "output": "```bash\nkubectl delete pods --all -n test\n```"}
{"instruction": "User: Get logs.\nAssistant: Which pod's logs do you want to retrieve?\nUser: 'api-pod'.\nAssistant: Do you want to follow the logs?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl logs api-pod -f\n```"}
{"instruction": "User: Create a configmap.\nAssistant: What name should the configmap have?\nUser: 'settings'.\nAssistant: Do you want to create it from a file or literal values?\nUser: From file 'settings.conf'.", "type": "fewshot", "output": "```bash\nkubectl create configmap settings --from-file=settings.conf\n```"}
{"instruction": "User: Show events.\nAssistant: Do you want to see events in a specific namespace?\nUser: No, all namespaces.", "type": "fewshot", "output": "```bash\nkubectl get events --all-namespaces\n```"}
{"instruction": "User: Apply configurations.\nAssistant: Which file or directory contains the configurations?\nUser: The 'k8s-manifests' directory.", "type": "fewshot", "output": "```bash\nkubectl apply -f k8s-manifests/\n```"}
{"instruction": "User: What's using my node resources?\nAssistant: Do you want to see the resource usage of all nodes?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl top nodes\n```"}
{"instruction": "User: Get pods with label.\nAssistant: What label selector should be used?\nUser: 'app=web'.", "type": "fewshot", "output": "```bash\nkubectl get pods -l app=web\n```"}
{"instruction": "User: Delete a namespace.\nAssistant: Which namespace would you like to delete?\nUser: 'old-env'.", "type": "fewshot", "output": "```bash\nkubectl delete namespace old-env\n```"}
{"instruction": "User: Port forward.\nAssistant: Which pod do you want to port-forward?\nUser: 'db-pod'.\nAssistant: Which ports should be forwarded?\nUser: From local port 5432 to container port 5432.", "type": "fewshot", "output": "```bash\nkubectl port-forward db-pod 5432:5432\n```"}
{"instruction": "User: Run a command in a pod.\nAssistant: What's the name of the pod?\nUser: 'debug-pod'.\nAssistant: What command do you want to run?\nUser: '/bin/bash'.", "type": "fewshot", "output": "```bash\nkubectl exec -it debug-pod -- /bin/bash\n```"}
{"instruction": "User: Show me the deployments.\nAssistant: Do you want to see deployments in a specific namespace?\nUser: Yes, in 'development'.", "type": "fewshot", "output": "```bash\nkubectl get deployments -n development\n```"}
{"instruction": "User: Get service details.\nAssistant: Which service do you want to describe?\nUser: 'frontend-service'.", "type": "fewshot", "output": "```bash\nkubectl describe service frontend-service\n```"}
{"instruction": "User: Explain resource.\nAssistant: Which resource do you want to explain?\nUser: 'persistentvolumeclaim'.", "type": "fewshot", "output": "```bash\nkubectl explain persistentvolumeclaim\n```"}
{"instruction": "User: Create a secret.\nAssistant: What is the name of the secret?\nUser: 'db-credentials'.\nAssistant: Do you want to create it from literal values or a file?\nUser: From literals 'user=admin' and 'password=pass123'.", "type": "fewshot", "output": "```bash\nkubectl create secret generic db-credentials --from-literal=user=admin --from-literal=password=pass123\n```"}
{"instruction": "User: Get nodes.\nAssistant: Do you want detailed information?\nUser: Yes, describe them.", "type": "fewshot", "output": "```bash\nkubectl describe nodes\n```"}
{"instruction": "User: Delete pods with label.\nAssistant: What label should be used for deletion?\nUser: 'env=dev'.", "type": "fewshot", "output": "```bash\nkubectl delete pods -l env=dev\n```"}
{"instruction": "User: Scale statefulset.\nAssistant: Which statefulset do you want to scale?\nUser: 'zookeeper'.\nAssistant: To how many replicas?\nUser: 5.", "type": "fewshot", "output": "```bash\nkubectl scale statefulset zookeeper --replicas=5\n```"}
{"instruction": "User: Patch a deployment.\nAssistant: Which deployment do you want to patch?\nUser: 'api-deployment'.\nAssistant: Which patch file should be used?\nUser: 'api-patch.yaml'.", "type": "fewshot", "output": "```bash\nkubectl patch deployment api-deployment --patch-file=api-patch.yaml\n```"}
{"instruction": "User: Get CRDs.\nAssistant: Do you want to list all Custom Resource Definitions?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl get crds\n```"}
{"instruction": "User: Create a namespace.\nAssistant: What should be the name of the namespace?\nUser: 'integration-test'.", "type": "fewshot", "output": "```bash\nkubectl create namespace integration-test\n```"}
{"instruction": "User: Get the current context.\nAssistant: Do you want to display the current Kubernetes context?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl config current-context\n```"}
{"instruction": "User: Set context.\nAssistant: Which context do you want to switch to?\nUser: 'staging'.", "type": "fewshot", "output": "```bash\nkubectl config use-context staging\n```"}
{"instruction": "User: Run a busybox pod.\nAssistant: Do you want to run it interactively?\nUser: Yes.\nAssistant: What name should the pod have?\nUser: 'busybox-test'.", "type": "fewshot", "output": "```bash\nkubectl run busybox-test --image=busybox -it -- /bin/sh\n```"}
{"instruction": "User: Delete all resources.\nAssistant: Are you sure you want to delete all resources in the cluster?\nUser: No, just in 'dev' namespace.", "type": "fewshot", "output": "```bash\nkubectl delete all --all -n dev\n```"}
{"instruction": "User: Get events.\nAssistant: Do you want to see recent events?\nUser: Yes, from the last hour.", "type": "fewshot", "output": "```bash\nkubectl get events --since=1h\n```"}
{"instruction": "User: Explain ingress.\nAssistant: Do you want to explain the ingress resource?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl explain ingress\n```"}
{"instruction": "User: Save pod logs.\nAssistant: Which pod's logs do you want to save?\nUser: 'web-pod'.\nAssistant: What is the filename?\nUser: 'web-pod.log'.", "type": "fewshot", "output": "```bash\nkubectl logs web-pod > web-pod.log\n```"}
{"instruction": "User: View pod CPU usage.\nAssistant: Do you want to see CPU usage for all pods?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl top pods\n```"}
{"instruction": "User: Describe node.\nAssistant: Which node would you like to describe?\nUser: 'node-worker-3'.", "type": "fewshot", "output": "```bash\nkubectl describe node node-worker-3\n```"}
{"instruction": "User: Get service accounts.\nAssistant: In which namespace?\nUser: 'kube-system'.", "type": "fewshot", "output": "```bash\nkubectl get serviceaccounts -n kube-system\n```"}
{"instruction": "User: Delete job.\nAssistant: What is the name of the job?\nUser: 'data-import'.", "type": "fewshot", "output": "```bash\nkubectl delete job data-import\n```"}
{"instruction": "User: Create persistent volume claim.\nAssistant: What is the name of the PVC?\nUser: 'data-pvc'.\nAssistant: Do you have a YAML file or specifications?\nUser: I have 'pvc.yaml'.", "type": "fewshot", "output": "```bash\nkubectl apply -f pvc.yaml\n```"}
{"instruction": "User: Get pods in wide format.\nAssistant: In which namespace?\nUser: 'production'.", "type": "fewshot", "output": "```bash\nkubectl get pods -n production -o wide\n```"}
{"instruction": "User: Label a node.\nAssistant: Which node do you want to label?\nUser: 'node-2'.\nAssistant: What label do you want to apply?\nUser: 'disk=ssd'.", "type": "fewshot", "output": "```bash\nkubectl label nodes node-2 disk=ssd\n```"}
{"instruction": "User: Annotate a pod.\nAssistant: Which pod?\nUser: 'app-pod'.\nAssistant: What annotation?\nUser: 'description=\"Main application pod\"'.", "type": "fewshot", "output": "```bash\nkubectl annotate pod app-pod description=\"Main application pod\"\n```"}
{"instruction": "User: Get cluster info.\nAssistant: Do you want to retrieve cluster information?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl cluster-info\n```"}
{"instruction": "User: Delete deployment.\nAssistant: Which deployment should be deleted?\nUser: 'old-service'.", "type": "fewshot", "output": "```bash\nkubectl delete deployment old-service\n```"}
{"instruction": "User: Get volume attachments.\nAssistant: Do you want to list all volume attachments?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl get volumeattachments\n```"}
{"instruction": "User: Uncordon node.\nAssistant: Which node do you want to uncordon?\nUser: 'node-4'.", "type": "fewshot", "output": "```bash\nkubectl uncordon node-4\n```"}
{"instruction": "User: Get pod logs.\nAssistant: Which pod?\nUser: 'scheduler-pod'.\nAssistant: Do you want previous logs?\nUser: Yes.", "type": "fewshot", "output": "```bash\nkubectl logs scheduler-pod --previous\n```"}
{"instruction": "What is a DaemonSet in Kubernetes?", "type": "explanation", "output": "A DaemonSet ensures that all or some nodes run a copy of a pod. It's typically used for background tasks like log collection or monitoring agents."}
{"instruction": "Explain the difference between a Deployment and a StatefulSet.", "type": "explanation", "output": "A Deployment manages stateless applications, allowing for easy scaling and updating. A StatefulSet manages stateful applications, providing guarantees about the ordering and uniqueness of pods."}
{"instruction": "What is the purpose of a ConfigMap?", "type": "explanation", "output": "A ConfigMap stores non-confidential configuration data in key-value pairs, allowing you to decouple configuration artifacts from image content."}
{"instruction": "How do Services enable communication in Kubernetes?", "type": "explanation", "output": "Services provide network access to a set of pods. They abstract away pod details and enable loose coupling between dependent components."}
{"instruction": "What is the role of an Ingress resource?", "type": "explanation", "output": "An Ingress exposes HTTP and HTTPS routes from outside the cluster to services within the cluster, providing load balancing and SSL termination."}
{"instruction": "Describe the Kubernetes control plane.", "type": "explanation", "output": "The control plane manages the cluster's overall state, including scheduling, scaling, and responding to events. It includes components like etcd, kube-apiserver, kube-scheduler, and kube-controller-manager."}
{"instruction": "What is a PersistentVolumeClaim?", "type": "explanation", "output": "A PersistentVolumeClaim is a request for storage by a user. It allows pods to consume persistent storage resources."}
{"instruction": "Explain Kubernetes Namespaces.", "type": "explanation", "output": "Namespaces provide a way to divide cluster resources between multiple users or teams, allowing for isolation and resource quota management."}
{"instruction": "What are Labels and Selectors used for?", "type": "explanation", "output": "Labels are key-value pairs attached to resources. Selectors enable filtering and grouping of resources based on these labels."}
{"instruction": "How does Horizontal Pod Autoscaling work?", "type": "explanation", "output": "Horizontal Pod Autoscaling automatically scales the number of pod replicas based on observed CPU utilization or custom metrics."}
{"instruction": "What is a Kubernetes Operator?", "type": "explanation", "output": "An Operator is a method of packaging, deploying, and managing a Kubernetes application. It extends the Kubernetes API with custom resources and controllers."}
{"instruction": "Explain the role of etcd in Kubernetes.", "type": "explanation", "output": "etcd is a distributed key-value store that stores Kubernetes cluster data, providing a reliable way to store configuration data and maintain cluster state."}
{"instruction": "What is a ReplicaSet?", "type": "explanation", "output": "A ReplicaSet ensures that a specified number of pod replicas are running at any given time. Deployments are typically used instead of directly managing ReplicaSets."}
{"instruction": "How does kube-scheduler function?", "type": "explanation", "output": "The kube-scheduler assigns pods to nodes based on resource availability and any scheduling constraints, optimizing resource utilization."}
{"instruction": "What is a ServiceAccount?", "type": "explanation", "output": "A ServiceAccount provides an identity for processes that run in a pod, allowing them to authenticate with the Kubernetes API."}
{"instruction": "Describe the use of Volume Mounts in pods.", "type": "explanation", "output": "Volume Mounts attach storage volumes to containers within a pod, enabling data persistence across container restarts."}
{"instruction": "What is a Kubernetes Admission Controller?", "type": "explanation", "output": "An Admission Controller intercepts API server requests before they are persisted, allowing for validation, mutation, or policy enforcement."}
{"instruction": "Explain the Kubernetes CNI.", "type": "explanation", "output": "The Container Network Interface (CNI) provides a standardized way to configure network interfaces in Linux containers, enabling cluster networking."}
{"instruction": "How do you perform a rolling update in Kubernetes?", "type": "explanation", "output": "Rolling updates can be performed using Deployments, which gradually replace pods with new versions without downtime."}
{"instruction": "What is the purpose of a Job in Kubernetes?", "type": "explanation", "output": "A Job creates one or more pods and ensures that a specified number successfully terminate. It's used for batch tasks."}
{"instruction": "What are Init Containers in Kubernetes?", "type": "explanation", "output": "Init Containers are specialized containers that run before app containers in a pod. They can contain setup scripts and configuration that must run before the main application."}
{"instruction": "Explain Taints and Tolerations.", "type": "explanation", "output": "Taints and Tolerations work together to ensure that pods are not scheduled onto inappropriate nodes. Taints are applied to nodes, and pods with matching tolerations can be scheduled there."}
{"instruction": "What is a Pod Disruption Budget (PDB)?", "type": "explanation", "output": "A Pod Disruption Budget specifies the minimum or maximum number of pods that can be unavailable during voluntary disruptions, helping to maintain application availability."}
{"instruction": "Describe how Network Policies work.", "type": "explanation", "output": "Network Policies are used to control network traffic to and from pods, allowing you to enforce rules on how pods can communicate with each other and with other network endpoints."}
{"instruction": "What are Custom Resource Definitions (CRDs)?", "type": "explanation", "output": "CRDs allow you to extend Kubernetes with your own custom resources and controllers, enabling you to define and manage new types of objects beyond the built-in ones."}
{"instruction": "What is a Volume in Kubernetes?", "type": "explanation", "output": "A Volume in Kubernetes is a directory, possibly with data, accessible to containers in a pod. Volumes allow data to persist across container restarts."}
{"instruction": "Explain the concept of Node Affinity.", "type": "explanation", "output": "Node Affinity is a feature that allows you to constrain pods to be scheduled on specific nodes based on labels, offering more flexible scheduling."}
{"instruction": "What are Sidecar Containers?", "type": "explanation", "output": "Sidecar Containers are secondary containers that extend or enhance the functionality of the main container in a pod, often used for logging or proxying."}
{"instruction": "Describe Resource Quotas.", "type": "explanation", "output": "Resource Quotas are used to allocate resource limits per namespace, ensuring that no single team or application consumes all the resources in a cluster."}
{"instruction": "What is Kubernetes API aggregation?", "type": "explanation", "output": "API aggregation allows extending the Kubernetes API server with additional APIs by registering them as aggregated APIs."}
{"instruction": "Explain the use of Secrets in Kubernetes.", "type": "explanation", "output": "Secrets are used to store sensitive information, such as passwords or keys, in an encrypted format, making them available to pods in a secure way."}
{"instruction": "What is a Mutating Admission Webhook?", "type": "explanation", "output": "A Mutating Admission Webhook intercepts API requests and can modify them before they are persisted, allowing for dynamic configuration changes."}
{"instruction": "How do you perform Canary Deployments in Kubernetes?", "type": "explanation", "output": "Canary Deployments can be achieved using labels and selective traffic routing, deploying a new version alongside the old one for testing before full rollout."}
{"instruction": "What is Kubernetes Federation?", "type": "explanation", "output": "Kubernetes Federation allows you to manage multiple Kubernetes clusters as a single entity, enabling high availability and failover across regions."}
{"instruction": "Explain the purpose of ReplicaSets.", "type": "explanation", "output": "ReplicaSets ensure that a specified number of pod replicas are running at all times. They are often managed by Deployments for declarative updates."}
{"instruction": "What is kubelet's role in Kubernetes?", "type": "explanation", "output": "The kubelet is an agent that runs on each node in the cluster. It ensures that containers are running as expected by communicating with the control plane."}
{"instruction": "Describe the use of Liveness and Readiness Probes.", "type": "explanation", "output": "Liveness Probes detect when a container is running but not functioning properly, allowing Kubernetes to restart it. Readiness Probes determine when a container is ready to accept traffic."}
{"instruction": "What are Pod Presets?", "type": "explanation", "output": "Pod Presets are objects that inject information, such as environment variables or volumes, into pods at creation time, simplifying configuration."}
{"instruction": "Explain how Kubernetes handles Secrets.", "type": "explanation", "output": "Secrets are base64-encoded and stored in etcd. Access to Secrets is controlled via RBAC, and they can be mounted as volumes or exposed as environment variables."}
{"instruction": "What is the purpose of kube-proxy?", "type": "explanation", "output": "kube-proxy maintains network rules on nodes, enabling network communication to pods from network sessions inside or outside of the cluster."}
{"instruction": "Describe Cluster Autoscaling.", "type": "explanation", "output": "Cluster Autoscaling automatically adjusts the size of the cluster based on the resource requests of pods. It adds or removes nodes to meet demand."}
{"instruction": "What are Limit Ranges?", "type": "explanation", "output": "Limit Ranges are used to set default resource requests and limits within a namespace, ensuring pods do not exceed specified resource usage."}
{"instruction": "Explain how Service Meshes integrate with Kubernetes.", "type": "explanation", "output": "Service Meshes, like Istio, add a layer of infrastructure for managing service-to-service communication, offering features like traffic management and monitoring."}
{"instruction": "What is Helm in the context of Kubernetes?", "type": "explanation", "output": "Helm is a package manager for Kubernetes, allowing you to define, install, and upgrade complex Kubernetes applications using charts."}
{"instruction": "Describe the use of RBAC in Kubernetes.", "type": "explanation", "output": "Role-Based Access Control (RBAC) manages permissions within the cluster, defining who can perform what actions on which resources."}
{"instruction": "What is a Pod in Kubernetes?", "type": "explanation", "output": "A Pod is the basic execution unit in Kubernetes, representing a single instance of a running process in the cluster and encapsulating one or more containers."}
{"instruction": "Explain how Ingress Controllers work.", "type": "explanation", "output": "Ingress Controllers implement the rules defined in Ingress resources, managing external access to services in the cluster, often using a load balancer."}
{"instruction": "What is Pod Priority and Preemption?", "type": "explanation", "output": "Pod Priority assigns importance to pods, allowing higher priority pods to preempt lower priority ones when scheduling resources are scarce."}
{"instruction": "How do you secure Kubernetes clusters?", "type": "explanation", "output": "Securing clusters involves using RBAC, network policies, secrets management, regular updates, auditing, and following best practices for container security."}
{"instruction": "Describe the concept of Cluster Federation.", "type": "explanation", "output": "Cluster Federation allows managing multiple clusters as a single entity, enabling resource sharing and workload distribution across clusters."}
{"instruction": "What are Kubernetes Operators?", "type": "explanation", "output": "Operators are software extensions that use custom resources to manage applications and their components, automating operational tasks beyond Kubernetes' built-in capabilities."}
{"instruction": "What is a Deployment in Kubernetes?", "type": "explanation", "output": "A Deployment provides declarative updates for Pods and ReplicaSets, allowing you to manage your applications effectively."}
{"instruction": "How do ConfigMaps differ from Secrets?", "type": "explanation", "output": "ConfigMaps store non-confidential data in key-value pairs, while Secrets are intended for confidential data and are stored in an encoded format."}
{"instruction": "Explain the use of PersistentVolumes.", "type": "explanation", "output": "PersistentVolumes are storage resources in the cluster that are independent of the lifecycle of any individual pod. They provide durable storage for applications."}
{"instruction": "What is the purpose of a Service Account?", "type": "explanation", "output": "Service Accounts provide an identity for processes that run in a Pod. They are used to authenticate with the Kubernetes API server."}
{"instruction": "Describe the difference between ClusterIP and NodePort services.", "type": "explanation", "output": "ClusterIP exposes the service on an internal IP in the cluster, making it accessible only within the cluster. NodePort exposes the service on the same port of each selected node, making it accessible externally."}
{"instruction": "What are Pod Security Policies (PSPs) in Kubernetes?", "type": "explanation", "output": "Pod Security Policies are cluster-level resources that control the security conditions under which a pod is allowed to run, specifying constraints such as allowed privilege levels, volume types, and host settings."}
{"instruction": "Explain the function of a Validating Admission Webhook.", "type": "explanation", "output": "A Validating Admission Webhook intercepts API requests to the Kubernetes API server, checking the object’s configuration against defined policies and rejecting requests that do not comply."}
{"instruction": "Describe the role of the kube-controller-manager in Kubernetes.", "type": "explanation", "output": "The kube-controller-manager runs controllers that regulate the state of the cluster, including replication, node management, and endpoint management, ensuring the cluster matches the desired state."}
{"instruction": "What is the difference between a ClusterRole and a Role in Kubernetes RBAC?", "type": "explanation", "output": "A Role defines permissions within a single namespace, whereas a ClusterRole defines cluster-wide permissions or can be applied to multiple namespaces, offering broader access control."}
{"instruction": "Explain what a CronJob is in Kubernetes.", "type": "explanation", "output": "A CronJob creates Jobs on a time-based schedule, allowing you to run periodic or recurring tasks, similar to the functionality provided by cron in Linux."}
{"instruction": "Describe Pod affinity and anti-affinity and how they work.", "type": "explanation", "output": "Pod affinity and anti-affinity let you define rules about which pods should (or should not) be placed together based on labels, influencing the scheduler to group or separate workloads."}
{"instruction": "What are Service endpoints in Kubernetes and why are they important?", "type": "explanation", "output": "Service endpoints represent the IP addresses of pods backing a service. They are crucial for routing traffic correctly from a service to the appropriate pod destinations."}
{"instruction": "Differentiate between a LoadBalancer Service type and a ClusterIP Service type.", "type": "explanation", "output": "A ClusterIP service is only accessible within the cluster, while a LoadBalancer service exposes the service externally using a cloud provider’s load balancer."}
{"instruction": "What is an ExternalName Service in Kubernetes?", "type": "explanation", "output": "An ExternalName Service maps a service to a DNS name rather than a set of pods, allowing access to external resources using a service-like abstraction."}
{"instruction": "Describe a Headless Service and its use cases.", "type": "explanation", "output": "A Headless Service does not assign a ClusterIP, and instead returns the individual pod IPs. This is useful for stateful applications where direct pod-to-pod communication is required."}
{"instruction": "What are PersistentVolume reclaim policies?", "type": "explanation", "output": "Reclaim policies determine what happens to a PersistentVolume after its associated PersistentVolumeClaim is released, with options typically including Retain, Recycle, or Delete."}
{"instruction": "Explain the concept of StorageClasses in Kubernetes.", "type": "explanation", "output": "StorageClasses provide a way to define different tiers or types of storage with specific performance and availability characteristics, and they allow for dynamic provisioning of persistent volumes."}
{"instruction": "How does dynamic provisioning of storage work in Kubernetes?", "type": "explanation", "output": "Dynamic provisioning automatically creates persistent volumes based on StorageClass definitions when a PersistentVolumeClaim is made, removing the need for pre-provisioned storage."}
{"instruction": "Describe Container Storage Interface (CSI) drivers.", "type": "explanation", "output": "CSI drivers allow storage vendors to develop plugins that integrate with Kubernetes, providing a standard mechanism for attaching and mounting storage systems."}
{"instruction": "What is the Downward API in Kubernetes?", "type": "explanation", "output": "The Downward API exposes information about the pod and container (such as metadata, labels, and resource limits) to applications, enabling them to adapt based on their runtime environment."}
{"instruction": "Explain container lifecycle hooks such as preStop and postStart.", "type": "explanation", "output": "Lifecycle hooks let you execute custom commands or scripts when a container starts (postStart) or before it terminates (preStop), allowing for graceful shutdown or initialization tasks."}
{"instruction": "Describe how container resource requests and limits work.", "type": "explanation", "output": "Resource requests specify the minimum CPU and memory a container needs, while limits define the maximum amount it can use, helping the scheduler allocate resources and enforce boundaries."}
{"instruction": "What are pod conditions in Kubernetes?", "type": "explanation", "output": "Pod conditions provide detailed status information about a pod, such as whether it is initialized, ready, or experiencing issues, which helps in diagnosing problems."}
{"instruction": "Explain the use of readiness gates in Kubernetes.", "type": "explanation", "output": "Readiness gates are additional conditions that a pod must meet before it is considered ready to serve traffic, enabling more granular control over pod availability."}
{"instruction": "Describe the Kubernetes scheduling framework.", "type": "explanation", "output": "The scheduling framework is a set of plugins and extension points that determine how pods are assigned to nodes based on resources, policies, and custom scheduling rules."}
{"instruction": "What is kubeadm and how is it used to bootstrap a Kubernetes cluster?", "type": "explanation", "output": "kubeadm is a command-line tool that helps initialize a Kubernetes cluster by automating tasks such as certificate generation, component configuration, and node joining."}
{"instruction": "Explain what kind (Kubernetes IN Docker) is used for.", "type": "explanation", "output": "kind is a tool for running local Kubernetes clusters using Docker containers, making it ideal for development, testing, and continuous integration environments."}
{"instruction": "Differentiate between a NodePort Service and other Service types.", "type": "explanation", "output": "A NodePort Service exposes a service on a static port on each node’s IP address, making it accessible externally, unlike ClusterIP (internal only) or LoadBalancer (cloud-managed) services."}
{"instruction": "Describe the role of cAdvisor in Kubernetes.", "type": "explanation", "output": "cAdvisor (Container Advisor) collects and provides container resource usage and performance data, which is essential for monitoring and troubleshooting."}
{"instruction": "What is the Container Runtime Interface (CRI) in Kubernetes?", "type": "explanation", "output": "The CRI is an API that allows Kubernetes to interact with various container runtimes, ensuring that Kubernetes can manage containers regardless of the underlying runtime technology."}
{"instruction": "Explain the purpose of a pod's hostname and subdomain fields.", "type": "explanation", "output": "The hostname and subdomain fields in a pod’s spec allow you to configure network identities and DNS entries for the pod, which is especially useful in stateful applications."}
{"instruction": "How are annotations used in Kubernetes?", "type": "explanation", "output": "Annotations are key-value pairs attached to objects that store arbitrary, non-identifying metadata, often used by tools and libraries for configuration or debugging."}
{"instruction": "What is the difference between annotations and labels in Kubernetes?", "type": "explanation", "output": "Labels are intended for identifying and grouping objects and are used by selectors, whereas annotations are used to attach non-identifying metadata that is not used for grouping."}
{"instruction": "Describe the concept of owner references in Kubernetes.", "type": "explanation", "output": "Owner references link dependent objects to their parent, so that when the parent is deleted, Kubernetes can automatically clean up the dependent resources."}
{"instruction": "What is garbage collection in Kubernetes?", "type": "explanation", "output": "Garbage collection in Kubernetes is the process of automatically cleaning up unused resources, such as orphaned pods or volumes, based on owner references and other policies."}
{"instruction": "Explain the purpose of a Finalizer in Kubernetes.", "type": "explanation", "output": "Finalizers are metadata fields that block the deletion of a resource until specific cleanup operations are completed, ensuring proper resource management."}
{"instruction": "What is a Field Selector in Kubernetes?", "type": "explanation", "output": "Field selectors allow you to filter Kubernetes resources based on specific fields (like metadata.name or status.phase), providing a more precise way to query objects."}
{"instruction": "Describe how to use the kubectl command-line tool effectively.", "type": "explanation", "output": "kubectl is the primary CLI for interacting with Kubernetes clusters. It supports commands for deploying, inspecting, and managing resources, with options like apply, get, describe, and logs."}
{"instruction": "What is a kubeconfig file and why is it important?", "type": "explanation", "output": "A kubeconfig file stores configuration details for connecting to one or more Kubernetes clusters, including cluster information, user credentials, and contexts."}
{"instruction": "Explain the concept of contexts in kubectl.", "type": "explanation", "output": "Contexts in kubectl are predefined sets of cluster, user, and namespace configurations that allow you to quickly switch between different environments."}
{"instruction": "Describe how port forwarding works in Kubernetes.", "type": "explanation", "output": "Port forwarding allows you to access a pod's network port locally, creating a tunnel between your local machine and the pod, which is useful for debugging or accessing services not exposed externally."}
{"instruction": "What is certificate management in Kubernetes and why is it important?", "type": "explanation", "output": "Certificate management in Kubernetes involves generating, distributing, and renewing TLS certificates to secure communication between cluster components and external clients."}
{"instruction": "Explain the function of a ClusterIP in Kubernetes.", "type": "explanation", "output": "A ClusterIP is the default service type in Kubernetes that exposes a service on an internal IP address, making it reachable only within the cluster."}
{"instruction": "What is a scheduler extender in Kubernetes?", "type": "explanation", "output": "A scheduler extender is an additional component that can be integrated into the Kubernetes scheduling process to apply custom logic when determining which node should run a pod."}
{"instruction": "Describe the concept of an API server aggregator.", "type": "explanation", "output": "An API server aggregator allows Kubernetes to extend its API by combining multiple API servers into one unified endpoint, enabling additional functionalities or custom resources."}
{"instruction": "What is the Operator Lifecycle Manager (OLM)?", "type": "explanation", "output": "The Operator Lifecycle Manager is a tool for managing the lifecycle of Operators in Kubernetes, including their installation, updates, and role-based access control."}
{"instruction": "Explain the purpose of a Custom Scheduler in Kubernetes.", "type": "explanation", "output": "A Custom Scheduler allows you to implement specialized scheduling logic tailored to your application’s requirements, instead of relying solely on the default scheduler."}
{"instruction": "Describe the use of kube-state-metrics.", "type": "explanation", "output": "kube-state-metrics is a service that listens to the Kubernetes API server and generates metrics about the state of various objects, which can then be consumed by monitoring systems like Prometheus."}
{"instruction": "What is a Metrics Server in Kubernetes?", "type": "explanation", "output": "The Metrics Server collects resource usage metrics (CPU, memory, etc.) from nodes and pods, providing data necessary for autoscaling and monitoring the health of the cluster."}
{"instruction": "Explain the concept of a pod's termination grace period.", "type": "explanation", "output": "The termination grace period is the amount of time given to a pod to shut down gracefully after receiving a termination signal before it is forcibly killed."}
{"instruction": "What are container resource quotas and how do they work?", "type": "explanation", "output": "Container resource quotas set limits on the total amount of resources (such as CPU and memory) that can be consumed within a namespace, ensuring fair distribution among workloads."}
{"instruction": "Describe the APIService object in Kubernetes.", "type": "explanation", "output": "An APIService is a resource that registers an external API with the Kubernetes API server, allowing the aggregation of additional APIs into the main API server."}
{"instruction": "How can you scale a StatefulSet in Kubernetes?", "type": "explanation", "output": "Scaling a StatefulSet involves changing the number of replicas while preserving the ordered and unique identity of each pod, ensuring stable network identities and persistent storage."}
{"instruction": "Explain ownerReferences and how they aid in cascading deletion.", "type": "explanation", "output": "ownerReferences link child objects to a parent object so that when the parent is deleted, Kubernetes can automatically remove all associated children, preventing orphaned resources."}
{"instruction": "What is a pod’s termination message path?", "type": "explanation", "output": "The termination message path is a file within the pod that captures the exit status or error message when a container terminates, useful for debugging failures."}
{"instruction": "Explain the concept and purpose of ephemeral containers.", "type": "explanation", "output": "Ephemeral containers are temporary containers that can be added to a running pod for debugging purposes, allowing you to inspect and troubleshoot issues without modifying the pod’s original configuration."}
{"instruction": "Describe how to run a privileged container in Kubernetes.", "type": "explanation", "output": "Running a privileged container requires setting the security context to allow elevated permissions, which grants the container almost the same access as the host system, though this should be used with caution."}
{"instruction": "What is a Blue/Green deployment strategy in Kubernetes?", "type": "explanation", "output": "A Blue/Green deployment involves running two identical production environments (blue and green) so that you can switch traffic between them during an update, minimizing downtime and risk."}
{"instruction": "Explain how environment variables are used within pods.", "type": "explanation", "output": "Environment variables can be specified in a pod’s configuration to pass configuration data to containers at runtime, enabling dynamic behavior without hardcoding values."}
{"instruction": "What is a multi-container pod and why might you use one?", "type": "explanation", "output": "A multi-container pod runs multiple containers that share the same network namespace and storage, allowing them to communicate easily and work together as a single cohesive unit."}
{"instruction": "Describe how Kubernetes handles application logging.", "type": "explanation", "output": "Kubernetes collects logs from container stdout/stderr, which can be aggregated and processed by logging agents, enabling centralized logging, analysis, and troubleshooting."}
{"instruction": "What is the role of Prometheus in Kubernetes monitoring?", "type": "explanation", "output": "Prometheus is a monitoring system that collects metrics from Kubernetes clusters and applications, providing a powerful query language and alerting mechanism to ensure system health."}
{"instruction": "Explain the function of the kube-aggregator component.", "type": "explanation", "output": "The kube-aggregator is responsible for combining multiple API servers into a single unified Kubernetes API, enabling the extension of the Kubernetes API with custom services."}
{"instruction": "How does kubeadm init work to set up a cluster?", "type": "explanation", "output": "kubeadm init bootstraps a Kubernetes control plane by performing tasks such as generating certificates, configuring the API server, and setting up essential components, creating a ready-to-use cluster."}
{"instruction": "What are audit logs in Kubernetes and what purpose do they serve?", "type": "explanation", "output": "Audit logs record every request made to the Kubernetes API server, providing an essential trail for security monitoring, compliance, and forensic investigations."}
{"instruction": "Describe the purpose and function of static pods in Kubernetes.", "type": "explanation", "output": "Static pods are managed directly by the kubelet on a node rather than the API server. They are typically used for critical system components that must run independently of the cluster state."}
{"instruction": "How do static pods differ from regular pods?", "type": "explanation", "output": "Static pods are defined by files on a node and are not managed by the Kubernetes API server, whereas regular pods are managed by controllers and can be rescheduled automatically."}
{"instruction": "Explain the concept of a manifest file in Kubernetes.", "type": "explanation", "output": "A manifest file is a YAML or JSON document that describes the desired state of Kubernetes objects, used by kubectl to create, update, or delete resources."}
{"instruction": "What role does YAML play in Kubernetes configuration?", "type": "explanation", "output": "YAML is the preferred format for writing Kubernetes configuration files, providing a human-readable way to declare the desired state of objects in the cluster."}
{"instruction": "How can you integrate HashiCorp Vault with Kubernetes for secret management?", "type": "explanation", "output": "Integrating Vault with Kubernetes allows you to dynamically inject secrets into pods, manage secret lifecycles, and securely store sensitive data outside of Kubernetes."}
{"instruction": "Explain the purpose of the Container Storage Interface (CSI) in storage management.", "type": "explanation", "output": "The CSI standardizes how storage providers integrate with Kubernetes, enabling dynamic provisioning and management of storage volumes across different platforms."}
{"instruction": "Describe the use of VolumeSnapshots in Kubernetes.", "type": "explanation", "output": "VolumeSnapshots allow you to capture the state of a persistent volume at a specific point in time, which can later be used for backup or restoring data."}
{"instruction": "What is the Kubernetes CSI driver for AWS EBS used for?", "type": "explanation", "output": "The CSI driver for AWS EBS enables Kubernetes to dynamically provision and manage Amazon Elastic Block Store volumes, integrating cloud storage with your workloads."}
{"instruction": "Explain the concept of using init containers to wait for dependencies.", "type": "explanation", "output": "Init containers can be used to perform initialization tasks or wait for other services to become available before the main containers start, ensuring that all prerequisites are met."}
{"instruction": "How does a pod's restart policy affect its behavior?", "type": "explanation", "output": "The restart policy defines whether a pod’s containers should be restarted on failure. Options like Always, OnFailure, and Never control how the system responds to container exits."}
{"instruction": "What is meant by a graceful pod shutdown?", "type": "explanation", "output": "A graceful pod shutdown gives a pod time to complete ongoing tasks and close connections before being terminated, reducing the risk of data loss or corruption."}
{"instruction": "Explain how Kubernetes manages DNS resolution within a cluster.", "type": "explanation", "output": "Kubernetes uses CoreDNS (or kube-dns) to provide DNS resolution for services and pods, allowing them to communicate using hostnames rather than IP addresses."}
{"instruction": "What role does CoreDNS play in a Kubernetes cluster?", "type": "explanation", "output": "CoreDNS is the DNS server for Kubernetes, responsible for service discovery and resolving domain names for services and pods inside the cluster."}
{"instruction": "Describe how service discovery works in Kubernetes.", "type": "explanation", "output": "Service discovery in Kubernetes is achieved through DNS, environment variables, and API queries, allowing pods to locate and communicate with one another based on service names."}
{"instruction": "What is the kube-dns addon and how does it differ from CoreDNS?", "type": "explanation", "output": "kube-dns was the original DNS solution for Kubernetes; while it performs similar functions to CoreDNS, CoreDNS is more flexible and has largely replaced kube-dns in modern clusters."}
{"instruction": "How does an HTTP GET action in a liveness probe work?", "type": "explanation", "output": "An HTTP GET action in a liveness probe makes a request to a specified endpoint on a container. If the response indicates a failure, Kubernetes restarts the container."}
{"instruction": "Explain how readiness probes contribute to load balancing.", "type": "explanation", "output": "Readiness probes determine whether a container is ready to accept traffic; only pods passing the readiness check receive traffic from services, ensuring proper load distribution."}
{"instruction": "Describe the process for debugging service connectivity issues in Kubernetes.", "type": "explanation", "output": "Debugging service connectivity involves checking pod logs, verifying service endpoints, ensuring correct label selectors, and using tools like port-forwarding to isolate the issue."}
{"instruction": "What is a headless service and how is it used for stateful applications?", "type": "explanation", "output": "A headless service omits a ClusterIP and directly returns pod IPs, which is particularly useful for stateful applications that require direct pod addressing and stable network identities."}
{"instruction": "Explain how Kubernetes aggregates logs from multiple containers.", "type": "explanation", "output": "Kubernetes collects logs from container standard output and error streams, and these logs can be aggregated by external systems (like Fluentd or the EFK stack) for centralized monitoring and analysis."}
{"instruction": "What role does journald play in container logging on some systems?", "type": "explanation", "output": "journald is a system service that collects and stores logging data, including container logs on certain Linux distributions, enabling centralized log management."}
{"instruction": "How are ephemeral containers used for debugging purposes?", "type": "explanation", "output": "Ephemeral containers can be added to a running pod temporarily to inspect its state, diagnose issues, or run debugging tools without modifying the pod's original configuration."}
{"instruction": "Describe the process of deploying a custom scheduler in Kubernetes.", "type": "explanation", "output": "Deploying a custom scheduler involves writing a scheduling algorithm that integrates with the Kubernetes API, registering it, and then configuring pods to be scheduled by that custom component."}
{"instruction": "What is the purpose of the kubectl port-forward command?", "type": "explanation", "output": "The kubectl port-forward command creates a tunnel from a local port to a port on a pod, enabling secure, temporary access to the pod's service for debugging or testing."}
{"instruction": "Explain the concept of a rolling restart in Kubernetes.", "type": "explanation", "output": "A rolling restart gradually terminates and replaces pods in a deployment one by one, ensuring that the application remains available during the update process."}
{"instruction": "What are the benefits of using declarative configuration in Kubernetes?", "type": "explanation", "output": "Declarative configuration allows you to define the desired state of your resources in configuration files, enabling version control, reproducibility, and easier management of complex systems."}
{"instruction": "Describe the role of kubeadm init in setting up a Kubernetes control plane.", "type": "explanation", "output": "kubeadm init initializes the control plane by generating necessary certificates, configuring core components, and establishing the cluster’s state, forming the foundation of the Kubernetes cluster."}
{"instruction": "How do you create a multi-node cluster using kubeadm?", "type": "explanation", "output": "A multi-node cluster is created by running kubeadm init on the master node and then joining worker nodes to the cluster using the token and configuration details provided by the init process."}
{"instruction": "Explain how to backup and restore etcd data in Kubernetes.", "type": "explanation", "output": "Backing up etcd involves taking snapshots of its data store, which can later be restored to recover the cluster state in case of failure or disaster."}
{"instruction": "What are cluster role bindings and why are they used?", "type": "explanation", "output": "Cluster role bindings associate ClusterRoles with users or groups at the cluster level, granting permissions to perform actions across the entire cluster."}
{"instruction": "Describe how to configure a private Docker registry in Kubernetes.", "type": "explanation", "output": "Configuring a private Docker registry involves setting up authentication credentials (often via ImagePullSecrets) and configuring Kubernetes to trust and pull images from the secured registry."}
{"instruction": "What is the purpose of ImagePullSecrets in Kubernetes?", "type": "explanation", "output": "ImagePullSecrets store credentials for accessing private container registries, allowing pods to securely pull images that are not publicly available."}
{"instruction": "Explain the significance of the default service account in each namespace.", "type": "explanation", "output": "Every namespace has a default service account that is automatically associated with pods if no other service account is specified, providing a baseline identity for API access."}
{"instruction": "What is a local Persistent Volume (Local PV) and how is it used?", "type": "explanation", "output": "A local Persistent Volume uses storage local to the node (such as a disk or SSD) to provide high-performance, low-latency storage for pods, though it lacks the flexibility of networked storage."}
{"instruction": "Describe how to configure a CSI driver for on-premises storage.", "type": "explanation", "output": "Configuring a CSI driver for on-premises storage involves installing the driver software, setting up storage classes, and ensuring the Kubernetes cluster can communicate with the storage system for dynamic provisioning."}
{"instruction": "What is an Admission Controller webhook for image verification?", "type": "explanation", "output": "This type of webhook intercepts pod creation requests to verify that container images meet specific criteria (such as being scanned for vulnerabilities) before allowing them to run."}
{"instruction": "Explain how Kubernetes can be used in hybrid cloud environments.", "type": "explanation", "output": "Kubernetes can span across on-premises and public cloud infrastructures, using consistent APIs and tools to manage workloads, enabling seamless hybrid cloud deployments."}
{"instruction": "Describe the process of using federated secrets across clusters.", "type": "explanation", "output": "Federated secrets allow you to synchronize and distribute secret data across multiple Kubernetes clusters, ensuring that sensitive data is consistently available in multi-cluster setups."}
{"instruction": "What is the role of the Operator Framework in Kubernetes?", "type": "explanation", "output": "The Operator Framework provides tools and standards to build, deploy, and manage Operators, which automate the management of complex stateful applications on Kubernetes."}
{"instruction": "Explain the concept of multi-cluster networking in Kubernetes.", "type": "explanation", "output": "Multi-cluster networking connects pods and services running in different Kubernetes clusters, enabling seamless communication and resource sharing across geographically or logically separated clusters."}
{"instruction": "How does Kubernetes manage ephemeral storage?", "type": "explanation", "output": "Kubernetes manages ephemeral storage by allocating local storage for temporary files and caches used by containers, which is reclaimed when the pod is terminated."}
{"instruction": "Describe the role of the Kubernetes Garbage Collector.", "type": "explanation", "output": "The Kubernetes Garbage Collector automatically deletes unused resources (such as pods with expired owner references) to free up resources and maintain a clean cluster state."}
{"instruction": "What is the graceful termination period in Kubernetes?", "type": "explanation", "output": "The graceful termination period is the configured time delay that allows a pod to finish processing and clean up resources before it is forcibly shut down."}
{"instruction": "Explain how the scheduler uses resource requests to place pods.", "type": "explanation", "output": "The scheduler uses resource requests declared in pod specifications to determine whether a node has sufficient available CPU and memory to host the pod, thereby optimizing resource allocation."}
{"instruction": "What is resource overcommitment in Kubernetes?", "type": "explanation", "output": "Resource overcommitment allows nodes to schedule more pods than their actual capacity by assuming that not all pods will use their maximum declared resources at the same time."}
{"instruction": "Describe the concept of bursting in cluster autoscaling.", "type": "explanation", "output": "Bursting in cluster autoscaling refers to the ability of the cluster to temporarily exceed its normal capacity to handle sudden spikes in demand, before scaling back down."}
{"instruction": "How do eviction policies work in Kubernetes?", "type": "explanation", "output": "Eviction policies determine how pods are terminated when nodes become resource-constrained, prioritizing the removal of less critical pods to preserve overall cluster health."}
{"instruction": "What is the function of a kube-scheduler extender?", "type": "explanation", "output": "A kube-scheduler extender allows custom scheduling logic to be plugged into the scheduling process, providing additional filtering or scoring of nodes for pod placement."}
{"instruction": "Explain the use of affinity scheduling in Kubernetes.", "type": "explanation", "output": "Affinity scheduling allows you to specify preferences or requirements for pod placement based on node labels or other pod attributes, helping to co-locate or separate workloads as needed."}
{"instruction": "Describe how to enforce policies using Open Policy Agent (OPA) in Kubernetes.", "type": "explanation", "output": "OPA can be integrated with Kubernetes as an admission controller to enforce fine-grained policies on resources, such as security rules or compliance checks, before changes are applied."}
{"instruction": "What is the MutatingAdmissionConfiguration object used for?", "type": "explanation", "output": "The MutatingAdmissionConfiguration object configures how mutating admission webhooks are applied to incoming requests, specifying which webhooks to invoke and under what conditions."}
{"instruction": "Explain how to combine the use of Secrets and ConfigMaps in a pod.", "type": "explanation", "output": "Secrets and ConfigMaps can be mounted as volumes or injected as environment variables into a pod, allowing you to separate sensitive information from non-sensitive configuration data."}
{"instruction": "Describe how the kubectl logs command assists in troubleshooting.", "type": "explanation", "output": "The kubectl logs command retrieves the logs from a container within a pod, enabling developers and operators to diagnose issues by viewing runtime output and error messages."}
{"instruction": "What is the function of the --watch flag in kubectl commands?", "type": "explanation", "output": "The --watch flag continuously monitors changes to Kubernetes resources, providing real-time updates that help track the evolution of object states during debugging or monitoring."}
{"instruction": "Explain the use of the --selector flag in kubectl commands.", "type": "explanation", "output": "The --selector flag allows you to filter and operate on Kubernetes objects based on their labels, making it easier to target specific subsets of resources."}
{"instruction": "Describe the process of labeling resources using kubectl.", "type": "explanation", "output": "Labeling resources with kubectl involves adding key-value pairs to objects, which can then be used for grouping, selection, and organization of resources across the cluster."}
{"instruction": "What is the role of Kustomize in Kubernetes configuration management?", "type": "explanation", "output": "Kustomize is a tool integrated into kubectl that enables you to customize raw, template-free YAML files for different environments, promoting reusable and maintainable configuration."}
{"instruction": "Explain how overlays work in Kustomize.", "type": "explanation", "output": "Overlays in Kustomize allow you to apply environment-specific modifications on top of a base configuration, making it simple to manage variations between development, staging, and production."}
{"instruction": "Describe how to customize Kubernetes manifests using Kustomize.", "type": "explanation", "output": "Kustomize enables customization of manifests by allowing you to patch, add, or remove fields in base configuration files without duplicating the entire file for each environment."}
{"instruction": "What is a base manifest in Kustomize?", "type": "explanation", "output": "A base manifest in Kustomize is the common set of YAML configurations that define your resources, which can then be modified by overlays for different deployment scenarios."}
{"instruction": "Explain how to manage multiple environments using Kustomize.", "type": "explanation", "output": "Kustomize lets you maintain a base configuration and then create overlays for each environment (such as dev, test, or production), ensuring consistency while accommodating differences."}
{"instruction": "Describe the role of Helm charts in CI/CD pipelines.", "type": "explanation", "output": "Helm charts package Kubernetes applications into reusable units, which can be versioned and deployed automatically as part of continuous integration and continuous delivery workflows."}
{"instruction": "What is a values file in Helm?", "type": "explanation", "output": "A values file in Helm provides default configuration settings for a chart, allowing users to override parameters during installation to tailor the deployment to their needs."}
{"instruction": "Explain how to upgrade applications using Helm.", "type": "explanation", "output": "Helm facilitates application upgrades by comparing the new chart configuration with the current release, performing a controlled rollout of changes, and allowing rollbacks if necessary."}
{"instruction": "Describe how Helm handles chart dependencies.", "type": "explanation", "output": "Helm manages dependencies by allowing charts to declare other charts as dependencies, which are then automatically downloaded and incorporated during the installation or upgrade process."}
{"instruction": "What was Tiller in Helm v2 and why is it no longer used?", "type": "explanation", "output": "Tiller was the server-side component in Helm v2 that managed releases; it has been removed in Helm v3 in favor of a client-only architecture to improve security and simplicity."}
{"instruction": "Explain the benefits of using Helm over manual deployments.", "type": "explanation", "output": "Helm simplifies application deployment by packaging complex Kubernetes manifests into charts, enabling easy versioning, dependency management, rollbacks, and repeatable deployments."}
{"instruction": "Describe the process of rolling back a Helm release.", "type": "explanation", "output": "Rolling back a Helm release involves reverting to a previous chart version by using Helm’s built-in rollback command, which re-applies the older configuration to restore the application state."}
{"instruction": "What is a Helm repository and what is its purpose?", "type": "explanation", "output": "A Helm repository is a storage location for Helm charts, providing a centralized place for publishing, sharing, and versioning Kubernetes application packages."}
{"instruction": "Explain how to secure Helm releases.", "type": "explanation", "output": "Securing Helm releases involves practices such as using signed charts, restricting access to the Helm repository, and integrating security scanning into the CI/CD pipeline."}
{"instruction": "Describe the use of admission controllers for enforcing security policies.", "type": "explanation", "output": "Admission controllers intercept requests to the API server and can enforce security policies (like preventing privileged containers), ensuring that only compliant configurations are allowed."}
{"instruction": "What is a Validating Admission Policy in Kubernetes?", "type": "explanation", "output": "A Validating Admission Policy defines rules that incoming API requests must satisfy; if a request fails the policy check, it is rejected, thereby enforcing best practices and compliance."}
{"instruction": "Explain how to integrate Kubernetes with CI/CD systems.", "type": "explanation", "output": "Kubernetes can be integrated with CI/CD systems by using tools like Helm, Kustomize, and automated pipelines to build, test, and deploy applications in a repeatable and scalable manner."}
{"instruction": "Describe the concept of GitOps in the context of Kubernetes.", "type": "explanation", "output": "GitOps is a deployment methodology where Git is used as the single source of truth for declarative infrastructure and applications, enabling automated, version-controlled, and auditable deployments in Kubernetes."}
{"instruction": "What are the security implications of running containers in privileged mode?", "type": "explanation", "output": "Running containers in privileged mode grants them extensive permissions on the host system, which can lead to security risks if the container is compromised, so it should be used only when absolutely necessary."}
{"instruction": "Explain the concept of container security contexts.", "type": "explanation", "output": "A container security context defines privilege and access control settings for a container, such as user IDs, Linux capabilities, and whether the container should run in privileged mode."}
{"instruction": "Describe how Seccomp profiles enhance container security.", "type": "explanation", "output": "Seccomp profiles restrict the system calls a container can make, reducing the attack surface and mitigating the risk of exploits by limiting the actions available to the container."}
{"instruction": "What role does AppArmor play in Kubernetes security?", "type": "explanation", "output": "AppArmor is a Linux kernel security module that can be used in Kubernetes to enforce security policies on containers, restricting the programs’ capabilities and access to system resources."}
{"instruction": "Explain the use of Linux capabilities in container security.", "type": "explanation", "output": "Linux capabilities break down the privileges of the root user into distinct units, allowing you to grant only the necessary permissions to a container rather than full root access."}
{"instruction": "How can you configure a read-only root file system for containers?", "type": "explanation", "output": "Configuring a read-only root file system in a container involves setting the security context so that the container’s filesystem is not writable, reducing the risk of tampering or persistent malware."}
{"instruction": "Describe how Kubernetes handles secret updates.", "type": "explanation", "output": "Kubernetes can update secrets in place, and when secrets are mounted as volumes, the changes are reflected in the pod automatically, though this behavior may depend on the specific configuration."}
{"instruction": "What improvements does Horizontal Pod Autoscaler v2 bring?", "type": "explanation", "output": "Horizontal Pod Autoscaler v2 allows scaling based on custom metrics in addition to CPU and memory, providing more flexible and fine-grained control over scaling behavior."}
{"instruction": "Explain how to set up multi-architecture images in Kubernetes.", "type": "explanation", "output": "Multi-architecture images are built to run on different CPU architectures (like x86 and ARM). Kubernetes can schedule these images appropriately when nodes with matching architectures are available."}
{"instruction": "Describe how init containers can be used for dependency waiting.", "type": "explanation", "output": "Init containers can be configured to run scripts that check for the availability of external services or resources, ensuring that the main containers start only once all dependencies are ready."}
{"instruction": "What is a pod’s restart policy and how does it affect container behavior?", "type": "explanation", "output": "A pod’s restart policy defines under what conditions the container should be restarted (e.g., Always, OnFailure, or Never), directly influencing the pod’s fault tolerance and recovery."}
{"instruction": "Explain the concept of graceful pod shutdown in Kubernetes.", "type": "explanation", "output": "Graceful pod shutdown allows containers time to complete in-flight operations and release resources properly before termination, reducing the chance of data loss or corruption."}
{"instruction": "Describe how Kubernetes manages DNS resolution for services.", "type": "explanation", "output": "Kubernetes manages DNS resolution through CoreDNS or kube-dns, which automatically map service names to their corresponding ClusterIP addresses, facilitating inter-service communication."}
{"instruction": "What is the role of CoreDNS in service discovery?", "type": "explanation", "output": "CoreDNS is responsible for translating service names to IP addresses within the cluster, enabling pods to discover and communicate with services without needing to know their IP addresses."}
{"instruction": "Explain the concept of service discovery using kube-dns.", "type": "explanation", "output": "kube-dns, similar to CoreDNS, resolves DNS queries for services and pods, allowing Kubernetes objects to locate each other using consistent, human-friendly names."}
{"instruction": "Describe how a liveness probe’s HTTP GET action is configured.", "type": "explanation", "output": "A liveness probe using HTTP GET is configured by specifying a URL path, port, and optional headers; Kubernetes periodically sends requests to this endpoint and restarts the container if the probe fails."}
{"instruction": "What is the significance of a readiness probe’s success in traffic routing?", "type": "explanation", "output": "A readiness probe’s success indicates that a container is ready to serve requests; only pods that pass this check receive traffic from services, ensuring that clients only hit healthy endpoints."}
{"instruction": "Explain how to diagnose issues using kubectl logs.", "type": "explanation", "output": "kubectl logs fetches the output of a container’s stdout and stderr, providing insight into application behavior and error messages that help diagnose and troubleshoot issues."}
{"instruction": "What is the concept of a privileged container and when might it be used?", "type": "explanation", "output": "A privileged container runs with elevated permissions, often used for system-level tasks or debugging, but it should be used sparingly due to the increased security risks."}
{"instruction": "Describe how to deploy a custom scheduler and its benefits.", "type": "explanation", "output": "Deploying a custom scheduler allows you to implement tailored scheduling policies that better match your application’s needs, such as specialized resource allocation or affinity rules."}
{"instruction": "Explain the benefits of using kubectl port-forward for local testing.", "type": "explanation", "output": "kubectl port-forward lets you access a pod’s service locally without exposing it externally, making it easier to test and debug applications securely."}
{"instruction": "What is a rolling restart and how does it differ from a rolling update?", "type": "explanation", "output": "A rolling restart sequentially restarts all pods in a deployment to refresh their state, while a rolling update replaces pods with new versions, updating the application while minimizing downtime."}
{"instruction": "Describe the importance of declarative configuration in Kubernetes management.", "type": "explanation", "output": "Declarative configuration allows you to specify the desired state of your cluster in code, enabling version control, repeatability, and easier recovery from errors."}
{"instruction": "How does kubeadm init contribute to cluster creation?", "type": "explanation", "output": "kubeadm init sets up the control plane by configuring critical components, generating certificates, and establishing the necessary configuration files to form a functional Kubernetes cluster."}
{"instruction": "Explain the process of joining worker nodes to a Kubernetes cluster using kubeadm.", "type": "explanation", "output": "Worker nodes join a cluster using a token and configuration details generated by kubeadm init, which authenticates and registers the node with the control plane."}
{"instruction": "Describe best practices for backing up and restoring etcd data.", "type": "explanation", "output": "Best practices include regularly taking snapshots of etcd data, storing them securely offsite, and testing the restore process to ensure the cluster can be recovered in case of failure."}
{"instruction": "What are cluster role bindings and how do they differ from role bindings?", "type": "explanation", "output": "Cluster role bindings grant permissions across the entire cluster by binding a ClusterRole to users or groups, whereas role bindings apply permissions within a specific namespace by binding a Role."}
{"instruction": "Explain how to configure a private registry for Kubernetes image pulls.", "type": "explanation", "output": "Configuring a private registry involves creating ImagePullSecrets with the necessary authentication credentials and referencing these secrets in your pod specifications to allow secure image pulls."}
{"instruction": "Describe how ImagePullSecrets enhance security in Kubernetes.", "type": "explanation", "output": "ImagePullSecrets store sensitive registry credentials securely and allow pods to authenticate with private registries, ensuring that only authorized images are pulled and deployed."}
{"instruction": "What is the purpose of the default service account in a namespace?", "type": "explanation", "output": "The default service account provides an identity for pods that do not specify one explicitly, granting them baseline permissions to interact with the Kubernetes API."}
{"instruction": "Explain what a local Persistent Volume is and when to use it.", "type": "explanation", "output": "A local Persistent Volume leverages storage physically attached to a node, offering high performance for workloads that require fast access, though it limits flexibility in terms of rescheduling pods across nodes."}
{"instruction": "Describe how to configure a CSI driver for on-premises storage systems.", "type": "explanation", "output": "Configuring a CSI driver for on-premises storage involves deploying the driver’s components, setting up appropriate StorageClasses, and ensuring that your nodes can access the underlying storage hardware."}
{"instruction": "What is an Admission Controller webhook for image verification used for?", "type": "explanation", "output": "This webhook intercepts pod creation requests to verify that container images meet defined security or compliance criteria (such as vulnerability scanning) before allowing them to run."}
{"instruction": "Explain how Kubernetes supports hybrid cloud deployments.", "type": "explanation", "output": "Kubernetes can manage workloads that span on-premises and public cloud infrastructures by providing a consistent API and tooling, enabling unified operations across diverse environments."}
{"instruction": "Describe the process of synchronizing secrets across multiple clusters.", "type": "explanation", "output": "Synchronizing secrets involves tools or controllers that replicate secret objects from one cluster to others, ensuring consistent and secure access to sensitive data across environments."}
{"instruction": "What is the Operator Framework and how does it benefit application management?", "type": "explanation", "output": "The Operator Framework provides libraries and tools to build Operators that automate complex application management tasks, such as deployment, scaling, and backup, simplifying operations for stateful applications."}
{"instruction": "Explain the challenges and solutions for multi-cluster networking in Kubernetes.", "type": "explanation", "output": "Multi-cluster networking addresses connectivity between pods in different clusters through technologies like VPNs, service meshes, or overlay networks, ensuring seamless communication across distributed environments."}
{"instruction": "Describe how Kubernetes manages ephemeral storage for pods.", "type": "explanation", "output": "Kubernetes allocates ephemeral storage from the node’s local disk for temporary files and caches used by pods; this storage is reclaimed when the pod terminates, ensuring efficient resource usage."}
{"instruction": "What role does the Kubernetes Garbage Collector play in resource management?", "type": "explanation", "output": "The Garbage Collector automatically deletes orphaned or unused resources based on owner references and expiration policies, keeping the cluster clean and preventing resource leaks."}
{"instruction": "Explain the purpose of the graceful termination period for pods.", "type": "explanation", "output": "The graceful termination period allows pods time to finish processing ongoing requests and perform cleanup operations before being forcibly terminated, enhancing application stability."}
{"instruction": "Describe how the scheduler prioritizes pods based on resource requests.", "type": "explanation", "output": "The scheduler evaluates the resource requests of pods and matches them against node capacities, ensuring that pods are only scheduled on nodes that have sufficient resources available."}
{"instruction": "What is resource overcommitment and how can it benefit a Kubernetes cluster?", "type": "explanation", "output": "Resource overcommitment allows more pods to be scheduled on a node than its physical capacity might suggest, based on the assumption that not all pods will use their maximum resources simultaneously, thus increasing utilization."}
{"instruction": "Explain the concept of bursting in cluster autoscaling.", "type": "explanation", "output": "Bursting in cluster autoscaling refers to temporarily scaling up the number of nodes beyond the usual capacity to handle sudden increases in workload, then scaling back down once demand subsides."}
{"instruction": "Describe how Kubernetes enforces eviction policies.", "type": "explanation", "output": "Kubernetes enforces eviction policies by monitoring node resource pressure and proactively terminating lower-priority pods when resources become scarce, ensuring the stability of higher-priority workloads."}
{"instruction": "What is the function of a kube-scheduler extender?", "type": "explanation", "output": "A kube-scheduler extender allows you to plug in additional filtering or scoring logic into the scheduling process, enabling custom decisions for pod placement that go beyond the default scheduler capabilities."}
{"instruction": "Explain the benefits of using affinity scheduling in Kubernetes.", "type": "explanation", "output": "Affinity scheduling lets you influence pod placement based on labels or other characteristics, which can improve performance by co-locating interdependent applications or isolating workloads for security reasons."}
{"instruction": "How can Open Policy Agent (OPA) be integrated into Kubernetes for policy enforcement?", "type": "explanation", "output": "OPA can be deployed as an admission controller in Kubernetes to evaluate and enforce custom policies on API requests, ensuring that all resources comply with organizational and security standards."}
{"instruction": "What is the MutatingAdmissionConfiguration object and what is its role?", "type": "explanation", "output": "The MutatingAdmissionConfiguration object defines which mutating admission webhooks should be called and in what order, thereby controlling how incoming API requests are modified before they are stored."}
{"instruction": "Explain how to combine the use of Secrets and ConfigMaps in Kubernetes pods.", "type": "explanation", "output": "Secrets and ConfigMaps can be mounted as volumes or exposed as environment variables in pods, allowing you to separate and manage confidential data from general configuration, while keeping both easily updatable."}
{"instruction": "Describe how the kubectl logs command aids in debugging.", "type": "explanation", "output": "The kubectl logs command streams the logs from a container, allowing you to view real-time output and historical logs to troubleshoot errors and monitor application behavior."}
{"instruction": "What is the purpose of the --watch flag in kubectl commands?", "type": "explanation", "output": "The --watch flag enables continuous monitoring of changes to Kubernetes resources, which helps you observe the real-time evolution of resource states during troubleshooting or development."}
{"instruction": "Explain how the --selector flag is used in kubectl commands.", "type": "explanation", "output": "The --selector flag allows you to filter Kubernetes objects based on label selectors, enabling targeted operations on a specific subset of resources."}
{"instruction": "Describe how to label resources using kubectl for better organization.", "type": "explanation", "output": "Labeling resources with kubectl involves adding key-value pairs to objects, which can then be used to group, filter, and manage resources effectively across different environments."}
{"instruction": "What is the role of Kustomize in Kubernetes configuration management?", "type": "explanation", "output": "Kustomize allows you to overlay configuration changes on top of a base set of manifests without modifying the original files, making it easier to manage multiple environments and customizations."}
{"instruction": "Explain how overlays work in Kustomize.", "type": "explanation", "output": "Overlays in Kustomize are used to apply environment-specific changes to a base manifest, enabling you to maintain a single source of truth while supporting variations for different deployment scenarios."}
{"instruction": "Describe how to customize Kubernetes manifests using Kustomize.", "type": "explanation", "output": "Kustomize lets you patch and modify base YAML manifests through overlays, allowing you to adjust settings such as image tags, resource limits, or environment variables for different environments."}
{"instruction": "What is a base manifest in Kustomize?", "type": "explanation", "output": "A base manifest in Kustomize is the original set of YAML configurations that define your application, which can then be extended or modified with overlays to suit various deployment needs."}
{"instruction": "Explain how to manage multiple environments using Kustomize.", "type": "explanation", "output": "Kustomize facilitates the management of multiple environments by allowing you to create environment-specific overlays that adjust a common base manifest, ensuring consistency while accommodating differences."}
{"instruction": "Describe the role of Helm charts in CI/CD pipelines.", "type": "explanation", "output": "Helm charts package Kubernetes resources into a deployable unit, which can be integrated into CI/CD pipelines to automate the testing, deployment, and versioning of applications."}
{"instruction": "What is a values file in Helm and how is it used?", "type": "explanation", "output": "A values file in Helm provides configurable parameters for a chart, enabling users to override default settings during installation to tailor the deployment to their specific environment."}
{"instruction": "Explain how to upgrade applications using Helm.", "type": "explanation", "output": "Upgrading applications with Helm involves applying a new version of a chart with updated configurations, which Helm then rolls out gradually, ensuring a smooth transition with rollback capabilities if needed."}
{"instruction": "Describe how Helm manages chart dependencies.", "type": "explanation", "output": "Helm charts can declare dependencies on other charts; during installation or upgrade, Helm automatically downloads and integrates these dependencies, simplifying the deployment of complex applications."}
{"instruction": "What is a Helm repository and what is its purpose?", "type": "explanation", "output": "A Helm repository is a centralized location where Helm charts are stored and shared, making it easier for teams to distribute and deploy applications using standardized packages."}
{"instruction": "Explain how to secure Helm releases.", "type": "explanation", "output": "Securing Helm releases involves practices such as signing charts, using secure repositories, enforcing RBAC policies, and integrating vulnerability scanning into the deployment pipeline."}
{"instruction": "Describe the role of an admission controller for security policies in Kubernetes.", "type": "explanation", "output": "An admission controller for security policies intercepts API requests to enforce rules—such as disallowing privileged containers or enforcing resource limits—thereby ensuring that all deployed resources meet security standards."}
{"instruction": "What is a Validating Admission Policy in Kubernetes?", "type": "explanation", "output": "A Validating Admission Policy defines a set of rules that incoming resource configurations must comply with; if the resource does not meet these criteria, the request is rejected to maintain cluster integrity."}
{"instruction": "Explain how to integrate Kubernetes with CI/CD systems.", "type": "explanation", "output": "Integrating Kubernetes with CI/CD systems involves using automation tools (like Helm, kubectl, or GitOps frameworks) to deploy, test, and roll out application updates reliably and repeatably."}
{"instruction": "Describe the concept of GitOps and its benefits in Kubernetes deployments.", "type": "explanation", "output": "GitOps is an operational model where Git is the single source of truth for declarative infrastructure, enabling automated, version-controlled, and auditable deployments in Kubernetes."}
{"instruction": "Delete the resource.", "type": "clarification", "output": "Could you please specify the type and name of the resource you want to delete?"}
{"instruction": "Scale up the deployment.", "type": "clarification", "output": "Please provide the name of the deployment and the number of replicas you'd like to scale to."}
{"instruction": "Get logs.", "type": "clarification", "output": "Which pod's logs would you like to retrieve?"}
{"instruction": "Create a namespace.", "type": "clarification", "output": "Could you provide the name for the new namespace?"}
{"instruction": "Expose my application.", "type": "clarification", "output": "Please specify the deployment name and the port number to expose."}
{"instruction": "Show me events.", "type": "clarification", "output": "Do you want to see events in a specific namespace or for a specific resource?"}
{"instruction": "Run a command in a pod.", "type": "clarification", "output": "Could you specify the pod name and the command you'd like to run?"}
{"instruction": "Get the configmap.", "type": "clarification", "output": "Please provide the name of the ConfigMap you want to retrieve."}
{"instruction": "Delete a deployment.", "type": "clarification", "output": "Which deployment would you like to delete?"}
{"instruction": "Roll out restart.", "type": "clarification", "output": "Please specify the deployment you want to restart."}
{"instruction": "Delete pods.", "type": "clarification", "output": "Do you want to delete specific pods or all pods in a namespace?"}
{"instruction": "Label the node.", "type": "clarification", "output": "Please provide the node name and the label you'd like to add."}
{"instruction": "Attach to the container.", "type": "clarification", "output": "Could you specify the pod name and the container if applicable?"}
{"instruction": "Patch the resource.", "type": "clarification", "output": "Please provide the resource type, name, and the patch data or file."}
{"instruction": "Get resource usage.", "type": "clarification", "output": "Would you like to see resource usage for nodes or pods?"}
{"instruction": "Set the image.", "type": "clarification", "output": "Please specify the deployment name, container name, and the new image."}
{"instruction": "Scale the statefulset.", "type": "clarification", "output": "Please provide the name of the StatefulSet and the desired number of replicas."}
{"instruction": "Delete the ingress.", "type": "clarification", "output": "Could you provide the name of the Ingress you want to delete?"}
{"instruction": "Apply configurations.", "type": "clarification", "output": "Please specify the file or directory containing the configurations to apply."}
{"instruction": "Get secrets.", "type": "clarification", "output": "Do you want to list all secrets or a specific secret? Please specify the namespace if applicable."}
{"instruction": "Explain resource.", "type": "clarification", "output": "Which resource would you like me to explain?"}
{"instruction": "Port-forward.", "type": "clarification", "output": "Please provide the pod name and the port mappings you'd like to set up."}
{"instruction": "Get the service.", "type": "clarification", "output": "Could you provide the name of the service you're interested in?"}
{"instruction": "Delete the job.", "type": "clarification", "output": "Please specify the name of the Job you want to delete."}
{"instruction": "Uncordon node.", "type": "clarification", "output": "Could you provide the name of the node you wish to uncordon?"}
{"instruction": "Drain node.", "type": "clarification", "output": "Please specify the name of the node you'd like to drain."}
{"instruction": "Get deployments.", "type": "clarification", "output": "Do you want to list deployments in a specific namespace?"}
{"instruction": "Describe the resource.", "type": "clarification", "output": "Which resource would you like to describe? Please specify the type and name."}
{"instruction": "Create a configmap.", "type": "clarification", "output": "Please provide the name of the ConfigMap and the data source (file or literal values)."}
{"instruction": "Create a secret.", "type": "clarification", "output": "Could you specify the name of the secret and how you'd like to create it (from literals or file)?"}
{"instruction": "Set context.", "type": "clarification", "output": "Please provide the name of the context you'd like to switch to."}
{"instruction": "Get contexts.", "type": "clarification", "output": "Would you like to list all available contexts?"}
{"instruction": "Rollback deployment.", "type": "clarification", "output": "Please specify the name of the deployment you'd like to rollback."}
{"instruction": "Scale down.", "type": "clarification", "output": "Could you provide the resource type, name, and the desired number of replicas?"}
{"instruction": "Get resource quotas.", "type": "clarification", "output": "Do you want to list resource quotas in a specific namespace?"}
{"instruction": "Monitor resources.", "type": "clarification", "output": "Which resources would you like to monitor? Pods, nodes, or another resource type?"}
{"instruction": "Delete the pod.", "type": "clarification", "output": "Please provide the name of the pod you want to delete."}
{"instruction": "Restart the pod.", "type": "clarification", "output": "Pods cannot be restarted directly. Would you like to delete the pod to allow it to be recreated by its controller?"}
{"instruction": "Create deployment.", "type": "clarification", "output": "Please provide the name of the deployment and the image you'd like to use."}
{"instruction": "Get storage classes.", "type": "clarification", "output": "Would you like to list all available storage classes?"}
{"instruction": "Delete the service account.", "type": "clarification", "output": "Please specify the name of the service account to delete and the namespace if applicable."}
{"instruction": "Suspend the cronjob.", "type": "clarification", "output": "Please provide the name of the CronJob you'd like to suspend."}
{"instruction": "Resume the cronjob.", "type": "clarification", "output": "Please specify the name of the CronJob you'd like to resume."}
{"instruction": "Check the status.", "type": "clarification", "output": "Please specify the resource type and name whose status you'd like to check."}
{"instruction": "Create a Pod.", "type": "clarification", "output": "Could you provide the name of the Pod and the image you'd like to use?"}
{"instruction": "Explain.", "type": "clarification", "output": "Please specify the resource or command you'd like me to explain."}
{"instruction": "Get ingress.", "type": "clarification", "output": "Do you want to list all Ingress resources or a specific one? Please specify the namespace if applicable."}
{"instruction": "Create a service.", "type": "clarification", "output": "Please provide the service name, type, and other necessary specifications."}
{"instruction": "Delete the PersistentVolume.", "type": "clarification", "output": "Could you specify the name of the PersistentVolume you want to delete?"}
{"instruction": "Get roles.", "type": "clarification", "output": "Do you want to list Roles in a specific namespace or ClusterRoles?"}
{"instruction": "Bind role.", "type": "clarification", "output": "Please provide the role name, subject, and role binding name."}
{"instruction": "List clusters.", "type": "clarification", "output": "Kubernetes does not have a `clusters` resource. Do you want to get cluster information using `kubectl cluster-info`?"}
{"instruction": "Update node selector.", "type": "clarification", "output": "Please specify the deployment and the new node selector (key=value)."}
{"instruction": "Add pod tolerations.", "type": "clarification", "output": "Please provide the pod name and the toleration configuration."}
{"instruction": "List all pods.", "type": "clarification", "output": "Do you want pods from a specific namespace or all namespaces?"}
{"instruction": "List all services.", "type": "clarification", "output": "Would you like to list services in a specific namespace or across the cluster?"}
{"instruction": "Update environment variables.", "type": "clarification", "output": "Please specify the deployment name, container name, and environment variables to update."}
{"instruction": "Attach a persistent volume claim to pod.", "type": "clarification", "output": "Please provide the pod name and the PVC details."}
{"instruction": "Remove a persistent volume claim from pod.", "type": "clarification", "output": "Please provide the pod name and the PVC name to remove."}
{"instruction": "Update resource limits for a container.", "type": "clarification", "output": "Please provide the deployment name, container name, and new resource limits."}
{"instruction": "Patch a service.", "type": "clarification", "output": "Please provide the service name and the patch information."}
{"instruction": "Restart deployment rollout.", "type": "clarification", "output": "Please specify the deployment name to restart the rollout."}
{"instruction": "List daemonsets.", "type": "clarification", "output": "Would you like to list daemonsets in a specific namespace?"}
{"instruction": "Describe a daemonset.", "type": "clarification", "output": "Please provide the daemonset name and its namespace."}
{"instruction": "Update daemonset image.", "type": "clarification", "output": "Please provide the daemonset name, container name, and new image."}
{"instruction": "Get pod status.", "type": "clarification", "output": "Please provide the pod name and namespace for status details."}
{"instruction": "Label a pod.", "type": "clarification", "output": "Please provide the pod name and the label key-value pair to add."}
{"instruction": "Annotate a resource.", "type": "clarification", "output": "Please provide the resource type, name, and the annotation key-value pair."}
{"instruction": "Export a resource definition.", "type": "clarification", "output": "Please specify the resource type and name to export."}
{"instruction": "Convert a manifest to JSON.", "type": "clarification", "output": "Please provide the YAML file path to convert to JSON."}
{"instruction": "Create a job.", "type": "clarification", "output": "Please provide the job name and the job specification."}
{"instruction": "Delete a job run.", "type": "clarification", "output": "Please specify the job name and the run identifier, if applicable."}
{"instruction": "List job runs.", "type": "clarification", "output": "Do you want to list job runs for a specific job?"}
{"instruction": "Explain a command flag.", "type": "clarification", "output": "Please specify the command and the flag you need explained."}
{"instruction": "Show node conditions.", "type": "clarification", "output": "Please provide the node name to see its conditions."}
{"instruction": "Cordon a node.", "type": "clarification", "output": "Please provide the node name you wish to cordon."}
{"instruction": "Update service type.", "type": "clarification", "output": "Please provide the service name and the new service type (e.g., ClusterIP, NodePort, LoadBalancer)."}
{"instruction": "Edit a configmap.", "type": "clarification", "output": "Please provide the configmap name and the updated data."}
{"instruction": "List configmaps.", "type": "clarification", "output": "Do you want to list configmaps in a specific namespace?"}
{"instruction": "Show secret details.", "type": "clarification", "output": "Please provide the secret name and its namespace."}
{"instruction": "Rotate secret keys.", "type": "clarification", "output": "Please specify the secret name and the rotation parameters."}
{"instruction": "Create a new secret from literals.", "type": "clarification", "output": "Please provide the secret name and literal key-value pairs."}
{"instruction": "Export a namespace configuration.", "type": "clarification", "output": "Please provide the namespace name to export its configuration."}
{"instruction": "Import a namespace configuration.", "type": "clarification", "output": "Please provide the file containing the namespace configuration."}
{"instruction": "Patch a deployment strategy.", "type": "clarification", "output": "Please specify the deployment name and the new strategy details."}
{"instruction": "Update deployment labels.", "type": "clarification", "output": "Please provide the deployment name and the labels to update."}
{"instruction": "Set deployment annotations.", "type": "clarification", "output": "Please specify the deployment name and the annotations to add."}
{"instruction": "Rollback a daemonset.", "type": "clarification", "output": "Please specify the daemonset name and the revision to rollback to."}
{"instruction": "List replica sets.", "type": "clarification", "output": "Would you like to list replica sets in a specific namespace?"}
{"instruction": "Describe a replica set.", "type": "clarification", "output": "Please provide the replica set name and its namespace."}
{"instruction": "Scale a replica set.", "type": "clarification", "output": "Please specify the replica set name and the desired replica count."}
{"instruction": "Delete a replica set.", "type": "clarification", "output": "Please provide the replica set name you want to delete."}
{"instruction": "Get replica set details.", "type": "clarification", "output": "Please provide the replica set name for further details."}
{"instruction": "Monitor deployment rollout status.", "type": "clarification", "output": "Please specify the deployment name to monitor its rollout status."}
{"instruction": "Update service annotations.", "type": "clarification", "output": "Please provide the service name and the annotations to update."}
{"instruction": "Expose a pod.", "type": "clarification", "output": "Please provide the pod name and the port details to expose."}
{"instruction": "Create a headless service.", "type": "clarification", "output": "Please provide the service name and the selector details."}
{"instruction": "Update ingress annotations.", "type": "clarification", "output": "Please provide the ingress name and the new annotations."}
{"instruction": "List ingress rules.", "type": "clarification", "output": "Would you like to list all ingress rules in a specific namespace?"}
{"instruction": "Describe an ingress controller.", "type": "clarification", "output": "Please provide the ingress controller name for details."}
{"instruction": "Set ingress TLS configuration.", "type": "clarification", "output": "Please specify the ingress name and the TLS details."}
{"instruction": "Patch an ingress rule.", "type": "clarification", "output": "Please provide the ingress name and the patch details for the rule."}
{"instruction": "Display cluster roles.", "type": "clarification", "output": "Would you like to list all cluster roles?"}
{"instruction": "Describe a cluster role.", "type": "clarification", "output": "Please provide the cluster role name to get detailed information."}
{"instruction": "Update cluster role bindings.", "type": "clarification", "output": "Please specify the cluster role binding name and the subjects to update."}
{"instruction": "Create a role binding.", "type": "clarification", "output": "Please provide the role name, subject, and a binding name for the role binding."}
{"instruction": "Delete a role binding.", "type": "clarification", "output": "Please specify the role binding name you want to delete."}
{"instruction": "List role bindings.", "type": "clarification", "output": "Would you like to list role bindings in a specific namespace?"}
{"instruction": "Update pod security policy.", "type": "clarification", "output": "Please provide the pod security policy name and the desired modifications."}
{"instruction": "Create a pod security policy.", "type": "clarification", "output": "Please provide the name and specifications for the new pod security policy."}
{"instruction": "Delete a pod security policy.", "type": "clarification", "output": "Please specify the pod security policy name to delete."}
{"instruction": "List pod security policies.", "type": "clarification", "output": "Would you like to list all pod security policies?"}
{"instruction": "Export pod logs to a file.", "type": "clarification", "output": "Please specify the pod name, namespace, and file path for exporting logs."}
{"instruction": "Stream pod logs.", "type": "clarification", "output": "Please provide the pod name and container (if applicable) to stream logs."}
{"instruction": "Tail pod logs.", "type": "clarification", "output": "Please provide the pod name and the number of log lines to tail."}
{"instruction": "Describe a StatefulSet.", "type": "clarification", "output": "Please provide the StatefulSet name and its namespace."}
{"instruction": "List StatefulSets.", "type": "clarification", "output": "Would you like to list StatefulSets in a specific namespace?"}
{"instruction": "Update StatefulSet strategy.", "type": "clarification", "output": "Please provide the StatefulSet name and the new update strategy."}
{"instruction": "Create a StatefulSet.", "type": "clarification", "output": "Please provide the StatefulSet name, image, and replica count."}
{"instruction": "Delete a StatefulSet.", "type": "clarification", "output": "Please specify the StatefulSet name to delete."}
{"instruction": "Update StatefulSet volume claim.", "type": "clarification", "output": "Please provide the StatefulSet name and the volume claim modifications."}
{"instruction": "Patch a pod.", "type": "clarification", "output": "Please provide the pod name and the patch data."}
{"instruction": "Annotate a pod.", "type": "clarification", "output": "Please provide the pod name and the annotation key-value pair to add."}
{"instruction": "Remove node label.", "type": "clarification", "output": "Please provide the node name and the label key you wish to remove."}
{"instruction": "List nodes.", "type": "clarification", "output": "Would you like to list all nodes or filter by a specific label?"}
{"instruction": "Describe a node.", "type": "clarification", "output": "Please provide the node name to retrieve detailed information."}
{"instruction": "Update node taints.", "type": "clarification", "output": "Please specify the node name and the taint changes."}
{"instruction": "Remove node taint.", "type": "clarification", "output": "Please provide the node name and the taint key to remove."}
{"instruction": "Create a custom resource definition.", "type": "clarification", "output": "Please provide the CRD name and its full specification."}
{"instruction": "Delete a custom resource definition.", "type": "clarification", "output": "Please specify the CRD name to delete."}
{"instruction": "List custom resource definitions.", "type": "clarification", "output": "Would you like to list all custom resource definitions (CRDs)?"}
{"instruction": "Describe a custom resource definition.", "type": "clarification", "output": "Please provide the CRD name for further details."}
{"instruction": "Apply a label selector.", "type": "clarification", "output": "Please specify the label key-value pair to filter the resources."}
{"instruction": "Export deployment YAML.", "type": "clarification", "output": "Please provide the deployment name to export its YAML configuration."}
{"instruction": "Import deployment YAML.", "type": "clarification", "output": "Please provide the file path for the deployment YAML to apply."}
{"instruction": "Convert YAML to JSON for resource.", "type": "clarification", "output": "Please provide the YAML file and resource type for conversion."}
{"instruction": "Update container ports.", "type": "clarification", "output": "Please specify the deployment name, container name, and the new port configuration."}
{"instruction": "Set readiness probe.", "type": "clarification", "output": "Please provide the pod or deployment name and the readiness probe settings."}
{"instruction": "Set liveness probe.", "type": "clarification", "output": "Please specify the pod or deployment name and the liveness probe settings."}
{"instruction": "Remove readiness probe.", "type": "clarification", "output": "Please provide the pod or deployment name to remove the readiness probe."}
{"instruction": "Remove liveness probe.", "type": "clarification", "output": "Please specify the pod or deployment name to remove the liveness probe."}
{"instruction": "Configure pod affinity.", "type": "clarification", "output": "Please provide the pod name and the desired affinity rules."}
{"instruction": "Configure pod anti-affinity.", "type": "clarification", "output": "Please specify the pod name and the anti-affinity rules."}
{"instruction": "Update service selectors.", "type": "clarification", "output": "Please provide the service name and the new selector labels."}
{"instruction": "Switch service port.", "type": "clarification", "output": "Please specify the service name and the new port configuration."}
{"instruction": "Update deployment strategy parameters.", "type": "clarification", "output": "Please provide the deployment name and the strategy parameters to update."}
{"instruction": "List events by type.", "type": "clarification", "output": "Please specify the event type (e.g., Warning or Normal) and the namespace if applicable."}
{"instruction": "Monitor real-time events.", "type": "clarification", "output": "Would you like to stream events from a specific namespace?"}
{"instruction": "Audit cluster events.", "type": "clarification", "output": "Please provide the time range and event type for the audit."}
{"instruction": "Create a backup of resource definitions.", "type": "clarification", "output": "Please specify the resource types and the output file location for backup."}
{"instruction": "Restore resource definitions.", "type": "clarification", "output": "Please provide the backup file and the resource type to restore."}
{"instruction": "List available API versions.", "type": "clarification", "output": "Would you like to list all API versions available in the cluster?"}
{"instruction": "Check API resource availability.", "type": "clarification", "output": "Please specify the resource type to check its availability."}
{"instruction": "Query resource in a namespace.", "type": "clarification", "output": "Please provide the resource type and the namespace to query."}
{"instruction": "Set resource limits for deployment.", "type": "clarification", "output": "Please specify the deployment name and the new resource limits."}
{"instruction": "Remove resource limits from container.", "type": "clarification", "output": "Please provide the deployment name and the container name to remove limits."}
{"instruction": "Update persistent volume configuration.", "type": "clarification", "output": "Please specify the persistent volume name and the new configuration parameters."}
{"instruction": "Create a persistent volume claim.", "type": "clarification", "output": "Please provide the PVC name, storage class, and size."}
{"instruction": "Delete a persistent volume claim.", "type": "clarification", "output": "Please specify the PVC name and its namespace to delete."}
{"instruction": "List persistent volume claims.", "type": "clarification", "output": "Would you like to list PVCs in a specific namespace?"}
{"instruction": "Describe a persistent volume.", "type": "clarification", "output": "Please provide the persistent volume name for details."}
{"instruction": "Update persistent volume reclaim policy.", "type": "clarification", "output": "Please specify the persistent volume name and the new reclaim policy."}
{"instruction": "Create a backup job.", "type": "clarification", "output": "Please provide the backup job name and its specifications."}
{"instruction": "Delete a backup job.", "type": "clarification", "output": "Please specify the backup job name you wish to delete."}
{"instruction": "List backup jobs.", "type": "clarification", "output": "Would you like to list backup jobs in a specific namespace?"}
{"instruction": "Describe a backup job.", "type": "clarification", "output": "Please provide the backup job name for further details."}
{"instruction": "Schedule a cron job.", "type": "clarification", "output": "Please provide the CronJob name, schedule, and job template details."}
{"instruction": "Delete a scheduled cron job.", "type": "clarification", "output": "Please specify the CronJob name you wish to delete."}
{"instruction": "List scheduled cron jobs.", "type": "clarification", "output": "Would you like to list cron jobs in a specific namespace?"}
{"instruction": "Describe a cron job schedule.", "type": "clarification", "output": "Please provide the CronJob name to see its schedule details."}
{"instruction": "Suspend a backup job.", "type": "clarification", "output": "Please specify the backup job name to suspend."}
{"instruction": "Resume a backup job.", "type": "clarification", "output": "Please specify the backup job name to resume."}
{"instruction": "Trigger a manual job run.", "type": "clarification", "output": "Please provide the job name to trigger a manual run."}
{"instruction": "List manual job triggers.", "type": "clarification", "output": "Would you like to list manual triggers for a specific job?"}
{"instruction": "Monitor job execution.", "type": "clarification", "output": "Please provide the job name to monitor its execution status."}
{"instruction": "Query job completion status.", "type": "clarification", "output": "Please specify the job name to check its completion status."}
{"instruction": "Set job restart policy.", "type": "clarification", "output": "Please provide the job name and the desired restart policy."}
{"instruction": "Update container image pull policy.", "type": "clarification", "output": "Please specify the deployment name, container name, and the new pull policy."}
{"instruction": "List container images.", "type": "clarification", "output": "Would you like to list images used in a specific namespace?"}
{"instruction": "Describe container runtime version.", "type": "clarification", "output": "Please specify the node name to get the container runtime version details."}
{"instruction": "Update node kernel parameters.", "type": "clarification", "output": "Please provide the node name and the kernel parameter modifications."}
{"instruction": "Reboot a node.", "type": "clarification", "output": "Please specify the node name and confirm if you wish to initiate a reboot."}
{"instruction": "Drain a node gracefully.", "type": "clarification", "output": "Please provide the node name and the grace period for draining."}
{"instruction": "List available storage plugins.", "type": "clarification", "output": "Would you like to list storage plugins available in the cluster?"}
{"instruction": "Describe a storage plugin.", "type": "clarification", "output": "Please provide the storage plugin name for further details."}
{"instruction": "Update storage class parameters.", "type": "clarification", "output": "Please specify the storage class name and the new parameters."}
{"instruction": "Create a new storage class.", "type": "clarification", "output": "Please provide the storage class name, provisioner, and parameters."}
{"instruction": "Delete a storage class.", "type": "clarification", "output": "Please specify the storage class name to delete."}
{"instruction": "List volume snapshots.", "type": "clarification", "output": "Would you like to list volume snapshots in a specific namespace?"}
{"instruction": "Create a volume snapshot.", "type": "clarification", "output": "Please provide the volume snapshot name and the source PVC."}
{"instruction": "Delete a volume snapshot.", "type": "clarification", "output": "Please specify the volume snapshot name to delete."}
{"instruction": "Describe a volume snapshot.", "type": "clarification", "output": "Please provide the volume snapshot name for details."}
{"instruction": "List volume snapshot classes.", "type": "clarification", "output": "Would you like to list all volume snapshot classes?"}
{"instruction": "Create a volume snapshot class.", "type": "clarification", "output": "Please provide the snapshot class name and the provisioner details."}
{"instruction": "Delete a volume snapshot class.", "type": "clarification", "output": "Please specify the snapshot class name to delete."}
{"instruction": "Monitor container restart count.", "type": "clarification", "output": "Please provide the pod name to monitor its restart count."}
{"instruction": "Update cluster DNS settings.", "type": "clarification", "output": "Please provide the new DNS settings for the cluster."}
{"instruction": "Get cluster version info.", "type": "clarification", "output": "Would you like to retrieve the current cluster version information?"}
{"instruction": "List cluster nodes by label.", "type": "clarification", "output": "Please specify the label to filter nodes by."}
{"instruction": "Describe cluster network policies.", "type": "clarification", "output": "Please provide the network policy name and its namespace."}
{"instruction": "Create a network policy.", "type": "clarification", "output": "Please provide the network policy name, namespace, and specifications."}
{"instruction": "Delete a network policy.", "type": "clarification", "output": "Please specify the network policy name you wish to delete."}
{"instruction": "List network policies.", "type": "clarification", "output": "Would you like to list network policies in a specific namespace?"}
{"instruction": "Update network policy rules.", "type": "clarification", "output": "Please provide the network policy name and the updated rules."}
{"instruction": "Apply a security context to pod.", "type": "clarification", "output": "Please provide the pod name and the security context details."}
{"instruction": "Remove security context from pod.", "type": "clarification", "output": "Please specify the pod name to remove its security context."}
{"instruction": "List API services.", "type": "clarification", "output": "Would you like to list the API services available in the cluster?"}
{"instruction": "Describe an API service.", "type": "clarification", "output": "Please provide the API service name for detailed information."}
{"instruction": "Update API service endpoint.", "type": "clarification", "output": "Please specify the API service name and the new endpoint details."}
{"instruction": "List admission controllers.", "type": "clarification", "output": "Would you like to list all active admission controllers?"}
{"instruction": "Describe an admission controller.", "type": "clarification", "output": "Please provide the admission controller name for more details."}
{"instruction": "Update admission controller configuration.", "type": "clarification", "output": "Please provide the admission controller name and the new configuration."}
{"instruction": "Create a role.", "type": "clarification", "output": "Please provide the role name, its namespace, and the permissions."}
{"instruction": "Delete a role.", "type": "clarification", "output": "Please specify the role name and namespace to delete."}
{"instruction": "List roles by label.", "type": "clarification", "output": "Would you like to filter roles by a specific label in a namespace?"}
{"instruction": "Update role permissions.", "type": "clarification", "output": "Please provide the role name and the updated permissions."}
{"instruction": "Bind a ClusterRole to a user.", "type": "clarification", "output": "Please specify the ClusterRole name and the user to bind."}
{"instruction": "Unbind a ClusterRole.", "type": "clarification", "output": "Please provide the ClusterRole binding name to remove."}
{"instruction": "List service accounts by label.", "type": "clarification", "output": "Would you like to filter service accounts by a specific label?"}
{"instruction": "Update service account secrets.", "type": "clarification", "output": "Please provide the service account name and the secret modifications."}
{"instruction": "Create a new user token.", "type": "clarification", "output": "Please provide the user name and the token expiration details."}
{"instruction": "Revoke a user token.", "type": "clarification", "output": "Please specify the token identifier you wish to revoke."}
{"instruction": "List user tokens.", "type": "clarification", "output": "Would you like to list tokens for a specific user?"}
{"instruction": "Update API access policies.", "type": "clarification", "output": "Please provide the policy name and the updated access rules."}
{"instruction": "Create an API access policy.", "type": "clarification", "output": "Please provide the policy name and the access parameters."}
{"instruction": "Delete an API access policy.", "type": "clarification", "output": "Please specify the API access policy name to delete."}
{"instruction": "Describe an API access policy.", "type": "clarification", "output": "Please provide the API access policy name for details."}
{"instruction": "Monitor cluster CPU usage.", "type": "clarification", "output": "Would you like to see CPU usage for nodes or pods?"}
{"instruction": "Monitor cluster memory usage.", "type": "clarification", "output": "Please specify if you want memory usage details for nodes or pods."}
{"instruction": "Set cluster logging level.", "type": "clarification", "output": "Please provide the desired logging level and the target component."}
{"instruction": "Update audit log configuration.", "type": "clarification", "output": "Please specify the audit log configuration parameters or file."}
{"instruction": "Create a custom dashboard.", "type": "clarification", "output": "Please provide the dashboard name and the metrics to display."}
{"instruction": "Delete a custom dashboard.", "type": "clarification", "output": "Please specify the dashboard name you wish to delete."}
{"instruction": "List available dashboards.", "type": "clarification", "output": "Would you like to list all custom dashboards?"}
{"instruction": "Describe a custom dashboard.", "type": "clarification", "output": "Please provide the dashboard name for further details."}
{"instruction": "Update metrics server configuration.", "type": "clarification", "output": "Please provide the metrics server name and the configuration changes."}
{"instruction": "Restart metrics server.", "type": "clarification", "output": "Please specify the metrics server name to restart."}
{"instruction": "List scheduled maintenance windows.", "type": "clarification", "output": "Would you like to list maintenance windows for the cluster?"}
{"instruction": "Create a maintenance window.", "type": "clarification", "output": "Please provide the maintenance window name, start time, and duration."}
{"instruction": "Delete a maintenance window.", "type": "clarification", "output": "Please specify the maintenance window name to delete."}
{"instruction": "Update maintenance window schedule.", "type": "clarification", "output": "Please provide the maintenance window name and the new schedule details."}
{"instruction": "Query etcd cluster health.", "type": "clarification", "output": "Would you like to query the health of etcd nodes?"}
{"instruction": "Backup etcd cluster.", "type": "clarification", "output": "Please provide the backup location and the etcd cluster details."}
{"instruction": "Restore etcd cluster.", "type": "clarification", "output": "Please specify the backup file and the restore parameters for etcd."}
{"instruction": "List Kubernetes add-ons.", "type": "clarification", "output": "Would you like to list installed add-ons in the cluster?"}
{"instruction": "Describe a Kubernetes add-on.", "type": "clarification", "output": "Please provide the add-on name for more details."}
{"instruction": "Update Kubernetes add-on configuration.", "type": "clarification", "output": "Please provide the add-on name and the configuration changes."}
{"instruction": "Remove a Kubernetes add-on.", "type": "clarification", "output": "Please specify the add-on name you wish to remove."}
{"instruction": "List cluster API endpoints.", "type": "clarification", "output": "Would you like to list all API endpoints available in the cluster?"}
{"instruction": "Describe cluster network settings.", "type": "clarification", "output": "Please provide the network component name to retrieve details."}
{"instruction": "Update cluster node labels in bulk.", "type": "clarification", "output": "Please provide a list of node names and the label key-value pairs to update."}
{"instruction": "Generate cluster usage report.", "type": "clarification", "output": "Please specify the metrics and time range for the usage report."}
{"instruction": "Enable pod autoscaling.", "type": "clarification", "output": "Please specify the pod or deployment name and the autoscaling parameters (min/max replicas, CPU thresholds)."}
{"instruction": "Disable pod autoscaling.", "type": "clarification", "output": "Please provide the pod or deployment name for which you want to disable autoscaling."}
{"instruction": "Set autoscaling parameters.", "type": "clarification", "output": "Please provide the resource name and the new autoscaling parameters such as minimum and maximum replicas."}
{"instruction": "Update HPA configuration.", "type": "clarification", "output": "Please specify the Horizontal Pod Autoscaler name and the configuration details to update."}
{"instruction": "Monitor HPA status.", "type": "clarification", "output": "Please provide the HPA name to retrieve its current status and metrics."}
{"instruction": "Enable cluster autoscaling.", "type": "clarification", "output": "Please provide the cluster name and the autoscaling settings you wish to enable."}
{"instruction": "Disable cluster autoscaling.", "type": "clarification", "output": "Please specify the cluster for which you want to disable autoscaling."}
{"instruction": "Configure kube-proxy.", "type": "clarification", "output": "Please provide the desired kube-proxy configuration settings or file."}
{"instruction": "Update kubelet configuration.", "type": "clarification", "output": "Please specify the node name and the kubelet configuration parameters you wish to update."}
{"instruction": "Set container restart policy.", "type": "clarification", "output": "Please provide the pod or container identifier and the new restart policy (Always, OnFailure, or Never)."}
{"instruction": "Enable container security context.", "type": "clarification", "output": "Please specify the pod name and the security context details to enable."}
{"instruction": "Disable container security context.", "type": "clarification", "output": "Please provide the pod name for which you want to disable the security context."}
{"instruction": "Configure pod resource requests.", "type": "clarification", "output": "Please provide the pod or deployment name and the desired CPU/memory request values."}
{"instruction": "Configure pod resource limits.", "type": "clarification", "output": "Please specify the pod or deployment name and the new CPU/memory limit values."}
{"instruction": "Enable image pull secrets.", "type": "clarification", "output": "Please provide the pod name and the image pull secret details you want to enable."}
{"instruction": "Update image pull secret.", "type": "clarification", "output": "Please specify the secret name and the updated credentials for image pulls."}
{"instruction": "Add node affinity rules.", "type": "clarification", "output": "Please provide the pod or deployment name and the node affinity rules (key-value pairs and operators)."}
{"instruction": "Remove node affinity rules.", "type": "clarification", "output": "Please specify the pod or deployment name from which you want to remove the node affinity rules."}
{"instruction": "Update cluster role rules.", "type": "clarification", "output": "Please provide the cluster role name and the new set of rules to update."}
{"instruction": "Enable log aggregation.", "type": "clarification", "output": "Please specify the logging aggregator (e.g., Fluentd, Logstash) and its configuration details."}
{"instruction": "Disable log aggregation.", "type": "clarification", "output": "Please provide the name of the log aggregation service you wish to disable."}
{"instruction": "Set log retention policy.", "type": "clarification", "output": "Please specify the log source and the retention period you want to apply."}
{"instruction": "Configure Fluentd settings.", "type": "clarification", "output": "Please provide the Fluentd configuration file path or the specific settings you wish to update."}
{"instruction": "Configure Prometheus scraping.", "type": "clarification", "output": "Please specify the target endpoint and the scrape interval for Prometheus."}
{"instruction": "Enable metrics collection.", "type": "clarification", "output": "Please provide the resource type (pod/node) and the metrics you wish to collect."}
{"instruction": "Disable metrics collection.", "type": "clarification", "output": "Please specify which metrics collection (e.g., node, pod, custom) you want to disable."}
{"instruction": "Set alerting thresholds.", "type": "clarification", "output": "Please provide the metric name and the threshold values to trigger alerts."}
{"instruction": "Configure alert manager.", "type": "clarification", "output": "Please specify the alert manager configuration file or the parameters to update."}
{"instruction": "Update service monitor configuration.", "type": "clarification", "output": "Please provide the service monitor name and the new configuration details."}
{"instruction": "Enable container networking interface.", "type": "clarification", "output": "Please specify the CNI plugin and any additional settings to enable."}
{"instruction": "Disable container networking interface.", "type": "clarification", "output": "Please provide the CNI plugin name you wish to disable."}
{"instruction": "Configure CNI plugin.", "type": "clarification", "output": "Please specify the CNI plugin type and configuration details."}
{"instruction": "Update CNI plugin settings.", "type": "clarification", "output": "Please provide the CNI plugin name and the settings you wish to modify."}
{"instruction": "Set network plugin logging.", "type": "clarification", "output": "Please specify the network plugin and the desired logging level."}
{"instruction": "Enable IP forwarding on node.", "type": "clarification", "output": "Please provide the node name and confirm that you wish to enable IP forwarding."}
{"instruction": "Disable IP forwarding on node.", "type": "clarification", "output": "Please specify the node name where IP forwarding should be disabled."}
{"instruction": "Check pod network connectivity.", "type": "clarification", "output": "Please provide the pod name and any specific network endpoints to test connectivity."}
{"instruction": "Test service endpoint connectivity.", "type": "clarification", "output": "Please provide the service name and the endpoint details to run connectivity tests."}
{"instruction": "Enable pod preemption.", "type": "clarification", "output": "Please specify the pod or priority class for which you want to enable preemption."}
{"instruction": "Disable pod preemption.", "type": "clarification", "output": "Please provide the pod or priority class name to disable preemption."}
{"instruction": "Set pod priority.", "type": "clarification", "output": "Please provide the pod name and the priority value to set."}
{"instruction": "Update pod priority class.", "type": "clarification", "output": "Please specify the priority class name and the new priority settings."}
{"instruction": "List pod priority classes.", "type": "clarification", "output": "Would you like to list all available pod priority classes in the cluster?"}
{"instruction": "Describe a pod priority class.", "type": "clarification", "output": "Please provide the name of the pod priority class you want to describe."}
{"instruction": "Create a new pod priority class.", "type": "clarification", "output": "Please specify the name and the priority value for the new pod priority class."}
{"instruction": "Delete a pod priority class.", "type": "clarification", "output": "Please provide the name of the pod priority class you wish to delete."}
{"instruction": "Enable service mesh.", "type": "clarification", "output": "Please provide the service mesh name (e.g., Istio, Linkerd) and any specific configurations."}
{"instruction": "Disable service mesh.", "type": "clarification", "output": "Please specify the service mesh you want to disable."}
{"instruction": "Configure Istio gateway.", "type": "clarification", "output": "Please provide the gateway name and the configuration details for Istio."}
{"instruction": "Update Istio virtual service.", "type": "clarification", "output": "Please specify the virtual service name and the new routing rules."}
{"instruction": "Enable sidecar injection.", "type": "clarification", "output": "Please provide the namespace or pod label selector for enabling sidecar injection."}
{"instruction": "Disable sidecar injection.", "type": "clarification", "output": "Please specify the namespace or pod for which sidecar injection should be disabled."}
{"instruction": "List sidecar proxies.", "type": "clarification", "output": "Would you like to list all sidecar proxies or filter by a specific label?"}
{"instruction": "Describe sidecar status.", "type": "clarification", "output": "Please provide the pod name to view its sidecar proxy status."}
{"instruction": "Configure Linkerd settings.", "type": "clarification", "output": "Please provide the Linkerd configuration file or the specific settings to modify."}
{"instruction": "Update service mesh policies.", "type": "clarification", "output": "Please specify the service mesh policy name and the updated rules."}
{"instruction": "Set ingress controller rules.", "type": "clarification", "output": "Please provide the ingress controller name and the new rules to apply."}
{"instruction": "Update ingress controller settings.", "type": "clarification", "output": "Please specify the ingress controller and the settings you wish to update."}
{"instruction": "Configure load balancer health check.", "type": "clarification", "output": "Please provide the load balancer name and the health check parameters."}
{"instruction": "Update load balancer configuration.", "type": "clarification", "output": "Please specify the load balancer and the new configuration settings."}
{"instruction": "Enable session affinity.", "type": "clarification", "output": "Please provide the service name and the session affinity configuration details."}
{"instruction": "Disable session affinity.", "type": "clarification", "output": "Please specify the service for which you want to disable session affinity."}
{"instruction": "Set service external IPs.", "type": "clarification", "output": "Please provide the service name and the external IP addresses to assign."}
{"instruction": "Update service external traffic policy.", "type": "clarification", "output": "Please specify the service name and the new external traffic policy."}
{"instruction": "Enable DNS caching.", "type": "clarification", "output": "Please provide the DNS server or pod details to enable caching."}
{"instruction": "Disable DNS caching.", "type": "clarification", "output": "Please specify the DNS caching service or configuration to disable."}
{"instruction": "Configure CoreDNS settings.", "type": "clarification", "output": "Please provide the CoreDNS ConfigMap or the settings you wish to modify."}
{"instruction": "Update CoreDNS ConfigMap.", "type": "clarification", "output": "Please specify the namespace and the changes you want to apply to the CoreDNS ConfigMap."}
{"instruction": "Set DNS forwarding rules.", "type": "clarification", "output": "Please provide the DNS server and the forwarding rules to configure."}
{"instruction": "Configure cluster DNS policy.", "type": "clarification", "output": "Please specify the cluster or pod and the desired DNS policy settings."}
{"instruction": "Update kube-dns deployment.", "type": "clarification", "output": "Please provide the kube-dns deployment name and the updates to apply."}
{"instruction": "Enable container logging driver.", "type": "clarification", "output": "Please specify the container runtime and the logging driver you wish to enable."}
{"instruction": "Disable container logging driver.", "type": "clarification", "output": "Please provide the container identifier and the logging driver to disable."}
{"instruction": "Configure container log rotation.", "type": "clarification", "output": "Please specify the container name and the log rotation parameters."}
{"instruction": "Update container log path.", "type": "clarification", "output": "Please provide the container name and the new log file path."}
{"instruction": "Set container stdout logging.", "type": "clarification", "output": "Please specify the container and any formatting options for stdout logging."}
{"instruction": "Set container stderr logging.", "type": "clarification", "output": "Please provide the container and the configuration for stderr logging."}
{"instruction": "Enable runtime class for containers.", "type": "clarification", "output": "Please specify the runtime class name and the applicable containers or pods."}
{"instruction": "Disable runtime class for containers.", "type": "clarification", "output": "Please provide the runtime class name and confirm the containers to update."}
{"instruction": "Configure runtime class parameters.", "type": "clarification", "output": "Please specify the runtime class and the parameters you wish to configure."}
{"instruction": "Update container sandbox settings.", "type": "clarification", "output": "Please provide the container name and the new sandbox settings."}
{"instruction": "Set pod security standards.", "type": "clarification", "output": "Please specify the pod or namespace and the security standards to enforce."}
{"instruction": "Update pod security policies.", "type": "clarification", "output": "Please provide the name of the security policy and the changes to apply."}
{"instruction": "Enable SELinux on node.", "type": "clarification", "output": "Please specify the node name and confirm that you wish to enable SELinux."}
{"instruction": "Disable SELinux on node.", "type": "clarification", "output": "Please provide the node name where SELinux should be disabled."}
{"instruction": "Configure AppArmor profile.", "type": "clarification", "output": "Please specify the pod or container name and the AppArmor profile details."}
{"instruction": "Update AppArmor annotations.", "type": "clarification", "output": "Please provide the pod name and the new AppArmor annotation values."}
{"instruction": "Set security audit policy.", "type": "clarification", "output": "Please provide the audit policy file or the parameters you wish to set."}
{"instruction": "Update audit policy configuration.", "type": "clarification", "output": "Please specify the audit policy name and the configuration updates."}
{"instruction": "Enable audit logging.", "type": "clarification", "output": "Please provide the API server or component name for which audit logging should be enabled."}
{"instruction": "Disable audit logging.", "type": "clarification", "output": "Please specify the component or API server for which you wish to disable audit logging."}
{"instruction": "Configure audit log retention.", "type": "clarification", "output": "Please provide the retention period and the audit log file or location."}
{"instruction": "Set admission webhook configuration.", "type": "clarification", "output": "Please specify the webhook name and the configuration details (URL, timeout, etc.)."}
{"instruction": "Update admission webhook certificate.", "type": "clarification", "output": "Please provide the webhook name and the new certificate file or details."}
{"instruction": "Enable validating webhook.", "type": "clarification", "output": "Please specify the webhook configuration name and confirm enabling validation."}
{"instruction": "Disable validating webhook.", "type": "clarification", "output": "Please provide the webhook configuration name to disable."}
{"instruction": "Configure mutating webhook.", "type": "clarification", "output": "Please specify the mutating webhook name and the configuration parameters to set."}
{"instruction": "Update mutating webhook settings.", "type": "clarification", "output": "Please provide the webhook name and the new settings to update."}
{"instruction": "Set webhook timeout settings.", "type": "clarification", "output": "Please specify the webhook name and the desired timeout value."}
{"instruction": "Configure cluster external authentication.", "type": "clarification", "output": "Please provide the external authentication method (OIDC, LDAP, etc.) and its parameters."}
{"instruction": "Update OIDC provider settings.", "type": "clarification", "output": "Please specify the OIDC provider name and the new configuration details."}
{"instruction": "Set RBAC authorization mode.", "type": "clarification", "output": "Please provide the desired RBAC mode and any additional configuration details."}
{"instruction": "Update ABAC policy file.", "type": "clarification", "output": "Please specify the ABAC policy file path and the modifications to apply."}
{"instruction": "Enable service account tokens.", "type": "clarification", "output": "Please provide the service account name and confirm enabling token issuance."}
{"instruction": "Disable service account tokens.", "type": "clarification", "output": "Please specify the service account name for which you want to disable token issuance."}
{"instruction": "Configure token expiration.", "type": "clarification", "output": "Please provide the service account or user name and the token expiration time."}
{"instruction": "Update token signing key.", "type": "clarification", "output": "Please provide the new signing key details and the affected tokens."}
{"instruction": "Set API server audit log path.", "type": "clarification", "output": "Please provide the API server name and the file path for audit logs."}
{"instruction": "Configure API server flags.", "type": "clarification", "output": "Please specify the API server flag(s) you wish to update and their new values."}
{"instruction": "Update API server admission controllers.", "type": "clarification", "output": "Please provide the list of admission controllers and any changes to their order or settings."}
{"instruction": "Set API server secure port.", "type": "clarification", "output": "Please provide the desired secure port number and the API server name."}
{"instruction": "Configure API server certificate.", "type": "clarification", "output": "Please specify the API server name and the certificate file or details."}
{"instruction": "Update scheduler configuration.", "type": "clarification", "output": "Please provide the scheduler configuration file and the changes to apply."}
{"instruction": "Enable scheduler extender.", "type": "clarification", "output": "Please specify the scheduler extender name and its endpoint details."}
{"instruction": "Disable scheduler extender.", "type": "clarification", "output": "Please provide the scheduler extender name that you wish to disable."}
{"instruction": "Set scheduler policy configuration.", "type": "clarification", "output": "Please provide the scheduler policy file and any modifications needed."}
{"instruction": "Update scheduler priorities.", "type": "clarification", "output": "Please specify the scheduler name and the new priority settings for pods."}
{"instruction": "Configure custom scheduler.", "type": "clarification", "output": "Please provide the custom scheduler name and its configuration file or parameters."}
{"instruction": "Set scheduler leader election.", "type": "clarification", "output": "Please specify the scheduler and the leader election timeout and settings."}
{"instruction": "Update scheduler resource allocation.", "type": "clarification", "output": "Please provide the scheduler name and the new resource allocation details."}
{"instruction": "Enable etcd TLS encryption.", "type": "clarification", "output": "Please specify the etcd cluster name and the TLS certificate details."}
{"instruction": "Disable etcd TLS encryption.", "type": "clarification", "output": "Please provide the etcd cluster name for which TLS encryption should be disabled."}
{"instruction": "Configure etcd snapshot settings.", "type": "clarification", "output": "Please specify the etcd cluster name and the snapshot frequency and retention settings."}
{"instruction": "Update etcd compaction settings.", "type": "clarification", "output": "Please provide the etcd cluster name and the new compaction interval."}
{"instruction": "Set etcd cluster member status.", "type": "clarification", "output": "Please specify the etcd member name and the status information you wish to update."}
{"instruction": "Enable etcd authentication.", "type": "clarification", "output": "Please provide the etcd cluster name and the authentication parameters to enable."}
{"instruction": "Disable etcd authentication.", "type": "clarification", "output": "Please specify the etcd cluster name for which authentication should be disabled."}
{"instruction": "Configure etcd client certificate.", "type": "clarification", "output": "Please provide the etcd cluster name and the client certificate details to update."}
{"instruction": "Update etcd cluster configuration.", "type": "clarification", "output": "Please specify the etcd cluster and the configuration changes to apply."}
{"instruction": "Set etcd backup schedule.", "type": "clarification", "output": "Please provide the etcd cluster name and the desired backup schedule."}
{"instruction": "Configure etcd restore parameters.", "type": "clarification", "output": "Please specify the backup file and the restore parameters for the etcd cluster."}
{"instruction": "Update etcd log level.", "type": "clarification", "output": "Please provide the etcd cluster name and the new log verbosity level."}
{"instruction": "Set control plane endpoint.", "type": "clarification", "output": "Please specify the control plane component and the new endpoint details."}
{"instruction": "Configure control plane HA settings.", "type": "clarification", "output": "Please provide the control plane component and the high-availability settings to configure."}
{"instruction": "Update control plane load balancing.", "type": "clarification", "output": "Please specify the load balancer and the new configuration for distributing traffic."}
{"instruction": "Enable control plane monitoring.", "type": "clarification", "output": "Please provide the control plane component name and the monitoring parameters."}
{"instruction": "Disable control plane monitoring.", "type": "clarification", "output": "Please specify which control plane component's monitoring should be disabled."}
{"instruction": "Configure Kubernetes scheduler logs.", "type": "clarification", "output": "Please provide the scheduler log file path and the logging level to set."}
{"instruction": "Update controller manager configuration.", "type": "clarification", "output": "Please specify the controller manager name and the configuration changes to apply."}
{"instruction": "Set controller manager leader election.", "type": "clarification", "output": "Please provide the controller manager name and the new leader election settings."}
{"instruction": "Configure controller manager logging.", "type": "clarification", "output": "Please specify the logging level and the output destination for the controller manager."}
{"instruction": "Update controller manager flags.", "type": "clarification", "output": "Please provide the list of flags to update for the controller manager."}
{"instruction": "Enable feature gate for Alpha features.", "type": "clarification", "output": "Please specify which Alpha feature gate(s) you wish to enable."}
{"instruction": "Disable feature gate for Alpha features.", "type": "clarification", "output": "Please provide the name of the Alpha feature gate you wish to disable."}
{"instruction": "Set experimental feature flags.", "type": "clarification", "output": "Please specify the experimental feature flag(s) and their desired state."}
{"instruction": "Update feature gate configuration.", "type": "clarification", "output": "Please provide the API server or component name and the new feature gate settings."}
{"instruction": "Configure custom resource conversion.", "type": "clarification", "output": "Please provide the CRD name and the conversion webhook details to configure."}
{"instruction": "Update CRD conversion webhook.", "type": "clarification", "output": "Please specify the CRD name and the updated conversion webhook parameters."}
{"instruction": "Set CRD versioning policy.", "type": "clarification", "output": "Please provide the CRD name and the desired versioning policy."}
{"instruction": "Configure multiple CRD versions.", "type": "clarification", "output": "Please specify the CRD name and list all versions you wish to support."}
{"instruction": "Update CRD subresources.", "type": "clarification", "output": "Please provide the CRD name and the subresource modifications."}
{"instruction": "Set CRD schema validation.", "type": "clarification", "output": "Please provide the CRD name and the schema validation rules to enforce."}
{"instruction": "Configure backup for CRDs.", "type": "clarification", "output": "Please specify the CRD name and the backup schedule or parameters."}
{"instruction": "Update CRD stored versions.", "type": "clarification", "output": "Please provide the CRD name and the new list of stored versions."}
{"instruction": "Enable CRD additional printer columns.", "type": "clarification", "output": "Please specify the CRD name and the additional columns to display."}
{"instruction": "Disable CRD additional printer columns.", "type": "clarification", "output": "Please provide the CRD name for which you want to disable additional printer columns."}
{"instruction": "Set controller replica count.", "type": "clarification", "output": "Please provide the controller name and the new replica count."}
{"instruction": "Update controller replica set configuration.", "type": "clarification", "output": "Please specify the replica set name and the updated configuration details."}
{"instruction": "Configure deployment max surge.", "type": "clarification", "output": "Please provide the deployment name and the max surge value to set."}
{"instruction": "Update deployment max unavailable.", "type": "clarification", "output": "Please specify the deployment name and the new max unavailable value."}
{"instruction": "Set deployment revision history limit.", "type": "clarification", "output": "Please provide the deployment name and the desired revision history limit."}
{"instruction": "Configure deployment rollback strategy.", "type": "clarification", "output": "Please specify the deployment name and the rollback strategy details."}
{"instruction": "Update deployment termination grace period.", "type": "clarification", "output": "Please provide the deployment name and the new termination grace period value."}
{"instruction": "Set daemonset update strategy.", "type": "clarification", "output": "Please specify the daemonset name and the update strategy to apply."}
{"instruction": "Configure daemonset rolling update.", "type": "clarification", "output": "Please provide the daemonset name and the rolling update parameters."}
{"instruction": "Update daemonset max unavailable.", "type": "clarification", "output": "Please specify the daemonset name and the new max unavailable value."}
{"instruction": "Set job parallelism.", "type": "clarification", "output": "Please provide the job name and the desired parallelism value."}
{"instruction": "Configure job completions.", "type": "clarification", "output": "Please specify the job name and the required number of completions."}
{"instruction": "Update job active deadline seconds.", "type": "clarification", "output": "Please provide the job name and the new active deadline in seconds."}
{"instruction": "Set cronjob concurrency policy.", "type": "clarification", "output": "Please specify the cronjob name and the concurrency policy (Allow, Forbid, or Replace)."}
{"instruction": "Configure cronjob starting deadline.", "type": "clarification", "output": "Please provide the cronjob name and the new starting deadline seconds."}
{"instruction": "Update cronjob suspend status.", "type": "clarification", "output": "Please specify the cronjob name and whether it should be suspended or resumed."}
{"instruction": "Set persistent volume storage type.", "type": "clarification", "output": "Please provide the persistent volume name and the storage type (e.g., block, file)."}
{"instruction": "Configure persistent volume reclaim policy.", "type": "clarification", "output": "Please specify the persistent volume name and the new reclaim policy (Retain, Delete, or Recycle)."}
{"instruction": "Update persistent volume access modes.", "type": "clarification", "output": "Please provide the persistent volume name and the access modes to update."}
{"instruction": "Set PVC volume mode.", "type": "clarification", "output": "Please specify the PVC name and the desired volume mode (Filesystem or Block)."}
{"instruction": "Configure PVC storage request.", "type": "clarification", "output": "Please provide the PVC name and the new storage request value."}
{"instruction": "Update PVC storage class binding.", "type": "clarification", "output": "Please specify the PVC name and the storage class you want to bind it to."}
{"instruction": "Set configmap immutable flag.", "type": "clarification", "output": "Please provide the configmap name and confirm setting it as immutable."}
{"instruction": "Configure configmap binary data.", "type": "clarification", "output": "Please specify the configmap name and the binary data keys and values."}
{"instruction": "Update configmap reload strategy.", "type": "clarification", "output": "Please provide the configmap name and the new reload strategy details."}
{"instruction": "Set secret type.", "type": "clarification", "output": "Please specify the secret name and the type (Opaque, TLS, etc.) you wish to set."}
{"instruction": "Configure secret data encoding.", "type": "clarification", "output": "Please provide the secret name and the encoding method for its data."}
{"instruction": "Update secret immutable flag.", "type": "clarification", "output": "Please specify the secret name and confirm the update to its immutable flag."}
{"instruction": "Set namespace resource quota.", "type": "clarification", "output": "Please provide the namespace and the resource quota values to set."}
{"instruction": "Configure namespace limit range.", "type": "clarification", "output": "Please specify the namespace and the limit range parameters you wish to apply."}
{"instruction": "Update namespace annotations.", "type": "clarification", "output": "Please provide the namespace name and the annotation key-value pairs to update."}
{"instruction": "Set namespace finalizer.", "type": "clarification", "output": "Please specify the namespace and the finalizer name you want to add or remove."}
{"instruction": "Configure network namespace isolation.", "type": "clarification", "output": "Please provide the namespace and the isolation rules or policies to enforce."}
{"instruction": "Update network namespace policies.", "type": "clarification", "output": "Please specify the namespace and the network policy modifications."}
{"instruction": "Set service port protocol.", "type": "clarification", "output": "Please provide the service name and the protocol (TCP, UDP) for the port."}
{"instruction": "Configure service session stickiness.", "type": "clarification", "output": "Please specify the service name and the session stickiness settings to apply."}
{"instruction": "Update service headless configuration.", "type": "clarification", "output": "Please provide the service name and confirm the changes for a headless service."}
{"instruction": "Set endpoint subset strategy.", "type": "clarification", "output": "Please specify the service name and the strategy for managing endpoint subsets."}
{"instruction": "Configure pod DNS policy.", "type": "clarification", "output": "Please provide the pod name and the DNS policy you wish to configure."}
{"instruction": "Update pod host network settings.", "type": "clarification", "output": "Please specify the pod name and the changes required for host networking."}
{"instruction": "Set container privilege escalation.", "type": "clarification", "output": "Please provide the container name and confirm the desired privilege escalation setting."}
{"instruction": "Configure container read-only root filesystem.", "type": "clarification", "output": "Please specify the container name and whether to enable a read-only root filesystem."}
{"instruction": "Update container volume mounts.", "type": "clarification", "output": "Please provide the container name and the volume mount changes to update."}
{"instruction": "Set container working directory.", "type": "clarification", "output": "Please specify the container name and the new working directory path."}
